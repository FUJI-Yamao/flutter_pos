/*
 * (C)2023 TERAOKA SEIKO Co., Ltd./株式会社寺岡精工
 * CONFIDENTIAL/社外秘
 * 無断開示・無断複製禁止
 */
 
import 'package:flutter_pos/app/common/environment.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:flutter/services.dart' show rootBundle;
import 'package:flutter/cupertino.dart';
import 'package:path_provider/path_provider.dart';
import 'package:path_provider_platform_interface/path_provider_platform_interface.dart';
import 'package:path/path.dart';
import 'dart:io';
import 'unitTestParts.dart';

import '../../../../lib/app/common/cls_conf/configJsonFile.dart';
import '../../../../lib/app/common/cls_conf/qcashierJsonFile.dart';

late QcashierJsonFile qcashier;

void main(){
  qcashierJsonFile_test2();
}

void qcashierJsonFile_test2()
{
  TestWidgetsFlutterBinding.ensureInitialized();
  const String confPath = "conf/";
  const String testDir = "test_assets";
  const String fileName = "qcashier.json";
  const String section = "common";
  const String key = "item_disp";
  const defaultData = 1;
  const testData1  =  987654321;    // テストデータ1
  const testData1s = "987654321";
  const testData2  =  192834675;    // テストデータ2
  const testData2s = "192834675";
  const testData3  =  129834765;    // テストデータ3
  const testData3s = "129834765";

  group('QcashierJsonFile',()
  {
    setUp(() async{
      PathProviderPlatform.instance = MockPathProviderPlatform();
      // 当該JSONファイルをデフォルトに戻す。
      await QcashierJsonFile().setDefault();
    });

    // 各テストの事後処理
    tearDown(() async{
      // 当該JSONファイルをデフォルトに戻す。
      await QcashierJsonFile().setDefault();
    });

    test('01007_element_check_00984', () async {
      print("\n********** テスト実行：01007_element_check_00984 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.sound_led3;
      print(qcashier.screen23.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.sound_led3 = testData1;
      print(qcashier.screen23.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.sound_led3 = testData2;
      print(qcashier.screen23.sound_led3);
      expect(qcashier.screen23.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.sound_led3 = defalut;
      print(qcashier.screen23.sound_led3);
      expect(qcashier.screen23.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01007_element_check_00984 **********\n\n");
    });

    test('01008_element_check_00985', () async {
      print("\n********** テスト実行：01008_element_check_00985 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.title;
      print(qcashier.screen24.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.title = testData1s;
      print(qcashier.screen24.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.title = testData2s;
      print(qcashier.screen24.title);
      expect(qcashier.screen24.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.title = defalut;
      print(qcashier.screen24.title);
      expect(qcashier.screen24.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01008_element_check_00985 **********\n\n");
    });

    test('01009_element_check_00986', () async {
      print("\n********** テスト実行：01009_element_check_00986 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.msg1;
      print(qcashier.screen24.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.msg1 = testData1s;
      print(qcashier.screen24.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.msg1 = testData2s;
      print(qcashier.screen24.msg1);
      expect(qcashier.screen24.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.msg1 = defalut;
      print(qcashier.screen24.msg1);
      expect(qcashier.screen24.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01009_element_check_00986 **********\n\n");
    });

    test('01010_element_check_00987', () async {
      print("\n********** テスト実行：01010_element_check_00987 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.msg2;
      print(qcashier.screen24.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.msg2 = testData1s;
      print(qcashier.screen24.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.msg2 = testData2s;
      print(qcashier.screen24.msg2);
      expect(qcashier.screen24.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.msg2 = defalut;
      print(qcashier.screen24.msg2);
      expect(qcashier.screen24.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01010_element_check_00987 **********\n\n");
    });

    test('01011_element_check_00988', () async {
      print("\n********** テスト実行：01011_element_check_00988 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.msg1_size;
      print(qcashier.screen24.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.msg1_size = testData1;
      print(qcashier.screen24.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.msg1_size = testData2;
      print(qcashier.screen24.msg1_size);
      expect(qcashier.screen24.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.msg1_size = defalut;
      print(qcashier.screen24.msg1_size);
      expect(qcashier.screen24.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01011_element_check_00988 **********\n\n");
    });

    test('01012_element_check_00989', () async {
      print("\n********** テスト実行：01012_element_check_00989 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.msg2_size;
      print(qcashier.screen24.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.msg2_size = testData1;
      print(qcashier.screen24.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.msg2_size = testData2;
      print(qcashier.screen24.msg2_size);
      expect(qcashier.screen24.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.msg2_size = defalut;
      print(qcashier.screen24.msg2_size);
      expect(qcashier.screen24.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01012_element_check_00989 **********\n\n");
    });

    test('01013_element_check_00990', () async {
      print("\n********** テスト実行：01013_element_check_00990 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.sound1;
      print(qcashier.screen24.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.sound1 = testData1;
      print(qcashier.screen24.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.sound1 = testData2;
      print(qcashier.screen24.sound1);
      expect(qcashier.screen24.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.sound1 = defalut;
      print(qcashier.screen24.sound1);
      expect(qcashier.screen24.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01013_element_check_00990 **********\n\n");
    });

    test('01014_element_check_00991', () async {
      print("\n********** テスト実行：01014_element_check_00991 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.sound2;
      print(qcashier.screen24.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.sound2 = testData1;
      print(qcashier.screen24.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.sound2 = testData2;
      print(qcashier.screen24.sound2);
      expect(qcashier.screen24.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.sound2 = defalut;
      print(qcashier.screen24.sound2);
      expect(qcashier.screen24.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01014_element_check_00991 **********\n\n");
    });

    test('01015_element_check_00992', () async {
      print("\n********** テスト実行：01015_element_check_00992 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.sound3;
      print(qcashier.screen24.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.sound3 = testData1;
      print(qcashier.screen24.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.sound3 = testData2;
      print(qcashier.screen24.sound3);
      expect(qcashier.screen24.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.sound3 = defalut;
      print(qcashier.screen24.sound3);
      expect(qcashier.screen24.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01015_element_check_00992 **********\n\n");
    });

    test('01016_element_check_00993', () async {
      print("\n********** テスト実行：01016_element_check_00993 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.snd_timer;
      print(qcashier.screen24.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.snd_timer = testData1;
      print(qcashier.screen24.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.snd_timer = testData2;
      print(qcashier.screen24.snd_timer);
      expect(qcashier.screen24.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.snd_timer = defalut;
      print(qcashier.screen24.snd_timer);
      expect(qcashier.screen24.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01016_element_check_00993 **********\n\n");
    });

    test('01017_element_check_00994', () async {
      print("\n********** テスト実行：01017_element_check_00994 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.timer1;
      print(qcashier.screen24.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.timer1 = testData1;
      print(qcashier.screen24.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.timer1 = testData2;
      print(qcashier.screen24.timer1);
      expect(qcashier.screen24.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.timer1 = defalut;
      print(qcashier.screen24.timer1);
      expect(qcashier.screen24.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01017_element_check_00994 **********\n\n");
    });

    test('01018_element_check_00995', () async {
      print("\n********** テスト実行：01018_element_check_00995 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.timer2;
      print(qcashier.screen24.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.timer2 = testData1;
      print(qcashier.screen24.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.timer2 = testData2;
      print(qcashier.screen24.timer2);
      expect(qcashier.screen24.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.timer2 = defalut;
      print(qcashier.screen24.timer2);
      expect(qcashier.screen24.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01018_element_check_00995 **********\n\n");
    });

    test('01019_element_check_00996', () async {
      print("\n********** テスト実行：01019_element_check_00996 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.timer3;
      print(qcashier.screen24.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.timer3 = testData1;
      print(qcashier.screen24.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.timer3 = testData2;
      print(qcashier.screen24.timer3);
      expect(qcashier.screen24.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.timer3 = defalut;
      print(qcashier.screen24.timer3);
      expect(qcashier.screen24.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01019_element_check_00996 **********\n\n");
    });

    test('01020_element_check_00997', () async {
      print("\n********** テスト実行：01020_element_check_00997 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.dsp_flg1;
      print(qcashier.screen24.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.dsp_flg1 = testData1;
      print(qcashier.screen24.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.dsp_flg1 = testData2;
      print(qcashier.screen24.dsp_flg1);
      expect(qcashier.screen24.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.dsp_flg1 = defalut;
      print(qcashier.screen24.dsp_flg1);
      expect(qcashier.screen24.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01020_element_check_00997 **********\n\n");
    });

    test('01021_element_check_00998', () async {
      print("\n********** テスト実行：01021_element_check_00998 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.dsp_flg2;
      print(qcashier.screen24.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.dsp_flg2 = testData1;
      print(qcashier.screen24.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.dsp_flg2 = testData2;
      print(qcashier.screen24.dsp_flg2);
      expect(qcashier.screen24.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.dsp_flg2 = defalut;
      print(qcashier.screen24.dsp_flg2);
      expect(qcashier.screen24.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01021_element_check_00998 **********\n\n");
    });

    test('01022_element_check_00999', () async {
      print("\n********** テスト実行：01022_element_check_00999 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.movie01_ext;
      print(qcashier.screen24.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.movie01_ext = testData1;
      print(qcashier.screen24.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.movie01_ext = testData2;
      print(qcashier.screen24.movie01_ext);
      expect(qcashier.screen24.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.movie01_ext = defalut;
      print(qcashier.screen24.movie01_ext);
      expect(qcashier.screen24.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01022_element_check_00999 **********\n\n");
    });

    test('01023_element_check_01000', () async {
      print("\n********** テスト実行：01023_element_check_01000 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.movie02_ext;
      print(qcashier.screen24.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.movie02_ext = testData1;
      print(qcashier.screen24.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.movie02_ext = testData2;
      print(qcashier.screen24.movie02_ext);
      expect(qcashier.screen24.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.movie02_ext = defalut;
      print(qcashier.screen24.movie02_ext);
      expect(qcashier.screen24.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01023_element_check_01000 **********\n\n");
    });

    test('01024_element_check_01001', () async {
      print("\n********** テスト実行：01024_element_check_01001 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.movie03_ext;
      print(qcashier.screen24.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.movie03_ext = testData1;
      print(qcashier.screen24.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.movie03_ext = testData2;
      print(qcashier.screen24.movie03_ext);
      expect(qcashier.screen24.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.movie03_ext = defalut;
      print(qcashier.screen24.movie03_ext);
      expect(qcashier.screen24.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01024_element_check_01001 **********\n\n");
    });

    test('01025_element_check_01002', () async {
      print("\n********** テスト実行：01025_element_check_01002 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.movie04_ext;
      print(qcashier.screen24.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.movie04_ext = testData1;
      print(qcashier.screen24.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.movie04_ext = testData2;
      print(qcashier.screen24.movie04_ext);
      expect(qcashier.screen24.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.movie04_ext = defalut;
      print(qcashier.screen24.movie04_ext);
      expect(qcashier.screen24.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01025_element_check_01002 **********\n\n");
    });

    test('01026_element_check_01003', () async {
      print("\n********** テスト実行：01026_element_check_01003 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line_title;
      print(qcashier.screen24.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line_title = testData1s;
      print(qcashier.screen24.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line_title = testData2s;
      print(qcashier.screen24.line_title);
      expect(qcashier.screen24.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line_title = defalut;
      print(qcashier.screen24.line_title);
      expect(qcashier.screen24.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01026_element_check_01003 **********\n\n");
    });

    test('01027_element_check_01004', () async {
      print("\n********** テスト実行：01027_element_check_01004 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line_title_ex;
      print(qcashier.screen24.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line_title_ex = testData1s;
      print(qcashier.screen24.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line_title_ex = testData2s;
      print(qcashier.screen24.line_title_ex);
      expect(qcashier.screen24.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line_title_ex = defalut;
      print(qcashier.screen24.line_title_ex);
      expect(qcashier.screen24.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01027_element_check_01004 **********\n\n");
    });

    test('01028_element_check_01005', () async {
      print("\n********** テスト実行：01028_element_check_01005 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line1;
      print(qcashier.screen24.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line1 = testData1s;
      print(qcashier.screen24.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line1 = testData2s;
      print(qcashier.screen24.line1);
      expect(qcashier.screen24.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line1 = defalut;
      print(qcashier.screen24.line1);
      expect(qcashier.screen24.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01028_element_check_01005 **********\n\n");
    });

    test('01029_element_check_01006', () async {
      print("\n********** テスト実行：01029_element_check_01006 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line2;
      print(qcashier.screen24.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line2 = testData1s;
      print(qcashier.screen24.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line2 = testData2s;
      print(qcashier.screen24.line2);
      expect(qcashier.screen24.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line2 = defalut;
      print(qcashier.screen24.line2);
      expect(qcashier.screen24.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01029_element_check_01006 **********\n\n");
    });

    test('01030_element_check_01007', () async {
      print("\n********** テスト実行：01030_element_check_01007 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line3;
      print(qcashier.screen24.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line3 = testData1s;
      print(qcashier.screen24.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line3 = testData2s;
      print(qcashier.screen24.line3);
      expect(qcashier.screen24.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line3 = defalut;
      print(qcashier.screen24.line3);
      expect(qcashier.screen24.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01030_element_check_01007 **********\n\n");
    });

    test('01031_element_check_01008', () async {
      print("\n********** テスト実行：01031_element_check_01008 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line4;
      print(qcashier.screen24.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line4 = testData1s;
      print(qcashier.screen24.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line4 = testData2s;
      print(qcashier.screen24.line4);
      expect(qcashier.screen24.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line4 = defalut;
      print(qcashier.screen24.line4);
      expect(qcashier.screen24.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01031_element_check_01008 **********\n\n");
    });

    test('01032_element_check_01009', () async {
      print("\n********** テスト実行：01032_element_check_01009 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line1_ex;
      print(qcashier.screen24.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line1_ex = testData1s;
      print(qcashier.screen24.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line1_ex = testData2s;
      print(qcashier.screen24.line1_ex);
      expect(qcashier.screen24.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line1_ex = defalut;
      print(qcashier.screen24.line1_ex);
      expect(qcashier.screen24.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01032_element_check_01009 **********\n\n");
    });

    test('01033_element_check_01010', () async {
      print("\n********** テスト実行：01033_element_check_01010 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line2_ex;
      print(qcashier.screen24.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line2_ex = testData1s;
      print(qcashier.screen24.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line2_ex = testData2s;
      print(qcashier.screen24.line2_ex);
      expect(qcashier.screen24.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line2_ex = defalut;
      print(qcashier.screen24.line2_ex);
      expect(qcashier.screen24.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01033_element_check_01010 **********\n\n");
    });

    test('01034_element_check_01011', () async {
      print("\n********** テスト実行：01034_element_check_01011 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line3_ex;
      print(qcashier.screen24.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line3_ex = testData1s;
      print(qcashier.screen24.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line3_ex = testData2s;
      print(qcashier.screen24.line3_ex);
      expect(qcashier.screen24.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line3_ex = defalut;
      print(qcashier.screen24.line3_ex);
      expect(qcashier.screen24.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01034_element_check_01011 **********\n\n");
    });

    test('01035_element_check_01012', () async {
      print("\n********** テスト実行：01035_element_check_01012 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.line4_ex;
      print(qcashier.screen24.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.line4_ex = testData1s;
      print(qcashier.screen24.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.line4_ex = testData2s;
      print(qcashier.screen24.line4_ex);
      expect(qcashier.screen24.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.line4_ex = defalut;
      print(qcashier.screen24.line4_ex);
      expect(qcashier.screen24.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01035_element_check_01012 **********\n\n");
    });

    test('01036_element_check_01013', () async {
      print("\n********** テスト実行：01036_element_check_01013 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.sound_led1;
      print(qcashier.screen24.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.sound_led1 = testData1;
      print(qcashier.screen24.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.sound_led1 = testData2;
      print(qcashier.screen24.sound_led1);
      expect(qcashier.screen24.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.sound_led1 = defalut;
      print(qcashier.screen24.sound_led1);
      expect(qcashier.screen24.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01036_element_check_01013 **********\n\n");
    });

    test('01037_element_check_01014', () async {
      print("\n********** テスト実行：01037_element_check_01014 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.sound_led2;
      print(qcashier.screen24.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.sound_led2 = testData1;
      print(qcashier.screen24.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.sound_led2 = testData2;
      print(qcashier.screen24.sound_led2);
      expect(qcashier.screen24.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.sound_led2 = defalut;
      print(qcashier.screen24.sound_led2);
      expect(qcashier.screen24.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01037_element_check_01014 **********\n\n");
    });

    test('01038_element_check_01015', () async {
      print("\n********** テスト実行：01038_element_check_01015 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen24.sound_led3;
      print(qcashier.screen24.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen24.sound_led3 = testData1;
      print(qcashier.screen24.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen24.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen24.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen24.sound_led3 = testData2;
      print(qcashier.screen24.sound_led3);
      expect(qcashier.screen24.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen24.sound_led3 = defalut;
      print(qcashier.screen24.sound_led3);
      expect(qcashier.screen24.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen24.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01038_element_check_01015 **********\n\n");
    });

    test('01039_element_check_01016', () async {
      print("\n********** テスト実行：01039_element_check_01016 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.title;
      print(qcashier.screen25.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.title = testData1s;
      print(qcashier.screen25.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.title = testData2s;
      print(qcashier.screen25.title);
      expect(qcashier.screen25.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.title = defalut;
      print(qcashier.screen25.title);
      expect(qcashier.screen25.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01039_element_check_01016 **********\n\n");
    });

    test('01040_element_check_01017', () async {
      print("\n********** テスト実行：01040_element_check_01017 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.msg1;
      print(qcashier.screen25.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.msg1 = testData1s;
      print(qcashier.screen25.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.msg1 = testData2s;
      print(qcashier.screen25.msg1);
      expect(qcashier.screen25.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.msg1 = defalut;
      print(qcashier.screen25.msg1);
      expect(qcashier.screen25.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01040_element_check_01017 **********\n\n");
    });

    test('01041_element_check_01018', () async {
      print("\n********** テスト実行：01041_element_check_01018 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.msg2;
      print(qcashier.screen25.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.msg2 = testData1s;
      print(qcashier.screen25.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.msg2 = testData2s;
      print(qcashier.screen25.msg2);
      expect(qcashier.screen25.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.msg2 = defalut;
      print(qcashier.screen25.msg2);
      expect(qcashier.screen25.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01041_element_check_01018 **********\n\n");
    });

    test('01042_element_check_01019', () async {
      print("\n********** テスト実行：01042_element_check_01019 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.msg1_size;
      print(qcashier.screen25.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.msg1_size = testData1;
      print(qcashier.screen25.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.msg1_size = testData2;
      print(qcashier.screen25.msg1_size);
      expect(qcashier.screen25.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.msg1_size = defalut;
      print(qcashier.screen25.msg1_size);
      expect(qcashier.screen25.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01042_element_check_01019 **********\n\n");
    });

    test('01043_element_check_01020', () async {
      print("\n********** テスト実行：01043_element_check_01020 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.msg2_size;
      print(qcashier.screen25.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.msg2_size = testData1;
      print(qcashier.screen25.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.msg2_size = testData2;
      print(qcashier.screen25.msg2_size);
      expect(qcashier.screen25.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.msg2_size = defalut;
      print(qcashier.screen25.msg2_size);
      expect(qcashier.screen25.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01043_element_check_01020 **********\n\n");
    });

    test('01044_element_check_01021', () async {
      print("\n********** テスト実行：01044_element_check_01021 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.sound1;
      print(qcashier.screen25.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.sound1 = testData1;
      print(qcashier.screen25.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.sound1 = testData2;
      print(qcashier.screen25.sound1);
      expect(qcashier.screen25.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.sound1 = defalut;
      print(qcashier.screen25.sound1);
      expect(qcashier.screen25.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01044_element_check_01021 **********\n\n");
    });

    test('01045_element_check_01022', () async {
      print("\n********** テスト実行：01045_element_check_01022 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.sound2;
      print(qcashier.screen25.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.sound2 = testData1;
      print(qcashier.screen25.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.sound2 = testData2;
      print(qcashier.screen25.sound2);
      expect(qcashier.screen25.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.sound2 = defalut;
      print(qcashier.screen25.sound2);
      expect(qcashier.screen25.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01045_element_check_01022 **********\n\n");
    });

    test('01046_element_check_01023', () async {
      print("\n********** テスト実行：01046_element_check_01023 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.sound3;
      print(qcashier.screen25.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.sound3 = testData1;
      print(qcashier.screen25.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.sound3 = testData2;
      print(qcashier.screen25.sound3);
      expect(qcashier.screen25.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.sound3 = defalut;
      print(qcashier.screen25.sound3);
      expect(qcashier.screen25.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01046_element_check_01023 **********\n\n");
    });

    test('01047_element_check_01024', () async {
      print("\n********** テスト実行：01047_element_check_01024 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.snd_timer;
      print(qcashier.screen25.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.snd_timer = testData1;
      print(qcashier.screen25.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.snd_timer = testData2;
      print(qcashier.screen25.snd_timer);
      expect(qcashier.screen25.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.snd_timer = defalut;
      print(qcashier.screen25.snd_timer);
      expect(qcashier.screen25.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01047_element_check_01024 **********\n\n");
    });

    test('01048_element_check_01025', () async {
      print("\n********** テスト実行：01048_element_check_01025 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.timer1;
      print(qcashier.screen25.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.timer1 = testData1;
      print(qcashier.screen25.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.timer1 = testData2;
      print(qcashier.screen25.timer1);
      expect(qcashier.screen25.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.timer1 = defalut;
      print(qcashier.screen25.timer1);
      expect(qcashier.screen25.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01048_element_check_01025 **********\n\n");
    });

    test('01049_element_check_01026', () async {
      print("\n********** テスト実行：01049_element_check_01026 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.timer2;
      print(qcashier.screen25.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.timer2 = testData1;
      print(qcashier.screen25.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.timer2 = testData2;
      print(qcashier.screen25.timer2);
      expect(qcashier.screen25.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.timer2 = defalut;
      print(qcashier.screen25.timer2);
      expect(qcashier.screen25.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01049_element_check_01026 **********\n\n");
    });

    test('01050_element_check_01027', () async {
      print("\n********** テスト実行：01050_element_check_01027 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.timer3;
      print(qcashier.screen25.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.timer3 = testData1;
      print(qcashier.screen25.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.timer3 = testData2;
      print(qcashier.screen25.timer3);
      expect(qcashier.screen25.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.timer3 = defalut;
      print(qcashier.screen25.timer3);
      expect(qcashier.screen25.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01050_element_check_01027 **********\n\n");
    });

    test('01051_element_check_01028', () async {
      print("\n********** テスト実行：01051_element_check_01028 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.dsp_flg1;
      print(qcashier.screen25.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.dsp_flg1 = testData1;
      print(qcashier.screen25.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.dsp_flg1 = testData2;
      print(qcashier.screen25.dsp_flg1);
      expect(qcashier.screen25.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.dsp_flg1 = defalut;
      print(qcashier.screen25.dsp_flg1);
      expect(qcashier.screen25.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01051_element_check_01028 **********\n\n");
    });

    test('01052_element_check_01029', () async {
      print("\n********** テスト実行：01052_element_check_01029 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.dsp_flg2;
      print(qcashier.screen25.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.dsp_flg2 = testData1;
      print(qcashier.screen25.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.dsp_flg2 = testData2;
      print(qcashier.screen25.dsp_flg2);
      expect(qcashier.screen25.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.dsp_flg2 = defalut;
      print(qcashier.screen25.dsp_flg2);
      expect(qcashier.screen25.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01052_element_check_01029 **********\n\n");
    });

    test('01053_element_check_01030', () async {
      print("\n********** テスト実行：01053_element_check_01030 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.movie01_ext;
      print(qcashier.screen25.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.movie01_ext = testData1;
      print(qcashier.screen25.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.movie01_ext = testData2;
      print(qcashier.screen25.movie01_ext);
      expect(qcashier.screen25.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.movie01_ext = defalut;
      print(qcashier.screen25.movie01_ext);
      expect(qcashier.screen25.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01053_element_check_01030 **********\n\n");
    });

    test('01054_element_check_01031', () async {
      print("\n********** テスト実行：01054_element_check_01031 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.movie02_ext;
      print(qcashier.screen25.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.movie02_ext = testData1;
      print(qcashier.screen25.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.movie02_ext = testData2;
      print(qcashier.screen25.movie02_ext);
      expect(qcashier.screen25.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.movie02_ext = defalut;
      print(qcashier.screen25.movie02_ext);
      expect(qcashier.screen25.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01054_element_check_01031 **********\n\n");
    });

    test('01055_element_check_01032', () async {
      print("\n********** テスト実行：01055_element_check_01032 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.movie03_ext;
      print(qcashier.screen25.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.movie03_ext = testData1;
      print(qcashier.screen25.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.movie03_ext = testData2;
      print(qcashier.screen25.movie03_ext);
      expect(qcashier.screen25.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.movie03_ext = defalut;
      print(qcashier.screen25.movie03_ext);
      expect(qcashier.screen25.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01055_element_check_01032 **********\n\n");
    });

    test('01056_element_check_01033', () async {
      print("\n********** テスト実行：01056_element_check_01033 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.movie04_ext;
      print(qcashier.screen25.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.movie04_ext = testData1;
      print(qcashier.screen25.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.movie04_ext = testData2;
      print(qcashier.screen25.movie04_ext);
      expect(qcashier.screen25.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.movie04_ext = defalut;
      print(qcashier.screen25.movie04_ext);
      expect(qcashier.screen25.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01056_element_check_01033 **********\n\n");
    });

    test('01057_element_check_01034', () async {
      print("\n********** テスト実行：01057_element_check_01034 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line_title;
      print(qcashier.screen25.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line_title = testData1s;
      print(qcashier.screen25.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line_title = testData2s;
      print(qcashier.screen25.line_title);
      expect(qcashier.screen25.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line_title = defalut;
      print(qcashier.screen25.line_title);
      expect(qcashier.screen25.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01057_element_check_01034 **********\n\n");
    });

    test('01058_element_check_01035', () async {
      print("\n********** テスト実行：01058_element_check_01035 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line_title_ex;
      print(qcashier.screen25.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line_title_ex = testData1s;
      print(qcashier.screen25.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line_title_ex = testData2s;
      print(qcashier.screen25.line_title_ex);
      expect(qcashier.screen25.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line_title_ex = defalut;
      print(qcashier.screen25.line_title_ex);
      expect(qcashier.screen25.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01058_element_check_01035 **********\n\n");
    });

    test('01059_element_check_01036', () async {
      print("\n********** テスト実行：01059_element_check_01036 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line1;
      print(qcashier.screen25.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line1 = testData1s;
      print(qcashier.screen25.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line1 = testData2s;
      print(qcashier.screen25.line1);
      expect(qcashier.screen25.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line1 = defalut;
      print(qcashier.screen25.line1);
      expect(qcashier.screen25.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01059_element_check_01036 **********\n\n");
    });

    test('01060_element_check_01037', () async {
      print("\n********** テスト実行：01060_element_check_01037 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line2;
      print(qcashier.screen25.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line2 = testData1s;
      print(qcashier.screen25.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line2 = testData2s;
      print(qcashier.screen25.line2);
      expect(qcashier.screen25.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line2 = defalut;
      print(qcashier.screen25.line2);
      expect(qcashier.screen25.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01060_element_check_01037 **********\n\n");
    });

    test('01061_element_check_01038', () async {
      print("\n********** テスト実行：01061_element_check_01038 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line3;
      print(qcashier.screen25.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line3 = testData1s;
      print(qcashier.screen25.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line3 = testData2s;
      print(qcashier.screen25.line3);
      expect(qcashier.screen25.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line3 = defalut;
      print(qcashier.screen25.line3);
      expect(qcashier.screen25.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01061_element_check_01038 **********\n\n");
    });

    test('01062_element_check_01039', () async {
      print("\n********** テスト実行：01062_element_check_01039 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line4;
      print(qcashier.screen25.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line4 = testData1s;
      print(qcashier.screen25.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line4 = testData2s;
      print(qcashier.screen25.line4);
      expect(qcashier.screen25.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line4 = defalut;
      print(qcashier.screen25.line4);
      expect(qcashier.screen25.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01062_element_check_01039 **********\n\n");
    });

    test('01063_element_check_01040', () async {
      print("\n********** テスト実行：01063_element_check_01040 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line1_ex;
      print(qcashier.screen25.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line1_ex = testData1s;
      print(qcashier.screen25.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line1_ex = testData2s;
      print(qcashier.screen25.line1_ex);
      expect(qcashier.screen25.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line1_ex = defalut;
      print(qcashier.screen25.line1_ex);
      expect(qcashier.screen25.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01063_element_check_01040 **********\n\n");
    });

    test('01064_element_check_01041', () async {
      print("\n********** テスト実行：01064_element_check_01041 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line2_ex;
      print(qcashier.screen25.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line2_ex = testData1s;
      print(qcashier.screen25.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line2_ex = testData2s;
      print(qcashier.screen25.line2_ex);
      expect(qcashier.screen25.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line2_ex = defalut;
      print(qcashier.screen25.line2_ex);
      expect(qcashier.screen25.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01064_element_check_01041 **********\n\n");
    });

    test('01065_element_check_01042', () async {
      print("\n********** テスト実行：01065_element_check_01042 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line3_ex;
      print(qcashier.screen25.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line3_ex = testData1s;
      print(qcashier.screen25.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line3_ex = testData2s;
      print(qcashier.screen25.line3_ex);
      expect(qcashier.screen25.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line3_ex = defalut;
      print(qcashier.screen25.line3_ex);
      expect(qcashier.screen25.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01065_element_check_01042 **********\n\n");
    });

    test('01066_element_check_01043', () async {
      print("\n********** テスト実行：01066_element_check_01043 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.line4_ex;
      print(qcashier.screen25.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.line4_ex = testData1s;
      print(qcashier.screen25.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.line4_ex = testData2s;
      print(qcashier.screen25.line4_ex);
      expect(qcashier.screen25.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.line4_ex = defalut;
      print(qcashier.screen25.line4_ex);
      expect(qcashier.screen25.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01066_element_check_01043 **********\n\n");
    });

    test('01067_element_check_01044', () async {
      print("\n********** テスト実行：01067_element_check_01044 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.sound_led1;
      print(qcashier.screen25.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.sound_led1 = testData1;
      print(qcashier.screen25.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.sound_led1 = testData2;
      print(qcashier.screen25.sound_led1);
      expect(qcashier.screen25.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.sound_led1 = defalut;
      print(qcashier.screen25.sound_led1);
      expect(qcashier.screen25.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01067_element_check_01044 **********\n\n");
    });

    test('01068_element_check_01045', () async {
      print("\n********** テスト実行：01068_element_check_01045 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.sound_led2;
      print(qcashier.screen25.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.sound_led2 = testData1;
      print(qcashier.screen25.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.sound_led2 = testData2;
      print(qcashier.screen25.sound_led2);
      expect(qcashier.screen25.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.sound_led2 = defalut;
      print(qcashier.screen25.sound_led2);
      expect(qcashier.screen25.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01068_element_check_01045 **********\n\n");
    });

    test('01069_element_check_01046', () async {
      print("\n********** テスト実行：01069_element_check_01046 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen25.sound_led3;
      print(qcashier.screen25.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen25.sound_led3 = testData1;
      print(qcashier.screen25.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen25.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen25.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen25.sound_led3 = testData2;
      print(qcashier.screen25.sound_led3);
      expect(qcashier.screen25.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen25.sound_led3 = defalut;
      print(qcashier.screen25.sound_led3);
      expect(qcashier.screen25.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen25.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01069_element_check_01046 **********\n\n");
    });

    test('01070_element_check_01047', () async {
      print("\n********** テスト実行：01070_element_check_01047 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.title;
      print(qcashier.screen26.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.title = testData1s;
      print(qcashier.screen26.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.title = testData2s;
      print(qcashier.screen26.title);
      expect(qcashier.screen26.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.title = defalut;
      print(qcashier.screen26.title);
      expect(qcashier.screen26.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01070_element_check_01047 **********\n\n");
    });

    test('01071_element_check_01048', () async {
      print("\n********** テスト実行：01071_element_check_01048 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.msg1;
      print(qcashier.screen26.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.msg1 = testData1s;
      print(qcashier.screen26.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.msg1 = testData2s;
      print(qcashier.screen26.msg1);
      expect(qcashier.screen26.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.msg1 = defalut;
      print(qcashier.screen26.msg1);
      expect(qcashier.screen26.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01071_element_check_01048 **********\n\n");
    });

    test('01072_element_check_01049', () async {
      print("\n********** テスト実行：01072_element_check_01049 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.msg2;
      print(qcashier.screen26.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.msg2 = testData1s;
      print(qcashier.screen26.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.msg2 = testData2s;
      print(qcashier.screen26.msg2);
      expect(qcashier.screen26.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.msg2 = defalut;
      print(qcashier.screen26.msg2);
      expect(qcashier.screen26.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01072_element_check_01049 **********\n\n");
    });

    test('01073_element_check_01050', () async {
      print("\n********** テスト実行：01073_element_check_01050 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.msg1_size;
      print(qcashier.screen26.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.msg1_size = testData1;
      print(qcashier.screen26.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.msg1_size = testData2;
      print(qcashier.screen26.msg1_size);
      expect(qcashier.screen26.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.msg1_size = defalut;
      print(qcashier.screen26.msg1_size);
      expect(qcashier.screen26.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01073_element_check_01050 **********\n\n");
    });

    test('01074_element_check_01051', () async {
      print("\n********** テスト実行：01074_element_check_01051 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.msg2_size;
      print(qcashier.screen26.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.msg2_size = testData1;
      print(qcashier.screen26.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.msg2_size = testData2;
      print(qcashier.screen26.msg2_size);
      expect(qcashier.screen26.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.msg2_size = defalut;
      print(qcashier.screen26.msg2_size);
      expect(qcashier.screen26.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01074_element_check_01051 **********\n\n");
    });

    test('01075_element_check_01052', () async {
      print("\n********** テスト実行：01075_element_check_01052 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.sound1;
      print(qcashier.screen26.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.sound1 = testData1;
      print(qcashier.screen26.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.sound1 = testData2;
      print(qcashier.screen26.sound1);
      expect(qcashier.screen26.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.sound1 = defalut;
      print(qcashier.screen26.sound1);
      expect(qcashier.screen26.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01075_element_check_01052 **********\n\n");
    });

    test('01076_element_check_01053', () async {
      print("\n********** テスト実行：01076_element_check_01053 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.sound2;
      print(qcashier.screen26.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.sound2 = testData1s;
      print(qcashier.screen26.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.sound2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.sound2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.sound2 = testData2s;
      print(qcashier.screen26.sound2);
      expect(qcashier.screen26.sound2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.sound2 = defalut;
      print(qcashier.screen26.sound2);
      expect(qcashier.screen26.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01076_element_check_01053 **********\n\n");
    });

    test('01077_element_check_01054', () async {
      print("\n********** テスト実行：01077_element_check_01054 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.sound3;
      print(qcashier.screen26.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.sound3 = testData1s;
      print(qcashier.screen26.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.sound3 = testData2s;
      print(qcashier.screen26.sound3);
      expect(qcashier.screen26.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.sound3 = defalut;
      print(qcashier.screen26.sound3);
      expect(qcashier.screen26.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01077_element_check_01054 **********\n\n");
    });

    test('01078_element_check_01055', () async {
      print("\n********** テスト実行：01078_element_check_01055 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.snd_timer;
      print(qcashier.screen26.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.snd_timer = testData1;
      print(qcashier.screen26.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.snd_timer = testData2;
      print(qcashier.screen26.snd_timer);
      expect(qcashier.screen26.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.snd_timer = defalut;
      print(qcashier.screen26.snd_timer);
      expect(qcashier.screen26.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01078_element_check_01055 **********\n\n");
    });

    test('01079_element_check_01056', () async {
      print("\n********** テスト実行：01079_element_check_01056 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.timer1;
      print(qcashier.screen26.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.timer1 = testData1;
      print(qcashier.screen26.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.timer1 = testData2;
      print(qcashier.screen26.timer1);
      expect(qcashier.screen26.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.timer1 = defalut;
      print(qcashier.screen26.timer1);
      expect(qcashier.screen26.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01079_element_check_01056 **********\n\n");
    });

    test('01080_element_check_01057', () async {
      print("\n********** テスト実行：01080_element_check_01057 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.timer2;
      print(qcashier.screen26.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.timer2 = testData1;
      print(qcashier.screen26.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.timer2 = testData2;
      print(qcashier.screen26.timer2);
      expect(qcashier.screen26.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.timer2 = defalut;
      print(qcashier.screen26.timer2);
      expect(qcashier.screen26.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01080_element_check_01057 **********\n\n");
    });

    test('01081_element_check_01058', () async {
      print("\n********** テスト実行：01081_element_check_01058 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.timer3;
      print(qcashier.screen26.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.timer3 = testData1;
      print(qcashier.screen26.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.timer3 = testData2;
      print(qcashier.screen26.timer3);
      expect(qcashier.screen26.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.timer3 = defalut;
      print(qcashier.screen26.timer3);
      expect(qcashier.screen26.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01081_element_check_01058 **********\n\n");
    });

    test('01082_element_check_01059', () async {
      print("\n********** テスト実行：01082_element_check_01059 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.dsp_flg1;
      print(qcashier.screen26.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.dsp_flg1 = testData1;
      print(qcashier.screen26.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.dsp_flg1 = testData2;
      print(qcashier.screen26.dsp_flg1);
      expect(qcashier.screen26.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.dsp_flg1 = defalut;
      print(qcashier.screen26.dsp_flg1);
      expect(qcashier.screen26.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01082_element_check_01059 **********\n\n");
    });

    test('01083_element_check_01060', () async {
      print("\n********** テスト実行：01083_element_check_01060 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.dsp_flg2;
      print(qcashier.screen26.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.dsp_flg2 = testData1;
      print(qcashier.screen26.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.dsp_flg2 = testData2;
      print(qcashier.screen26.dsp_flg2);
      expect(qcashier.screen26.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.dsp_flg2 = defalut;
      print(qcashier.screen26.dsp_flg2);
      expect(qcashier.screen26.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01083_element_check_01060 **********\n\n");
    });

    test('01084_element_check_01061', () async {
      print("\n********** テスト実行：01084_element_check_01061 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.movie01_ext;
      print(qcashier.screen26.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.movie01_ext = testData1;
      print(qcashier.screen26.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.movie01_ext = testData2;
      print(qcashier.screen26.movie01_ext);
      expect(qcashier.screen26.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.movie01_ext = defalut;
      print(qcashier.screen26.movie01_ext);
      expect(qcashier.screen26.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01084_element_check_01061 **********\n\n");
    });

    test('01085_element_check_01062', () async {
      print("\n********** テスト実行：01085_element_check_01062 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.movie02_ext;
      print(qcashier.screen26.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.movie02_ext = testData1;
      print(qcashier.screen26.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.movie02_ext = testData2;
      print(qcashier.screen26.movie02_ext);
      expect(qcashier.screen26.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.movie02_ext = defalut;
      print(qcashier.screen26.movie02_ext);
      expect(qcashier.screen26.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01085_element_check_01062 **********\n\n");
    });

    test('01086_element_check_01063', () async {
      print("\n********** テスト実行：01086_element_check_01063 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.movie03_ext;
      print(qcashier.screen26.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.movie03_ext = testData1;
      print(qcashier.screen26.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.movie03_ext = testData2;
      print(qcashier.screen26.movie03_ext);
      expect(qcashier.screen26.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.movie03_ext = defalut;
      print(qcashier.screen26.movie03_ext);
      expect(qcashier.screen26.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01086_element_check_01063 **********\n\n");
    });

    test('01087_element_check_01064', () async {
      print("\n********** テスト実行：01087_element_check_01064 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.movie04_ext;
      print(qcashier.screen26.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.movie04_ext = testData1;
      print(qcashier.screen26.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.movie04_ext = testData2;
      print(qcashier.screen26.movie04_ext);
      expect(qcashier.screen26.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.movie04_ext = defalut;
      print(qcashier.screen26.movie04_ext);
      expect(qcashier.screen26.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01087_element_check_01064 **********\n\n");
    });

    test('01088_element_check_01065', () async {
      print("\n********** テスト実行：01088_element_check_01065 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line_title;
      print(qcashier.screen26.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line_title = testData1s;
      print(qcashier.screen26.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line_title = testData2s;
      print(qcashier.screen26.line_title);
      expect(qcashier.screen26.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line_title = defalut;
      print(qcashier.screen26.line_title);
      expect(qcashier.screen26.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01088_element_check_01065 **********\n\n");
    });

    test('01089_element_check_01066', () async {
      print("\n********** テスト実行：01089_element_check_01066 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line_title_ex;
      print(qcashier.screen26.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line_title_ex = testData1s;
      print(qcashier.screen26.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line_title_ex = testData2s;
      print(qcashier.screen26.line_title_ex);
      expect(qcashier.screen26.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line_title_ex = defalut;
      print(qcashier.screen26.line_title_ex);
      expect(qcashier.screen26.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01089_element_check_01066 **********\n\n");
    });

    test('01090_element_check_01067', () async {
      print("\n********** テスト実行：01090_element_check_01067 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line1;
      print(qcashier.screen26.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line1 = testData1s;
      print(qcashier.screen26.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line1 = testData2s;
      print(qcashier.screen26.line1);
      expect(qcashier.screen26.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line1 = defalut;
      print(qcashier.screen26.line1);
      expect(qcashier.screen26.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01090_element_check_01067 **********\n\n");
    });

    test('01091_element_check_01068', () async {
      print("\n********** テスト実行：01091_element_check_01068 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line2;
      print(qcashier.screen26.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line2 = testData1s;
      print(qcashier.screen26.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line2 = testData2s;
      print(qcashier.screen26.line2);
      expect(qcashier.screen26.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line2 = defalut;
      print(qcashier.screen26.line2);
      expect(qcashier.screen26.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01091_element_check_01068 **********\n\n");
    });

    test('01092_element_check_01069', () async {
      print("\n********** テスト実行：01092_element_check_01069 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line3;
      print(qcashier.screen26.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line3 = testData1s;
      print(qcashier.screen26.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line3 = testData2s;
      print(qcashier.screen26.line3);
      expect(qcashier.screen26.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line3 = defalut;
      print(qcashier.screen26.line3);
      expect(qcashier.screen26.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01092_element_check_01069 **********\n\n");
    });

    test('01093_element_check_01070', () async {
      print("\n********** テスト実行：01093_element_check_01070 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line4;
      print(qcashier.screen26.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line4 = testData1s;
      print(qcashier.screen26.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line4 = testData2s;
      print(qcashier.screen26.line4);
      expect(qcashier.screen26.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line4 = defalut;
      print(qcashier.screen26.line4);
      expect(qcashier.screen26.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01093_element_check_01070 **********\n\n");
    });

    test('01094_element_check_01071', () async {
      print("\n********** テスト実行：01094_element_check_01071 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line1_ex;
      print(qcashier.screen26.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line1_ex = testData1s;
      print(qcashier.screen26.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line1_ex = testData2s;
      print(qcashier.screen26.line1_ex);
      expect(qcashier.screen26.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line1_ex = defalut;
      print(qcashier.screen26.line1_ex);
      expect(qcashier.screen26.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01094_element_check_01071 **********\n\n");
    });

    test('01095_element_check_01072', () async {
      print("\n********** テスト実行：01095_element_check_01072 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line2_ex;
      print(qcashier.screen26.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line2_ex = testData1s;
      print(qcashier.screen26.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line2_ex = testData2s;
      print(qcashier.screen26.line2_ex);
      expect(qcashier.screen26.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line2_ex = defalut;
      print(qcashier.screen26.line2_ex);
      expect(qcashier.screen26.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01095_element_check_01072 **********\n\n");
    });

    test('01096_element_check_01073', () async {
      print("\n********** テスト実行：01096_element_check_01073 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line3_ex;
      print(qcashier.screen26.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line3_ex = testData1s;
      print(qcashier.screen26.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line3_ex = testData2s;
      print(qcashier.screen26.line3_ex);
      expect(qcashier.screen26.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line3_ex = defalut;
      print(qcashier.screen26.line3_ex);
      expect(qcashier.screen26.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01096_element_check_01073 **********\n\n");
    });

    test('01097_element_check_01074', () async {
      print("\n********** テスト実行：01097_element_check_01074 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.line4_ex;
      print(qcashier.screen26.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.line4_ex = testData1s;
      print(qcashier.screen26.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.line4_ex = testData2s;
      print(qcashier.screen26.line4_ex);
      expect(qcashier.screen26.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.line4_ex = defalut;
      print(qcashier.screen26.line4_ex);
      expect(qcashier.screen26.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01097_element_check_01074 **********\n\n");
    });

    test('01098_element_check_01075', () async {
      print("\n********** テスト実行：01098_element_check_01075 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.sound_led1;
      print(qcashier.screen26.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.sound_led1 = testData1;
      print(qcashier.screen26.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.sound_led1 = testData2;
      print(qcashier.screen26.sound_led1);
      expect(qcashier.screen26.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.sound_led1 = defalut;
      print(qcashier.screen26.sound_led1);
      expect(qcashier.screen26.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01098_element_check_01075 **********\n\n");
    });

    test('01099_element_check_01076', () async {
      print("\n********** テスト実行：01099_element_check_01076 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.sound_led2;
      print(qcashier.screen26.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.sound_led2 = testData1s;
      print(qcashier.screen26.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.sound_led2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.sound_led2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.sound_led2 = testData2s;
      print(qcashier.screen26.sound_led2);
      expect(qcashier.screen26.sound_led2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound_led2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.sound_led2 = defalut;
      print(qcashier.screen26.sound_led2);
      expect(qcashier.screen26.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01099_element_check_01076 **********\n\n");
    });

    test('01100_element_check_01077', () async {
      print("\n********** テスト実行：01100_element_check_01077 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen26.sound_led3;
      print(qcashier.screen26.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen26.sound_led3 = testData1s;
      print(qcashier.screen26.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen26.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen26.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen26.sound_led3 = testData2s;
      print(qcashier.screen26.sound_led3);
      expect(qcashier.screen26.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen26.sound_led3 = defalut;
      print(qcashier.screen26.sound_led3);
      expect(qcashier.screen26.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen26.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01100_element_check_01077 **********\n\n");
    });

    test('01101_element_check_01078', () async {
      print("\n********** テスト実行：01101_element_check_01078 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.title;
      print(qcashier.screen27.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.title = testData1s;
      print(qcashier.screen27.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.title = testData2s;
      print(qcashier.screen27.title);
      expect(qcashier.screen27.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.title = defalut;
      print(qcashier.screen27.title);
      expect(qcashier.screen27.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01101_element_check_01078 **********\n\n");
    });

    test('01102_element_check_01079', () async {
      print("\n********** テスト実行：01102_element_check_01079 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.msg1;
      print(qcashier.screen27.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.msg1 = testData1s;
      print(qcashier.screen27.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.msg1 = testData2s;
      print(qcashier.screen27.msg1);
      expect(qcashier.screen27.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.msg1 = defalut;
      print(qcashier.screen27.msg1);
      expect(qcashier.screen27.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01102_element_check_01079 **********\n\n");
    });

    test('01103_element_check_01080', () async {
      print("\n********** テスト実行：01103_element_check_01080 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.msg2;
      print(qcashier.screen27.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.msg2 = testData1s;
      print(qcashier.screen27.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.msg2 = testData2s;
      print(qcashier.screen27.msg2);
      expect(qcashier.screen27.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.msg2 = defalut;
      print(qcashier.screen27.msg2);
      expect(qcashier.screen27.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01103_element_check_01080 **********\n\n");
    });

    test('01104_element_check_01081', () async {
      print("\n********** テスト実行：01104_element_check_01081 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.msg1_size;
      print(qcashier.screen27.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.msg1_size = testData1;
      print(qcashier.screen27.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.msg1_size = testData2;
      print(qcashier.screen27.msg1_size);
      expect(qcashier.screen27.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.msg1_size = defalut;
      print(qcashier.screen27.msg1_size);
      expect(qcashier.screen27.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01104_element_check_01081 **********\n\n");
    });

    test('01105_element_check_01082', () async {
      print("\n********** テスト実行：01105_element_check_01082 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.msg2_size;
      print(qcashier.screen27.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.msg2_size = testData1;
      print(qcashier.screen27.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.msg2_size = testData2;
      print(qcashier.screen27.msg2_size);
      expect(qcashier.screen27.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.msg2_size = defalut;
      print(qcashier.screen27.msg2_size);
      expect(qcashier.screen27.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01105_element_check_01082 **********\n\n");
    });

    test('01106_element_check_01083', () async {
      print("\n********** テスト実行：01106_element_check_01083 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.sound1;
      print(qcashier.screen27.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.sound1 = testData1;
      print(qcashier.screen27.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.sound1 = testData2;
      print(qcashier.screen27.sound1);
      expect(qcashier.screen27.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.sound1 = defalut;
      print(qcashier.screen27.sound1);
      expect(qcashier.screen27.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01106_element_check_01083 **********\n\n");
    });

    test('01107_element_check_01084', () async {
      print("\n********** テスト実行：01107_element_check_01084 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.sound2;
      print(qcashier.screen27.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.sound2 = testData1;
      print(qcashier.screen27.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.sound2 = testData2;
      print(qcashier.screen27.sound2);
      expect(qcashier.screen27.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.sound2 = defalut;
      print(qcashier.screen27.sound2);
      expect(qcashier.screen27.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01107_element_check_01084 **********\n\n");
    });

    test('01108_element_check_01085', () async {
      print("\n********** テスト実行：01108_element_check_01085 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.sound3;
      print(qcashier.screen27.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.sound3 = testData1;
      print(qcashier.screen27.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.sound3 = testData2;
      print(qcashier.screen27.sound3);
      expect(qcashier.screen27.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.sound3 = defalut;
      print(qcashier.screen27.sound3);
      expect(qcashier.screen27.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01108_element_check_01085 **********\n\n");
    });

    test('01109_element_check_01086', () async {
      print("\n********** テスト実行：01109_element_check_01086 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.snd_timer;
      print(qcashier.screen27.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.snd_timer = testData1;
      print(qcashier.screen27.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.snd_timer = testData2;
      print(qcashier.screen27.snd_timer);
      expect(qcashier.screen27.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.snd_timer = defalut;
      print(qcashier.screen27.snd_timer);
      expect(qcashier.screen27.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01109_element_check_01086 **********\n\n");
    });

    test('01110_element_check_01087', () async {
      print("\n********** テスト実行：01110_element_check_01087 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.timer1;
      print(qcashier.screen27.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.timer1 = testData1;
      print(qcashier.screen27.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.timer1 = testData2;
      print(qcashier.screen27.timer1);
      expect(qcashier.screen27.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.timer1 = defalut;
      print(qcashier.screen27.timer1);
      expect(qcashier.screen27.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01110_element_check_01087 **********\n\n");
    });

    test('01111_element_check_01088', () async {
      print("\n********** テスト実行：01111_element_check_01088 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.timer2;
      print(qcashier.screen27.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.timer2 = testData1;
      print(qcashier.screen27.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.timer2 = testData2;
      print(qcashier.screen27.timer2);
      expect(qcashier.screen27.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.timer2 = defalut;
      print(qcashier.screen27.timer2);
      expect(qcashier.screen27.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01111_element_check_01088 **********\n\n");
    });

    test('01112_element_check_01089', () async {
      print("\n********** テスト実行：01112_element_check_01089 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.timer3;
      print(qcashier.screen27.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.timer3 = testData1;
      print(qcashier.screen27.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.timer3 = testData2;
      print(qcashier.screen27.timer3);
      expect(qcashier.screen27.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.timer3 = defalut;
      print(qcashier.screen27.timer3);
      expect(qcashier.screen27.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01112_element_check_01089 **********\n\n");
    });

    test('01113_element_check_01090', () async {
      print("\n********** テスト実行：01113_element_check_01090 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.dsp_flg1;
      print(qcashier.screen27.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.dsp_flg1 = testData1;
      print(qcashier.screen27.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.dsp_flg1 = testData2;
      print(qcashier.screen27.dsp_flg1);
      expect(qcashier.screen27.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.dsp_flg1 = defalut;
      print(qcashier.screen27.dsp_flg1);
      expect(qcashier.screen27.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01113_element_check_01090 **********\n\n");
    });

    test('01114_element_check_01091', () async {
      print("\n********** テスト実行：01114_element_check_01091 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.dsp_flg2;
      print(qcashier.screen27.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.dsp_flg2 = testData1;
      print(qcashier.screen27.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.dsp_flg2 = testData2;
      print(qcashier.screen27.dsp_flg2);
      expect(qcashier.screen27.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.dsp_flg2 = defalut;
      print(qcashier.screen27.dsp_flg2);
      expect(qcashier.screen27.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01114_element_check_01091 **********\n\n");
    });

    test('01115_element_check_01092', () async {
      print("\n********** テスト実行：01115_element_check_01092 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.movie01_ext;
      print(qcashier.screen27.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.movie01_ext = testData1;
      print(qcashier.screen27.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.movie01_ext = testData2;
      print(qcashier.screen27.movie01_ext);
      expect(qcashier.screen27.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.movie01_ext = defalut;
      print(qcashier.screen27.movie01_ext);
      expect(qcashier.screen27.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01115_element_check_01092 **********\n\n");
    });

    test('01116_element_check_01093', () async {
      print("\n********** テスト実行：01116_element_check_01093 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.movie02_ext;
      print(qcashier.screen27.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.movie02_ext = testData1;
      print(qcashier.screen27.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.movie02_ext = testData2;
      print(qcashier.screen27.movie02_ext);
      expect(qcashier.screen27.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.movie02_ext = defalut;
      print(qcashier.screen27.movie02_ext);
      expect(qcashier.screen27.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01116_element_check_01093 **********\n\n");
    });

    test('01117_element_check_01094', () async {
      print("\n********** テスト実行：01117_element_check_01094 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.movie03_ext;
      print(qcashier.screen27.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.movie03_ext = testData1;
      print(qcashier.screen27.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.movie03_ext = testData2;
      print(qcashier.screen27.movie03_ext);
      expect(qcashier.screen27.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.movie03_ext = defalut;
      print(qcashier.screen27.movie03_ext);
      expect(qcashier.screen27.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01117_element_check_01094 **********\n\n");
    });

    test('01118_element_check_01095', () async {
      print("\n********** テスト実行：01118_element_check_01095 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.movie04_ext;
      print(qcashier.screen27.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.movie04_ext = testData1;
      print(qcashier.screen27.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.movie04_ext = testData2;
      print(qcashier.screen27.movie04_ext);
      expect(qcashier.screen27.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.movie04_ext = defalut;
      print(qcashier.screen27.movie04_ext);
      expect(qcashier.screen27.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01118_element_check_01095 **********\n\n");
    });

    test('01119_element_check_01096', () async {
      print("\n********** テスト実行：01119_element_check_01096 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line_title;
      print(qcashier.screen27.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line_title = testData1s;
      print(qcashier.screen27.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line_title = testData2s;
      print(qcashier.screen27.line_title);
      expect(qcashier.screen27.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line_title = defalut;
      print(qcashier.screen27.line_title);
      expect(qcashier.screen27.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01119_element_check_01096 **********\n\n");
    });

    test('01120_element_check_01097', () async {
      print("\n********** テスト実行：01120_element_check_01097 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line_title_ex;
      print(qcashier.screen27.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line_title_ex = testData1s;
      print(qcashier.screen27.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line_title_ex = testData2s;
      print(qcashier.screen27.line_title_ex);
      expect(qcashier.screen27.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line_title_ex = defalut;
      print(qcashier.screen27.line_title_ex);
      expect(qcashier.screen27.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01120_element_check_01097 **********\n\n");
    });

    test('01121_element_check_01098', () async {
      print("\n********** テスト実行：01121_element_check_01098 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line1;
      print(qcashier.screen27.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line1 = testData1s;
      print(qcashier.screen27.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line1 = testData2s;
      print(qcashier.screen27.line1);
      expect(qcashier.screen27.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line1 = defalut;
      print(qcashier.screen27.line1);
      expect(qcashier.screen27.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01121_element_check_01098 **********\n\n");
    });

    test('01122_element_check_01099', () async {
      print("\n********** テスト実行：01122_element_check_01099 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line2;
      print(qcashier.screen27.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line2 = testData1s;
      print(qcashier.screen27.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line2 = testData2s;
      print(qcashier.screen27.line2);
      expect(qcashier.screen27.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line2 = defalut;
      print(qcashier.screen27.line2);
      expect(qcashier.screen27.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01122_element_check_01099 **********\n\n");
    });

    test('01123_element_check_01100', () async {
      print("\n********** テスト実行：01123_element_check_01100 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line3;
      print(qcashier.screen27.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line3 = testData1s;
      print(qcashier.screen27.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line3 = testData2s;
      print(qcashier.screen27.line3);
      expect(qcashier.screen27.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line3 = defalut;
      print(qcashier.screen27.line3);
      expect(qcashier.screen27.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01123_element_check_01100 **********\n\n");
    });

    test('01124_element_check_01101', () async {
      print("\n********** テスト実行：01124_element_check_01101 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line4;
      print(qcashier.screen27.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line4 = testData1s;
      print(qcashier.screen27.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line4 = testData2s;
      print(qcashier.screen27.line4);
      expect(qcashier.screen27.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line4 = defalut;
      print(qcashier.screen27.line4);
      expect(qcashier.screen27.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01124_element_check_01101 **********\n\n");
    });

    test('01125_element_check_01102', () async {
      print("\n********** テスト実行：01125_element_check_01102 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line1_ex;
      print(qcashier.screen27.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line1_ex = testData1s;
      print(qcashier.screen27.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line1_ex = testData2s;
      print(qcashier.screen27.line1_ex);
      expect(qcashier.screen27.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line1_ex = defalut;
      print(qcashier.screen27.line1_ex);
      expect(qcashier.screen27.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01125_element_check_01102 **********\n\n");
    });

    test('01126_element_check_01103', () async {
      print("\n********** テスト実行：01126_element_check_01103 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line2_ex;
      print(qcashier.screen27.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line2_ex = testData1s;
      print(qcashier.screen27.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line2_ex = testData2s;
      print(qcashier.screen27.line2_ex);
      expect(qcashier.screen27.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line2_ex = defalut;
      print(qcashier.screen27.line2_ex);
      expect(qcashier.screen27.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01126_element_check_01103 **********\n\n");
    });

    test('01127_element_check_01104', () async {
      print("\n********** テスト実行：01127_element_check_01104 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line3_ex;
      print(qcashier.screen27.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line3_ex = testData1s;
      print(qcashier.screen27.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line3_ex = testData2s;
      print(qcashier.screen27.line3_ex);
      expect(qcashier.screen27.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line3_ex = defalut;
      print(qcashier.screen27.line3_ex);
      expect(qcashier.screen27.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01127_element_check_01104 **********\n\n");
    });

    test('01128_element_check_01105', () async {
      print("\n********** テスト実行：01128_element_check_01105 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.line4_ex;
      print(qcashier.screen27.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.line4_ex = testData1s;
      print(qcashier.screen27.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.line4_ex = testData2s;
      print(qcashier.screen27.line4_ex);
      expect(qcashier.screen27.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.line4_ex = defalut;
      print(qcashier.screen27.line4_ex);
      expect(qcashier.screen27.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01128_element_check_01105 **********\n\n");
    });

    test('01129_element_check_01106', () async {
      print("\n********** テスト実行：01129_element_check_01106 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.sound_led1;
      print(qcashier.screen27.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.sound_led1 = testData1;
      print(qcashier.screen27.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.sound_led1 = testData2;
      print(qcashier.screen27.sound_led1);
      expect(qcashier.screen27.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.sound_led1 = defalut;
      print(qcashier.screen27.sound_led1);
      expect(qcashier.screen27.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01129_element_check_01106 **********\n\n");
    });

    test('01130_element_check_01107', () async {
      print("\n********** テスト実行：01130_element_check_01107 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.sound_led2;
      print(qcashier.screen27.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.sound_led2 = testData1;
      print(qcashier.screen27.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.sound_led2 = testData2;
      print(qcashier.screen27.sound_led2);
      expect(qcashier.screen27.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.sound_led2 = defalut;
      print(qcashier.screen27.sound_led2);
      expect(qcashier.screen27.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01130_element_check_01107 **********\n\n");
    });

    test('01131_element_check_01108', () async {
      print("\n********** テスト実行：01131_element_check_01108 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen27.sound_led3;
      print(qcashier.screen27.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen27.sound_led3 = testData1;
      print(qcashier.screen27.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen27.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen27.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen27.sound_led3 = testData2;
      print(qcashier.screen27.sound_led3);
      expect(qcashier.screen27.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen27.sound_led3 = defalut;
      print(qcashier.screen27.sound_led3);
      expect(qcashier.screen27.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen27.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01131_element_check_01108 **********\n\n");
    });

    test('01132_element_check_01109', () async {
      print("\n********** テスト実行：01132_element_check_01109 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.title;
      print(qcashier.screen28.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.title = testData1s;
      print(qcashier.screen28.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.title = testData2s;
      print(qcashier.screen28.title);
      expect(qcashier.screen28.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.title = defalut;
      print(qcashier.screen28.title);
      expect(qcashier.screen28.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01132_element_check_01109 **********\n\n");
    });

    test('01133_element_check_01110', () async {
      print("\n********** テスト実行：01133_element_check_01110 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.msg1;
      print(qcashier.screen28.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.msg1 = testData1s;
      print(qcashier.screen28.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.msg1 = testData2s;
      print(qcashier.screen28.msg1);
      expect(qcashier.screen28.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.msg1 = defalut;
      print(qcashier.screen28.msg1);
      expect(qcashier.screen28.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01133_element_check_01110 **********\n\n");
    });

    test('01134_element_check_01111', () async {
      print("\n********** テスト実行：01134_element_check_01111 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.msg2;
      print(qcashier.screen28.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.msg2 = testData1s;
      print(qcashier.screen28.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.msg2 = testData2s;
      print(qcashier.screen28.msg2);
      expect(qcashier.screen28.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.msg2 = defalut;
      print(qcashier.screen28.msg2);
      expect(qcashier.screen28.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01134_element_check_01111 **********\n\n");
    });

    test('01135_element_check_01112', () async {
      print("\n********** テスト実行：01135_element_check_01112 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.msg1_size;
      print(qcashier.screen28.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.msg1_size = testData1;
      print(qcashier.screen28.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.msg1_size = testData2;
      print(qcashier.screen28.msg1_size);
      expect(qcashier.screen28.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.msg1_size = defalut;
      print(qcashier.screen28.msg1_size);
      expect(qcashier.screen28.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01135_element_check_01112 **********\n\n");
    });

    test('01136_element_check_01113', () async {
      print("\n********** テスト実行：01136_element_check_01113 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.msg2_size;
      print(qcashier.screen28.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.msg2_size = testData1;
      print(qcashier.screen28.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.msg2_size = testData2;
      print(qcashier.screen28.msg2_size);
      expect(qcashier.screen28.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.msg2_size = defalut;
      print(qcashier.screen28.msg2_size);
      expect(qcashier.screen28.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01136_element_check_01113 **********\n\n");
    });

    test('01137_element_check_01114', () async {
      print("\n********** テスト実行：01137_element_check_01114 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.sound1;
      print(qcashier.screen28.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.sound1 = testData1;
      print(qcashier.screen28.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.sound1 = testData2;
      print(qcashier.screen28.sound1);
      expect(qcashier.screen28.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.sound1 = defalut;
      print(qcashier.screen28.sound1);
      expect(qcashier.screen28.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01137_element_check_01114 **********\n\n");
    });

    test('01138_element_check_01115', () async {
      print("\n********** テスト実行：01138_element_check_01115 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.sound2;
      print(qcashier.screen28.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.sound2 = testData1;
      print(qcashier.screen28.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.sound2 = testData2;
      print(qcashier.screen28.sound2);
      expect(qcashier.screen28.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.sound2 = defalut;
      print(qcashier.screen28.sound2);
      expect(qcashier.screen28.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01138_element_check_01115 **********\n\n");
    });

    test('01139_element_check_01116', () async {
      print("\n********** テスト実行：01139_element_check_01116 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.sound3;
      print(qcashier.screen28.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.sound3 = testData1;
      print(qcashier.screen28.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.sound3 = testData2;
      print(qcashier.screen28.sound3);
      expect(qcashier.screen28.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.sound3 = defalut;
      print(qcashier.screen28.sound3);
      expect(qcashier.screen28.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01139_element_check_01116 **********\n\n");
    });

    test('01140_element_check_01117', () async {
      print("\n********** テスト実行：01140_element_check_01117 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.snd_timer;
      print(qcashier.screen28.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.snd_timer = testData1;
      print(qcashier.screen28.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.snd_timer = testData2;
      print(qcashier.screen28.snd_timer);
      expect(qcashier.screen28.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.snd_timer = defalut;
      print(qcashier.screen28.snd_timer);
      expect(qcashier.screen28.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01140_element_check_01117 **********\n\n");
    });

    test('01141_element_check_01118', () async {
      print("\n********** テスト実行：01141_element_check_01118 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.timer1;
      print(qcashier.screen28.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.timer1 = testData1;
      print(qcashier.screen28.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.timer1 = testData2;
      print(qcashier.screen28.timer1);
      expect(qcashier.screen28.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.timer1 = defalut;
      print(qcashier.screen28.timer1);
      expect(qcashier.screen28.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01141_element_check_01118 **********\n\n");
    });

    test('01142_element_check_01119', () async {
      print("\n********** テスト実行：01142_element_check_01119 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.timer2;
      print(qcashier.screen28.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.timer2 = testData1;
      print(qcashier.screen28.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.timer2 = testData2;
      print(qcashier.screen28.timer2);
      expect(qcashier.screen28.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.timer2 = defalut;
      print(qcashier.screen28.timer2);
      expect(qcashier.screen28.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01142_element_check_01119 **********\n\n");
    });

    test('01143_element_check_01120', () async {
      print("\n********** テスト実行：01143_element_check_01120 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.timer3;
      print(qcashier.screen28.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.timer3 = testData1;
      print(qcashier.screen28.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.timer3 = testData2;
      print(qcashier.screen28.timer3);
      expect(qcashier.screen28.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.timer3 = defalut;
      print(qcashier.screen28.timer3);
      expect(qcashier.screen28.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01143_element_check_01120 **********\n\n");
    });

    test('01144_element_check_01121', () async {
      print("\n********** テスト実行：01144_element_check_01121 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.dsp_flg1;
      print(qcashier.screen28.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.dsp_flg1 = testData1;
      print(qcashier.screen28.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.dsp_flg1 = testData2;
      print(qcashier.screen28.dsp_flg1);
      expect(qcashier.screen28.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.dsp_flg1 = defalut;
      print(qcashier.screen28.dsp_flg1);
      expect(qcashier.screen28.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01144_element_check_01121 **********\n\n");
    });

    test('01145_element_check_01122', () async {
      print("\n********** テスト実行：01145_element_check_01122 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.dsp_flg2;
      print(qcashier.screen28.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.dsp_flg2 = testData1;
      print(qcashier.screen28.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.dsp_flg2 = testData2;
      print(qcashier.screen28.dsp_flg2);
      expect(qcashier.screen28.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.dsp_flg2 = defalut;
      print(qcashier.screen28.dsp_flg2);
      expect(qcashier.screen28.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01145_element_check_01122 **********\n\n");
    });

    test('01146_element_check_01123', () async {
      print("\n********** テスト実行：01146_element_check_01123 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.movie01_ext;
      print(qcashier.screen28.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.movie01_ext = testData1;
      print(qcashier.screen28.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.movie01_ext = testData2;
      print(qcashier.screen28.movie01_ext);
      expect(qcashier.screen28.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.movie01_ext = defalut;
      print(qcashier.screen28.movie01_ext);
      expect(qcashier.screen28.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01146_element_check_01123 **********\n\n");
    });

    test('01147_element_check_01124', () async {
      print("\n********** テスト実行：01147_element_check_01124 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.movie02_ext;
      print(qcashier.screen28.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.movie02_ext = testData1;
      print(qcashier.screen28.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.movie02_ext = testData2;
      print(qcashier.screen28.movie02_ext);
      expect(qcashier.screen28.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.movie02_ext = defalut;
      print(qcashier.screen28.movie02_ext);
      expect(qcashier.screen28.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01147_element_check_01124 **********\n\n");
    });

    test('01148_element_check_01125', () async {
      print("\n********** テスト実行：01148_element_check_01125 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.movie03_ext;
      print(qcashier.screen28.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.movie03_ext = testData1;
      print(qcashier.screen28.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.movie03_ext = testData2;
      print(qcashier.screen28.movie03_ext);
      expect(qcashier.screen28.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.movie03_ext = defalut;
      print(qcashier.screen28.movie03_ext);
      expect(qcashier.screen28.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01148_element_check_01125 **********\n\n");
    });

    test('01149_element_check_01126', () async {
      print("\n********** テスト実行：01149_element_check_01126 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.movie04_ext;
      print(qcashier.screen28.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.movie04_ext = testData1;
      print(qcashier.screen28.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.movie04_ext = testData2;
      print(qcashier.screen28.movie04_ext);
      expect(qcashier.screen28.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.movie04_ext = defalut;
      print(qcashier.screen28.movie04_ext);
      expect(qcashier.screen28.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01149_element_check_01126 **********\n\n");
    });

    test('01150_element_check_01127', () async {
      print("\n********** テスト実行：01150_element_check_01127 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line_title;
      print(qcashier.screen28.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line_title = testData1s;
      print(qcashier.screen28.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line_title = testData2s;
      print(qcashier.screen28.line_title);
      expect(qcashier.screen28.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line_title = defalut;
      print(qcashier.screen28.line_title);
      expect(qcashier.screen28.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01150_element_check_01127 **********\n\n");
    });

    test('01151_element_check_01128', () async {
      print("\n********** テスト実行：01151_element_check_01128 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line_title_ex;
      print(qcashier.screen28.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line_title_ex = testData1s;
      print(qcashier.screen28.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line_title_ex = testData2s;
      print(qcashier.screen28.line_title_ex);
      expect(qcashier.screen28.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line_title_ex = defalut;
      print(qcashier.screen28.line_title_ex);
      expect(qcashier.screen28.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01151_element_check_01128 **********\n\n");
    });

    test('01152_element_check_01129', () async {
      print("\n********** テスト実行：01152_element_check_01129 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line1;
      print(qcashier.screen28.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line1 = testData1s;
      print(qcashier.screen28.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line1 = testData2s;
      print(qcashier.screen28.line1);
      expect(qcashier.screen28.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line1 = defalut;
      print(qcashier.screen28.line1);
      expect(qcashier.screen28.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01152_element_check_01129 **********\n\n");
    });

    test('01153_element_check_01130', () async {
      print("\n********** テスト実行：01153_element_check_01130 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line2;
      print(qcashier.screen28.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line2 = testData1s;
      print(qcashier.screen28.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line2 = testData2s;
      print(qcashier.screen28.line2);
      expect(qcashier.screen28.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line2 = defalut;
      print(qcashier.screen28.line2);
      expect(qcashier.screen28.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01153_element_check_01130 **********\n\n");
    });

    test('01154_element_check_01131', () async {
      print("\n********** テスト実行：01154_element_check_01131 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line3;
      print(qcashier.screen28.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line3 = testData1s;
      print(qcashier.screen28.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line3 = testData2s;
      print(qcashier.screen28.line3);
      expect(qcashier.screen28.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line3 = defalut;
      print(qcashier.screen28.line3);
      expect(qcashier.screen28.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01154_element_check_01131 **********\n\n");
    });

    test('01155_element_check_01132', () async {
      print("\n********** テスト実行：01155_element_check_01132 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line4;
      print(qcashier.screen28.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line4 = testData1s;
      print(qcashier.screen28.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line4 = testData2s;
      print(qcashier.screen28.line4);
      expect(qcashier.screen28.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line4 = defalut;
      print(qcashier.screen28.line4);
      expect(qcashier.screen28.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01155_element_check_01132 **********\n\n");
    });

    test('01156_element_check_01133', () async {
      print("\n********** テスト実行：01156_element_check_01133 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line1_ex;
      print(qcashier.screen28.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line1_ex = testData1s;
      print(qcashier.screen28.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line1_ex = testData2s;
      print(qcashier.screen28.line1_ex);
      expect(qcashier.screen28.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line1_ex = defalut;
      print(qcashier.screen28.line1_ex);
      expect(qcashier.screen28.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01156_element_check_01133 **********\n\n");
    });

    test('01157_element_check_01134', () async {
      print("\n********** テスト実行：01157_element_check_01134 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line2_ex;
      print(qcashier.screen28.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line2_ex = testData1s;
      print(qcashier.screen28.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line2_ex = testData2s;
      print(qcashier.screen28.line2_ex);
      expect(qcashier.screen28.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line2_ex = defalut;
      print(qcashier.screen28.line2_ex);
      expect(qcashier.screen28.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01157_element_check_01134 **********\n\n");
    });

    test('01158_element_check_01135', () async {
      print("\n********** テスト実行：01158_element_check_01135 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line3_ex;
      print(qcashier.screen28.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line3_ex = testData1s;
      print(qcashier.screen28.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line3_ex = testData2s;
      print(qcashier.screen28.line3_ex);
      expect(qcashier.screen28.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line3_ex = defalut;
      print(qcashier.screen28.line3_ex);
      expect(qcashier.screen28.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01158_element_check_01135 **********\n\n");
    });

    test('01159_element_check_01136', () async {
      print("\n********** テスト実行：01159_element_check_01136 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.line4_ex;
      print(qcashier.screen28.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.line4_ex = testData1s;
      print(qcashier.screen28.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.line4_ex = testData2s;
      print(qcashier.screen28.line4_ex);
      expect(qcashier.screen28.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.line4_ex = defalut;
      print(qcashier.screen28.line4_ex);
      expect(qcashier.screen28.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01159_element_check_01136 **********\n\n");
    });

    test('01160_element_check_01137', () async {
      print("\n********** テスト実行：01160_element_check_01137 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.sound_led1;
      print(qcashier.screen28.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.sound_led1 = testData1;
      print(qcashier.screen28.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.sound_led1 = testData2;
      print(qcashier.screen28.sound_led1);
      expect(qcashier.screen28.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.sound_led1 = defalut;
      print(qcashier.screen28.sound_led1);
      expect(qcashier.screen28.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01160_element_check_01137 **********\n\n");
    });

    test('01161_element_check_01138', () async {
      print("\n********** テスト実行：01161_element_check_01138 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.sound_led2;
      print(qcashier.screen28.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.sound_led2 = testData1;
      print(qcashier.screen28.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.sound_led2 = testData2;
      print(qcashier.screen28.sound_led2);
      expect(qcashier.screen28.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.sound_led2 = defalut;
      print(qcashier.screen28.sound_led2);
      expect(qcashier.screen28.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01161_element_check_01138 **********\n\n");
    });

    test('01162_element_check_01139', () async {
      print("\n********** テスト実行：01162_element_check_01139 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen28.sound_led3;
      print(qcashier.screen28.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen28.sound_led3 = testData1;
      print(qcashier.screen28.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen28.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen28.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen28.sound_led3 = testData2;
      print(qcashier.screen28.sound_led3);
      expect(qcashier.screen28.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen28.sound_led3 = defalut;
      print(qcashier.screen28.sound_led3);
      expect(qcashier.screen28.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen28.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01162_element_check_01139 **********\n\n");
    });

    test('01163_element_check_01140', () async {
      print("\n********** テスト実行：01163_element_check_01140 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.title;
      print(qcashier.screen29.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.title = testData1s;
      print(qcashier.screen29.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.title = testData2s;
      print(qcashier.screen29.title);
      expect(qcashier.screen29.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.title = defalut;
      print(qcashier.screen29.title);
      expect(qcashier.screen29.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01163_element_check_01140 **********\n\n");
    });

    test('01164_element_check_01141', () async {
      print("\n********** テスト実行：01164_element_check_01141 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.msg1;
      print(qcashier.screen29.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.msg1 = testData1s;
      print(qcashier.screen29.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.msg1 = testData2s;
      print(qcashier.screen29.msg1);
      expect(qcashier.screen29.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.msg1 = defalut;
      print(qcashier.screen29.msg1);
      expect(qcashier.screen29.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01164_element_check_01141 **********\n\n");
    });

    test('01165_element_check_01142', () async {
      print("\n********** テスト実行：01165_element_check_01142 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.msg2;
      print(qcashier.screen29.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.msg2 = testData1s;
      print(qcashier.screen29.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.msg2 = testData2s;
      print(qcashier.screen29.msg2);
      expect(qcashier.screen29.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.msg2 = defalut;
      print(qcashier.screen29.msg2);
      expect(qcashier.screen29.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01165_element_check_01142 **********\n\n");
    });

    test('01166_element_check_01143', () async {
      print("\n********** テスト実行：01166_element_check_01143 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.msg1_size;
      print(qcashier.screen29.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.msg1_size = testData1;
      print(qcashier.screen29.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.msg1_size = testData2;
      print(qcashier.screen29.msg1_size);
      expect(qcashier.screen29.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.msg1_size = defalut;
      print(qcashier.screen29.msg1_size);
      expect(qcashier.screen29.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01166_element_check_01143 **********\n\n");
    });

    test('01167_element_check_01144', () async {
      print("\n********** テスト実行：01167_element_check_01144 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.msg2_size;
      print(qcashier.screen29.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.msg2_size = testData1;
      print(qcashier.screen29.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.msg2_size = testData2;
      print(qcashier.screen29.msg2_size);
      expect(qcashier.screen29.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.msg2_size = defalut;
      print(qcashier.screen29.msg2_size);
      expect(qcashier.screen29.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01167_element_check_01144 **********\n\n");
    });

    test('01168_element_check_01145', () async {
      print("\n********** テスト実行：01168_element_check_01145 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.sound1;
      print(qcashier.screen29.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.sound1 = testData1;
      print(qcashier.screen29.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.sound1 = testData2;
      print(qcashier.screen29.sound1);
      expect(qcashier.screen29.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.sound1 = defalut;
      print(qcashier.screen29.sound1);
      expect(qcashier.screen29.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01168_element_check_01145 **********\n\n");
    });

    test('01169_element_check_01146', () async {
      print("\n********** テスト実行：01169_element_check_01146 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.sound2;
      print(qcashier.screen29.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.sound2 = testData1;
      print(qcashier.screen29.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.sound2 = testData2;
      print(qcashier.screen29.sound2);
      expect(qcashier.screen29.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.sound2 = defalut;
      print(qcashier.screen29.sound2);
      expect(qcashier.screen29.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01169_element_check_01146 **********\n\n");
    });

    test('01170_element_check_01147', () async {
      print("\n********** テスト実行：01170_element_check_01147 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.sound3;
      print(qcashier.screen29.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.sound3 = testData1;
      print(qcashier.screen29.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.sound3 = testData2;
      print(qcashier.screen29.sound3);
      expect(qcashier.screen29.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.sound3 = defalut;
      print(qcashier.screen29.sound3);
      expect(qcashier.screen29.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01170_element_check_01147 **********\n\n");
    });

    test('01171_element_check_01148', () async {
      print("\n********** テスト実行：01171_element_check_01148 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.snd_timer;
      print(qcashier.screen29.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.snd_timer = testData1;
      print(qcashier.screen29.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.snd_timer = testData2;
      print(qcashier.screen29.snd_timer);
      expect(qcashier.screen29.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.snd_timer = defalut;
      print(qcashier.screen29.snd_timer);
      expect(qcashier.screen29.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01171_element_check_01148 **********\n\n");
    });

    test('01172_element_check_01149', () async {
      print("\n********** テスト実行：01172_element_check_01149 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.timer1;
      print(qcashier.screen29.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.timer1 = testData1;
      print(qcashier.screen29.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.timer1 = testData2;
      print(qcashier.screen29.timer1);
      expect(qcashier.screen29.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.timer1 = defalut;
      print(qcashier.screen29.timer1);
      expect(qcashier.screen29.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01172_element_check_01149 **********\n\n");
    });

    test('01173_element_check_01150', () async {
      print("\n********** テスト実行：01173_element_check_01150 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.timer2;
      print(qcashier.screen29.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.timer2 = testData1;
      print(qcashier.screen29.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.timer2 = testData2;
      print(qcashier.screen29.timer2);
      expect(qcashier.screen29.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.timer2 = defalut;
      print(qcashier.screen29.timer2);
      expect(qcashier.screen29.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01173_element_check_01150 **********\n\n");
    });

    test('01174_element_check_01151', () async {
      print("\n********** テスト実行：01174_element_check_01151 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.timer3;
      print(qcashier.screen29.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.timer3 = testData1;
      print(qcashier.screen29.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.timer3 = testData2;
      print(qcashier.screen29.timer3);
      expect(qcashier.screen29.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.timer3 = defalut;
      print(qcashier.screen29.timer3);
      expect(qcashier.screen29.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01174_element_check_01151 **********\n\n");
    });

    test('01175_element_check_01152', () async {
      print("\n********** テスト実行：01175_element_check_01152 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.dsp_flg1;
      print(qcashier.screen29.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.dsp_flg1 = testData1;
      print(qcashier.screen29.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.dsp_flg1 = testData2;
      print(qcashier.screen29.dsp_flg1);
      expect(qcashier.screen29.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.dsp_flg1 = defalut;
      print(qcashier.screen29.dsp_flg1);
      expect(qcashier.screen29.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01175_element_check_01152 **********\n\n");
    });

    test('01176_element_check_01153', () async {
      print("\n********** テスト実行：01176_element_check_01153 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.dsp_flg2;
      print(qcashier.screen29.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.dsp_flg2 = testData1;
      print(qcashier.screen29.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.dsp_flg2 = testData2;
      print(qcashier.screen29.dsp_flg2);
      expect(qcashier.screen29.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.dsp_flg2 = defalut;
      print(qcashier.screen29.dsp_flg2);
      expect(qcashier.screen29.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01176_element_check_01153 **********\n\n");
    });

    test('01177_element_check_01154', () async {
      print("\n********** テスト実行：01177_element_check_01154 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.movie01_ext;
      print(qcashier.screen29.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.movie01_ext = testData1;
      print(qcashier.screen29.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.movie01_ext = testData2;
      print(qcashier.screen29.movie01_ext);
      expect(qcashier.screen29.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.movie01_ext = defalut;
      print(qcashier.screen29.movie01_ext);
      expect(qcashier.screen29.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01177_element_check_01154 **********\n\n");
    });

    test('01178_element_check_01155', () async {
      print("\n********** テスト実行：01178_element_check_01155 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.movie02_ext;
      print(qcashier.screen29.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.movie02_ext = testData1;
      print(qcashier.screen29.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.movie02_ext = testData2;
      print(qcashier.screen29.movie02_ext);
      expect(qcashier.screen29.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.movie02_ext = defalut;
      print(qcashier.screen29.movie02_ext);
      expect(qcashier.screen29.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01178_element_check_01155 **********\n\n");
    });

    test('01179_element_check_01156', () async {
      print("\n********** テスト実行：01179_element_check_01156 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.movie03_ext;
      print(qcashier.screen29.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.movie03_ext = testData1;
      print(qcashier.screen29.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.movie03_ext = testData2;
      print(qcashier.screen29.movie03_ext);
      expect(qcashier.screen29.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.movie03_ext = defalut;
      print(qcashier.screen29.movie03_ext);
      expect(qcashier.screen29.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01179_element_check_01156 **********\n\n");
    });

    test('01180_element_check_01157', () async {
      print("\n********** テスト実行：01180_element_check_01157 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.movie04_ext;
      print(qcashier.screen29.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.movie04_ext = testData1;
      print(qcashier.screen29.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.movie04_ext = testData2;
      print(qcashier.screen29.movie04_ext);
      expect(qcashier.screen29.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.movie04_ext = defalut;
      print(qcashier.screen29.movie04_ext);
      expect(qcashier.screen29.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01180_element_check_01157 **********\n\n");
    });

    test('01181_element_check_01158', () async {
      print("\n********** テスト実行：01181_element_check_01158 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line_title;
      print(qcashier.screen29.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line_title = testData1s;
      print(qcashier.screen29.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line_title = testData2s;
      print(qcashier.screen29.line_title);
      expect(qcashier.screen29.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line_title = defalut;
      print(qcashier.screen29.line_title);
      expect(qcashier.screen29.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01181_element_check_01158 **********\n\n");
    });

    test('01182_element_check_01159', () async {
      print("\n********** テスト実行：01182_element_check_01159 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line_title_ex;
      print(qcashier.screen29.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line_title_ex = testData1s;
      print(qcashier.screen29.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line_title_ex = testData2s;
      print(qcashier.screen29.line_title_ex);
      expect(qcashier.screen29.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line_title_ex = defalut;
      print(qcashier.screen29.line_title_ex);
      expect(qcashier.screen29.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01182_element_check_01159 **********\n\n");
    });

    test('01183_element_check_01160', () async {
      print("\n********** テスト実行：01183_element_check_01160 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line1;
      print(qcashier.screen29.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line1 = testData1s;
      print(qcashier.screen29.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line1 = testData2s;
      print(qcashier.screen29.line1);
      expect(qcashier.screen29.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line1 = defalut;
      print(qcashier.screen29.line1);
      expect(qcashier.screen29.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01183_element_check_01160 **********\n\n");
    });

    test('01184_element_check_01161', () async {
      print("\n********** テスト実行：01184_element_check_01161 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line2;
      print(qcashier.screen29.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line2 = testData1s;
      print(qcashier.screen29.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line2 = testData2s;
      print(qcashier.screen29.line2);
      expect(qcashier.screen29.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line2 = defalut;
      print(qcashier.screen29.line2);
      expect(qcashier.screen29.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01184_element_check_01161 **********\n\n");
    });

    test('01185_element_check_01162', () async {
      print("\n********** テスト実行：01185_element_check_01162 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line3;
      print(qcashier.screen29.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line3 = testData1s;
      print(qcashier.screen29.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line3 = testData2s;
      print(qcashier.screen29.line3);
      expect(qcashier.screen29.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line3 = defalut;
      print(qcashier.screen29.line3);
      expect(qcashier.screen29.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01185_element_check_01162 **********\n\n");
    });

    test('01186_element_check_01163', () async {
      print("\n********** テスト実行：01186_element_check_01163 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line4;
      print(qcashier.screen29.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line4 = testData1s;
      print(qcashier.screen29.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line4 = testData2s;
      print(qcashier.screen29.line4);
      expect(qcashier.screen29.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line4 = defalut;
      print(qcashier.screen29.line4);
      expect(qcashier.screen29.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01186_element_check_01163 **********\n\n");
    });

    test('01187_element_check_01164', () async {
      print("\n********** テスト実行：01187_element_check_01164 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line1_ex;
      print(qcashier.screen29.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line1_ex = testData1s;
      print(qcashier.screen29.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line1_ex = testData2s;
      print(qcashier.screen29.line1_ex);
      expect(qcashier.screen29.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line1_ex = defalut;
      print(qcashier.screen29.line1_ex);
      expect(qcashier.screen29.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01187_element_check_01164 **********\n\n");
    });

    test('01188_element_check_01165', () async {
      print("\n********** テスト実行：01188_element_check_01165 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line2_ex;
      print(qcashier.screen29.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line2_ex = testData1s;
      print(qcashier.screen29.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line2_ex = testData2s;
      print(qcashier.screen29.line2_ex);
      expect(qcashier.screen29.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line2_ex = defalut;
      print(qcashier.screen29.line2_ex);
      expect(qcashier.screen29.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01188_element_check_01165 **********\n\n");
    });

    test('01189_element_check_01166', () async {
      print("\n********** テスト実行：01189_element_check_01166 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line3_ex;
      print(qcashier.screen29.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line3_ex = testData1s;
      print(qcashier.screen29.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line3_ex = testData2s;
      print(qcashier.screen29.line3_ex);
      expect(qcashier.screen29.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line3_ex = defalut;
      print(qcashier.screen29.line3_ex);
      expect(qcashier.screen29.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01189_element_check_01166 **********\n\n");
    });

    test('01190_element_check_01167', () async {
      print("\n********** テスト実行：01190_element_check_01167 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.line4_ex;
      print(qcashier.screen29.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.line4_ex = testData1s;
      print(qcashier.screen29.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.line4_ex = testData2s;
      print(qcashier.screen29.line4_ex);
      expect(qcashier.screen29.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.line4_ex = defalut;
      print(qcashier.screen29.line4_ex);
      expect(qcashier.screen29.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01190_element_check_01167 **********\n\n");
    });

    test('01191_element_check_01168', () async {
      print("\n********** テスト実行：01191_element_check_01168 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.sound_led1;
      print(qcashier.screen29.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.sound_led1 = testData1;
      print(qcashier.screen29.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.sound_led1 = testData2;
      print(qcashier.screen29.sound_led1);
      expect(qcashier.screen29.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.sound_led1 = defalut;
      print(qcashier.screen29.sound_led1);
      expect(qcashier.screen29.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01191_element_check_01168 **********\n\n");
    });

    test('01192_element_check_01169', () async {
      print("\n********** テスト実行：01192_element_check_01169 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.sound_led2;
      print(qcashier.screen29.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.sound_led2 = testData1;
      print(qcashier.screen29.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.sound_led2 = testData2;
      print(qcashier.screen29.sound_led2);
      expect(qcashier.screen29.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.sound_led2 = defalut;
      print(qcashier.screen29.sound_led2);
      expect(qcashier.screen29.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01192_element_check_01169 **********\n\n");
    });

    test('01193_element_check_01170', () async {
      print("\n********** テスト実行：01193_element_check_01170 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen29.sound_led3;
      print(qcashier.screen29.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen29.sound_led3 = testData1;
      print(qcashier.screen29.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen29.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen29.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen29.sound_led3 = testData2;
      print(qcashier.screen29.sound_led3);
      expect(qcashier.screen29.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen29.sound_led3 = defalut;
      print(qcashier.screen29.sound_led3);
      expect(qcashier.screen29.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen29.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01193_element_check_01170 **********\n\n");
    });

    test('01194_element_check_01171', () async {
      print("\n********** テスト実行：01194_element_check_01171 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.title;
      print(qcashier.screen30.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.title = testData1s;
      print(qcashier.screen30.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.title = testData2s;
      print(qcashier.screen30.title);
      expect(qcashier.screen30.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.title = defalut;
      print(qcashier.screen30.title);
      expect(qcashier.screen30.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01194_element_check_01171 **********\n\n");
    });

    test('01195_element_check_01172', () async {
      print("\n********** テスト実行：01195_element_check_01172 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.msg1;
      print(qcashier.screen30.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.msg1 = testData1s;
      print(qcashier.screen30.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.msg1 = testData2s;
      print(qcashier.screen30.msg1);
      expect(qcashier.screen30.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.msg1 = defalut;
      print(qcashier.screen30.msg1);
      expect(qcashier.screen30.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01195_element_check_01172 **********\n\n");
    });

    test('01196_element_check_01173', () async {
      print("\n********** テスト実行：01196_element_check_01173 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.msg2;
      print(qcashier.screen30.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.msg2 = testData1s;
      print(qcashier.screen30.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.msg2 = testData2s;
      print(qcashier.screen30.msg2);
      expect(qcashier.screen30.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.msg2 = defalut;
      print(qcashier.screen30.msg2);
      expect(qcashier.screen30.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01196_element_check_01173 **********\n\n");
    });

    test('01197_element_check_01174', () async {
      print("\n********** テスト実行：01197_element_check_01174 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.msg1_size;
      print(qcashier.screen30.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.msg1_size = testData1;
      print(qcashier.screen30.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.msg1_size = testData2;
      print(qcashier.screen30.msg1_size);
      expect(qcashier.screen30.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.msg1_size = defalut;
      print(qcashier.screen30.msg1_size);
      expect(qcashier.screen30.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01197_element_check_01174 **********\n\n");
    });

    test('01198_element_check_01175', () async {
      print("\n********** テスト実行：01198_element_check_01175 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.msg2_size;
      print(qcashier.screen30.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.msg2_size = testData1;
      print(qcashier.screen30.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.msg2_size = testData2;
      print(qcashier.screen30.msg2_size);
      expect(qcashier.screen30.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.msg2_size = defalut;
      print(qcashier.screen30.msg2_size);
      expect(qcashier.screen30.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01198_element_check_01175 **********\n\n");
    });

    test('01199_element_check_01176', () async {
      print("\n********** テスト実行：01199_element_check_01176 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.sound1;
      print(qcashier.screen30.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.sound1 = testData1;
      print(qcashier.screen30.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.sound1 = testData2;
      print(qcashier.screen30.sound1);
      expect(qcashier.screen30.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.sound1 = defalut;
      print(qcashier.screen30.sound1);
      expect(qcashier.screen30.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01199_element_check_01176 **********\n\n");
    });

    test('01200_element_check_01177', () async {
      print("\n********** テスト実行：01200_element_check_01177 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.sound2;
      print(qcashier.screen30.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.sound2 = testData1;
      print(qcashier.screen30.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.sound2 = testData2;
      print(qcashier.screen30.sound2);
      expect(qcashier.screen30.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.sound2 = defalut;
      print(qcashier.screen30.sound2);
      expect(qcashier.screen30.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01200_element_check_01177 **********\n\n");
    });

    test('01201_element_check_01178', () async {
      print("\n********** テスト実行：01201_element_check_01178 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.sound3;
      print(qcashier.screen30.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.sound3 = testData1;
      print(qcashier.screen30.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.sound3 = testData2;
      print(qcashier.screen30.sound3);
      expect(qcashier.screen30.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.sound3 = defalut;
      print(qcashier.screen30.sound3);
      expect(qcashier.screen30.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01201_element_check_01178 **********\n\n");
    });

    test('01202_element_check_01179', () async {
      print("\n********** テスト実行：01202_element_check_01179 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.snd_timer;
      print(qcashier.screen30.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.snd_timer = testData1;
      print(qcashier.screen30.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.snd_timer = testData2;
      print(qcashier.screen30.snd_timer);
      expect(qcashier.screen30.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.snd_timer = defalut;
      print(qcashier.screen30.snd_timer);
      expect(qcashier.screen30.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01202_element_check_01179 **********\n\n");
    });

    test('01203_element_check_01180', () async {
      print("\n********** テスト実行：01203_element_check_01180 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.timer1;
      print(qcashier.screen30.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.timer1 = testData1;
      print(qcashier.screen30.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.timer1 = testData2;
      print(qcashier.screen30.timer1);
      expect(qcashier.screen30.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.timer1 = defalut;
      print(qcashier.screen30.timer1);
      expect(qcashier.screen30.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01203_element_check_01180 **********\n\n");
    });

    test('01204_element_check_01181', () async {
      print("\n********** テスト実行：01204_element_check_01181 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.timer2;
      print(qcashier.screen30.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.timer2 = testData1;
      print(qcashier.screen30.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.timer2 = testData2;
      print(qcashier.screen30.timer2);
      expect(qcashier.screen30.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.timer2 = defalut;
      print(qcashier.screen30.timer2);
      expect(qcashier.screen30.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01204_element_check_01181 **********\n\n");
    });

    test('01205_element_check_01182', () async {
      print("\n********** テスト実行：01205_element_check_01182 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.timer3;
      print(qcashier.screen30.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.timer3 = testData1;
      print(qcashier.screen30.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.timer3 = testData2;
      print(qcashier.screen30.timer3);
      expect(qcashier.screen30.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.timer3 = defalut;
      print(qcashier.screen30.timer3);
      expect(qcashier.screen30.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01205_element_check_01182 **********\n\n");
    });

    test('01206_element_check_01183', () async {
      print("\n********** テスト実行：01206_element_check_01183 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.dsp_flg1;
      print(qcashier.screen30.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.dsp_flg1 = testData1;
      print(qcashier.screen30.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.dsp_flg1 = testData2;
      print(qcashier.screen30.dsp_flg1);
      expect(qcashier.screen30.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.dsp_flg1 = defalut;
      print(qcashier.screen30.dsp_flg1);
      expect(qcashier.screen30.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01206_element_check_01183 **********\n\n");
    });

    test('01207_element_check_01184', () async {
      print("\n********** テスト実行：01207_element_check_01184 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.dsp_flg2;
      print(qcashier.screen30.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.dsp_flg2 = testData1;
      print(qcashier.screen30.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.dsp_flg2 = testData2;
      print(qcashier.screen30.dsp_flg2);
      expect(qcashier.screen30.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.dsp_flg2 = defalut;
      print(qcashier.screen30.dsp_flg2);
      expect(qcashier.screen30.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01207_element_check_01184 **********\n\n");
    });

    test('01208_element_check_01185', () async {
      print("\n********** テスト実行：01208_element_check_01185 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.movie01_ext;
      print(qcashier.screen30.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.movie01_ext = testData1;
      print(qcashier.screen30.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.movie01_ext = testData2;
      print(qcashier.screen30.movie01_ext);
      expect(qcashier.screen30.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.movie01_ext = defalut;
      print(qcashier.screen30.movie01_ext);
      expect(qcashier.screen30.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01208_element_check_01185 **********\n\n");
    });

    test('01209_element_check_01186', () async {
      print("\n********** テスト実行：01209_element_check_01186 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.movie02_ext;
      print(qcashier.screen30.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.movie02_ext = testData1;
      print(qcashier.screen30.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.movie02_ext = testData2;
      print(qcashier.screen30.movie02_ext);
      expect(qcashier.screen30.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.movie02_ext = defalut;
      print(qcashier.screen30.movie02_ext);
      expect(qcashier.screen30.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01209_element_check_01186 **********\n\n");
    });

    test('01210_element_check_01187', () async {
      print("\n********** テスト実行：01210_element_check_01187 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.movie03_ext;
      print(qcashier.screen30.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.movie03_ext = testData1;
      print(qcashier.screen30.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.movie03_ext = testData2;
      print(qcashier.screen30.movie03_ext);
      expect(qcashier.screen30.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.movie03_ext = defalut;
      print(qcashier.screen30.movie03_ext);
      expect(qcashier.screen30.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01210_element_check_01187 **********\n\n");
    });

    test('01211_element_check_01188', () async {
      print("\n********** テスト実行：01211_element_check_01188 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.movie04_ext;
      print(qcashier.screen30.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.movie04_ext = testData1;
      print(qcashier.screen30.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.movie04_ext = testData2;
      print(qcashier.screen30.movie04_ext);
      expect(qcashier.screen30.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.movie04_ext = defalut;
      print(qcashier.screen30.movie04_ext);
      expect(qcashier.screen30.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01211_element_check_01188 **********\n\n");
    });

    test('01212_element_check_01189', () async {
      print("\n********** テスト実行：01212_element_check_01189 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line_title;
      print(qcashier.screen30.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line_title = testData1s;
      print(qcashier.screen30.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line_title = testData2s;
      print(qcashier.screen30.line_title);
      expect(qcashier.screen30.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line_title = defalut;
      print(qcashier.screen30.line_title);
      expect(qcashier.screen30.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01212_element_check_01189 **********\n\n");
    });

    test('01213_element_check_01190', () async {
      print("\n********** テスト実行：01213_element_check_01190 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line_title_ex;
      print(qcashier.screen30.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line_title_ex = testData1s;
      print(qcashier.screen30.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line_title_ex = testData2s;
      print(qcashier.screen30.line_title_ex);
      expect(qcashier.screen30.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line_title_ex = defalut;
      print(qcashier.screen30.line_title_ex);
      expect(qcashier.screen30.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01213_element_check_01190 **********\n\n");
    });

    test('01214_element_check_01191', () async {
      print("\n********** テスト実行：01214_element_check_01191 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line1;
      print(qcashier.screen30.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line1 = testData1s;
      print(qcashier.screen30.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line1 = testData2s;
      print(qcashier.screen30.line1);
      expect(qcashier.screen30.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line1 = defalut;
      print(qcashier.screen30.line1);
      expect(qcashier.screen30.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01214_element_check_01191 **********\n\n");
    });

    test('01215_element_check_01192', () async {
      print("\n********** テスト実行：01215_element_check_01192 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line2;
      print(qcashier.screen30.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line2 = testData1s;
      print(qcashier.screen30.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line2 = testData2s;
      print(qcashier.screen30.line2);
      expect(qcashier.screen30.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line2 = defalut;
      print(qcashier.screen30.line2);
      expect(qcashier.screen30.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01215_element_check_01192 **********\n\n");
    });

    test('01216_element_check_01193', () async {
      print("\n********** テスト実行：01216_element_check_01193 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line3;
      print(qcashier.screen30.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line3 = testData1s;
      print(qcashier.screen30.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line3 = testData2s;
      print(qcashier.screen30.line3);
      expect(qcashier.screen30.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line3 = defalut;
      print(qcashier.screen30.line3);
      expect(qcashier.screen30.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01216_element_check_01193 **********\n\n");
    });

    test('01217_element_check_01194', () async {
      print("\n********** テスト実行：01217_element_check_01194 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line4;
      print(qcashier.screen30.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line4 = testData1s;
      print(qcashier.screen30.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line4 = testData2s;
      print(qcashier.screen30.line4);
      expect(qcashier.screen30.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line4 = defalut;
      print(qcashier.screen30.line4);
      expect(qcashier.screen30.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01217_element_check_01194 **********\n\n");
    });

    test('01218_element_check_01195', () async {
      print("\n********** テスト実行：01218_element_check_01195 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line1_ex;
      print(qcashier.screen30.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line1_ex = testData1s;
      print(qcashier.screen30.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line1_ex = testData2s;
      print(qcashier.screen30.line1_ex);
      expect(qcashier.screen30.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line1_ex = defalut;
      print(qcashier.screen30.line1_ex);
      expect(qcashier.screen30.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01218_element_check_01195 **********\n\n");
    });

    test('01219_element_check_01196', () async {
      print("\n********** テスト実行：01219_element_check_01196 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line2_ex;
      print(qcashier.screen30.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line2_ex = testData1s;
      print(qcashier.screen30.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line2_ex = testData2s;
      print(qcashier.screen30.line2_ex);
      expect(qcashier.screen30.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line2_ex = defalut;
      print(qcashier.screen30.line2_ex);
      expect(qcashier.screen30.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01219_element_check_01196 **********\n\n");
    });

    test('01220_element_check_01197', () async {
      print("\n********** テスト実行：01220_element_check_01197 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line3_ex;
      print(qcashier.screen30.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line3_ex = testData1s;
      print(qcashier.screen30.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line3_ex = testData2s;
      print(qcashier.screen30.line3_ex);
      expect(qcashier.screen30.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line3_ex = defalut;
      print(qcashier.screen30.line3_ex);
      expect(qcashier.screen30.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01220_element_check_01197 **********\n\n");
    });

    test('01221_element_check_01198', () async {
      print("\n********** テスト実行：01221_element_check_01198 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.line4_ex;
      print(qcashier.screen30.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.line4_ex = testData1s;
      print(qcashier.screen30.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.line4_ex = testData2s;
      print(qcashier.screen30.line4_ex);
      expect(qcashier.screen30.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.line4_ex = defalut;
      print(qcashier.screen30.line4_ex);
      expect(qcashier.screen30.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01221_element_check_01198 **********\n\n");
    });

    test('01222_element_check_01199', () async {
      print("\n********** テスト実行：01222_element_check_01199 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.sound_led1;
      print(qcashier.screen30.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.sound_led1 = testData1;
      print(qcashier.screen30.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.sound_led1 = testData2;
      print(qcashier.screen30.sound_led1);
      expect(qcashier.screen30.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.sound_led1 = defalut;
      print(qcashier.screen30.sound_led1);
      expect(qcashier.screen30.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01222_element_check_01199 **********\n\n");
    });

    test('01223_element_check_01200', () async {
      print("\n********** テスト実行：01223_element_check_01200 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.sound_led2;
      print(qcashier.screen30.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.sound_led2 = testData1;
      print(qcashier.screen30.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.sound_led2 = testData2;
      print(qcashier.screen30.sound_led2);
      expect(qcashier.screen30.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.sound_led2 = defalut;
      print(qcashier.screen30.sound_led2);
      expect(qcashier.screen30.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01223_element_check_01200 **********\n\n");
    });

    test('01224_element_check_01201', () async {
      print("\n********** テスト実行：01224_element_check_01201 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen30.sound_led3;
      print(qcashier.screen30.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen30.sound_led3 = testData1;
      print(qcashier.screen30.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen30.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen30.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen30.sound_led3 = testData2;
      print(qcashier.screen30.sound_led3);
      expect(qcashier.screen30.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen30.sound_led3 = defalut;
      print(qcashier.screen30.sound_led3);
      expect(qcashier.screen30.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen30.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01224_element_check_01201 **********\n\n");
    });

    test('01225_element_check_01202', () async {
      print("\n********** テスト実行：01225_element_check_01202 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.title;
      print(qcashier.screen31.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.title = testData1s;
      print(qcashier.screen31.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.title = testData2s;
      print(qcashier.screen31.title);
      expect(qcashier.screen31.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.title = defalut;
      print(qcashier.screen31.title);
      expect(qcashier.screen31.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01225_element_check_01202 **********\n\n");
    });

    test('01226_element_check_01203', () async {
      print("\n********** テスト実行：01226_element_check_01203 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.msg1;
      print(qcashier.screen31.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.msg1 = testData1s;
      print(qcashier.screen31.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.msg1 = testData2s;
      print(qcashier.screen31.msg1);
      expect(qcashier.screen31.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.msg1 = defalut;
      print(qcashier.screen31.msg1);
      expect(qcashier.screen31.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01226_element_check_01203 **********\n\n");
    });

    test('01227_element_check_01204', () async {
      print("\n********** テスト実行：01227_element_check_01204 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.msg2;
      print(qcashier.screen31.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.msg2 = testData1s;
      print(qcashier.screen31.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.msg2 = testData2s;
      print(qcashier.screen31.msg2);
      expect(qcashier.screen31.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.msg2 = defalut;
      print(qcashier.screen31.msg2);
      expect(qcashier.screen31.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01227_element_check_01204 **********\n\n");
    });

    test('01228_element_check_01205', () async {
      print("\n********** テスト実行：01228_element_check_01205 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.msg1_size;
      print(qcashier.screen31.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.msg1_size = testData1;
      print(qcashier.screen31.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.msg1_size = testData2;
      print(qcashier.screen31.msg1_size);
      expect(qcashier.screen31.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.msg1_size = defalut;
      print(qcashier.screen31.msg1_size);
      expect(qcashier.screen31.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01228_element_check_01205 **********\n\n");
    });

    test('01229_element_check_01206', () async {
      print("\n********** テスト実行：01229_element_check_01206 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.msg2_size;
      print(qcashier.screen31.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.msg2_size = testData1;
      print(qcashier.screen31.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.msg2_size = testData2;
      print(qcashier.screen31.msg2_size);
      expect(qcashier.screen31.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.msg2_size = defalut;
      print(qcashier.screen31.msg2_size);
      expect(qcashier.screen31.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01229_element_check_01206 **********\n\n");
    });

    test('01230_element_check_01207', () async {
      print("\n********** テスト実行：01230_element_check_01207 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.sound1;
      print(qcashier.screen31.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.sound1 = testData1;
      print(qcashier.screen31.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.sound1 = testData2;
      print(qcashier.screen31.sound1);
      expect(qcashier.screen31.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.sound1 = defalut;
      print(qcashier.screen31.sound1);
      expect(qcashier.screen31.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01230_element_check_01207 **********\n\n");
    });

    test('01231_element_check_01208', () async {
      print("\n********** テスト実行：01231_element_check_01208 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.sound2;
      print(qcashier.screen31.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.sound2 = testData1;
      print(qcashier.screen31.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.sound2 = testData2;
      print(qcashier.screen31.sound2);
      expect(qcashier.screen31.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.sound2 = defalut;
      print(qcashier.screen31.sound2);
      expect(qcashier.screen31.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01231_element_check_01208 **********\n\n");
    });

    test('01232_element_check_01209', () async {
      print("\n********** テスト実行：01232_element_check_01209 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.sound3;
      print(qcashier.screen31.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.sound3 = testData1;
      print(qcashier.screen31.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.sound3 = testData2;
      print(qcashier.screen31.sound3);
      expect(qcashier.screen31.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.sound3 = defalut;
      print(qcashier.screen31.sound3);
      expect(qcashier.screen31.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01232_element_check_01209 **********\n\n");
    });

    test('01233_element_check_01210', () async {
      print("\n********** テスト実行：01233_element_check_01210 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.snd_timer;
      print(qcashier.screen31.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.snd_timer = testData1;
      print(qcashier.screen31.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.snd_timer = testData2;
      print(qcashier.screen31.snd_timer);
      expect(qcashier.screen31.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.snd_timer = defalut;
      print(qcashier.screen31.snd_timer);
      expect(qcashier.screen31.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01233_element_check_01210 **********\n\n");
    });

    test('01234_element_check_01211', () async {
      print("\n********** テスト実行：01234_element_check_01211 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.timer1;
      print(qcashier.screen31.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.timer1 = testData1;
      print(qcashier.screen31.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.timer1 = testData2;
      print(qcashier.screen31.timer1);
      expect(qcashier.screen31.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.timer1 = defalut;
      print(qcashier.screen31.timer1);
      expect(qcashier.screen31.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01234_element_check_01211 **********\n\n");
    });

    test('01235_element_check_01212', () async {
      print("\n********** テスト実行：01235_element_check_01212 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.timer2;
      print(qcashier.screen31.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.timer2 = testData1;
      print(qcashier.screen31.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.timer2 = testData2;
      print(qcashier.screen31.timer2);
      expect(qcashier.screen31.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.timer2 = defalut;
      print(qcashier.screen31.timer2);
      expect(qcashier.screen31.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01235_element_check_01212 **********\n\n");
    });

    test('01236_element_check_01213', () async {
      print("\n********** テスト実行：01236_element_check_01213 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.timer3;
      print(qcashier.screen31.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.timer3 = testData1;
      print(qcashier.screen31.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.timer3 = testData2;
      print(qcashier.screen31.timer3);
      expect(qcashier.screen31.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.timer3 = defalut;
      print(qcashier.screen31.timer3);
      expect(qcashier.screen31.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01236_element_check_01213 **********\n\n");
    });

    test('01237_element_check_01214', () async {
      print("\n********** テスト実行：01237_element_check_01214 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.dsp_flg1;
      print(qcashier.screen31.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.dsp_flg1 = testData1;
      print(qcashier.screen31.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.dsp_flg1 = testData2;
      print(qcashier.screen31.dsp_flg1);
      expect(qcashier.screen31.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.dsp_flg1 = defalut;
      print(qcashier.screen31.dsp_flg1);
      expect(qcashier.screen31.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01237_element_check_01214 **********\n\n");
    });

    test('01238_element_check_01215', () async {
      print("\n********** テスト実行：01238_element_check_01215 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.dsp_flg2;
      print(qcashier.screen31.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.dsp_flg2 = testData1;
      print(qcashier.screen31.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.dsp_flg2 = testData2;
      print(qcashier.screen31.dsp_flg2);
      expect(qcashier.screen31.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.dsp_flg2 = defalut;
      print(qcashier.screen31.dsp_flg2);
      expect(qcashier.screen31.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01238_element_check_01215 **********\n\n");
    });

    test('01239_element_check_01216', () async {
      print("\n********** テスト実行：01239_element_check_01216 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.movie01_ext;
      print(qcashier.screen31.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.movie01_ext = testData1;
      print(qcashier.screen31.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.movie01_ext = testData2;
      print(qcashier.screen31.movie01_ext);
      expect(qcashier.screen31.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.movie01_ext = defalut;
      print(qcashier.screen31.movie01_ext);
      expect(qcashier.screen31.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01239_element_check_01216 **********\n\n");
    });

    test('01240_element_check_01217', () async {
      print("\n********** テスト実行：01240_element_check_01217 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.movie02_ext;
      print(qcashier.screen31.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.movie02_ext = testData1;
      print(qcashier.screen31.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.movie02_ext = testData2;
      print(qcashier.screen31.movie02_ext);
      expect(qcashier.screen31.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.movie02_ext = defalut;
      print(qcashier.screen31.movie02_ext);
      expect(qcashier.screen31.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01240_element_check_01217 **********\n\n");
    });

    test('01241_element_check_01218', () async {
      print("\n********** テスト実行：01241_element_check_01218 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.movie03_ext;
      print(qcashier.screen31.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.movie03_ext = testData1;
      print(qcashier.screen31.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.movie03_ext = testData2;
      print(qcashier.screen31.movie03_ext);
      expect(qcashier.screen31.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.movie03_ext = defalut;
      print(qcashier.screen31.movie03_ext);
      expect(qcashier.screen31.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01241_element_check_01218 **********\n\n");
    });

    test('01242_element_check_01219', () async {
      print("\n********** テスト実行：01242_element_check_01219 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.movie04_ext;
      print(qcashier.screen31.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.movie04_ext = testData1;
      print(qcashier.screen31.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.movie04_ext = testData2;
      print(qcashier.screen31.movie04_ext);
      expect(qcashier.screen31.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.movie04_ext = defalut;
      print(qcashier.screen31.movie04_ext);
      expect(qcashier.screen31.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01242_element_check_01219 **********\n\n");
    });

    test('01243_element_check_01220', () async {
      print("\n********** テスト実行：01243_element_check_01220 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line_title;
      print(qcashier.screen31.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line_title = testData1s;
      print(qcashier.screen31.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line_title = testData2s;
      print(qcashier.screen31.line_title);
      expect(qcashier.screen31.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line_title = defalut;
      print(qcashier.screen31.line_title);
      expect(qcashier.screen31.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01243_element_check_01220 **********\n\n");
    });

    test('01244_element_check_01221', () async {
      print("\n********** テスト実行：01244_element_check_01221 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line_title_ex;
      print(qcashier.screen31.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line_title_ex = testData1s;
      print(qcashier.screen31.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line_title_ex = testData2s;
      print(qcashier.screen31.line_title_ex);
      expect(qcashier.screen31.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line_title_ex = defalut;
      print(qcashier.screen31.line_title_ex);
      expect(qcashier.screen31.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01244_element_check_01221 **********\n\n");
    });

    test('01245_element_check_01222', () async {
      print("\n********** テスト実行：01245_element_check_01222 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line1;
      print(qcashier.screen31.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line1 = testData1s;
      print(qcashier.screen31.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line1 = testData2s;
      print(qcashier.screen31.line1);
      expect(qcashier.screen31.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line1 = defalut;
      print(qcashier.screen31.line1);
      expect(qcashier.screen31.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01245_element_check_01222 **********\n\n");
    });

    test('01246_element_check_01223', () async {
      print("\n********** テスト実行：01246_element_check_01223 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line2;
      print(qcashier.screen31.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line2 = testData1s;
      print(qcashier.screen31.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line2 = testData2s;
      print(qcashier.screen31.line2);
      expect(qcashier.screen31.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line2 = defalut;
      print(qcashier.screen31.line2);
      expect(qcashier.screen31.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01246_element_check_01223 **********\n\n");
    });

    test('01247_element_check_01224', () async {
      print("\n********** テスト実行：01247_element_check_01224 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line3;
      print(qcashier.screen31.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line3 = testData1s;
      print(qcashier.screen31.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line3 = testData2s;
      print(qcashier.screen31.line3);
      expect(qcashier.screen31.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line3 = defalut;
      print(qcashier.screen31.line3);
      expect(qcashier.screen31.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01247_element_check_01224 **********\n\n");
    });

    test('01248_element_check_01225', () async {
      print("\n********** テスト実行：01248_element_check_01225 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line4;
      print(qcashier.screen31.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line4 = testData1s;
      print(qcashier.screen31.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line4 = testData2s;
      print(qcashier.screen31.line4);
      expect(qcashier.screen31.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line4 = defalut;
      print(qcashier.screen31.line4);
      expect(qcashier.screen31.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01248_element_check_01225 **********\n\n");
    });

    test('01249_element_check_01226', () async {
      print("\n********** テスト実行：01249_element_check_01226 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line1_ex;
      print(qcashier.screen31.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line1_ex = testData1s;
      print(qcashier.screen31.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line1_ex = testData2s;
      print(qcashier.screen31.line1_ex);
      expect(qcashier.screen31.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line1_ex = defalut;
      print(qcashier.screen31.line1_ex);
      expect(qcashier.screen31.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01249_element_check_01226 **********\n\n");
    });

    test('01250_element_check_01227', () async {
      print("\n********** テスト実行：01250_element_check_01227 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line2_ex;
      print(qcashier.screen31.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line2_ex = testData1s;
      print(qcashier.screen31.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line2_ex = testData2s;
      print(qcashier.screen31.line2_ex);
      expect(qcashier.screen31.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line2_ex = defalut;
      print(qcashier.screen31.line2_ex);
      expect(qcashier.screen31.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01250_element_check_01227 **********\n\n");
    });

    test('01251_element_check_01228', () async {
      print("\n********** テスト実行：01251_element_check_01228 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line3_ex;
      print(qcashier.screen31.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line3_ex = testData1s;
      print(qcashier.screen31.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line3_ex = testData2s;
      print(qcashier.screen31.line3_ex);
      expect(qcashier.screen31.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line3_ex = defalut;
      print(qcashier.screen31.line3_ex);
      expect(qcashier.screen31.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01251_element_check_01228 **********\n\n");
    });

    test('01252_element_check_01229', () async {
      print("\n********** テスト実行：01252_element_check_01229 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.line4_ex;
      print(qcashier.screen31.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.line4_ex = testData1s;
      print(qcashier.screen31.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.line4_ex = testData2s;
      print(qcashier.screen31.line4_ex);
      expect(qcashier.screen31.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.line4_ex = defalut;
      print(qcashier.screen31.line4_ex);
      expect(qcashier.screen31.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01252_element_check_01229 **********\n\n");
    });

    test('01253_element_check_01230', () async {
      print("\n********** テスト実行：01253_element_check_01230 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.sound_led1;
      print(qcashier.screen31.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.sound_led1 = testData1;
      print(qcashier.screen31.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.sound_led1 = testData2;
      print(qcashier.screen31.sound_led1);
      expect(qcashier.screen31.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.sound_led1 = defalut;
      print(qcashier.screen31.sound_led1);
      expect(qcashier.screen31.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01253_element_check_01230 **********\n\n");
    });

    test('01254_element_check_01231', () async {
      print("\n********** テスト実行：01254_element_check_01231 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.sound_led2;
      print(qcashier.screen31.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.sound_led2 = testData1;
      print(qcashier.screen31.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.sound_led2 = testData2;
      print(qcashier.screen31.sound_led2);
      expect(qcashier.screen31.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.sound_led2 = defalut;
      print(qcashier.screen31.sound_led2);
      expect(qcashier.screen31.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01254_element_check_01231 **********\n\n");
    });

    test('01255_element_check_01232', () async {
      print("\n********** テスト実行：01255_element_check_01232 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen31.sound_led3;
      print(qcashier.screen31.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen31.sound_led3 = testData1;
      print(qcashier.screen31.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen31.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen31.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen31.sound_led3 = testData2;
      print(qcashier.screen31.sound_led3);
      expect(qcashier.screen31.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen31.sound_led3 = defalut;
      print(qcashier.screen31.sound_led3);
      expect(qcashier.screen31.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen31.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01255_element_check_01232 **********\n\n");
    });

    test('01256_element_check_01233', () async {
      print("\n********** テスト実行：01256_element_check_01233 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.title;
      print(qcashier.screen32.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.title = testData1s;
      print(qcashier.screen32.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.title = testData2s;
      print(qcashier.screen32.title);
      expect(qcashier.screen32.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.title = defalut;
      print(qcashier.screen32.title);
      expect(qcashier.screen32.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01256_element_check_01233 **********\n\n");
    });

    test('01257_element_check_01234', () async {
      print("\n********** テスト実行：01257_element_check_01234 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.msg1;
      print(qcashier.screen32.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.msg1 = testData1s;
      print(qcashier.screen32.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.msg1 = testData2s;
      print(qcashier.screen32.msg1);
      expect(qcashier.screen32.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.msg1 = defalut;
      print(qcashier.screen32.msg1);
      expect(qcashier.screen32.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01257_element_check_01234 **********\n\n");
    });

    test('01258_element_check_01235', () async {
      print("\n********** テスト実行：01258_element_check_01235 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.msg2;
      print(qcashier.screen32.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.msg2 = testData1s;
      print(qcashier.screen32.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.msg2 = testData2s;
      print(qcashier.screen32.msg2);
      expect(qcashier.screen32.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.msg2 = defalut;
      print(qcashier.screen32.msg2);
      expect(qcashier.screen32.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01258_element_check_01235 **********\n\n");
    });

    test('01259_element_check_01236', () async {
      print("\n********** テスト実行：01259_element_check_01236 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.msg1_size;
      print(qcashier.screen32.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.msg1_size = testData1;
      print(qcashier.screen32.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.msg1_size = testData2;
      print(qcashier.screen32.msg1_size);
      expect(qcashier.screen32.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.msg1_size = defalut;
      print(qcashier.screen32.msg1_size);
      expect(qcashier.screen32.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01259_element_check_01236 **********\n\n");
    });

    test('01260_element_check_01237', () async {
      print("\n********** テスト実行：01260_element_check_01237 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.msg2_size;
      print(qcashier.screen32.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.msg2_size = testData1;
      print(qcashier.screen32.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.msg2_size = testData2;
      print(qcashier.screen32.msg2_size);
      expect(qcashier.screen32.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.msg2_size = defalut;
      print(qcashier.screen32.msg2_size);
      expect(qcashier.screen32.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01260_element_check_01237 **********\n\n");
    });

    test('01261_element_check_01238', () async {
      print("\n********** テスト実行：01261_element_check_01238 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.sound1;
      print(qcashier.screen32.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.sound1 = testData1;
      print(qcashier.screen32.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.sound1 = testData2;
      print(qcashier.screen32.sound1);
      expect(qcashier.screen32.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.sound1 = defalut;
      print(qcashier.screen32.sound1);
      expect(qcashier.screen32.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01261_element_check_01238 **********\n\n");
    });

    test('01262_element_check_01239', () async {
      print("\n********** テスト実行：01262_element_check_01239 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.sound2;
      print(qcashier.screen32.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.sound2 = testData1;
      print(qcashier.screen32.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.sound2 = testData2;
      print(qcashier.screen32.sound2);
      expect(qcashier.screen32.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.sound2 = defalut;
      print(qcashier.screen32.sound2);
      expect(qcashier.screen32.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01262_element_check_01239 **********\n\n");
    });

    test('01263_element_check_01240', () async {
      print("\n********** テスト実行：01263_element_check_01240 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.sound3;
      print(qcashier.screen32.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.sound3 = testData1;
      print(qcashier.screen32.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.sound3 = testData2;
      print(qcashier.screen32.sound3);
      expect(qcashier.screen32.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.sound3 = defalut;
      print(qcashier.screen32.sound3);
      expect(qcashier.screen32.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01263_element_check_01240 **********\n\n");
    });

    test('01264_element_check_01241', () async {
      print("\n********** テスト実行：01264_element_check_01241 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.snd_timer;
      print(qcashier.screen32.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.snd_timer = testData1;
      print(qcashier.screen32.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.snd_timer = testData2;
      print(qcashier.screen32.snd_timer);
      expect(qcashier.screen32.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.snd_timer = defalut;
      print(qcashier.screen32.snd_timer);
      expect(qcashier.screen32.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01264_element_check_01241 **********\n\n");
    });

    test('01265_element_check_01242', () async {
      print("\n********** テスト実行：01265_element_check_01242 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.timer1;
      print(qcashier.screen32.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.timer1 = testData1;
      print(qcashier.screen32.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.timer1 = testData2;
      print(qcashier.screen32.timer1);
      expect(qcashier.screen32.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.timer1 = defalut;
      print(qcashier.screen32.timer1);
      expect(qcashier.screen32.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01265_element_check_01242 **********\n\n");
    });

    test('01266_element_check_01243', () async {
      print("\n********** テスト実行：01266_element_check_01243 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.timer2;
      print(qcashier.screen32.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.timer2 = testData1;
      print(qcashier.screen32.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.timer2 = testData2;
      print(qcashier.screen32.timer2);
      expect(qcashier.screen32.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.timer2 = defalut;
      print(qcashier.screen32.timer2);
      expect(qcashier.screen32.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01266_element_check_01243 **********\n\n");
    });

    test('01267_element_check_01244', () async {
      print("\n********** テスト実行：01267_element_check_01244 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.timer3;
      print(qcashier.screen32.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.timer3 = testData1;
      print(qcashier.screen32.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.timer3 = testData2;
      print(qcashier.screen32.timer3);
      expect(qcashier.screen32.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.timer3 = defalut;
      print(qcashier.screen32.timer3);
      expect(qcashier.screen32.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01267_element_check_01244 **********\n\n");
    });

    test('01268_element_check_01245', () async {
      print("\n********** テスト実行：01268_element_check_01245 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.dsp_flg1;
      print(qcashier.screen32.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.dsp_flg1 = testData1;
      print(qcashier.screen32.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.dsp_flg1 = testData2;
      print(qcashier.screen32.dsp_flg1);
      expect(qcashier.screen32.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.dsp_flg1 = defalut;
      print(qcashier.screen32.dsp_flg1);
      expect(qcashier.screen32.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01268_element_check_01245 **********\n\n");
    });

    test('01269_element_check_01246', () async {
      print("\n********** テスト実行：01269_element_check_01246 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.dsp_flg2;
      print(qcashier.screen32.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.dsp_flg2 = testData1;
      print(qcashier.screen32.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.dsp_flg2 = testData2;
      print(qcashier.screen32.dsp_flg2);
      expect(qcashier.screen32.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.dsp_flg2 = defalut;
      print(qcashier.screen32.dsp_flg2);
      expect(qcashier.screen32.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01269_element_check_01246 **********\n\n");
    });

    test('01270_element_check_01247', () async {
      print("\n********** テスト実行：01270_element_check_01247 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.movie01_ext;
      print(qcashier.screen32.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.movie01_ext = testData1;
      print(qcashier.screen32.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.movie01_ext = testData2;
      print(qcashier.screen32.movie01_ext);
      expect(qcashier.screen32.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.movie01_ext = defalut;
      print(qcashier.screen32.movie01_ext);
      expect(qcashier.screen32.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01270_element_check_01247 **********\n\n");
    });

    test('01271_element_check_01248', () async {
      print("\n********** テスト実行：01271_element_check_01248 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.movie02_ext;
      print(qcashier.screen32.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.movie02_ext = testData1;
      print(qcashier.screen32.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.movie02_ext = testData2;
      print(qcashier.screen32.movie02_ext);
      expect(qcashier.screen32.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.movie02_ext = defalut;
      print(qcashier.screen32.movie02_ext);
      expect(qcashier.screen32.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01271_element_check_01248 **********\n\n");
    });

    test('01272_element_check_01249', () async {
      print("\n********** テスト実行：01272_element_check_01249 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.movie03_ext;
      print(qcashier.screen32.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.movie03_ext = testData1;
      print(qcashier.screen32.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.movie03_ext = testData2;
      print(qcashier.screen32.movie03_ext);
      expect(qcashier.screen32.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.movie03_ext = defalut;
      print(qcashier.screen32.movie03_ext);
      expect(qcashier.screen32.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01272_element_check_01249 **********\n\n");
    });

    test('01273_element_check_01250', () async {
      print("\n********** テスト実行：01273_element_check_01250 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.movie04_ext;
      print(qcashier.screen32.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.movie04_ext = testData1;
      print(qcashier.screen32.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.movie04_ext = testData2;
      print(qcashier.screen32.movie04_ext);
      expect(qcashier.screen32.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.movie04_ext = defalut;
      print(qcashier.screen32.movie04_ext);
      expect(qcashier.screen32.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01273_element_check_01250 **********\n\n");
    });

    test('01274_element_check_01251', () async {
      print("\n********** テスト実行：01274_element_check_01251 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line_title;
      print(qcashier.screen32.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line_title = testData1s;
      print(qcashier.screen32.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line_title = testData2s;
      print(qcashier.screen32.line_title);
      expect(qcashier.screen32.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line_title = defalut;
      print(qcashier.screen32.line_title);
      expect(qcashier.screen32.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01274_element_check_01251 **********\n\n");
    });

    test('01275_element_check_01252', () async {
      print("\n********** テスト実行：01275_element_check_01252 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line_title_ex;
      print(qcashier.screen32.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line_title_ex = testData1s;
      print(qcashier.screen32.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line_title_ex = testData2s;
      print(qcashier.screen32.line_title_ex);
      expect(qcashier.screen32.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line_title_ex = defalut;
      print(qcashier.screen32.line_title_ex);
      expect(qcashier.screen32.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01275_element_check_01252 **********\n\n");
    });

    test('01276_element_check_01253', () async {
      print("\n********** テスト実行：01276_element_check_01253 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line1;
      print(qcashier.screen32.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line1 = testData1s;
      print(qcashier.screen32.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line1 = testData2s;
      print(qcashier.screen32.line1);
      expect(qcashier.screen32.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line1 = defalut;
      print(qcashier.screen32.line1);
      expect(qcashier.screen32.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01276_element_check_01253 **********\n\n");
    });

    test('01277_element_check_01254', () async {
      print("\n********** テスト実行：01277_element_check_01254 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line2;
      print(qcashier.screen32.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line2 = testData1s;
      print(qcashier.screen32.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line2 = testData2s;
      print(qcashier.screen32.line2);
      expect(qcashier.screen32.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line2 = defalut;
      print(qcashier.screen32.line2);
      expect(qcashier.screen32.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01277_element_check_01254 **********\n\n");
    });

    test('01278_element_check_01255', () async {
      print("\n********** テスト実行：01278_element_check_01255 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line3;
      print(qcashier.screen32.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line3 = testData1s;
      print(qcashier.screen32.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line3 = testData2s;
      print(qcashier.screen32.line3);
      expect(qcashier.screen32.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line3 = defalut;
      print(qcashier.screen32.line3);
      expect(qcashier.screen32.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01278_element_check_01255 **********\n\n");
    });

    test('01279_element_check_01256', () async {
      print("\n********** テスト実行：01279_element_check_01256 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line4;
      print(qcashier.screen32.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line4 = testData1s;
      print(qcashier.screen32.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line4 = testData2s;
      print(qcashier.screen32.line4);
      expect(qcashier.screen32.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line4 = defalut;
      print(qcashier.screen32.line4);
      expect(qcashier.screen32.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01279_element_check_01256 **********\n\n");
    });

    test('01280_element_check_01257', () async {
      print("\n********** テスト実行：01280_element_check_01257 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line1_ex;
      print(qcashier.screen32.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line1_ex = testData1s;
      print(qcashier.screen32.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line1_ex = testData2s;
      print(qcashier.screen32.line1_ex);
      expect(qcashier.screen32.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line1_ex = defalut;
      print(qcashier.screen32.line1_ex);
      expect(qcashier.screen32.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01280_element_check_01257 **********\n\n");
    });

    test('01281_element_check_01258', () async {
      print("\n********** テスト実行：01281_element_check_01258 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line2_ex;
      print(qcashier.screen32.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line2_ex = testData1s;
      print(qcashier.screen32.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line2_ex = testData2s;
      print(qcashier.screen32.line2_ex);
      expect(qcashier.screen32.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line2_ex = defalut;
      print(qcashier.screen32.line2_ex);
      expect(qcashier.screen32.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01281_element_check_01258 **********\n\n");
    });

    test('01282_element_check_01259', () async {
      print("\n********** テスト実行：01282_element_check_01259 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line3_ex;
      print(qcashier.screen32.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line3_ex = testData1s;
      print(qcashier.screen32.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line3_ex = testData2s;
      print(qcashier.screen32.line3_ex);
      expect(qcashier.screen32.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line3_ex = defalut;
      print(qcashier.screen32.line3_ex);
      expect(qcashier.screen32.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01282_element_check_01259 **********\n\n");
    });

    test('01283_element_check_01260', () async {
      print("\n********** テスト実行：01283_element_check_01260 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.line4_ex;
      print(qcashier.screen32.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.line4_ex = testData1s;
      print(qcashier.screen32.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.line4_ex = testData2s;
      print(qcashier.screen32.line4_ex);
      expect(qcashier.screen32.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.line4_ex = defalut;
      print(qcashier.screen32.line4_ex);
      expect(qcashier.screen32.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01283_element_check_01260 **********\n\n");
    });

    test('01284_element_check_01261', () async {
      print("\n********** テスト実行：01284_element_check_01261 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.sound_led1;
      print(qcashier.screen32.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.sound_led1 = testData1;
      print(qcashier.screen32.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.sound_led1 = testData2;
      print(qcashier.screen32.sound_led1);
      expect(qcashier.screen32.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.sound_led1 = defalut;
      print(qcashier.screen32.sound_led1);
      expect(qcashier.screen32.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01284_element_check_01261 **********\n\n");
    });

    test('01285_element_check_01262', () async {
      print("\n********** テスト実行：01285_element_check_01262 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.sound_led2;
      print(qcashier.screen32.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.sound_led2 = testData1;
      print(qcashier.screen32.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.sound_led2 = testData2;
      print(qcashier.screen32.sound_led2);
      expect(qcashier.screen32.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.sound_led2 = defalut;
      print(qcashier.screen32.sound_led2);
      expect(qcashier.screen32.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01285_element_check_01262 **********\n\n");
    });

    test('01286_element_check_01263', () async {
      print("\n********** テスト実行：01286_element_check_01263 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen32.sound_led3;
      print(qcashier.screen32.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen32.sound_led3 = testData1;
      print(qcashier.screen32.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen32.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen32.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen32.sound_led3 = testData2;
      print(qcashier.screen32.sound_led3);
      expect(qcashier.screen32.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen32.sound_led3 = defalut;
      print(qcashier.screen32.sound_led3);
      expect(qcashier.screen32.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen32.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01286_element_check_01263 **********\n\n");
    });

    test('01287_element_check_01264', () async {
      print("\n********** テスト実行：01287_element_check_01264 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.title;
      print(qcashier.screen33.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.title = testData1s;
      print(qcashier.screen33.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.title = testData2s;
      print(qcashier.screen33.title);
      expect(qcashier.screen33.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.title = defalut;
      print(qcashier.screen33.title);
      expect(qcashier.screen33.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01287_element_check_01264 **********\n\n");
    });

    test('01288_element_check_01265', () async {
      print("\n********** テスト実行：01288_element_check_01265 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.msg1;
      print(qcashier.screen33.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.msg1 = testData1s;
      print(qcashier.screen33.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.msg1 = testData2s;
      print(qcashier.screen33.msg1);
      expect(qcashier.screen33.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.msg1 = defalut;
      print(qcashier.screen33.msg1);
      expect(qcashier.screen33.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01288_element_check_01265 **********\n\n");
    });

    test('01289_element_check_01266', () async {
      print("\n********** テスト実行：01289_element_check_01266 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.msg2;
      print(qcashier.screen33.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.msg2 = testData1s;
      print(qcashier.screen33.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.msg2 = testData2s;
      print(qcashier.screen33.msg2);
      expect(qcashier.screen33.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.msg2 = defalut;
      print(qcashier.screen33.msg2);
      expect(qcashier.screen33.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01289_element_check_01266 **********\n\n");
    });

    test('01290_element_check_01267', () async {
      print("\n********** テスト実行：01290_element_check_01267 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.msg1_size;
      print(qcashier.screen33.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.msg1_size = testData1;
      print(qcashier.screen33.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.msg1_size = testData2;
      print(qcashier.screen33.msg1_size);
      expect(qcashier.screen33.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.msg1_size = defalut;
      print(qcashier.screen33.msg1_size);
      expect(qcashier.screen33.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01290_element_check_01267 **********\n\n");
    });

    test('01291_element_check_01268', () async {
      print("\n********** テスト実行：01291_element_check_01268 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.msg2_size;
      print(qcashier.screen33.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.msg2_size = testData1;
      print(qcashier.screen33.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.msg2_size = testData2;
      print(qcashier.screen33.msg2_size);
      expect(qcashier.screen33.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.msg2_size = defalut;
      print(qcashier.screen33.msg2_size);
      expect(qcashier.screen33.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01291_element_check_01268 **********\n\n");
    });

    test('01292_element_check_01269', () async {
      print("\n********** テスト実行：01292_element_check_01269 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.sound1;
      print(qcashier.screen33.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.sound1 = testData1;
      print(qcashier.screen33.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.sound1 = testData2;
      print(qcashier.screen33.sound1);
      expect(qcashier.screen33.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.sound1 = defalut;
      print(qcashier.screen33.sound1);
      expect(qcashier.screen33.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01292_element_check_01269 **********\n\n");
    });

    test('01293_element_check_01270', () async {
      print("\n********** テスト実行：01293_element_check_01270 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.sound2;
      print(qcashier.screen33.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.sound2 = testData1;
      print(qcashier.screen33.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.sound2 = testData2;
      print(qcashier.screen33.sound2);
      expect(qcashier.screen33.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.sound2 = defalut;
      print(qcashier.screen33.sound2);
      expect(qcashier.screen33.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01293_element_check_01270 **********\n\n");
    });

    test('01294_element_check_01271', () async {
      print("\n********** テスト実行：01294_element_check_01271 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.sound3;
      print(qcashier.screen33.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.sound3 = testData1;
      print(qcashier.screen33.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.sound3 = testData2;
      print(qcashier.screen33.sound3);
      expect(qcashier.screen33.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.sound3 = defalut;
      print(qcashier.screen33.sound3);
      expect(qcashier.screen33.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01294_element_check_01271 **********\n\n");
    });

    test('01295_element_check_01272', () async {
      print("\n********** テスト実行：01295_element_check_01272 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.snd_timer;
      print(qcashier.screen33.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.snd_timer = testData1;
      print(qcashier.screen33.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.snd_timer = testData2;
      print(qcashier.screen33.snd_timer);
      expect(qcashier.screen33.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.snd_timer = defalut;
      print(qcashier.screen33.snd_timer);
      expect(qcashier.screen33.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01295_element_check_01272 **********\n\n");
    });

    test('01296_element_check_01273', () async {
      print("\n********** テスト実行：01296_element_check_01273 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.timer1;
      print(qcashier.screen33.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.timer1 = testData1;
      print(qcashier.screen33.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.timer1 = testData2;
      print(qcashier.screen33.timer1);
      expect(qcashier.screen33.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.timer1 = defalut;
      print(qcashier.screen33.timer1);
      expect(qcashier.screen33.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01296_element_check_01273 **********\n\n");
    });

    test('01297_element_check_01274', () async {
      print("\n********** テスト実行：01297_element_check_01274 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.timer2;
      print(qcashier.screen33.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.timer2 = testData1;
      print(qcashier.screen33.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.timer2 = testData2;
      print(qcashier.screen33.timer2);
      expect(qcashier.screen33.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.timer2 = defalut;
      print(qcashier.screen33.timer2);
      expect(qcashier.screen33.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01297_element_check_01274 **********\n\n");
    });

    test('01298_element_check_01275', () async {
      print("\n********** テスト実行：01298_element_check_01275 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.timer3;
      print(qcashier.screen33.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.timer3 = testData1;
      print(qcashier.screen33.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.timer3 = testData2;
      print(qcashier.screen33.timer3);
      expect(qcashier.screen33.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.timer3 = defalut;
      print(qcashier.screen33.timer3);
      expect(qcashier.screen33.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01298_element_check_01275 **********\n\n");
    });

    test('01299_element_check_01276', () async {
      print("\n********** テスト実行：01299_element_check_01276 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.dsp_flg1;
      print(qcashier.screen33.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.dsp_flg1 = testData1;
      print(qcashier.screen33.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.dsp_flg1 = testData2;
      print(qcashier.screen33.dsp_flg1);
      expect(qcashier.screen33.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.dsp_flg1 = defalut;
      print(qcashier.screen33.dsp_flg1);
      expect(qcashier.screen33.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01299_element_check_01276 **********\n\n");
    });

    test('01300_element_check_01277', () async {
      print("\n********** テスト実行：01300_element_check_01277 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.dsp_flg2;
      print(qcashier.screen33.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.dsp_flg2 = testData1;
      print(qcashier.screen33.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.dsp_flg2 = testData2;
      print(qcashier.screen33.dsp_flg2);
      expect(qcashier.screen33.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.dsp_flg2 = defalut;
      print(qcashier.screen33.dsp_flg2);
      expect(qcashier.screen33.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01300_element_check_01277 **********\n\n");
    });

    test('01301_element_check_01278', () async {
      print("\n********** テスト実行：01301_element_check_01278 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.movie01_ext;
      print(qcashier.screen33.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.movie01_ext = testData1;
      print(qcashier.screen33.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.movie01_ext = testData2;
      print(qcashier.screen33.movie01_ext);
      expect(qcashier.screen33.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.movie01_ext = defalut;
      print(qcashier.screen33.movie01_ext);
      expect(qcashier.screen33.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01301_element_check_01278 **********\n\n");
    });

    test('01302_element_check_01279', () async {
      print("\n********** テスト実行：01302_element_check_01279 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.movie02_ext;
      print(qcashier.screen33.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.movie02_ext = testData1;
      print(qcashier.screen33.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.movie02_ext = testData2;
      print(qcashier.screen33.movie02_ext);
      expect(qcashier.screen33.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.movie02_ext = defalut;
      print(qcashier.screen33.movie02_ext);
      expect(qcashier.screen33.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01302_element_check_01279 **********\n\n");
    });

    test('01303_element_check_01280', () async {
      print("\n********** テスト実行：01303_element_check_01280 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.movie03_ext;
      print(qcashier.screen33.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.movie03_ext = testData1;
      print(qcashier.screen33.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.movie03_ext = testData2;
      print(qcashier.screen33.movie03_ext);
      expect(qcashier.screen33.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.movie03_ext = defalut;
      print(qcashier.screen33.movie03_ext);
      expect(qcashier.screen33.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01303_element_check_01280 **********\n\n");
    });

    test('01304_element_check_01281', () async {
      print("\n********** テスト実行：01304_element_check_01281 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.movie04_ext;
      print(qcashier.screen33.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.movie04_ext = testData1;
      print(qcashier.screen33.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.movie04_ext = testData2;
      print(qcashier.screen33.movie04_ext);
      expect(qcashier.screen33.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.movie04_ext = defalut;
      print(qcashier.screen33.movie04_ext);
      expect(qcashier.screen33.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01304_element_check_01281 **********\n\n");
    });

    test('01305_element_check_01282', () async {
      print("\n********** テスト実行：01305_element_check_01282 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line_title;
      print(qcashier.screen33.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line_title = testData1s;
      print(qcashier.screen33.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line_title = testData2s;
      print(qcashier.screen33.line_title);
      expect(qcashier.screen33.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line_title = defalut;
      print(qcashier.screen33.line_title);
      expect(qcashier.screen33.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01305_element_check_01282 **********\n\n");
    });

    test('01306_element_check_01283', () async {
      print("\n********** テスト実行：01306_element_check_01283 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line_title_ex;
      print(qcashier.screen33.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line_title_ex = testData1s;
      print(qcashier.screen33.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line_title_ex = testData2s;
      print(qcashier.screen33.line_title_ex);
      expect(qcashier.screen33.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line_title_ex = defalut;
      print(qcashier.screen33.line_title_ex);
      expect(qcashier.screen33.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01306_element_check_01283 **********\n\n");
    });

    test('01307_element_check_01284', () async {
      print("\n********** テスト実行：01307_element_check_01284 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line1;
      print(qcashier.screen33.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line1 = testData1s;
      print(qcashier.screen33.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line1 = testData2s;
      print(qcashier.screen33.line1);
      expect(qcashier.screen33.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line1 = defalut;
      print(qcashier.screen33.line1);
      expect(qcashier.screen33.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01307_element_check_01284 **********\n\n");
    });

    test('01308_element_check_01285', () async {
      print("\n********** テスト実行：01308_element_check_01285 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line2;
      print(qcashier.screen33.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line2 = testData1s;
      print(qcashier.screen33.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line2 = testData2s;
      print(qcashier.screen33.line2);
      expect(qcashier.screen33.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line2 = defalut;
      print(qcashier.screen33.line2);
      expect(qcashier.screen33.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01308_element_check_01285 **********\n\n");
    });

    test('01309_element_check_01286', () async {
      print("\n********** テスト実行：01309_element_check_01286 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line3;
      print(qcashier.screen33.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line3 = testData1s;
      print(qcashier.screen33.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line3 = testData2s;
      print(qcashier.screen33.line3);
      expect(qcashier.screen33.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line3 = defalut;
      print(qcashier.screen33.line3);
      expect(qcashier.screen33.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01309_element_check_01286 **********\n\n");
    });

    test('01310_element_check_01287', () async {
      print("\n********** テスト実行：01310_element_check_01287 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line4;
      print(qcashier.screen33.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line4 = testData1s;
      print(qcashier.screen33.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line4 = testData2s;
      print(qcashier.screen33.line4);
      expect(qcashier.screen33.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line4 = defalut;
      print(qcashier.screen33.line4);
      expect(qcashier.screen33.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01310_element_check_01287 **********\n\n");
    });

    test('01311_element_check_01288', () async {
      print("\n********** テスト実行：01311_element_check_01288 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line1_ex;
      print(qcashier.screen33.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line1_ex = testData1s;
      print(qcashier.screen33.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line1_ex = testData2s;
      print(qcashier.screen33.line1_ex);
      expect(qcashier.screen33.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line1_ex = defalut;
      print(qcashier.screen33.line1_ex);
      expect(qcashier.screen33.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01311_element_check_01288 **********\n\n");
    });

    test('01312_element_check_01289', () async {
      print("\n********** テスト実行：01312_element_check_01289 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line2_ex;
      print(qcashier.screen33.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line2_ex = testData1s;
      print(qcashier.screen33.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line2_ex = testData2s;
      print(qcashier.screen33.line2_ex);
      expect(qcashier.screen33.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line2_ex = defalut;
      print(qcashier.screen33.line2_ex);
      expect(qcashier.screen33.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01312_element_check_01289 **********\n\n");
    });

    test('01313_element_check_01290', () async {
      print("\n********** テスト実行：01313_element_check_01290 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line3_ex;
      print(qcashier.screen33.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line3_ex = testData1s;
      print(qcashier.screen33.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line3_ex = testData2s;
      print(qcashier.screen33.line3_ex);
      expect(qcashier.screen33.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line3_ex = defalut;
      print(qcashier.screen33.line3_ex);
      expect(qcashier.screen33.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01313_element_check_01290 **********\n\n");
    });

    test('01314_element_check_01291', () async {
      print("\n********** テスト実行：01314_element_check_01291 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.line4_ex;
      print(qcashier.screen33.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.line4_ex = testData1s;
      print(qcashier.screen33.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.line4_ex = testData2s;
      print(qcashier.screen33.line4_ex);
      expect(qcashier.screen33.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.line4_ex = defalut;
      print(qcashier.screen33.line4_ex);
      expect(qcashier.screen33.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01314_element_check_01291 **********\n\n");
    });

    test('01315_element_check_01292', () async {
      print("\n********** テスト実行：01315_element_check_01292 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.sound_led1;
      print(qcashier.screen33.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.sound_led1 = testData1;
      print(qcashier.screen33.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.sound_led1 = testData2;
      print(qcashier.screen33.sound_led1);
      expect(qcashier.screen33.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.sound_led1 = defalut;
      print(qcashier.screen33.sound_led1);
      expect(qcashier.screen33.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01315_element_check_01292 **********\n\n");
    });

    test('01316_element_check_01293', () async {
      print("\n********** テスト実行：01316_element_check_01293 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.sound_led2;
      print(qcashier.screen33.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.sound_led2 = testData1;
      print(qcashier.screen33.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.sound_led2 = testData2;
      print(qcashier.screen33.sound_led2);
      expect(qcashier.screen33.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.sound_led2 = defalut;
      print(qcashier.screen33.sound_led2);
      expect(qcashier.screen33.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01316_element_check_01293 **********\n\n");
    });

    test('01317_element_check_01294', () async {
      print("\n********** テスト実行：01317_element_check_01294 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen33.sound_led3;
      print(qcashier.screen33.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen33.sound_led3 = testData1;
      print(qcashier.screen33.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen33.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen33.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen33.sound_led3 = testData2;
      print(qcashier.screen33.sound_led3);
      expect(qcashier.screen33.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen33.sound_led3 = defalut;
      print(qcashier.screen33.sound_led3);
      expect(qcashier.screen33.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen33.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01317_element_check_01294 **********\n\n");
    });

    test('01318_element_check_01295', () async {
      print("\n********** テスト実行：01318_element_check_01295 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.title;
      print(qcashier.screen34.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.title = testData1s;
      print(qcashier.screen34.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.title = testData2s;
      print(qcashier.screen34.title);
      expect(qcashier.screen34.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.title = defalut;
      print(qcashier.screen34.title);
      expect(qcashier.screen34.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01318_element_check_01295 **********\n\n");
    });

    test('01319_element_check_01296', () async {
      print("\n********** テスト実行：01319_element_check_01296 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.msg1;
      print(qcashier.screen34.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.msg1 = testData1s;
      print(qcashier.screen34.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.msg1 = testData2s;
      print(qcashier.screen34.msg1);
      expect(qcashier.screen34.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.msg1 = defalut;
      print(qcashier.screen34.msg1);
      expect(qcashier.screen34.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01319_element_check_01296 **********\n\n");
    });

    test('01320_element_check_01297', () async {
      print("\n********** テスト実行：01320_element_check_01297 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.msg2;
      print(qcashier.screen34.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.msg2 = testData1s;
      print(qcashier.screen34.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.msg2 = testData2s;
      print(qcashier.screen34.msg2);
      expect(qcashier.screen34.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.msg2 = defalut;
      print(qcashier.screen34.msg2);
      expect(qcashier.screen34.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01320_element_check_01297 **********\n\n");
    });

    test('01321_element_check_01298', () async {
      print("\n********** テスト実行：01321_element_check_01298 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.msg1_size;
      print(qcashier.screen34.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.msg1_size = testData1;
      print(qcashier.screen34.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.msg1_size = testData2;
      print(qcashier.screen34.msg1_size);
      expect(qcashier.screen34.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.msg1_size = defalut;
      print(qcashier.screen34.msg1_size);
      expect(qcashier.screen34.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01321_element_check_01298 **********\n\n");
    });

    test('01322_element_check_01299', () async {
      print("\n********** テスト実行：01322_element_check_01299 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.msg2_size;
      print(qcashier.screen34.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.msg2_size = testData1;
      print(qcashier.screen34.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.msg2_size = testData2;
      print(qcashier.screen34.msg2_size);
      expect(qcashier.screen34.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.msg2_size = defalut;
      print(qcashier.screen34.msg2_size);
      expect(qcashier.screen34.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01322_element_check_01299 **********\n\n");
    });

    test('01323_element_check_01300', () async {
      print("\n********** テスト実行：01323_element_check_01300 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.sound1;
      print(qcashier.screen34.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.sound1 = testData1;
      print(qcashier.screen34.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.sound1 = testData2;
      print(qcashier.screen34.sound1);
      expect(qcashier.screen34.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.sound1 = defalut;
      print(qcashier.screen34.sound1);
      expect(qcashier.screen34.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01323_element_check_01300 **********\n\n");
    });

    test('01324_element_check_01301', () async {
      print("\n********** テスト実行：01324_element_check_01301 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.sound2;
      print(qcashier.screen34.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.sound2 = testData1;
      print(qcashier.screen34.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.sound2 = testData2;
      print(qcashier.screen34.sound2);
      expect(qcashier.screen34.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.sound2 = defalut;
      print(qcashier.screen34.sound2);
      expect(qcashier.screen34.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01324_element_check_01301 **********\n\n");
    });

    test('01325_element_check_01302', () async {
      print("\n********** テスト実行：01325_element_check_01302 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.sound3;
      print(qcashier.screen34.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.sound3 = testData1;
      print(qcashier.screen34.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.sound3 = testData2;
      print(qcashier.screen34.sound3);
      expect(qcashier.screen34.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.sound3 = defalut;
      print(qcashier.screen34.sound3);
      expect(qcashier.screen34.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01325_element_check_01302 **********\n\n");
    });

    test('01326_element_check_01303', () async {
      print("\n********** テスト実行：01326_element_check_01303 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.snd_timer;
      print(qcashier.screen34.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.snd_timer = testData1;
      print(qcashier.screen34.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.snd_timer = testData2;
      print(qcashier.screen34.snd_timer);
      expect(qcashier.screen34.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.snd_timer = defalut;
      print(qcashier.screen34.snd_timer);
      expect(qcashier.screen34.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01326_element_check_01303 **********\n\n");
    });

    test('01327_element_check_01304', () async {
      print("\n********** テスト実行：01327_element_check_01304 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.timer1;
      print(qcashier.screen34.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.timer1 = testData1;
      print(qcashier.screen34.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.timer1 = testData2;
      print(qcashier.screen34.timer1);
      expect(qcashier.screen34.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.timer1 = defalut;
      print(qcashier.screen34.timer1);
      expect(qcashier.screen34.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01327_element_check_01304 **********\n\n");
    });

    test('01328_element_check_01305', () async {
      print("\n********** テスト実行：01328_element_check_01305 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.timer2;
      print(qcashier.screen34.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.timer2 = testData1;
      print(qcashier.screen34.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.timer2 = testData2;
      print(qcashier.screen34.timer2);
      expect(qcashier.screen34.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.timer2 = defalut;
      print(qcashier.screen34.timer2);
      expect(qcashier.screen34.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01328_element_check_01305 **********\n\n");
    });

    test('01329_element_check_01306', () async {
      print("\n********** テスト実行：01329_element_check_01306 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.timer3;
      print(qcashier.screen34.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.timer3 = testData1;
      print(qcashier.screen34.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.timer3 = testData2;
      print(qcashier.screen34.timer3);
      expect(qcashier.screen34.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.timer3 = defalut;
      print(qcashier.screen34.timer3);
      expect(qcashier.screen34.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01329_element_check_01306 **********\n\n");
    });

    test('01330_element_check_01307', () async {
      print("\n********** テスト実行：01330_element_check_01307 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.dsp_flg1;
      print(qcashier.screen34.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.dsp_flg1 = testData1;
      print(qcashier.screen34.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.dsp_flg1 = testData2;
      print(qcashier.screen34.dsp_flg1);
      expect(qcashier.screen34.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.dsp_flg1 = defalut;
      print(qcashier.screen34.dsp_flg1);
      expect(qcashier.screen34.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01330_element_check_01307 **********\n\n");
    });

    test('01331_element_check_01308', () async {
      print("\n********** テスト実行：01331_element_check_01308 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.dsp_flg2;
      print(qcashier.screen34.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.dsp_flg2 = testData1;
      print(qcashier.screen34.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.dsp_flg2 = testData2;
      print(qcashier.screen34.dsp_flg2);
      expect(qcashier.screen34.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.dsp_flg2 = defalut;
      print(qcashier.screen34.dsp_flg2);
      expect(qcashier.screen34.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01331_element_check_01308 **********\n\n");
    });

    test('01332_element_check_01309', () async {
      print("\n********** テスト実行：01332_element_check_01309 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.movie01_ext;
      print(qcashier.screen34.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.movie01_ext = testData1;
      print(qcashier.screen34.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.movie01_ext = testData2;
      print(qcashier.screen34.movie01_ext);
      expect(qcashier.screen34.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.movie01_ext = defalut;
      print(qcashier.screen34.movie01_ext);
      expect(qcashier.screen34.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01332_element_check_01309 **********\n\n");
    });

    test('01333_element_check_01310', () async {
      print("\n********** テスト実行：01333_element_check_01310 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.movie02_ext;
      print(qcashier.screen34.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.movie02_ext = testData1;
      print(qcashier.screen34.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.movie02_ext = testData2;
      print(qcashier.screen34.movie02_ext);
      expect(qcashier.screen34.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.movie02_ext = defalut;
      print(qcashier.screen34.movie02_ext);
      expect(qcashier.screen34.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01333_element_check_01310 **********\n\n");
    });

    test('01334_element_check_01311', () async {
      print("\n********** テスト実行：01334_element_check_01311 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.movie03_ext;
      print(qcashier.screen34.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.movie03_ext = testData1;
      print(qcashier.screen34.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.movie03_ext = testData2;
      print(qcashier.screen34.movie03_ext);
      expect(qcashier.screen34.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.movie03_ext = defalut;
      print(qcashier.screen34.movie03_ext);
      expect(qcashier.screen34.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01334_element_check_01311 **********\n\n");
    });

    test('01335_element_check_01312', () async {
      print("\n********** テスト実行：01335_element_check_01312 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.movie04_ext;
      print(qcashier.screen34.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.movie04_ext = testData1;
      print(qcashier.screen34.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.movie04_ext = testData2;
      print(qcashier.screen34.movie04_ext);
      expect(qcashier.screen34.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.movie04_ext = defalut;
      print(qcashier.screen34.movie04_ext);
      expect(qcashier.screen34.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01335_element_check_01312 **********\n\n");
    });

    test('01336_element_check_01313', () async {
      print("\n********** テスト実行：01336_element_check_01313 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line_title;
      print(qcashier.screen34.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line_title = testData1s;
      print(qcashier.screen34.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line_title = testData2s;
      print(qcashier.screen34.line_title);
      expect(qcashier.screen34.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line_title = defalut;
      print(qcashier.screen34.line_title);
      expect(qcashier.screen34.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01336_element_check_01313 **********\n\n");
    });

    test('01337_element_check_01314', () async {
      print("\n********** テスト実行：01337_element_check_01314 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line_title_ex;
      print(qcashier.screen34.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line_title_ex = testData1s;
      print(qcashier.screen34.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line_title_ex = testData2s;
      print(qcashier.screen34.line_title_ex);
      expect(qcashier.screen34.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line_title_ex = defalut;
      print(qcashier.screen34.line_title_ex);
      expect(qcashier.screen34.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01337_element_check_01314 **********\n\n");
    });

    test('01338_element_check_01315', () async {
      print("\n********** テスト実行：01338_element_check_01315 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line1;
      print(qcashier.screen34.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line1 = testData1s;
      print(qcashier.screen34.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line1 = testData2s;
      print(qcashier.screen34.line1);
      expect(qcashier.screen34.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line1 = defalut;
      print(qcashier.screen34.line1);
      expect(qcashier.screen34.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01338_element_check_01315 **********\n\n");
    });

    test('01339_element_check_01316', () async {
      print("\n********** テスト実行：01339_element_check_01316 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line2;
      print(qcashier.screen34.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line2 = testData1s;
      print(qcashier.screen34.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line2 = testData2s;
      print(qcashier.screen34.line2);
      expect(qcashier.screen34.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line2 = defalut;
      print(qcashier.screen34.line2);
      expect(qcashier.screen34.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01339_element_check_01316 **********\n\n");
    });

    test('01340_element_check_01317', () async {
      print("\n********** テスト実行：01340_element_check_01317 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line3;
      print(qcashier.screen34.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line3 = testData1s;
      print(qcashier.screen34.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line3 = testData2s;
      print(qcashier.screen34.line3);
      expect(qcashier.screen34.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line3 = defalut;
      print(qcashier.screen34.line3);
      expect(qcashier.screen34.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01340_element_check_01317 **********\n\n");
    });

    test('01341_element_check_01318', () async {
      print("\n********** テスト実行：01341_element_check_01318 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line4;
      print(qcashier.screen34.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line4 = testData1s;
      print(qcashier.screen34.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line4 = testData2s;
      print(qcashier.screen34.line4);
      expect(qcashier.screen34.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line4 = defalut;
      print(qcashier.screen34.line4);
      expect(qcashier.screen34.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01341_element_check_01318 **********\n\n");
    });

    test('01342_element_check_01319', () async {
      print("\n********** テスト実行：01342_element_check_01319 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line1_ex;
      print(qcashier.screen34.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line1_ex = testData1s;
      print(qcashier.screen34.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line1_ex = testData2s;
      print(qcashier.screen34.line1_ex);
      expect(qcashier.screen34.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line1_ex = defalut;
      print(qcashier.screen34.line1_ex);
      expect(qcashier.screen34.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01342_element_check_01319 **********\n\n");
    });

    test('01343_element_check_01320', () async {
      print("\n********** テスト実行：01343_element_check_01320 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line2_ex;
      print(qcashier.screen34.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line2_ex = testData1s;
      print(qcashier.screen34.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line2_ex = testData2s;
      print(qcashier.screen34.line2_ex);
      expect(qcashier.screen34.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line2_ex = defalut;
      print(qcashier.screen34.line2_ex);
      expect(qcashier.screen34.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01343_element_check_01320 **********\n\n");
    });

    test('01344_element_check_01321', () async {
      print("\n********** テスト実行：01344_element_check_01321 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line3_ex;
      print(qcashier.screen34.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line3_ex = testData1s;
      print(qcashier.screen34.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line3_ex = testData2s;
      print(qcashier.screen34.line3_ex);
      expect(qcashier.screen34.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line3_ex = defalut;
      print(qcashier.screen34.line3_ex);
      expect(qcashier.screen34.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01344_element_check_01321 **********\n\n");
    });

    test('01345_element_check_01322', () async {
      print("\n********** テスト実行：01345_element_check_01322 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.line4_ex;
      print(qcashier.screen34.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.line4_ex = testData1s;
      print(qcashier.screen34.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.line4_ex = testData2s;
      print(qcashier.screen34.line4_ex);
      expect(qcashier.screen34.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.line4_ex = defalut;
      print(qcashier.screen34.line4_ex);
      expect(qcashier.screen34.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01345_element_check_01322 **********\n\n");
    });

    test('01346_element_check_01323', () async {
      print("\n********** テスト実行：01346_element_check_01323 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.sound_led1;
      print(qcashier.screen34.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.sound_led1 = testData1;
      print(qcashier.screen34.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.sound_led1 = testData2;
      print(qcashier.screen34.sound_led1);
      expect(qcashier.screen34.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.sound_led1 = defalut;
      print(qcashier.screen34.sound_led1);
      expect(qcashier.screen34.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01346_element_check_01323 **********\n\n");
    });

    test('01347_element_check_01324', () async {
      print("\n********** テスト実行：01347_element_check_01324 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.sound_led2;
      print(qcashier.screen34.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.sound_led2 = testData1;
      print(qcashier.screen34.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.sound_led2 = testData2;
      print(qcashier.screen34.sound_led2);
      expect(qcashier.screen34.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.sound_led2 = defalut;
      print(qcashier.screen34.sound_led2);
      expect(qcashier.screen34.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01347_element_check_01324 **********\n\n");
    });

    test('01348_element_check_01325', () async {
      print("\n********** テスト実行：01348_element_check_01325 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen34.sound_led3;
      print(qcashier.screen34.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen34.sound_led3 = testData1;
      print(qcashier.screen34.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen34.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen34.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen34.sound_led3 = testData2;
      print(qcashier.screen34.sound_led3);
      expect(qcashier.screen34.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen34.sound_led3 = defalut;
      print(qcashier.screen34.sound_led3);
      expect(qcashier.screen34.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen34.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01348_element_check_01325 **********\n\n");
    });

    test('01349_element_check_01326', () async {
      print("\n********** テスト実行：01349_element_check_01326 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.title;
      print(qcashier.screen35.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.title = testData1s;
      print(qcashier.screen35.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.title = testData2s;
      print(qcashier.screen35.title);
      expect(qcashier.screen35.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.title = defalut;
      print(qcashier.screen35.title);
      expect(qcashier.screen35.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01349_element_check_01326 **********\n\n");
    });

    test('01350_element_check_01327', () async {
      print("\n********** テスト実行：01350_element_check_01327 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.msg1;
      print(qcashier.screen35.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.msg1 = testData1s;
      print(qcashier.screen35.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.msg1 = testData2s;
      print(qcashier.screen35.msg1);
      expect(qcashier.screen35.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.msg1 = defalut;
      print(qcashier.screen35.msg1);
      expect(qcashier.screen35.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01350_element_check_01327 **********\n\n");
    });

    test('01351_element_check_01328', () async {
      print("\n********** テスト実行：01351_element_check_01328 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.msg2;
      print(qcashier.screen35.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.msg2 = testData1s;
      print(qcashier.screen35.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.msg2 = testData2s;
      print(qcashier.screen35.msg2);
      expect(qcashier.screen35.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.msg2 = defalut;
      print(qcashier.screen35.msg2);
      expect(qcashier.screen35.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01351_element_check_01328 **********\n\n");
    });

    test('01352_element_check_01329', () async {
      print("\n********** テスト実行：01352_element_check_01329 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.msg1_size;
      print(qcashier.screen35.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.msg1_size = testData1;
      print(qcashier.screen35.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.msg1_size = testData2;
      print(qcashier.screen35.msg1_size);
      expect(qcashier.screen35.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.msg1_size = defalut;
      print(qcashier.screen35.msg1_size);
      expect(qcashier.screen35.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01352_element_check_01329 **********\n\n");
    });

    test('01353_element_check_01330', () async {
      print("\n********** テスト実行：01353_element_check_01330 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.msg2_size;
      print(qcashier.screen35.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.msg2_size = testData1;
      print(qcashier.screen35.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.msg2_size = testData2;
      print(qcashier.screen35.msg2_size);
      expect(qcashier.screen35.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.msg2_size = defalut;
      print(qcashier.screen35.msg2_size);
      expect(qcashier.screen35.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01353_element_check_01330 **********\n\n");
    });

    test('01354_element_check_01331', () async {
      print("\n********** テスト実行：01354_element_check_01331 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.sound1;
      print(qcashier.screen35.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.sound1 = testData1;
      print(qcashier.screen35.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.sound1 = testData2;
      print(qcashier.screen35.sound1);
      expect(qcashier.screen35.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.sound1 = defalut;
      print(qcashier.screen35.sound1);
      expect(qcashier.screen35.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01354_element_check_01331 **********\n\n");
    });

    test('01355_element_check_01332', () async {
      print("\n********** テスト実行：01355_element_check_01332 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.sound2;
      print(qcashier.screen35.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.sound2 = testData1;
      print(qcashier.screen35.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.sound2 = testData2;
      print(qcashier.screen35.sound2);
      expect(qcashier.screen35.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.sound2 = defalut;
      print(qcashier.screen35.sound2);
      expect(qcashier.screen35.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01355_element_check_01332 **********\n\n");
    });

    test('01356_element_check_01333', () async {
      print("\n********** テスト実行：01356_element_check_01333 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.sound3;
      print(qcashier.screen35.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.sound3 = testData1;
      print(qcashier.screen35.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.sound3 = testData2;
      print(qcashier.screen35.sound3);
      expect(qcashier.screen35.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.sound3 = defalut;
      print(qcashier.screen35.sound3);
      expect(qcashier.screen35.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01356_element_check_01333 **********\n\n");
    });

    test('01357_element_check_01334', () async {
      print("\n********** テスト実行：01357_element_check_01334 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.snd_timer;
      print(qcashier.screen35.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.snd_timer = testData1;
      print(qcashier.screen35.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.snd_timer = testData2;
      print(qcashier.screen35.snd_timer);
      expect(qcashier.screen35.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.snd_timer = defalut;
      print(qcashier.screen35.snd_timer);
      expect(qcashier.screen35.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01357_element_check_01334 **********\n\n");
    });

    test('01358_element_check_01335', () async {
      print("\n********** テスト実行：01358_element_check_01335 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.timer1;
      print(qcashier.screen35.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.timer1 = testData1;
      print(qcashier.screen35.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.timer1 = testData2;
      print(qcashier.screen35.timer1);
      expect(qcashier.screen35.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.timer1 = defalut;
      print(qcashier.screen35.timer1);
      expect(qcashier.screen35.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01358_element_check_01335 **********\n\n");
    });

    test('01359_element_check_01336', () async {
      print("\n********** テスト実行：01359_element_check_01336 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.timer2;
      print(qcashier.screen35.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.timer2 = testData1;
      print(qcashier.screen35.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.timer2 = testData2;
      print(qcashier.screen35.timer2);
      expect(qcashier.screen35.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.timer2 = defalut;
      print(qcashier.screen35.timer2);
      expect(qcashier.screen35.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01359_element_check_01336 **********\n\n");
    });

    test('01360_element_check_01337', () async {
      print("\n********** テスト実行：01360_element_check_01337 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.timer3;
      print(qcashier.screen35.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.timer3 = testData1;
      print(qcashier.screen35.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.timer3 = testData2;
      print(qcashier.screen35.timer3);
      expect(qcashier.screen35.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.timer3 = defalut;
      print(qcashier.screen35.timer3);
      expect(qcashier.screen35.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01360_element_check_01337 **********\n\n");
    });

    test('01361_element_check_01338', () async {
      print("\n********** テスト実行：01361_element_check_01338 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.dsp_flg1;
      print(qcashier.screen35.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.dsp_flg1 = testData1;
      print(qcashier.screen35.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.dsp_flg1 = testData2;
      print(qcashier.screen35.dsp_flg1);
      expect(qcashier.screen35.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.dsp_flg1 = defalut;
      print(qcashier.screen35.dsp_flg1);
      expect(qcashier.screen35.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01361_element_check_01338 **********\n\n");
    });

    test('01362_element_check_01339', () async {
      print("\n********** テスト実行：01362_element_check_01339 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.dsp_flg2;
      print(qcashier.screen35.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.dsp_flg2 = testData1;
      print(qcashier.screen35.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.dsp_flg2 = testData2;
      print(qcashier.screen35.dsp_flg2);
      expect(qcashier.screen35.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.dsp_flg2 = defalut;
      print(qcashier.screen35.dsp_flg2);
      expect(qcashier.screen35.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01362_element_check_01339 **********\n\n");
    });

    test('01363_element_check_01340', () async {
      print("\n********** テスト実行：01363_element_check_01340 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.movie01_ext;
      print(qcashier.screen35.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.movie01_ext = testData1;
      print(qcashier.screen35.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.movie01_ext = testData2;
      print(qcashier.screen35.movie01_ext);
      expect(qcashier.screen35.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.movie01_ext = defalut;
      print(qcashier.screen35.movie01_ext);
      expect(qcashier.screen35.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01363_element_check_01340 **********\n\n");
    });

    test('01364_element_check_01341', () async {
      print("\n********** テスト実行：01364_element_check_01341 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.movie02_ext;
      print(qcashier.screen35.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.movie02_ext = testData1;
      print(qcashier.screen35.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.movie02_ext = testData2;
      print(qcashier.screen35.movie02_ext);
      expect(qcashier.screen35.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.movie02_ext = defalut;
      print(qcashier.screen35.movie02_ext);
      expect(qcashier.screen35.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01364_element_check_01341 **********\n\n");
    });

    test('01365_element_check_01342', () async {
      print("\n********** テスト実行：01365_element_check_01342 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.movie03_ext;
      print(qcashier.screen35.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.movie03_ext = testData1;
      print(qcashier.screen35.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.movie03_ext = testData2;
      print(qcashier.screen35.movie03_ext);
      expect(qcashier.screen35.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.movie03_ext = defalut;
      print(qcashier.screen35.movie03_ext);
      expect(qcashier.screen35.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01365_element_check_01342 **********\n\n");
    });

    test('01366_element_check_01343', () async {
      print("\n********** テスト実行：01366_element_check_01343 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.movie04_ext;
      print(qcashier.screen35.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.movie04_ext = testData1;
      print(qcashier.screen35.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.movie04_ext = testData2;
      print(qcashier.screen35.movie04_ext);
      expect(qcashier.screen35.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.movie04_ext = defalut;
      print(qcashier.screen35.movie04_ext);
      expect(qcashier.screen35.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01366_element_check_01343 **********\n\n");
    });

    test('01367_element_check_01344', () async {
      print("\n********** テスト実行：01367_element_check_01344 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line_title;
      print(qcashier.screen35.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line_title = testData1s;
      print(qcashier.screen35.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line_title = testData2s;
      print(qcashier.screen35.line_title);
      expect(qcashier.screen35.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line_title = defalut;
      print(qcashier.screen35.line_title);
      expect(qcashier.screen35.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01367_element_check_01344 **********\n\n");
    });

    test('01368_element_check_01345', () async {
      print("\n********** テスト実行：01368_element_check_01345 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line_title_ex;
      print(qcashier.screen35.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line_title_ex = testData1s;
      print(qcashier.screen35.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line_title_ex = testData2s;
      print(qcashier.screen35.line_title_ex);
      expect(qcashier.screen35.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line_title_ex = defalut;
      print(qcashier.screen35.line_title_ex);
      expect(qcashier.screen35.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01368_element_check_01345 **********\n\n");
    });

    test('01369_element_check_01346', () async {
      print("\n********** テスト実行：01369_element_check_01346 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line1;
      print(qcashier.screen35.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line1 = testData1s;
      print(qcashier.screen35.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line1 = testData2s;
      print(qcashier.screen35.line1);
      expect(qcashier.screen35.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line1 = defalut;
      print(qcashier.screen35.line1);
      expect(qcashier.screen35.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01369_element_check_01346 **********\n\n");
    });

    test('01370_element_check_01347', () async {
      print("\n********** テスト実行：01370_element_check_01347 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line2;
      print(qcashier.screen35.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line2 = testData1s;
      print(qcashier.screen35.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line2 = testData2s;
      print(qcashier.screen35.line2);
      expect(qcashier.screen35.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line2 = defalut;
      print(qcashier.screen35.line2);
      expect(qcashier.screen35.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01370_element_check_01347 **********\n\n");
    });

    test('01371_element_check_01348', () async {
      print("\n********** テスト実行：01371_element_check_01348 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line3;
      print(qcashier.screen35.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line3 = testData1s;
      print(qcashier.screen35.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line3 = testData2s;
      print(qcashier.screen35.line3);
      expect(qcashier.screen35.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line3 = defalut;
      print(qcashier.screen35.line3);
      expect(qcashier.screen35.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01371_element_check_01348 **********\n\n");
    });

    test('01372_element_check_01349', () async {
      print("\n********** テスト実行：01372_element_check_01349 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line4;
      print(qcashier.screen35.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line4 = testData1s;
      print(qcashier.screen35.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line4 = testData2s;
      print(qcashier.screen35.line4);
      expect(qcashier.screen35.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line4 = defalut;
      print(qcashier.screen35.line4);
      expect(qcashier.screen35.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01372_element_check_01349 **********\n\n");
    });

    test('01373_element_check_01350', () async {
      print("\n********** テスト実行：01373_element_check_01350 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line1_ex;
      print(qcashier.screen35.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line1_ex = testData1s;
      print(qcashier.screen35.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line1_ex = testData2s;
      print(qcashier.screen35.line1_ex);
      expect(qcashier.screen35.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line1_ex = defalut;
      print(qcashier.screen35.line1_ex);
      expect(qcashier.screen35.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01373_element_check_01350 **********\n\n");
    });

    test('01374_element_check_01351', () async {
      print("\n********** テスト実行：01374_element_check_01351 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line2_ex;
      print(qcashier.screen35.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line2_ex = testData1s;
      print(qcashier.screen35.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line2_ex = testData2s;
      print(qcashier.screen35.line2_ex);
      expect(qcashier.screen35.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line2_ex = defalut;
      print(qcashier.screen35.line2_ex);
      expect(qcashier.screen35.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01374_element_check_01351 **********\n\n");
    });

    test('01375_element_check_01352', () async {
      print("\n********** テスト実行：01375_element_check_01352 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line3_ex;
      print(qcashier.screen35.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line3_ex = testData1s;
      print(qcashier.screen35.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line3_ex = testData2s;
      print(qcashier.screen35.line3_ex);
      expect(qcashier.screen35.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line3_ex = defalut;
      print(qcashier.screen35.line3_ex);
      expect(qcashier.screen35.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01375_element_check_01352 **********\n\n");
    });

    test('01376_element_check_01353', () async {
      print("\n********** テスト実行：01376_element_check_01353 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.line4_ex;
      print(qcashier.screen35.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.line4_ex = testData1s;
      print(qcashier.screen35.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.line4_ex = testData2s;
      print(qcashier.screen35.line4_ex);
      expect(qcashier.screen35.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.line4_ex = defalut;
      print(qcashier.screen35.line4_ex);
      expect(qcashier.screen35.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01376_element_check_01353 **********\n\n");
    });

    test('01377_element_check_01354', () async {
      print("\n********** テスト実行：01377_element_check_01354 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.sound_led1;
      print(qcashier.screen35.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.sound_led1 = testData1;
      print(qcashier.screen35.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.sound_led1 = testData2;
      print(qcashier.screen35.sound_led1);
      expect(qcashier.screen35.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.sound_led1 = defalut;
      print(qcashier.screen35.sound_led1);
      expect(qcashier.screen35.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01377_element_check_01354 **********\n\n");
    });

    test('01378_element_check_01355', () async {
      print("\n********** テスト実行：01378_element_check_01355 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.sound_led2;
      print(qcashier.screen35.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.sound_led2 = testData1;
      print(qcashier.screen35.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.sound_led2 = testData2;
      print(qcashier.screen35.sound_led2);
      expect(qcashier.screen35.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.sound_led2 = defalut;
      print(qcashier.screen35.sound_led2);
      expect(qcashier.screen35.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01378_element_check_01355 **********\n\n");
    });

    test('01379_element_check_01356', () async {
      print("\n********** テスト実行：01379_element_check_01356 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen35.sound_led3;
      print(qcashier.screen35.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen35.sound_led3 = testData1;
      print(qcashier.screen35.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen35.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen35.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen35.sound_led3 = testData2;
      print(qcashier.screen35.sound_led3);
      expect(qcashier.screen35.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen35.sound_led3 = defalut;
      print(qcashier.screen35.sound_led3);
      expect(qcashier.screen35.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen35.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01379_element_check_01356 **********\n\n");
    });

    test('01380_element_check_01357', () async {
      print("\n********** テスト実行：01380_element_check_01357 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.title;
      print(qcashier.screen36.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.title = testData1s;
      print(qcashier.screen36.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.title = testData2s;
      print(qcashier.screen36.title);
      expect(qcashier.screen36.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.title = defalut;
      print(qcashier.screen36.title);
      expect(qcashier.screen36.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01380_element_check_01357 **********\n\n");
    });

    test('01381_element_check_01358', () async {
      print("\n********** テスト実行：01381_element_check_01358 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.msg1;
      print(qcashier.screen36.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.msg1 = testData1s;
      print(qcashier.screen36.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.msg1 = testData2s;
      print(qcashier.screen36.msg1);
      expect(qcashier.screen36.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.msg1 = defalut;
      print(qcashier.screen36.msg1);
      expect(qcashier.screen36.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01381_element_check_01358 **********\n\n");
    });

    test('01382_element_check_01359', () async {
      print("\n********** テスト実行：01382_element_check_01359 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.msg2;
      print(qcashier.screen36.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.msg2 = testData1s;
      print(qcashier.screen36.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.msg2 = testData2s;
      print(qcashier.screen36.msg2);
      expect(qcashier.screen36.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.msg2 = defalut;
      print(qcashier.screen36.msg2);
      expect(qcashier.screen36.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01382_element_check_01359 **********\n\n");
    });

    test('01383_element_check_01360', () async {
      print("\n********** テスト実行：01383_element_check_01360 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.msg1_size;
      print(qcashier.screen36.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.msg1_size = testData1;
      print(qcashier.screen36.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.msg1_size = testData2;
      print(qcashier.screen36.msg1_size);
      expect(qcashier.screen36.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.msg1_size = defalut;
      print(qcashier.screen36.msg1_size);
      expect(qcashier.screen36.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01383_element_check_01360 **********\n\n");
    });

    test('01384_element_check_01361', () async {
      print("\n********** テスト実行：01384_element_check_01361 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.msg2_size;
      print(qcashier.screen36.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.msg2_size = testData1;
      print(qcashier.screen36.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.msg2_size = testData2;
      print(qcashier.screen36.msg2_size);
      expect(qcashier.screen36.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.msg2_size = defalut;
      print(qcashier.screen36.msg2_size);
      expect(qcashier.screen36.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01384_element_check_01361 **********\n\n");
    });

    test('01385_element_check_01362', () async {
      print("\n********** テスト実行：01385_element_check_01362 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.sound1;
      print(qcashier.screen36.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.sound1 = testData1;
      print(qcashier.screen36.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.sound1 = testData2;
      print(qcashier.screen36.sound1);
      expect(qcashier.screen36.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.sound1 = defalut;
      print(qcashier.screen36.sound1);
      expect(qcashier.screen36.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01385_element_check_01362 **********\n\n");
    });

    test('01386_element_check_01363', () async {
      print("\n********** テスト実行：01386_element_check_01363 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.sound2;
      print(qcashier.screen36.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.sound2 = testData1;
      print(qcashier.screen36.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.sound2 = testData2;
      print(qcashier.screen36.sound2);
      expect(qcashier.screen36.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.sound2 = defalut;
      print(qcashier.screen36.sound2);
      expect(qcashier.screen36.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01386_element_check_01363 **********\n\n");
    });

    test('01387_element_check_01364', () async {
      print("\n********** テスト実行：01387_element_check_01364 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.sound3;
      print(qcashier.screen36.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.sound3 = testData1;
      print(qcashier.screen36.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.sound3 = testData2;
      print(qcashier.screen36.sound3);
      expect(qcashier.screen36.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.sound3 = defalut;
      print(qcashier.screen36.sound3);
      expect(qcashier.screen36.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01387_element_check_01364 **********\n\n");
    });

    test('01388_element_check_01365', () async {
      print("\n********** テスト実行：01388_element_check_01365 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.snd_timer;
      print(qcashier.screen36.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.snd_timer = testData1;
      print(qcashier.screen36.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.snd_timer = testData2;
      print(qcashier.screen36.snd_timer);
      expect(qcashier.screen36.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.snd_timer = defalut;
      print(qcashier.screen36.snd_timer);
      expect(qcashier.screen36.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01388_element_check_01365 **********\n\n");
    });

    test('01389_element_check_01366', () async {
      print("\n********** テスト実行：01389_element_check_01366 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.timer1;
      print(qcashier.screen36.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.timer1 = testData1;
      print(qcashier.screen36.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.timer1 = testData2;
      print(qcashier.screen36.timer1);
      expect(qcashier.screen36.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.timer1 = defalut;
      print(qcashier.screen36.timer1);
      expect(qcashier.screen36.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01389_element_check_01366 **********\n\n");
    });

    test('01390_element_check_01367', () async {
      print("\n********** テスト実行：01390_element_check_01367 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.timer2;
      print(qcashier.screen36.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.timer2 = testData1;
      print(qcashier.screen36.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.timer2 = testData2;
      print(qcashier.screen36.timer2);
      expect(qcashier.screen36.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.timer2 = defalut;
      print(qcashier.screen36.timer2);
      expect(qcashier.screen36.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01390_element_check_01367 **********\n\n");
    });

    test('01391_element_check_01368', () async {
      print("\n********** テスト実行：01391_element_check_01368 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.timer3;
      print(qcashier.screen36.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.timer3 = testData1;
      print(qcashier.screen36.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.timer3 = testData2;
      print(qcashier.screen36.timer3);
      expect(qcashier.screen36.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.timer3 = defalut;
      print(qcashier.screen36.timer3);
      expect(qcashier.screen36.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01391_element_check_01368 **********\n\n");
    });

    test('01392_element_check_01369', () async {
      print("\n********** テスト実行：01392_element_check_01369 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.dsp_flg1;
      print(qcashier.screen36.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.dsp_flg1 = testData1;
      print(qcashier.screen36.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.dsp_flg1 = testData2;
      print(qcashier.screen36.dsp_flg1);
      expect(qcashier.screen36.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.dsp_flg1 = defalut;
      print(qcashier.screen36.dsp_flg1);
      expect(qcashier.screen36.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01392_element_check_01369 **********\n\n");
    });

    test('01393_element_check_01370', () async {
      print("\n********** テスト実行：01393_element_check_01370 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.dsp_flg2;
      print(qcashier.screen36.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.dsp_flg2 = testData1;
      print(qcashier.screen36.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.dsp_flg2 = testData2;
      print(qcashier.screen36.dsp_flg2);
      expect(qcashier.screen36.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.dsp_flg2 = defalut;
      print(qcashier.screen36.dsp_flg2);
      expect(qcashier.screen36.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01393_element_check_01370 **********\n\n");
    });

    test('01394_element_check_01371', () async {
      print("\n********** テスト実行：01394_element_check_01371 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.movie01_ext;
      print(qcashier.screen36.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.movie01_ext = testData1;
      print(qcashier.screen36.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.movie01_ext = testData2;
      print(qcashier.screen36.movie01_ext);
      expect(qcashier.screen36.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.movie01_ext = defalut;
      print(qcashier.screen36.movie01_ext);
      expect(qcashier.screen36.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01394_element_check_01371 **********\n\n");
    });

    test('01395_element_check_01372', () async {
      print("\n********** テスト実行：01395_element_check_01372 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.movie02_ext;
      print(qcashier.screen36.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.movie02_ext = testData1;
      print(qcashier.screen36.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.movie02_ext = testData2;
      print(qcashier.screen36.movie02_ext);
      expect(qcashier.screen36.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.movie02_ext = defalut;
      print(qcashier.screen36.movie02_ext);
      expect(qcashier.screen36.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01395_element_check_01372 **********\n\n");
    });

    test('01396_element_check_01373', () async {
      print("\n********** テスト実行：01396_element_check_01373 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.movie03_ext;
      print(qcashier.screen36.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.movie03_ext = testData1;
      print(qcashier.screen36.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.movie03_ext = testData2;
      print(qcashier.screen36.movie03_ext);
      expect(qcashier.screen36.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.movie03_ext = defalut;
      print(qcashier.screen36.movie03_ext);
      expect(qcashier.screen36.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01396_element_check_01373 **********\n\n");
    });

    test('01397_element_check_01374', () async {
      print("\n********** テスト実行：01397_element_check_01374 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.movie04_ext;
      print(qcashier.screen36.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.movie04_ext = testData1;
      print(qcashier.screen36.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.movie04_ext = testData2;
      print(qcashier.screen36.movie04_ext);
      expect(qcashier.screen36.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.movie04_ext = defalut;
      print(qcashier.screen36.movie04_ext);
      expect(qcashier.screen36.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01397_element_check_01374 **********\n\n");
    });

    test('01398_element_check_01375', () async {
      print("\n********** テスト実行：01398_element_check_01375 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line_title;
      print(qcashier.screen36.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line_title = testData1s;
      print(qcashier.screen36.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line_title = testData2s;
      print(qcashier.screen36.line_title);
      expect(qcashier.screen36.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line_title = defalut;
      print(qcashier.screen36.line_title);
      expect(qcashier.screen36.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01398_element_check_01375 **********\n\n");
    });

    test('01399_element_check_01376', () async {
      print("\n********** テスト実行：01399_element_check_01376 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line_title_ex;
      print(qcashier.screen36.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line_title_ex = testData1s;
      print(qcashier.screen36.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line_title_ex = testData2s;
      print(qcashier.screen36.line_title_ex);
      expect(qcashier.screen36.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line_title_ex = defalut;
      print(qcashier.screen36.line_title_ex);
      expect(qcashier.screen36.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01399_element_check_01376 **********\n\n");
    });

    test('01400_element_check_01377', () async {
      print("\n********** テスト実行：01400_element_check_01377 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line1;
      print(qcashier.screen36.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line1 = testData1s;
      print(qcashier.screen36.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line1 = testData2s;
      print(qcashier.screen36.line1);
      expect(qcashier.screen36.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line1 = defalut;
      print(qcashier.screen36.line1);
      expect(qcashier.screen36.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01400_element_check_01377 **********\n\n");
    });

    test('01401_element_check_01378', () async {
      print("\n********** テスト実行：01401_element_check_01378 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line2;
      print(qcashier.screen36.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line2 = testData1s;
      print(qcashier.screen36.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line2 = testData2s;
      print(qcashier.screen36.line2);
      expect(qcashier.screen36.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line2 = defalut;
      print(qcashier.screen36.line2);
      expect(qcashier.screen36.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01401_element_check_01378 **********\n\n");
    });

    test('01402_element_check_01379', () async {
      print("\n********** テスト実行：01402_element_check_01379 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line3;
      print(qcashier.screen36.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line3 = testData1s;
      print(qcashier.screen36.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line3 = testData2s;
      print(qcashier.screen36.line3);
      expect(qcashier.screen36.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line3 = defalut;
      print(qcashier.screen36.line3);
      expect(qcashier.screen36.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01402_element_check_01379 **********\n\n");
    });

    test('01403_element_check_01380', () async {
      print("\n********** テスト実行：01403_element_check_01380 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line4;
      print(qcashier.screen36.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line4 = testData1s;
      print(qcashier.screen36.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line4 = testData2s;
      print(qcashier.screen36.line4);
      expect(qcashier.screen36.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line4 = defalut;
      print(qcashier.screen36.line4);
      expect(qcashier.screen36.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01403_element_check_01380 **********\n\n");
    });

    test('01404_element_check_01381', () async {
      print("\n********** テスト実行：01404_element_check_01381 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line1_ex;
      print(qcashier.screen36.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line1_ex = testData1s;
      print(qcashier.screen36.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line1_ex = testData2s;
      print(qcashier.screen36.line1_ex);
      expect(qcashier.screen36.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line1_ex = defalut;
      print(qcashier.screen36.line1_ex);
      expect(qcashier.screen36.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01404_element_check_01381 **********\n\n");
    });

    test('01405_element_check_01382', () async {
      print("\n********** テスト実行：01405_element_check_01382 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line2_ex;
      print(qcashier.screen36.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line2_ex = testData1s;
      print(qcashier.screen36.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line2_ex = testData2s;
      print(qcashier.screen36.line2_ex);
      expect(qcashier.screen36.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line2_ex = defalut;
      print(qcashier.screen36.line2_ex);
      expect(qcashier.screen36.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01405_element_check_01382 **********\n\n");
    });

    test('01406_element_check_01383', () async {
      print("\n********** テスト実行：01406_element_check_01383 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line3_ex;
      print(qcashier.screen36.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line3_ex = testData1s;
      print(qcashier.screen36.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line3_ex = testData2s;
      print(qcashier.screen36.line3_ex);
      expect(qcashier.screen36.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line3_ex = defalut;
      print(qcashier.screen36.line3_ex);
      expect(qcashier.screen36.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01406_element_check_01383 **********\n\n");
    });

    test('01407_element_check_01384', () async {
      print("\n********** テスト実行：01407_element_check_01384 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.line4_ex;
      print(qcashier.screen36.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.line4_ex = testData1s;
      print(qcashier.screen36.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.line4_ex = testData2s;
      print(qcashier.screen36.line4_ex);
      expect(qcashier.screen36.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.line4_ex = defalut;
      print(qcashier.screen36.line4_ex);
      expect(qcashier.screen36.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01407_element_check_01384 **********\n\n");
    });

    test('01408_element_check_01385', () async {
      print("\n********** テスト実行：01408_element_check_01385 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.sound_led1;
      print(qcashier.screen36.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.sound_led1 = testData1;
      print(qcashier.screen36.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.sound_led1 = testData2;
      print(qcashier.screen36.sound_led1);
      expect(qcashier.screen36.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.sound_led1 = defalut;
      print(qcashier.screen36.sound_led1);
      expect(qcashier.screen36.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01408_element_check_01385 **********\n\n");
    });

    test('01409_element_check_01386', () async {
      print("\n********** テスト実行：01409_element_check_01386 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.sound_led2;
      print(qcashier.screen36.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.sound_led2 = testData1;
      print(qcashier.screen36.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.sound_led2 = testData2;
      print(qcashier.screen36.sound_led2);
      expect(qcashier.screen36.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.sound_led2 = defalut;
      print(qcashier.screen36.sound_led2);
      expect(qcashier.screen36.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01409_element_check_01386 **********\n\n");
    });

    test('01410_element_check_01387', () async {
      print("\n********** テスト実行：01410_element_check_01387 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen36.sound_led3;
      print(qcashier.screen36.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen36.sound_led3 = testData1;
      print(qcashier.screen36.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen36.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen36.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen36.sound_led3 = testData2;
      print(qcashier.screen36.sound_led3);
      expect(qcashier.screen36.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen36.sound_led3 = defalut;
      print(qcashier.screen36.sound_led3);
      expect(qcashier.screen36.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen36.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01410_element_check_01387 **********\n\n");
    });

    test('01411_element_check_01388', () async {
      print("\n********** テスト実行：01411_element_check_01388 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.title;
      print(qcashier.screen37.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.title = testData1s;
      print(qcashier.screen37.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.title = testData2s;
      print(qcashier.screen37.title);
      expect(qcashier.screen37.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.title = defalut;
      print(qcashier.screen37.title);
      expect(qcashier.screen37.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01411_element_check_01388 **********\n\n");
    });

    test('01412_element_check_01389', () async {
      print("\n********** テスト実行：01412_element_check_01389 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.msg1;
      print(qcashier.screen37.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.msg1 = testData1s;
      print(qcashier.screen37.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.msg1 = testData2s;
      print(qcashier.screen37.msg1);
      expect(qcashier.screen37.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.msg1 = defalut;
      print(qcashier.screen37.msg1);
      expect(qcashier.screen37.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01412_element_check_01389 **********\n\n");
    });

    test('01413_element_check_01390', () async {
      print("\n********** テスト実行：01413_element_check_01390 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.msg2;
      print(qcashier.screen37.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.msg2 = testData1s;
      print(qcashier.screen37.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.msg2 = testData2s;
      print(qcashier.screen37.msg2);
      expect(qcashier.screen37.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.msg2 = defalut;
      print(qcashier.screen37.msg2);
      expect(qcashier.screen37.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01413_element_check_01390 **********\n\n");
    });

    test('01414_element_check_01391', () async {
      print("\n********** テスト実行：01414_element_check_01391 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.msg1_size;
      print(qcashier.screen37.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.msg1_size = testData1;
      print(qcashier.screen37.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.msg1_size = testData2;
      print(qcashier.screen37.msg1_size);
      expect(qcashier.screen37.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.msg1_size = defalut;
      print(qcashier.screen37.msg1_size);
      expect(qcashier.screen37.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01414_element_check_01391 **********\n\n");
    });

    test('01415_element_check_01392', () async {
      print("\n********** テスト実行：01415_element_check_01392 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.msg2_size;
      print(qcashier.screen37.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.msg2_size = testData1;
      print(qcashier.screen37.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.msg2_size = testData2;
      print(qcashier.screen37.msg2_size);
      expect(qcashier.screen37.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.msg2_size = defalut;
      print(qcashier.screen37.msg2_size);
      expect(qcashier.screen37.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01415_element_check_01392 **********\n\n");
    });

    test('01416_element_check_01393', () async {
      print("\n********** テスト実行：01416_element_check_01393 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.sound1;
      print(qcashier.screen37.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.sound1 = testData1;
      print(qcashier.screen37.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.sound1 = testData2;
      print(qcashier.screen37.sound1);
      expect(qcashier.screen37.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.sound1 = defalut;
      print(qcashier.screen37.sound1);
      expect(qcashier.screen37.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01416_element_check_01393 **********\n\n");
    });

    test('01417_element_check_01394', () async {
      print("\n********** テスト実行：01417_element_check_01394 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.sound2;
      print(qcashier.screen37.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.sound2 = testData1;
      print(qcashier.screen37.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.sound2 = testData2;
      print(qcashier.screen37.sound2);
      expect(qcashier.screen37.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.sound2 = defalut;
      print(qcashier.screen37.sound2);
      expect(qcashier.screen37.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01417_element_check_01394 **********\n\n");
    });

    test('01418_element_check_01395', () async {
      print("\n********** テスト実行：01418_element_check_01395 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.sound3;
      print(qcashier.screen37.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.sound3 = testData1;
      print(qcashier.screen37.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.sound3 = testData2;
      print(qcashier.screen37.sound3);
      expect(qcashier.screen37.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.sound3 = defalut;
      print(qcashier.screen37.sound3);
      expect(qcashier.screen37.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01418_element_check_01395 **********\n\n");
    });

    test('01419_element_check_01396', () async {
      print("\n********** テスト実行：01419_element_check_01396 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.snd_timer;
      print(qcashier.screen37.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.snd_timer = testData1;
      print(qcashier.screen37.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.snd_timer = testData2;
      print(qcashier.screen37.snd_timer);
      expect(qcashier.screen37.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.snd_timer = defalut;
      print(qcashier.screen37.snd_timer);
      expect(qcashier.screen37.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01419_element_check_01396 **********\n\n");
    });

    test('01420_element_check_01397', () async {
      print("\n********** テスト実行：01420_element_check_01397 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.timer1;
      print(qcashier.screen37.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.timer1 = testData1;
      print(qcashier.screen37.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.timer1 = testData2;
      print(qcashier.screen37.timer1);
      expect(qcashier.screen37.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.timer1 = defalut;
      print(qcashier.screen37.timer1);
      expect(qcashier.screen37.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01420_element_check_01397 **********\n\n");
    });

    test('01421_element_check_01398', () async {
      print("\n********** テスト実行：01421_element_check_01398 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.timer2;
      print(qcashier.screen37.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.timer2 = testData1;
      print(qcashier.screen37.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.timer2 = testData2;
      print(qcashier.screen37.timer2);
      expect(qcashier.screen37.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.timer2 = defalut;
      print(qcashier.screen37.timer2);
      expect(qcashier.screen37.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01421_element_check_01398 **********\n\n");
    });

    test('01422_element_check_01399', () async {
      print("\n********** テスト実行：01422_element_check_01399 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.timer3;
      print(qcashier.screen37.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.timer3 = testData1;
      print(qcashier.screen37.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.timer3 = testData2;
      print(qcashier.screen37.timer3);
      expect(qcashier.screen37.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.timer3 = defalut;
      print(qcashier.screen37.timer3);
      expect(qcashier.screen37.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01422_element_check_01399 **********\n\n");
    });

    test('01423_element_check_01400', () async {
      print("\n********** テスト実行：01423_element_check_01400 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.dsp_flg1;
      print(qcashier.screen37.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.dsp_flg1 = testData1;
      print(qcashier.screen37.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.dsp_flg1 = testData2;
      print(qcashier.screen37.dsp_flg1);
      expect(qcashier.screen37.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.dsp_flg1 = defalut;
      print(qcashier.screen37.dsp_flg1);
      expect(qcashier.screen37.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01423_element_check_01400 **********\n\n");
    });

    test('01424_element_check_01401', () async {
      print("\n********** テスト実行：01424_element_check_01401 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.dsp_flg2;
      print(qcashier.screen37.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.dsp_flg2 = testData1;
      print(qcashier.screen37.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.dsp_flg2 = testData2;
      print(qcashier.screen37.dsp_flg2);
      expect(qcashier.screen37.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.dsp_flg2 = defalut;
      print(qcashier.screen37.dsp_flg2);
      expect(qcashier.screen37.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01424_element_check_01401 **********\n\n");
    });

    test('01425_element_check_01402', () async {
      print("\n********** テスト実行：01425_element_check_01402 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.movie01_ext;
      print(qcashier.screen37.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.movie01_ext = testData1;
      print(qcashier.screen37.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.movie01_ext = testData2;
      print(qcashier.screen37.movie01_ext);
      expect(qcashier.screen37.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.movie01_ext = defalut;
      print(qcashier.screen37.movie01_ext);
      expect(qcashier.screen37.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01425_element_check_01402 **********\n\n");
    });

    test('01426_element_check_01403', () async {
      print("\n********** テスト実行：01426_element_check_01403 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.movie02_ext;
      print(qcashier.screen37.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.movie02_ext = testData1;
      print(qcashier.screen37.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.movie02_ext = testData2;
      print(qcashier.screen37.movie02_ext);
      expect(qcashier.screen37.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.movie02_ext = defalut;
      print(qcashier.screen37.movie02_ext);
      expect(qcashier.screen37.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01426_element_check_01403 **********\n\n");
    });

    test('01427_element_check_01404', () async {
      print("\n********** テスト実行：01427_element_check_01404 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.movie03_ext;
      print(qcashier.screen37.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.movie03_ext = testData1;
      print(qcashier.screen37.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.movie03_ext = testData2;
      print(qcashier.screen37.movie03_ext);
      expect(qcashier.screen37.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.movie03_ext = defalut;
      print(qcashier.screen37.movie03_ext);
      expect(qcashier.screen37.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01427_element_check_01404 **********\n\n");
    });

    test('01428_element_check_01405', () async {
      print("\n********** テスト実行：01428_element_check_01405 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.movie04_ext;
      print(qcashier.screen37.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.movie04_ext = testData1;
      print(qcashier.screen37.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.movie04_ext = testData2;
      print(qcashier.screen37.movie04_ext);
      expect(qcashier.screen37.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.movie04_ext = defalut;
      print(qcashier.screen37.movie04_ext);
      expect(qcashier.screen37.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01428_element_check_01405 **********\n\n");
    });

    test('01429_element_check_01406', () async {
      print("\n********** テスト実行：01429_element_check_01406 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line_title;
      print(qcashier.screen37.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line_title = testData1s;
      print(qcashier.screen37.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line_title = testData2s;
      print(qcashier.screen37.line_title);
      expect(qcashier.screen37.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line_title = defalut;
      print(qcashier.screen37.line_title);
      expect(qcashier.screen37.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01429_element_check_01406 **********\n\n");
    });

    test('01430_element_check_01407', () async {
      print("\n********** テスト実行：01430_element_check_01407 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line_title_ex;
      print(qcashier.screen37.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line_title_ex = testData1s;
      print(qcashier.screen37.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line_title_ex = testData2s;
      print(qcashier.screen37.line_title_ex);
      expect(qcashier.screen37.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line_title_ex = defalut;
      print(qcashier.screen37.line_title_ex);
      expect(qcashier.screen37.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01430_element_check_01407 **********\n\n");
    });

    test('01431_element_check_01408', () async {
      print("\n********** テスト実行：01431_element_check_01408 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line1;
      print(qcashier.screen37.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line1 = testData1s;
      print(qcashier.screen37.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line1 = testData2s;
      print(qcashier.screen37.line1);
      expect(qcashier.screen37.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line1 = defalut;
      print(qcashier.screen37.line1);
      expect(qcashier.screen37.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01431_element_check_01408 **********\n\n");
    });

    test('01432_element_check_01409', () async {
      print("\n********** テスト実行：01432_element_check_01409 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line2;
      print(qcashier.screen37.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line2 = testData1s;
      print(qcashier.screen37.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line2 = testData2s;
      print(qcashier.screen37.line2);
      expect(qcashier.screen37.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line2 = defalut;
      print(qcashier.screen37.line2);
      expect(qcashier.screen37.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01432_element_check_01409 **********\n\n");
    });

    test('01433_element_check_01410', () async {
      print("\n********** テスト実行：01433_element_check_01410 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line3;
      print(qcashier.screen37.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line3 = testData1s;
      print(qcashier.screen37.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line3 = testData2s;
      print(qcashier.screen37.line3);
      expect(qcashier.screen37.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line3 = defalut;
      print(qcashier.screen37.line3);
      expect(qcashier.screen37.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01433_element_check_01410 **********\n\n");
    });

    test('01434_element_check_01411', () async {
      print("\n********** テスト実行：01434_element_check_01411 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line4;
      print(qcashier.screen37.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line4 = testData1s;
      print(qcashier.screen37.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line4 = testData2s;
      print(qcashier.screen37.line4);
      expect(qcashier.screen37.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line4 = defalut;
      print(qcashier.screen37.line4);
      expect(qcashier.screen37.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01434_element_check_01411 **********\n\n");
    });

    test('01435_element_check_01412', () async {
      print("\n********** テスト実行：01435_element_check_01412 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line1_ex;
      print(qcashier.screen37.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line1_ex = testData1s;
      print(qcashier.screen37.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line1_ex = testData2s;
      print(qcashier.screen37.line1_ex);
      expect(qcashier.screen37.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line1_ex = defalut;
      print(qcashier.screen37.line1_ex);
      expect(qcashier.screen37.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01435_element_check_01412 **********\n\n");
    });

    test('01436_element_check_01413', () async {
      print("\n********** テスト実行：01436_element_check_01413 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line2_ex;
      print(qcashier.screen37.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line2_ex = testData1s;
      print(qcashier.screen37.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line2_ex = testData2s;
      print(qcashier.screen37.line2_ex);
      expect(qcashier.screen37.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line2_ex = defalut;
      print(qcashier.screen37.line2_ex);
      expect(qcashier.screen37.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01436_element_check_01413 **********\n\n");
    });

    test('01437_element_check_01414', () async {
      print("\n********** テスト実行：01437_element_check_01414 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line3_ex;
      print(qcashier.screen37.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line3_ex = testData1s;
      print(qcashier.screen37.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line3_ex = testData2s;
      print(qcashier.screen37.line3_ex);
      expect(qcashier.screen37.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line3_ex = defalut;
      print(qcashier.screen37.line3_ex);
      expect(qcashier.screen37.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01437_element_check_01414 **********\n\n");
    });

    test('01438_element_check_01415', () async {
      print("\n********** テスト実行：01438_element_check_01415 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.line4_ex;
      print(qcashier.screen37.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.line4_ex = testData1s;
      print(qcashier.screen37.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.line4_ex = testData2s;
      print(qcashier.screen37.line4_ex);
      expect(qcashier.screen37.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.line4_ex = defalut;
      print(qcashier.screen37.line4_ex);
      expect(qcashier.screen37.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01438_element_check_01415 **********\n\n");
    });

    test('01439_element_check_01416', () async {
      print("\n********** テスト実行：01439_element_check_01416 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.sound_led1;
      print(qcashier.screen37.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.sound_led1 = testData1;
      print(qcashier.screen37.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.sound_led1 = testData2;
      print(qcashier.screen37.sound_led1);
      expect(qcashier.screen37.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.sound_led1 = defalut;
      print(qcashier.screen37.sound_led1);
      expect(qcashier.screen37.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01439_element_check_01416 **********\n\n");
    });

    test('01440_element_check_01417', () async {
      print("\n********** テスト実行：01440_element_check_01417 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.sound_led2;
      print(qcashier.screen37.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.sound_led2 = testData1;
      print(qcashier.screen37.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.sound_led2 = testData2;
      print(qcashier.screen37.sound_led2);
      expect(qcashier.screen37.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.sound_led2 = defalut;
      print(qcashier.screen37.sound_led2);
      expect(qcashier.screen37.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01440_element_check_01417 **********\n\n");
    });

    test('01441_element_check_01418', () async {
      print("\n********** テスト実行：01441_element_check_01418 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen37.sound_led3;
      print(qcashier.screen37.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen37.sound_led3 = testData1;
      print(qcashier.screen37.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen37.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen37.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen37.sound_led3 = testData2;
      print(qcashier.screen37.sound_led3);
      expect(qcashier.screen37.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen37.sound_led3 = defalut;
      print(qcashier.screen37.sound_led3);
      expect(qcashier.screen37.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen37.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01441_element_check_01418 **********\n\n");
    });

    test('01442_element_check_01419', () async {
      print("\n********** テスト実行：01442_element_check_01419 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.title;
      print(qcashier.screen38.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.title = testData1s;
      print(qcashier.screen38.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.title = testData2s;
      print(qcashier.screen38.title);
      expect(qcashier.screen38.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.title = defalut;
      print(qcashier.screen38.title);
      expect(qcashier.screen38.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01442_element_check_01419 **********\n\n");
    });

    test('01443_element_check_01420', () async {
      print("\n********** テスト実行：01443_element_check_01420 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.msg1;
      print(qcashier.screen38.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.msg1 = testData1s;
      print(qcashier.screen38.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.msg1 = testData2s;
      print(qcashier.screen38.msg1);
      expect(qcashier.screen38.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.msg1 = defalut;
      print(qcashier.screen38.msg1);
      expect(qcashier.screen38.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01443_element_check_01420 **********\n\n");
    });

    test('01444_element_check_01421', () async {
      print("\n********** テスト実行：01444_element_check_01421 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.msg2;
      print(qcashier.screen38.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.msg2 = testData1s;
      print(qcashier.screen38.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.msg2 = testData2s;
      print(qcashier.screen38.msg2);
      expect(qcashier.screen38.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.msg2 = defalut;
      print(qcashier.screen38.msg2);
      expect(qcashier.screen38.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01444_element_check_01421 **********\n\n");
    });

    test('01445_element_check_01422', () async {
      print("\n********** テスト実行：01445_element_check_01422 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.msg1_size;
      print(qcashier.screen38.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.msg1_size = testData1;
      print(qcashier.screen38.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.msg1_size = testData2;
      print(qcashier.screen38.msg1_size);
      expect(qcashier.screen38.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.msg1_size = defalut;
      print(qcashier.screen38.msg1_size);
      expect(qcashier.screen38.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01445_element_check_01422 **********\n\n");
    });

    test('01446_element_check_01423', () async {
      print("\n********** テスト実行：01446_element_check_01423 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.msg2_size;
      print(qcashier.screen38.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.msg2_size = testData1;
      print(qcashier.screen38.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.msg2_size = testData2;
      print(qcashier.screen38.msg2_size);
      expect(qcashier.screen38.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.msg2_size = defalut;
      print(qcashier.screen38.msg2_size);
      expect(qcashier.screen38.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01446_element_check_01423 **********\n\n");
    });

    test('01447_element_check_01424', () async {
      print("\n********** テスト実行：01447_element_check_01424 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.sound1;
      print(qcashier.screen38.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.sound1 = testData1;
      print(qcashier.screen38.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.sound1 = testData2;
      print(qcashier.screen38.sound1);
      expect(qcashier.screen38.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.sound1 = defalut;
      print(qcashier.screen38.sound1);
      expect(qcashier.screen38.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01447_element_check_01424 **********\n\n");
    });

    test('01448_element_check_01425', () async {
      print("\n********** テスト実行：01448_element_check_01425 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.sound2;
      print(qcashier.screen38.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.sound2 = testData1;
      print(qcashier.screen38.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.sound2 = testData2;
      print(qcashier.screen38.sound2);
      expect(qcashier.screen38.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.sound2 = defalut;
      print(qcashier.screen38.sound2);
      expect(qcashier.screen38.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01448_element_check_01425 **********\n\n");
    });

    test('01449_element_check_01426', () async {
      print("\n********** テスト実行：01449_element_check_01426 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.sound3;
      print(qcashier.screen38.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.sound3 = testData1;
      print(qcashier.screen38.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.sound3 = testData2;
      print(qcashier.screen38.sound3);
      expect(qcashier.screen38.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.sound3 = defalut;
      print(qcashier.screen38.sound3);
      expect(qcashier.screen38.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01449_element_check_01426 **********\n\n");
    });

    test('01450_element_check_01427', () async {
      print("\n********** テスト実行：01450_element_check_01427 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.snd_timer;
      print(qcashier.screen38.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.snd_timer = testData1;
      print(qcashier.screen38.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.snd_timer = testData2;
      print(qcashier.screen38.snd_timer);
      expect(qcashier.screen38.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.snd_timer = defalut;
      print(qcashier.screen38.snd_timer);
      expect(qcashier.screen38.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01450_element_check_01427 **********\n\n");
    });

    test('01451_element_check_01428', () async {
      print("\n********** テスト実行：01451_element_check_01428 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.timer1;
      print(qcashier.screen38.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.timer1 = testData1;
      print(qcashier.screen38.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.timer1 = testData2;
      print(qcashier.screen38.timer1);
      expect(qcashier.screen38.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.timer1 = defalut;
      print(qcashier.screen38.timer1);
      expect(qcashier.screen38.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01451_element_check_01428 **********\n\n");
    });

    test('01452_element_check_01429', () async {
      print("\n********** テスト実行：01452_element_check_01429 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.timer2;
      print(qcashier.screen38.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.timer2 = testData1;
      print(qcashier.screen38.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.timer2 = testData2;
      print(qcashier.screen38.timer2);
      expect(qcashier.screen38.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.timer2 = defalut;
      print(qcashier.screen38.timer2);
      expect(qcashier.screen38.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01452_element_check_01429 **********\n\n");
    });

    test('01453_element_check_01430', () async {
      print("\n********** テスト実行：01453_element_check_01430 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.timer3;
      print(qcashier.screen38.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.timer3 = testData1;
      print(qcashier.screen38.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.timer3 = testData2;
      print(qcashier.screen38.timer3);
      expect(qcashier.screen38.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.timer3 = defalut;
      print(qcashier.screen38.timer3);
      expect(qcashier.screen38.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01453_element_check_01430 **********\n\n");
    });

    test('01454_element_check_01431', () async {
      print("\n********** テスト実行：01454_element_check_01431 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.dsp_flg1;
      print(qcashier.screen38.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.dsp_flg1 = testData1;
      print(qcashier.screen38.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.dsp_flg1 = testData2;
      print(qcashier.screen38.dsp_flg1);
      expect(qcashier.screen38.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.dsp_flg1 = defalut;
      print(qcashier.screen38.dsp_flg1);
      expect(qcashier.screen38.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01454_element_check_01431 **********\n\n");
    });

    test('01455_element_check_01432', () async {
      print("\n********** テスト実行：01455_element_check_01432 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.dsp_flg2;
      print(qcashier.screen38.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.dsp_flg2 = testData1;
      print(qcashier.screen38.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.dsp_flg2 = testData2;
      print(qcashier.screen38.dsp_flg2);
      expect(qcashier.screen38.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.dsp_flg2 = defalut;
      print(qcashier.screen38.dsp_flg2);
      expect(qcashier.screen38.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01455_element_check_01432 **********\n\n");
    });

    test('01456_element_check_01433', () async {
      print("\n********** テスト実行：01456_element_check_01433 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.movie01_ext;
      print(qcashier.screen38.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.movie01_ext = testData1;
      print(qcashier.screen38.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.movie01_ext = testData2;
      print(qcashier.screen38.movie01_ext);
      expect(qcashier.screen38.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.movie01_ext = defalut;
      print(qcashier.screen38.movie01_ext);
      expect(qcashier.screen38.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01456_element_check_01433 **********\n\n");
    });

    test('01457_element_check_01434', () async {
      print("\n********** テスト実行：01457_element_check_01434 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.movie02_ext;
      print(qcashier.screen38.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.movie02_ext = testData1;
      print(qcashier.screen38.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.movie02_ext = testData2;
      print(qcashier.screen38.movie02_ext);
      expect(qcashier.screen38.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.movie02_ext = defalut;
      print(qcashier.screen38.movie02_ext);
      expect(qcashier.screen38.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01457_element_check_01434 **********\n\n");
    });

    test('01458_element_check_01435', () async {
      print("\n********** テスト実行：01458_element_check_01435 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.movie03_ext;
      print(qcashier.screen38.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.movie03_ext = testData1;
      print(qcashier.screen38.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.movie03_ext = testData2;
      print(qcashier.screen38.movie03_ext);
      expect(qcashier.screen38.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.movie03_ext = defalut;
      print(qcashier.screen38.movie03_ext);
      expect(qcashier.screen38.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01458_element_check_01435 **********\n\n");
    });

    test('01459_element_check_01436', () async {
      print("\n********** テスト実行：01459_element_check_01436 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.movie04_ext;
      print(qcashier.screen38.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.movie04_ext = testData1;
      print(qcashier.screen38.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.movie04_ext = testData2;
      print(qcashier.screen38.movie04_ext);
      expect(qcashier.screen38.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.movie04_ext = defalut;
      print(qcashier.screen38.movie04_ext);
      expect(qcashier.screen38.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01459_element_check_01436 **********\n\n");
    });

    test('01460_element_check_01437', () async {
      print("\n********** テスト実行：01460_element_check_01437 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line_title;
      print(qcashier.screen38.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line_title = testData1s;
      print(qcashier.screen38.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line_title = testData2s;
      print(qcashier.screen38.line_title);
      expect(qcashier.screen38.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line_title = defalut;
      print(qcashier.screen38.line_title);
      expect(qcashier.screen38.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01460_element_check_01437 **********\n\n");
    });

    test('01461_element_check_01438', () async {
      print("\n********** テスト実行：01461_element_check_01438 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line_title_ex;
      print(qcashier.screen38.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line_title_ex = testData1s;
      print(qcashier.screen38.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line_title_ex = testData2s;
      print(qcashier.screen38.line_title_ex);
      expect(qcashier.screen38.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line_title_ex = defalut;
      print(qcashier.screen38.line_title_ex);
      expect(qcashier.screen38.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01461_element_check_01438 **********\n\n");
    });

    test('01462_element_check_01439', () async {
      print("\n********** テスト実行：01462_element_check_01439 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line1;
      print(qcashier.screen38.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line1 = testData1s;
      print(qcashier.screen38.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line1 = testData2s;
      print(qcashier.screen38.line1);
      expect(qcashier.screen38.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line1 = defalut;
      print(qcashier.screen38.line1);
      expect(qcashier.screen38.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01462_element_check_01439 **********\n\n");
    });

    test('01463_element_check_01440', () async {
      print("\n********** テスト実行：01463_element_check_01440 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line2;
      print(qcashier.screen38.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line2 = testData1s;
      print(qcashier.screen38.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line2 = testData2s;
      print(qcashier.screen38.line2);
      expect(qcashier.screen38.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line2 = defalut;
      print(qcashier.screen38.line2);
      expect(qcashier.screen38.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01463_element_check_01440 **********\n\n");
    });

    test('01464_element_check_01441', () async {
      print("\n********** テスト実行：01464_element_check_01441 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line3;
      print(qcashier.screen38.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line3 = testData1s;
      print(qcashier.screen38.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line3 = testData2s;
      print(qcashier.screen38.line3);
      expect(qcashier.screen38.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line3 = defalut;
      print(qcashier.screen38.line3);
      expect(qcashier.screen38.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01464_element_check_01441 **********\n\n");
    });

    test('01465_element_check_01442', () async {
      print("\n********** テスト実行：01465_element_check_01442 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line4;
      print(qcashier.screen38.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line4 = testData1s;
      print(qcashier.screen38.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line4 = testData2s;
      print(qcashier.screen38.line4);
      expect(qcashier.screen38.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line4 = defalut;
      print(qcashier.screen38.line4);
      expect(qcashier.screen38.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01465_element_check_01442 **********\n\n");
    });

    test('01466_element_check_01443', () async {
      print("\n********** テスト実行：01466_element_check_01443 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line1_ex;
      print(qcashier.screen38.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line1_ex = testData1s;
      print(qcashier.screen38.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line1_ex = testData2s;
      print(qcashier.screen38.line1_ex);
      expect(qcashier.screen38.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line1_ex = defalut;
      print(qcashier.screen38.line1_ex);
      expect(qcashier.screen38.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01466_element_check_01443 **********\n\n");
    });

    test('01467_element_check_01444', () async {
      print("\n********** テスト実行：01467_element_check_01444 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line2_ex;
      print(qcashier.screen38.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line2_ex = testData1s;
      print(qcashier.screen38.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line2_ex = testData2s;
      print(qcashier.screen38.line2_ex);
      expect(qcashier.screen38.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line2_ex = defalut;
      print(qcashier.screen38.line2_ex);
      expect(qcashier.screen38.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01467_element_check_01444 **********\n\n");
    });

    test('01468_element_check_01445', () async {
      print("\n********** テスト実行：01468_element_check_01445 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line3_ex;
      print(qcashier.screen38.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line3_ex = testData1s;
      print(qcashier.screen38.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line3_ex = testData2s;
      print(qcashier.screen38.line3_ex);
      expect(qcashier.screen38.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line3_ex = defalut;
      print(qcashier.screen38.line3_ex);
      expect(qcashier.screen38.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01468_element_check_01445 **********\n\n");
    });

    test('01469_element_check_01446', () async {
      print("\n********** テスト実行：01469_element_check_01446 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.line4_ex;
      print(qcashier.screen38.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.line4_ex = testData1s;
      print(qcashier.screen38.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.line4_ex = testData2s;
      print(qcashier.screen38.line4_ex);
      expect(qcashier.screen38.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.line4_ex = defalut;
      print(qcashier.screen38.line4_ex);
      expect(qcashier.screen38.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01469_element_check_01446 **********\n\n");
    });

    test('01470_element_check_01447', () async {
      print("\n********** テスト実行：01470_element_check_01447 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.sound_led1;
      print(qcashier.screen38.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.sound_led1 = testData1;
      print(qcashier.screen38.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.sound_led1 = testData2;
      print(qcashier.screen38.sound_led1);
      expect(qcashier.screen38.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.sound_led1 = defalut;
      print(qcashier.screen38.sound_led1);
      expect(qcashier.screen38.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01470_element_check_01447 **********\n\n");
    });

    test('01471_element_check_01448', () async {
      print("\n********** テスト実行：01471_element_check_01448 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.sound_led2;
      print(qcashier.screen38.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.sound_led2 = testData1;
      print(qcashier.screen38.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.sound_led2 = testData2;
      print(qcashier.screen38.sound_led2);
      expect(qcashier.screen38.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.sound_led2 = defalut;
      print(qcashier.screen38.sound_led2);
      expect(qcashier.screen38.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01471_element_check_01448 **********\n\n");
    });

    test('01472_element_check_01449', () async {
      print("\n********** テスト実行：01472_element_check_01449 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen38.sound_led3;
      print(qcashier.screen38.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen38.sound_led3 = testData1;
      print(qcashier.screen38.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen38.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen38.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen38.sound_led3 = testData2;
      print(qcashier.screen38.sound_led3);
      expect(qcashier.screen38.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen38.sound_led3 = defalut;
      print(qcashier.screen38.sound_led3);
      expect(qcashier.screen38.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen38.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01472_element_check_01449 **********\n\n");
    });

    test('01473_element_check_01450', () async {
      print("\n********** テスト実行：01473_element_check_01450 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.title;
      print(qcashier.screen39.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.title = testData1s;
      print(qcashier.screen39.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.title = testData2s;
      print(qcashier.screen39.title);
      expect(qcashier.screen39.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.title = defalut;
      print(qcashier.screen39.title);
      expect(qcashier.screen39.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01473_element_check_01450 **********\n\n");
    });

    test('01474_element_check_01451', () async {
      print("\n********** テスト実行：01474_element_check_01451 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.msg1;
      print(qcashier.screen39.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.msg1 = testData1s;
      print(qcashier.screen39.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.msg1 = testData2s;
      print(qcashier.screen39.msg1);
      expect(qcashier.screen39.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.msg1 = defalut;
      print(qcashier.screen39.msg1);
      expect(qcashier.screen39.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01474_element_check_01451 **********\n\n");
    });

    test('01475_element_check_01452', () async {
      print("\n********** テスト実行：01475_element_check_01452 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.msg2;
      print(qcashier.screen39.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.msg2 = testData1s;
      print(qcashier.screen39.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.msg2 = testData2s;
      print(qcashier.screen39.msg2);
      expect(qcashier.screen39.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.msg2 = defalut;
      print(qcashier.screen39.msg2);
      expect(qcashier.screen39.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01475_element_check_01452 **********\n\n");
    });

    test('01476_element_check_01453', () async {
      print("\n********** テスト実行：01476_element_check_01453 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.msg1_size;
      print(qcashier.screen39.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.msg1_size = testData1;
      print(qcashier.screen39.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.msg1_size = testData2;
      print(qcashier.screen39.msg1_size);
      expect(qcashier.screen39.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.msg1_size = defalut;
      print(qcashier.screen39.msg1_size);
      expect(qcashier.screen39.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01476_element_check_01453 **********\n\n");
    });

    test('01477_element_check_01454', () async {
      print("\n********** テスト実行：01477_element_check_01454 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.msg2_size;
      print(qcashier.screen39.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.msg2_size = testData1;
      print(qcashier.screen39.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.msg2_size = testData2;
      print(qcashier.screen39.msg2_size);
      expect(qcashier.screen39.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.msg2_size = defalut;
      print(qcashier.screen39.msg2_size);
      expect(qcashier.screen39.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01477_element_check_01454 **********\n\n");
    });

    test('01478_element_check_01455', () async {
      print("\n********** テスト実行：01478_element_check_01455 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.sound1;
      print(qcashier.screen39.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.sound1 = testData1;
      print(qcashier.screen39.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.sound1 = testData2;
      print(qcashier.screen39.sound1);
      expect(qcashier.screen39.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.sound1 = defalut;
      print(qcashier.screen39.sound1);
      expect(qcashier.screen39.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01478_element_check_01455 **********\n\n");
    });

    test('01479_element_check_01456', () async {
      print("\n********** テスト実行：01479_element_check_01456 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.sound2;
      print(qcashier.screen39.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.sound2 = testData1;
      print(qcashier.screen39.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.sound2 = testData2;
      print(qcashier.screen39.sound2);
      expect(qcashier.screen39.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.sound2 = defalut;
      print(qcashier.screen39.sound2);
      expect(qcashier.screen39.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01479_element_check_01456 **********\n\n");
    });

    test('01480_element_check_01457', () async {
      print("\n********** テスト実行：01480_element_check_01457 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.sound3;
      print(qcashier.screen39.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.sound3 = testData1;
      print(qcashier.screen39.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.sound3 = testData2;
      print(qcashier.screen39.sound3);
      expect(qcashier.screen39.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.sound3 = defalut;
      print(qcashier.screen39.sound3);
      expect(qcashier.screen39.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01480_element_check_01457 **********\n\n");
    });

    test('01481_element_check_01458', () async {
      print("\n********** テスト実行：01481_element_check_01458 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.snd_timer;
      print(qcashier.screen39.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.snd_timer = testData1;
      print(qcashier.screen39.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.snd_timer = testData2;
      print(qcashier.screen39.snd_timer);
      expect(qcashier.screen39.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.snd_timer = defalut;
      print(qcashier.screen39.snd_timer);
      expect(qcashier.screen39.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01481_element_check_01458 **********\n\n");
    });

    test('01482_element_check_01459', () async {
      print("\n********** テスト実行：01482_element_check_01459 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.timer1;
      print(qcashier.screen39.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.timer1 = testData1;
      print(qcashier.screen39.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.timer1 = testData2;
      print(qcashier.screen39.timer1);
      expect(qcashier.screen39.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.timer1 = defalut;
      print(qcashier.screen39.timer1);
      expect(qcashier.screen39.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01482_element_check_01459 **********\n\n");
    });

    test('01483_element_check_01460', () async {
      print("\n********** テスト実行：01483_element_check_01460 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.timer2;
      print(qcashier.screen39.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.timer2 = testData1;
      print(qcashier.screen39.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.timer2 = testData2;
      print(qcashier.screen39.timer2);
      expect(qcashier.screen39.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.timer2 = defalut;
      print(qcashier.screen39.timer2);
      expect(qcashier.screen39.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01483_element_check_01460 **********\n\n");
    });

    test('01484_element_check_01461', () async {
      print("\n********** テスト実行：01484_element_check_01461 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.timer3;
      print(qcashier.screen39.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.timer3 = testData1;
      print(qcashier.screen39.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.timer3 = testData2;
      print(qcashier.screen39.timer3);
      expect(qcashier.screen39.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.timer3 = defalut;
      print(qcashier.screen39.timer3);
      expect(qcashier.screen39.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01484_element_check_01461 **********\n\n");
    });

    test('01485_element_check_01462', () async {
      print("\n********** テスト実行：01485_element_check_01462 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.dsp_flg1;
      print(qcashier.screen39.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.dsp_flg1 = testData1;
      print(qcashier.screen39.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.dsp_flg1 = testData2;
      print(qcashier.screen39.dsp_flg1);
      expect(qcashier.screen39.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.dsp_flg1 = defalut;
      print(qcashier.screen39.dsp_flg1);
      expect(qcashier.screen39.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01485_element_check_01462 **********\n\n");
    });

    test('01486_element_check_01463', () async {
      print("\n********** テスト実行：01486_element_check_01463 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.dsp_flg2;
      print(qcashier.screen39.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.dsp_flg2 = testData1;
      print(qcashier.screen39.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.dsp_flg2 = testData2;
      print(qcashier.screen39.dsp_flg2);
      expect(qcashier.screen39.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.dsp_flg2 = defalut;
      print(qcashier.screen39.dsp_flg2);
      expect(qcashier.screen39.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01486_element_check_01463 **********\n\n");
    });

    test('01487_element_check_01464', () async {
      print("\n********** テスト実行：01487_element_check_01464 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.movie01_ext;
      print(qcashier.screen39.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.movie01_ext = testData1;
      print(qcashier.screen39.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.movie01_ext = testData2;
      print(qcashier.screen39.movie01_ext);
      expect(qcashier.screen39.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.movie01_ext = defalut;
      print(qcashier.screen39.movie01_ext);
      expect(qcashier.screen39.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01487_element_check_01464 **********\n\n");
    });

    test('01488_element_check_01465', () async {
      print("\n********** テスト実行：01488_element_check_01465 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.movie02_ext;
      print(qcashier.screen39.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.movie02_ext = testData1;
      print(qcashier.screen39.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.movie02_ext = testData2;
      print(qcashier.screen39.movie02_ext);
      expect(qcashier.screen39.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.movie02_ext = defalut;
      print(qcashier.screen39.movie02_ext);
      expect(qcashier.screen39.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01488_element_check_01465 **********\n\n");
    });

    test('01489_element_check_01466', () async {
      print("\n********** テスト実行：01489_element_check_01466 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.movie03_ext;
      print(qcashier.screen39.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.movie03_ext = testData1;
      print(qcashier.screen39.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.movie03_ext = testData2;
      print(qcashier.screen39.movie03_ext);
      expect(qcashier.screen39.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.movie03_ext = defalut;
      print(qcashier.screen39.movie03_ext);
      expect(qcashier.screen39.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01489_element_check_01466 **********\n\n");
    });

    test('01490_element_check_01467', () async {
      print("\n********** テスト実行：01490_element_check_01467 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.movie04_ext;
      print(qcashier.screen39.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.movie04_ext = testData1;
      print(qcashier.screen39.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.movie04_ext = testData2;
      print(qcashier.screen39.movie04_ext);
      expect(qcashier.screen39.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.movie04_ext = defalut;
      print(qcashier.screen39.movie04_ext);
      expect(qcashier.screen39.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01490_element_check_01467 **********\n\n");
    });

    test('01491_element_check_01468', () async {
      print("\n********** テスト実行：01491_element_check_01468 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line_title;
      print(qcashier.screen39.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line_title = testData1s;
      print(qcashier.screen39.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line_title = testData2s;
      print(qcashier.screen39.line_title);
      expect(qcashier.screen39.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line_title = defalut;
      print(qcashier.screen39.line_title);
      expect(qcashier.screen39.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01491_element_check_01468 **********\n\n");
    });

    test('01492_element_check_01469', () async {
      print("\n********** テスト実行：01492_element_check_01469 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line_title_ex;
      print(qcashier.screen39.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line_title_ex = testData1s;
      print(qcashier.screen39.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line_title_ex = testData2s;
      print(qcashier.screen39.line_title_ex);
      expect(qcashier.screen39.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line_title_ex = defalut;
      print(qcashier.screen39.line_title_ex);
      expect(qcashier.screen39.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01492_element_check_01469 **********\n\n");
    });

    test('01493_element_check_01470', () async {
      print("\n********** テスト実行：01493_element_check_01470 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line1;
      print(qcashier.screen39.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line1 = testData1s;
      print(qcashier.screen39.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line1 = testData2s;
      print(qcashier.screen39.line1);
      expect(qcashier.screen39.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line1 = defalut;
      print(qcashier.screen39.line1);
      expect(qcashier.screen39.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01493_element_check_01470 **********\n\n");
    });

    test('01494_element_check_01471', () async {
      print("\n********** テスト実行：01494_element_check_01471 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line2;
      print(qcashier.screen39.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line2 = testData1s;
      print(qcashier.screen39.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line2 = testData2s;
      print(qcashier.screen39.line2);
      expect(qcashier.screen39.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line2 = defalut;
      print(qcashier.screen39.line2);
      expect(qcashier.screen39.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01494_element_check_01471 **********\n\n");
    });

    test('01495_element_check_01472', () async {
      print("\n********** テスト実行：01495_element_check_01472 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line3;
      print(qcashier.screen39.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line3 = testData1s;
      print(qcashier.screen39.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line3 = testData2s;
      print(qcashier.screen39.line3);
      expect(qcashier.screen39.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line3 = defalut;
      print(qcashier.screen39.line3);
      expect(qcashier.screen39.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01495_element_check_01472 **********\n\n");
    });

    test('01496_element_check_01473', () async {
      print("\n********** テスト実行：01496_element_check_01473 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line4;
      print(qcashier.screen39.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line4 = testData1s;
      print(qcashier.screen39.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line4 = testData2s;
      print(qcashier.screen39.line4);
      expect(qcashier.screen39.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line4 = defalut;
      print(qcashier.screen39.line4);
      expect(qcashier.screen39.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01496_element_check_01473 **********\n\n");
    });

    test('01497_element_check_01474', () async {
      print("\n********** テスト実行：01497_element_check_01474 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line1_ex;
      print(qcashier.screen39.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line1_ex = testData1s;
      print(qcashier.screen39.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line1_ex = testData2s;
      print(qcashier.screen39.line1_ex);
      expect(qcashier.screen39.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line1_ex = defalut;
      print(qcashier.screen39.line1_ex);
      expect(qcashier.screen39.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01497_element_check_01474 **********\n\n");
    });

    test('01498_element_check_01475', () async {
      print("\n********** テスト実行：01498_element_check_01475 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line2_ex;
      print(qcashier.screen39.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line2_ex = testData1s;
      print(qcashier.screen39.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line2_ex = testData2s;
      print(qcashier.screen39.line2_ex);
      expect(qcashier.screen39.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line2_ex = defalut;
      print(qcashier.screen39.line2_ex);
      expect(qcashier.screen39.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01498_element_check_01475 **********\n\n");
    });

    test('01499_element_check_01476', () async {
      print("\n********** テスト実行：01499_element_check_01476 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line3_ex;
      print(qcashier.screen39.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line3_ex = testData1s;
      print(qcashier.screen39.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line3_ex = testData2s;
      print(qcashier.screen39.line3_ex);
      expect(qcashier.screen39.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line3_ex = defalut;
      print(qcashier.screen39.line3_ex);
      expect(qcashier.screen39.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01499_element_check_01476 **********\n\n");
    });

    test('01500_element_check_01477', () async {
      print("\n********** テスト実行：01500_element_check_01477 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.line4_ex;
      print(qcashier.screen39.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.line4_ex = testData1s;
      print(qcashier.screen39.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.line4_ex = testData2s;
      print(qcashier.screen39.line4_ex);
      expect(qcashier.screen39.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.line4_ex = defalut;
      print(qcashier.screen39.line4_ex);
      expect(qcashier.screen39.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01500_element_check_01477 **********\n\n");
    });

    test('01501_element_check_01478', () async {
      print("\n********** テスト実行：01501_element_check_01478 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.sound_led1;
      print(qcashier.screen39.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.sound_led1 = testData1;
      print(qcashier.screen39.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.sound_led1 = testData2;
      print(qcashier.screen39.sound_led1);
      expect(qcashier.screen39.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.sound_led1 = defalut;
      print(qcashier.screen39.sound_led1);
      expect(qcashier.screen39.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01501_element_check_01478 **********\n\n");
    });

    test('01502_element_check_01479', () async {
      print("\n********** テスト実行：01502_element_check_01479 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.sound_led2;
      print(qcashier.screen39.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.sound_led2 = testData1;
      print(qcashier.screen39.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.sound_led2 = testData2;
      print(qcashier.screen39.sound_led2);
      expect(qcashier.screen39.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.sound_led2 = defalut;
      print(qcashier.screen39.sound_led2);
      expect(qcashier.screen39.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01502_element_check_01479 **********\n\n");
    });

    test('01503_element_check_01480', () async {
      print("\n********** テスト実行：01503_element_check_01480 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen39.sound_led3;
      print(qcashier.screen39.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen39.sound_led3 = testData1;
      print(qcashier.screen39.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen39.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen39.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen39.sound_led3 = testData2;
      print(qcashier.screen39.sound_led3);
      expect(qcashier.screen39.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen39.sound_led3 = defalut;
      print(qcashier.screen39.sound_led3);
      expect(qcashier.screen39.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen39.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01503_element_check_01480 **********\n\n");
    });

    test('01504_element_check_01481', () async {
      print("\n********** テスト実行：01504_element_check_01481 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.title;
      print(qcashier.screen40.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.title = testData1s;
      print(qcashier.screen40.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.title = testData2s;
      print(qcashier.screen40.title);
      expect(qcashier.screen40.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.title = defalut;
      print(qcashier.screen40.title);
      expect(qcashier.screen40.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01504_element_check_01481 **********\n\n");
    });

    test('01505_element_check_01482', () async {
      print("\n********** テスト実行：01505_element_check_01482 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.msg1;
      print(qcashier.screen40.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.msg1 = testData1s;
      print(qcashier.screen40.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.msg1 = testData2s;
      print(qcashier.screen40.msg1);
      expect(qcashier.screen40.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.msg1 = defalut;
      print(qcashier.screen40.msg1);
      expect(qcashier.screen40.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01505_element_check_01482 **********\n\n");
    });

    test('01506_element_check_01483', () async {
      print("\n********** テスト実行：01506_element_check_01483 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.msg2;
      print(qcashier.screen40.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.msg2 = testData1s;
      print(qcashier.screen40.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.msg2 = testData2s;
      print(qcashier.screen40.msg2);
      expect(qcashier.screen40.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.msg2 = defalut;
      print(qcashier.screen40.msg2);
      expect(qcashier.screen40.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01506_element_check_01483 **********\n\n");
    });

    test('01507_element_check_01484', () async {
      print("\n********** テスト実行：01507_element_check_01484 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.msg1_size;
      print(qcashier.screen40.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.msg1_size = testData1;
      print(qcashier.screen40.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.msg1_size = testData2;
      print(qcashier.screen40.msg1_size);
      expect(qcashier.screen40.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.msg1_size = defalut;
      print(qcashier.screen40.msg1_size);
      expect(qcashier.screen40.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01507_element_check_01484 **********\n\n");
    });

    test('01508_element_check_01485', () async {
      print("\n********** テスト実行：01508_element_check_01485 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.msg2_size;
      print(qcashier.screen40.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.msg2_size = testData1;
      print(qcashier.screen40.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.msg2_size = testData2;
      print(qcashier.screen40.msg2_size);
      expect(qcashier.screen40.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.msg2_size = defalut;
      print(qcashier.screen40.msg2_size);
      expect(qcashier.screen40.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01508_element_check_01485 **********\n\n");
    });

    test('01509_element_check_01486', () async {
      print("\n********** テスト実行：01509_element_check_01486 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.sound1;
      print(qcashier.screen40.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.sound1 = testData1;
      print(qcashier.screen40.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.sound1 = testData2;
      print(qcashier.screen40.sound1);
      expect(qcashier.screen40.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.sound1 = defalut;
      print(qcashier.screen40.sound1);
      expect(qcashier.screen40.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01509_element_check_01486 **********\n\n");
    });

    test('01510_element_check_01487', () async {
      print("\n********** テスト実行：01510_element_check_01487 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.sound2;
      print(qcashier.screen40.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.sound2 = testData1;
      print(qcashier.screen40.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.sound2 = testData2;
      print(qcashier.screen40.sound2);
      expect(qcashier.screen40.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.sound2 = defalut;
      print(qcashier.screen40.sound2);
      expect(qcashier.screen40.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01510_element_check_01487 **********\n\n");
    });

    test('01511_element_check_01488', () async {
      print("\n********** テスト実行：01511_element_check_01488 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.sound3;
      print(qcashier.screen40.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.sound3 = testData1;
      print(qcashier.screen40.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.sound3 = testData2;
      print(qcashier.screen40.sound3);
      expect(qcashier.screen40.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.sound3 = defalut;
      print(qcashier.screen40.sound3);
      expect(qcashier.screen40.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01511_element_check_01488 **********\n\n");
    });

    test('01512_element_check_01489', () async {
      print("\n********** テスト実行：01512_element_check_01489 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.snd_timer;
      print(qcashier.screen40.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.snd_timer = testData1;
      print(qcashier.screen40.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.snd_timer = testData2;
      print(qcashier.screen40.snd_timer);
      expect(qcashier.screen40.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.snd_timer = defalut;
      print(qcashier.screen40.snd_timer);
      expect(qcashier.screen40.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01512_element_check_01489 **********\n\n");
    });

    test('01513_element_check_01490', () async {
      print("\n********** テスト実行：01513_element_check_01490 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.timer1;
      print(qcashier.screen40.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.timer1 = testData1;
      print(qcashier.screen40.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.timer1 = testData2;
      print(qcashier.screen40.timer1);
      expect(qcashier.screen40.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.timer1 = defalut;
      print(qcashier.screen40.timer1);
      expect(qcashier.screen40.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01513_element_check_01490 **********\n\n");
    });

    test('01514_element_check_01491', () async {
      print("\n********** テスト実行：01514_element_check_01491 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.timer2;
      print(qcashier.screen40.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.timer2 = testData1;
      print(qcashier.screen40.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.timer2 = testData2;
      print(qcashier.screen40.timer2);
      expect(qcashier.screen40.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.timer2 = defalut;
      print(qcashier.screen40.timer2);
      expect(qcashier.screen40.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01514_element_check_01491 **********\n\n");
    });

    test('01515_element_check_01492', () async {
      print("\n********** テスト実行：01515_element_check_01492 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.timer3;
      print(qcashier.screen40.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.timer3 = testData1;
      print(qcashier.screen40.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.timer3 = testData2;
      print(qcashier.screen40.timer3);
      expect(qcashier.screen40.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.timer3 = defalut;
      print(qcashier.screen40.timer3);
      expect(qcashier.screen40.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01515_element_check_01492 **********\n\n");
    });

    test('01516_element_check_01493', () async {
      print("\n********** テスト実行：01516_element_check_01493 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.dsp_flg1;
      print(qcashier.screen40.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.dsp_flg1 = testData1;
      print(qcashier.screen40.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.dsp_flg1 = testData2;
      print(qcashier.screen40.dsp_flg1);
      expect(qcashier.screen40.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.dsp_flg1 = defalut;
      print(qcashier.screen40.dsp_flg1);
      expect(qcashier.screen40.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01516_element_check_01493 **********\n\n");
    });

    test('01517_element_check_01494', () async {
      print("\n********** テスト実行：01517_element_check_01494 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.dsp_flg2;
      print(qcashier.screen40.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.dsp_flg2 = testData1;
      print(qcashier.screen40.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.dsp_flg2 = testData2;
      print(qcashier.screen40.dsp_flg2);
      expect(qcashier.screen40.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.dsp_flg2 = defalut;
      print(qcashier.screen40.dsp_flg2);
      expect(qcashier.screen40.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01517_element_check_01494 **********\n\n");
    });

    test('01518_element_check_01495', () async {
      print("\n********** テスト実行：01518_element_check_01495 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.movie01_ext;
      print(qcashier.screen40.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.movie01_ext = testData1;
      print(qcashier.screen40.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.movie01_ext = testData2;
      print(qcashier.screen40.movie01_ext);
      expect(qcashier.screen40.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.movie01_ext = defalut;
      print(qcashier.screen40.movie01_ext);
      expect(qcashier.screen40.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01518_element_check_01495 **********\n\n");
    });

    test('01519_element_check_01496', () async {
      print("\n********** テスト実行：01519_element_check_01496 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.movie02_ext;
      print(qcashier.screen40.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.movie02_ext = testData1;
      print(qcashier.screen40.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.movie02_ext = testData2;
      print(qcashier.screen40.movie02_ext);
      expect(qcashier.screen40.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.movie02_ext = defalut;
      print(qcashier.screen40.movie02_ext);
      expect(qcashier.screen40.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01519_element_check_01496 **********\n\n");
    });

    test('01520_element_check_01497', () async {
      print("\n********** テスト実行：01520_element_check_01497 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.movie03_ext;
      print(qcashier.screen40.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.movie03_ext = testData1;
      print(qcashier.screen40.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.movie03_ext = testData2;
      print(qcashier.screen40.movie03_ext);
      expect(qcashier.screen40.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.movie03_ext = defalut;
      print(qcashier.screen40.movie03_ext);
      expect(qcashier.screen40.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01520_element_check_01497 **********\n\n");
    });

    test('01521_element_check_01498', () async {
      print("\n********** テスト実行：01521_element_check_01498 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.movie04_ext;
      print(qcashier.screen40.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.movie04_ext = testData1;
      print(qcashier.screen40.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.movie04_ext = testData2;
      print(qcashier.screen40.movie04_ext);
      expect(qcashier.screen40.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.movie04_ext = defalut;
      print(qcashier.screen40.movie04_ext);
      expect(qcashier.screen40.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01521_element_check_01498 **********\n\n");
    });

    test('01522_element_check_01499', () async {
      print("\n********** テスト実行：01522_element_check_01499 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line_title;
      print(qcashier.screen40.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line_title = testData1s;
      print(qcashier.screen40.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line_title = testData2s;
      print(qcashier.screen40.line_title);
      expect(qcashier.screen40.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line_title = defalut;
      print(qcashier.screen40.line_title);
      expect(qcashier.screen40.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01522_element_check_01499 **********\n\n");
    });

    test('01523_element_check_01500', () async {
      print("\n********** テスト実行：01523_element_check_01500 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line_title_ex;
      print(qcashier.screen40.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line_title_ex = testData1s;
      print(qcashier.screen40.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line_title_ex = testData2s;
      print(qcashier.screen40.line_title_ex);
      expect(qcashier.screen40.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line_title_ex = defalut;
      print(qcashier.screen40.line_title_ex);
      expect(qcashier.screen40.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01523_element_check_01500 **********\n\n");
    });

    test('01524_element_check_01501', () async {
      print("\n********** テスト実行：01524_element_check_01501 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line1;
      print(qcashier.screen40.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line1 = testData1s;
      print(qcashier.screen40.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line1 = testData2s;
      print(qcashier.screen40.line1);
      expect(qcashier.screen40.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line1 = defalut;
      print(qcashier.screen40.line1);
      expect(qcashier.screen40.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01524_element_check_01501 **********\n\n");
    });

    test('01525_element_check_01502', () async {
      print("\n********** テスト実行：01525_element_check_01502 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line2;
      print(qcashier.screen40.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line2 = testData1s;
      print(qcashier.screen40.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line2 = testData2s;
      print(qcashier.screen40.line2);
      expect(qcashier.screen40.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line2 = defalut;
      print(qcashier.screen40.line2);
      expect(qcashier.screen40.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01525_element_check_01502 **********\n\n");
    });

    test('01526_element_check_01503', () async {
      print("\n********** テスト実行：01526_element_check_01503 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line3;
      print(qcashier.screen40.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line3 = testData1s;
      print(qcashier.screen40.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line3 = testData2s;
      print(qcashier.screen40.line3);
      expect(qcashier.screen40.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line3 = defalut;
      print(qcashier.screen40.line3);
      expect(qcashier.screen40.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01526_element_check_01503 **********\n\n");
    });

    test('01527_element_check_01504', () async {
      print("\n********** テスト実行：01527_element_check_01504 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line4;
      print(qcashier.screen40.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line4 = testData1s;
      print(qcashier.screen40.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line4 = testData2s;
      print(qcashier.screen40.line4);
      expect(qcashier.screen40.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line4 = defalut;
      print(qcashier.screen40.line4);
      expect(qcashier.screen40.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01527_element_check_01504 **********\n\n");
    });

    test('01528_element_check_01505', () async {
      print("\n********** テスト実行：01528_element_check_01505 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line1_ex;
      print(qcashier.screen40.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line1_ex = testData1s;
      print(qcashier.screen40.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line1_ex = testData2s;
      print(qcashier.screen40.line1_ex);
      expect(qcashier.screen40.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line1_ex = defalut;
      print(qcashier.screen40.line1_ex);
      expect(qcashier.screen40.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01528_element_check_01505 **********\n\n");
    });

    test('01529_element_check_01506', () async {
      print("\n********** テスト実行：01529_element_check_01506 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line2_ex;
      print(qcashier.screen40.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line2_ex = testData1s;
      print(qcashier.screen40.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line2_ex = testData2s;
      print(qcashier.screen40.line2_ex);
      expect(qcashier.screen40.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line2_ex = defalut;
      print(qcashier.screen40.line2_ex);
      expect(qcashier.screen40.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01529_element_check_01506 **********\n\n");
    });

    test('01530_element_check_01507', () async {
      print("\n********** テスト実行：01530_element_check_01507 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line3_ex;
      print(qcashier.screen40.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line3_ex = testData1s;
      print(qcashier.screen40.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line3_ex = testData2s;
      print(qcashier.screen40.line3_ex);
      expect(qcashier.screen40.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line3_ex = defalut;
      print(qcashier.screen40.line3_ex);
      expect(qcashier.screen40.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01530_element_check_01507 **********\n\n");
    });

    test('01531_element_check_01508', () async {
      print("\n********** テスト実行：01531_element_check_01508 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.line4_ex;
      print(qcashier.screen40.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.line4_ex = testData1s;
      print(qcashier.screen40.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.line4_ex = testData2s;
      print(qcashier.screen40.line4_ex);
      expect(qcashier.screen40.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.line4_ex = defalut;
      print(qcashier.screen40.line4_ex);
      expect(qcashier.screen40.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01531_element_check_01508 **********\n\n");
    });

    test('01532_element_check_01509', () async {
      print("\n********** テスト実行：01532_element_check_01509 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.sound_led1;
      print(qcashier.screen40.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.sound_led1 = testData1;
      print(qcashier.screen40.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.sound_led1 = testData2;
      print(qcashier.screen40.sound_led1);
      expect(qcashier.screen40.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.sound_led1 = defalut;
      print(qcashier.screen40.sound_led1);
      expect(qcashier.screen40.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01532_element_check_01509 **********\n\n");
    });

    test('01533_element_check_01510', () async {
      print("\n********** テスト実行：01533_element_check_01510 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.sound_led2;
      print(qcashier.screen40.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.sound_led2 = testData1;
      print(qcashier.screen40.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.sound_led2 = testData2;
      print(qcashier.screen40.sound_led2);
      expect(qcashier.screen40.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.sound_led2 = defalut;
      print(qcashier.screen40.sound_led2);
      expect(qcashier.screen40.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01533_element_check_01510 **********\n\n");
    });

    test('01534_element_check_01511', () async {
      print("\n********** テスト実行：01534_element_check_01511 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen40.sound_led3;
      print(qcashier.screen40.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen40.sound_led3 = testData1;
      print(qcashier.screen40.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen40.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen40.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen40.sound_led3 = testData2;
      print(qcashier.screen40.sound_led3);
      expect(qcashier.screen40.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen40.sound_led3 = defalut;
      print(qcashier.screen40.sound_led3);
      expect(qcashier.screen40.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen40.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01534_element_check_01511 **********\n\n");
    });

    test('01535_element_check_01512', () async {
      print("\n********** テスト実行：01535_element_check_01512 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.title;
      print(qcashier.screen41.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.title = testData1s;
      print(qcashier.screen41.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.title = testData2s;
      print(qcashier.screen41.title);
      expect(qcashier.screen41.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.title = defalut;
      print(qcashier.screen41.title);
      expect(qcashier.screen41.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01535_element_check_01512 **********\n\n");
    });

    test('01536_element_check_01513', () async {
      print("\n********** テスト実行：01536_element_check_01513 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.msg1;
      print(qcashier.screen41.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.msg1 = testData1s;
      print(qcashier.screen41.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.msg1 = testData2s;
      print(qcashier.screen41.msg1);
      expect(qcashier.screen41.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.msg1 = defalut;
      print(qcashier.screen41.msg1);
      expect(qcashier.screen41.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01536_element_check_01513 **********\n\n");
    });

    test('01537_element_check_01514', () async {
      print("\n********** テスト実行：01537_element_check_01514 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.msg2;
      print(qcashier.screen41.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.msg2 = testData1s;
      print(qcashier.screen41.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.msg2 = testData2s;
      print(qcashier.screen41.msg2);
      expect(qcashier.screen41.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.msg2 = defalut;
      print(qcashier.screen41.msg2);
      expect(qcashier.screen41.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01537_element_check_01514 **********\n\n");
    });

    test('01538_element_check_01515', () async {
      print("\n********** テスト実行：01538_element_check_01515 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.msg1_size;
      print(qcashier.screen41.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.msg1_size = testData1;
      print(qcashier.screen41.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.msg1_size = testData2;
      print(qcashier.screen41.msg1_size);
      expect(qcashier.screen41.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.msg1_size = defalut;
      print(qcashier.screen41.msg1_size);
      expect(qcashier.screen41.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01538_element_check_01515 **********\n\n");
    });

    test('01539_element_check_01516', () async {
      print("\n********** テスト実行：01539_element_check_01516 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.msg2_size;
      print(qcashier.screen41.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.msg2_size = testData1;
      print(qcashier.screen41.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.msg2_size = testData2;
      print(qcashier.screen41.msg2_size);
      expect(qcashier.screen41.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.msg2_size = defalut;
      print(qcashier.screen41.msg2_size);
      expect(qcashier.screen41.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01539_element_check_01516 **********\n\n");
    });

    test('01540_element_check_01517', () async {
      print("\n********** テスト実行：01540_element_check_01517 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.sound1;
      print(qcashier.screen41.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.sound1 = testData1;
      print(qcashier.screen41.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.sound1 = testData2;
      print(qcashier.screen41.sound1);
      expect(qcashier.screen41.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.sound1 = defalut;
      print(qcashier.screen41.sound1);
      expect(qcashier.screen41.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01540_element_check_01517 **********\n\n");
    });

    test('01541_element_check_01518', () async {
      print("\n********** テスト実行：01541_element_check_01518 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.sound2;
      print(qcashier.screen41.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.sound2 = testData1;
      print(qcashier.screen41.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.sound2 = testData2;
      print(qcashier.screen41.sound2);
      expect(qcashier.screen41.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.sound2 = defalut;
      print(qcashier.screen41.sound2);
      expect(qcashier.screen41.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01541_element_check_01518 **********\n\n");
    });

    test('01542_element_check_01519', () async {
      print("\n********** テスト実行：01542_element_check_01519 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.sound3;
      print(qcashier.screen41.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.sound3 = testData1;
      print(qcashier.screen41.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.sound3 = testData2;
      print(qcashier.screen41.sound3);
      expect(qcashier.screen41.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.sound3 = defalut;
      print(qcashier.screen41.sound3);
      expect(qcashier.screen41.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01542_element_check_01519 **********\n\n");
    });

    test('01543_element_check_01520', () async {
      print("\n********** テスト実行：01543_element_check_01520 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.snd_timer;
      print(qcashier.screen41.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.snd_timer = testData1;
      print(qcashier.screen41.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.snd_timer = testData2;
      print(qcashier.screen41.snd_timer);
      expect(qcashier.screen41.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.snd_timer = defalut;
      print(qcashier.screen41.snd_timer);
      expect(qcashier.screen41.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01543_element_check_01520 **********\n\n");
    });

    test('01544_element_check_01521', () async {
      print("\n********** テスト実行：01544_element_check_01521 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.timer1;
      print(qcashier.screen41.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.timer1 = testData1;
      print(qcashier.screen41.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.timer1 = testData2;
      print(qcashier.screen41.timer1);
      expect(qcashier.screen41.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.timer1 = defalut;
      print(qcashier.screen41.timer1);
      expect(qcashier.screen41.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01544_element_check_01521 **********\n\n");
    });

    test('01545_element_check_01522', () async {
      print("\n********** テスト実行：01545_element_check_01522 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.timer2;
      print(qcashier.screen41.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.timer2 = testData1;
      print(qcashier.screen41.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.timer2 = testData2;
      print(qcashier.screen41.timer2);
      expect(qcashier.screen41.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.timer2 = defalut;
      print(qcashier.screen41.timer2);
      expect(qcashier.screen41.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01545_element_check_01522 **********\n\n");
    });

    test('01546_element_check_01523', () async {
      print("\n********** テスト実行：01546_element_check_01523 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.timer3;
      print(qcashier.screen41.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.timer3 = testData1;
      print(qcashier.screen41.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.timer3 = testData2;
      print(qcashier.screen41.timer3);
      expect(qcashier.screen41.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.timer3 = defalut;
      print(qcashier.screen41.timer3);
      expect(qcashier.screen41.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01546_element_check_01523 **********\n\n");
    });

    test('01547_element_check_01524', () async {
      print("\n********** テスト実行：01547_element_check_01524 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.dsp_flg1;
      print(qcashier.screen41.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.dsp_flg1 = testData1;
      print(qcashier.screen41.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.dsp_flg1 = testData2;
      print(qcashier.screen41.dsp_flg1);
      expect(qcashier.screen41.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.dsp_flg1 = defalut;
      print(qcashier.screen41.dsp_flg1);
      expect(qcashier.screen41.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01547_element_check_01524 **********\n\n");
    });

    test('01548_element_check_01525', () async {
      print("\n********** テスト実行：01548_element_check_01525 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.dsp_flg2;
      print(qcashier.screen41.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.dsp_flg2 = testData1;
      print(qcashier.screen41.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.dsp_flg2 = testData2;
      print(qcashier.screen41.dsp_flg2);
      expect(qcashier.screen41.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.dsp_flg2 = defalut;
      print(qcashier.screen41.dsp_flg2);
      expect(qcashier.screen41.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01548_element_check_01525 **********\n\n");
    });

    test('01549_element_check_01526', () async {
      print("\n********** テスト実行：01549_element_check_01526 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.movie01_ext;
      print(qcashier.screen41.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.movie01_ext = testData1;
      print(qcashier.screen41.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.movie01_ext = testData2;
      print(qcashier.screen41.movie01_ext);
      expect(qcashier.screen41.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.movie01_ext = defalut;
      print(qcashier.screen41.movie01_ext);
      expect(qcashier.screen41.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01549_element_check_01526 **********\n\n");
    });

    test('01550_element_check_01527', () async {
      print("\n********** テスト実行：01550_element_check_01527 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.movie02_ext;
      print(qcashier.screen41.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.movie02_ext = testData1;
      print(qcashier.screen41.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.movie02_ext = testData2;
      print(qcashier.screen41.movie02_ext);
      expect(qcashier.screen41.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.movie02_ext = defalut;
      print(qcashier.screen41.movie02_ext);
      expect(qcashier.screen41.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01550_element_check_01527 **********\n\n");
    });

    test('01551_element_check_01528', () async {
      print("\n********** テスト実行：01551_element_check_01528 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.movie03_ext;
      print(qcashier.screen41.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.movie03_ext = testData1;
      print(qcashier.screen41.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.movie03_ext = testData2;
      print(qcashier.screen41.movie03_ext);
      expect(qcashier.screen41.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.movie03_ext = defalut;
      print(qcashier.screen41.movie03_ext);
      expect(qcashier.screen41.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01551_element_check_01528 **********\n\n");
    });

    test('01552_element_check_01529', () async {
      print("\n********** テスト実行：01552_element_check_01529 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.movie04_ext;
      print(qcashier.screen41.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.movie04_ext = testData1;
      print(qcashier.screen41.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.movie04_ext = testData2;
      print(qcashier.screen41.movie04_ext);
      expect(qcashier.screen41.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.movie04_ext = defalut;
      print(qcashier.screen41.movie04_ext);
      expect(qcashier.screen41.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01552_element_check_01529 **********\n\n");
    });

    test('01553_element_check_01530', () async {
      print("\n********** テスト実行：01553_element_check_01530 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line_title;
      print(qcashier.screen41.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line_title = testData1s;
      print(qcashier.screen41.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line_title = testData2s;
      print(qcashier.screen41.line_title);
      expect(qcashier.screen41.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line_title = defalut;
      print(qcashier.screen41.line_title);
      expect(qcashier.screen41.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01553_element_check_01530 **********\n\n");
    });

    test('01554_element_check_01531', () async {
      print("\n********** テスト実行：01554_element_check_01531 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line_title_ex;
      print(qcashier.screen41.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line_title_ex = testData1s;
      print(qcashier.screen41.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line_title_ex = testData2s;
      print(qcashier.screen41.line_title_ex);
      expect(qcashier.screen41.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line_title_ex = defalut;
      print(qcashier.screen41.line_title_ex);
      expect(qcashier.screen41.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01554_element_check_01531 **********\n\n");
    });

    test('01555_element_check_01532', () async {
      print("\n********** テスト実行：01555_element_check_01532 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line1;
      print(qcashier.screen41.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line1 = testData1s;
      print(qcashier.screen41.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line1 = testData2s;
      print(qcashier.screen41.line1);
      expect(qcashier.screen41.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line1 = defalut;
      print(qcashier.screen41.line1);
      expect(qcashier.screen41.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01555_element_check_01532 **********\n\n");
    });

    test('01556_element_check_01533', () async {
      print("\n********** テスト実行：01556_element_check_01533 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line2;
      print(qcashier.screen41.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line2 = testData1s;
      print(qcashier.screen41.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line2 = testData2s;
      print(qcashier.screen41.line2);
      expect(qcashier.screen41.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line2 = defalut;
      print(qcashier.screen41.line2);
      expect(qcashier.screen41.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01556_element_check_01533 **********\n\n");
    });

    test('01557_element_check_01534', () async {
      print("\n********** テスト実行：01557_element_check_01534 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line3;
      print(qcashier.screen41.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line3 = testData1s;
      print(qcashier.screen41.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line3 = testData2s;
      print(qcashier.screen41.line3);
      expect(qcashier.screen41.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line3 = defalut;
      print(qcashier.screen41.line3);
      expect(qcashier.screen41.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01557_element_check_01534 **********\n\n");
    });

    test('01558_element_check_01535', () async {
      print("\n********** テスト実行：01558_element_check_01535 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line4;
      print(qcashier.screen41.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line4 = testData1s;
      print(qcashier.screen41.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line4 = testData2s;
      print(qcashier.screen41.line4);
      expect(qcashier.screen41.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line4 = defalut;
      print(qcashier.screen41.line4);
      expect(qcashier.screen41.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01558_element_check_01535 **********\n\n");
    });

    test('01559_element_check_01536', () async {
      print("\n********** テスト実行：01559_element_check_01536 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line1_ex;
      print(qcashier.screen41.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line1_ex = testData1s;
      print(qcashier.screen41.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line1_ex = testData2s;
      print(qcashier.screen41.line1_ex);
      expect(qcashier.screen41.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line1_ex = defalut;
      print(qcashier.screen41.line1_ex);
      expect(qcashier.screen41.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01559_element_check_01536 **********\n\n");
    });

    test('01560_element_check_01537', () async {
      print("\n********** テスト実行：01560_element_check_01537 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line2_ex;
      print(qcashier.screen41.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line2_ex = testData1s;
      print(qcashier.screen41.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line2_ex = testData2s;
      print(qcashier.screen41.line2_ex);
      expect(qcashier.screen41.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line2_ex = defalut;
      print(qcashier.screen41.line2_ex);
      expect(qcashier.screen41.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01560_element_check_01537 **********\n\n");
    });

    test('01561_element_check_01538', () async {
      print("\n********** テスト実行：01561_element_check_01538 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line3_ex;
      print(qcashier.screen41.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line3_ex = testData1s;
      print(qcashier.screen41.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line3_ex = testData2s;
      print(qcashier.screen41.line3_ex);
      expect(qcashier.screen41.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line3_ex = defalut;
      print(qcashier.screen41.line3_ex);
      expect(qcashier.screen41.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01561_element_check_01538 **********\n\n");
    });

    test('01562_element_check_01539', () async {
      print("\n********** テスト実行：01562_element_check_01539 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.line4_ex;
      print(qcashier.screen41.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.line4_ex = testData1s;
      print(qcashier.screen41.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.line4_ex = testData2s;
      print(qcashier.screen41.line4_ex);
      expect(qcashier.screen41.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.line4_ex = defalut;
      print(qcashier.screen41.line4_ex);
      expect(qcashier.screen41.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01562_element_check_01539 **********\n\n");
    });

    test('01563_element_check_01540', () async {
      print("\n********** テスト実行：01563_element_check_01540 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.sound_led1;
      print(qcashier.screen41.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.sound_led1 = testData1;
      print(qcashier.screen41.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.sound_led1 = testData2;
      print(qcashier.screen41.sound_led1);
      expect(qcashier.screen41.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.sound_led1 = defalut;
      print(qcashier.screen41.sound_led1);
      expect(qcashier.screen41.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01563_element_check_01540 **********\n\n");
    });

    test('01564_element_check_01541', () async {
      print("\n********** テスト実行：01564_element_check_01541 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.sound_led2;
      print(qcashier.screen41.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.sound_led2 = testData1;
      print(qcashier.screen41.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.sound_led2 = testData2;
      print(qcashier.screen41.sound_led2);
      expect(qcashier.screen41.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.sound_led2 = defalut;
      print(qcashier.screen41.sound_led2);
      expect(qcashier.screen41.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01564_element_check_01541 **********\n\n");
    });

    test('01565_element_check_01542', () async {
      print("\n********** テスト実行：01565_element_check_01542 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen41.sound_led3;
      print(qcashier.screen41.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen41.sound_led3 = testData1;
      print(qcashier.screen41.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen41.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen41.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen41.sound_led3 = testData2;
      print(qcashier.screen41.sound_led3);
      expect(qcashier.screen41.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen41.sound_led3 = defalut;
      print(qcashier.screen41.sound_led3);
      expect(qcashier.screen41.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen41.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01565_element_check_01542 **********\n\n");
    });

    test('01566_element_check_01543', () async {
      print("\n********** テスト実行：01566_element_check_01543 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.title;
      print(qcashier.screen42.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.title = testData1s;
      print(qcashier.screen42.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.title = testData2s;
      print(qcashier.screen42.title);
      expect(qcashier.screen42.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.title = defalut;
      print(qcashier.screen42.title);
      expect(qcashier.screen42.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01566_element_check_01543 **********\n\n");
    });

    test('01567_element_check_01544', () async {
      print("\n********** テスト実行：01567_element_check_01544 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.msg1;
      print(qcashier.screen42.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.msg1 = testData1s;
      print(qcashier.screen42.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.msg1 = testData2s;
      print(qcashier.screen42.msg1);
      expect(qcashier.screen42.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.msg1 = defalut;
      print(qcashier.screen42.msg1);
      expect(qcashier.screen42.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01567_element_check_01544 **********\n\n");
    });

    test('01568_element_check_01545', () async {
      print("\n********** テスト実行：01568_element_check_01545 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.msg2;
      print(qcashier.screen42.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.msg2 = testData1s;
      print(qcashier.screen42.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.msg2 = testData2s;
      print(qcashier.screen42.msg2);
      expect(qcashier.screen42.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.msg2 = defalut;
      print(qcashier.screen42.msg2);
      expect(qcashier.screen42.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01568_element_check_01545 **********\n\n");
    });

    test('01569_element_check_01546', () async {
      print("\n********** テスト実行：01569_element_check_01546 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.msg1_size;
      print(qcashier.screen42.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.msg1_size = testData1;
      print(qcashier.screen42.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.msg1_size = testData2;
      print(qcashier.screen42.msg1_size);
      expect(qcashier.screen42.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.msg1_size = defalut;
      print(qcashier.screen42.msg1_size);
      expect(qcashier.screen42.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01569_element_check_01546 **********\n\n");
    });

    test('01570_element_check_01547', () async {
      print("\n********** テスト実行：01570_element_check_01547 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.msg2_size;
      print(qcashier.screen42.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.msg2_size = testData1;
      print(qcashier.screen42.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.msg2_size = testData2;
      print(qcashier.screen42.msg2_size);
      expect(qcashier.screen42.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.msg2_size = defalut;
      print(qcashier.screen42.msg2_size);
      expect(qcashier.screen42.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01570_element_check_01547 **********\n\n");
    });

    test('01571_element_check_01548', () async {
      print("\n********** テスト実行：01571_element_check_01548 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.sound1;
      print(qcashier.screen42.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.sound1 = testData1;
      print(qcashier.screen42.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.sound1 = testData2;
      print(qcashier.screen42.sound1);
      expect(qcashier.screen42.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.sound1 = defalut;
      print(qcashier.screen42.sound1);
      expect(qcashier.screen42.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01571_element_check_01548 **********\n\n");
    });

    test('01572_element_check_01549', () async {
      print("\n********** テスト実行：01572_element_check_01549 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.sound2;
      print(qcashier.screen42.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.sound2 = testData1;
      print(qcashier.screen42.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.sound2 = testData2;
      print(qcashier.screen42.sound2);
      expect(qcashier.screen42.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.sound2 = defalut;
      print(qcashier.screen42.sound2);
      expect(qcashier.screen42.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01572_element_check_01549 **********\n\n");
    });

    test('01573_element_check_01550', () async {
      print("\n********** テスト実行：01573_element_check_01550 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.sound3;
      print(qcashier.screen42.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.sound3 = testData1;
      print(qcashier.screen42.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.sound3 = testData2;
      print(qcashier.screen42.sound3);
      expect(qcashier.screen42.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.sound3 = defalut;
      print(qcashier.screen42.sound3);
      expect(qcashier.screen42.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01573_element_check_01550 **********\n\n");
    });

    test('01574_element_check_01551', () async {
      print("\n********** テスト実行：01574_element_check_01551 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.snd_timer;
      print(qcashier.screen42.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.snd_timer = testData1;
      print(qcashier.screen42.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.snd_timer = testData2;
      print(qcashier.screen42.snd_timer);
      expect(qcashier.screen42.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.snd_timer = defalut;
      print(qcashier.screen42.snd_timer);
      expect(qcashier.screen42.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01574_element_check_01551 **********\n\n");
    });

    test('01575_element_check_01552', () async {
      print("\n********** テスト実行：01575_element_check_01552 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.timer1;
      print(qcashier.screen42.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.timer1 = testData1;
      print(qcashier.screen42.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.timer1 = testData2;
      print(qcashier.screen42.timer1);
      expect(qcashier.screen42.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.timer1 = defalut;
      print(qcashier.screen42.timer1);
      expect(qcashier.screen42.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01575_element_check_01552 **********\n\n");
    });

    test('01576_element_check_01553', () async {
      print("\n********** テスト実行：01576_element_check_01553 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.timer2;
      print(qcashier.screen42.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.timer2 = testData1;
      print(qcashier.screen42.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.timer2 = testData2;
      print(qcashier.screen42.timer2);
      expect(qcashier.screen42.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.timer2 = defalut;
      print(qcashier.screen42.timer2);
      expect(qcashier.screen42.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01576_element_check_01553 **********\n\n");
    });

    test('01577_element_check_01554', () async {
      print("\n********** テスト実行：01577_element_check_01554 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.timer3;
      print(qcashier.screen42.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.timer3 = testData1;
      print(qcashier.screen42.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.timer3 = testData2;
      print(qcashier.screen42.timer3);
      expect(qcashier.screen42.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.timer3 = defalut;
      print(qcashier.screen42.timer3);
      expect(qcashier.screen42.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01577_element_check_01554 **********\n\n");
    });

    test('01578_element_check_01555', () async {
      print("\n********** テスト実行：01578_element_check_01555 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.dsp_flg1;
      print(qcashier.screen42.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.dsp_flg1 = testData1;
      print(qcashier.screen42.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.dsp_flg1 = testData2;
      print(qcashier.screen42.dsp_flg1);
      expect(qcashier.screen42.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.dsp_flg1 = defalut;
      print(qcashier.screen42.dsp_flg1);
      expect(qcashier.screen42.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01578_element_check_01555 **********\n\n");
    });

    test('01579_element_check_01556', () async {
      print("\n********** テスト実行：01579_element_check_01556 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.dsp_flg2;
      print(qcashier.screen42.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.dsp_flg2 = testData1;
      print(qcashier.screen42.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.dsp_flg2 = testData2;
      print(qcashier.screen42.dsp_flg2);
      expect(qcashier.screen42.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.dsp_flg2 = defalut;
      print(qcashier.screen42.dsp_flg2);
      expect(qcashier.screen42.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01579_element_check_01556 **********\n\n");
    });

    test('01580_element_check_01557', () async {
      print("\n********** テスト実行：01580_element_check_01557 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.movie01_ext;
      print(qcashier.screen42.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.movie01_ext = testData1;
      print(qcashier.screen42.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.movie01_ext = testData2;
      print(qcashier.screen42.movie01_ext);
      expect(qcashier.screen42.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.movie01_ext = defalut;
      print(qcashier.screen42.movie01_ext);
      expect(qcashier.screen42.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01580_element_check_01557 **********\n\n");
    });

    test('01581_element_check_01558', () async {
      print("\n********** テスト実行：01581_element_check_01558 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.movie02_ext;
      print(qcashier.screen42.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.movie02_ext = testData1;
      print(qcashier.screen42.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.movie02_ext = testData2;
      print(qcashier.screen42.movie02_ext);
      expect(qcashier.screen42.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.movie02_ext = defalut;
      print(qcashier.screen42.movie02_ext);
      expect(qcashier.screen42.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01581_element_check_01558 **********\n\n");
    });

    test('01582_element_check_01559', () async {
      print("\n********** テスト実行：01582_element_check_01559 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.movie03_ext;
      print(qcashier.screen42.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.movie03_ext = testData1;
      print(qcashier.screen42.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.movie03_ext = testData2;
      print(qcashier.screen42.movie03_ext);
      expect(qcashier.screen42.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.movie03_ext = defalut;
      print(qcashier.screen42.movie03_ext);
      expect(qcashier.screen42.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01582_element_check_01559 **********\n\n");
    });

    test('01583_element_check_01560', () async {
      print("\n********** テスト実行：01583_element_check_01560 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.movie04_ext;
      print(qcashier.screen42.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.movie04_ext = testData1;
      print(qcashier.screen42.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.movie04_ext = testData2;
      print(qcashier.screen42.movie04_ext);
      expect(qcashier.screen42.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.movie04_ext = defalut;
      print(qcashier.screen42.movie04_ext);
      expect(qcashier.screen42.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01583_element_check_01560 **********\n\n");
    });

    test('01584_element_check_01561', () async {
      print("\n********** テスト実行：01584_element_check_01561 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line_title;
      print(qcashier.screen42.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line_title = testData1s;
      print(qcashier.screen42.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line_title = testData2s;
      print(qcashier.screen42.line_title);
      expect(qcashier.screen42.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line_title = defalut;
      print(qcashier.screen42.line_title);
      expect(qcashier.screen42.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01584_element_check_01561 **********\n\n");
    });

    test('01585_element_check_01562', () async {
      print("\n********** テスト実行：01585_element_check_01562 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line_title_ex;
      print(qcashier.screen42.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line_title_ex = testData1s;
      print(qcashier.screen42.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line_title_ex = testData2s;
      print(qcashier.screen42.line_title_ex);
      expect(qcashier.screen42.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line_title_ex = defalut;
      print(qcashier.screen42.line_title_ex);
      expect(qcashier.screen42.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01585_element_check_01562 **********\n\n");
    });

    test('01586_element_check_01563', () async {
      print("\n********** テスト実行：01586_element_check_01563 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line1;
      print(qcashier.screen42.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line1 = testData1s;
      print(qcashier.screen42.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line1 = testData2s;
      print(qcashier.screen42.line1);
      expect(qcashier.screen42.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line1 = defalut;
      print(qcashier.screen42.line1);
      expect(qcashier.screen42.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01586_element_check_01563 **********\n\n");
    });

    test('01587_element_check_01564', () async {
      print("\n********** テスト実行：01587_element_check_01564 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line2;
      print(qcashier.screen42.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line2 = testData1s;
      print(qcashier.screen42.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line2 = testData2s;
      print(qcashier.screen42.line2);
      expect(qcashier.screen42.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line2 = defalut;
      print(qcashier.screen42.line2);
      expect(qcashier.screen42.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01587_element_check_01564 **********\n\n");
    });

    test('01588_element_check_01565', () async {
      print("\n********** テスト実行：01588_element_check_01565 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line3;
      print(qcashier.screen42.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line3 = testData1s;
      print(qcashier.screen42.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line3 = testData2s;
      print(qcashier.screen42.line3);
      expect(qcashier.screen42.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line3 = defalut;
      print(qcashier.screen42.line3);
      expect(qcashier.screen42.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01588_element_check_01565 **********\n\n");
    });

    test('01589_element_check_01566', () async {
      print("\n********** テスト実行：01589_element_check_01566 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line4;
      print(qcashier.screen42.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line4 = testData1s;
      print(qcashier.screen42.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line4 = testData2s;
      print(qcashier.screen42.line4);
      expect(qcashier.screen42.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line4 = defalut;
      print(qcashier.screen42.line4);
      expect(qcashier.screen42.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01589_element_check_01566 **********\n\n");
    });

    test('01590_element_check_01567', () async {
      print("\n********** テスト実行：01590_element_check_01567 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line1_ex;
      print(qcashier.screen42.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line1_ex = testData1s;
      print(qcashier.screen42.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line1_ex = testData2s;
      print(qcashier.screen42.line1_ex);
      expect(qcashier.screen42.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line1_ex = defalut;
      print(qcashier.screen42.line1_ex);
      expect(qcashier.screen42.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01590_element_check_01567 **********\n\n");
    });

    test('01591_element_check_01568', () async {
      print("\n********** テスト実行：01591_element_check_01568 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line2_ex;
      print(qcashier.screen42.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line2_ex = testData1s;
      print(qcashier.screen42.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line2_ex = testData2s;
      print(qcashier.screen42.line2_ex);
      expect(qcashier.screen42.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line2_ex = defalut;
      print(qcashier.screen42.line2_ex);
      expect(qcashier.screen42.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01591_element_check_01568 **********\n\n");
    });

    test('01592_element_check_01569', () async {
      print("\n********** テスト実行：01592_element_check_01569 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line3_ex;
      print(qcashier.screen42.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line3_ex = testData1s;
      print(qcashier.screen42.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line3_ex = testData2s;
      print(qcashier.screen42.line3_ex);
      expect(qcashier.screen42.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line3_ex = defalut;
      print(qcashier.screen42.line3_ex);
      expect(qcashier.screen42.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01592_element_check_01569 **********\n\n");
    });

    test('01593_element_check_01570', () async {
      print("\n********** テスト実行：01593_element_check_01570 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.line4_ex;
      print(qcashier.screen42.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.line4_ex = testData1s;
      print(qcashier.screen42.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.line4_ex = testData2s;
      print(qcashier.screen42.line4_ex);
      expect(qcashier.screen42.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.line4_ex = defalut;
      print(qcashier.screen42.line4_ex);
      expect(qcashier.screen42.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01593_element_check_01570 **********\n\n");
    });

    test('01594_element_check_01571', () async {
      print("\n********** テスト実行：01594_element_check_01571 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.sound_led1;
      print(qcashier.screen42.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.sound_led1 = testData1;
      print(qcashier.screen42.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.sound_led1 = testData2;
      print(qcashier.screen42.sound_led1);
      expect(qcashier.screen42.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.sound_led1 = defalut;
      print(qcashier.screen42.sound_led1);
      expect(qcashier.screen42.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01594_element_check_01571 **********\n\n");
    });

    test('01595_element_check_01572', () async {
      print("\n********** テスト実行：01595_element_check_01572 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.sound_led2;
      print(qcashier.screen42.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.sound_led2 = testData1;
      print(qcashier.screen42.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.sound_led2 = testData2;
      print(qcashier.screen42.sound_led2);
      expect(qcashier.screen42.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.sound_led2 = defalut;
      print(qcashier.screen42.sound_led2);
      expect(qcashier.screen42.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01595_element_check_01572 **********\n\n");
    });

    test('01596_element_check_01573', () async {
      print("\n********** テスト実行：01596_element_check_01573 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen42.sound_led3;
      print(qcashier.screen42.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen42.sound_led3 = testData1;
      print(qcashier.screen42.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen42.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen42.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen42.sound_led3 = testData2;
      print(qcashier.screen42.sound_led3);
      expect(qcashier.screen42.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen42.sound_led3 = defalut;
      print(qcashier.screen42.sound_led3);
      expect(qcashier.screen42.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen42.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01596_element_check_01573 **********\n\n");
    });

    test('01597_element_check_01574', () async {
      print("\n********** テスト実行：01597_element_check_01574 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.title;
      print(qcashier.screen43.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.title = testData1s;
      print(qcashier.screen43.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.title = testData2s;
      print(qcashier.screen43.title);
      expect(qcashier.screen43.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.title = defalut;
      print(qcashier.screen43.title);
      expect(qcashier.screen43.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01597_element_check_01574 **********\n\n");
    });

    test('01598_element_check_01575', () async {
      print("\n********** テスト実行：01598_element_check_01575 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.msg1;
      print(qcashier.screen43.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.msg1 = testData1s;
      print(qcashier.screen43.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.msg1 = testData2s;
      print(qcashier.screen43.msg1);
      expect(qcashier.screen43.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.msg1 = defalut;
      print(qcashier.screen43.msg1);
      expect(qcashier.screen43.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01598_element_check_01575 **********\n\n");
    });

    test('01599_element_check_01576', () async {
      print("\n********** テスト実行：01599_element_check_01576 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.msg2;
      print(qcashier.screen43.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.msg2 = testData1s;
      print(qcashier.screen43.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.msg2 = testData2s;
      print(qcashier.screen43.msg2);
      expect(qcashier.screen43.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.msg2 = defalut;
      print(qcashier.screen43.msg2);
      expect(qcashier.screen43.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01599_element_check_01576 **********\n\n");
    });

    test('01600_element_check_01577', () async {
      print("\n********** テスト実行：01600_element_check_01577 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.msg1_size;
      print(qcashier.screen43.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.msg1_size = testData1;
      print(qcashier.screen43.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.msg1_size = testData2;
      print(qcashier.screen43.msg1_size);
      expect(qcashier.screen43.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.msg1_size = defalut;
      print(qcashier.screen43.msg1_size);
      expect(qcashier.screen43.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01600_element_check_01577 **********\n\n");
    });

    test('01601_element_check_01578', () async {
      print("\n********** テスト実行：01601_element_check_01578 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.msg2_size;
      print(qcashier.screen43.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.msg2_size = testData1;
      print(qcashier.screen43.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.msg2_size = testData2;
      print(qcashier.screen43.msg2_size);
      expect(qcashier.screen43.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.msg2_size = defalut;
      print(qcashier.screen43.msg2_size);
      expect(qcashier.screen43.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01601_element_check_01578 **********\n\n");
    });

    test('01602_element_check_01579', () async {
      print("\n********** テスト実行：01602_element_check_01579 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.sound1;
      print(qcashier.screen43.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.sound1 = testData1;
      print(qcashier.screen43.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.sound1 = testData2;
      print(qcashier.screen43.sound1);
      expect(qcashier.screen43.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.sound1 = defalut;
      print(qcashier.screen43.sound1);
      expect(qcashier.screen43.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01602_element_check_01579 **********\n\n");
    });

    test('01603_element_check_01580', () async {
      print("\n********** テスト実行：01603_element_check_01580 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.sound2;
      print(qcashier.screen43.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.sound2 = testData1;
      print(qcashier.screen43.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.sound2 = testData2;
      print(qcashier.screen43.sound2);
      expect(qcashier.screen43.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.sound2 = defalut;
      print(qcashier.screen43.sound2);
      expect(qcashier.screen43.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01603_element_check_01580 **********\n\n");
    });

    test('01604_element_check_01581', () async {
      print("\n********** テスト実行：01604_element_check_01581 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.sound3;
      print(qcashier.screen43.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.sound3 = testData1;
      print(qcashier.screen43.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.sound3 = testData2;
      print(qcashier.screen43.sound3);
      expect(qcashier.screen43.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.sound3 = defalut;
      print(qcashier.screen43.sound3);
      expect(qcashier.screen43.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01604_element_check_01581 **********\n\n");
    });

    test('01605_element_check_01582', () async {
      print("\n********** テスト実行：01605_element_check_01582 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.snd_timer;
      print(qcashier.screen43.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.snd_timer = testData1;
      print(qcashier.screen43.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.snd_timer = testData2;
      print(qcashier.screen43.snd_timer);
      expect(qcashier.screen43.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.snd_timer = defalut;
      print(qcashier.screen43.snd_timer);
      expect(qcashier.screen43.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01605_element_check_01582 **********\n\n");
    });

    test('01606_element_check_01583', () async {
      print("\n********** テスト実行：01606_element_check_01583 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.timer1;
      print(qcashier.screen43.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.timer1 = testData1;
      print(qcashier.screen43.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.timer1 = testData2;
      print(qcashier.screen43.timer1);
      expect(qcashier.screen43.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.timer1 = defalut;
      print(qcashier.screen43.timer1);
      expect(qcashier.screen43.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01606_element_check_01583 **********\n\n");
    });

    test('01607_element_check_01584', () async {
      print("\n********** テスト実行：01607_element_check_01584 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.timer2;
      print(qcashier.screen43.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.timer2 = testData1;
      print(qcashier.screen43.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.timer2 = testData2;
      print(qcashier.screen43.timer2);
      expect(qcashier.screen43.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.timer2 = defalut;
      print(qcashier.screen43.timer2);
      expect(qcashier.screen43.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01607_element_check_01584 **********\n\n");
    });

    test('01608_element_check_01585', () async {
      print("\n********** テスト実行：01608_element_check_01585 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.timer3;
      print(qcashier.screen43.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.timer3 = testData1;
      print(qcashier.screen43.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.timer3 = testData2;
      print(qcashier.screen43.timer3);
      expect(qcashier.screen43.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.timer3 = defalut;
      print(qcashier.screen43.timer3);
      expect(qcashier.screen43.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01608_element_check_01585 **********\n\n");
    });

    test('01609_element_check_01586', () async {
      print("\n********** テスト実行：01609_element_check_01586 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.dsp_flg1;
      print(qcashier.screen43.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.dsp_flg1 = testData1;
      print(qcashier.screen43.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.dsp_flg1 = testData2;
      print(qcashier.screen43.dsp_flg1);
      expect(qcashier.screen43.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.dsp_flg1 = defalut;
      print(qcashier.screen43.dsp_flg1);
      expect(qcashier.screen43.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01609_element_check_01586 **********\n\n");
    });

    test('01610_element_check_01587', () async {
      print("\n********** テスト実行：01610_element_check_01587 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.dsp_flg2;
      print(qcashier.screen43.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.dsp_flg2 = testData1;
      print(qcashier.screen43.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.dsp_flg2 = testData2;
      print(qcashier.screen43.dsp_flg2);
      expect(qcashier.screen43.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.dsp_flg2 = defalut;
      print(qcashier.screen43.dsp_flg2);
      expect(qcashier.screen43.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01610_element_check_01587 **********\n\n");
    });

    test('01611_element_check_01588', () async {
      print("\n********** テスト実行：01611_element_check_01588 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.movie01_ext;
      print(qcashier.screen43.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.movie01_ext = testData1;
      print(qcashier.screen43.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.movie01_ext = testData2;
      print(qcashier.screen43.movie01_ext);
      expect(qcashier.screen43.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.movie01_ext = defalut;
      print(qcashier.screen43.movie01_ext);
      expect(qcashier.screen43.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01611_element_check_01588 **********\n\n");
    });

    test('01612_element_check_01589', () async {
      print("\n********** テスト実行：01612_element_check_01589 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.movie02_ext;
      print(qcashier.screen43.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.movie02_ext = testData1;
      print(qcashier.screen43.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.movie02_ext = testData2;
      print(qcashier.screen43.movie02_ext);
      expect(qcashier.screen43.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.movie02_ext = defalut;
      print(qcashier.screen43.movie02_ext);
      expect(qcashier.screen43.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01612_element_check_01589 **********\n\n");
    });

    test('01613_element_check_01590', () async {
      print("\n********** テスト実行：01613_element_check_01590 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.movie03_ext;
      print(qcashier.screen43.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.movie03_ext = testData1;
      print(qcashier.screen43.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.movie03_ext = testData2;
      print(qcashier.screen43.movie03_ext);
      expect(qcashier.screen43.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.movie03_ext = defalut;
      print(qcashier.screen43.movie03_ext);
      expect(qcashier.screen43.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01613_element_check_01590 **********\n\n");
    });

    test('01614_element_check_01591', () async {
      print("\n********** テスト実行：01614_element_check_01591 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.movie04_ext;
      print(qcashier.screen43.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.movie04_ext = testData1;
      print(qcashier.screen43.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.movie04_ext = testData2;
      print(qcashier.screen43.movie04_ext);
      expect(qcashier.screen43.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.movie04_ext = defalut;
      print(qcashier.screen43.movie04_ext);
      expect(qcashier.screen43.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01614_element_check_01591 **********\n\n");
    });

    test('01615_element_check_01592', () async {
      print("\n********** テスト実行：01615_element_check_01592 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line_title;
      print(qcashier.screen43.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line_title = testData1s;
      print(qcashier.screen43.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line_title = testData2s;
      print(qcashier.screen43.line_title);
      expect(qcashier.screen43.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line_title = defalut;
      print(qcashier.screen43.line_title);
      expect(qcashier.screen43.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01615_element_check_01592 **********\n\n");
    });

    test('01616_element_check_01593', () async {
      print("\n********** テスト実行：01616_element_check_01593 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line_title_ex;
      print(qcashier.screen43.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line_title_ex = testData1s;
      print(qcashier.screen43.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line_title_ex = testData2s;
      print(qcashier.screen43.line_title_ex);
      expect(qcashier.screen43.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line_title_ex = defalut;
      print(qcashier.screen43.line_title_ex);
      expect(qcashier.screen43.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01616_element_check_01593 **********\n\n");
    });

    test('01617_element_check_01594', () async {
      print("\n********** テスト実行：01617_element_check_01594 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line1;
      print(qcashier.screen43.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line1 = testData1s;
      print(qcashier.screen43.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line1 = testData2s;
      print(qcashier.screen43.line1);
      expect(qcashier.screen43.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line1 = defalut;
      print(qcashier.screen43.line1);
      expect(qcashier.screen43.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01617_element_check_01594 **********\n\n");
    });

    test('01618_element_check_01595', () async {
      print("\n********** テスト実行：01618_element_check_01595 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line2;
      print(qcashier.screen43.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line2 = testData1s;
      print(qcashier.screen43.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line2 = testData2s;
      print(qcashier.screen43.line2);
      expect(qcashier.screen43.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line2 = defalut;
      print(qcashier.screen43.line2);
      expect(qcashier.screen43.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01618_element_check_01595 **********\n\n");
    });

    test('01619_element_check_01596', () async {
      print("\n********** テスト実行：01619_element_check_01596 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line3;
      print(qcashier.screen43.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line3 = testData1s;
      print(qcashier.screen43.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line3 = testData2s;
      print(qcashier.screen43.line3);
      expect(qcashier.screen43.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line3 = defalut;
      print(qcashier.screen43.line3);
      expect(qcashier.screen43.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01619_element_check_01596 **********\n\n");
    });

    test('01620_element_check_01597', () async {
      print("\n********** テスト実行：01620_element_check_01597 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line4;
      print(qcashier.screen43.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line4 = testData1s;
      print(qcashier.screen43.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line4 = testData2s;
      print(qcashier.screen43.line4);
      expect(qcashier.screen43.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line4 = defalut;
      print(qcashier.screen43.line4);
      expect(qcashier.screen43.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01620_element_check_01597 **********\n\n");
    });

    test('01621_element_check_01598', () async {
      print("\n********** テスト実行：01621_element_check_01598 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line1_ex;
      print(qcashier.screen43.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line1_ex = testData1s;
      print(qcashier.screen43.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line1_ex = testData2s;
      print(qcashier.screen43.line1_ex);
      expect(qcashier.screen43.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line1_ex = defalut;
      print(qcashier.screen43.line1_ex);
      expect(qcashier.screen43.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01621_element_check_01598 **********\n\n");
    });

    test('01622_element_check_01599', () async {
      print("\n********** テスト実行：01622_element_check_01599 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line2_ex;
      print(qcashier.screen43.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line2_ex = testData1s;
      print(qcashier.screen43.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line2_ex = testData2s;
      print(qcashier.screen43.line2_ex);
      expect(qcashier.screen43.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line2_ex = defalut;
      print(qcashier.screen43.line2_ex);
      expect(qcashier.screen43.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01622_element_check_01599 **********\n\n");
    });

    test('01623_element_check_01600', () async {
      print("\n********** テスト実行：01623_element_check_01600 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line3_ex;
      print(qcashier.screen43.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line3_ex = testData1s;
      print(qcashier.screen43.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line3_ex = testData2s;
      print(qcashier.screen43.line3_ex);
      expect(qcashier.screen43.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line3_ex = defalut;
      print(qcashier.screen43.line3_ex);
      expect(qcashier.screen43.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01623_element_check_01600 **********\n\n");
    });

    test('01624_element_check_01601', () async {
      print("\n********** テスト実行：01624_element_check_01601 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.line4_ex;
      print(qcashier.screen43.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.line4_ex = testData1s;
      print(qcashier.screen43.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.line4_ex = testData2s;
      print(qcashier.screen43.line4_ex);
      expect(qcashier.screen43.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.line4_ex = defalut;
      print(qcashier.screen43.line4_ex);
      expect(qcashier.screen43.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01624_element_check_01601 **********\n\n");
    });

    test('01625_element_check_01602', () async {
      print("\n********** テスト実行：01625_element_check_01602 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.sound_led1;
      print(qcashier.screen43.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.sound_led1 = testData1;
      print(qcashier.screen43.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.sound_led1 = testData2;
      print(qcashier.screen43.sound_led1);
      expect(qcashier.screen43.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.sound_led1 = defalut;
      print(qcashier.screen43.sound_led1);
      expect(qcashier.screen43.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01625_element_check_01602 **********\n\n");
    });

    test('01626_element_check_01603', () async {
      print("\n********** テスト実行：01626_element_check_01603 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.sound_led2;
      print(qcashier.screen43.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.sound_led2 = testData1;
      print(qcashier.screen43.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.sound_led2 = testData2;
      print(qcashier.screen43.sound_led2);
      expect(qcashier.screen43.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.sound_led2 = defalut;
      print(qcashier.screen43.sound_led2);
      expect(qcashier.screen43.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01626_element_check_01603 **********\n\n");
    });

    test('01627_element_check_01604', () async {
      print("\n********** テスト実行：01627_element_check_01604 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen43.sound_led3;
      print(qcashier.screen43.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen43.sound_led3 = testData1;
      print(qcashier.screen43.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen43.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen43.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen43.sound_led3 = testData2;
      print(qcashier.screen43.sound_led3);
      expect(qcashier.screen43.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen43.sound_led3 = defalut;
      print(qcashier.screen43.sound_led3);
      expect(qcashier.screen43.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen43.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01627_element_check_01604 **********\n\n");
    });

    test('01628_element_check_01605', () async {
      print("\n********** テスト実行：01628_element_check_01605 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.title;
      print(qcashier.screen44.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.title = testData1s;
      print(qcashier.screen44.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.title = testData2s;
      print(qcashier.screen44.title);
      expect(qcashier.screen44.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.title = defalut;
      print(qcashier.screen44.title);
      expect(qcashier.screen44.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01628_element_check_01605 **********\n\n");
    });

    test('01629_element_check_01606', () async {
      print("\n********** テスト実行：01629_element_check_01606 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.msg1;
      print(qcashier.screen44.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.msg1 = testData1s;
      print(qcashier.screen44.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.msg1 = testData2s;
      print(qcashier.screen44.msg1);
      expect(qcashier.screen44.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.msg1 = defalut;
      print(qcashier.screen44.msg1);
      expect(qcashier.screen44.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01629_element_check_01606 **********\n\n");
    });

    test('01630_element_check_01607', () async {
      print("\n********** テスト実行：01630_element_check_01607 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.msg2;
      print(qcashier.screen44.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.msg2 = testData1s;
      print(qcashier.screen44.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.msg2 = testData2s;
      print(qcashier.screen44.msg2);
      expect(qcashier.screen44.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.msg2 = defalut;
      print(qcashier.screen44.msg2);
      expect(qcashier.screen44.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01630_element_check_01607 **********\n\n");
    });

    test('01631_element_check_01608', () async {
      print("\n********** テスト実行：01631_element_check_01608 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.msg1_size;
      print(qcashier.screen44.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.msg1_size = testData1;
      print(qcashier.screen44.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.msg1_size = testData2;
      print(qcashier.screen44.msg1_size);
      expect(qcashier.screen44.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.msg1_size = defalut;
      print(qcashier.screen44.msg1_size);
      expect(qcashier.screen44.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01631_element_check_01608 **********\n\n");
    });

    test('01632_element_check_01609', () async {
      print("\n********** テスト実行：01632_element_check_01609 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.msg2_size;
      print(qcashier.screen44.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.msg2_size = testData1;
      print(qcashier.screen44.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.msg2_size = testData2;
      print(qcashier.screen44.msg2_size);
      expect(qcashier.screen44.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.msg2_size = defalut;
      print(qcashier.screen44.msg2_size);
      expect(qcashier.screen44.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01632_element_check_01609 **********\n\n");
    });

    test('01633_element_check_01610', () async {
      print("\n********** テスト実行：01633_element_check_01610 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.sound1;
      print(qcashier.screen44.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.sound1 = testData1;
      print(qcashier.screen44.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.sound1 = testData2;
      print(qcashier.screen44.sound1);
      expect(qcashier.screen44.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.sound1 = defalut;
      print(qcashier.screen44.sound1);
      expect(qcashier.screen44.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01633_element_check_01610 **********\n\n");
    });

    test('01634_element_check_01611', () async {
      print("\n********** テスト実行：01634_element_check_01611 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.sound2;
      print(qcashier.screen44.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.sound2 = testData1;
      print(qcashier.screen44.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.sound2 = testData2;
      print(qcashier.screen44.sound2);
      expect(qcashier.screen44.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.sound2 = defalut;
      print(qcashier.screen44.sound2);
      expect(qcashier.screen44.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01634_element_check_01611 **********\n\n");
    });

    test('01635_element_check_01612', () async {
      print("\n********** テスト実行：01635_element_check_01612 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.sound3;
      print(qcashier.screen44.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.sound3 = testData1;
      print(qcashier.screen44.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.sound3 = testData2;
      print(qcashier.screen44.sound3);
      expect(qcashier.screen44.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.sound3 = defalut;
      print(qcashier.screen44.sound3);
      expect(qcashier.screen44.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01635_element_check_01612 **********\n\n");
    });

    test('01636_element_check_01613', () async {
      print("\n********** テスト実行：01636_element_check_01613 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.snd_timer;
      print(qcashier.screen44.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.snd_timer = testData1;
      print(qcashier.screen44.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.snd_timer = testData2;
      print(qcashier.screen44.snd_timer);
      expect(qcashier.screen44.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.snd_timer = defalut;
      print(qcashier.screen44.snd_timer);
      expect(qcashier.screen44.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01636_element_check_01613 **********\n\n");
    });

    test('01637_element_check_01614', () async {
      print("\n********** テスト実行：01637_element_check_01614 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.timer1;
      print(qcashier.screen44.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.timer1 = testData1;
      print(qcashier.screen44.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.timer1 = testData2;
      print(qcashier.screen44.timer1);
      expect(qcashier.screen44.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.timer1 = defalut;
      print(qcashier.screen44.timer1);
      expect(qcashier.screen44.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01637_element_check_01614 **********\n\n");
    });

    test('01638_element_check_01615', () async {
      print("\n********** テスト実行：01638_element_check_01615 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.timer2;
      print(qcashier.screen44.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.timer2 = testData1;
      print(qcashier.screen44.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.timer2 = testData2;
      print(qcashier.screen44.timer2);
      expect(qcashier.screen44.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.timer2 = defalut;
      print(qcashier.screen44.timer2);
      expect(qcashier.screen44.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01638_element_check_01615 **********\n\n");
    });

    test('01639_element_check_01616', () async {
      print("\n********** テスト実行：01639_element_check_01616 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.timer3;
      print(qcashier.screen44.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.timer3 = testData1;
      print(qcashier.screen44.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.timer3 = testData2;
      print(qcashier.screen44.timer3);
      expect(qcashier.screen44.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.timer3 = defalut;
      print(qcashier.screen44.timer3);
      expect(qcashier.screen44.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01639_element_check_01616 **********\n\n");
    });

    test('01640_element_check_01617', () async {
      print("\n********** テスト実行：01640_element_check_01617 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.dsp_flg1;
      print(qcashier.screen44.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.dsp_flg1 = testData1;
      print(qcashier.screen44.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.dsp_flg1 = testData2;
      print(qcashier.screen44.dsp_flg1);
      expect(qcashier.screen44.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.dsp_flg1 = defalut;
      print(qcashier.screen44.dsp_flg1);
      expect(qcashier.screen44.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01640_element_check_01617 **********\n\n");
    });

    test('01641_element_check_01618', () async {
      print("\n********** テスト実行：01641_element_check_01618 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.dsp_flg2;
      print(qcashier.screen44.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.dsp_flg2 = testData1;
      print(qcashier.screen44.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.dsp_flg2 = testData2;
      print(qcashier.screen44.dsp_flg2);
      expect(qcashier.screen44.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.dsp_flg2 = defalut;
      print(qcashier.screen44.dsp_flg2);
      expect(qcashier.screen44.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01641_element_check_01618 **********\n\n");
    });

    test('01642_element_check_01619', () async {
      print("\n********** テスト実行：01642_element_check_01619 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.movie01_ext;
      print(qcashier.screen44.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.movie01_ext = testData1;
      print(qcashier.screen44.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.movie01_ext = testData2;
      print(qcashier.screen44.movie01_ext);
      expect(qcashier.screen44.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.movie01_ext = defalut;
      print(qcashier.screen44.movie01_ext);
      expect(qcashier.screen44.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01642_element_check_01619 **********\n\n");
    });

    test('01643_element_check_01620', () async {
      print("\n********** テスト実行：01643_element_check_01620 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.movie02_ext;
      print(qcashier.screen44.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.movie02_ext = testData1;
      print(qcashier.screen44.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.movie02_ext = testData2;
      print(qcashier.screen44.movie02_ext);
      expect(qcashier.screen44.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.movie02_ext = defalut;
      print(qcashier.screen44.movie02_ext);
      expect(qcashier.screen44.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01643_element_check_01620 **********\n\n");
    });

    test('01644_element_check_01621', () async {
      print("\n********** テスト実行：01644_element_check_01621 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.movie03_ext;
      print(qcashier.screen44.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.movie03_ext = testData1;
      print(qcashier.screen44.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.movie03_ext = testData2;
      print(qcashier.screen44.movie03_ext);
      expect(qcashier.screen44.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.movie03_ext = defalut;
      print(qcashier.screen44.movie03_ext);
      expect(qcashier.screen44.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01644_element_check_01621 **********\n\n");
    });

    test('01645_element_check_01622', () async {
      print("\n********** テスト実行：01645_element_check_01622 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.movie04_ext;
      print(qcashier.screen44.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.movie04_ext = testData1;
      print(qcashier.screen44.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.movie04_ext = testData2;
      print(qcashier.screen44.movie04_ext);
      expect(qcashier.screen44.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.movie04_ext = defalut;
      print(qcashier.screen44.movie04_ext);
      expect(qcashier.screen44.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01645_element_check_01622 **********\n\n");
    });

    test('01646_element_check_01623', () async {
      print("\n********** テスト実行：01646_element_check_01623 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line_title;
      print(qcashier.screen44.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line_title = testData1s;
      print(qcashier.screen44.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line_title = testData2s;
      print(qcashier.screen44.line_title);
      expect(qcashier.screen44.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line_title = defalut;
      print(qcashier.screen44.line_title);
      expect(qcashier.screen44.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01646_element_check_01623 **********\n\n");
    });

    test('01647_element_check_01624', () async {
      print("\n********** テスト実行：01647_element_check_01624 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line_title_ex;
      print(qcashier.screen44.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line_title_ex = testData1s;
      print(qcashier.screen44.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line_title_ex = testData2s;
      print(qcashier.screen44.line_title_ex);
      expect(qcashier.screen44.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line_title_ex = defalut;
      print(qcashier.screen44.line_title_ex);
      expect(qcashier.screen44.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01647_element_check_01624 **********\n\n");
    });

    test('01648_element_check_01625', () async {
      print("\n********** テスト実行：01648_element_check_01625 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line1;
      print(qcashier.screen44.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line1 = testData1s;
      print(qcashier.screen44.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line1 = testData2s;
      print(qcashier.screen44.line1);
      expect(qcashier.screen44.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line1 = defalut;
      print(qcashier.screen44.line1);
      expect(qcashier.screen44.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01648_element_check_01625 **********\n\n");
    });

    test('01649_element_check_01626', () async {
      print("\n********** テスト実行：01649_element_check_01626 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line2;
      print(qcashier.screen44.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line2 = testData1s;
      print(qcashier.screen44.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line2 = testData2s;
      print(qcashier.screen44.line2);
      expect(qcashier.screen44.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line2 = defalut;
      print(qcashier.screen44.line2);
      expect(qcashier.screen44.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01649_element_check_01626 **********\n\n");
    });

    test('01650_element_check_01627', () async {
      print("\n********** テスト実行：01650_element_check_01627 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line3;
      print(qcashier.screen44.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line3 = testData1s;
      print(qcashier.screen44.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line3 = testData2s;
      print(qcashier.screen44.line3);
      expect(qcashier.screen44.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line3 = defalut;
      print(qcashier.screen44.line3);
      expect(qcashier.screen44.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01650_element_check_01627 **********\n\n");
    });

    test('01651_element_check_01628', () async {
      print("\n********** テスト実行：01651_element_check_01628 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line4;
      print(qcashier.screen44.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line4 = testData1s;
      print(qcashier.screen44.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line4 = testData2s;
      print(qcashier.screen44.line4);
      expect(qcashier.screen44.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line4 = defalut;
      print(qcashier.screen44.line4);
      expect(qcashier.screen44.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01651_element_check_01628 **********\n\n");
    });

    test('01652_element_check_01629', () async {
      print("\n********** テスト実行：01652_element_check_01629 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line1_ex;
      print(qcashier.screen44.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line1_ex = testData1s;
      print(qcashier.screen44.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line1_ex = testData2s;
      print(qcashier.screen44.line1_ex);
      expect(qcashier.screen44.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line1_ex = defalut;
      print(qcashier.screen44.line1_ex);
      expect(qcashier.screen44.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01652_element_check_01629 **********\n\n");
    });

    test('01653_element_check_01630', () async {
      print("\n********** テスト実行：01653_element_check_01630 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line2_ex;
      print(qcashier.screen44.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line2_ex = testData1s;
      print(qcashier.screen44.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line2_ex = testData2s;
      print(qcashier.screen44.line2_ex);
      expect(qcashier.screen44.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line2_ex = defalut;
      print(qcashier.screen44.line2_ex);
      expect(qcashier.screen44.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01653_element_check_01630 **********\n\n");
    });

    test('01654_element_check_01631', () async {
      print("\n********** テスト実行：01654_element_check_01631 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line3_ex;
      print(qcashier.screen44.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line3_ex = testData1s;
      print(qcashier.screen44.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line3_ex = testData2s;
      print(qcashier.screen44.line3_ex);
      expect(qcashier.screen44.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line3_ex = defalut;
      print(qcashier.screen44.line3_ex);
      expect(qcashier.screen44.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01654_element_check_01631 **********\n\n");
    });

    test('01655_element_check_01632', () async {
      print("\n********** テスト実行：01655_element_check_01632 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.line4_ex;
      print(qcashier.screen44.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.line4_ex = testData1s;
      print(qcashier.screen44.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.line4_ex = testData2s;
      print(qcashier.screen44.line4_ex);
      expect(qcashier.screen44.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.line4_ex = defalut;
      print(qcashier.screen44.line4_ex);
      expect(qcashier.screen44.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01655_element_check_01632 **********\n\n");
    });

    test('01656_element_check_01633', () async {
      print("\n********** テスト実行：01656_element_check_01633 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.sound_led1;
      print(qcashier.screen44.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.sound_led1 = testData1;
      print(qcashier.screen44.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.sound_led1 = testData2;
      print(qcashier.screen44.sound_led1);
      expect(qcashier.screen44.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.sound_led1 = defalut;
      print(qcashier.screen44.sound_led1);
      expect(qcashier.screen44.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01656_element_check_01633 **********\n\n");
    });

    test('01657_element_check_01634', () async {
      print("\n********** テスト実行：01657_element_check_01634 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.sound_led2;
      print(qcashier.screen44.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.sound_led2 = testData1;
      print(qcashier.screen44.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.sound_led2 = testData2;
      print(qcashier.screen44.sound_led2);
      expect(qcashier.screen44.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.sound_led2 = defalut;
      print(qcashier.screen44.sound_led2);
      expect(qcashier.screen44.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01657_element_check_01634 **********\n\n");
    });

    test('01658_element_check_01635', () async {
      print("\n********** テスト実行：01658_element_check_01635 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen44.sound_led3;
      print(qcashier.screen44.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen44.sound_led3 = testData1;
      print(qcashier.screen44.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen44.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen44.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen44.sound_led3 = testData2;
      print(qcashier.screen44.sound_led3);
      expect(qcashier.screen44.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen44.sound_led3 = defalut;
      print(qcashier.screen44.sound_led3);
      expect(qcashier.screen44.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen44.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01658_element_check_01635 **********\n\n");
    });

    test('01659_element_check_01636', () async {
      print("\n********** テスト実行：01659_element_check_01636 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.title;
      print(qcashier.screen45.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.title = testData1s;
      print(qcashier.screen45.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.title = testData2s;
      print(qcashier.screen45.title);
      expect(qcashier.screen45.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.title = defalut;
      print(qcashier.screen45.title);
      expect(qcashier.screen45.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01659_element_check_01636 **********\n\n");
    });

    test('01660_element_check_01637', () async {
      print("\n********** テスト実行：01660_element_check_01637 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.msg1;
      print(qcashier.screen45.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.msg1 = testData1s;
      print(qcashier.screen45.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.msg1 = testData2s;
      print(qcashier.screen45.msg1);
      expect(qcashier.screen45.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.msg1 = defalut;
      print(qcashier.screen45.msg1);
      expect(qcashier.screen45.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01660_element_check_01637 **********\n\n");
    });

    test('01661_element_check_01638', () async {
      print("\n********** テスト実行：01661_element_check_01638 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.msg2;
      print(qcashier.screen45.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.msg2 = testData1s;
      print(qcashier.screen45.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.msg2 = testData2s;
      print(qcashier.screen45.msg2);
      expect(qcashier.screen45.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.msg2 = defalut;
      print(qcashier.screen45.msg2);
      expect(qcashier.screen45.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01661_element_check_01638 **********\n\n");
    });

    test('01662_element_check_01639', () async {
      print("\n********** テスト実行：01662_element_check_01639 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.msg1_size;
      print(qcashier.screen45.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.msg1_size = testData1;
      print(qcashier.screen45.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.msg1_size = testData2;
      print(qcashier.screen45.msg1_size);
      expect(qcashier.screen45.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.msg1_size = defalut;
      print(qcashier.screen45.msg1_size);
      expect(qcashier.screen45.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01662_element_check_01639 **********\n\n");
    });

    test('01663_element_check_01640', () async {
      print("\n********** テスト実行：01663_element_check_01640 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.msg2_size;
      print(qcashier.screen45.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.msg2_size = testData1;
      print(qcashier.screen45.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.msg2_size = testData2;
      print(qcashier.screen45.msg2_size);
      expect(qcashier.screen45.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.msg2_size = defalut;
      print(qcashier.screen45.msg2_size);
      expect(qcashier.screen45.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01663_element_check_01640 **********\n\n");
    });

    test('01664_element_check_01641', () async {
      print("\n********** テスト実行：01664_element_check_01641 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.sound1;
      print(qcashier.screen45.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.sound1 = testData1;
      print(qcashier.screen45.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.sound1 = testData2;
      print(qcashier.screen45.sound1);
      expect(qcashier.screen45.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.sound1 = defalut;
      print(qcashier.screen45.sound1);
      expect(qcashier.screen45.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01664_element_check_01641 **********\n\n");
    });

    test('01665_element_check_01642', () async {
      print("\n********** テスト実行：01665_element_check_01642 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.sound2;
      print(qcashier.screen45.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.sound2 = testData1;
      print(qcashier.screen45.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.sound2 = testData2;
      print(qcashier.screen45.sound2);
      expect(qcashier.screen45.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.sound2 = defalut;
      print(qcashier.screen45.sound2);
      expect(qcashier.screen45.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01665_element_check_01642 **********\n\n");
    });

    test('01666_element_check_01643', () async {
      print("\n********** テスト実行：01666_element_check_01643 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.sound3;
      print(qcashier.screen45.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.sound3 = testData1;
      print(qcashier.screen45.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.sound3 = testData2;
      print(qcashier.screen45.sound3);
      expect(qcashier.screen45.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.sound3 = defalut;
      print(qcashier.screen45.sound3);
      expect(qcashier.screen45.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01666_element_check_01643 **********\n\n");
    });

    test('01667_element_check_01644', () async {
      print("\n********** テスト実行：01667_element_check_01644 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.snd_timer;
      print(qcashier.screen45.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.snd_timer = testData1;
      print(qcashier.screen45.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.snd_timer = testData2;
      print(qcashier.screen45.snd_timer);
      expect(qcashier.screen45.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.snd_timer = defalut;
      print(qcashier.screen45.snd_timer);
      expect(qcashier.screen45.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01667_element_check_01644 **********\n\n");
    });

    test('01668_element_check_01645', () async {
      print("\n********** テスト実行：01668_element_check_01645 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.timer1;
      print(qcashier.screen45.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.timer1 = testData1;
      print(qcashier.screen45.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.timer1 = testData2;
      print(qcashier.screen45.timer1);
      expect(qcashier.screen45.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.timer1 = defalut;
      print(qcashier.screen45.timer1);
      expect(qcashier.screen45.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01668_element_check_01645 **********\n\n");
    });

    test('01669_element_check_01646', () async {
      print("\n********** テスト実行：01669_element_check_01646 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.timer2;
      print(qcashier.screen45.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.timer2 = testData1;
      print(qcashier.screen45.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.timer2 = testData2;
      print(qcashier.screen45.timer2);
      expect(qcashier.screen45.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.timer2 = defalut;
      print(qcashier.screen45.timer2);
      expect(qcashier.screen45.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01669_element_check_01646 **********\n\n");
    });

    test('01670_element_check_01647', () async {
      print("\n********** テスト実行：01670_element_check_01647 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.timer3;
      print(qcashier.screen45.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.timer3 = testData1;
      print(qcashier.screen45.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.timer3 = testData2;
      print(qcashier.screen45.timer3);
      expect(qcashier.screen45.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.timer3 = defalut;
      print(qcashier.screen45.timer3);
      expect(qcashier.screen45.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01670_element_check_01647 **********\n\n");
    });

    test('01671_element_check_01648', () async {
      print("\n********** テスト実行：01671_element_check_01648 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.dsp_flg1;
      print(qcashier.screen45.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.dsp_flg1 = testData1;
      print(qcashier.screen45.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.dsp_flg1 = testData2;
      print(qcashier.screen45.dsp_flg1);
      expect(qcashier.screen45.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.dsp_flg1 = defalut;
      print(qcashier.screen45.dsp_flg1);
      expect(qcashier.screen45.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01671_element_check_01648 **********\n\n");
    });

    test('01672_element_check_01649', () async {
      print("\n********** テスト実行：01672_element_check_01649 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.dsp_flg2;
      print(qcashier.screen45.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.dsp_flg2 = testData1;
      print(qcashier.screen45.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.dsp_flg2 = testData2;
      print(qcashier.screen45.dsp_flg2);
      expect(qcashier.screen45.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.dsp_flg2 = defalut;
      print(qcashier.screen45.dsp_flg2);
      expect(qcashier.screen45.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01672_element_check_01649 **********\n\n");
    });

    test('01673_element_check_01650', () async {
      print("\n********** テスト実行：01673_element_check_01650 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.movie01_ext;
      print(qcashier.screen45.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.movie01_ext = testData1;
      print(qcashier.screen45.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.movie01_ext = testData2;
      print(qcashier.screen45.movie01_ext);
      expect(qcashier.screen45.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.movie01_ext = defalut;
      print(qcashier.screen45.movie01_ext);
      expect(qcashier.screen45.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01673_element_check_01650 **********\n\n");
    });

    test('01674_element_check_01651', () async {
      print("\n********** テスト実行：01674_element_check_01651 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.movie02_ext;
      print(qcashier.screen45.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.movie02_ext = testData1;
      print(qcashier.screen45.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.movie02_ext = testData2;
      print(qcashier.screen45.movie02_ext);
      expect(qcashier.screen45.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.movie02_ext = defalut;
      print(qcashier.screen45.movie02_ext);
      expect(qcashier.screen45.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01674_element_check_01651 **********\n\n");
    });

    test('01675_element_check_01652', () async {
      print("\n********** テスト実行：01675_element_check_01652 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.movie03_ext;
      print(qcashier.screen45.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.movie03_ext = testData1;
      print(qcashier.screen45.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.movie03_ext = testData2;
      print(qcashier.screen45.movie03_ext);
      expect(qcashier.screen45.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.movie03_ext = defalut;
      print(qcashier.screen45.movie03_ext);
      expect(qcashier.screen45.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01675_element_check_01652 **********\n\n");
    });

    test('01676_element_check_01653', () async {
      print("\n********** テスト実行：01676_element_check_01653 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.movie04_ext;
      print(qcashier.screen45.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.movie04_ext = testData1;
      print(qcashier.screen45.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.movie04_ext = testData2;
      print(qcashier.screen45.movie04_ext);
      expect(qcashier.screen45.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.movie04_ext = defalut;
      print(qcashier.screen45.movie04_ext);
      expect(qcashier.screen45.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01676_element_check_01653 **********\n\n");
    });

    test('01677_element_check_01654', () async {
      print("\n********** テスト実行：01677_element_check_01654 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line_title;
      print(qcashier.screen45.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line_title = testData1s;
      print(qcashier.screen45.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line_title = testData2s;
      print(qcashier.screen45.line_title);
      expect(qcashier.screen45.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line_title = defalut;
      print(qcashier.screen45.line_title);
      expect(qcashier.screen45.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01677_element_check_01654 **********\n\n");
    });

    test('01678_element_check_01655', () async {
      print("\n********** テスト実行：01678_element_check_01655 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line_title_ex;
      print(qcashier.screen45.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line_title_ex = testData1s;
      print(qcashier.screen45.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line_title_ex = testData2s;
      print(qcashier.screen45.line_title_ex);
      expect(qcashier.screen45.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line_title_ex = defalut;
      print(qcashier.screen45.line_title_ex);
      expect(qcashier.screen45.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01678_element_check_01655 **********\n\n");
    });

    test('01679_element_check_01656', () async {
      print("\n********** テスト実行：01679_element_check_01656 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line1;
      print(qcashier.screen45.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line1 = testData1s;
      print(qcashier.screen45.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line1 = testData2s;
      print(qcashier.screen45.line1);
      expect(qcashier.screen45.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line1 = defalut;
      print(qcashier.screen45.line1);
      expect(qcashier.screen45.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01679_element_check_01656 **********\n\n");
    });

    test('01680_element_check_01657', () async {
      print("\n********** テスト実行：01680_element_check_01657 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line2;
      print(qcashier.screen45.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line2 = testData1s;
      print(qcashier.screen45.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line2 = testData2s;
      print(qcashier.screen45.line2);
      expect(qcashier.screen45.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line2 = defalut;
      print(qcashier.screen45.line2);
      expect(qcashier.screen45.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01680_element_check_01657 **********\n\n");
    });

    test('01681_element_check_01658', () async {
      print("\n********** テスト実行：01681_element_check_01658 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line3;
      print(qcashier.screen45.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line3 = testData1s;
      print(qcashier.screen45.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line3 = testData2s;
      print(qcashier.screen45.line3);
      expect(qcashier.screen45.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line3 = defalut;
      print(qcashier.screen45.line3);
      expect(qcashier.screen45.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01681_element_check_01658 **********\n\n");
    });

    test('01682_element_check_01659', () async {
      print("\n********** テスト実行：01682_element_check_01659 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line4;
      print(qcashier.screen45.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line4 = testData1s;
      print(qcashier.screen45.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line4 = testData2s;
      print(qcashier.screen45.line4);
      expect(qcashier.screen45.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line4 = defalut;
      print(qcashier.screen45.line4);
      expect(qcashier.screen45.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01682_element_check_01659 **********\n\n");
    });

    test('01683_element_check_01660', () async {
      print("\n********** テスト実行：01683_element_check_01660 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line1_ex;
      print(qcashier.screen45.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line1_ex = testData1s;
      print(qcashier.screen45.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line1_ex = testData2s;
      print(qcashier.screen45.line1_ex);
      expect(qcashier.screen45.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line1_ex = defalut;
      print(qcashier.screen45.line1_ex);
      expect(qcashier.screen45.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01683_element_check_01660 **********\n\n");
    });

    test('01684_element_check_01661', () async {
      print("\n********** テスト実行：01684_element_check_01661 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line2_ex;
      print(qcashier.screen45.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line2_ex = testData1s;
      print(qcashier.screen45.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line2_ex = testData2s;
      print(qcashier.screen45.line2_ex);
      expect(qcashier.screen45.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line2_ex = defalut;
      print(qcashier.screen45.line2_ex);
      expect(qcashier.screen45.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01684_element_check_01661 **********\n\n");
    });

    test('01685_element_check_01662', () async {
      print("\n********** テスト実行：01685_element_check_01662 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line3_ex;
      print(qcashier.screen45.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line3_ex = testData1s;
      print(qcashier.screen45.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line3_ex = testData2s;
      print(qcashier.screen45.line3_ex);
      expect(qcashier.screen45.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line3_ex = defalut;
      print(qcashier.screen45.line3_ex);
      expect(qcashier.screen45.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01685_element_check_01662 **********\n\n");
    });

    test('01686_element_check_01663', () async {
      print("\n********** テスト実行：01686_element_check_01663 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.line4_ex;
      print(qcashier.screen45.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.line4_ex = testData1s;
      print(qcashier.screen45.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.line4_ex = testData2s;
      print(qcashier.screen45.line4_ex);
      expect(qcashier.screen45.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.line4_ex = defalut;
      print(qcashier.screen45.line4_ex);
      expect(qcashier.screen45.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01686_element_check_01663 **********\n\n");
    });

    test('01687_element_check_01664', () async {
      print("\n********** テスト実行：01687_element_check_01664 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.sound_led1;
      print(qcashier.screen45.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.sound_led1 = testData1;
      print(qcashier.screen45.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.sound_led1 = testData2;
      print(qcashier.screen45.sound_led1);
      expect(qcashier.screen45.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.sound_led1 = defalut;
      print(qcashier.screen45.sound_led1);
      expect(qcashier.screen45.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01687_element_check_01664 **********\n\n");
    });

    test('01688_element_check_01665', () async {
      print("\n********** テスト実行：01688_element_check_01665 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.sound_led2;
      print(qcashier.screen45.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.sound_led2 = testData1;
      print(qcashier.screen45.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.sound_led2 = testData2;
      print(qcashier.screen45.sound_led2);
      expect(qcashier.screen45.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.sound_led2 = defalut;
      print(qcashier.screen45.sound_led2);
      expect(qcashier.screen45.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01688_element_check_01665 **********\n\n");
    });

    test('01689_element_check_01666', () async {
      print("\n********** テスト実行：01689_element_check_01666 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen45.sound_led3;
      print(qcashier.screen45.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen45.sound_led3 = testData1;
      print(qcashier.screen45.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen45.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen45.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen45.sound_led3 = testData2;
      print(qcashier.screen45.sound_led3);
      expect(qcashier.screen45.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen45.sound_led3 = defalut;
      print(qcashier.screen45.sound_led3);
      expect(qcashier.screen45.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen45.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01689_element_check_01666 **********\n\n");
    });

    test('01690_element_check_01667', () async {
      print("\n********** テスト実行：01690_element_check_01667 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.title;
      print(qcashier.screen46.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.title = testData1s;
      print(qcashier.screen46.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.title = testData2s;
      print(qcashier.screen46.title);
      expect(qcashier.screen46.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.title = defalut;
      print(qcashier.screen46.title);
      expect(qcashier.screen46.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01690_element_check_01667 **********\n\n");
    });

    test('01691_element_check_01668', () async {
      print("\n********** テスト実行：01691_element_check_01668 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.msg1;
      print(qcashier.screen46.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.msg1 = testData1s;
      print(qcashier.screen46.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.msg1 = testData2s;
      print(qcashier.screen46.msg1);
      expect(qcashier.screen46.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.msg1 = defalut;
      print(qcashier.screen46.msg1);
      expect(qcashier.screen46.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01691_element_check_01668 **********\n\n");
    });

    test('01692_element_check_01669', () async {
      print("\n********** テスト実行：01692_element_check_01669 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.msg2;
      print(qcashier.screen46.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.msg2 = testData1s;
      print(qcashier.screen46.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.msg2 = testData2s;
      print(qcashier.screen46.msg2);
      expect(qcashier.screen46.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.msg2 = defalut;
      print(qcashier.screen46.msg2);
      expect(qcashier.screen46.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01692_element_check_01669 **********\n\n");
    });

    test('01693_element_check_01670', () async {
      print("\n********** テスト実行：01693_element_check_01670 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.msg1_size;
      print(qcashier.screen46.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.msg1_size = testData1;
      print(qcashier.screen46.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.msg1_size = testData2;
      print(qcashier.screen46.msg1_size);
      expect(qcashier.screen46.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.msg1_size = defalut;
      print(qcashier.screen46.msg1_size);
      expect(qcashier.screen46.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01693_element_check_01670 **********\n\n");
    });

    test('01694_element_check_01671', () async {
      print("\n********** テスト実行：01694_element_check_01671 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.msg2_size;
      print(qcashier.screen46.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.msg2_size = testData1;
      print(qcashier.screen46.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.msg2_size = testData2;
      print(qcashier.screen46.msg2_size);
      expect(qcashier.screen46.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.msg2_size = defalut;
      print(qcashier.screen46.msg2_size);
      expect(qcashier.screen46.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01694_element_check_01671 **********\n\n");
    });

    test('01695_element_check_01672', () async {
      print("\n********** テスト実行：01695_element_check_01672 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.sound1;
      print(qcashier.screen46.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.sound1 = testData1;
      print(qcashier.screen46.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.sound1 = testData2;
      print(qcashier.screen46.sound1);
      expect(qcashier.screen46.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.sound1 = defalut;
      print(qcashier.screen46.sound1);
      expect(qcashier.screen46.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01695_element_check_01672 **********\n\n");
    });

    test('01696_element_check_01673', () async {
      print("\n********** テスト実行：01696_element_check_01673 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.sound2;
      print(qcashier.screen46.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.sound2 = testData1;
      print(qcashier.screen46.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.sound2 = testData2;
      print(qcashier.screen46.sound2);
      expect(qcashier.screen46.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.sound2 = defalut;
      print(qcashier.screen46.sound2);
      expect(qcashier.screen46.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01696_element_check_01673 **********\n\n");
    });

    test('01697_element_check_01674', () async {
      print("\n********** テスト実行：01697_element_check_01674 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.sound3;
      print(qcashier.screen46.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.sound3 = testData1;
      print(qcashier.screen46.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.sound3 = testData2;
      print(qcashier.screen46.sound3);
      expect(qcashier.screen46.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.sound3 = defalut;
      print(qcashier.screen46.sound3);
      expect(qcashier.screen46.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01697_element_check_01674 **********\n\n");
    });

    test('01698_element_check_01675', () async {
      print("\n********** テスト実行：01698_element_check_01675 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.snd_timer;
      print(qcashier.screen46.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.snd_timer = testData1;
      print(qcashier.screen46.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.snd_timer = testData2;
      print(qcashier.screen46.snd_timer);
      expect(qcashier.screen46.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.snd_timer = defalut;
      print(qcashier.screen46.snd_timer);
      expect(qcashier.screen46.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01698_element_check_01675 **********\n\n");
    });

    test('01699_element_check_01676', () async {
      print("\n********** テスト実行：01699_element_check_01676 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.timer1;
      print(qcashier.screen46.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.timer1 = testData1;
      print(qcashier.screen46.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.timer1 = testData2;
      print(qcashier.screen46.timer1);
      expect(qcashier.screen46.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.timer1 = defalut;
      print(qcashier.screen46.timer1);
      expect(qcashier.screen46.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01699_element_check_01676 **********\n\n");
    });

    test('01700_element_check_01677', () async {
      print("\n********** テスト実行：01700_element_check_01677 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.timer2;
      print(qcashier.screen46.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.timer2 = testData1;
      print(qcashier.screen46.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.timer2 = testData2;
      print(qcashier.screen46.timer2);
      expect(qcashier.screen46.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.timer2 = defalut;
      print(qcashier.screen46.timer2);
      expect(qcashier.screen46.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01700_element_check_01677 **********\n\n");
    });

    test('01701_element_check_01678', () async {
      print("\n********** テスト実行：01701_element_check_01678 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.timer3;
      print(qcashier.screen46.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.timer3 = testData1;
      print(qcashier.screen46.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.timer3 = testData2;
      print(qcashier.screen46.timer3);
      expect(qcashier.screen46.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.timer3 = defalut;
      print(qcashier.screen46.timer3);
      expect(qcashier.screen46.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01701_element_check_01678 **********\n\n");
    });

    test('01702_element_check_01679', () async {
      print("\n********** テスト実行：01702_element_check_01679 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.dsp_flg1;
      print(qcashier.screen46.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.dsp_flg1 = testData1;
      print(qcashier.screen46.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.dsp_flg1 = testData2;
      print(qcashier.screen46.dsp_flg1);
      expect(qcashier.screen46.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.dsp_flg1 = defalut;
      print(qcashier.screen46.dsp_flg1);
      expect(qcashier.screen46.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01702_element_check_01679 **********\n\n");
    });

    test('01703_element_check_01680', () async {
      print("\n********** テスト実行：01703_element_check_01680 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.dsp_flg2;
      print(qcashier.screen46.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.dsp_flg2 = testData1;
      print(qcashier.screen46.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.dsp_flg2 = testData2;
      print(qcashier.screen46.dsp_flg2);
      expect(qcashier.screen46.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.dsp_flg2 = defalut;
      print(qcashier.screen46.dsp_flg2);
      expect(qcashier.screen46.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01703_element_check_01680 **********\n\n");
    });

    test('01704_element_check_01681', () async {
      print("\n********** テスト実行：01704_element_check_01681 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.movie01_ext;
      print(qcashier.screen46.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.movie01_ext = testData1;
      print(qcashier.screen46.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.movie01_ext = testData2;
      print(qcashier.screen46.movie01_ext);
      expect(qcashier.screen46.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.movie01_ext = defalut;
      print(qcashier.screen46.movie01_ext);
      expect(qcashier.screen46.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01704_element_check_01681 **********\n\n");
    });

    test('01705_element_check_01682', () async {
      print("\n********** テスト実行：01705_element_check_01682 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.movie02_ext;
      print(qcashier.screen46.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.movie02_ext = testData1;
      print(qcashier.screen46.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.movie02_ext = testData2;
      print(qcashier.screen46.movie02_ext);
      expect(qcashier.screen46.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.movie02_ext = defalut;
      print(qcashier.screen46.movie02_ext);
      expect(qcashier.screen46.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01705_element_check_01682 **********\n\n");
    });

    test('01706_element_check_01683', () async {
      print("\n********** テスト実行：01706_element_check_01683 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.movie03_ext;
      print(qcashier.screen46.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.movie03_ext = testData1;
      print(qcashier.screen46.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.movie03_ext = testData2;
      print(qcashier.screen46.movie03_ext);
      expect(qcashier.screen46.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.movie03_ext = defalut;
      print(qcashier.screen46.movie03_ext);
      expect(qcashier.screen46.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01706_element_check_01683 **********\n\n");
    });

    test('01707_element_check_01684', () async {
      print("\n********** テスト実行：01707_element_check_01684 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.movie04_ext;
      print(qcashier.screen46.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.movie04_ext = testData1;
      print(qcashier.screen46.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.movie04_ext = testData2;
      print(qcashier.screen46.movie04_ext);
      expect(qcashier.screen46.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.movie04_ext = defalut;
      print(qcashier.screen46.movie04_ext);
      expect(qcashier.screen46.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01707_element_check_01684 **********\n\n");
    });

    test('01708_element_check_01685', () async {
      print("\n********** テスト実行：01708_element_check_01685 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line_title;
      print(qcashier.screen46.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line_title = testData1s;
      print(qcashier.screen46.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line_title = testData2s;
      print(qcashier.screen46.line_title);
      expect(qcashier.screen46.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line_title = defalut;
      print(qcashier.screen46.line_title);
      expect(qcashier.screen46.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01708_element_check_01685 **********\n\n");
    });

    test('01709_element_check_01686', () async {
      print("\n********** テスト実行：01709_element_check_01686 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line_title_ex;
      print(qcashier.screen46.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line_title_ex = testData1s;
      print(qcashier.screen46.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line_title_ex = testData2s;
      print(qcashier.screen46.line_title_ex);
      expect(qcashier.screen46.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line_title_ex = defalut;
      print(qcashier.screen46.line_title_ex);
      expect(qcashier.screen46.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01709_element_check_01686 **********\n\n");
    });

    test('01710_element_check_01687', () async {
      print("\n********** テスト実行：01710_element_check_01687 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line1;
      print(qcashier.screen46.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line1 = testData1s;
      print(qcashier.screen46.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line1 = testData2s;
      print(qcashier.screen46.line1);
      expect(qcashier.screen46.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line1 = defalut;
      print(qcashier.screen46.line1);
      expect(qcashier.screen46.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01710_element_check_01687 **********\n\n");
    });

    test('01711_element_check_01688', () async {
      print("\n********** テスト実行：01711_element_check_01688 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line2;
      print(qcashier.screen46.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line2 = testData1s;
      print(qcashier.screen46.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line2 = testData2s;
      print(qcashier.screen46.line2);
      expect(qcashier.screen46.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line2 = defalut;
      print(qcashier.screen46.line2);
      expect(qcashier.screen46.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01711_element_check_01688 **********\n\n");
    });

    test('01712_element_check_01689', () async {
      print("\n********** テスト実行：01712_element_check_01689 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line3;
      print(qcashier.screen46.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line3 = testData1s;
      print(qcashier.screen46.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line3 = testData2s;
      print(qcashier.screen46.line3);
      expect(qcashier.screen46.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line3 = defalut;
      print(qcashier.screen46.line3);
      expect(qcashier.screen46.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01712_element_check_01689 **********\n\n");
    });

    test('01713_element_check_01690', () async {
      print("\n********** テスト実行：01713_element_check_01690 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line4;
      print(qcashier.screen46.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line4 = testData1s;
      print(qcashier.screen46.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line4 = testData2s;
      print(qcashier.screen46.line4);
      expect(qcashier.screen46.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line4 = defalut;
      print(qcashier.screen46.line4);
      expect(qcashier.screen46.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01713_element_check_01690 **********\n\n");
    });

    test('01714_element_check_01691', () async {
      print("\n********** テスト実行：01714_element_check_01691 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line1_ex;
      print(qcashier.screen46.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line1_ex = testData1s;
      print(qcashier.screen46.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line1_ex = testData2s;
      print(qcashier.screen46.line1_ex);
      expect(qcashier.screen46.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line1_ex = defalut;
      print(qcashier.screen46.line1_ex);
      expect(qcashier.screen46.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01714_element_check_01691 **********\n\n");
    });

    test('01715_element_check_01692', () async {
      print("\n********** テスト実行：01715_element_check_01692 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line2_ex;
      print(qcashier.screen46.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line2_ex = testData1s;
      print(qcashier.screen46.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line2_ex = testData2s;
      print(qcashier.screen46.line2_ex);
      expect(qcashier.screen46.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line2_ex = defalut;
      print(qcashier.screen46.line2_ex);
      expect(qcashier.screen46.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01715_element_check_01692 **********\n\n");
    });

    test('01716_element_check_01693', () async {
      print("\n********** テスト実行：01716_element_check_01693 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line3_ex;
      print(qcashier.screen46.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line3_ex = testData1s;
      print(qcashier.screen46.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line3_ex = testData2s;
      print(qcashier.screen46.line3_ex);
      expect(qcashier.screen46.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line3_ex = defalut;
      print(qcashier.screen46.line3_ex);
      expect(qcashier.screen46.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01716_element_check_01693 **********\n\n");
    });

    test('01717_element_check_01694', () async {
      print("\n********** テスト実行：01717_element_check_01694 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.line4_ex;
      print(qcashier.screen46.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.line4_ex = testData1s;
      print(qcashier.screen46.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.line4_ex = testData2s;
      print(qcashier.screen46.line4_ex);
      expect(qcashier.screen46.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.line4_ex = defalut;
      print(qcashier.screen46.line4_ex);
      expect(qcashier.screen46.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01717_element_check_01694 **********\n\n");
    });

    test('01718_element_check_01695', () async {
      print("\n********** テスト実行：01718_element_check_01695 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.sound_led1;
      print(qcashier.screen46.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.sound_led1 = testData1;
      print(qcashier.screen46.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.sound_led1 = testData2;
      print(qcashier.screen46.sound_led1);
      expect(qcashier.screen46.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.sound_led1 = defalut;
      print(qcashier.screen46.sound_led1);
      expect(qcashier.screen46.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01718_element_check_01695 **********\n\n");
    });

    test('01719_element_check_01696', () async {
      print("\n********** テスト実行：01719_element_check_01696 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.sound_led2;
      print(qcashier.screen46.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.sound_led2 = testData1;
      print(qcashier.screen46.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.sound_led2 = testData2;
      print(qcashier.screen46.sound_led2);
      expect(qcashier.screen46.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.sound_led2 = defalut;
      print(qcashier.screen46.sound_led2);
      expect(qcashier.screen46.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01719_element_check_01696 **********\n\n");
    });

    test('01720_element_check_01697', () async {
      print("\n********** テスト実行：01720_element_check_01697 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen46.sound_led3;
      print(qcashier.screen46.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen46.sound_led3 = testData1;
      print(qcashier.screen46.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen46.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen46.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen46.sound_led3 = testData2;
      print(qcashier.screen46.sound_led3);
      expect(qcashier.screen46.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen46.sound_led3 = defalut;
      print(qcashier.screen46.sound_led3);
      expect(qcashier.screen46.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen46.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01720_element_check_01697 **********\n\n");
    });

    test('01721_element_check_01698', () async {
      print("\n********** テスト実行：01721_element_check_01698 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.title;
      print(qcashier.screen47.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.title = testData1s;
      print(qcashier.screen47.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.title = testData2s;
      print(qcashier.screen47.title);
      expect(qcashier.screen47.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.title = defalut;
      print(qcashier.screen47.title);
      expect(qcashier.screen47.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01721_element_check_01698 **********\n\n");
    });

    test('01722_element_check_01699', () async {
      print("\n********** テスト実行：01722_element_check_01699 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.msg1;
      print(qcashier.screen47.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.msg1 = testData1s;
      print(qcashier.screen47.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.msg1 = testData2s;
      print(qcashier.screen47.msg1);
      expect(qcashier.screen47.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.msg1 = defalut;
      print(qcashier.screen47.msg1);
      expect(qcashier.screen47.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01722_element_check_01699 **********\n\n");
    });

    test('01723_element_check_01700', () async {
      print("\n********** テスト実行：01723_element_check_01700 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.msg2;
      print(qcashier.screen47.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.msg2 = testData1s;
      print(qcashier.screen47.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.msg2 = testData2s;
      print(qcashier.screen47.msg2);
      expect(qcashier.screen47.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.msg2 = defalut;
      print(qcashier.screen47.msg2);
      expect(qcashier.screen47.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01723_element_check_01700 **********\n\n");
    });

    test('01724_element_check_01701', () async {
      print("\n********** テスト実行：01724_element_check_01701 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.msg1_size;
      print(qcashier.screen47.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.msg1_size = testData1;
      print(qcashier.screen47.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.msg1_size = testData2;
      print(qcashier.screen47.msg1_size);
      expect(qcashier.screen47.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.msg1_size = defalut;
      print(qcashier.screen47.msg1_size);
      expect(qcashier.screen47.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01724_element_check_01701 **********\n\n");
    });

    test('01725_element_check_01702', () async {
      print("\n********** テスト実行：01725_element_check_01702 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.msg2_size;
      print(qcashier.screen47.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.msg2_size = testData1;
      print(qcashier.screen47.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.msg2_size = testData2;
      print(qcashier.screen47.msg2_size);
      expect(qcashier.screen47.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.msg2_size = defalut;
      print(qcashier.screen47.msg2_size);
      expect(qcashier.screen47.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01725_element_check_01702 **********\n\n");
    });

    test('01726_element_check_01703', () async {
      print("\n********** テスト実行：01726_element_check_01703 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.sound1;
      print(qcashier.screen47.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.sound1 = testData1;
      print(qcashier.screen47.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.sound1 = testData2;
      print(qcashier.screen47.sound1);
      expect(qcashier.screen47.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.sound1 = defalut;
      print(qcashier.screen47.sound1);
      expect(qcashier.screen47.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01726_element_check_01703 **********\n\n");
    });

    test('01727_element_check_01704', () async {
      print("\n********** テスト実行：01727_element_check_01704 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.sound2;
      print(qcashier.screen47.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.sound2 = testData1;
      print(qcashier.screen47.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.sound2 = testData2;
      print(qcashier.screen47.sound2);
      expect(qcashier.screen47.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.sound2 = defalut;
      print(qcashier.screen47.sound2);
      expect(qcashier.screen47.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01727_element_check_01704 **********\n\n");
    });

    test('01728_element_check_01705', () async {
      print("\n********** テスト実行：01728_element_check_01705 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.sound3;
      print(qcashier.screen47.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.sound3 = testData1;
      print(qcashier.screen47.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.sound3 = testData2;
      print(qcashier.screen47.sound3);
      expect(qcashier.screen47.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.sound3 = defalut;
      print(qcashier.screen47.sound3);
      expect(qcashier.screen47.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01728_element_check_01705 **********\n\n");
    });

    test('01729_element_check_01706', () async {
      print("\n********** テスト実行：01729_element_check_01706 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.snd_timer;
      print(qcashier.screen47.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.snd_timer = testData1;
      print(qcashier.screen47.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.snd_timer = testData2;
      print(qcashier.screen47.snd_timer);
      expect(qcashier.screen47.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.snd_timer = defalut;
      print(qcashier.screen47.snd_timer);
      expect(qcashier.screen47.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01729_element_check_01706 **********\n\n");
    });

    test('01730_element_check_01707', () async {
      print("\n********** テスト実行：01730_element_check_01707 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.timer1;
      print(qcashier.screen47.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.timer1 = testData1;
      print(qcashier.screen47.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.timer1 = testData2;
      print(qcashier.screen47.timer1);
      expect(qcashier.screen47.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.timer1 = defalut;
      print(qcashier.screen47.timer1);
      expect(qcashier.screen47.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01730_element_check_01707 **********\n\n");
    });

    test('01731_element_check_01708', () async {
      print("\n********** テスト実行：01731_element_check_01708 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.timer2;
      print(qcashier.screen47.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.timer2 = testData1;
      print(qcashier.screen47.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.timer2 = testData2;
      print(qcashier.screen47.timer2);
      expect(qcashier.screen47.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.timer2 = defalut;
      print(qcashier.screen47.timer2);
      expect(qcashier.screen47.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01731_element_check_01708 **********\n\n");
    });

    test('01732_element_check_01709', () async {
      print("\n********** テスト実行：01732_element_check_01709 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.timer3;
      print(qcashier.screen47.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.timer3 = testData1;
      print(qcashier.screen47.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.timer3 = testData2;
      print(qcashier.screen47.timer3);
      expect(qcashier.screen47.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.timer3 = defalut;
      print(qcashier.screen47.timer3);
      expect(qcashier.screen47.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01732_element_check_01709 **********\n\n");
    });

    test('01733_element_check_01710', () async {
      print("\n********** テスト実行：01733_element_check_01710 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.dsp_flg1;
      print(qcashier.screen47.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.dsp_flg1 = testData1;
      print(qcashier.screen47.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.dsp_flg1 = testData2;
      print(qcashier.screen47.dsp_flg1);
      expect(qcashier.screen47.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.dsp_flg1 = defalut;
      print(qcashier.screen47.dsp_flg1);
      expect(qcashier.screen47.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01733_element_check_01710 **********\n\n");
    });

    test('01734_element_check_01711', () async {
      print("\n********** テスト実行：01734_element_check_01711 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.dsp_flg2;
      print(qcashier.screen47.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.dsp_flg2 = testData1;
      print(qcashier.screen47.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.dsp_flg2 = testData2;
      print(qcashier.screen47.dsp_flg2);
      expect(qcashier.screen47.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.dsp_flg2 = defalut;
      print(qcashier.screen47.dsp_flg2);
      expect(qcashier.screen47.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01734_element_check_01711 **********\n\n");
    });

    test('01735_element_check_01712', () async {
      print("\n********** テスト実行：01735_element_check_01712 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.movie01_ext;
      print(qcashier.screen47.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.movie01_ext = testData1;
      print(qcashier.screen47.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.movie01_ext = testData2;
      print(qcashier.screen47.movie01_ext);
      expect(qcashier.screen47.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.movie01_ext = defalut;
      print(qcashier.screen47.movie01_ext);
      expect(qcashier.screen47.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01735_element_check_01712 **********\n\n");
    });

    test('01736_element_check_01713', () async {
      print("\n********** テスト実行：01736_element_check_01713 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.movie02_ext;
      print(qcashier.screen47.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.movie02_ext = testData1;
      print(qcashier.screen47.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.movie02_ext = testData2;
      print(qcashier.screen47.movie02_ext);
      expect(qcashier.screen47.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.movie02_ext = defalut;
      print(qcashier.screen47.movie02_ext);
      expect(qcashier.screen47.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01736_element_check_01713 **********\n\n");
    });

    test('01737_element_check_01714', () async {
      print("\n********** テスト実行：01737_element_check_01714 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.movie03_ext;
      print(qcashier.screen47.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.movie03_ext = testData1;
      print(qcashier.screen47.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.movie03_ext = testData2;
      print(qcashier.screen47.movie03_ext);
      expect(qcashier.screen47.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.movie03_ext = defalut;
      print(qcashier.screen47.movie03_ext);
      expect(qcashier.screen47.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01737_element_check_01714 **********\n\n");
    });

    test('01738_element_check_01715', () async {
      print("\n********** テスト実行：01738_element_check_01715 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.movie04_ext;
      print(qcashier.screen47.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.movie04_ext = testData1;
      print(qcashier.screen47.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.movie04_ext = testData2;
      print(qcashier.screen47.movie04_ext);
      expect(qcashier.screen47.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.movie04_ext = defalut;
      print(qcashier.screen47.movie04_ext);
      expect(qcashier.screen47.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01738_element_check_01715 **********\n\n");
    });

    test('01739_element_check_01716', () async {
      print("\n********** テスト実行：01739_element_check_01716 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line_title;
      print(qcashier.screen47.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line_title = testData1s;
      print(qcashier.screen47.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line_title = testData2s;
      print(qcashier.screen47.line_title);
      expect(qcashier.screen47.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line_title = defalut;
      print(qcashier.screen47.line_title);
      expect(qcashier.screen47.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01739_element_check_01716 **********\n\n");
    });

    test('01740_element_check_01717', () async {
      print("\n********** テスト実行：01740_element_check_01717 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line_title_ex;
      print(qcashier.screen47.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line_title_ex = testData1s;
      print(qcashier.screen47.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line_title_ex = testData2s;
      print(qcashier.screen47.line_title_ex);
      expect(qcashier.screen47.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line_title_ex = defalut;
      print(qcashier.screen47.line_title_ex);
      expect(qcashier.screen47.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01740_element_check_01717 **********\n\n");
    });

    test('01741_element_check_01718', () async {
      print("\n********** テスト実行：01741_element_check_01718 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line1;
      print(qcashier.screen47.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line1 = testData1s;
      print(qcashier.screen47.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line1 = testData2s;
      print(qcashier.screen47.line1);
      expect(qcashier.screen47.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line1 = defalut;
      print(qcashier.screen47.line1);
      expect(qcashier.screen47.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01741_element_check_01718 **********\n\n");
    });

    test('01742_element_check_01719', () async {
      print("\n********** テスト実行：01742_element_check_01719 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line2;
      print(qcashier.screen47.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line2 = testData1s;
      print(qcashier.screen47.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line2 = testData2s;
      print(qcashier.screen47.line2);
      expect(qcashier.screen47.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line2 = defalut;
      print(qcashier.screen47.line2);
      expect(qcashier.screen47.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01742_element_check_01719 **********\n\n");
    });

    test('01743_element_check_01720', () async {
      print("\n********** テスト実行：01743_element_check_01720 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line3;
      print(qcashier.screen47.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line3 = testData1s;
      print(qcashier.screen47.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line3 = testData2s;
      print(qcashier.screen47.line3);
      expect(qcashier.screen47.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line3 = defalut;
      print(qcashier.screen47.line3);
      expect(qcashier.screen47.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01743_element_check_01720 **********\n\n");
    });

    test('01744_element_check_01721', () async {
      print("\n********** テスト実行：01744_element_check_01721 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line4;
      print(qcashier.screen47.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line4 = testData1s;
      print(qcashier.screen47.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line4 = testData2s;
      print(qcashier.screen47.line4);
      expect(qcashier.screen47.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line4 = defalut;
      print(qcashier.screen47.line4);
      expect(qcashier.screen47.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01744_element_check_01721 **********\n\n");
    });

    test('01745_element_check_01722', () async {
      print("\n********** テスト実行：01745_element_check_01722 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line1_ex;
      print(qcashier.screen47.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line1_ex = testData1s;
      print(qcashier.screen47.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line1_ex = testData2s;
      print(qcashier.screen47.line1_ex);
      expect(qcashier.screen47.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line1_ex = defalut;
      print(qcashier.screen47.line1_ex);
      expect(qcashier.screen47.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01745_element_check_01722 **********\n\n");
    });

    test('01746_element_check_01723', () async {
      print("\n********** テスト実行：01746_element_check_01723 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line2_ex;
      print(qcashier.screen47.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line2_ex = testData1s;
      print(qcashier.screen47.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line2_ex = testData2s;
      print(qcashier.screen47.line2_ex);
      expect(qcashier.screen47.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line2_ex = defalut;
      print(qcashier.screen47.line2_ex);
      expect(qcashier.screen47.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01746_element_check_01723 **********\n\n");
    });

    test('01747_element_check_01724', () async {
      print("\n********** テスト実行：01747_element_check_01724 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line3_ex;
      print(qcashier.screen47.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line3_ex = testData1s;
      print(qcashier.screen47.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line3_ex = testData2s;
      print(qcashier.screen47.line3_ex);
      expect(qcashier.screen47.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line3_ex = defalut;
      print(qcashier.screen47.line3_ex);
      expect(qcashier.screen47.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01747_element_check_01724 **********\n\n");
    });

    test('01748_element_check_01725', () async {
      print("\n********** テスト実行：01748_element_check_01725 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.line4_ex;
      print(qcashier.screen47.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.line4_ex = testData1s;
      print(qcashier.screen47.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.line4_ex = testData2s;
      print(qcashier.screen47.line4_ex);
      expect(qcashier.screen47.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.line4_ex = defalut;
      print(qcashier.screen47.line4_ex);
      expect(qcashier.screen47.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01748_element_check_01725 **********\n\n");
    });

    test('01749_element_check_01726', () async {
      print("\n********** テスト実行：01749_element_check_01726 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.sound_led1;
      print(qcashier.screen47.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.sound_led1 = testData1;
      print(qcashier.screen47.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.sound_led1 = testData2;
      print(qcashier.screen47.sound_led1);
      expect(qcashier.screen47.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.sound_led1 = defalut;
      print(qcashier.screen47.sound_led1);
      expect(qcashier.screen47.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01749_element_check_01726 **********\n\n");
    });

    test('01750_element_check_01727', () async {
      print("\n********** テスト実行：01750_element_check_01727 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.sound_led2;
      print(qcashier.screen47.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.sound_led2 = testData1;
      print(qcashier.screen47.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.sound_led2 = testData2;
      print(qcashier.screen47.sound_led2);
      expect(qcashier.screen47.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.sound_led2 = defalut;
      print(qcashier.screen47.sound_led2);
      expect(qcashier.screen47.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01750_element_check_01727 **********\n\n");
    });

    test('01751_element_check_01728', () async {
      print("\n********** テスト実行：01751_element_check_01728 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen47.sound_led3;
      print(qcashier.screen47.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen47.sound_led3 = testData1;
      print(qcashier.screen47.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen47.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen47.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen47.sound_led3 = testData2;
      print(qcashier.screen47.sound_led3);
      expect(qcashier.screen47.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen47.sound_led3 = defalut;
      print(qcashier.screen47.sound_led3);
      expect(qcashier.screen47.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen47.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01751_element_check_01728 **********\n\n");
    });

    test('01752_element_check_01729', () async {
      print("\n********** テスト実行：01752_element_check_01729 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.title;
      print(qcashier.screen48.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.title = testData1s;
      print(qcashier.screen48.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.title = testData2s;
      print(qcashier.screen48.title);
      expect(qcashier.screen48.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.title = defalut;
      print(qcashier.screen48.title);
      expect(qcashier.screen48.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01752_element_check_01729 **********\n\n");
    });

    test('01753_element_check_01730', () async {
      print("\n********** テスト実行：01753_element_check_01730 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.msg1;
      print(qcashier.screen48.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.msg1 = testData1s;
      print(qcashier.screen48.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.msg1 = testData2s;
      print(qcashier.screen48.msg1);
      expect(qcashier.screen48.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.msg1 = defalut;
      print(qcashier.screen48.msg1);
      expect(qcashier.screen48.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01753_element_check_01730 **********\n\n");
    });

    test('01754_element_check_01731', () async {
      print("\n********** テスト実行：01754_element_check_01731 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.msg2;
      print(qcashier.screen48.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.msg2 = testData1s;
      print(qcashier.screen48.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.msg2 = testData2s;
      print(qcashier.screen48.msg2);
      expect(qcashier.screen48.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.msg2 = defalut;
      print(qcashier.screen48.msg2);
      expect(qcashier.screen48.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01754_element_check_01731 **********\n\n");
    });

    test('01755_element_check_01732', () async {
      print("\n********** テスト実行：01755_element_check_01732 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.msg1_size;
      print(qcashier.screen48.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.msg1_size = testData1;
      print(qcashier.screen48.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.msg1_size = testData2;
      print(qcashier.screen48.msg1_size);
      expect(qcashier.screen48.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.msg1_size = defalut;
      print(qcashier.screen48.msg1_size);
      expect(qcashier.screen48.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01755_element_check_01732 **********\n\n");
    });

    test('01756_element_check_01733', () async {
      print("\n********** テスト実行：01756_element_check_01733 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.msg2_size;
      print(qcashier.screen48.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.msg2_size = testData1;
      print(qcashier.screen48.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.msg2_size = testData2;
      print(qcashier.screen48.msg2_size);
      expect(qcashier.screen48.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.msg2_size = defalut;
      print(qcashier.screen48.msg2_size);
      expect(qcashier.screen48.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01756_element_check_01733 **********\n\n");
    });

    test('01757_element_check_01734', () async {
      print("\n********** テスト実行：01757_element_check_01734 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.sound1;
      print(qcashier.screen48.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.sound1 = testData1;
      print(qcashier.screen48.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.sound1 = testData2;
      print(qcashier.screen48.sound1);
      expect(qcashier.screen48.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.sound1 = defalut;
      print(qcashier.screen48.sound1);
      expect(qcashier.screen48.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01757_element_check_01734 **********\n\n");
    });

    test('01758_element_check_01735', () async {
      print("\n********** テスト実行：01758_element_check_01735 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.sound2;
      print(qcashier.screen48.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.sound2 = testData1;
      print(qcashier.screen48.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.sound2 = testData2;
      print(qcashier.screen48.sound2);
      expect(qcashier.screen48.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.sound2 = defalut;
      print(qcashier.screen48.sound2);
      expect(qcashier.screen48.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01758_element_check_01735 **********\n\n");
    });

    test('01759_element_check_01736', () async {
      print("\n********** テスト実行：01759_element_check_01736 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.sound3;
      print(qcashier.screen48.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.sound3 = testData1;
      print(qcashier.screen48.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.sound3 = testData2;
      print(qcashier.screen48.sound3);
      expect(qcashier.screen48.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.sound3 = defalut;
      print(qcashier.screen48.sound3);
      expect(qcashier.screen48.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01759_element_check_01736 **********\n\n");
    });

    test('01760_element_check_01737', () async {
      print("\n********** テスト実行：01760_element_check_01737 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.snd_timer;
      print(qcashier.screen48.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.snd_timer = testData1;
      print(qcashier.screen48.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.snd_timer = testData2;
      print(qcashier.screen48.snd_timer);
      expect(qcashier.screen48.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.snd_timer = defalut;
      print(qcashier.screen48.snd_timer);
      expect(qcashier.screen48.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01760_element_check_01737 **********\n\n");
    });

    test('01761_element_check_01738', () async {
      print("\n********** テスト実行：01761_element_check_01738 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.timer1;
      print(qcashier.screen48.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.timer1 = testData1;
      print(qcashier.screen48.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.timer1 = testData2;
      print(qcashier.screen48.timer1);
      expect(qcashier.screen48.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.timer1 = defalut;
      print(qcashier.screen48.timer1);
      expect(qcashier.screen48.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01761_element_check_01738 **********\n\n");
    });

    test('01762_element_check_01739', () async {
      print("\n********** テスト実行：01762_element_check_01739 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.timer2;
      print(qcashier.screen48.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.timer2 = testData1;
      print(qcashier.screen48.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.timer2 = testData2;
      print(qcashier.screen48.timer2);
      expect(qcashier.screen48.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.timer2 = defalut;
      print(qcashier.screen48.timer2);
      expect(qcashier.screen48.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01762_element_check_01739 **********\n\n");
    });

    test('01763_element_check_01740', () async {
      print("\n********** テスト実行：01763_element_check_01740 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.timer3;
      print(qcashier.screen48.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.timer3 = testData1;
      print(qcashier.screen48.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.timer3 = testData2;
      print(qcashier.screen48.timer3);
      expect(qcashier.screen48.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.timer3 = defalut;
      print(qcashier.screen48.timer3);
      expect(qcashier.screen48.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01763_element_check_01740 **********\n\n");
    });

    test('01764_element_check_01741', () async {
      print("\n********** テスト実行：01764_element_check_01741 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.dsp_flg1;
      print(qcashier.screen48.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.dsp_flg1 = testData1;
      print(qcashier.screen48.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.dsp_flg1 = testData2;
      print(qcashier.screen48.dsp_flg1);
      expect(qcashier.screen48.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.dsp_flg1 = defalut;
      print(qcashier.screen48.dsp_flg1);
      expect(qcashier.screen48.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01764_element_check_01741 **********\n\n");
    });

    test('01765_element_check_01742', () async {
      print("\n********** テスト実行：01765_element_check_01742 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.dsp_flg2;
      print(qcashier.screen48.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.dsp_flg2 = testData1;
      print(qcashier.screen48.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.dsp_flg2 = testData2;
      print(qcashier.screen48.dsp_flg2);
      expect(qcashier.screen48.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.dsp_flg2 = defalut;
      print(qcashier.screen48.dsp_flg2);
      expect(qcashier.screen48.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01765_element_check_01742 **********\n\n");
    });

    test('01766_element_check_01743', () async {
      print("\n********** テスト実行：01766_element_check_01743 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.movie01_ext;
      print(qcashier.screen48.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.movie01_ext = testData1;
      print(qcashier.screen48.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.movie01_ext = testData2;
      print(qcashier.screen48.movie01_ext);
      expect(qcashier.screen48.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.movie01_ext = defalut;
      print(qcashier.screen48.movie01_ext);
      expect(qcashier.screen48.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01766_element_check_01743 **********\n\n");
    });

    test('01767_element_check_01744', () async {
      print("\n********** テスト実行：01767_element_check_01744 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.movie02_ext;
      print(qcashier.screen48.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.movie02_ext = testData1;
      print(qcashier.screen48.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.movie02_ext = testData2;
      print(qcashier.screen48.movie02_ext);
      expect(qcashier.screen48.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.movie02_ext = defalut;
      print(qcashier.screen48.movie02_ext);
      expect(qcashier.screen48.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01767_element_check_01744 **********\n\n");
    });

    test('01768_element_check_01745', () async {
      print("\n********** テスト実行：01768_element_check_01745 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.movie03_ext;
      print(qcashier.screen48.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.movie03_ext = testData1;
      print(qcashier.screen48.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.movie03_ext = testData2;
      print(qcashier.screen48.movie03_ext);
      expect(qcashier.screen48.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.movie03_ext = defalut;
      print(qcashier.screen48.movie03_ext);
      expect(qcashier.screen48.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01768_element_check_01745 **********\n\n");
    });

    test('01769_element_check_01746', () async {
      print("\n********** テスト実行：01769_element_check_01746 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.movie04_ext;
      print(qcashier.screen48.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.movie04_ext = testData1;
      print(qcashier.screen48.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.movie04_ext = testData2;
      print(qcashier.screen48.movie04_ext);
      expect(qcashier.screen48.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.movie04_ext = defalut;
      print(qcashier.screen48.movie04_ext);
      expect(qcashier.screen48.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01769_element_check_01746 **********\n\n");
    });

    test('01770_element_check_01747', () async {
      print("\n********** テスト実行：01770_element_check_01747 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line_title;
      print(qcashier.screen48.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line_title = testData1s;
      print(qcashier.screen48.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line_title = testData2s;
      print(qcashier.screen48.line_title);
      expect(qcashier.screen48.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line_title = defalut;
      print(qcashier.screen48.line_title);
      expect(qcashier.screen48.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01770_element_check_01747 **********\n\n");
    });

    test('01771_element_check_01748', () async {
      print("\n********** テスト実行：01771_element_check_01748 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line_title_ex;
      print(qcashier.screen48.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line_title_ex = testData1s;
      print(qcashier.screen48.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line_title_ex = testData2s;
      print(qcashier.screen48.line_title_ex);
      expect(qcashier.screen48.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line_title_ex = defalut;
      print(qcashier.screen48.line_title_ex);
      expect(qcashier.screen48.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01771_element_check_01748 **********\n\n");
    });

    test('01772_element_check_01749', () async {
      print("\n********** テスト実行：01772_element_check_01749 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line1;
      print(qcashier.screen48.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line1 = testData1s;
      print(qcashier.screen48.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line1 = testData2s;
      print(qcashier.screen48.line1);
      expect(qcashier.screen48.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line1 = defalut;
      print(qcashier.screen48.line1);
      expect(qcashier.screen48.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01772_element_check_01749 **********\n\n");
    });

    test('01773_element_check_01750', () async {
      print("\n********** テスト実行：01773_element_check_01750 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line2;
      print(qcashier.screen48.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line2 = testData1s;
      print(qcashier.screen48.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line2 = testData2s;
      print(qcashier.screen48.line2);
      expect(qcashier.screen48.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line2 = defalut;
      print(qcashier.screen48.line2);
      expect(qcashier.screen48.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01773_element_check_01750 **********\n\n");
    });

    test('01774_element_check_01751', () async {
      print("\n********** テスト実行：01774_element_check_01751 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line3;
      print(qcashier.screen48.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line3 = testData1s;
      print(qcashier.screen48.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line3 = testData2s;
      print(qcashier.screen48.line3);
      expect(qcashier.screen48.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line3 = defalut;
      print(qcashier.screen48.line3);
      expect(qcashier.screen48.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01774_element_check_01751 **********\n\n");
    });

    test('01775_element_check_01752', () async {
      print("\n********** テスト実行：01775_element_check_01752 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line4;
      print(qcashier.screen48.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line4 = testData1s;
      print(qcashier.screen48.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line4 = testData2s;
      print(qcashier.screen48.line4);
      expect(qcashier.screen48.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line4 = defalut;
      print(qcashier.screen48.line4);
      expect(qcashier.screen48.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01775_element_check_01752 **********\n\n");
    });

    test('01776_element_check_01753', () async {
      print("\n********** テスト実行：01776_element_check_01753 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line1_ex;
      print(qcashier.screen48.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line1_ex = testData1s;
      print(qcashier.screen48.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line1_ex = testData2s;
      print(qcashier.screen48.line1_ex);
      expect(qcashier.screen48.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line1_ex = defalut;
      print(qcashier.screen48.line1_ex);
      expect(qcashier.screen48.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01776_element_check_01753 **********\n\n");
    });

    test('01777_element_check_01754', () async {
      print("\n********** テスト実行：01777_element_check_01754 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line2_ex;
      print(qcashier.screen48.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line2_ex = testData1s;
      print(qcashier.screen48.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line2_ex = testData2s;
      print(qcashier.screen48.line2_ex);
      expect(qcashier.screen48.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line2_ex = defalut;
      print(qcashier.screen48.line2_ex);
      expect(qcashier.screen48.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01777_element_check_01754 **********\n\n");
    });

    test('01778_element_check_01755', () async {
      print("\n********** テスト実行：01778_element_check_01755 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line3_ex;
      print(qcashier.screen48.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line3_ex = testData1s;
      print(qcashier.screen48.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line3_ex = testData2s;
      print(qcashier.screen48.line3_ex);
      expect(qcashier.screen48.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line3_ex = defalut;
      print(qcashier.screen48.line3_ex);
      expect(qcashier.screen48.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01778_element_check_01755 **********\n\n");
    });

    test('01779_element_check_01756', () async {
      print("\n********** テスト実行：01779_element_check_01756 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.line4_ex;
      print(qcashier.screen48.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.line4_ex = testData1s;
      print(qcashier.screen48.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.line4_ex = testData2s;
      print(qcashier.screen48.line4_ex);
      expect(qcashier.screen48.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.line4_ex = defalut;
      print(qcashier.screen48.line4_ex);
      expect(qcashier.screen48.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01779_element_check_01756 **********\n\n");
    });

    test('01780_element_check_01757', () async {
      print("\n********** テスト実行：01780_element_check_01757 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.sound_led1;
      print(qcashier.screen48.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.sound_led1 = testData1;
      print(qcashier.screen48.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.sound_led1 = testData2;
      print(qcashier.screen48.sound_led1);
      expect(qcashier.screen48.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.sound_led1 = defalut;
      print(qcashier.screen48.sound_led1);
      expect(qcashier.screen48.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01780_element_check_01757 **********\n\n");
    });

    test('01781_element_check_01758', () async {
      print("\n********** テスト実行：01781_element_check_01758 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.sound_led2;
      print(qcashier.screen48.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.sound_led2 = testData1;
      print(qcashier.screen48.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.sound_led2 = testData2;
      print(qcashier.screen48.sound_led2);
      expect(qcashier.screen48.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.sound_led2 = defalut;
      print(qcashier.screen48.sound_led2);
      expect(qcashier.screen48.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01781_element_check_01758 **********\n\n");
    });

    test('01782_element_check_01759', () async {
      print("\n********** テスト実行：01782_element_check_01759 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen48.sound_led3;
      print(qcashier.screen48.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen48.sound_led3 = testData1;
      print(qcashier.screen48.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen48.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen48.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen48.sound_led3 = testData2;
      print(qcashier.screen48.sound_led3);
      expect(qcashier.screen48.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen48.sound_led3 = defalut;
      print(qcashier.screen48.sound_led3);
      expect(qcashier.screen48.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen48.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01782_element_check_01759 **********\n\n");
    });

    test('01783_element_check_01760', () async {
      print("\n********** テスト実行：01783_element_check_01760 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.title;
      print(qcashier.screen49.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.title = testData1s;
      print(qcashier.screen49.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.title = testData2s;
      print(qcashier.screen49.title);
      expect(qcashier.screen49.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.title = defalut;
      print(qcashier.screen49.title);
      expect(qcashier.screen49.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01783_element_check_01760 **********\n\n");
    });

    test('01784_element_check_01761', () async {
      print("\n********** テスト実行：01784_element_check_01761 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.msg1;
      print(qcashier.screen49.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.msg1 = testData1s;
      print(qcashier.screen49.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.msg1 = testData2s;
      print(qcashier.screen49.msg1);
      expect(qcashier.screen49.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.msg1 = defalut;
      print(qcashier.screen49.msg1);
      expect(qcashier.screen49.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01784_element_check_01761 **********\n\n");
    });

    test('01785_element_check_01762', () async {
      print("\n********** テスト実行：01785_element_check_01762 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.msg2;
      print(qcashier.screen49.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.msg2 = testData1s;
      print(qcashier.screen49.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.msg2 = testData2s;
      print(qcashier.screen49.msg2);
      expect(qcashier.screen49.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.msg2 = defalut;
      print(qcashier.screen49.msg2);
      expect(qcashier.screen49.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01785_element_check_01762 **********\n\n");
    });

    test('01786_element_check_01763', () async {
      print("\n********** テスト実行：01786_element_check_01763 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.msg1_size;
      print(qcashier.screen49.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.msg1_size = testData1;
      print(qcashier.screen49.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.msg1_size = testData2;
      print(qcashier.screen49.msg1_size);
      expect(qcashier.screen49.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.msg1_size = defalut;
      print(qcashier.screen49.msg1_size);
      expect(qcashier.screen49.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01786_element_check_01763 **********\n\n");
    });

    test('01787_element_check_01764', () async {
      print("\n********** テスト実行：01787_element_check_01764 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.msg2_size;
      print(qcashier.screen49.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.msg2_size = testData1;
      print(qcashier.screen49.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.msg2_size = testData2;
      print(qcashier.screen49.msg2_size);
      expect(qcashier.screen49.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.msg2_size = defalut;
      print(qcashier.screen49.msg2_size);
      expect(qcashier.screen49.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01787_element_check_01764 **********\n\n");
    });

    test('01788_element_check_01765', () async {
      print("\n********** テスト実行：01788_element_check_01765 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.sound1;
      print(qcashier.screen49.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.sound1 = testData1;
      print(qcashier.screen49.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.sound1 = testData2;
      print(qcashier.screen49.sound1);
      expect(qcashier.screen49.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.sound1 = defalut;
      print(qcashier.screen49.sound1);
      expect(qcashier.screen49.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01788_element_check_01765 **********\n\n");
    });

    test('01789_element_check_01766', () async {
      print("\n********** テスト実行：01789_element_check_01766 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.sound2;
      print(qcashier.screen49.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.sound2 = testData1;
      print(qcashier.screen49.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.sound2 = testData2;
      print(qcashier.screen49.sound2);
      expect(qcashier.screen49.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.sound2 = defalut;
      print(qcashier.screen49.sound2);
      expect(qcashier.screen49.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01789_element_check_01766 **********\n\n");
    });

    test('01790_element_check_01767', () async {
      print("\n********** テスト実行：01790_element_check_01767 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.sound3;
      print(qcashier.screen49.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.sound3 = testData1;
      print(qcashier.screen49.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.sound3 = testData2;
      print(qcashier.screen49.sound3);
      expect(qcashier.screen49.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.sound3 = defalut;
      print(qcashier.screen49.sound3);
      expect(qcashier.screen49.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01790_element_check_01767 **********\n\n");
    });

    test('01791_element_check_01768', () async {
      print("\n********** テスト実行：01791_element_check_01768 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.snd_timer;
      print(qcashier.screen49.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.snd_timer = testData1;
      print(qcashier.screen49.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.snd_timer = testData2;
      print(qcashier.screen49.snd_timer);
      expect(qcashier.screen49.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.snd_timer = defalut;
      print(qcashier.screen49.snd_timer);
      expect(qcashier.screen49.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01791_element_check_01768 **********\n\n");
    });

    test('01792_element_check_01769', () async {
      print("\n********** テスト実行：01792_element_check_01769 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.timer1;
      print(qcashier.screen49.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.timer1 = testData1;
      print(qcashier.screen49.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.timer1 = testData2;
      print(qcashier.screen49.timer1);
      expect(qcashier.screen49.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.timer1 = defalut;
      print(qcashier.screen49.timer1);
      expect(qcashier.screen49.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01792_element_check_01769 **********\n\n");
    });

    test('01793_element_check_01770', () async {
      print("\n********** テスト実行：01793_element_check_01770 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.timer2;
      print(qcashier.screen49.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.timer2 = testData1;
      print(qcashier.screen49.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.timer2 = testData2;
      print(qcashier.screen49.timer2);
      expect(qcashier.screen49.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.timer2 = defalut;
      print(qcashier.screen49.timer2);
      expect(qcashier.screen49.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01793_element_check_01770 **********\n\n");
    });

    test('01794_element_check_01771', () async {
      print("\n********** テスト実行：01794_element_check_01771 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.timer3;
      print(qcashier.screen49.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.timer3 = testData1;
      print(qcashier.screen49.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.timer3 = testData2;
      print(qcashier.screen49.timer3);
      expect(qcashier.screen49.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.timer3 = defalut;
      print(qcashier.screen49.timer3);
      expect(qcashier.screen49.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01794_element_check_01771 **********\n\n");
    });

    test('01795_element_check_01772', () async {
      print("\n********** テスト実行：01795_element_check_01772 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.dsp_flg1;
      print(qcashier.screen49.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.dsp_flg1 = testData1;
      print(qcashier.screen49.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.dsp_flg1 = testData2;
      print(qcashier.screen49.dsp_flg1);
      expect(qcashier.screen49.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.dsp_flg1 = defalut;
      print(qcashier.screen49.dsp_flg1);
      expect(qcashier.screen49.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01795_element_check_01772 **********\n\n");
    });

    test('01796_element_check_01773', () async {
      print("\n********** テスト実行：01796_element_check_01773 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.dsp_flg2;
      print(qcashier.screen49.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.dsp_flg2 = testData1;
      print(qcashier.screen49.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.dsp_flg2 = testData2;
      print(qcashier.screen49.dsp_flg2);
      expect(qcashier.screen49.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.dsp_flg2 = defalut;
      print(qcashier.screen49.dsp_flg2);
      expect(qcashier.screen49.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01796_element_check_01773 **********\n\n");
    });

    test('01797_element_check_01774', () async {
      print("\n********** テスト実行：01797_element_check_01774 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.movie01_ext;
      print(qcashier.screen49.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.movie01_ext = testData1;
      print(qcashier.screen49.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.movie01_ext = testData2;
      print(qcashier.screen49.movie01_ext);
      expect(qcashier.screen49.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.movie01_ext = defalut;
      print(qcashier.screen49.movie01_ext);
      expect(qcashier.screen49.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01797_element_check_01774 **********\n\n");
    });

    test('01798_element_check_01775', () async {
      print("\n********** テスト実行：01798_element_check_01775 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.movie02_ext;
      print(qcashier.screen49.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.movie02_ext = testData1;
      print(qcashier.screen49.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.movie02_ext = testData2;
      print(qcashier.screen49.movie02_ext);
      expect(qcashier.screen49.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.movie02_ext = defalut;
      print(qcashier.screen49.movie02_ext);
      expect(qcashier.screen49.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01798_element_check_01775 **********\n\n");
    });

    test('01799_element_check_01776', () async {
      print("\n********** テスト実行：01799_element_check_01776 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.movie03_ext;
      print(qcashier.screen49.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.movie03_ext = testData1;
      print(qcashier.screen49.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.movie03_ext = testData2;
      print(qcashier.screen49.movie03_ext);
      expect(qcashier.screen49.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.movie03_ext = defalut;
      print(qcashier.screen49.movie03_ext);
      expect(qcashier.screen49.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01799_element_check_01776 **********\n\n");
    });

    test('01800_element_check_01777', () async {
      print("\n********** テスト実行：01800_element_check_01777 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.movie04_ext;
      print(qcashier.screen49.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.movie04_ext = testData1;
      print(qcashier.screen49.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.movie04_ext = testData2;
      print(qcashier.screen49.movie04_ext);
      expect(qcashier.screen49.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.movie04_ext = defalut;
      print(qcashier.screen49.movie04_ext);
      expect(qcashier.screen49.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01800_element_check_01777 **********\n\n");
    });

    test('01801_element_check_01778', () async {
      print("\n********** テスト実行：01801_element_check_01778 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line_title;
      print(qcashier.screen49.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line_title = testData1s;
      print(qcashier.screen49.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line_title = testData2s;
      print(qcashier.screen49.line_title);
      expect(qcashier.screen49.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line_title = defalut;
      print(qcashier.screen49.line_title);
      expect(qcashier.screen49.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01801_element_check_01778 **********\n\n");
    });

    test('01802_element_check_01779', () async {
      print("\n********** テスト実行：01802_element_check_01779 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line_title_ex;
      print(qcashier.screen49.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line_title_ex = testData1s;
      print(qcashier.screen49.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line_title_ex = testData2s;
      print(qcashier.screen49.line_title_ex);
      expect(qcashier.screen49.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line_title_ex = defalut;
      print(qcashier.screen49.line_title_ex);
      expect(qcashier.screen49.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01802_element_check_01779 **********\n\n");
    });

    test('01803_element_check_01780', () async {
      print("\n********** テスト実行：01803_element_check_01780 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line1;
      print(qcashier.screen49.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line1 = testData1s;
      print(qcashier.screen49.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line1 = testData2s;
      print(qcashier.screen49.line1);
      expect(qcashier.screen49.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line1 = defalut;
      print(qcashier.screen49.line1);
      expect(qcashier.screen49.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01803_element_check_01780 **********\n\n");
    });

    test('01804_element_check_01781', () async {
      print("\n********** テスト実行：01804_element_check_01781 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line2;
      print(qcashier.screen49.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line2 = testData1s;
      print(qcashier.screen49.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line2 = testData2s;
      print(qcashier.screen49.line2);
      expect(qcashier.screen49.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line2 = defalut;
      print(qcashier.screen49.line2);
      expect(qcashier.screen49.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01804_element_check_01781 **********\n\n");
    });

    test('01805_element_check_01782', () async {
      print("\n********** テスト実行：01805_element_check_01782 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line3;
      print(qcashier.screen49.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line3 = testData1s;
      print(qcashier.screen49.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line3 = testData2s;
      print(qcashier.screen49.line3);
      expect(qcashier.screen49.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line3 = defalut;
      print(qcashier.screen49.line3);
      expect(qcashier.screen49.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01805_element_check_01782 **********\n\n");
    });

    test('01806_element_check_01783', () async {
      print("\n********** テスト実行：01806_element_check_01783 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line4;
      print(qcashier.screen49.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line4 = testData1s;
      print(qcashier.screen49.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line4 = testData2s;
      print(qcashier.screen49.line4);
      expect(qcashier.screen49.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line4 = defalut;
      print(qcashier.screen49.line4);
      expect(qcashier.screen49.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01806_element_check_01783 **********\n\n");
    });

    test('01807_element_check_01784', () async {
      print("\n********** テスト実行：01807_element_check_01784 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line1_ex;
      print(qcashier.screen49.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line1_ex = testData1s;
      print(qcashier.screen49.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line1_ex = testData2s;
      print(qcashier.screen49.line1_ex);
      expect(qcashier.screen49.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line1_ex = defalut;
      print(qcashier.screen49.line1_ex);
      expect(qcashier.screen49.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01807_element_check_01784 **********\n\n");
    });

    test('01808_element_check_01785', () async {
      print("\n********** テスト実行：01808_element_check_01785 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line2_ex;
      print(qcashier.screen49.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line2_ex = testData1s;
      print(qcashier.screen49.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line2_ex = testData2s;
      print(qcashier.screen49.line2_ex);
      expect(qcashier.screen49.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line2_ex = defalut;
      print(qcashier.screen49.line2_ex);
      expect(qcashier.screen49.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01808_element_check_01785 **********\n\n");
    });

    test('01809_element_check_01786', () async {
      print("\n********** テスト実行：01809_element_check_01786 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line3_ex;
      print(qcashier.screen49.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line3_ex = testData1s;
      print(qcashier.screen49.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line3_ex = testData2s;
      print(qcashier.screen49.line3_ex);
      expect(qcashier.screen49.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line3_ex = defalut;
      print(qcashier.screen49.line3_ex);
      expect(qcashier.screen49.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01809_element_check_01786 **********\n\n");
    });

    test('01810_element_check_01787', () async {
      print("\n********** テスト実行：01810_element_check_01787 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.line4_ex;
      print(qcashier.screen49.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.line4_ex = testData1s;
      print(qcashier.screen49.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.line4_ex = testData2s;
      print(qcashier.screen49.line4_ex);
      expect(qcashier.screen49.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.line4_ex = defalut;
      print(qcashier.screen49.line4_ex);
      expect(qcashier.screen49.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01810_element_check_01787 **********\n\n");
    });

    test('01811_element_check_01788', () async {
      print("\n********** テスト実行：01811_element_check_01788 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.sound_led1;
      print(qcashier.screen49.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.sound_led1 = testData1;
      print(qcashier.screen49.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.sound_led1 = testData2;
      print(qcashier.screen49.sound_led1);
      expect(qcashier.screen49.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.sound_led1 = defalut;
      print(qcashier.screen49.sound_led1);
      expect(qcashier.screen49.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01811_element_check_01788 **********\n\n");
    });

    test('01812_element_check_01789', () async {
      print("\n********** テスト実行：01812_element_check_01789 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.sound_led2;
      print(qcashier.screen49.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.sound_led2 = testData1;
      print(qcashier.screen49.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.sound_led2 = testData2;
      print(qcashier.screen49.sound_led2);
      expect(qcashier.screen49.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.sound_led2 = defalut;
      print(qcashier.screen49.sound_led2);
      expect(qcashier.screen49.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01812_element_check_01789 **********\n\n");
    });

    test('01813_element_check_01790', () async {
      print("\n********** テスト実行：01813_element_check_01790 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen49.sound_led3;
      print(qcashier.screen49.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen49.sound_led3 = testData1;
      print(qcashier.screen49.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen49.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen49.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen49.sound_led3 = testData2;
      print(qcashier.screen49.sound_led3);
      expect(qcashier.screen49.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen49.sound_led3 = defalut;
      print(qcashier.screen49.sound_led3);
      expect(qcashier.screen49.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen49.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01813_element_check_01790 **********\n\n");
    });

    test('01814_element_check_01791', () async {
      print("\n********** テスト実行：01814_element_check_01791 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.title;
      print(qcashier.screen50.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.title = testData1s;
      print(qcashier.screen50.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.title = testData2s;
      print(qcashier.screen50.title);
      expect(qcashier.screen50.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.title = defalut;
      print(qcashier.screen50.title);
      expect(qcashier.screen50.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01814_element_check_01791 **********\n\n");
    });

    test('01815_element_check_01792', () async {
      print("\n********** テスト実行：01815_element_check_01792 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.msg1;
      print(qcashier.screen50.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.msg1 = testData1s;
      print(qcashier.screen50.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.msg1 = testData2s;
      print(qcashier.screen50.msg1);
      expect(qcashier.screen50.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.msg1 = defalut;
      print(qcashier.screen50.msg1);
      expect(qcashier.screen50.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01815_element_check_01792 **********\n\n");
    });

    test('01816_element_check_01793', () async {
      print("\n********** テスト実行：01816_element_check_01793 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.msg2;
      print(qcashier.screen50.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.msg2 = testData1s;
      print(qcashier.screen50.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.msg2 = testData2s;
      print(qcashier.screen50.msg2);
      expect(qcashier.screen50.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.msg2 = defalut;
      print(qcashier.screen50.msg2);
      expect(qcashier.screen50.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01816_element_check_01793 **********\n\n");
    });

    test('01817_element_check_01794', () async {
      print("\n********** テスト実行：01817_element_check_01794 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.msg1_size;
      print(qcashier.screen50.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.msg1_size = testData1;
      print(qcashier.screen50.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.msg1_size = testData2;
      print(qcashier.screen50.msg1_size);
      expect(qcashier.screen50.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.msg1_size = defalut;
      print(qcashier.screen50.msg1_size);
      expect(qcashier.screen50.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01817_element_check_01794 **********\n\n");
    });

    test('01818_element_check_01795', () async {
      print("\n********** テスト実行：01818_element_check_01795 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.msg2_size;
      print(qcashier.screen50.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.msg2_size = testData1;
      print(qcashier.screen50.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.msg2_size = testData2;
      print(qcashier.screen50.msg2_size);
      expect(qcashier.screen50.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.msg2_size = defalut;
      print(qcashier.screen50.msg2_size);
      expect(qcashier.screen50.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01818_element_check_01795 **********\n\n");
    });

    test('01819_element_check_01796', () async {
      print("\n********** テスト実行：01819_element_check_01796 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.sound1;
      print(qcashier.screen50.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.sound1 = testData1;
      print(qcashier.screen50.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.sound1 = testData2;
      print(qcashier.screen50.sound1);
      expect(qcashier.screen50.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.sound1 = defalut;
      print(qcashier.screen50.sound1);
      expect(qcashier.screen50.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01819_element_check_01796 **********\n\n");
    });

    test('01820_element_check_01797', () async {
      print("\n********** テスト実行：01820_element_check_01797 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.sound2;
      print(qcashier.screen50.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.sound2 = testData1;
      print(qcashier.screen50.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.sound2 = testData2;
      print(qcashier.screen50.sound2);
      expect(qcashier.screen50.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.sound2 = defalut;
      print(qcashier.screen50.sound2);
      expect(qcashier.screen50.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01820_element_check_01797 **********\n\n");
    });

    test('01821_element_check_01798', () async {
      print("\n********** テスト実行：01821_element_check_01798 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.sound3;
      print(qcashier.screen50.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.sound3 = testData1;
      print(qcashier.screen50.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.sound3 = testData2;
      print(qcashier.screen50.sound3);
      expect(qcashier.screen50.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.sound3 = defalut;
      print(qcashier.screen50.sound3);
      expect(qcashier.screen50.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01821_element_check_01798 **********\n\n");
    });

    test('01822_element_check_01799', () async {
      print("\n********** テスト実行：01822_element_check_01799 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.snd_timer;
      print(qcashier.screen50.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.snd_timer = testData1;
      print(qcashier.screen50.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.snd_timer = testData2;
      print(qcashier.screen50.snd_timer);
      expect(qcashier.screen50.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.snd_timer = defalut;
      print(qcashier.screen50.snd_timer);
      expect(qcashier.screen50.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01822_element_check_01799 **********\n\n");
    });

    test('01823_element_check_01800', () async {
      print("\n********** テスト実行：01823_element_check_01800 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.timer1;
      print(qcashier.screen50.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.timer1 = testData1;
      print(qcashier.screen50.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.timer1 = testData2;
      print(qcashier.screen50.timer1);
      expect(qcashier.screen50.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.timer1 = defalut;
      print(qcashier.screen50.timer1);
      expect(qcashier.screen50.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01823_element_check_01800 **********\n\n");
    });

    test('01824_element_check_01801', () async {
      print("\n********** テスト実行：01824_element_check_01801 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.timer2;
      print(qcashier.screen50.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.timer2 = testData1;
      print(qcashier.screen50.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.timer2 = testData2;
      print(qcashier.screen50.timer2);
      expect(qcashier.screen50.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.timer2 = defalut;
      print(qcashier.screen50.timer2);
      expect(qcashier.screen50.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01824_element_check_01801 **********\n\n");
    });

    test('01825_element_check_01802', () async {
      print("\n********** テスト実行：01825_element_check_01802 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.timer3;
      print(qcashier.screen50.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.timer3 = testData1;
      print(qcashier.screen50.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.timer3 = testData2;
      print(qcashier.screen50.timer3);
      expect(qcashier.screen50.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.timer3 = defalut;
      print(qcashier.screen50.timer3);
      expect(qcashier.screen50.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01825_element_check_01802 **********\n\n");
    });

    test('01826_element_check_01803', () async {
      print("\n********** テスト実行：01826_element_check_01803 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.dsp_flg1;
      print(qcashier.screen50.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.dsp_flg1 = testData1;
      print(qcashier.screen50.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.dsp_flg1 = testData2;
      print(qcashier.screen50.dsp_flg1);
      expect(qcashier.screen50.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.dsp_flg1 = defalut;
      print(qcashier.screen50.dsp_flg1);
      expect(qcashier.screen50.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01826_element_check_01803 **********\n\n");
    });

    test('01827_element_check_01804', () async {
      print("\n********** テスト実行：01827_element_check_01804 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.dsp_flg2;
      print(qcashier.screen50.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.dsp_flg2 = testData1;
      print(qcashier.screen50.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.dsp_flg2 = testData2;
      print(qcashier.screen50.dsp_flg2);
      expect(qcashier.screen50.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.dsp_flg2 = defalut;
      print(qcashier.screen50.dsp_flg2);
      expect(qcashier.screen50.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01827_element_check_01804 **********\n\n");
    });

    test('01828_element_check_01805', () async {
      print("\n********** テスト実行：01828_element_check_01805 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.movie01_ext;
      print(qcashier.screen50.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.movie01_ext = testData1;
      print(qcashier.screen50.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.movie01_ext = testData2;
      print(qcashier.screen50.movie01_ext);
      expect(qcashier.screen50.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.movie01_ext = defalut;
      print(qcashier.screen50.movie01_ext);
      expect(qcashier.screen50.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01828_element_check_01805 **********\n\n");
    });

    test('01829_element_check_01806', () async {
      print("\n********** テスト実行：01829_element_check_01806 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.movie02_ext;
      print(qcashier.screen50.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.movie02_ext = testData1;
      print(qcashier.screen50.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.movie02_ext = testData2;
      print(qcashier.screen50.movie02_ext);
      expect(qcashier.screen50.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.movie02_ext = defalut;
      print(qcashier.screen50.movie02_ext);
      expect(qcashier.screen50.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01829_element_check_01806 **********\n\n");
    });

    test('01830_element_check_01807', () async {
      print("\n********** テスト実行：01830_element_check_01807 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.movie03_ext;
      print(qcashier.screen50.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.movie03_ext = testData1;
      print(qcashier.screen50.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.movie03_ext = testData2;
      print(qcashier.screen50.movie03_ext);
      expect(qcashier.screen50.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.movie03_ext = defalut;
      print(qcashier.screen50.movie03_ext);
      expect(qcashier.screen50.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01830_element_check_01807 **********\n\n");
    });

    test('01831_element_check_01808', () async {
      print("\n********** テスト実行：01831_element_check_01808 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.movie04_ext;
      print(qcashier.screen50.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.movie04_ext = testData1;
      print(qcashier.screen50.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.movie04_ext = testData2;
      print(qcashier.screen50.movie04_ext);
      expect(qcashier.screen50.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.movie04_ext = defalut;
      print(qcashier.screen50.movie04_ext);
      expect(qcashier.screen50.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01831_element_check_01808 **********\n\n");
    });

    test('01832_element_check_01809', () async {
      print("\n********** テスト実行：01832_element_check_01809 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line_title;
      print(qcashier.screen50.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line_title = testData1s;
      print(qcashier.screen50.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line_title = testData2s;
      print(qcashier.screen50.line_title);
      expect(qcashier.screen50.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line_title = defalut;
      print(qcashier.screen50.line_title);
      expect(qcashier.screen50.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01832_element_check_01809 **********\n\n");
    });

    test('01833_element_check_01810', () async {
      print("\n********** テスト実行：01833_element_check_01810 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line_title_ex;
      print(qcashier.screen50.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line_title_ex = testData1s;
      print(qcashier.screen50.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line_title_ex = testData2s;
      print(qcashier.screen50.line_title_ex);
      expect(qcashier.screen50.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line_title_ex = defalut;
      print(qcashier.screen50.line_title_ex);
      expect(qcashier.screen50.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01833_element_check_01810 **********\n\n");
    });

    test('01834_element_check_01811', () async {
      print("\n********** テスト実行：01834_element_check_01811 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line1;
      print(qcashier.screen50.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line1 = testData1s;
      print(qcashier.screen50.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line1 = testData2s;
      print(qcashier.screen50.line1);
      expect(qcashier.screen50.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line1 = defalut;
      print(qcashier.screen50.line1);
      expect(qcashier.screen50.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01834_element_check_01811 **********\n\n");
    });

    test('01835_element_check_01812', () async {
      print("\n********** テスト実行：01835_element_check_01812 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line2;
      print(qcashier.screen50.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line2 = testData1s;
      print(qcashier.screen50.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line2 = testData2s;
      print(qcashier.screen50.line2);
      expect(qcashier.screen50.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line2 = defalut;
      print(qcashier.screen50.line2);
      expect(qcashier.screen50.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01835_element_check_01812 **********\n\n");
    });

    test('01836_element_check_01813', () async {
      print("\n********** テスト実行：01836_element_check_01813 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line3;
      print(qcashier.screen50.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line3 = testData1s;
      print(qcashier.screen50.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line3 = testData2s;
      print(qcashier.screen50.line3);
      expect(qcashier.screen50.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line3 = defalut;
      print(qcashier.screen50.line3);
      expect(qcashier.screen50.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01836_element_check_01813 **********\n\n");
    });

    test('01837_element_check_01814', () async {
      print("\n********** テスト実行：01837_element_check_01814 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line4;
      print(qcashier.screen50.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line4 = testData1s;
      print(qcashier.screen50.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line4 = testData2s;
      print(qcashier.screen50.line4);
      expect(qcashier.screen50.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line4 = defalut;
      print(qcashier.screen50.line4);
      expect(qcashier.screen50.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01837_element_check_01814 **********\n\n");
    });

    test('01838_element_check_01815', () async {
      print("\n********** テスト実行：01838_element_check_01815 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line1_ex;
      print(qcashier.screen50.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line1_ex = testData1s;
      print(qcashier.screen50.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line1_ex = testData2s;
      print(qcashier.screen50.line1_ex);
      expect(qcashier.screen50.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line1_ex = defalut;
      print(qcashier.screen50.line1_ex);
      expect(qcashier.screen50.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01838_element_check_01815 **********\n\n");
    });

    test('01839_element_check_01816', () async {
      print("\n********** テスト実行：01839_element_check_01816 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line2_ex;
      print(qcashier.screen50.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line2_ex = testData1s;
      print(qcashier.screen50.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line2_ex = testData2s;
      print(qcashier.screen50.line2_ex);
      expect(qcashier.screen50.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line2_ex = defalut;
      print(qcashier.screen50.line2_ex);
      expect(qcashier.screen50.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01839_element_check_01816 **********\n\n");
    });

    test('01840_element_check_01817', () async {
      print("\n********** テスト実行：01840_element_check_01817 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line3_ex;
      print(qcashier.screen50.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line3_ex = testData1s;
      print(qcashier.screen50.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line3_ex = testData2s;
      print(qcashier.screen50.line3_ex);
      expect(qcashier.screen50.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line3_ex = defalut;
      print(qcashier.screen50.line3_ex);
      expect(qcashier.screen50.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01840_element_check_01817 **********\n\n");
    });

    test('01841_element_check_01818', () async {
      print("\n********** テスト実行：01841_element_check_01818 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.line4_ex;
      print(qcashier.screen50.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.line4_ex = testData1s;
      print(qcashier.screen50.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.line4_ex = testData2s;
      print(qcashier.screen50.line4_ex);
      expect(qcashier.screen50.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.line4_ex = defalut;
      print(qcashier.screen50.line4_ex);
      expect(qcashier.screen50.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01841_element_check_01818 **********\n\n");
    });

    test('01842_element_check_01819', () async {
      print("\n********** テスト実行：01842_element_check_01819 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.sound_led1;
      print(qcashier.screen50.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.sound_led1 = testData1;
      print(qcashier.screen50.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.sound_led1 = testData2;
      print(qcashier.screen50.sound_led1);
      expect(qcashier.screen50.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.sound_led1 = defalut;
      print(qcashier.screen50.sound_led1);
      expect(qcashier.screen50.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01842_element_check_01819 **********\n\n");
    });

    test('01843_element_check_01820', () async {
      print("\n********** テスト実行：01843_element_check_01820 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.sound_led2;
      print(qcashier.screen50.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.sound_led2 = testData1;
      print(qcashier.screen50.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.sound_led2 = testData2;
      print(qcashier.screen50.sound_led2);
      expect(qcashier.screen50.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.sound_led2 = defalut;
      print(qcashier.screen50.sound_led2);
      expect(qcashier.screen50.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01843_element_check_01820 **********\n\n");
    });

    test('01844_element_check_01821', () async {
      print("\n********** テスト実行：01844_element_check_01821 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen50.sound_led3;
      print(qcashier.screen50.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen50.sound_led3 = testData1;
      print(qcashier.screen50.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen50.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen50.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen50.sound_led3 = testData2;
      print(qcashier.screen50.sound_led3);
      expect(qcashier.screen50.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen50.sound_led3 = defalut;
      print(qcashier.screen50.sound_led3);
      expect(qcashier.screen50.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen50.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01844_element_check_01821 **********\n\n");
    });

    test('01845_element_check_01822', () async {
      print("\n********** テスト実行：01845_element_check_01822 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.title;
      print(qcashier.screen51.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.title = testData1s;
      print(qcashier.screen51.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.title = testData2s;
      print(qcashier.screen51.title);
      expect(qcashier.screen51.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.title = defalut;
      print(qcashier.screen51.title);
      expect(qcashier.screen51.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01845_element_check_01822 **********\n\n");
    });

    test('01846_element_check_01823', () async {
      print("\n********** テスト実行：01846_element_check_01823 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.msg1;
      print(qcashier.screen51.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.msg1 = testData1s;
      print(qcashier.screen51.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.msg1 = testData2s;
      print(qcashier.screen51.msg1);
      expect(qcashier.screen51.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.msg1 = defalut;
      print(qcashier.screen51.msg1);
      expect(qcashier.screen51.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01846_element_check_01823 **********\n\n");
    });

    test('01847_element_check_01824', () async {
      print("\n********** テスト実行：01847_element_check_01824 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.msg2;
      print(qcashier.screen51.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.msg2 = testData1s;
      print(qcashier.screen51.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.msg2 = testData2s;
      print(qcashier.screen51.msg2);
      expect(qcashier.screen51.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.msg2 = defalut;
      print(qcashier.screen51.msg2);
      expect(qcashier.screen51.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01847_element_check_01824 **********\n\n");
    });

    test('01848_element_check_01825', () async {
      print("\n********** テスト実行：01848_element_check_01825 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.msg1_size;
      print(qcashier.screen51.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.msg1_size = testData1;
      print(qcashier.screen51.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.msg1_size = testData2;
      print(qcashier.screen51.msg1_size);
      expect(qcashier.screen51.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.msg1_size = defalut;
      print(qcashier.screen51.msg1_size);
      expect(qcashier.screen51.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01848_element_check_01825 **********\n\n");
    });

    test('01849_element_check_01826', () async {
      print("\n********** テスト実行：01849_element_check_01826 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.msg2_size;
      print(qcashier.screen51.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.msg2_size = testData1;
      print(qcashier.screen51.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.msg2_size = testData2;
      print(qcashier.screen51.msg2_size);
      expect(qcashier.screen51.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.msg2_size = defalut;
      print(qcashier.screen51.msg2_size);
      expect(qcashier.screen51.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01849_element_check_01826 **********\n\n");
    });

    test('01850_element_check_01827', () async {
      print("\n********** テスト実行：01850_element_check_01827 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.sound1;
      print(qcashier.screen51.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.sound1 = testData1;
      print(qcashier.screen51.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.sound1 = testData2;
      print(qcashier.screen51.sound1);
      expect(qcashier.screen51.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.sound1 = defalut;
      print(qcashier.screen51.sound1);
      expect(qcashier.screen51.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01850_element_check_01827 **********\n\n");
    });

    test('01851_element_check_01828', () async {
      print("\n********** テスト実行：01851_element_check_01828 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.sound2;
      print(qcashier.screen51.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.sound2 = testData1;
      print(qcashier.screen51.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.sound2 = testData2;
      print(qcashier.screen51.sound2);
      expect(qcashier.screen51.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.sound2 = defalut;
      print(qcashier.screen51.sound2);
      expect(qcashier.screen51.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01851_element_check_01828 **********\n\n");
    });

    test('01852_element_check_01829', () async {
      print("\n********** テスト実行：01852_element_check_01829 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.sound3;
      print(qcashier.screen51.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.sound3 = testData1s;
      print(qcashier.screen51.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.sound3 = testData2s;
      print(qcashier.screen51.sound3);
      expect(qcashier.screen51.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.sound3 = defalut;
      print(qcashier.screen51.sound3);
      expect(qcashier.screen51.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01852_element_check_01829 **********\n\n");
    });

    test('01853_element_check_01830', () async {
      print("\n********** テスト実行：01853_element_check_01830 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.snd_timer;
      print(qcashier.screen51.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.snd_timer = testData1;
      print(qcashier.screen51.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.snd_timer = testData2;
      print(qcashier.screen51.snd_timer);
      expect(qcashier.screen51.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.snd_timer = defalut;
      print(qcashier.screen51.snd_timer);
      expect(qcashier.screen51.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01853_element_check_01830 **********\n\n");
    });

    test('01854_element_check_01831', () async {
      print("\n********** テスト実行：01854_element_check_01831 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.timer1;
      print(qcashier.screen51.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.timer1 = testData1;
      print(qcashier.screen51.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.timer1 = testData2;
      print(qcashier.screen51.timer1);
      expect(qcashier.screen51.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.timer1 = defalut;
      print(qcashier.screen51.timer1);
      expect(qcashier.screen51.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01854_element_check_01831 **********\n\n");
    });

    test('01855_element_check_01832', () async {
      print("\n********** テスト実行：01855_element_check_01832 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.timer2;
      print(qcashier.screen51.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.timer2 = testData1;
      print(qcashier.screen51.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.timer2 = testData2;
      print(qcashier.screen51.timer2);
      expect(qcashier.screen51.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.timer2 = defalut;
      print(qcashier.screen51.timer2);
      expect(qcashier.screen51.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01855_element_check_01832 **********\n\n");
    });

    test('01856_element_check_01833', () async {
      print("\n********** テスト実行：01856_element_check_01833 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.timer3;
      print(qcashier.screen51.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.timer3 = testData1;
      print(qcashier.screen51.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.timer3 = testData2;
      print(qcashier.screen51.timer3);
      expect(qcashier.screen51.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.timer3 = defalut;
      print(qcashier.screen51.timer3);
      expect(qcashier.screen51.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01856_element_check_01833 **********\n\n");
    });

    test('01857_element_check_01834', () async {
      print("\n********** テスト実行：01857_element_check_01834 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.dsp_flg1;
      print(qcashier.screen51.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.dsp_flg1 = testData1;
      print(qcashier.screen51.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.dsp_flg1 = testData2;
      print(qcashier.screen51.dsp_flg1);
      expect(qcashier.screen51.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.dsp_flg1 = defalut;
      print(qcashier.screen51.dsp_flg1);
      expect(qcashier.screen51.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01857_element_check_01834 **********\n\n");
    });

    test('01858_element_check_01835', () async {
      print("\n********** テスト実行：01858_element_check_01835 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.dsp_flg2;
      print(qcashier.screen51.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.dsp_flg2 = testData1;
      print(qcashier.screen51.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.dsp_flg2 = testData2;
      print(qcashier.screen51.dsp_flg2);
      expect(qcashier.screen51.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.dsp_flg2 = defalut;
      print(qcashier.screen51.dsp_flg2);
      expect(qcashier.screen51.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01858_element_check_01835 **********\n\n");
    });

    test('01859_element_check_01836', () async {
      print("\n********** テスト実行：01859_element_check_01836 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.movie01_ext;
      print(qcashier.screen51.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.movie01_ext = testData1;
      print(qcashier.screen51.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.movie01_ext = testData2;
      print(qcashier.screen51.movie01_ext);
      expect(qcashier.screen51.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.movie01_ext = defalut;
      print(qcashier.screen51.movie01_ext);
      expect(qcashier.screen51.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01859_element_check_01836 **********\n\n");
    });

    test('01860_element_check_01837', () async {
      print("\n********** テスト実行：01860_element_check_01837 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.movie02_ext;
      print(qcashier.screen51.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.movie02_ext = testData1;
      print(qcashier.screen51.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.movie02_ext = testData2;
      print(qcashier.screen51.movie02_ext);
      expect(qcashier.screen51.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.movie02_ext = defalut;
      print(qcashier.screen51.movie02_ext);
      expect(qcashier.screen51.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01860_element_check_01837 **********\n\n");
    });

    test('01861_element_check_01838', () async {
      print("\n********** テスト実行：01861_element_check_01838 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.movie03_ext;
      print(qcashier.screen51.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.movie03_ext = testData1;
      print(qcashier.screen51.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.movie03_ext = testData2;
      print(qcashier.screen51.movie03_ext);
      expect(qcashier.screen51.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.movie03_ext = defalut;
      print(qcashier.screen51.movie03_ext);
      expect(qcashier.screen51.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01861_element_check_01838 **********\n\n");
    });

    test('01862_element_check_01839', () async {
      print("\n********** テスト実行：01862_element_check_01839 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.movie04_ext;
      print(qcashier.screen51.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.movie04_ext = testData1;
      print(qcashier.screen51.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.movie04_ext = testData2;
      print(qcashier.screen51.movie04_ext);
      expect(qcashier.screen51.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.movie04_ext = defalut;
      print(qcashier.screen51.movie04_ext);
      expect(qcashier.screen51.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01862_element_check_01839 **********\n\n");
    });

    test('01863_element_check_01840', () async {
      print("\n********** テスト実行：01863_element_check_01840 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line_title;
      print(qcashier.screen51.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line_title = testData1s;
      print(qcashier.screen51.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line_title = testData2s;
      print(qcashier.screen51.line_title);
      expect(qcashier.screen51.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line_title = defalut;
      print(qcashier.screen51.line_title);
      expect(qcashier.screen51.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01863_element_check_01840 **********\n\n");
    });

    test('01864_element_check_01841', () async {
      print("\n********** テスト実行：01864_element_check_01841 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line_title_ex;
      print(qcashier.screen51.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line_title_ex = testData1s;
      print(qcashier.screen51.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line_title_ex = testData2s;
      print(qcashier.screen51.line_title_ex);
      expect(qcashier.screen51.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line_title_ex = defalut;
      print(qcashier.screen51.line_title_ex);
      expect(qcashier.screen51.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01864_element_check_01841 **********\n\n");
    });

    test('01865_element_check_01842', () async {
      print("\n********** テスト実行：01865_element_check_01842 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line1;
      print(qcashier.screen51.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line1 = testData1s;
      print(qcashier.screen51.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line1 = testData2s;
      print(qcashier.screen51.line1);
      expect(qcashier.screen51.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line1 = defalut;
      print(qcashier.screen51.line1);
      expect(qcashier.screen51.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01865_element_check_01842 **********\n\n");
    });

    test('01866_element_check_01843', () async {
      print("\n********** テスト実行：01866_element_check_01843 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line2;
      print(qcashier.screen51.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line2 = testData1s;
      print(qcashier.screen51.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line2 = testData2s;
      print(qcashier.screen51.line2);
      expect(qcashier.screen51.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line2 = defalut;
      print(qcashier.screen51.line2);
      expect(qcashier.screen51.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01866_element_check_01843 **********\n\n");
    });

    test('01867_element_check_01844', () async {
      print("\n********** テスト実行：01867_element_check_01844 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line3;
      print(qcashier.screen51.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line3 = testData1s;
      print(qcashier.screen51.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line3 = testData2s;
      print(qcashier.screen51.line3);
      expect(qcashier.screen51.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line3 = defalut;
      print(qcashier.screen51.line3);
      expect(qcashier.screen51.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01867_element_check_01844 **********\n\n");
    });

    test('01868_element_check_01845', () async {
      print("\n********** テスト実行：01868_element_check_01845 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line4;
      print(qcashier.screen51.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line4 = testData1s;
      print(qcashier.screen51.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line4 = testData2s;
      print(qcashier.screen51.line4);
      expect(qcashier.screen51.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line4 = defalut;
      print(qcashier.screen51.line4);
      expect(qcashier.screen51.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01868_element_check_01845 **********\n\n");
    });

    test('01869_element_check_01846', () async {
      print("\n********** テスト実行：01869_element_check_01846 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line1_ex;
      print(qcashier.screen51.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line1_ex = testData1s;
      print(qcashier.screen51.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line1_ex = testData2s;
      print(qcashier.screen51.line1_ex);
      expect(qcashier.screen51.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line1_ex = defalut;
      print(qcashier.screen51.line1_ex);
      expect(qcashier.screen51.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01869_element_check_01846 **********\n\n");
    });

    test('01870_element_check_01847', () async {
      print("\n********** テスト実行：01870_element_check_01847 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line2_ex;
      print(qcashier.screen51.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line2_ex = testData1s;
      print(qcashier.screen51.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line2_ex = testData2s;
      print(qcashier.screen51.line2_ex);
      expect(qcashier.screen51.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line2_ex = defalut;
      print(qcashier.screen51.line2_ex);
      expect(qcashier.screen51.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01870_element_check_01847 **********\n\n");
    });

    test('01871_element_check_01848', () async {
      print("\n********** テスト実行：01871_element_check_01848 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line3_ex;
      print(qcashier.screen51.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line3_ex = testData1s;
      print(qcashier.screen51.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line3_ex = testData2s;
      print(qcashier.screen51.line3_ex);
      expect(qcashier.screen51.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line3_ex = defalut;
      print(qcashier.screen51.line3_ex);
      expect(qcashier.screen51.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01871_element_check_01848 **********\n\n");
    });

    test('01872_element_check_01849', () async {
      print("\n********** テスト実行：01872_element_check_01849 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.line4_ex;
      print(qcashier.screen51.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.line4_ex = testData1s;
      print(qcashier.screen51.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.line4_ex = testData2s;
      print(qcashier.screen51.line4_ex);
      expect(qcashier.screen51.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.line4_ex = defalut;
      print(qcashier.screen51.line4_ex);
      expect(qcashier.screen51.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01872_element_check_01849 **********\n\n");
    });

    test('01873_element_check_01850', () async {
      print("\n********** テスト実行：01873_element_check_01850 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.sound_led1;
      print(qcashier.screen51.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.sound_led1 = testData1;
      print(qcashier.screen51.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.sound_led1 = testData2;
      print(qcashier.screen51.sound_led1);
      expect(qcashier.screen51.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.sound_led1 = defalut;
      print(qcashier.screen51.sound_led1);
      expect(qcashier.screen51.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01873_element_check_01850 **********\n\n");
    });

    test('01874_element_check_01851', () async {
      print("\n********** テスト実行：01874_element_check_01851 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.sound_led2;
      print(qcashier.screen51.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.sound_led2 = testData1;
      print(qcashier.screen51.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.sound_led2 = testData2;
      print(qcashier.screen51.sound_led2);
      expect(qcashier.screen51.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.sound_led2 = defalut;
      print(qcashier.screen51.sound_led2);
      expect(qcashier.screen51.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01874_element_check_01851 **********\n\n");
    });

    test('01875_element_check_01852', () async {
      print("\n********** テスト実行：01875_element_check_01852 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen51.sound_led3;
      print(qcashier.screen51.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen51.sound_led3 = testData1s;
      print(qcashier.screen51.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen51.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen51.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen51.sound_led3 = testData2s;
      print(qcashier.screen51.sound_led3);
      expect(qcashier.screen51.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen51.sound_led3 = defalut;
      print(qcashier.screen51.sound_led3);
      expect(qcashier.screen51.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen51.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01875_element_check_01852 **********\n\n");
    });

    test('01876_element_check_01853', () async {
      print("\n********** テスト実行：01876_element_check_01853 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.title;
      print(qcashier.screen52.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.title = testData1s;
      print(qcashier.screen52.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.title = testData2s;
      print(qcashier.screen52.title);
      expect(qcashier.screen52.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.title = defalut;
      print(qcashier.screen52.title);
      expect(qcashier.screen52.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01876_element_check_01853 **********\n\n");
    });

    test('01877_element_check_01854', () async {
      print("\n********** テスト実行：01877_element_check_01854 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.msg1;
      print(qcashier.screen52.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.msg1 = testData1s;
      print(qcashier.screen52.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.msg1 = testData2s;
      print(qcashier.screen52.msg1);
      expect(qcashier.screen52.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.msg1 = defalut;
      print(qcashier.screen52.msg1);
      expect(qcashier.screen52.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01877_element_check_01854 **********\n\n");
    });

    test('01878_element_check_01855', () async {
      print("\n********** テスト実行：01878_element_check_01855 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.msg2;
      print(qcashier.screen52.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.msg2 = testData1s;
      print(qcashier.screen52.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.msg2 = testData2s;
      print(qcashier.screen52.msg2);
      expect(qcashier.screen52.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.msg2 = defalut;
      print(qcashier.screen52.msg2);
      expect(qcashier.screen52.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01878_element_check_01855 **********\n\n");
    });

    test('01879_element_check_01856', () async {
      print("\n********** テスト実行：01879_element_check_01856 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.msg1_size;
      print(qcashier.screen52.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.msg1_size = testData1;
      print(qcashier.screen52.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.msg1_size = testData2;
      print(qcashier.screen52.msg1_size);
      expect(qcashier.screen52.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.msg1_size = defalut;
      print(qcashier.screen52.msg1_size);
      expect(qcashier.screen52.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01879_element_check_01856 **********\n\n");
    });

    test('01880_element_check_01857', () async {
      print("\n********** テスト実行：01880_element_check_01857 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.msg2_size;
      print(qcashier.screen52.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.msg2_size = testData1;
      print(qcashier.screen52.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.msg2_size = testData2;
      print(qcashier.screen52.msg2_size);
      expect(qcashier.screen52.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.msg2_size = defalut;
      print(qcashier.screen52.msg2_size);
      expect(qcashier.screen52.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01880_element_check_01857 **********\n\n");
    });

    test('01881_element_check_01858', () async {
      print("\n********** テスト実行：01881_element_check_01858 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.sound1;
      print(qcashier.screen52.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.sound1 = testData1;
      print(qcashier.screen52.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.sound1 = testData2;
      print(qcashier.screen52.sound1);
      expect(qcashier.screen52.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.sound1 = defalut;
      print(qcashier.screen52.sound1);
      expect(qcashier.screen52.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01881_element_check_01858 **********\n\n");
    });

    test('01882_element_check_01859', () async {
      print("\n********** テスト実行：01882_element_check_01859 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.sound2;
      print(qcashier.screen52.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.sound2 = testData1;
      print(qcashier.screen52.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.sound2 = testData2;
      print(qcashier.screen52.sound2);
      expect(qcashier.screen52.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.sound2 = defalut;
      print(qcashier.screen52.sound2);
      expect(qcashier.screen52.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01882_element_check_01859 **********\n\n");
    });

    test('01883_element_check_01860', () async {
      print("\n********** テスト実行：01883_element_check_01860 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.sound3;
      print(qcashier.screen52.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.sound3 = testData1;
      print(qcashier.screen52.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.sound3 = testData2;
      print(qcashier.screen52.sound3);
      expect(qcashier.screen52.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.sound3 = defalut;
      print(qcashier.screen52.sound3);
      expect(qcashier.screen52.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01883_element_check_01860 **********\n\n");
    });

    test('01884_element_check_01861', () async {
      print("\n********** テスト実行：01884_element_check_01861 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.snd_timer;
      print(qcashier.screen52.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.snd_timer = testData1;
      print(qcashier.screen52.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.snd_timer = testData2;
      print(qcashier.screen52.snd_timer);
      expect(qcashier.screen52.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.snd_timer = defalut;
      print(qcashier.screen52.snd_timer);
      expect(qcashier.screen52.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01884_element_check_01861 **********\n\n");
    });

    test('01885_element_check_01862', () async {
      print("\n********** テスト実行：01885_element_check_01862 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.timer1;
      print(qcashier.screen52.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.timer1 = testData1;
      print(qcashier.screen52.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.timer1 = testData2;
      print(qcashier.screen52.timer1);
      expect(qcashier.screen52.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.timer1 = defalut;
      print(qcashier.screen52.timer1);
      expect(qcashier.screen52.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01885_element_check_01862 **********\n\n");
    });

    test('01886_element_check_01863', () async {
      print("\n********** テスト実行：01886_element_check_01863 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.timer2;
      print(qcashier.screen52.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.timer2 = testData1;
      print(qcashier.screen52.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.timer2 = testData2;
      print(qcashier.screen52.timer2);
      expect(qcashier.screen52.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.timer2 = defalut;
      print(qcashier.screen52.timer2);
      expect(qcashier.screen52.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01886_element_check_01863 **********\n\n");
    });

    test('01887_element_check_01864', () async {
      print("\n********** テスト実行：01887_element_check_01864 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.timer3;
      print(qcashier.screen52.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.timer3 = testData1;
      print(qcashier.screen52.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.timer3 = testData2;
      print(qcashier.screen52.timer3);
      expect(qcashier.screen52.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.timer3 = defalut;
      print(qcashier.screen52.timer3);
      expect(qcashier.screen52.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01887_element_check_01864 **********\n\n");
    });

    test('01888_element_check_01865', () async {
      print("\n********** テスト実行：01888_element_check_01865 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.dsp_flg1;
      print(qcashier.screen52.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.dsp_flg1 = testData1;
      print(qcashier.screen52.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.dsp_flg1 = testData2;
      print(qcashier.screen52.dsp_flg1);
      expect(qcashier.screen52.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.dsp_flg1 = defalut;
      print(qcashier.screen52.dsp_flg1);
      expect(qcashier.screen52.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01888_element_check_01865 **********\n\n");
    });

    test('01889_element_check_01866', () async {
      print("\n********** テスト実行：01889_element_check_01866 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.dsp_flg2;
      print(qcashier.screen52.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.dsp_flg2 = testData1;
      print(qcashier.screen52.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.dsp_flg2 = testData2;
      print(qcashier.screen52.dsp_flg2);
      expect(qcashier.screen52.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.dsp_flg2 = defalut;
      print(qcashier.screen52.dsp_flg2);
      expect(qcashier.screen52.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01889_element_check_01866 **********\n\n");
    });

    test('01890_element_check_01867', () async {
      print("\n********** テスト実行：01890_element_check_01867 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.movie01_ext;
      print(qcashier.screen52.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.movie01_ext = testData1;
      print(qcashier.screen52.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.movie01_ext = testData2;
      print(qcashier.screen52.movie01_ext);
      expect(qcashier.screen52.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.movie01_ext = defalut;
      print(qcashier.screen52.movie01_ext);
      expect(qcashier.screen52.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01890_element_check_01867 **********\n\n");
    });

    test('01891_element_check_01868', () async {
      print("\n********** テスト実行：01891_element_check_01868 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.movie02_ext;
      print(qcashier.screen52.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.movie02_ext = testData1;
      print(qcashier.screen52.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.movie02_ext = testData2;
      print(qcashier.screen52.movie02_ext);
      expect(qcashier.screen52.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.movie02_ext = defalut;
      print(qcashier.screen52.movie02_ext);
      expect(qcashier.screen52.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01891_element_check_01868 **********\n\n");
    });

    test('01892_element_check_01869', () async {
      print("\n********** テスト実行：01892_element_check_01869 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.movie03_ext;
      print(qcashier.screen52.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.movie03_ext = testData1;
      print(qcashier.screen52.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.movie03_ext = testData2;
      print(qcashier.screen52.movie03_ext);
      expect(qcashier.screen52.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.movie03_ext = defalut;
      print(qcashier.screen52.movie03_ext);
      expect(qcashier.screen52.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01892_element_check_01869 **********\n\n");
    });

    test('01893_element_check_01870', () async {
      print("\n********** テスト実行：01893_element_check_01870 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.movie04_ext;
      print(qcashier.screen52.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.movie04_ext = testData1;
      print(qcashier.screen52.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.movie04_ext = testData2;
      print(qcashier.screen52.movie04_ext);
      expect(qcashier.screen52.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.movie04_ext = defalut;
      print(qcashier.screen52.movie04_ext);
      expect(qcashier.screen52.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01893_element_check_01870 **********\n\n");
    });

    test('01894_element_check_01871', () async {
      print("\n********** テスト実行：01894_element_check_01871 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line_title;
      print(qcashier.screen52.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line_title = testData1s;
      print(qcashier.screen52.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line_title = testData2s;
      print(qcashier.screen52.line_title);
      expect(qcashier.screen52.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line_title = defalut;
      print(qcashier.screen52.line_title);
      expect(qcashier.screen52.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01894_element_check_01871 **********\n\n");
    });

    test('01895_element_check_01872', () async {
      print("\n********** テスト実行：01895_element_check_01872 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line_title_ex;
      print(qcashier.screen52.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line_title_ex = testData1s;
      print(qcashier.screen52.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line_title_ex = testData2s;
      print(qcashier.screen52.line_title_ex);
      expect(qcashier.screen52.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line_title_ex = defalut;
      print(qcashier.screen52.line_title_ex);
      expect(qcashier.screen52.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01895_element_check_01872 **********\n\n");
    });

    test('01896_element_check_01873', () async {
      print("\n********** テスト実行：01896_element_check_01873 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line1;
      print(qcashier.screen52.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line1 = testData1s;
      print(qcashier.screen52.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line1 = testData2s;
      print(qcashier.screen52.line1);
      expect(qcashier.screen52.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line1 = defalut;
      print(qcashier.screen52.line1);
      expect(qcashier.screen52.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01896_element_check_01873 **********\n\n");
    });

    test('01897_element_check_01874', () async {
      print("\n********** テスト実行：01897_element_check_01874 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line2;
      print(qcashier.screen52.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line2 = testData1s;
      print(qcashier.screen52.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line2 = testData2s;
      print(qcashier.screen52.line2);
      expect(qcashier.screen52.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line2 = defalut;
      print(qcashier.screen52.line2);
      expect(qcashier.screen52.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01897_element_check_01874 **********\n\n");
    });

    test('01898_element_check_01875', () async {
      print("\n********** テスト実行：01898_element_check_01875 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line3;
      print(qcashier.screen52.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line3 = testData1s;
      print(qcashier.screen52.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line3 = testData2s;
      print(qcashier.screen52.line3);
      expect(qcashier.screen52.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line3 = defalut;
      print(qcashier.screen52.line3);
      expect(qcashier.screen52.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01898_element_check_01875 **********\n\n");
    });

    test('01899_element_check_01876', () async {
      print("\n********** テスト実行：01899_element_check_01876 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line4;
      print(qcashier.screen52.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line4 = testData1s;
      print(qcashier.screen52.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line4 = testData2s;
      print(qcashier.screen52.line4);
      expect(qcashier.screen52.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line4 = defalut;
      print(qcashier.screen52.line4);
      expect(qcashier.screen52.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01899_element_check_01876 **********\n\n");
    });

    test('01900_element_check_01877', () async {
      print("\n********** テスト実行：01900_element_check_01877 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line1_ex;
      print(qcashier.screen52.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line1_ex = testData1s;
      print(qcashier.screen52.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line1_ex = testData2s;
      print(qcashier.screen52.line1_ex);
      expect(qcashier.screen52.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line1_ex = defalut;
      print(qcashier.screen52.line1_ex);
      expect(qcashier.screen52.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01900_element_check_01877 **********\n\n");
    });

    test('01901_element_check_01878', () async {
      print("\n********** テスト実行：01901_element_check_01878 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line2_ex;
      print(qcashier.screen52.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line2_ex = testData1s;
      print(qcashier.screen52.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line2_ex = testData2s;
      print(qcashier.screen52.line2_ex);
      expect(qcashier.screen52.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line2_ex = defalut;
      print(qcashier.screen52.line2_ex);
      expect(qcashier.screen52.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01901_element_check_01878 **********\n\n");
    });

    test('01902_element_check_01879', () async {
      print("\n********** テスト実行：01902_element_check_01879 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line3_ex;
      print(qcashier.screen52.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line3_ex = testData1s;
      print(qcashier.screen52.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line3_ex = testData2s;
      print(qcashier.screen52.line3_ex);
      expect(qcashier.screen52.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line3_ex = defalut;
      print(qcashier.screen52.line3_ex);
      expect(qcashier.screen52.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01902_element_check_01879 **********\n\n");
    });

    test('01903_element_check_01880', () async {
      print("\n********** テスト実行：01903_element_check_01880 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.line4_ex;
      print(qcashier.screen52.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.line4_ex = testData1s;
      print(qcashier.screen52.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.line4_ex = testData2s;
      print(qcashier.screen52.line4_ex);
      expect(qcashier.screen52.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.line4_ex = defalut;
      print(qcashier.screen52.line4_ex);
      expect(qcashier.screen52.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01903_element_check_01880 **********\n\n");
    });

    test('01904_element_check_01881', () async {
      print("\n********** テスト実行：01904_element_check_01881 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.sound_led1;
      print(qcashier.screen52.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.sound_led1 = testData1;
      print(qcashier.screen52.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.sound_led1 = testData2;
      print(qcashier.screen52.sound_led1);
      expect(qcashier.screen52.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.sound_led1 = defalut;
      print(qcashier.screen52.sound_led1);
      expect(qcashier.screen52.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01904_element_check_01881 **********\n\n");
    });

    test('01905_element_check_01882', () async {
      print("\n********** テスト実行：01905_element_check_01882 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.sound_led2;
      print(qcashier.screen52.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.sound_led2 = testData1;
      print(qcashier.screen52.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.sound_led2 = testData2;
      print(qcashier.screen52.sound_led2);
      expect(qcashier.screen52.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.sound_led2 = defalut;
      print(qcashier.screen52.sound_led2);
      expect(qcashier.screen52.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01905_element_check_01882 **********\n\n");
    });

    test('01906_element_check_01883', () async {
      print("\n********** テスト実行：01906_element_check_01883 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen52.sound_led3;
      print(qcashier.screen52.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen52.sound_led3 = testData1;
      print(qcashier.screen52.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen52.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen52.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen52.sound_led3 = testData2;
      print(qcashier.screen52.sound_led3);
      expect(qcashier.screen52.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen52.sound_led3 = defalut;
      print(qcashier.screen52.sound_led3);
      expect(qcashier.screen52.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen52.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01906_element_check_01883 **********\n\n");
    });

    test('01907_element_check_01884', () async {
      print("\n********** テスト実行：01907_element_check_01884 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.title;
      print(qcashier.screen53.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.title = testData1s;
      print(qcashier.screen53.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.title = testData2s;
      print(qcashier.screen53.title);
      expect(qcashier.screen53.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.title = defalut;
      print(qcashier.screen53.title);
      expect(qcashier.screen53.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01907_element_check_01884 **********\n\n");
    });

    test('01908_element_check_01885', () async {
      print("\n********** テスト実行：01908_element_check_01885 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.msg1;
      print(qcashier.screen53.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.msg1 = testData1s;
      print(qcashier.screen53.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.msg1 = testData2s;
      print(qcashier.screen53.msg1);
      expect(qcashier.screen53.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.msg1 = defalut;
      print(qcashier.screen53.msg1);
      expect(qcashier.screen53.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01908_element_check_01885 **********\n\n");
    });

    test('01909_element_check_01886', () async {
      print("\n********** テスト実行：01909_element_check_01886 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.msg2;
      print(qcashier.screen53.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.msg2 = testData1s;
      print(qcashier.screen53.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.msg2 = testData2s;
      print(qcashier.screen53.msg2);
      expect(qcashier.screen53.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.msg2 = defalut;
      print(qcashier.screen53.msg2);
      expect(qcashier.screen53.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01909_element_check_01886 **********\n\n");
    });

    test('01910_element_check_01887', () async {
      print("\n********** テスト実行：01910_element_check_01887 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.msg1_size;
      print(qcashier.screen53.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.msg1_size = testData1;
      print(qcashier.screen53.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.msg1_size = testData2;
      print(qcashier.screen53.msg1_size);
      expect(qcashier.screen53.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.msg1_size = defalut;
      print(qcashier.screen53.msg1_size);
      expect(qcashier.screen53.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01910_element_check_01887 **********\n\n");
    });

    test('01911_element_check_01888', () async {
      print("\n********** テスト実行：01911_element_check_01888 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.msg2_size;
      print(qcashier.screen53.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.msg2_size = testData1;
      print(qcashier.screen53.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.msg2_size = testData2;
      print(qcashier.screen53.msg2_size);
      expect(qcashier.screen53.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.msg2_size = defalut;
      print(qcashier.screen53.msg2_size);
      expect(qcashier.screen53.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01911_element_check_01888 **********\n\n");
    });

    test('01912_element_check_01889', () async {
      print("\n********** テスト実行：01912_element_check_01889 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.sound1;
      print(qcashier.screen53.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.sound1 = testData1;
      print(qcashier.screen53.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.sound1 = testData2;
      print(qcashier.screen53.sound1);
      expect(qcashier.screen53.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.sound1 = defalut;
      print(qcashier.screen53.sound1);
      expect(qcashier.screen53.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01912_element_check_01889 **********\n\n");
    });

    test('01913_element_check_01890', () async {
      print("\n********** テスト実行：01913_element_check_01890 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.sound2;
      print(qcashier.screen53.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.sound2 = testData1;
      print(qcashier.screen53.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.sound2 = testData2;
      print(qcashier.screen53.sound2);
      expect(qcashier.screen53.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.sound2 = defalut;
      print(qcashier.screen53.sound2);
      expect(qcashier.screen53.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01913_element_check_01890 **********\n\n");
    });

    test('01914_element_check_01891', () async {
      print("\n********** テスト実行：01914_element_check_01891 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.sound3;
      print(qcashier.screen53.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.sound3 = testData1;
      print(qcashier.screen53.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.sound3 = testData2;
      print(qcashier.screen53.sound3);
      expect(qcashier.screen53.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.sound3 = defalut;
      print(qcashier.screen53.sound3);
      expect(qcashier.screen53.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01914_element_check_01891 **********\n\n");
    });

    test('01915_element_check_01892', () async {
      print("\n********** テスト実行：01915_element_check_01892 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.snd_timer;
      print(qcashier.screen53.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.snd_timer = testData1;
      print(qcashier.screen53.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.snd_timer = testData2;
      print(qcashier.screen53.snd_timer);
      expect(qcashier.screen53.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.snd_timer = defalut;
      print(qcashier.screen53.snd_timer);
      expect(qcashier.screen53.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01915_element_check_01892 **********\n\n");
    });

    test('01916_element_check_01893', () async {
      print("\n********** テスト実行：01916_element_check_01893 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.timer1;
      print(qcashier.screen53.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.timer1 = testData1;
      print(qcashier.screen53.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.timer1 = testData2;
      print(qcashier.screen53.timer1);
      expect(qcashier.screen53.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.timer1 = defalut;
      print(qcashier.screen53.timer1);
      expect(qcashier.screen53.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01916_element_check_01893 **********\n\n");
    });

    test('01917_element_check_01894', () async {
      print("\n********** テスト実行：01917_element_check_01894 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.timer2;
      print(qcashier.screen53.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.timer2 = testData1;
      print(qcashier.screen53.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.timer2 = testData2;
      print(qcashier.screen53.timer2);
      expect(qcashier.screen53.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.timer2 = defalut;
      print(qcashier.screen53.timer2);
      expect(qcashier.screen53.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01917_element_check_01894 **********\n\n");
    });

    test('01918_element_check_01895', () async {
      print("\n********** テスト実行：01918_element_check_01895 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.timer3;
      print(qcashier.screen53.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.timer3 = testData1;
      print(qcashier.screen53.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.timer3 = testData2;
      print(qcashier.screen53.timer3);
      expect(qcashier.screen53.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.timer3 = defalut;
      print(qcashier.screen53.timer3);
      expect(qcashier.screen53.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01918_element_check_01895 **********\n\n");
    });

    test('01919_element_check_01896', () async {
      print("\n********** テスト実行：01919_element_check_01896 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.dsp_flg1;
      print(qcashier.screen53.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.dsp_flg1 = testData1;
      print(qcashier.screen53.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.dsp_flg1 = testData2;
      print(qcashier.screen53.dsp_flg1);
      expect(qcashier.screen53.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.dsp_flg1 = defalut;
      print(qcashier.screen53.dsp_flg1);
      expect(qcashier.screen53.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01919_element_check_01896 **********\n\n");
    });

    test('01920_element_check_01897', () async {
      print("\n********** テスト実行：01920_element_check_01897 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.dsp_flg2;
      print(qcashier.screen53.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.dsp_flg2 = testData1;
      print(qcashier.screen53.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.dsp_flg2 = testData2;
      print(qcashier.screen53.dsp_flg2);
      expect(qcashier.screen53.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.dsp_flg2 = defalut;
      print(qcashier.screen53.dsp_flg2);
      expect(qcashier.screen53.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01920_element_check_01897 **********\n\n");
    });

    test('01921_element_check_01898', () async {
      print("\n********** テスト実行：01921_element_check_01898 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.movie01_ext;
      print(qcashier.screen53.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.movie01_ext = testData1;
      print(qcashier.screen53.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.movie01_ext = testData2;
      print(qcashier.screen53.movie01_ext);
      expect(qcashier.screen53.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.movie01_ext = defalut;
      print(qcashier.screen53.movie01_ext);
      expect(qcashier.screen53.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01921_element_check_01898 **********\n\n");
    });

    test('01922_element_check_01899', () async {
      print("\n********** テスト実行：01922_element_check_01899 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.movie02_ext;
      print(qcashier.screen53.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.movie02_ext = testData1;
      print(qcashier.screen53.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.movie02_ext = testData2;
      print(qcashier.screen53.movie02_ext);
      expect(qcashier.screen53.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.movie02_ext = defalut;
      print(qcashier.screen53.movie02_ext);
      expect(qcashier.screen53.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01922_element_check_01899 **********\n\n");
    });

    test('01923_element_check_01900', () async {
      print("\n********** テスト実行：01923_element_check_01900 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.movie03_ext;
      print(qcashier.screen53.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.movie03_ext = testData1;
      print(qcashier.screen53.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.movie03_ext = testData2;
      print(qcashier.screen53.movie03_ext);
      expect(qcashier.screen53.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.movie03_ext = defalut;
      print(qcashier.screen53.movie03_ext);
      expect(qcashier.screen53.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01923_element_check_01900 **********\n\n");
    });

    test('01924_element_check_01901', () async {
      print("\n********** テスト実行：01924_element_check_01901 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.movie04_ext;
      print(qcashier.screen53.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.movie04_ext = testData1;
      print(qcashier.screen53.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.movie04_ext = testData2;
      print(qcashier.screen53.movie04_ext);
      expect(qcashier.screen53.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.movie04_ext = defalut;
      print(qcashier.screen53.movie04_ext);
      expect(qcashier.screen53.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01924_element_check_01901 **********\n\n");
    });

    test('01925_element_check_01902', () async {
      print("\n********** テスト実行：01925_element_check_01902 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line_title;
      print(qcashier.screen53.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line_title = testData1s;
      print(qcashier.screen53.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line_title = testData2s;
      print(qcashier.screen53.line_title);
      expect(qcashier.screen53.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line_title = defalut;
      print(qcashier.screen53.line_title);
      expect(qcashier.screen53.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01925_element_check_01902 **********\n\n");
    });

    test('01926_element_check_01903', () async {
      print("\n********** テスト実行：01926_element_check_01903 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line_title_ex;
      print(qcashier.screen53.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line_title_ex = testData1s;
      print(qcashier.screen53.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line_title_ex = testData2s;
      print(qcashier.screen53.line_title_ex);
      expect(qcashier.screen53.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line_title_ex = defalut;
      print(qcashier.screen53.line_title_ex);
      expect(qcashier.screen53.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01926_element_check_01903 **********\n\n");
    });

    test('01927_element_check_01904', () async {
      print("\n********** テスト実行：01927_element_check_01904 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line1;
      print(qcashier.screen53.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line1 = testData1s;
      print(qcashier.screen53.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line1 = testData2s;
      print(qcashier.screen53.line1);
      expect(qcashier.screen53.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line1 = defalut;
      print(qcashier.screen53.line1);
      expect(qcashier.screen53.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01927_element_check_01904 **********\n\n");
    });

    test('01928_element_check_01905', () async {
      print("\n********** テスト実行：01928_element_check_01905 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line2;
      print(qcashier.screen53.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line2 = testData1s;
      print(qcashier.screen53.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line2 = testData2s;
      print(qcashier.screen53.line2);
      expect(qcashier.screen53.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line2 = defalut;
      print(qcashier.screen53.line2);
      expect(qcashier.screen53.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01928_element_check_01905 **********\n\n");
    });

    test('01929_element_check_01906', () async {
      print("\n********** テスト実行：01929_element_check_01906 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line3;
      print(qcashier.screen53.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line3 = testData1s;
      print(qcashier.screen53.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line3 = testData2s;
      print(qcashier.screen53.line3);
      expect(qcashier.screen53.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line3 = defalut;
      print(qcashier.screen53.line3);
      expect(qcashier.screen53.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01929_element_check_01906 **********\n\n");
    });

    test('01930_element_check_01907', () async {
      print("\n********** テスト実行：01930_element_check_01907 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line4;
      print(qcashier.screen53.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line4 = testData1s;
      print(qcashier.screen53.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line4 = testData2s;
      print(qcashier.screen53.line4);
      expect(qcashier.screen53.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line4 = defalut;
      print(qcashier.screen53.line4);
      expect(qcashier.screen53.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01930_element_check_01907 **********\n\n");
    });

    test('01931_element_check_01908', () async {
      print("\n********** テスト実行：01931_element_check_01908 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line1_ex;
      print(qcashier.screen53.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line1_ex = testData1s;
      print(qcashier.screen53.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line1_ex = testData2s;
      print(qcashier.screen53.line1_ex);
      expect(qcashier.screen53.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line1_ex = defalut;
      print(qcashier.screen53.line1_ex);
      expect(qcashier.screen53.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01931_element_check_01908 **********\n\n");
    });

    test('01932_element_check_01909', () async {
      print("\n********** テスト実行：01932_element_check_01909 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line2_ex;
      print(qcashier.screen53.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line2_ex = testData1s;
      print(qcashier.screen53.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line2_ex = testData2s;
      print(qcashier.screen53.line2_ex);
      expect(qcashier.screen53.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line2_ex = defalut;
      print(qcashier.screen53.line2_ex);
      expect(qcashier.screen53.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01932_element_check_01909 **********\n\n");
    });

    test('01933_element_check_01910', () async {
      print("\n********** テスト実行：01933_element_check_01910 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line3_ex;
      print(qcashier.screen53.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line3_ex = testData1s;
      print(qcashier.screen53.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line3_ex = testData2s;
      print(qcashier.screen53.line3_ex);
      expect(qcashier.screen53.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line3_ex = defalut;
      print(qcashier.screen53.line3_ex);
      expect(qcashier.screen53.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01933_element_check_01910 **********\n\n");
    });

    test('01934_element_check_01911', () async {
      print("\n********** テスト実行：01934_element_check_01911 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.line4_ex;
      print(qcashier.screen53.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.line4_ex = testData1s;
      print(qcashier.screen53.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.line4_ex = testData2s;
      print(qcashier.screen53.line4_ex);
      expect(qcashier.screen53.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.line4_ex = defalut;
      print(qcashier.screen53.line4_ex);
      expect(qcashier.screen53.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01934_element_check_01911 **********\n\n");
    });

    test('01935_element_check_01912', () async {
      print("\n********** テスト実行：01935_element_check_01912 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.sound_led1;
      print(qcashier.screen53.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.sound_led1 = testData1;
      print(qcashier.screen53.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.sound_led1 = testData2;
      print(qcashier.screen53.sound_led1);
      expect(qcashier.screen53.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.sound_led1 = defalut;
      print(qcashier.screen53.sound_led1);
      expect(qcashier.screen53.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01935_element_check_01912 **********\n\n");
    });

    test('01936_element_check_01913', () async {
      print("\n********** テスト実行：01936_element_check_01913 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.sound_led2;
      print(qcashier.screen53.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.sound_led2 = testData1;
      print(qcashier.screen53.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.sound_led2 = testData2;
      print(qcashier.screen53.sound_led2);
      expect(qcashier.screen53.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.sound_led2 = defalut;
      print(qcashier.screen53.sound_led2);
      expect(qcashier.screen53.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01936_element_check_01913 **********\n\n");
    });

    test('01937_element_check_01914', () async {
      print("\n********** テスト実行：01937_element_check_01914 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen53.sound_led3;
      print(qcashier.screen53.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen53.sound_led3 = testData1;
      print(qcashier.screen53.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen53.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen53.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen53.sound_led3 = testData2;
      print(qcashier.screen53.sound_led3);
      expect(qcashier.screen53.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen53.sound_led3 = defalut;
      print(qcashier.screen53.sound_led3);
      expect(qcashier.screen53.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen53.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01937_element_check_01914 **********\n\n");
    });

    test('01938_element_check_01915', () async {
      print("\n********** テスト実行：01938_element_check_01915 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.title;
      print(qcashier.screen54.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.title = testData1s;
      print(qcashier.screen54.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.title = testData2s;
      print(qcashier.screen54.title);
      expect(qcashier.screen54.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.title = defalut;
      print(qcashier.screen54.title);
      expect(qcashier.screen54.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01938_element_check_01915 **********\n\n");
    });

    test('01939_element_check_01916', () async {
      print("\n********** テスト実行：01939_element_check_01916 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.msg1;
      print(qcashier.screen54.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.msg1 = testData1s;
      print(qcashier.screen54.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.msg1 = testData2s;
      print(qcashier.screen54.msg1);
      expect(qcashier.screen54.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.msg1 = defalut;
      print(qcashier.screen54.msg1);
      expect(qcashier.screen54.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01939_element_check_01916 **********\n\n");
    });

    test('01940_element_check_01917', () async {
      print("\n********** テスト実行：01940_element_check_01917 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.msg2;
      print(qcashier.screen54.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.msg2 = testData1s;
      print(qcashier.screen54.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.msg2 = testData2s;
      print(qcashier.screen54.msg2);
      expect(qcashier.screen54.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.msg2 = defalut;
      print(qcashier.screen54.msg2);
      expect(qcashier.screen54.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01940_element_check_01917 **********\n\n");
    });

    test('01941_element_check_01918', () async {
      print("\n********** テスト実行：01941_element_check_01918 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.msg1_size;
      print(qcashier.screen54.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.msg1_size = testData1;
      print(qcashier.screen54.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.msg1_size = testData2;
      print(qcashier.screen54.msg1_size);
      expect(qcashier.screen54.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.msg1_size = defalut;
      print(qcashier.screen54.msg1_size);
      expect(qcashier.screen54.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01941_element_check_01918 **********\n\n");
    });

    test('01942_element_check_01919', () async {
      print("\n********** テスト実行：01942_element_check_01919 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.msg2_size;
      print(qcashier.screen54.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.msg2_size = testData1;
      print(qcashier.screen54.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.msg2_size = testData2;
      print(qcashier.screen54.msg2_size);
      expect(qcashier.screen54.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.msg2_size = defalut;
      print(qcashier.screen54.msg2_size);
      expect(qcashier.screen54.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01942_element_check_01919 **********\n\n");
    });

    test('01943_element_check_01920', () async {
      print("\n********** テスト実行：01943_element_check_01920 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.sound1;
      print(qcashier.screen54.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.sound1 = testData1;
      print(qcashier.screen54.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.sound1 = testData2;
      print(qcashier.screen54.sound1);
      expect(qcashier.screen54.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.sound1 = defalut;
      print(qcashier.screen54.sound1);
      expect(qcashier.screen54.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01943_element_check_01920 **********\n\n");
    });

    test('01944_element_check_01921', () async {
      print("\n********** テスト実行：01944_element_check_01921 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.sound2;
      print(qcashier.screen54.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.sound2 = testData1;
      print(qcashier.screen54.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.sound2 = testData2;
      print(qcashier.screen54.sound2);
      expect(qcashier.screen54.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.sound2 = defalut;
      print(qcashier.screen54.sound2);
      expect(qcashier.screen54.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01944_element_check_01921 **********\n\n");
    });

    test('01945_element_check_01922', () async {
      print("\n********** テスト実行：01945_element_check_01922 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.sound3;
      print(qcashier.screen54.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.sound3 = testData1s;
      print(qcashier.screen54.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.sound3 = testData2s;
      print(qcashier.screen54.sound3);
      expect(qcashier.screen54.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.sound3 = defalut;
      print(qcashier.screen54.sound3);
      expect(qcashier.screen54.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01945_element_check_01922 **********\n\n");
    });

    test('01946_element_check_01923', () async {
      print("\n********** テスト実行：01946_element_check_01923 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.snd_timer;
      print(qcashier.screen54.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.snd_timer = testData1;
      print(qcashier.screen54.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.snd_timer = testData2;
      print(qcashier.screen54.snd_timer);
      expect(qcashier.screen54.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.snd_timer = defalut;
      print(qcashier.screen54.snd_timer);
      expect(qcashier.screen54.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01946_element_check_01923 **********\n\n");
    });

    test('01947_element_check_01924', () async {
      print("\n********** テスト実行：01947_element_check_01924 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.timer1;
      print(qcashier.screen54.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.timer1 = testData1;
      print(qcashier.screen54.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.timer1 = testData2;
      print(qcashier.screen54.timer1);
      expect(qcashier.screen54.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.timer1 = defalut;
      print(qcashier.screen54.timer1);
      expect(qcashier.screen54.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01947_element_check_01924 **********\n\n");
    });

    test('01948_element_check_01925', () async {
      print("\n********** テスト実行：01948_element_check_01925 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.timer2;
      print(qcashier.screen54.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.timer2 = testData1;
      print(qcashier.screen54.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.timer2 = testData2;
      print(qcashier.screen54.timer2);
      expect(qcashier.screen54.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.timer2 = defalut;
      print(qcashier.screen54.timer2);
      expect(qcashier.screen54.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01948_element_check_01925 **********\n\n");
    });

    test('01949_element_check_01926', () async {
      print("\n********** テスト実行：01949_element_check_01926 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.timer3;
      print(qcashier.screen54.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.timer3 = testData1;
      print(qcashier.screen54.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.timer3 = testData2;
      print(qcashier.screen54.timer3);
      expect(qcashier.screen54.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.timer3 = defalut;
      print(qcashier.screen54.timer3);
      expect(qcashier.screen54.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01949_element_check_01926 **********\n\n");
    });

    test('01950_element_check_01927', () async {
      print("\n********** テスト実行：01950_element_check_01927 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.dsp_flg1;
      print(qcashier.screen54.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.dsp_flg1 = testData1;
      print(qcashier.screen54.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.dsp_flg1 = testData2;
      print(qcashier.screen54.dsp_flg1);
      expect(qcashier.screen54.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.dsp_flg1 = defalut;
      print(qcashier.screen54.dsp_flg1);
      expect(qcashier.screen54.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01950_element_check_01927 **********\n\n");
    });

    test('01951_element_check_01928', () async {
      print("\n********** テスト実行：01951_element_check_01928 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.dsp_flg2;
      print(qcashier.screen54.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.dsp_flg2 = testData1;
      print(qcashier.screen54.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.dsp_flg2 = testData2;
      print(qcashier.screen54.dsp_flg2);
      expect(qcashier.screen54.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.dsp_flg2 = defalut;
      print(qcashier.screen54.dsp_flg2);
      expect(qcashier.screen54.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01951_element_check_01928 **********\n\n");
    });

    test('01952_element_check_01929', () async {
      print("\n********** テスト実行：01952_element_check_01929 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.movie01_ext;
      print(qcashier.screen54.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.movie01_ext = testData1;
      print(qcashier.screen54.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.movie01_ext = testData2;
      print(qcashier.screen54.movie01_ext);
      expect(qcashier.screen54.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.movie01_ext = defalut;
      print(qcashier.screen54.movie01_ext);
      expect(qcashier.screen54.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01952_element_check_01929 **********\n\n");
    });

    test('01953_element_check_01930', () async {
      print("\n********** テスト実行：01953_element_check_01930 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.movie02_ext;
      print(qcashier.screen54.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.movie02_ext = testData1;
      print(qcashier.screen54.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.movie02_ext = testData2;
      print(qcashier.screen54.movie02_ext);
      expect(qcashier.screen54.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.movie02_ext = defalut;
      print(qcashier.screen54.movie02_ext);
      expect(qcashier.screen54.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01953_element_check_01930 **********\n\n");
    });

    test('01954_element_check_01931', () async {
      print("\n********** テスト実行：01954_element_check_01931 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.movie03_ext;
      print(qcashier.screen54.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.movie03_ext = testData1;
      print(qcashier.screen54.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.movie03_ext = testData2;
      print(qcashier.screen54.movie03_ext);
      expect(qcashier.screen54.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.movie03_ext = defalut;
      print(qcashier.screen54.movie03_ext);
      expect(qcashier.screen54.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01954_element_check_01931 **********\n\n");
    });

    test('01955_element_check_01932', () async {
      print("\n********** テスト実行：01955_element_check_01932 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.movie04_ext;
      print(qcashier.screen54.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.movie04_ext = testData1;
      print(qcashier.screen54.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.movie04_ext = testData2;
      print(qcashier.screen54.movie04_ext);
      expect(qcashier.screen54.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.movie04_ext = defalut;
      print(qcashier.screen54.movie04_ext);
      expect(qcashier.screen54.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01955_element_check_01932 **********\n\n");
    });

    test('01956_element_check_01933', () async {
      print("\n********** テスト実行：01956_element_check_01933 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line_title;
      print(qcashier.screen54.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line_title = testData1s;
      print(qcashier.screen54.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line_title = testData2s;
      print(qcashier.screen54.line_title);
      expect(qcashier.screen54.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line_title = defalut;
      print(qcashier.screen54.line_title);
      expect(qcashier.screen54.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01956_element_check_01933 **********\n\n");
    });

    test('01957_element_check_01934', () async {
      print("\n********** テスト実行：01957_element_check_01934 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line_title_ex;
      print(qcashier.screen54.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line_title_ex = testData1s;
      print(qcashier.screen54.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line_title_ex = testData2s;
      print(qcashier.screen54.line_title_ex);
      expect(qcashier.screen54.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line_title_ex = defalut;
      print(qcashier.screen54.line_title_ex);
      expect(qcashier.screen54.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01957_element_check_01934 **********\n\n");
    });

    test('01958_element_check_01935', () async {
      print("\n********** テスト実行：01958_element_check_01935 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line1;
      print(qcashier.screen54.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line1 = testData1s;
      print(qcashier.screen54.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line1 = testData2s;
      print(qcashier.screen54.line1);
      expect(qcashier.screen54.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line1 = defalut;
      print(qcashier.screen54.line1);
      expect(qcashier.screen54.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01958_element_check_01935 **********\n\n");
    });

    test('01959_element_check_01936', () async {
      print("\n********** テスト実行：01959_element_check_01936 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line2;
      print(qcashier.screen54.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line2 = testData1s;
      print(qcashier.screen54.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line2 = testData2s;
      print(qcashier.screen54.line2);
      expect(qcashier.screen54.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line2 = defalut;
      print(qcashier.screen54.line2);
      expect(qcashier.screen54.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01959_element_check_01936 **********\n\n");
    });

    test('01960_element_check_01937', () async {
      print("\n********** テスト実行：01960_element_check_01937 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line3;
      print(qcashier.screen54.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line3 = testData1s;
      print(qcashier.screen54.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line3 = testData2s;
      print(qcashier.screen54.line3);
      expect(qcashier.screen54.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line3 = defalut;
      print(qcashier.screen54.line3);
      expect(qcashier.screen54.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01960_element_check_01937 **********\n\n");
    });

    test('01961_element_check_01938', () async {
      print("\n********** テスト実行：01961_element_check_01938 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line4;
      print(qcashier.screen54.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line4 = testData1s;
      print(qcashier.screen54.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line4 = testData2s;
      print(qcashier.screen54.line4);
      expect(qcashier.screen54.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line4 = defalut;
      print(qcashier.screen54.line4);
      expect(qcashier.screen54.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01961_element_check_01938 **********\n\n");
    });

    test('01962_element_check_01939', () async {
      print("\n********** テスト実行：01962_element_check_01939 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line1_ex;
      print(qcashier.screen54.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line1_ex = testData1s;
      print(qcashier.screen54.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line1_ex = testData2s;
      print(qcashier.screen54.line1_ex);
      expect(qcashier.screen54.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line1_ex = defalut;
      print(qcashier.screen54.line1_ex);
      expect(qcashier.screen54.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01962_element_check_01939 **********\n\n");
    });

    test('01963_element_check_01940', () async {
      print("\n********** テスト実行：01963_element_check_01940 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line2_ex;
      print(qcashier.screen54.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line2_ex = testData1s;
      print(qcashier.screen54.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line2_ex = testData2s;
      print(qcashier.screen54.line2_ex);
      expect(qcashier.screen54.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line2_ex = defalut;
      print(qcashier.screen54.line2_ex);
      expect(qcashier.screen54.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01963_element_check_01940 **********\n\n");
    });

    test('01964_element_check_01941', () async {
      print("\n********** テスト実行：01964_element_check_01941 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line3_ex;
      print(qcashier.screen54.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line3_ex = testData1s;
      print(qcashier.screen54.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line3_ex = testData2s;
      print(qcashier.screen54.line3_ex);
      expect(qcashier.screen54.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line3_ex = defalut;
      print(qcashier.screen54.line3_ex);
      expect(qcashier.screen54.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01964_element_check_01941 **********\n\n");
    });

    test('01965_element_check_01942', () async {
      print("\n********** テスト実行：01965_element_check_01942 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.line4_ex;
      print(qcashier.screen54.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.line4_ex = testData1s;
      print(qcashier.screen54.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.line4_ex = testData2s;
      print(qcashier.screen54.line4_ex);
      expect(qcashier.screen54.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.line4_ex = defalut;
      print(qcashier.screen54.line4_ex);
      expect(qcashier.screen54.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01965_element_check_01942 **********\n\n");
    });

    test('01966_element_check_01943', () async {
      print("\n********** テスト実行：01966_element_check_01943 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.sound_led1;
      print(qcashier.screen54.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.sound_led1 = testData1;
      print(qcashier.screen54.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.sound_led1 = testData2;
      print(qcashier.screen54.sound_led1);
      expect(qcashier.screen54.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.sound_led1 = defalut;
      print(qcashier.screen54.sound_led1);
      expect(qcashier.screen54.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01966_element_check_01943 **********\n\n");
    });

    test('01967_element_check_01944', () async {
      print("\n********** テスト実行：01967_element_check_01944 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.sound_led2;
      print(qcashier.screen54.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.sound_led2 = testData1;
      print(qcashier.screen54.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.sound_led2 = testData2;
      print(qcashier.screen54.sound_led2);
      expect(qcashier.screen54.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.sound_led2 = defalut;
      print(qcashier.screen54.sound_led2);
      expect(qcashier.screen54.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01967_element_check_01944 **********\n\n");
    });

    test('01968_element_check_01945', () async {
      print("\n********** テスト実行：01968_element_check_01945 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen54.sound_led3;
      print(qcashier.screen54.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen54.sound_led3 = testData1s;
      print(qcashier.screen54.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen54.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen54.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen54.sound_led3 = testData2s;
      print(qcashier.screen54.sound_led3);
      expect(qcashier.screen54.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen54.sound_led3 = defalut;
      print(qcashier.screen54.sound_led3);
      expect(qcashier.screen54.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen54.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01968_element_check_01945 **********\n\n");
    });

    test('01969_element_check_01946', () async {
      print("\n********** テスト実行：01969_element_check_01946 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.title;
      print(qcashier.screen55.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.title = testData1s;
      print(qcashier.screen55.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.title = testData2s;
      print(qcashier.screen55.title);
      expect(qcashier.screen55.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.title = defalut;
      print(qcashier.screen55.title);
      expect(qcashier.screen55.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01969_element_check_01946 **********\n\n");
    });

    test('01970_element_check_01947', () async {
      print("\n********** テスト実行：01970_element_check_01947 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.msg1;
      print(qcashier.screen55.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.msg1 = testData1s;
      print(qcashier.screen55.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.msg1 = testData2s;
      print(qcashier.screen55.msg1);
      expect(qcashier.screen55.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.msg1 = defalut;
      print(qcashier.screen55.msg1);
      expect(qcashier.screen55.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01970_element_check_01947 **********\n\n");
    });

    test('01971_element_check_01948', () async {
      print("\n********** テスト実行：01971_element_check_01948 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.msg2;
      print(qcashier.screen55.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.msg2 = testData1s;
      print(qcashier.screen55.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.msg2 = testData2s;
      print(qcashier.screen55.msg2);
      expect(qcashier.screen55.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.msg2 = defalut;
      print(qcashier.screen55.msg2);
      expect(qcashier.screen55.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01971_element_check_01948 **********\n\n");
    });

    test('01972_element_check_01949', () async {
      print("\n********** テスト実行：01972_element_check_01949 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.msg1_size;
      print(qcashier.screen55.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.msg1_size = testData1;
      print(qcashier.screen55.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.msg1_size = testData2;
      print(qcashier.screen55.msg1_size);
      expect(qcashier.screen55.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.msg1_size = defalut;
      print(qcashier.screen55.msg1_size);
      expect(qcashier.screen55.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01972_element_check_01949 **********\n\n");
    });

    test('01973_element_check_01950', () async {
      print("\n********** テスト実行：01973_element_check_01950 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.msg2_size;
      print(qcashier.screen55.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.msg2_size = testData1;
      print(qcashier.screen55.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.msg2_size = testData2;
      print(qcashier.screen55.msg2_size);
      expect(qcashier.screen55.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.msg2_size = defalut;
      print(qcashier.screen55.msg2_size);
      expect(qcashier.screen55.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01973_element_check_01950 **********\n\n");
    });

    test('01974_element_check_01951', () async {
      print("\n********** テスト実行：01974_element_check_01951 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.sound1;
      print(qcashier.screen55.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.sound1 = testData1;
      print(qcashier.screen55.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.sound1 = testData2;
      print(qcashier.screen55.sound1);
      expect(qcashier.screen55.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.sound1 = defalut;
      print(qcashier.screen55.sound1);
      expect(qcashier.screen55.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01974_element_check_01951 **********\n\n");
    });

    test('01975_element_check_01952', () async {
      print("\n********** テスト実行：01975_element_check_01952 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.sound2;
      print(qcashier.screen55.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.sound2 = testData1;
      print(qcashier.screen55.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.sound2 = testData2;
      print(qcashier.screen55.sound2);
      expect(qcashier.screen55.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.sound2 = defalut;
      print(qcashier.screen55.sound2);
      expect(qcashier.screen55.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01975_element_check_01952 **********\n\n");
    });

    test('01976_element_check_01953', () async {
      print("\n********** テスト実行：01976_element_check_01953 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.sound3;
      print(qcashier.screen55.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.sound3 = testData1;
      print(qcashier.screen55.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.sound3 = testData2;
      print(qcashier.screen55.sound3);
      expect(qcashier.screen55.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.sound3 = defalut;
      print(qcashier.screen55.sound3);
      expect(qcashier.screen55.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01976_element_check_01953 **********\n\n");
    });

    test('01977_element_check_01954', () async {
      print("\n********** テスト実行：01977_element_check_01954 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.snd_timer;
      print(qcashier.screen55.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.snd_timer = testData1;
      print(qcashier.screen55.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.snd_timer = testData2;
      print(qcashier.screen55.snd_timer);
      expect(qcashier.screen55.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.snd_timer = defalut;
      print(qcashier.screen55.snd_timer);
      expect(qcashier.screen55.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01977_element_check_01954 **********\n\n");
    });

    test('01978_element_check_01955', () async {
      print("\n********** テスト実行：01978_element_check_01955 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.timer1;
      print(qcashier.screen55.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.timer1 = testData1;
      print(qcashier.screen55.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.timer1 = testData2;
      print(qcashier.screen55.timer1);
      expect(qcashier.screen55.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.timer1 = defalut;
      print(qcashier.screen55.timer1);
      expect(qcashier.screen55.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01978_element_check_01955 **********\n\n");
    });

    test('01979_element_check_01956', () async {
      print("\n********** テスト実行：01979_element_check_01956 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.timer2;
      print(qcashier.screen55.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.timer2 = testData1;
      print(qcashier.screen55.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.timer2 = testData2;
      print(qcashier.screen55.timer2);
      expect(qcashier.screen55.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.timer2 = defalut;
      print(qcashier.screen55.timer2);
      expect(qcashier.screen55.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01979_element_check_01956 **********\n\n");
    });

    test('01980_element_check_01957', () async {
      print("\n********** テスト実行：01980_element_check_01957 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.timer3;
      print(qcashier.screen55.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.timer3 = testData1;
      print(qcashier.screen55.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.timer3 = testData2;
      print(qcashier.screen55.timer3);
      expect(qcashier.screen55.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.timer3 = defalut;
      print(qcashier.screen55.timer3);
      expect(qcashier.screen55.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01980_element_check_01957 **********\n\n");
    });

    test('01981_element_check_01958', () async {
      print("\n********** テスト実行：01981_element_check_01958 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.dsp_flg1;
      print(qcashier.screen55.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.dsp_flg1 = testData1;
      print(qcashier.screen55.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.dsp_flg1 = testData2;
      print(qcashier.screen55.dsp_flg1);
      expect(qcashier.screen55.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.dsp_flg1 = defalut;
      print(qcashier.screen55.dsp_flg1);
      expect(qcashier.screen55.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01981_element_check_01958 **********\n\n");
    });

    test('01982_element_check_01959', () async {
      print("\n********** テスト実行：01982_element_check_01959 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.dsp_flg2;
      print(qcashier.screen55.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.dsp_flg2 = testData1;
      print(qcashier.screen55.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.dsp_flg2 = testData2;
      print(qcashier.screen55.dsp_flg2);
      expect(qcashier.screen55.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.dsp_flg2 = defalut;
      print(qcashier.screen55.dsp_flg2);
      expect(qcashier.screen55.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01982_element_check_01959 **********\n\n");
    });

    test('01983_element_check_01960', () async {
      print("\n********** テスト実行：01983_element_check_01960 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.movie01_ext;
      print(qcashier.screen55.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.movie01_ext = testData1;
      print(qcashier.screen55.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.movie01_ext = testData2;
      print(qcashier.screen55.movie01_ext);
      expect(qcashier.screen55.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.movie01_ext = defalut;
      print(qcashier.screen55.movie01_ext);
      expect(qcashier.screen55.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01983_element_check_01960 **********\n\n");
    });

    test('01984_element_check_01961', () async {
      print("\n********** テスト実行：01984_element_check_01961 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.movie02_ext;
      print(qcashier.screen55.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.movie02_ext = testData1;
      print(qcashier.screen55.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.movie02_ext = testData2;
      print(qcashier.screen55.movie02_ext);
      expect(qcashier.screen55.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.movie02_ext = defalut;
      print(qcashier.screen55.movie02_ext);
      expect(qcashier.screen55.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01984_element_check_01961 **********\n\n");
    });

    test('01985_element_check_01962', () async {
      print("\n********** テスト実行：01985_element_check_01962 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.movie03_ext;
      print(qcashier.screen55.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.movie03_ext = testData1;
      print(qcashier.screen55.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.movie03_ext = testData2;
      print(qcashier.screen55.movie03_ext);
      expect(qcashier.screen55.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.movie03_ext = defalut;
      print(qcashier.screen55.movie03_ext);
      expect(qcashier.screen55.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01985_element_check_01962 **********\n\n");
    });

    test('01986_element_check_01963', () async {
      print("\n********** テスト実行：01986_element_check_01963 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.movie04_ext;
      print(qcashier.screen55.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.movie04_ext = testData1;
      print(qcashier.screen55.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.movie04_ext = testData2;
      print(qcashier.screen55.movie04_ext);
      expect(qcashier.screen55.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.movie04_ext = defalut;
      print(qcashier.screen55.movie04_ext);
      expect(qcashier.screen55.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01986_element_check_01963 **********\n\n");
    });

    test('01987_element_check_01964', () async {
      print("\n********** テスト実行：01987_element_check_01964 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line_title;
      print(qcashier.screen55.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line_title = testData1s;
      print(qcashier.screen55.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line_title = testData2s;
      print(qcashier.screen55.line_title);
      expect(qcashier.screen55.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line_title = defalut;
      print(qcashier.screen55.line_title);
      expect(qcashier.screen55.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01987_element_check_01964 **********\n\n");
    });

    test('01988_element_check_01965', () async {
      print("\n********** テスト実行：01988_element_check_01965 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line_title_ex;
      print(qcashier.screen55.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line_title_ex = testData1s;
      print(qcashier.screen55.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line_title_ex = testData2s;
      print(qcashier.screen55.line_title_ex);
      expect(qcashier.screen55.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line_title_ex = defalut;
      print(qcashier.screen55.line_title_ex);
      expect(qcashier.screen55.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01988_element_check_01965 **********\n\n");
    });

    test('01989_element_check_01966', () async {
      print("\n********** テスト実行：01989_element_check_01966 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line1;
      print(qcashier.screen55.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line1 = testData1s;
      print(qcashier.screen55.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line1 = testData2s;
      print(qcashier.screen55.line1);
      expect(qcashier.screen55.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line1 = defalut;
      print(qcashier.screen55.line1);
      expect(qcashier.screen55.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01989_element_check_01966 **********\n\n");
    });

    test('01990_element_check_01967', () async {
      print("\n********** テスト実行：01990_element_check_01967 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line2;
      print(qcashier.screen55.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line2 = testData1s;
      print(qcashier.screen55.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line2 = testData2s;
      print(qcashier.screen55.line2);
      expect(qcashier.screen55.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line2 = defalut;
      print(qcashier.screen55.line2);
      expect(qcashier.screen55.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01990_element_check_01967 **********\n\n");
    });

    test('01991_element_check_01968', () async {
      print("\n********** テスト実行：01991_element_check_01968 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line3;
      print(qcashier.screen55.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line3 = testData1s;
      print(qcashier.screen55.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line3 = testData2s;
      print(qcashier.screen55.line3);
      expect(qcashier.screen55.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line3 = defalut;
      print(qcashier.screen55.line3);
      expect(qcashier.screen55.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01991_element_check_01968 **********\n\n");
    });

    test('01992_element_check_01969', () async {
      print("\n********** テスト実行：01992_element_check_01969 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line4;
      print(qcashier.screen55.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line4 = testData1s;
      print(qcashier.screen55.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line4 = testData2s;
      print(qcashier.screen55.line4);
      expect(qcashier.screen55.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line4 = defalut;
      print(qcashier.screen55.line4);
      expect(qcashier.screen55.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01992_element_check_01969 **********\n\n");
    });

    test('01993_element_check_01970', () async {
      print("\n********** テスト実行：01993_element_check_01970 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line1_ex;
      print(qcashier.screen55.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line1_ex = testData1s;
      print(qcashier.screen55.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line1_ex = testData2s;
      print(qcashier.screen55.line1_ex);
      expect(qcashier.screen55.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line1_ex = defalut;
      print(qcashier.screen55.line1_ex);
      expect(qcashier.screen55.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01993_element_check_01970 **********\n\n");
    });

    test('01994_element_check_01971', () async {
      print("\n********** テスト実行：01994_element_check_01971 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line2_ex;
      print(qcashier.screen55.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line2_ex = testData1s;
      print(qcashier.screen55.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line2_ex = testData2s;
      print(qcashier.screen55.line2_ex);
      expect(qcashier.screen55.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line2_ex = defalut;
      print(qcashier.screen55.line2_ex);
      expect(qcashier.screen55.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01994_element_check_01971 **********\n\n");
    });

    test('01995_element_check_01972', () async {
      print("\n********** テスト実行：01995_element_check_01972 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line3_ex;
      print(qcashier.screen55.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line3_ex = testData1s;
      print(qcashier.screen55.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line3_ex = testData2s;
      print(qcashier.screen55.line3_ex);
      expect(qcashier.screen55.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line3_ex = defalut;
      print(qcashier.screen55.line3_ex);
      expect(qcashier.screen55.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01995_element_check_01972 **********\n\n");
    });

    test('01996_element_check_01973', () async {
      print("\n********** テスト実行：01996_element_check_01973 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.line4_ex;
      print(qcashier.screen55.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.line4_ex = testData1s;
      print(qcashier.screen55.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.line4_ex = testData2s;
      print(qcashier.screen55.line4_ex);
      expect(qcashier.screen55.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.line4_ex = defalut;
      print(qcashier.screen55.line4_ex);
      expect(qcashier.screen55.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01996_element_check_01973 **********\n\n");
    });

    test('01997_element_check_01974', () async {
      print("\n********** テスト実行：01997_element_check_01974 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.sound_led1;
      print(qcashier.screen55.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.sound_led1 = testData1;
      print(qcashier.screen55.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.sound_led1 = testData2;
      print(qcashier.screen55.sound_led1);
      expect(qcashier.screen55.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.sound_led1 = defalut;
      print(qcashier.screen55.sound_led1);
      expect(qcashier.screen55.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01997_element_check_01974 **********\n\n");
    });

    test('01998_element_check_01975', () async {
      print("\n********** テスト実行：01998_element_check_01975 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.sound_led2;
      print(qcashier.screen55.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.sound_led2 = testData1;
      print(qcashier.screen55.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.sound_led2 = testData2;
      print(qcashier.screen55.sound_led2);
      expect(qcashier.screen55.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.sound_led2 = defalut;
      print(qcashier.screen55.sound_led2);
      expect(qcashier.screen55.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01998_element_check_01975 **********\n\n");
    });

    test('01999_element_check_01976', () async {
      print("\n********** テスト実行：01999_element_check_01976 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen55.sound_led3;
      print(qcashier.screen55.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen55.sound_led3 = testData1;
      print(qcashier.screen55.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen55.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen55.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen55.sound_led3 = testData2;
      print(qcashier.screen55.sound_led3);
      expect(qcashier.screen55.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen55.sound_led3 = defalut;
      print(qcashier.screen55.sound_led3);
      expect(qcashier.screen55.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen55.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01999_element_check_01976 **********\n\n");
    });

    test('02000_element_check_01977', () async {
      print("\n********** テスト実行：02000_element_check_01977 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.title;
      print(qcashier.screen56.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.title = testData1s;
      print(qcashier.screen56.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.title = testData2s;
      print(qcashier.screen56.title);
      expect(qcashier.screen56.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.title = defalut;
      print(qcashier.screen56.title);
      expect(qcashier.screen56.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02000_element_check_01977 **********\n\n");
    });

    test('02001_element_check_01978', () async {
      print("\n********** テスト実行：02001_element_check_01978 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.msg1;
      print(qcashier.screen56.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.msg1 = testData1s;
      print(qcashier.screen56.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.msg1 = testData2s;
      print(qcashier.screen56.msg1);
      expect(qcashier.screen56.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.msg1 = defalut;
      print(qcashier.screen56.msg1);
      expect(qcashier.screen56.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02001_element_check_01978 **********\n\n");
    });

    test('02002_element_check_01979', () async {
      print("\n********** テスト実行：02002_element_check_01979 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.msg2;
      print(qcashier.screen56.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.msg2 = testData1s;
      print(qcashier.screen56.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.msg2 = testData2s;
      print(qcashier.screen56.msg2);
      expect(qcashier.screen56.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.msg2 = defalut;
      print(qcashier.screen56.msg2);
      expect(qcashier.screen56.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02002_element_check_01979 **********\n\n");
    });

    test('02003_element_check_01980', () async {
      print("\n********** テスト実行：02003_element_check_01980 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.msg1_size;
      print(qcashier.screen56.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.msg1_size = testData1;
      print(qcashier.screen56.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.msg1_size = testData2;
      print(qcashier.screen56.msg1_size);
      expect(qcashier.screen56.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.msg1_size = defalut;
      print(qcashier.screen56.msg1_size);
      expect(qcashier.screen56.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02003_element_check_01980 **********\n\n");
    });

    test('02004_element_check_01981', () async {
      print("\n********** テスト実行：02004_element_check_01981 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.msg2_size;
      print(qcashier.screen56.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.msg2_size = testData1;
      print(qcashier.screen56.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.msg2_size = testData2;
      print(qcashier.screen56.msg2_size);
      expect(qcashier.screen56.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.msg2_size = defalut;
      print(qcashier.screen56.msg2_size);
      expect(qcashier.screen56.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02004_element_check_01981 **********\n\n");
    });

    test('02005_element_check_01982', () async {
      print("\n********** テスト実行：02005_element_check_01982 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.sound1;
      print(qcashier.screen56.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.sound1 = testData1;
      print(qcashier.screen56.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.sound1 = testData2;
      print(qcashier.screen56.sound1);
      expect(qcashier.screen56.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.sound1 = defalut;
      print(qcashier.screen56.sound1);
      expect(qcashier.screen56.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02005_element_check_01982 **********\n\n");
    });

    test('02006_element_check_01983', () async {
      print("\n********** テスト実行：02006_element_check_01983 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.sound2;
      print(qcashier.screen56.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.sound2 = testData1;
      print(qcashier.screen56.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.sound2 = testData2;
      print(qcashier.screen56.sound2);
      expect(qcashier.screen56.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.sound2 = defalut;
      print(qcashier.screen56.sound2);
      expect(qcashier.screen56.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02006_element_check_01983 **********\n\n");
    });
  });
}

void allPropatyCheckInit(QcashierJsonFile test)
{
  expect(test.common.item_disp, 0);
  expect(test.common.logo_typ, 0);
  expect(test.common.disp_typ, 0);
  expect(test.common.spdsp_use, 0);
  expect(test.common.fix_max, 0);
  expect(test.common.fix_typ, 0);
  expect(test.common.ptn_max, 0);
  expect(test.common.ptn_typ, 0);
  expect(test.common.spe_typ, 0);
  expect(test.common.chara_typ, 0);
  expect(test.common.language_typ, 0);
  expect(test.common.page_max, 0);
  expect(test.common.typ_max, 0);
  expect(test.common.pay_typ1, 0);
  expect(test.common.pay_typ2, 0);
  expect(test.common.pay_typ3, 0);
  expect(test.common.pay_typ4, 0);
  expect(test.common.pay_typ5, 0);
  expect(test.common.pay_typ6, 0);
  expect(test.common.pay_typ7, 0);
  expect(test.common.pay_typ8, 0);
  expect(test.common.demo_disp_btn, 0);
  expect(test.common.rcpt_limit_time, 0);
  expect(test.common.next_rcpt_limit, 0);
  expect(test.common.auto_susdsp, 0);
  expect(test.common.susdsp_time, 0);
  expect(test.common.rfm_receipt, 0);
  expect(test.common.signp_typ, 0);
  expect(test.common.select_typ, 0);
  expect(test.common.select_str_msg, 0);
  expect(test.common.regbag1_plucd, 0);
  expect(test.common.regbag2_plucd, 0);
  expect(test.common.regbag3_plucd, 0);
  expect(test.common.autocash_operation, 0);
  expect(test.common.autocash_equaltime, 0);
  expect(test.common.autocash_overtime, 0);
  expect(test.common.fip_disp, 0);
  expect(test.common.crdtcard_gettimer, 0);
  expect(test.common.charge_plucd1, 0);
  expect(test.common.charge_plucd2, 0);
  expect(test.common.charge_plucd3, 0);
  expect(test.common.charge_plucd4, 0);
  expect(test.common.charge_plucd5, 0);
  expect(test.common.charge_plucd6, 0);
  expect(test.common.crdtcard_warntime, 0);
  expect(test.common.acx_recalc_btn, 0);
  expect(test.common.lang_chg_max, 0);
  expect(test.common.lang_select1, 0);
  expect(test.common.lang_select2, 0);
  expect(test.common.lang_select3, 0);
  expect(test.common.lang_select4, 0);
  expect(test.common.lang_select5, 0);
  expect(test.common.lang_select6, 0);
  expect(test.common.lang_select7, 0);
  expect(test.common.lang_select8, 0);
  expect(test.common.autocrdt_operation, 0);
  expect(test.common.autocrdt_time, 0);
  expect(test.common.preca_charge_only, 0);
  expect(test.common.preca_charge_plucd1, 0);
  expect(test.common.preca_charge_plucd2, 0);
  expect(test.common.preca_charge_plucd3, 0);
  expect(test.common.preca_charge_plucd4, 0);
  expect(test.common.preca_charge_plucd5, 0);
  expect(test.common.preca_charge_plucd6, 0);
  expect(test.common.select_dsp_ccin, 0);
  expect(test.common.cancel_btn_dsp, 0);
  expect(test.common.clinic_mode, 0);
  expect(test.common.clinic_receipt, 0);
  expect(test.common.clinic_greeting, 0);
  expect(test.common.clinic_greeting_sound, 0);
  expect(test.common.fin_btn_chg, 0);
  expect(test.common.startdsp_btn_single, 0);
  expect(test.common.startdsp_scan_enable, 0);
  expect(test.common.pay_typ9, 0);
  expect(test.common.pay_typ10, 0);
  expect(test.common.pay_typ11, 0);
  expect(test.common.pay_typ12, 0);
  expect(test.common.pay_typ13, 0);
  expect(test.common.pay_typ14, 0);
  expect(test.common.pay_typ15, 0);
  expect(test.common.pay_typ16, 0);
  expect(test.common.verifone_nfc_crdt, 0);
  expect(test.common.hs_dualdisp_chk, 0);
  expect(test.common.back_btn_dsp, 0);
  expect(test.common.NoOperationWarning, 0);
  expect(test.common.NoOperationSignpaul_time, 0);
  expect(test.common.NoOperationVoicesound_time, 0);
  expect(test.common.NoOperationSound, 0);
  expect(test.common.NoOperationPayWarning, 0);
  expect(test.common.cin_dsp_wait, 0);
  expect(test.common.clinic_auto_stl, 0);
  expect(test.common.acracb_stlmode, 0);
  expect(test.common.apbf_regbag_plucd, 0);
  expect(test.common.apbf_dlgdisp_time, 0);
  expect(test.common.mybag_plu_point_add, 0);
  expect(test.common.video_jpqr_scanner, 0);
  expect(test.common.chg_warn_timer_use, 0);
  expect(test.common.cin_cnl_btn_show, 0);
  expect(test.common.regs_use_class, 0);
  expect(test.common.sg_eatin_chk, 0);
  expect(test.common.selfmode1_auto_cancel, 0);
  expect(test.common.point_use_unit, 0);
  expect(test.common.selfmode1_wav_qty, 0);
  expect(test.common.age_chk_notice, 0);
  expect(test.common.verifone_nfc_repika_crdt, 0);
  expect(test.common.regbag1_default, 0);
  expect(test.common.regbag2_default, 0);
  expect(test.common.regbag3_default, 0);
  expect(test.common.regbag_timing, 0);
  expect(test.common.regbag_disp_back_btn, 0);
  expect(test.common.self_disp_preca_ref, 0);
  expect(test.common.fs_cashless_dsp_change, 0);
  expect(test.common.hs_fs_scanning_guide, 0);
  expect(test.common.hs_fs_twice_read_stop, 0);
  expect(test.common.cashin_sound, 0);
  expect(test.common.sound_change_flg, 0);
  expect(test.common.hs_fs_auto_preset_dsp, 0);
  expect(test.common.cashless_dsp_return, 0);
  expect(test.common.regbag_screen_scan_input, 0);
  expect(test.common.g3_pay_btn_blink, 0);
  expect(test.common.g3_employee_call_btn, 0);
  expect(test.common.g3_pay_slct_btn_ptn, 0);
  expect(test.common.video_jpqr_sidescanner, 0);
  expect(test.common.mente_itemlist_type, 0);
  expect(test.common.rg_self_noteplu_perm, 0);
  expect(test.common.g3_self_itemlist_scrvoid, 0);
  expect(test.common.g3_fs_presetgroup_custom, 0);
  expect(test.common.g3_fs_presetgroup_btn1, 0);
  expect(test.common.g3_fs_presetgroup_btn2, 0);
  expect(test.common.g3_fs_presetgroup_btn3, 0);
  expect(test.common.g3_fs_presetgroup_btn4, 0);
  expect(test.common.g3_fs_presetgroup_btn5, 0);
  expect(test.common.g3_fs_presetgroup_btn6, 0);
  expect(test.common.g3_fs_presetgroup_btn7, 0);
  expect(test.common.g3_fs_presetgroup_btn8, 0);
  expect(test.common.callBuzzer_sound_change_flg, 0);
  expect(test.common.top_map_display, 0);
  expect(test.common.start_payselect_display, 0);
  expect(test.common.idle_signp_state, 0);
  expect(test.common.jpqr_paybtn_image, 0);
  expect(test.common.vega_credit_forget_chk, 0);
  expect(test.common.cash_only_setting, 0);
  expect(test.common.cash_only_border, 0);
  expect(test.chg_info.chg_info, 0);
  expect(test.chg_info.chg_5000, 0);
  expect(test.chg_info.chg_2000, 0);
  expect(test.chg_info.chg_1000, 0);
  expect(test.chg_info.chg_500, 0);
  expect(test.chg_info.chg_100, 0);
  expect(test.chg_info.chg_50, 0);
  expect(test.chg_info.chg_10, 0);
  expect(test.chg_info.chg_5, 0);
  expect(test.chg_info.chg_1, 0);
  expect(test.chg_info.chg_info_full_chk, 0);
  expect(test.chg_info.chg_signp_full_chk, 0);
  expect(test.period.spr_str, 0);
  expect(test.period.spr_end, 0);
  expect(test.period.sum_str, 0);
  expect(test.period.sum_end, 0);
  expect(test.period.aut_str, 0);
  expect(test.period.aut_end, 0);
  expect(test.period.win1_str, 0);
  expect(test.period.win1_end, 0);
  expect(test.period.win2_str, 0);
  expect(test.period.win2_end, 0);
  expect(test.period.sp1_flg, 0);
  expect(test.period.sp2_flg, 0);
  expect(test.period.sp3_flg, 0);
  expect(test.period.sp4_flg, 0);
  expect(test.period.sp5_flg, 0);
  expect(test.period.sp6_flg, 0);
  expect(test.period.sp7_flg, 0);
  expect(test.period.sp8_flg, 0);
  expect(test.period.sp9_flg, 0);
  expect(test.period.sp10_flg, 0);
  expect(test.period.sp11_flg, 0);
  expect(test.period.sp12_flg, 0);
  expect(test.period.sp13_flg, 0);
  expect(test.period.sp14_flg, 0);
  expect(test.period.sp15_flg, 0);
  expect(test.period.sp16_flg, 0);
  expect(test.period.sp17_flg, 0);
  expect(test.period.sp18_flg, 0);
  expect(test.period.sp1_str, 0);
  expect(test.period.sp1_end, 0);
  expect(test.period.sp2_str, "");
  expect(test.period.sp2_end, "");
  expect(test.period.sp3_str, 0);
  expect(test.period.sp3_end, 0);
  expect(test.period.sp4_str, 0);
  expect(test.period.sp4_end, 0);
  expect(test.period.sp5_str, "");
  expect(test.period.sp5_end, "");
  expect(test.period.sp6_str, 0);
  expect(test.period.sp6_end, 0);
  expect(test.period.sp7_str, 0);
  expect(test.period.sp7_end, 0);
  expect(test.period.sp8_str, "");
  expect(test.period.sp8_end, "");
  expect(test.period.sp9_str, "");
  expect(test.period.sp9_end, "");
  expect(test.period.sp10_str, 0);
  expect(test.period.sp10_end, 0);
  expect(test.period.sp11_str, "");
  expect(test.period.sp11_end, "");
  expect(test.period.sp12_str, 0);
  expect(test.period.sp12_end, 0);
  expect(test.period.sp13_str, "");
  expect(test.period.sp13_end, "");
  expect(test.period.sp14_str, 0);
  expect(test.period.sp14_end, 0);
  expect(test.period.sp15_str, "");
  expect(test.period.sp15_end, "");
  expect(test.period.sp16_str, 0);
  expect(test.period.sp16_end, 0);
  expect(test.period.sp17_str, 0);
  expect(test.period.sp17_end, 0);
  expect(test.period.sp18_str, "");
  expect(test.period.sp18_end, "");
  expect(test.period.spr_time1, 0);
  expect(test.period.spr_time2, 0);
  expect(test.period.sum_time1, 0);
  expect(test.period.sum_time2, 0);
  expect(test.period.aut_time1, 0);
  expect(test.period.aut_time2, 0);
  expect(test.period.win_time1, 0);
  expect(test.period.win_time2, 0);
  expect(test.screen0.title, "");
  expect(test.screen0.msg1, "");
  expect(test.screen0.msg2, "");
  expect(test.screen0.msg1_size, 0);
  expect(test.screen0.msg2_size, 0);
  expect(test.screen0.sound1, 0);
  expect(test.screen0.sound2, 0);
  expect(test.screen0.sound3, 0);
  expect(test.screen0.snd_timer, 0);
  expect(test.screen0.timer1, 0);
  expect(test.screen0.timer2, 0);
  expect(test.screen0.timer3, 0);
  expect(test.screen0.dsp_flg1, 0);
  expect(test.screen0.dsp_flg2, 0);
  expect(test.screen0.movie01_ext, 0);
  expect(test.screen0.movie02_ext, 0);
  expect(test.screen0.movie03_ext, 0);
  expect(test.screen0.movie04_ext, 0);
  expect(test.screen0.line_title, "");
  expect(test.screen0.line_title_ex, "");
  expect(test.screen0.line1, "");
  expect(test.screen0.line2, "");
  expect(test.screen0.line3, "");
  expect(test.screen0.line4, "");
  expect(test.screen0.line1_ex, "");
  expect(test.screen0.line2_ex, "");
  expect(test.screen0.line3_ex, "");
  expect(test.screen0.line4_ex, "");
  expect(test.screen0.sound_led1, 0);
  expect(test.screen0.sound_led2, 0);
  expect(test.screen0.sound_led3, 0);
  expect(test.screen1.title, "");
  expect(test.screen1.msg1, "");
  expect(test.screen1.msg2, "");
  expect(test.screen1.msg1_size, 0);
  expect(test.screen1.msg2_size, 0);
  expect(test.screen1.sound1, 0);
  expect(test.screen1.sound2, 0);
  expect(test.screen1.sound3, 0);
  expect(test.screen1.snd_timer, 0);
  expect(test.screen1.timer1, 0);
  expect(test.screen1.timer2, 0);
  expect(test.screen1.timer3, 0);
  expect(test.screen1.dsp_flg1, 0);
  expect(test.screen1.dsp_flg2, 0);
  expect(test.screen1.movie01_ext, 0);
  expect(test.screen1.movie02_ext, 0);
  expect(test.screen1.movie03_ext, 0);
  expect(test.screen1.movie04_ext, 0);
  expect(test.screen1.line_title, "");
  expect(test.screen1.line_title_ex, "");
  expect(test.screen1.line1, "");
  expect(test.screen1.line2, "");
  expect(test.screen1.line3, "");
  expect(test.screen1.line4, "");
  expect(test.screen1.line1_ex, "");
  expect(test.screen1.line2_ex, "");
  expect(test.screen1.line3_ex, "");
  expect(test.screen1.line4_ex, "");
  expect(test.screen1.sound_led1, 0);
  expect(test.screen1.sound_led2, 0);
  expect(test.screen1.sound_led3, 0);
  expect(test.screen2.title, "");
  expect(test.screen2.msg1, "");
  expect(test.screen2.msg2, "");
  expect(test.screen2.msg1_size, 0);
  expect(test.screen2.msg2_size, 0);
  expect(test.screen2.sound1, 0);
  expect(test.screen2.sound2, 0);
  expect(test.screen2.sound3, 0);
  expect(test.screen2.snd_timer, 0);
  expect(test.screen2.timer1, 0);
  expect(test.screen2.timer2, 0);
  expect(test.screen2.timer3, 0);
  expect(test.screen2.dsp_flg1, 0);
  expect(test.screen2.dsp_flg2, 0);
  expect(test.screen2.movie01_ext, 0);
  expect(test.screen2.movie02_ext, 0);
  expect(test.screen2.movie03_ext, 0);
  expect(test.screen2.movie04_ext, 0);
  expect(test.screen2.line_title, "");
  expect(test.screen2.line_title_ex, "");
  expect(test.screen2.line1, "");
  expect(test.screen2.line2, "");
  expect(test.screen2.line3, "");
  expect(test.screen2.line4, "");
  expect(test.screen2.line1_ex, "");
  expect(test.screen2.line2_ex, "");
  expect(test.screen2.line3_ex, "");
  expect(test.screen2.line4_ex, "");
  expect(test.screen2.sound_led1, 0);
  expect(test.screen2.sound_led2, 0);
  expect(test.screen2.sound_led3, 0);
  expect(test.screen3.title, "");
  expect(test.screen3.msg1, "");
  expect(test.screen3.msg2, "");
  expect(test.screen3.msg1_size, 0);
  expect(test.screen3.msg2_size, 0);
  expect(test.screen3.sound1, 0);
  expect(test.screen3.sound2, 0);
  expect(test.screen3.sound3, 0);
  expect(test.screen3.snd_timer, 0);
  expect(test.screen3.timer1, 0);
  expect(test.screen3.timer2, 0);
  expect(test.screen3.timer3, 0);
  expect(test.screen3.dsp_flg1, 0);
  expect(test.screen3.dsp_flg2, 0);
  expect(test.screen3.movie01_ext, 0);
  expect(test.screen3.movie02_ext, 0);
  expect(test.screen3.movie03_ext, 0);
  expect(test.screen3.movie04_ext, 0);
  expect(test.screen3.line_title, "");
  expect(test.screen3.line_title_ex, "");
  expect(test.screen3.line1, "");
  expect(test.screen3.line2, "");
  expect(test.screen3.line3, "");
  expect(test.screen3.line4, "");
  expect(test.screen3.line1_ex, "");
  expect(test.screen3.line2_ex, "");
  expect(test.screen3.line3_ex, "");
  expect(test.screen3.line4_ex, "");
  expect(test.screen3.sound_led1, 0);
  expect(test.screen3.sound_led2, 0);
  expect(test.screen3.sound_led3, 0);
  expect(test.screen4.title, "");
  expect(test.screen4.msg1, "");
  expect(test.screen4.msg2, "");
  expect(test.screen4.msg1_size, 0);
  expect(test.screen4.msg2_size, 0);
  expect(test.screen4.sound1, 0);
  expect(test.screen4.sound2, 0);
  expect(test.screen4.sound3, 0);
  expect(test.screen4.snd_timer, 0);
  expect(test.screen4.timer1, 0);
  expect(test.screen4.timer2, 0);
  expect(test.screen4.timer3, 0);
  expect(test.screen4.dsp_flg1, 0);
  expect(test.screen4.dsp_flg2, 0);
  expect(test.screen4.movie01_ext, 0);
  expect(test.screen4.movie02_ext, 0);
  expect(test.screen4.movie03_ext, 0);
  expect(test.screen4.movie04_ext, 0);
  expect(test.screen4.line_title, "");
  expect(test.screen4.line_title_ex, "");
  expect(test.screen4.line1, "");
  expect(test.screen4.line2, "");
  expect(test.screen4.line3, "");
  expect(test.screen4.line4, "");
  expect(test.screen4.line1_ex, "");
  expect(test.screen4.line2_ex, "");
  expect(test.screen4.line3_ex, "");
  expect(test.screen4.line4_ex, "");
  expect(test.screen4.sound_led1, 0);
  expect(test.screen4.sound_led2, 0);
  expect(test.screen4.sound_led3, 0);
  expect(test.screen5.title, "");
  expect(test.screen5.msg1, "");
  expect(test.screen5.msg2, "");
  expect(test.screen5.msg1_size, 0);
  expect(test.screen5.msg2_size, 0);
  expect(test.screen5.sound1, 0);
  expect(test.screen5.sound2, "");
  expect(test.screen5.sound3, 0);
  expect(test.screen5.snd_timer, 0);
  expect(test.screen5.timer1, 0);
  expect(test.screen5.timer2, 0);
  expect(test.screen5.timer3, 0);
  expect(test.screen5.dsp_flg1, 0);
  expect(test.screen5.dsp_flg2, 0);
  expect(test.screen5.movie01_ext, 0);
  expect(test.screen5.movie02_ext, 0);
  expect(test.screen5.movie03_ext, 0);
  expect(test.screen5.movie04_ext, 0);
  expect(test.screen5.line_title, "");
  expect(test.screen5.line_title_ex, "");
  expect(test.screen5.line1, "");
  expect(test.screen5.line2, "");
  expect(test.screen5.line3, "");
  expect(test.screen5.line4, "");
  expect(test.screen5.line1_ex, "");
  expect(test.screen5.line2_ex, "");
  expect(test.screen5.line3_ex, "");
  expect(test.screen5.line4_ex, "");
  expect(test.screen5.sound_led1, 0);
  expect(test.screen5.sound_led2, 0);
  expect(test.screen5.sound_led3, 0);
  expect(test.screen6.title, "");
  expect(test.screen6.msg1, "");
  expect(test.screen6.msg2, "");
  expect(test.screen6.msg1_size, 0);
  expect(test.screen6.msg2_size, 0);
  expect(test.screen6.sound1, 0);
  expect(test.screen6.sound2, 0);
  expect(test.screen6.sound3, 0);
  expect(test.screen6.snd_timer, 0);
  expect(test.screen6.timer1, 0);
  expect(test.screen6.timer2, 0);
  expect(test.screen6.timer3, 0);
  expect(test.screen6.dsp_flg1, 0);
  expect(test.screen6.dsp_flg2, 0);
  expect(test.screen6.movie01_ext, 0);
  expect(test.screen6.movie02_ext, 0);
  expect(test.screen6.movie03_ext, 0);
  expect(test.screen6.movie04_ext, 0);
  expect(test.screen6.line_title, "");
  expect(test.screen6.line_title_ex, "");
  expect(test.screen6.line1, "");
  expect(test.screen6.line2, "");
  expect(test.screen6.line3, "");
  expect(test.screen6.line4, "");
  expect(test.screen6.line1_ex, "");
  expect(test.screen6.line2_ex, "");
  expect(test.screen6.line3_ex, "");
  expect(test.screen6.line4_ex, "");
  expect(test.screen6.sound_led1, 0);
  expect(test.screen6.sound_led2, 0);
  expect(test.screen6.sound_led3, 0);
  expect(test.screen6.line2_1, "");
  expect(test.screen6.line2_2, "");
  expect(test.screen6.line2_3, "");
  expect(test.screen6.line2_4, "");
  expect(test.screen7.title, "");
  expect(test.screen7.msg1, "");
  expect(test.screen7.msg2, "");
  expect(test.screen7.msg1_size, 0);
  expect(test.screen7.msg2_size, 0);
  expect(test.screen7.sound1, 0);
  expect(test.screen7.sound2, 0);
  expect(test.screen7.sound3, 0);
  expect(test.screen7.snd_timer, 0);
  expect(test.screen7.timer1, 0);
  expect(test.screen7.timer2, 0);
  expect(test.screen7.timer3, 0);
  expect(test.screen7.dsp_flg1, 0);
  expect(test.screen7.dsp_flg2, 0);
  expect(test.screen7.movie01_ext, 0);
  expect(test.screen7.movie02_ext, 0);
  expect(test.screen7.movie03_ext, 0);
  expect(test.screen7.movie04_ext, 0);
  expect(test.screen7.line_title, "");
  expect(test.screen7.line_title_ex, "");
  expect(test.screen7.line1, "");
  expect(test.screen7.line2, "");
  expect(test.screen7.line3, "");
  expect(test.screen7.line4, "");
  expect(test.screen7.line1_ex, "");
  expect(test.screen7.line2_ex, "");
  expect(test.screen7.line3_ex, "");
  expect(test.screen7.line4_ex, "");
  expect(test.screen7.sound_led1, 0);
  expect(test.screen7.sound_led2, 0);
  expect(test.screen7.sound_led3, 0);
  expect(test.screen8.title, "");
  expect(test.screen8.msg1, "");
  expect(test.screen8.msg2, "");
  expect(test.screen8.msg1_size, 0);
  expect(test.screen8.msg2_size, 0);
  expect(test.screen8.sound1, 0);
  expect(test.screen8.sound2, 0);
  expect(test.screen8.sound3, 0);
  expect(test.screen8.snd_timer, 0);
  expect(test.screen8.timer1, 0);
  expect(test.screen8.timer2, 0);
  expect(test.screen8.timer3, 0);
  expect(test.screen8.dsp_flg1, 0);
  expect(test.screen8.dsp_flg2, 0);
  expect(test.screen8.movie01_ext, 0);
  expect(test.screen8.movie02_ext, 0);
  expect(test.screen8.movie03_ext, 0);
  expect(test.screen8.movie04_ext, 0);
  expect(test.screen8.line_title, "");
  expect(test.screen8.line_title_ex, "");
  expect(test.screen8.line1, "");
  expect(test.screen8.line2, "");
  expect(test.screen8.line3, "");
  expect(test.screen8.line4, "");
  expect(test.screen8.line1_ex, "");
  expect(test.screen8.line2_ex, "");
  expect(test.screen8.line3_ex, "");
  expect(test.screen8.line4_ex, "");
  expect(test.screen8.sound_led1, 0);
  expect(test.screen8.sound_led2, 0);
  expect(test.screen8.sound_led3, 0);
  expect(test.screen9.title, "");
  expect(test.screen9.msg1, "");
  expect(test.screen9.msg2, "");
  expect(test.screen9.msg1_size, 0);
  expect(test.screen9.msg2_size, 0);
  expect(test.screen9.sound1, 0);
  expect(test.screen9.sound2, 0);
  expect(test.screen9.sound3, 0);
  expect(test.screen9.snd_timer, 0);
  expect(test.screen9.timer1, 0);
  expect(test.screen9.timer2, 0);
  expect(test.screen9.timer3, 0);
  expect(test.screen9.dsp_flg1, 0);
  expect(test.screen9.dsp_flg2, 0);
  expect(test.screen9.movie01_ext, 0);
  expect(test.screen9.movie02_ext, 0);
  expect(test.screen9.movie03_ext, 0);
  expect(test.screen9.movie04_ext, 0);
  expect(test.screen9.line_title, "");
  expect(test.screen9.line_title_ex, "");
  expect(test.screen9.line1, "");
  expect(test.screen9.line2, "");
  expect(test.screen9.line3, "");
  expect(test.screen9.line4, "");
  expect(test.screen9.line1_ex, "");
  expect(test.screen9.line2_ex, "");
  expect(test.screen9.line3_ex, "");
  expect(test.screen9.line4_ex, "");
  expect(test.screen9.sound_led1, 0);
  expect(test.screen9.sound_led2, 0);
  expect(test.screen9.sound_led3, 0);
  expect(test.screen10.title, "");
  expect(test.screen10.msg1, "");
  expect(test.screen10.msg2, "");
  expect(test.screen10.msg1_size, 0);
  expect(test.screen10.msg2_size, 0);
  expect(test.screen10.sound1, 0);
  expect(test.screen10.sound2, 0);
  expect(test.screen10.sound3, 0);
  expect(test.screen10.snd_timer, 0);
  expect(test.screen10.timer1, 0);
  expect(test.screen10.timer2, 0);
  expect(test.screen10.timer3, 0);
  expect(test.screen10.dsp_flg1, 0);
  expect(test.screen10.dsp_flg2, 0);
  expect(test.screen10.movie01_ext, 0);
  expect(test.screen10.movie02_ext, 0);
  expect(test.screen10.movie03_ext, 0);
  expect(test.screen10.movie04_ext, 0);
  expect(test.screen10.line_title, "");
  expect(test.screen10.line_title_ex, "");
  expect(test.screen10.line1, "");
  expect(test.screen10.line2, "");
  expect(test.screen10.line3, "");
  expect(test.screen10.line4, "");
  expect(test.screen10.line1_ex, "");
  expect(test.screen10.line2_ex, "");
  expect(test.screen10.line3_ex, "");
  expect(test.screen10.line4_ex, "");
  expect(test.screen10.sound_led1, 0);
  expect(test.screen10.sound_led2, 0);
  expect(test.screen10.sound_led3, 0);
  expect(test.screen11.title, "");
  expect(test.screen11.msg1, "");
  expect(test.screen11.msg2, "");
  expect(test.screen11.msg1_size, 0);
  expect(test.screen11.msg2_size, 0);
  expect(test.screen11.sound1, 0);
  expect(test.screen11.sound2, 0);
  expect(test.screen11.sound3, 0);
  expect(test.screen11.snd_timer, 0);
  expect(test.screen11.timer1, 0);
  expect(test.screen11.timer2, 0);
  expect(test.screen11.timer3, 0);
  expect(test.screen11.dsp_flg1, 0);
  expect(test.screen11.dsp_flg2, 0);
  expect(test.screen11.movie01_ext, 0);
  expect(test.screen11.movie02_ext, 0);
  expect(test.screen11.movie03_ext, 0);
  expect(test.screen11.movie04_ext, 0);
  expect(test.screen11.line_title, "");
  expect(test.screen11.line_title_ex, "");
  expect(test.screen11.line1, "");
  expect(test.screen11.line2, "");
  expect(test.screen11.line3, "");
  expect(test.screen11.line4, "");
  expect(test.screen11.line1_ex, "");
  expect(test.screen11.line2_ex, "");
  expect(test.screen11.line3_ex, "");
  expect(test.screen11.line4_ex, "");
  expect(test.screen11.sound_led1, 0);
  expect(test.screen11.sound_led2, 0);
  expect(test.screen11.sound_led3, 0);
  expect(test.screen12.title, "");
  expect(test.screen12.msg1, "");
  expect(test.screen12.msg2, "");
  expect(test.screen12.msg1_size, 0);
  expect(test.screen12.msg2_size, 0);
  expect(test.screen12.sound1, 0);
  expect(test.screen12.sound2, 0);
  expect(test.screen12.sound3, 0);
  expect(test.screen12.snd_timer, 0);
  expect(test.screen12.timer1, 0);
  expect(test.screen12.timer2, 0);
  expect(test.screen12.timer3, 0);
  expect(test.screen12.dsp_flg1, 0);
  expect(test.screen12.dsp_flg2, 0);
  expect(test.screen12.movie01_ext, 0);
  expect(test.screen12.movie02_ext, 0);
  expect(test.screen12.movie03_ext, 0);
  expect(test.screen12.movie04_ext, 0);
  expect(test.screen12.line_title, "");
  expect(test.screen12.line_title_ex, "");
  expect(test.screen12.line1, "");
  expect(test.screen12.line2, "");
  expect(test.screen12.line3, "");
  expect(test.screen12.line4, "");
  expect(test.screen12.line1_ex, "");
  expect(test.screen12.line2_ex, "");
  expect(test.screen12.line3_ex, "");
  expect(test.screen12.line4_ex, "");
  expect(test.screen12.sound_led1, 0);
  expect(test.screen12.sound_led2, 0);
  expect(test.screen12.sound_led3, 0);
  expect(test.screen13.title, "");
  expect(test.screen13.msg1, "");
  expect(test.screen13.msg2, "");
  expect(test.screen13.msg1_size, 0);
  expect(test.screen13.msg2_size, 0);
  expect(test.screen13.sound1, 0);
  expect(test.screen13.sound2, 0);
  expect(test.screen13.sound3, 0);
  expect(test.screen13.snd_timer, 0);
  expect(test.screen13.timer1, 0);
  expect(test.screen13.timer2, 0);
  expect(test.screen13.timer3, 0);
  expect(test.screen13.dsp_flg1, 0);
  expect(test.screen13.dsp_flg2, 0);
  expect(test.screen13.movie01_ext, 0);
  expect(test.screen13.movie02_ext, 0);
  expect(test.screen13.movie03_ext, 0);
  expect(test.screen13.movie04_ext, 0);
  expect(test.screen13.line_title, "");
  expect(test.screen13.line_title_ex, "");
  expect(test.screen13.line1, "");
  expect(test.screen13.line2, "");
  expect(test.screen13.line3, "");
  expect(test.screen13.line4, "");
  expect(test.screen13.line1_ex, "");
  expect(test.screen13.line2_ex, "");
  expect(test.screen13.line3_ex, "");
  expect(test.screen13.line4_ex, "");
  expect(test.screen13.sound_led1, 0);
  expect(test.screen13.sound_led2, 0);
  expect(test.screen13.sound_led3, 0);
  expect(test.screen14.title, "");
  expect(test.screen14.msg1, "");
  expect(test.screen14.msg2, "");
  expect(test.screen14.msg1_size, 0);
  expect(test.screen14.msg2_size, 0);
  expect(test.screen14.sound1, 0);
  expect(test.screen14.sound2, 0);
  expect(test.screen14.sound3, 0);
  expect(test.screen14.snd_timer, 0);
  expect(test.screen14.timer1, 0);
  expect(test.screen14.timer2, 0);
  expect(test.screen14.timer3, 0);
  expect(test.screen14.dsp_flg1, 0);
  expect(test.screen14.dsp_flg2, 0);
  expect(test.screen14.movie01_ext, 0);
  expect(test.screen14.movie02_ext, 0);
  expect(test.screen14.movie03_ext, 0);
  expect(test.screen14.movie04_ext, 0);
  expect(test.screen14.line_title, "");
  expect(test.screen14.line_title_ex, "");
  expect(test.screen14.line1, "");
  expect(test.screen14.line2, "");
  expect(test.screen14.line3, "");
  expect(test.screen14.line4, "");
  expect(test.screen14.line1_ex, "");
  expect(test.screen14.line2_ex, "");
  expect(test.screen14.line3_ex, "");
  expect(test.screen14.line4_ex, "");
  expect(test.screen14.sound_led1, 0);
  expect(test.screen14.sound_led2, 0);
  expect(test.screen14.sound_led3, 0);
  expect(test.screen15.title, "");
  expect(test.screen15.msg1, "");
  expect(test.screen15.msg2, "");
  expect(test.screen15.msg1_size, 0);
  expect(test.screen15.msg2_size, 0);
  expect(test.screen15.sound1, 0);
  expect(test.screen15.sound2, 0);
  expect(test.screen15.sound3, 0);
  expect(test.screen15.snd_timer, 0);
  expect(test.screen15.timer1, 0);
  expect(test.screen15.timer2, 0);
  expect(test.screen15.timer3, 0);
  expect(test.screen15.dsp_flg1, 0);
  expect(test.screen15.dsp_flg2, 0);
  expect(test.screen15.movie01_ext, 0);
  expect(test.screen15.movie02_ext, 0);
  expect(test.screen15.movie03_ext, 0);
  expect(test.screen15.movie04_ext, 0);
  expect(test.screen15.line_title, "");
  expect(test.screen15.line_title_ex, "");
  expect(test.screen15.line1, "");
  expect(test.screen15.line2, "");
  expect(test.screen15.line3, "");
  expect(test.screen15.line4, "");
  expect(test.screen15.line1_ex, "");
  expect(test.screen15.line2_ex, "");
  expect(test.screen15.line3_ex, "");
  expect(test.screen15.line4_ex, "");
  expect(test.screen15.sound_led1, 0);
  expect(test.screen15.sound_led2, 0);
  expect(test.screen15.sound_led3, 0);
  expect(test.screen16.title, "");
  expect(test.screen16.msg1, "");
  expect(test.screen16.msg2, "");
  expect(test.screen16.msg1_size, 0);
  expect(test.screen16.msg2_size, 0);
  expect(test.screen16.sound1, 0);
  expect(test.screen16.sound2, "");
  expect(test.screen16.sound3, "");
  expect(test.screen16.snd_timer, 0);
  expect(test.screen16.timer1, 0);
  expect(test.screen16.timer2, 0);
  expect(test.screen16.timer3, 0);
  expect(test.screen16.dsp_flg1, 0);
  expect(test.screen16.dsp_flg2, 0);
  expect(test.screen16.movie01_ext, 0);
  expect(test.screen16.movie02_ext, 0);
  expect(test.screen16.movie03_ext, 0);
  expect(test.screen16.movie04_ext, 0);
  expect(test.screen16.line_title, "");
  expect(test.screen16.line_title_ex, "");
  expect(test.screen16.line1, "");
  expect(test.screen16.line2, "");
  expect(test.screen16.line3, "");
  expect(test.screen16.line4, "");
  expect(test.screen16.line1_ex, "");
  expect(test.screen16.line2_ex, "");
  expect(test.screen16.line3_ex, "");
  expect(test.screen16.line4_ex, "");
  expect(test.screen16.sound_led1, 0);
  expect(test.screen16.sound_led2, "");
  expect(test.screen16.sound_led3, "");
  expect(test.screen16.msg_max, 0);
  expect(test.screen16.line2_1, "");
  expect(test.screen16.line2_2, "");
  expect(test.screen16.line2_3, "");
  expect(test.screen16.line2_4, "");
  expect(test.screen16.line2_1_ex, "");
  expect(test.screen16.line2_2_ex, "");
  expect(test.screen16.line2_3_ex, "");
  expect(test.screen16.line2_4_ex, "");
  expect(test.screen17.title, "");
  expect(test.screen17.msg1, "");
  expect(test.screen17.msg2, "");
  expect(test.screen17.msg1_size, 0);
  expect(test.screen17.msg2_size, 0);
  expect(test.screen17.sound1, 0);
  expect(test.screen17.sound2, 0);
  expect(test.screen17.sound3, 0);
  expect(test.screen17.snd_timer, 0);
  expect(test.screen17.timer1, 0);
  expect(test.screen17.timer2, 0);
  expect(test.screen17.timer3, 0);
  expect(test.screen17.dsp_flg1, 0);
  expect(test.screen17.dsp_flg2, 0);
  expect(test.screen17.movie01_ext, 0);
  expect(test.screen17.movie02_ext, 0);
  expect(test.screen17.movie03_ext, 0);
  expect(test.screen17.movie04_ext, 0);
  expect(test.screen17.line_title, "");
  expect(test.screen17.line_title_ex, "");
  expect(test.screen17.line1, "");
  expect(test.screen17.line2, "");
  expect(test.screen17.line3, "");
  expect(test.screen17.line4, "");
  expect(test.screen17.line1_ex, "");
  expect(test.screen17.line2_ex, "");
  expect(test.screen17.line3_ex, "");
  expect(test.screen17.line4_ex, "");
  expect(test.screen17.sound_led1, 0);
  expect(test.screen17.sound_led2, 0);
  expect(test.screen17.sound_led3, 0);
  expect(test.screen18.title, "");
  expect(test.screen18.msg1, "");
  expect(test.screen18.msg2, "");
  expect(test.screen18.msg1_size, 0);
  expect(test.screen18.msg2_size, 0);
  expect(test.screen18.sound1, 0);
  expect(test.screen18.sound2, 0);
  expect(test.screen18.sound3, 0);
  expect(test.screen18.snd_timer, 0);
  expect(test.screen18.timer1, 0);
  expect(test.screen18.timer2, 0);
  expect(test.screen18.timer3, 0);
  expect(test.screen18.dsp_flg1, 0);
  expect(test.screen18.dsp_flg2, 0);
  expect(test.screen18.movie01_ext, 0);
  expect(test.screen18.movie02_ext, 0);
  expect(test.screen18.movie03_ext, 0);
  expect(test.screen18.movie04_ext, 0);
  expect(test.screen18.line_title, "");
  expect(test.screen18.line_title_ex, "");
  expect(test.screen18.line1, "");
  expect(test.screen18.line2, "");
  expect(test.screen18.line3, "");
  expect(test.screen18.line4, "");
  expect(test.screen18.line1_ex, "");
  expect(test.screen18.line2_ex, "");
  expect(test.screen18.line3_ex, "");
  expect(test.screen18.line4_ex, "");
  expect(test.screen18.sound_led1, 0);
  expect(test.screen18.sound_led2, 0);
  expect(test.screen18.sound_led3, 0);
  expect(test.screen19.title, "");
  expect(test.screen19.msg1, "");
  expect(test.screen19.msg2, "");
  expect(test.screen19.msg1_size, 0);
  expect(test.screen19.msg2_size, 0);
  expect(test.screen19.sound1, 0);
  expect(test.screen19.sound2, "");
  expect(test.screen19.sound3, "");
  expect(test.screen19.snd_timer, 0);
  expect(test.screen19.timer1, 0);
  expect(test.screen19.timer2, 0);
  expect(test.screen19.timer3, 0);
  expect(test.screen19.dsp_flg1, 0);
  expect(test.screen19.dsp_flg2, 0);
  expect(test.screen19.movie01_ext, 0);
  expect(test.screen19.movie02_ext, 0);
  expect(test.screen19.movie03_ext, 0);
  expect(test.screen19.movie04_ext, 0);
  expect(test.screen19.line_title, "");
  expect(test.screen19.line_title_ex, "");
  expect(test.screen19.line1, "");
  expect(test.screen19.line2, "");
  expect(test.screen19.line3, "");
  expect(test.screen19.line4, "");
  expect(test.screen19.line1_ex, "");
  expect(test.screen19.line2_ex, "");
  expect(test.screen19.line3_ex, "");
  expect(test.screen19.line4_ex, "");
  expect(test.screen19.sound_led1, 0);
  expect(test.screen19.sound_led2, "");
  expect(test.screen19.sound_led3, "");
  expect(test.screen20.title, "");
  expect(test.screen20.msg1, "");
  expect(test.screen20.msg2, "");
  expect(test.screen20.msg1_size, 0);
  expect(test.screen20.msg2_size, 0);
  expect(test.screen20.sound1, 0);
  expect(test.screen20.sound2, 0);
  expect(test.screen20.sound3, 0);
  expect(test.screen20.snd_timer, 0);
  expect(test.screen20.timer1, 0);
  expect(test.screen20.timer2, 0);
  expect(test.screen20.timer3, 0);
  expect(test.screen20.dsp_flg1, 0);
  expect(test.screen20.dsp_flg2, 0);
  expect(test.screen20.movie01_ext, 0);
  expect(test.screen20.movie02_ext, 0);
  expect(test.screen20.movie03_ext, 0);
  expect(test.screen20.movie04_ext, 0);
  expect(test.screen20.line_title, "");
  expect(test.screen20.line_title_ex, "");
  expect(test.screen20.line1, "");
  expect(test.screen20.line2, "");
  expect(test.screen20.line3, "");
  expect(test.screen20.line4, "");
  expect(test.screen20.line1_ex, "");
  expect(test.screen20.line2_ex, "");
  expect(test.screen20.line3_ex, "");
  expect(test.screen20.line4_ex, "");
  expect(test.screen20.sound_led1, 0);
  expect(test.screen20.sound_led2, 0);
  expect(test.screen20.sound_led3, 0);
  expect(test.screen21.title, "");
  expect(test.screen21.msg1, "");
  expect(test.screen21.msg2, "");
  expect(test.screen21.msg1_size, 0);
  expect(test.screen21.msg2_size, 0);
  expect(test.screen21.sound1, 0);
  expect(test.screen21.sound2, 0);
  expect(test.screen21.sound3, 0);
  expect(test.screen21.snd_timer, 0);
  expect(test.screen21.timer1, 0);
  expect(test.screen21.timer2, 0);
  expect(test.screen21.timer3, 0);
  expect(test.screen21.dsp_flg1, 0);
  expect(test.screen21.dsp_flg2, 0);
  expect(test.screen21.movie01_ext, 0);
  expect(test.screen21.movie02_ext, 0);
  expect(test.screen21.movie03_ext, 0);
  expect(test.screen21.movie04_ext, 0);
  expect(test.screen21.line_title, "");
  expect(test.screen21.line_title_ex, "");
  expect(test.screen21.line1, "");
  expect(test.screen21.line2, "");
  expect(test.screen21.line3, "");
  expect(test.screen21.line4, "");
  expect(test.screen21.line1_ex, "");
  expect(test.screen21.line2_ex, "");
  expect(test.screen21.line3_ex, "");
  expect(test.screen21.line4_ex, "");
  expect(test.screen21.sound_led1, 0);
  expect(test.screen21.sound_led2, 0);
  expect(test.screen21.sound_led3, 0);
  expect(test.screen22.title, "");
  expect(test.screen22.msg1, "");
  expect(test.screen22.msg2, "");
  expect(test.screen22.msg1_size, 0);
  expect(test.screen22.msg2_size, 0);
  expect(test.screen22.sound1, 0);
  expect(test.screen22.sound2, 0);
  expect(test.screen22.sound3, 0);
  expect(test.screen22.snd_timer, 0);
  expect(test.screen22.timer1, 0);
  expect(test.screen22.timer2, 0);
  expect(test.screen22.timer3, 0);
  expect(test.screen22.dsp_flg1, 0);
  expect(test.screen22.dsp_flg2, 0);
  expect(test.screen22.movie01_ext, 0);
  expect(test.screen22.movie02_ext, 0);
  expect(test.screen22.movie03_ext, 0);
  expect(test.screen22.movie04_ext, 0);
  expect(test.screen22.line_title, "");
  expect(test.screen22.line_title_ex, "");
  expect(test.screen22.line1, "");
  expect(test.screen22.line2, "");
  expect(test.screen22.line3, "");
  expect(test.screen22.line4, "");
  expect(test.screen22.line1_ex, "");
  expect(test.screen22.line2_ex, "");
  expect(test.screen22.line3_ex, "");
  expect(test.screen22.line4_ex, "");
  expect(test.screen22.sound_led1, 0);
  expect(test.screen22.sound_led2, 0);
  expect(test.screen22.sound_led3, 0);
  expect(test.screen23.title, "");
  expect(test.screen23.msg1, "");
  expect(test.screen23.msg2, "");
  expect(test.screen23.msg1_size, 0);
  expect(test.screen23.msg2_size, 0);
  expect(test.screen23.sound1, 0);
  expect(test.screen23.sound2, 0);
  expect(test.screen23.sound3, 0);
  expect(test.screen23.snd_timer, 0);
  expect(test.screen23.timer1, 0);
  expect(test.screen23.timer2, 0);
  expect(test.screen23.timer3, 0);
  expect(test.screen23.dsp_flg1, 0);
  expect(test.screen23.dsp_flg2, 0);
  expect(test.screen23.movie01_ext, 0);
  expect(test.screen23.movie02_ext, 0);
  expect(test.screen23.movie03_ext, 0);
  expect(test.screen23.movie04_ext, 0);
  expect(test.screen23.line_title, "");
  expect(test.screen23.line_title_ex, "");
  expect(test.screen23.line1, "");
  expect(test.screen23.line2, "");
  expect(test.screen23.line3, "");
  expect(test.screen23.line4, "");
  expect(test.screen23.line1_ex, "");
  expect(test.screen23.line2_ex, "");
  expect(test.screen23.line3_ex, "");
  expect(test.screen23.line4_ex, "");
  expect(test.screen23.sound_led1, 0);
  expect(test.screen23.sound_led2, 0);
  expect(test.screen23.sound_led3, 0);
  expect(test.screen24.title, "");
  expect(test.screen24.msg1, "");
  expect(test.screen24.msg2, "");
  expect(test.screen24.msg1_size, 0);
  expect(test.screen24.msg2_size, 0);
  expect(test.screen24.sound1, 0);
  expect(test.screen24.sound2, 0);
  expect(test.screen24.sound3, 0);
  expect(test.screen24.snd_timer, 0);
  expect(test.screen24.timer1, 0);
  expect(test.screen24.timer2, 0);
  expect(test.screen24.timer3, 0);
  expect(test.screen24.dsp_flg1, 0);
  expect(test.screen24.dsp_flg2, 0);
  expect(test.screen24.movie01_ext, 0);
  expect(test.screen24.movie02_ext, 0);
  expect(test.screen24.movie03_ext, 0);
  expect(test.screen24.movie04_ext, 0);
  expect(test.screen24.line_title, "");
  expect(test.screen24.line_title_ex, "");
  expect(test.screen24.line1, "");
  expect(test.screen24.line2, "");
  expect(test.screen24.line3, "");
  expect(test.screen24.line4, "");
  expect(test.screen24.line1_ex, "");
  expect(test.screen24.line2_ex, "");
  expect(test.screen24.line3_ex, "");
  expect(test.screen24.line4_ex, "");
  expect(test.screen24.sound_led1, 0);
  expect(test.screen24.sound_led2, 0);
  expect(test.screen24.sound_led3, 0);
  expect(test.screen25.title, "");
  expect(test.screen25.msg1, "");
  expect(test.screen25.msg2, "");
  expect(test.screen25.msg1_size, 0);
  expect(test.screen25.msg2_size, 0);
  expect(test.screen25.sound1, 0);
  expect(test.screen25.sound2, 0);
  expect(test.screen25.sound3, 0);
  expect(test.screen25.snd_timer, 0);
  expect(test.screen25.timer1, 0);
  expect(test.screen25.timer2, 0);
  expect(test.screen25.timer3, 0);
  expect(test.screen25.dsp_flg1, 0);
  expect(test.screen25.dsp_flg2, 0);
  expect(test.screen25.movie01_ext, 0);
  expect(test.screen25.movie02_ext, 0);
  expect(test.screen25.movie03_ext, 0);
  expect(test.screen25.movie04_ext, 0);
  expect(test.screen25.line_title, "");
  expect(test.screen25.line_title_ex, "");
  expect(test.screen25.line1, "");
  expect(test.screen25.line2, "");
  expect(test.screen25.line3, "");
  expect(test.screen25.line4, "");
  expect(test.screen25.line1_ex, "");
  expect(test.screen25.line2_ex, "");
  expect(test.screen25.line3_ex, "");
  expect(test.screen25.line4_ex, "");
  expect(test.screen25.sound_led1, 0);
  expect(test.screen25.sound_led2, 0);
  expect(test.screen25.sound_led3, 0);
  expect(test.screen26.title, "");
  expect(test.screen26.msg1, "");
  expect(test.screen26.msg2, "");
  expect(test.screen26.msg1_size, 0);
  expect(test.screen26.msg2_size, 0);
  expect(test.screen26.sound1, 0);
  expect(test.screen26.sound2, "");
  expect(test.screen26.sound3, "");
  expect(test.screen26.snd_timer, 0);
  expect(test.screen26.timer1, 0);
  expect(test.screen26.timer2, 0);
  expect(test.screen26.timer3, 0);
  expect(test.screen26.dsp_flg1, 0);
  expect(test.screen26.dsp_flg2, 0);
  expect(test.screen26.movie01_ext, 0);
  expect(test.screen26.movie02_ext, 0);
  expect(test.screen26.movie03_ext, 0);
  expect(test.screen26.movie04_ext, 0);
  expect(test.screen26.line_title, "");
  expect(test.screen26.line_title_ex, "");
  expect(test.screen26.line1, "");
  expect(test.screen26.line2, "");
  expect(test.screen26.line3, "");
  expect(test.screen26.line4, "");
  expect(test.screen26.line1_ex, "");
  expect(test.screen26.line2_ex, "");
  expect(test.screen26.line3_ex, "");
  expect(test.screen26.line4_ex, "");
  expect(test.screen26.sound_led1, 0);
  expect(test.screen26.sound_led2, "");
  expect(test.screen26.sound_led3, "");
  expect(test.screen27.title, "");
  expect(test.screen27.msg1, "");
  expect(test.screen27.msg2, "");
  expect(test.screen27.msg1_size, 0);
  expect(test.screen27.msg2_size, 0);
  expect(test.screen27.sound1, 0);
  expect(test.screen27.sound2, 0);
  expect(test.screen27.sound3, 0);
  expect(test.screen27.snd_timer, 0);
  expect(test.screen27.timer1, 0);
  expect(test.screen27.timer2, 0);
  expect(test.screen27.timer3, 0);
  expect(test.screen27.dsp_flg1, 0);
  expect(test.screen27.dsp_flg2, 0);
  expect(test.screen27.movie01_ext, 0);
  expect(test.screen27.movie02_ext, 0);
  expect(test.screen27.movie03_ext, 0);
  expect(test.screen27.movie04_ext, 0);
  expect(test.screen27.line_title, "");
  expect(test.screen27.line_title_ex, "");
  expect(test.screen27.line1, "");
  expect(test.screen27.line2, "");
  expect(test.screen27.line3, "");
  expect(test.screen27.line4, "");
  expect(test.screen27.line1_ex, "");
  expect(test.screen27.line2_ex, "");
  expect(test.screen27.line3_ex, "");
  expect(test.screen27.line4_ex, "");
  expect(test.screen27.sound_led1, 0);
  expect(test.screen27.sound_led2, 0);
  expect(test.screen27.sound_led3, 0);
  expect(test.screen28.title, "");
  expect(test.screen28.msg1, "");
  expect(test.screen28.msg2, "");
  expect(test.screen28.msg1_size, 0);
  expect(test.screen28.msg2_size, 0);
  expect(test.screen28.sound1, 0);
  expect(test.screen28.sound2, 0);
  expect(test.screen28.sound3, 0);
  expect(test.screen28.snd_timer, 0);
  expect(test.screen28.timer1, 0);
  expect(test.screen28.timer2, 0);
  expect(test.screen28.timer3, 0);
  expect(test.screen28.dsp_flg1, 0);
  expect(test.screen28.dsp_flg2, 0);
  expect(test.screen28.movie01_ext, 0);
  expect(test.screen28.movie02_ext, 0);
  expect(test.screen28.movie03_ext, 0);
  expect(test.screen28.movie04_ext, 0);
  expect(test.screen28.line_title, "");
  expect(test.screen28.line_title_ex, "");
  expect(test.screen28.line1, "");
  expect(test.screen28.line2, "");
  expect(test.screen28.line3, "");
  expect(test.screen28.line4, "");
  expect(test.screen28.line1_ex, "");
  expect(test.screen28.line2_ex, "");
  expect(test.screen28.line3_ex, "");
  expect(test.screen28.line4_ex, "");
  expect(test.screen28.sound_led1, 0);
  expect(test.screen28.sound_led2, 0);
  expect(test.screen28.sound_led3, 0);
  expect(test.screen29.title, "");
  expect(test.screen29.msg1, "");
  expect(test.screen29.msg2, "");
  expect(test.screen29.msg1_size, 0);
  expect(test.screen29.msg2_size, 0);
  expect(test.screen29.sound1, 0);
  expect(test.screen29.sound2, 0);
  expect(test.screen29.sound3, 0);
  expect(test.screen29.snd_timer, 0);
  expect(test.screen29.timer1, 0);
  expect(test.screen29.timer2, 0);
  expect(test.screen29.timer3, 0);
  expect(test.screen29.dsp_flg1, 0);
  expect(test.screen29.dsp_flg2, 0);
  expect(test.screen29.movie01_ext, 0);
  expect(test.screen29.movie02_ext, 0);
  expect(test.screen29.movie03_ext, 0);
  expect(test.screen29.movie04_ext, 0);
  expect(test.screen29.line_title, "");
  expect(test.screen29.line_title_ex, "");
  expect(test.screen29.line1, "");
  expect(test.screen29.line2, "");
  expect(test.screen29.line3, "");
  expect(test.screen29.line4, "");
  expect(test.screen29.line1_ex, "");
  expect(test.screen29.line2_ex, "");
  expect(test.screen29.line3_ex, "");
  expect(test.screen29.line4_ex, "");
  expect(test.screen29.sound_led1, 0);
  expect(test.screen29.sound_led2, 0);
  expect(test.screen29.sound_led3, 0);
  expect(test.screen30.title, "");
  expect(test.screen30.msg1, "");
  expect(test.screen30.msg2, "");
  expect(test.screen30.msg1_size, 0);
  expect(test.screen30.msg2_size, 0);
  expect(test.screen30.sound1, 0);
  expect(test.screen30.sound2, 0);
  expect(test.screen30.sound3, 0);
  expect(test.screen30.snd_timer, 0);
  expect(test.screen30.timer1, 0);
  expect(test.screen30.timer2, 0);
  expect(test.screen30.timer3, 0);
  expect(test.screen30.dsp_flg1, 0);
  expect(test.screen30.dsp_flg2, 0);
  expect(test.screen30.movie01_ext, 0);
  expect(test.screen30.movie02_ext, 0);
  expect(test.screen30.movie03_ext, 0);
  expect(test.screen30.movie04_ext, 0);
  expect(test.screen30.line_title, "");
  expect(test.screen30.line_title_ex, "");
  expect(test.screen30.line1, "");
  expect(test.screen30.line2, "");
  expect(test.screen30.line3, "");
  expect(test.screen30.line4, "");
  expect(test.screen30.line1_ex, "");
  expect(test.screen30.line2_ex, "");
  expect(test.screen30.line3_ex, "");
  expect(test.screen30.line4_ex, "");
  expect(test.screen30.sound_led1, 0);
  expect(test.screen30.sound_led2, 0);
  expect(test.screen30.sound_led3, 0);
  expect(test.screen31.title, "");
  expect(test.screen31.msg1, "");
  expect(test.screen31.msg2, "");
  expect(test.screen31.msg1_size, 0);
  expect(test.screen31.msg2_size, 0);
  expect(test.screen31.sound1, 0);
  expect(test.screen31.sound2, 0);
  expect(test.screen31.sound3, 0);
  expect(test.screen31.snd_timer, 0);
  expect(test.screen31.timer1, 0);
  expect(test.screen31.timer2, 0);
  expect(test.screen31.timer3, 0);
  expect(test.screen31.dsp_flg1, 0);
  expect(test.screen31.dsp_flg2, 0);
  expect(test.screen31.movie01_ext, 0);
  expect(test.screen31.movie02_ext, 0);
  expect(test.screen31.movie03_ext, 0);
  expect(test.screen31.movie04_ext, 0);
  expect(test.screen31.line_title, "");
  expect(test.screen31.line_title_ex, "");
  expect(test.screen31.line1, "");
  expect(test.screen31.line2, "");
  expect(test.screen31.line3, "");
  expect(test.screen31.line4, "");
  expect(test.screen31.line1_ex, "");
  expect(test.screen31.line2_ex, "");
  expect(test.screen31.line3_ex, "");
  expect(test.screen31.line4_ex, "");
  expect(test.screen31.sound_led1, 0);
  expect(test.screen31.sound_led2, 0);
  expect(test.screen31.sound_led3, 0);
  expect(test.screen32.title, "");
  expect(test.screen32.msg1, "");
  expect(test.screen32.msg2, "");
  expect(test.screen32.msg1_size, 0);
  expect(test.screen32.msg2_size, 0);
  expect(test.screen32.sound1, 0);
  expect(test.screen32.sound2, 0);
  expect(test.screen32.sound3, 0);
  expect(test.screen32.snd_timer, 0);
  expect(test.screen32.timer1, 0);
  expect(test.screen32.timer2, 0);
  expect(test.screen32.timer3, 0);
  expect(test.screen32.dsp_flg1, 0);
  expect(test.screen32.dsp_flg2, 0);
  expect(test.screen32.movie01_ext, 0);
  expect(test.screen32.movie02_ext, 0);
  expect(test.screen32.movie03_ext, 0);
  expect(test.screen32.movie04_ext, 0);
  expect(test.screen32.line_title, "");
  expect(test.screen32.line_title_ex, "");
  expect(test.screen32.line1, "");
  expect(test.screen32.line2, "");
  expect(test.screen32.line3, "");
  expect(test.screen32.line4, "");
  expect(test.screen32.line1_ex, "");
  expect(test.screen32.line2_ex, "");
  expect(test.screen32.line3_ex, "");
  expect(test.screen32.line4_ex, "");
  expect(test.screen32.sound_led1, 0);
  expect(test.screen32.sound_led2, 0);
  expect(test.screen32.sound_led3, 0);
  expect(test.screen33.title, "");
  expect(test.screen33.msg1, "");
  expect(test.screen33.msg2, "");
  expect(test.screen33.msg1_size, 0);
  expect(test.screen33.msg2_size, 0);
  expect(test.screen33.sound1, 0);
  expect(test.screen33.sound2, 0);
  expect(test.screen33.sound3, 0);
  expect(test.screen33.snd_timer, 0);
  expect(test.screen33.timer1, 0);
  expect(test.screen33.timer2, 0);
  expect(test.screen33.timer3, 0);
  expect(test.screen33.dsp_flg1, 0);
  expect(test.screen33.dsp_flg2, 0);
  expect(test.screen33.movie01_ext, 0);
  expect(test.screen33.movie02_ext, 0);
  expect(test.screen33.movie03_ext, 0);
  expect(test.screen33.movie04_ext, 0);
  expect(test.screen33.line_title, "");
  expect(test.screen33.line_title_ex, "");
  expect(test.screen33.line1, "");
  expect(test.screen33.line2, "");
  expect(test.screen33.line3, "");
  expect(test.screen33.line4, "");
  expect(test.screen33.line1_ex, "");
  expect(test.screen33.line2_ex, "");
  expect(test.screen33.line3_ex, "");
  expect(test.screen33.line4_ex, "");
  expect(test.screen33.sound_led1, 0);
  expect(test.screen33.sound_led2, 0);
  expect(test.screen33.sound_led3, 0);
  expect(test.screen34.title, "");
  expect(test.screen34.msg1, "");
  expect(test.screen34.msg2, "");
  expect(test.screen34.msg1_size, 0);
  expect(test.screen34.msg2_size, 0);
  expect(test.screen34.sound1, 0);
  expect(test.screen34.sound2, 0);
  expect(test.screen34.sound3, 0);
  expect(test.screen34.snd_timer, 0);
  expect(test.screen34.timer1, 0);
  expect(test.screen34.timer2, 0);
  expect(test.screen34.timer3, 0);
  expect(test.screen34.dsp_flg1, 0);
  expect(test.screen34.dsp_flg2, 0);
  expect(test.screen34.movie01_ext, 0);
  expect(test.screen34.movie02_ext, 0);
  expect(test.screen34.movie03_ext, 0);
  expect(test.screen34.movie04_ext, 0);
  expect(test.screen34.line_title, "");
  expect(test.screen34.line_title_ex, "");
  expect(test.screen34.line1, "");
  expect(test.screen34.line2, "");
  expect(test.screen34.line3, "");
  expect(test.screen34.line4, "");
  expect(test.screen34.line1_ex, "");
  expect(test.screen34.line2_ex, "");
  expect(test.screen34.line3_ex, "");
  expect(test.screen34.line4_ex, "");
  expect(test.screen34.sound_led1, 0);
  expect(test.screen34.sound_led2, 0);
  expect(test.screen34.sound_led3, 0);
  expect(test.screen35.title, "");
  expect(test.screen35.msg1, "");
  expect(test.screen35.msg2, "");
  expect(test.screen35.msg1_size, 0);
  expect(test.screen35.msg2_size, 0);
  expect(test.screen35.sound1, 0);
  expect(test.screen35.sound2, 0);
  expect(test.screen35.sound3, 0);
  expect(test.screen35.snd_timer, 0);
  expect(test.screen35.timer1, 0);
  expect(test.screen35.timer2, 0);
  expect(test.screen35.timer3, 0);
  expect(test.screen35.dsp_flg1, 0);
  expect(test.screen35.dsp_flg2, 0);
  expect(test.screen35.movie01_ext, 0);
  expect(test.screen35.movie02_ext, 0);
  expect(test.screen35.movie03_ext, 0);
  expect(test.screen35.movie04_ext, 0);
  expect(test.screen35.line_title, "");
  expect(test.screen35.line_title_ex, "");
  expect(test.screen35.line1, "");
  expect(test.screen35.line2, "");
  expect(test.screen35.line3, "");
  expect(test.screen35.line4, "");
  expect(test.screen35.line1_ex, "");
  expect(test.screen35.line2_ex, "");
  expect(test.screen35.line3_ex, "");
  expect(test.screen35.line4_ex, "");
  expect(test.screen35.sound_led1, 0);
  expect(test.screen35.sound_led2, 0);
  expect(test.screen35.sound_led3, 0);
  expect(test.screen36.title, "");
  expect(test.screen36.msg1, "");
  expect(test.screen36.msg2, "");
  expect(test.screen36.msg1_size, 0);
  expect(test.screen36.msg2_size, 0);
  expect(test.screen36.sound1, 0);
  expect(test.screen36.sound2, 0);
  expect(test.screen36.sound3, 0);
  expect(test.screen36.snd_timer, 0);
  expect(test.screen36.timer1, 0);
  expect(test.screen36.timer2, 0);
  expect(test.screen36.timer3, 0);
  expect(test.screen36.dsp_flg1, 0);
  expect(test.screen36.dsp_flg2, 0);
  expect(test.screen36.movie01_ext, 0);
  expect(test.screen36.movie02_ext, 0);
  expect(test.screen36.movie03_ext, 0);
  expect(test.screen36.movie04_ext, 0);
  expect(test.screen36.line_title, "");
  expect(test.screen36.line_title_ex, "");
  expect(test.screen36.line1, "");
  expect(test.screen36.line2, "");
  expect(test.screen36.line3, "");
  expect(test.screen36.line4, "");
  expect(test.screen36.line1_ex, "");
  expect(test.screen36.line2_ex, "");
  expect(test.screen36.line3_ex, "");
  expect(test.screen36.line4_ex, "");
  expect(test.screen36.sound_led1, 0);
  expect(test.screen36.sound_led2, 0);
  expect(test.screen36.sound_led3, 0);
  expect(test.screen37.title, "");
  expect(test.screen37.msg1, "");
  expect(test.screen37.msg2, "");
  expect(test.screen37.msg1_size, 0);
  expect(test.screen37.msg2_size, 0);
  expect(test.screen37.sound1, 0);
  expect(test.screen37.sound2, 0);
  expect(test.screen37.sound3, 0);
  expect(test.screen37.snd_timer, 0);
  expect(test.screen37.timer1, 0);
  expect(test.screen37.timer2, 0);
  expect(test.screen37.timer3, 0);
  expect(test.screen37.dsp_flg1, 0);
  expect(test.screen37.dsp_flg2, 0);
  expect(test.screen37.movie01_ext, 0);
  expect(test.screen37.movie02_ext, 0);
  expect(test.screen37.movie03_ext, 0);
  expect(test.screen37.movie04_ext, 0);
  expect(test.screen37.line_title, "");
  expect(test.screen37.line_title_ex, "");
  expect(test.screen37.line1, "");
  expect(test.screen37.line2, "");
  expect(test.screen37.line3, "");
  expect(test.screen37.line4, "");
  expect(test.screen37.line1_ex, "");
  expect(test.screen37.line2_ex, "");
  expect(test.screen37.line3_ex, "");
  expect(test.screen37.line4_ex, "");
  expect(test.screen37.sound_led1, 0);
  expect(test.screen37.sound_led2, 0);
  expect(test.screen37.sound_led3, 0);
  expect(test.screen38.title, "");
  expect(test.screen38.msg1, "");
  expect(test.screen38.msg2, "");
  expect(test.screen38.msg1_size, 0);
  expect(test.screen38.msg2_size, 0);
  expect(test.screen38.sound1, 0);
  expect(test.screen38.sound2, 0);
  expect(test.screen38.sound3, 0);
  expect(test.screen38.snd_timer, 0);
  expect(test.screen38.timer1, 0);
  expect(test.screen38.timer2, 0);
  expect(test.screen38.timer3, 0);
  expect(test.screen38.dsp_flg1, 0);
  expect(test.screen38.dsp_flg2, 0);
  expect(test.screen38.movie01_ext, 0);
  expect(test.screen38.movie02_ext, 0);
  expect(test.screen38.movie03_ext, 0);
  expect(test.screen38.movie04_ext, 0);
  expect(test.screen38.line_title, "");
  expect(test.screen38.line_title_ex, "");
  expect(test.screen38.line1, "");
  expect(test.screen38.line2, "");
  expect(test.screen38.line3, "");
  expect(test.screen38.line4, "");
  expect(test.screen38.line1_ex, "");
  expect(test.screen38.line2_ex, "");
  expect(test.screen38.line3_ex, "");
  expect(test.screen38.line4_ex, "");
  expect(test.screen38.sound_led1, 0);
  expect(test.screen38.sound_led2, 0);
  expect(test.screen38.sound_led3, 0);
  expect(test.screen39.title, "");
  expect(test.screen39.msg1, "");
  expect(test.screen39.msg2, "");
  expect(test.screen39.msg1_size, 0);
  expect(test.screen39.msg2_size, 0);
  expect(test.screen39.sound1, 0);
  expect(test.screen39.sound2, 0);
  expect(test.screen39.sound3, 0);
  expect(test.screen39.snd_timer, 0);
  expect(test.screen39.timer1, 0);
  expect(test.screen39.timer2, 0);
  expect(test.screen39.timer3, 0);
  expect(test.screen39.dsp_flg1, 0);
  expect(test.screen39.dsp_flg2, 0);
  expect(test.screen39.movie01_ext, 0);
  expect(test.screen39.movie02_ext, 0);
  expect(test.screen39.movie03_ext, 0);
  expect(test.screen39.movie04_ext, 0);
  expect(test.screen39.line_title, "");
  expect(test.screen39.line_title_ex, "");
  expect(test.screen39.line1, "");
  expect(test.screen39.line2, "");
  expect(test.screen39.line3, "");
  expect(test.screen39.line4, "");
  expect(test.screen39.line1_ex, "");
  expect(test.screen39.line2_ex, "");
  expect(test.screen39.line3_ex, "");
  expect(test.screen39.line4_ex, "");
  expect(test.screen39.sound_led1, 0);
  expect(test.screen39.sound_led2, 0);
  expect(test.screen39.sound_led3, 0);
  expect(test.screen40.title, "");
  expect(test.screen40.msg1, "");
  expect(test.screen40.msg2, "");
  expect(test.screen40.msg1_size, 0);
  expect(test.screen40.msg2_size, 0);
  expect(test.screen40.sound1, 0);
  expect(test.screen40.sound2, 0);
  expect(test.screen40.sound3, 0);
  expect(test.screen40.snd_timer, 0);
  expect(test.screen40.timer1, 0);
  expect(test.screen40.timer2, 0);
  expect(test.screen40.timer3, 0);
  expect(test.screen40.dsp_flg1, 0);
  expect(test.screen40.dsp_flg2, 0);
  expect(test.screen40.movie01_ext, 0);
  expect(test.screen40.movie02_ext, 0);
  expect(test.screen40.movie03_ext, 0);
  expect(test.screen40.movie04_ext, 0);
  expect(test.screen40.line_title, "");
  expect(test.screen40.line_title_ex, "");
  expect(test.screen40.line1, "");
  expect(test.screen40.line2, "");
  expect(test.screen40.line3, "");
  expect(test.screen40.line4, "");
  expect(test.screen40.line1_ex, "");
  expect(test.screen40.line2_ex, "");
  expect(test.screen40.line3_ex, "");
  expect(test.screen40.line4_ex, "");
  expect(test.screen40.sound_led1, 0);
  expect(test.screen40.sound_led2, 0);
  expect(test.screen40.sound_led3, 0);
  expect(test.screen41.title, "");
  expect(test.screen41.msg1, "");
  expect(test.screen41.msg2, "");
  expect(test.screen41.msg1_size, 0);
  expect(test.screen41.msg2_size, 0);
  expect(test.screen41.sound1, 0);
  expect(test.screen41.sound2, 0);
  expect(test.screen41.sound3, 0);
  expect(test.screen41.snd_timer, 0);
  expect(test.screen41.timer1, 0);
  expect(test.screen41.timer2, 0);
  expect(test.screen41.timer3, 0);
  expect(test.screen41.dsp_flg1, 0);
  expect(test.screen41.dsp_flg2, 0);
  expect(test.screen41.movie01_ext, 0);
  expect(test.screen41.movie02_ext, 0);
  expect(test.screen41.movie03_ext, 0);
  expect(test.screen41.movie04_ext, 0);
  expect(test.screen41.line_title, "");
  expect(test.screen41.line_title_ex, "");
  expect(test.screen41.line1, "");
  expect(test.screen41.line2, "");
  expect(test.screen41.line3, "");
  expect(test.screen41.line4, "");
  expect(test.screen41.line1_ex, "");
  expect(test.screen41.line2_ex, "");
  expect(test.screen41.line3_ex, "");
  expect(test.screen41.line4_ex, "");
  expect(test.screen41.sound_led1, 0);
  expect(test.screen41.sound_led2, 0);
  expect(test.screen41.sound_led3, 0);
  expect(test.screen42.title, "");
  expect(test.screen42.msg1, "");
  expect(test.screen42.msg2, "");
  expect(test.screen42.msg1_size, 0);
  expect(test.screen42.msg2_size, 0);
  expect(test.screen42.sound1, 0);
  expect(test.screen42.sound2, 0);
  expect(test.screen42.sound3, 0);
  expect(test.screen42.snd_timer, 0);
  expect(test.screen42.timer1, 0);
  expect(test.screen42.timer2, 0);
  expect(test.screen42.timer3, 0);
  expect(test.screen42.dsp_flg1, 0);
  expect(test.screen42.dsp_flg2, 0);
  expect(test.screen42.movie01_ext, 0);
  expect(test.screen42.movie02_ext, 0);
  expect(test.screen42.movie03_ext, 0);
  expect(test.screen42.movie04_ext, 0);
  expect(test.screen42.line_title, "");
  expect(test.screen42.line_title_ex, "");
  expect(test.screen42.line1, "");
  expect(test.screen42.line2, "");
  expect(test.screen42.line3, "");
  expect(test.screen42.line4, "");
  expect(test.screen42.line1_ex, "");
  expect(test.screen42.line2_ex, "");
  expect(test.screen42.line3_ex, "");
  expect(test.screen42.line4_ex, "");
  expect(test.screen42.sound_led1, 0);
  expect(test.screen42.sound_led2, 0);
  expect(test.screen42.sound_led3, 0);
  expect(test.screen43.title, "");
  expect(test.screen43.msg1, "");
  expect(test.screen43.msg2, "");
  expect(test.screen43.msg1_size, 0);
  expect(test.screen43.msg2_size, 0);
  expect(test.screen43.sound1, 0);
  expect(test.screen43.sound2, 0);
  expect(test.screen43.sound3, 0);
  expect(test.screen43.snd_timer, 0);
  expect(test.screen43.timer1, 0);
  expect(test.screen43.timer2, 0);
  expect(test.screen43.timer3, 0);
  expect(test.screen43.dsp_flg1, 0);
  expect(test.screen43.dsp_flg2, 0);
  expect(test.screen43.movie01_ext, 0);
  expect(test.screen43.movie02_ext, 0);
  expect(test.screen43.movie03_ext, 0);
  expect(test.screen43.movie04_ext, 0);
  expect(test.screen43.line_title, "");
  expect(test.screen43.line_title_ex, "");
  expect(test.screen43.line1, "");
  expect(test.screen43.line2, "");
  expect(test.screen43.line3, "");
  expect(test.screen43.line4, "");
  expect(test.screen43.line1_ex, "");
  expect(test.screen43.line2_ex, "");
  expect(test.screen43.line3_ex, "");
  expect(test.screen43.line4_ex, "");
  expect(test.screen43.sound_led1, 0);
  expect(test.screen43.sound_led2, 0);
  expect(test.screen43.sound_led3, 0);
  expect(test.screen44.title, "");
  expect(test.screen44.msg1, "");
  expect(test.screen44.msg2, "");
  expect(test.screen44.msg1_size, 0);
  expect(test.screen44.msg2_size, 0);
  expect(test.screen44.sound1, 0);
  expect(test.screen44.sound2, 0);
  expect(test.screen44.sound3, 0);
  expect(test.screen44.snd_timer, 0);
  expect(test.screen44.timer1, 0);
  expect(test.screen44.timer2, 0);
  expect(test.screen44.timer3, 0);
  expect(test.screen44.dsp_flg1, 0);
  expect(test.screen44.dsp_flg2, 0);
  expect(test.screen44.movie01_ext, 0);
  expect(test.screen44.movie02_ext, 0);
  expect(test.screen44.movie03_ext, 0);
  expect(test.screen44.movie04_ext, 0);
  expect(test.screen44.line_title, "");
  expect(test.screen44.line_title_ex, "");
  expect(test.screen44.line1, "");
  expect(test.screen44.line2, "");
  expect(test.screen44.line3, "");
  expect(test.screen44.line4, "");
  expect(test.screen44.line1_ex, "");
  expect(test.screen44.line2_ex, "");
  expect(test.screen44.line3_ex, "");
  expect(test.screen44.line4_ex, "");
  expect(test.screen44.sound_led1, 0);
  expect(test.screen44.sound_led2, 0);
  expect(test.screen44.sound_led3, 0);
  expect(test.screen45.title, "");
  expect(test.screen45.msg1, "");
  expect(test.screen45.msg2, "");
  expect(test.screen45.msg1_size, 0);
  expect(test.screen45.msg2_size, 0);
  expect(test.screen45.sound1, 0);
  expect(test.screen45.sound2, 0);
  expect(test.screen45.sound3, 0);
  expect(test.screen45.snd_timer, 0);
  expect(test.screen45.timer1, 0);
  expect(test.screen45.timer2, 0);
  expect(test.screen45.timer3, 0);
  expect(test.screen45.dsp_flg1, 0);
  expect(test.screen45.dsp_flg2, 0);
  expect(test.screen45.movie01_ext, 0);
  expect(test.screen45.movie02_ext, 0);
  expect(test.screen45.movie03_ext, 0);
  expect(test.screen45.movie04_ext, 0);
  expect(test.screen45.line_title, "");
  expect(test.screen45.line_title_ex, "");
  expect(test.screen45.line1, "");
  expect(test.screen45.line2, "");
  expect(test.screen45.line3, "");
  expect(test.screen45.line4, "");
  expect(test.screen45.line1_ex, "");
  expect(test.screen45.line2_ex, "");
  expect(test.screen45.line3_ex, "");
  expect(test.screen45.line4_ex, "");
  expect(test.screen45.sound_led1, 0);
  expect(test.screen45.sound_led2, 0);
  expect(test.screen45.sound_led3, 0);
  expect(test.screen46.title, "");
  expect(test.screen46.msg1, "");
  expect(test.screen46.msg2, "");
  expect(test.screen46.msg1_size, 0);
  expect(test.screen46.msg2_size, 0);
  expect(test.screen46.sound1, 0);
  expect(test.screen46.sound2, 0);
  expect(test.screen46.sound3, 0);
  expect(test.screen46.snd_timer, 0);
  expect(test.screen46.timer1, 0);
  expect(test.screen46.timer2, 0);
  expect(test.screen46.timer3, 0);
  expect(test.screen46.dsp_flg1, 0);
  expect(test.screen46.dsp_flg2, 0);
  expect(test.screen46.movie01_ext, 0);
  expect(test.screen46.movie02_ext, 0);
  expect(test.screen46.movie03_ext, 0);
  expect(test.screen46.movie04_ext, 0);
  expect(test.screen46.line_title, "");
  expect(test.screen46.line_title_ex, "");
  expect(test.screen46.line1, "");
  expect(test.screen46.line2, "");
  expect(test.screen46.line3, "");
  expect(test.screen46.line4, "");
  expect(test.screen46.line1_ex, "");
  expect(test.screen46.line2_ex, "");
  expect(test.screen46.line3_ex, "");
  expect(test.screen46.line4_ex, "");
  expect(test.screen46.sound_led1, 0);
  expect(test.screen46.sound_led2, 0);
  expect(test.screen46.sound_led3, 0);
  expect(test.screen47.title, "");
  expect(test.screen47.msg1, "");
  expect(test.screen47.msg2, "");
  expect(test.screen47.msg1_size, 0);
  expect(test.screen47.msg2_size, 0);
  expect(test.screen47.sound1, 0);
  expect(test.screen47.sound2, 0);
  expect(test.screen47.sound3, 0);
  expect(test.screen47.snd_timer, 0);
  expect(test.screen47.timer1, 0);
  expect(test.screen47.timer2, 0);
  expect(test.screen47.timer3, 0);
  expect(test.screen47.dsp_flg1, 0);
  expect(test.screen47.dsp_flg2, 0);
  expect(test.screen47.movie01_ext, 0);
  expect(test.screen47.movie02_ext, 0);
  expect(test.screen47.movie03_ext, 0);
  expect(test.screen47.movie04_ext, 0);
  expect(test.screen47.line_title, "");
  expect(test.screen47.line_title_ex, "");
  expect(test.screen47.line1, "");
  expect(test.screen47.line2, "");
  expect(test.screen47.line3, "");
  expect(test.screen47.line4, "");
  expect(test.screen47.line1_ex, "");
  expect(test.screen47.line2_ex, "");
  expect(test.screen47.line3_ex, "");
  expect(test.screen47.line4_ex, "");
  expect(test.screen47.sound_led1, 0);
  expect(test.screen47.sound_led2, 0);
  expect(test.screen47.sound_led3, 0);
  expect(test.screen48.title, "");
  expect(test.screen48.msg1, "");
  expect(test.screen48.msg2, "");
  expect(test.screen48.msg1_size, 0);
  expect(test.screen48.msg2_size, 0);
  expect(test.screen48.sound1, 0);
  expect(test.screen48.sound2, 0);
  expect(test.screen48.sound3, 0);
  expect(test.screen48.snd_timer, 0);
  expect(test.screen48.timer1, 0);
  expect(test.screen48.timer2, 0);
  expect(test.screen48.timer3, 0);
  expect(test.screen48.dsp_flg1, 0);
  expect(test.screen48.dsp_flg2, 0);
  expect(test.screen48.movie01_ext, 0);
  expect(test.screen48.movie02_ext, 0);
  expect(test.screen48.movie03_ext, 0);
  expect(test.screen48.movie04_ext, 0);
  expect(test.screen48.line_title, "");
  expect(test.screen48.line_title_ex, "");
  expect(test.screen48.line1, "");
  expect(test.screen48.line2, "");
  expect(test.screen48.line3, "");
  expect(test.screen48.line4, "");
  expect(test.screen48.line1_ex, "");
  expect(test.screen48.line2_ex, "");
  expect(test.screen48.line3_ex, "");
  expect(test.screen48.line4_ex, "");
  expect(test.screen48.sound_led1, 0);
  expect(test.screen48.sound_led2, 0);
  expect(test.screen48.sound_led3, 0);
  expect(test.screen49.title, "");
  expect(test.screen49.msg1, "");
  expect(test.screen49.msg2, "");
  expect(test.screen49.msg1_size, 0);
  expect(test.screen49.msg2_size, 0);
  expect(test.screen49.sound1, 0);
  expect(test.screen49.sound2, 0);
  expect(test.screen49.sound3, 0);
  expect(test.screen49.snd_timer, 0);
  expect(test.screen49.timer1, 0);
  expect(test.screen49.timer2, 0);
  expect(test.screen49.timer3, 0);
  expect(test.screen49.dsp_flg1, 0);
  expect(test.screen49.dsp_flg2, 0);
  expect(test.screen49.movie01_ext, 0);
  expect(test.screen49.movie02_ext, 0);
  expect(test.screen49.movie03_ext, 0);
  expect(test.screen49.movie04_ext, 0);
  expect(test.screen49.line_title, "");
  expect(test.screen49.line_title_ex, "");
  expect(test.screen49.line1, "");
  expect(test.screen49.line2, "");
  expect(test.screen49.line3, "");
  expect(test.screen49.line4, "");
  expect(test.screen49.line1_ex, "");
  expect(test.screen49.line2_ex, "");
  expect(test.screen49.line3_ex, "");
  expect(test.screen49.line4_ex, "");
  expect(test.screen49.sound_led1, 0);
  expect(test.screen49.sound_led2, 0);
  expect(test.screen49.sound_led3, 0);
  expect(test.screen50.title, "");
  expect(test.screen50.msg1, "");
  expect(test.screen50.msg2, "");
  expect(test.screen50.msg1_size, 0);
  expect(test.screen50.msg2_size, 0);
  expect(test.screen50.sound1, 0);
  expect(test.screen50.sound2, 0);
  expect(test.screen50.sound3, 0);
  expect(test.screen50.snd_timer, 0);
  expect(test.screen50.timer1, 0);
  expect(test.screen50.timer2, 0);
  expect(test.screen50.timer3, 0);
  expect(test.screen50.dsp_flg1, 0);
  expect(test.screen50.dsp_flg2, 0);
  expect(test.screen50.movie01_ext, 0);
  expect(test.screen50.movie02_ext, 0);
  expect(test.screen50.movie03_ext, 0);
  expect(test.screen50.movie04_ext, 0);
  expect(test.screen50.line_title, "");
  expect(test.screen50.line_title_ex, "");
  expect(test.screen50.line1, "");
  expect(test.screen50.line2, "");
  expect(test.screen50.line3, "");
  expect(test.screen50.line4, "");
  expect(test.screen50.line1_ex, "");
  expect(test.screen50.line2_ex, "");
  expect(test.screen50.line3_ex, "");
  expect(test.screen50.line4_ex, "");
  expect(test.screen50.sound_led1, 0);
  expect(test.screen50.sound_led2, 0);
  expect(test.screen50.sound_led3, 0);
  expect(test.screen51.title, "");
  expect(test.screen51.msg1, "");
  expect(test.screen51.msg2, "");
  expect(test.screen51.msg1_size, 0);
  expect(test.screen51.msg2_size, 0);
  expect(test.screen51.sound1, 0);
  expect(test.screen51.sound2, 0);
  expect(test.screen51.sound3, "");
  expect(test.screen51.snd_timer, 0);
  expect(test.screen51.timer1, 0);
  expect(test.screen51.timer2, 0);
  expect(test.screen51.timer3, 0);
  expect(test.screen51.dsp_flg1, 0);
  expect(test.screen51.dsp_flg2, 0);
  expect(test.screen51.movie01_ext, 0);
  expect(test.screen51.movie02_ext, 0);
  expect(test.screen51.movie03_ext, 0);
  expect(test.screen51.movie04_ext, 0);
  expect(test.screen51.line_title, "");
  expect(test.screen51.line_title_ex, "");
  expect(test.screen51.line1, "");
  expect(test.screen51.line2, "");
  expect(test.screen51.line3, "");
  expect(test.screen51.line4, "");
  expect(test.screen51.line1_ex, "");
  expect(test.screen51.line2_ex, "");
  expect(test.screen51.line3_ex, "");
  expect(test.screen51.line4_ex, "");
  expect(test.screen51.sound_led1, 0);
  expect(test.screen51.sound_led2, 0);
  expect(test.screen51.sound_led3, "");
  expect(test.screen52.title, "");
  expect(test.screen52.msg1, "");
  expect(test.screen52.msg2, "");
  expect(test.screen52.msg1_size, 0);
  expect(test.screen52.msg2_size, 0);
  expect(test.screen52.sound1, 0);
  expect(test.screen52.sound2, 0);
  expect(test.screen52.sound3, 0);
  expect(test.screen52.snd_timer, 0);
  expect(test.screen52.timer1, 0);
  expect(test.screen52.timer2, 0);
  expect(test.screen52.timer3, 0);
  expect(test.screen52.dsp_flg1, 0);
  expect(test.screen52.dsp_flg2, 0);
  expect(test.screen52.movie01_ext, 0);
  expect(test.screen52.movie02_ext, 0);
  expect(test.screen52.movie03_ext, 0);
  expect(test.screen52.movie04_ext, 0);
  expect(test.screen52.line_title, "");
  expect(test.screen52.line_title_ex, "");
  expect(test.screen52.line1, "");
  expect(test.screen52.line2, "");
  expect(test.screen52.line3, "");
  expect(test.screen52.line4, "");
  expect(test.screen52.line1_ex, "");
  expect(test.screen52.line2_ex, "");
  expect(test.screen52.line3_ex, "");
  expect(test.screen52.line4_ex, "");
  expect(test.screen52.sound_led1, 0);
  expect(test.screen52.sound_led2, 0);
  expect(test.screen52.sound_led3, 0);
  expect(test.screen53.title, "");
  expect(test.screen53.msg1, "");
  expect(test.screen53.msg2, "");
  expect(test.screen53.msg1_size, 0);
  expect(test.screen53.msg2_size, 0);
  expect(test.screen53.sound1, 0);
  expect(test.screen53.sound2, 0);
  expect(test.screen53.sound3, 0);
  expect(test.screen53.snd_timer, 0);
  expect(test.screen53.timer1, 0);
  expect(test.screen53.timer2, 0);
  expect(test.screen53.timer3, 0);
  expect(test.screen53.dsp_flg1, 0);
  expect(test.screen53.dsp_flg2, 0);
  expect(test.screen53.movie01_ext, 0);
  expect(test.screen53.movie02_ext, 0);
  expect(test.screen53.movie03_ext, 0);
  expect(test.screen53.movie04_ext, 0);
  expect(test.screen53.line_title, "");
  expect(test.screen53.line_title_ex, "");
  expect(test.screen53.line1, "");
  expect(test.screen53.line2, "");
  expect(test.screen53.line3, "");
  expect(test.screen53.line4, "");
  expect(test.screen53.line1_ex, "");
  expect(test.screen53.line2_ex, "");
  expect(test.screen53.line3_ex, "");
  expect(test.screen53.line4_ex, "");
  expect(test.screen53.sound_led1, 0);
  expect(test.screen53.sound_led2, 0);
  expect(test.screen53.sound_led3, 0);
  expect(test.screen54.title, "");
  expect(test.screen54.msg1, "");
  expect(test.screen54.msg2, "");
  expect(test.screen54.msg1_size, 0);
  expect(test.screen54.msg2_size, 0);
  expect(test.screen54.sound1, 0);
  expect(test.screen54.sound2, 0);
  expect(test.screen54.sound3, "");
  expect(test.screen54.snd_timer, 0);
  expect(test.screen54.timer1, 0);
  expect(test.screen54.timer2, 0);
  expect(test.screen54.timer3, 0);
  expect(test.screen54.dsp_flg1, 0);
  expect(test.screen54.dsp_flg2, 0);
  expect(test.screen54.movie01_ext, 0);
  expect(test.screen54.movie02_ext, 0);
  expect(test.screen54.movie03_ext, 0);
  expect(test.screen54.movie04_ext, 0);
  expect(test.screen54.line_title, "");
  expect(test.screen54.line_title_ex, "");
  expect(test.screen54.line1, "");
  expect(test.screen54.line2, "");
  expect(test.screen54.line3, "");
  expect(test.screen54.line4, "");
  expect(test.screen54.line1_ex, "");
  expect(test.screen54.line2_ex, "");
  expect(test.screen54.line3_ex, "");
  expect(test.screen54.line4_ex, "");
  expect(test.screen54.sound_led1, 0);
  expect(test.screen54.sound_led2, 0);
  expect(test.screen54.sound_led3, "");
  expect(test.screen55.title, "");
  expect(test.screen55.msg1, "");
  expect(test.screen55.msg2, "");
  expect(test.screen55.msg1_size, 0);
  expect(test.screen55.msg2_size, 0);
  expect(test.screen55.sound1, 0);
  expect(test.screen55.sound2, 0);
  expect(test.screen55.sound3, 0);
  expect(test.screen55.snd_timer, 0);
  expect(test.screen55.timer1, 0);
  expect(test.screen55.timer2, 0);
  expect(test.screen55.timer3, 0);
  expect(test.screen55.dsp_flg1, 0);
  expect(test.screen55.dsp_flg2, 0);
  expect(test.screen55.movie01_ext, 0);
  expect(test.screen55.movie02_ext, 0);
  expect(test.screen55.movie03_ext, 0);
  expect(test.screen55.movie04_ext, 0);
  expect(test.screen55.line_title, "");
  expect(test.screen55.line_title_ex, "");
  expect(test.screen55.line1, "");
  expect(test.screen55.line2, "");
  expect(test.screen55.line3, "");
  expect(test.screen55.line4, "");
  expect(test.screen55.line1_ex, "");
  expect(test.screen55.line2_ex, "");
  expect(test.screen55.line3_ex, "");
  expect(test.screen55.line4_ex, "");
  expect(test.screen55.sound_led1, 0);
  expect(test.screen55.sound_led2, 0);
  expect(test.screen55.sound_led3, 0);
  expect(test.screen56.title, "");
  expect(test.screen56.msg1, "");
  expect(test.screen56.msg2, "");
  expect(test.screen56.msg1_size, 0);
  expect(test.screen56.msg2_size, 0);
  expect(test.screen56.sound1, 0);
  expect(test.screen56.sound2, 0);
  expect(test.screen56.sound3, 0);
  expect(test.screen56.snd_timer, 0);
  expect(test.screen56.timer1, 0);
  expect(test.screen56.timer2, 0);
  expect(test.screen56.timer3, 0);
  expect(test.screen56.dsp_flg1, 0);
  expect(test.screen56.dsp_flg2, 0);
  expect(test.screen56.movie01_ext, 0);
  expect(test.screen56.movie02_ext, 0);
  expect(test.screen56.movie03_ext, 0);
  expect(test.screen56.movie04_ext, 0);
  expect(test.screen56.line_title, "");
  expect(test.screen56.line_title_ex, "");
  expect(test.screen56.line1, "");
  expect(test.screen56.line2, "");
  expect(test.screen56.line3, "");
  expect(test.screen56.line4, "");
  expect(test.screen56.line1_ex, "");
  expect(test.screen56.line2_ex, "");
  expect(test.screen56.line3_ex, "");
  expect(test.screen56.line4_ex, "");
  expect(test.screen56.sound_led1, 0);
  expect(test.screen56.sound_led2, 0);
  expect(test.screen56.sound_led3, 0);
  expect(test.screen57.title, "");
  expect(test.screen57.msg1, "");
  expect(test.screen57.msg2, "");
  expect(test.screen57.msg1_size, 0);
  expect(test.screen57.msg2_size, 0);
  expect(test.screen57.sound1, 0);
  expect(test.screen57.sound2, 0);
  expect(test.screen57.sound3, "");
  expect(test.screen57.snd_timer, 0);
  expect(test.screen57.timer1, 0);
  expect(test.screen57.timer2, 0);
  expect(test.screen57.timer3, 0);
  expect(test.screen57.dsp_flg1, 0);
  expect(test.screen57.dsp_flg2, 0);
  expect(test.screen57.movie01_ext, 0);
  expect(test.screen57.movie02_ext, 0);
  expect(test.screen57.movie03_ext, 0);
  expect(test.screen57.movie04_ext, 0);
  expect(test.screen57.line_title, "");
  expect(test.screen57.line_title_ex, "");
  expect(test.screen57.line1, "");
  expect(test.screen57.line2, "");
  expect(test.screen57.line3, "");
  expect(test.screen57.line4, "");
  expect(test.screen57.line1_ex, "");
  expect(test.screen57.line2_ex, "");
  expect(test.screen57.line3_ex, "");
  expect(test.screen57.line4_ex, "");
  expect(test.screen57.sound_led1, 0);
  expect(test.screen57.sound_led2, 0);
  expect(test.screen57.sound_led3, "");
  expect(test.screen58.title, "");
  expect(test.screen58.msg1, "");
  expect(test.screen58.msg2, "");
  expect(test.screen58.msg1_size, 0);
  expect(test.screen58.msg2_size, 0);
  expect(test.screen58.sound1, 0);
  expect(test.screen58.sound2, 0);
  expect(test.screen58.sound3, 0);
  expect(test.screen58.snd_timer, 0);
  expect(test.screen58.timer1, 0);
  expect(test.screen58.timer2, 0);
  expect(test.screen58.timer3, 0);
  expect(test.screen58.dsp_flg1, 0);
  expect(test.screen58.dsp_flg2, 0);
  expect(test.screen58.movie01_ext, 0);
  expect(test.screen58.movie02_ext, 0);
  expect(test.screen58.movie03_ext, 0);
  expect(test.screen58.movie04_ext, 0);
  expect(test.screen58.line_title, "");
  expect(test.screen58.line_title_ex, "");
  expect(test.screen58.line1, "");
  expect(test.screen58.line2, "");
  expect(test.screen58.line3, "");
  expect(test.screen58.line4, "");
  expect(test.screen58.line1_ex, "");
  expect(test.screen58.line2_ex, "");
  expect(test.screen58.line3_ex, "");
  expect(test.screen58.line4_ex, "");
  expect(test.screen58.sound_led1, 0);
  expect(test.screen58.sound_led2, 0);
  expect(test.screen58.sound_led3, 0);
  expect(test.screen59.title, "");
  expect(test.screen59.msg1, "");
  expect(test.screen59.msg2, "");
  expect(test.screen59.msg1_size, 0);
  expect(test.screen59.msg2_size, 0);
  expect(test.screen59.sound1, 0);
  expect(test.screen59.sound2, 0);
  expect(test.screen59.sound3, 0);
  expect(test.screen59.snd_timer, 0);
  expect(test.screen59.timer1, 0);
  expect(test.screen59.timer2, 0);
  expect(test.screen59.timer3, 0);
  expect(test.screen59.dsp_flg1, 0);
  expect(test.screen59.dsp_flg2, 0);
  expect(test.screen59.movie01_ext, 0);
  expect(test.screen59.movie02_ext, 0);
  expect(test.screen59.movie03_ext, 0);
  expect(test.screen59.movie04_ext, 0);
  expect(test.screen59.line_title, "");
  expect(test.screen59.line_title_ex, "");
  expect(test.screen59.line1, "");
  expect(test.screen59.line2, "");
  expect(test.screen59.line3, "");
  expect(test.screen59.line4, "");
  expect(test.screen59.line1_ex, "");
  expect(test.screen59.line2_ex, "");
  expect(test.screen59.line3_ex, "");
  expect(test.screen59.line4_ex, "");
  expect(test.screen59.sound_led1, 0);
  expect(test.screen59.sound_led2, 0);
  expect(test.screen59.sound_led3, 0);
  expect(test.screen60.title, "");
  expect(test.screen60.msg1, "");
  expect(test.screen60.msg2, "");
  expect(test.screen60.msg1_size, 0);
  expect(test.screen60.msg2_size, 0);
  expect(test.screen60.sound1, 0);
  expect(test.screen60.sound2, 0);
  expect(test.screen60.sound3, "");
  expect(test.screen60.snd_timer, 0);
  expect(test.screen60.timer1, 0);
  expect(test.screen60.timer2, 0);
  expect(test.screen60.timer3, 0);
  expect(test.screen60.dsp_flg1, 0);
  expect(test.screen60.dsp_flg2, 0);
  expect(test.screen60.movie01_ext, 0);
  expect(test.screen60.movie02_ext, 0);
  expect(test.screen60.movie03_ext, 0);
  expect(test.screen60.movie04_ext, 0);
  expect(test.screen60.line_title, "");
  expect(test.screen60.line_title_ex, "");
  expect(test.screen60.line1, "");
  expect(test.screen60.line2, "");
  expect(test.screen60.line3, "");
  expect(test.screen60.line4, "");
  expect(test.screen60.line1_ex, "");
  expect(test.screen60.line2_ex, "");
  expect(test.screen60.line3_ex, "");
  expect(test.screen60.line4_ex, "");
  expect(test.screen60.sound_led1, 0);
  expect(test.screen60.sound_led2, 0);
  expect(test.screen60.sound_led3, "");
  expect(test.screen61.title, "");
  expect(test.screen61.msg1, "");
  expect(test.screen61.msg2, "");
  expect(test.screen61.msg1_size, 0);
  expect(test.screen61.msg2_size, 0);
  expect(test.screen61.sound1, 0);
  expect(test.screen61.sound2, 0);
  expect(test.screen61.sound3, 0);
  expect(test.screen61.snd_timer, 0);
  expect(test.screen61.timer1, 0);
  expect(test.screen61.timer2, 0);
  expect(test.screen61.timer3, 0);
  expect(test.screen61.dsp_flg1, 0);
  expect(test.screen61.dsp_flg2, 0);
  expect(test.screen61.movie01_ext, 0);
  expect(test.screen61.movie02_ext, 0);
  expect(test.screen61.movie03_ext, 0);
  expect(test.screen61.movie04_ext, 0);
  expect(test.screen61.line_title, "");
  expect(test.screen61.line_title_ex, "");
  expect(test.screen61.line1, "");
  expect(test.screen61.line2, "");
  expect(test.screen61.line3, "");
  expect(test.screen61.line4, "");
  expect(test.screen61.line1_ex, "");
  expect(test.screen61.line2_ex, "");
  expect(test.screen61.line3_ex, "");
  expect(test.screen61.line4_ex, "");
  expect(test.screen61.sound_led1, 0);
  expect(test.screen61.sound_led2, 0);
  expect(test.screen61.sound_led3, 0);
  expect(test.screen62.title, "");
  expect(test.screen62.msg1, "");
  expect(test.screen62.msg2, "");
  expect(test.screen62.msg1_size, 0);
  expect(test.screen62.msg2_size, 0);
  expect(test.screen62.sound1, 0);
  expect(test.screen62.sound2, 0);
  expect(test.screen62.sound3, 0);
  expect(test.screen62.snd_timer, 0);
  expect(test.screen62.timer1, 0);
  expect(test.screen62.timer2, 0);
  expect(test.screen62.timer3, 0);
  expect(test.screen62.dsp_flg1, 0);
  expect(test.screen62.dsp_flg2, 0);
  expect(test.screen62.movie01_ext, 0);
  expect(test.screen62.movie02_ext, 0);
  expect(test.screen62.movie03_ext, 0);
  expect(test.screen62.movie04_ext, 0);
  expect(test.screen62.line_title, "");
  expect(test.screen62.line_title_ex, "");
  expect(test.screen62.line1, "");
  expect(test.screen62.line2, "");
  expect(test.screen62.line3, "");
  expect(test.screen62.line4, "");
  expect(test.screen62.line1_ex, "");
  expect(test.screen62.line2_ex, "");
  expect(test.screen62.line3_ex, "");
  expect(test.screen62.line4_ex, "");
  expect(test.screen62.sound_led1, 0);
  expect(test.screen62.sound_led2, 0);
  expect(test.screen62.sound_led3, 0);
  expect(test.screen63.title, "");
  expect(test.screen63.msg1, "");
  expect(test.screen63.msg2, "");
  expect(test.screen63.msg1_size, 0);
  expect(test.screen63.msg2_size, 0);
  expect(test.screen63.sound1, 0);
  expect(test.screen63.sound2, 0);
  expect(test.screen63.sound3, "");
  expect(test.screen63.snd_timer, 0);
  expect(test.screen63.timer1, 0);
  expect(test.screen63.timer2, 0);
  expect(test.screen63.timer3, 0);
  expect(test.screen63.dsp_flg1, 0);
  expect(test.screen63.dsp_flg2, 0);
  expect(test.screen63.movie01_ext, 0);
  expect(test.screen63.movie02_ext, 0);
  expect(test.screen63.movie03_ext, 0);
  expect(test.screen63.movie04_ext, 0);
  expect(test.screen63.line_title, "");
  expect(test.screen63.line_title_ex, "");
  expect(test.screen63.line1, "");
  expect(test.screen63.line2, "");
  expect(test.screen63.line3, "");
  expect(test.screen63.line4, "");
  expect(test.screen63.line1_ex, "");
  expect(test.screen63.line2_ex, "");
  expect(test.screen63.line3_ex, "");
  expect(test.screen63.line4_ex, "");
  expect(test.screen63.sound_led1, 0);
  expect(test.screen63.sound_led2, 0);
  expect(test.screen63.sound_led3, "");
  expect(test.screen64.title, "");
  expect(test.screen64.msg1, "");
  expect(test.screen64.msg2, "");
  expect(test.screen64.msg1_size, 0);
  expect(test.screen64.msg2_size, 0);
  expect(test.screen64.sound1, 0);
  expect(test.screen64.sound2, 0);
  expect(test.screen64.sound3, 0);
  expect(test.screen64.snd_timer, 0);
  expect(test.screen64.timer1, 0);
  expect(test.screen64.timer2, 0);
  expect(test.screen64.timer3, 0);
  expect(test.screen64.dsp_flg1, 0);
  expect(test.screen64.dsp_flg2, 0);
  expect(test.screen64.movie01_ext, 0);
  expect(test.screen64.movie02_ext, 0);
  expect(test.screen64.movie03_ext, 0);
  expect(test.screen64.movie04_ext, 0);
  expect(test.screen64.line_title, "");
  expect(test.screen64.line_title_ex, "");
  expect(test.screen64.line1, "");
  expect(test.screen64.line2, "");
  expect(test.screen64.line3, "");
  expect(test.screen64.line4, "");
  expect(test.screen64.line1_ex, "");
  expect(test.screen64.line2_ex, "");
  expect(test.screen64.line3_ex, "");
  expect(test.screen64.line4_ex, "");
  expect(test.screen64.sound_led1, 0);
  expect(test.screen64.sound_led2, 0);
  expect(test.screen64.sound_led3, 0);
  expect(test.screen65.title, "");
  expect(test.screen65.msg1, "");
  expect(test.screen65.msg2, "");
  expect(test.screen65.msg1_size, 0);
  expect(test.screen65.msg2_size, 0);
  expect(test.screen65.sound1, 0);
  expect(test.screen65.sound2, 0);
  expect(test.screen65.sound3, 0);
  expect(test.screen65.snd_timer, 0);
  expect(test.screen65.timer1, 0);
  expect(test.screen65.timer2, 0);
  expect(test.screen65.timer3, 0);
  expect(test.screen65.dsp_flg1, 0);
  expect(test.screen65.dsp_flg2, 0);
  expect(test.screen65.movie01_ext, 0);
  expect(test.screen65.movie02_ext, 0);
  expect(test.screen65.movie03_ext, 0);
  expect(test.screen65.movie04_ext, 0);
  expect(test.screen65.line_title, "");
  expect(test.screen65.line_title_ex, "");
  expect(test.screen65.line1, "");
  expect(test.screen65.line2, "");
  expect(test.screen65.line3, "");
  expect(test.screen65.line4, "");
  expect(test.screen65.line1_ex, "");
  expect(test.screen65.line2_ex, "");
  expect(test.screen65.line3_ex, "");
  expect(test.screen65.line4_ex, "");
  expect(test.screen65.sound_led1, 0);
  expect(test.screen65.sound_led2, 0);
  expect(test.screen65.sound_led3, 0);
  expect(test.screen67.title, "");
  expect(test.screen67.msg1, "");
  expect(test.screen67.msg2, "");
  expect(test.screen67.msg1_size, 0);
  expect(test.screen67.msg2_size, 0);
  expect(test.screen67.sound1, 0);
  expect(test.screen67.sound2, 0);
  expect(test.screen67.sound3, 0);
  expect(test.screen67.snd_timer, 0);
  expect(test.screen67.timer1, 0);
  expect(test.screen67.timer2, 0);
  expect(test.screen67.timer3, 0);
  expect(test.screen67.dsp_flg1, 0);
  expect(test.screen67.dsp_flg2, 0);
  expect(test.screen67.movie01_ext, 0);
  expect(test.screen67.movie02_ext, 0);
  expect(test.screen67.movie03_ext, 0);
  expect(test.screen67.movie04_ext, 0);
  expect(test.screen67.line_title, "");
  expect(test.screen67.line_title_ex, "");
  expect(test.screen67.line1, "");
  expect(test.screen67.line2, "");
  expect(test.screen67.line3, "");
  expect(test.screen67.line4, "");
  expect(test.screen67.line1_ex, "");
  expect(test.screen67.line2_ex, "");
  expect(test.screen67.line3_ex, "");
  expect(test.screen67.line4_ex, "");
  expect(test.screen67.sound_led1, 0);
  expect(test.screen67.sound_led2, 0);
  expect(test.screen67.sound_led3, 0);
  expect(test.screen68.title, "");
  expect(test.screen68.msg1, "");
  expect(test.screen68.msg2, "");
  expect(test.screen68.msg1_size, 0);
  expect(test.screen68.msg2_size, 0);
  expect(test.screen68.sound1, 0);
  expect(test.screen68.sound2, 0);
  expect(test.screen68.sound3, 0);
  expect(test.screen68.snd_timer, 0);
  expect(test.screen68.timer1, 0);
  expect(test.screen68.timer2, 0);
  expect(test.screen68.timer3, 0);
  expect(test.screen68.dsp_flg1, 0);
  expect(test.screen68.dsp_flg2, 0);
  expect(test.screen68.movie01_ext, 0);
  expect(test.screen68.movie02_ext, 0);
  expect(test.screen68.movie03_ext, 0);
  expect(test.screen68.movie04_ext, 0);
  expect(test.screen68.line_title, "");
  expect(test.screen68.line_title_ex, "");
  expect(test.screen68.line1, "");
  expect(test.screen68.line2, "");
  expect(test.screen68.line3, "");
  expect(test.screen68.line4, "");
  expect(test.screen68.line1_ex, "");
  expect(test.screen68.line2_ex, "");
  expect(test.screen68.line3_ex, "");
  expect(test.screen68.line4_ex, "");
  expect(test.screen68.sound_led1, 0);
  expect(test.screen68.sound_led2, 0);
  expect(test.screen68.sound_led3, 0);
  expect(test.screen69.title, "");
  expect(test.screen69.msg1, "");
  expect(test.screen69.msg2, "");
  expect(test.screen69.msg1_size, 0);
  expect(test.screen69.msg2_size, 0);
  expect(test.screen69.sound1, 0);
  expect(test.screen69.sound2, 0);
  expect(test.screen69.sound3, 0);
  expect(test.screen69.snd_timer, 0);
  expect(test.screen69.timer1, 0);
  expect(test.screen69.timer2, 0);
  expect(test.screen69.timer3, 0);
  expect(test.screen69.dsp_flg1, 0);
  expect(test.screen69.dsp_flg2, 0);
  expect(test.screen69.movie01_ext, 0);
  expect(test.screen69.movie02_ext, 0);
  expect(test.screen69.movie03_ext, 0);
  expect(test.screen69.movie04_ext, 0);
  expect(test.screen69.line_title, "");
  expect(test.screen69.line_title_ex, "");
  expect(test.screen69.line1, "");
  expect(test.screen69.line2, "");
  expect(test.screen69.line3, "");
  expect(test.screen69.line4, "");
  expect(test.screen69.line1_ex, "");
  expect(test.screen69.line2_ex, "");
  expect(test.screen69.line3_ex, "");
  expect(test.screen69.line4_ex, "");
  expect(test.screen69.sound_led1, 0);
  expect(test.screen69.sound_led2, 0);
  expect(test.screen69.sound_led3, 0);
  expect(test.screen70.title, "");
  expect(test.screen70.msg1, "");
  expect(test.screen70.msg2, "");
  expect(test.screen70.msg1_size, 0);
  expect(test.screen70.msg2_size, 0);
  expect(test.screen70.sound1, 0);
  expect(test.screen70.sound2, 0);
  expect(test.screen70.sound3, 0);
  expect(test.screen70.snd_timer, 0);
  expect(test.screen70.timer1, 0);
  expect(test.screen70.timer2, 0);
  expect(test.screen70.timer3, 0);
  expect(test.screen70.dsp_flg1, 0);
  expect(test.screen70.dsp_flg2, 0);
  expect(test.screen70.movie01_ext, 0);
  expect(test.screen70.movie02_ext, 0);
  expect(test.screen70.movie03_ext, 0);
  expect(test.screen70.movie04_ext, 0);
  expect(test.screen70.line_title, "");
  expect(test.screen70.line_title_ex, "");
  expect(test.screen70.line1, "");
  expect(test.screen70.line2, "");
  expect(test.screen70.line3, "");
  expect(test.screen70.line4, "");
  expect(test.screen70.line1_ex, "");
  expect(test.screen70.line2_ex, "");
  expect(test.screen70.line3_ex, "");
  expect(test.screen70.line4_ex, "");
  expect(test.screen70.sound_led1, 0);
  expect(test.screen70.sound_led2, 0);
  expect(test.screen70.sound_led3, 0);
  expect(test.screen71.title, "");
  expect(test.screen71.msg1, "");
  expect(test.screen71.msg2, "");
  expect(test.screen71.msg1_size, 0);
  expect(test.screen71.msg2_size, 0);
  expect(test.screen71.sound1, 0);
  expect(test.screen71.sound2, 0);
  expect(test.screen71.sound3, 0);
  expect(test.screen71.snd_timer, 0);
  expect(test.screen71.timer1, 0);
  expect(test.screen71.timer2, 0);
  expect(test.screen71.timer3, 0);
  expect(test.screen71.dsp_flg1, 0);
  expect(test.screen71.dsp_flg2, 0);
  expect(test.screen71.movie01_ext, 0);
  expect(test.screen71.movie02_ext, 0);
  expect(test.screen71.movie03_ext, 0);
  expect(test.screen71.movie04_ext, 0);
  expect(test.screen71.line_title, "");
  expect(test.screen71.line_title_ex, "");
  expect(test.screen71.line1, "");
  expect(test.screen71.line2, "");
  expect(test.screen71.line3, "");
  expect(test.screen71.line4, "");
  expect(test.screen71.line1_ex, "");
  expect(test.screen71.line2_ex, "");
  expect(test.screen71.line3_ex, "");
  expect(test.screen71.line4_ex, "");
  expect(test.screen71.sound_led1, 0);
  expect(test.screen71.sound_led2, 0);
  expect(test.screen71.sound_led3, 0);
  expect(test.screen72.title, "");
  expect(test.screen72.msg1, "");
  expect(test.screen72.msg2, "");
  expect(test.screen72.msg1_size, 0);
  expect(test.screen72.msg2_size, 0);
  expect(test.screen72.sound1, 0);
  expect(test.screen72.sound2, 0);
  expect(test.screen72.sound3, 0);
  expect(test.screen72.snd_timer, 0);
  expect(test.screen72.timer1, 0);
  expect(test.screen72.timer2, 0);
  expect(test.screen72.timer3, 0);
  expect(test.screen72.dsp_flg1, 0);
  expect(test.screen72.dsp_flg2, 0);
  expect(test.screen72.movie01_ext, 0);
  expect(test.screen72.movie02_ext, 0);
  expect(test.screen72.movie03_ext, 0);
  expect(test.screen72.movie04_ext, 0);
  expect(test.screen72.line_title, "");
  expect(test.screen72.line_title_ex, "");
  expect(test.screen72.line1, "");
  expect(test.screen72.line2, "");
  expect(test.screen72.line3, "");
  expect(test.screen72.line4, "");
  expect(test.screen72.line1_ex, "");
  expect(test.screen72.line2_ex, "");
  expect(test.screen72.line3_ex, "");
  expect(test.screen72.line4_ex, "");
  expect(test.screen72.sound_led1, 0);
  expect(test.screen72.sound_led2, 0);
  expect(test.screen72.sound_led3, 0);
  expect(test.screen73.title, "");
  expect(test.screen73.msg1, "");
  expect(test.screen73.msg2, "");
  expect(test.screen73.msg1_size, 0);
  expect(test.screen73.msg2_size, 0);
  expect(test.screen73.sound1, 0);
  expect(test.screen73.sound2, 0);
  expect(test.screen73.sound3, 0);
  expect(test.screen73.snd_timer, 0);
  expect(test.screen73.timer1, 0);
  expect(test.screen73.timer2, 0);
  expect(test.screen73.timer3, 0);
  expect(test.screen73.dsp_flg1, 0);
  expect(test.screen73.dsp_flg2, 0);
  expect(test.screen73.movie01_ext, 0);
  expect(test.screen73.movie02_ext, 0);
  expect(test.screen73.movie03_ext, 0);
  expect(test.screen73.movie04_ext, 0);
  expect(test.screen73.line_title, "");
  expect(test.screen73.line_title_ex, "");
  expect(test.screen73.line1, "");
  expect(test.screen73.line2, "");
  expect(test.screen73.line3, "");
  expect(test.screen73.line4, "");
  expect(test.screen73.line1_ex, "");
  expect(test.screen73.line2_ex, "");
  expect(test.screen73.line3_ex, "");
  expect(test.screen73.line4_ex, "");
  expect(test.screen73.sound_led1, 0);
  expect(test.screen73.sound_led2, 0);
  expect(test.screen73.sound_led3, 0);
  expect(test.screen74.title, "");
  expect(test.screen74.msg1, "");
  expect(test.screen74.msg2, "");
  expect(test.screen74.msg1_size, 0);
  expect(test.screen74.msg2_size, 0);
  expect(test.screen74.sound1, 0);
  expect(test.screen74.sound2, 0);
  expect(test.screen74.sound3, 0);
  expect(test.screen74.snd_timer, 0);
  expect(test.screen74.timer1, 0);
  expect(test.screen74.timer2, 0);
  expect(test.screen74.timer3, 0);
  expect(test.screen74.dsp_flg1, 0);
  expect(test.screen74.dsp_flg2, 0);
  expect(test.screen74.movie01_ext, 0);
  expect(test.screen74.movie02_ext, 0);
  expect(test.screen74.movie03_ext, 0);
  expect(test.screen74.movie04_ext, 0);
  expect(test.screen74.line_title, "");
  expect(test.screen74.line_title_ex, "");
  expect(test.screen74.line1, "");
  expect(test.screen74.line2, "");
  expect(test.screen74.line3, "");
  expect(test.screen74.line4, "");
  expect(test.screen74.line1_ex, "");
  expect(test.screen74.line2_ex, "");
  expect(test.screen74.line3_ex, "");
  expect(test.screen74.line4_ex, "");
  expect(test.screen74.sound_led1, 0);
  expect(test.screen74.sound_led2, 0);
  expect(test.screen74.sound_led3, 0);
  expect(test.screen75.title, "");
  expect(test.screen75.msg1, "");
  expect(test.screen75.msg2, "");
  expect(test.screen75.msg1_size, 0);
  expect(test.screen75.msg2_size, 0);
  expect(test.screen75.sound1, 0);
  expect(test.screen75.sound2, 0);
  expect(test.screen75.sound3, 0);
  expect(test.screen75.snd_timer, 0);
  expect(test.screen75.timer1, 0);
  expect(test.screen75.timer2, 0);
  expect(test.screen75.timer3, 0);
  expect(test.screen75.dsp_flg1, 0);
  expect(test.screen75.dsp_flg2, 0);
  expect(test.screen75.movie01_ext, 0);
  expect(test.screen75.movie02_ext, 0);
  expect(test.screen75.movie03_ext, 0);
  expect(test.screen75.movie04_ext, 0);
  expect(test.screen75.line_title, "");
  expect(test.screen75.line_title_ex, "");
  expect(test.screen75.line1, "");
  expect(test.screen75.line2, "");
  expect(test.screen75.line3, "");
  expect(test.screen75.line4, "");
  expect(test.screen75.line1_ex, "");
  expect(test.screen75.line2_ex, "");
  expect(test.screen75.line3_ex, "");
  expect(test.screen75.line4_ex, "");
  expect(test.screen75.sound_led1, 0);
  expect(test.screen75.sound_led2, 0);
  expect(test.screen75.sound_led3, 0);
  expect(test.screen76.title, "");
  expect(test.screen76.msg1, "");
  expect(test.screen76.msg2, "");
  expect(test.screen76.msg1_size, 0);
  expect(test.screen76.msg2_size, 0);
  expect(test.screen76.sound1, 0);
  expect(test.screen76.sound2, 0);
  expect(test.screen76.sound3, 0);
  expect(test.screen76.snd_timer, 0);
  expect(test.screen76.timer1, 0);
  expect(test.screen76.timer2, 0);
  expect(test.screen76.timer3, 0);
  expect(test.screen76.dsp_flg1, 0);
  expect(test.screen76.dsp_flg2, 0);
  expect(test.screen76.movie01_ext, 0);
  expect(test.screen76.movie02_ext, 0);
  expect(test.screen76.movie03_ext, 0);
  expect(test.screen76.movie04_ext, 0);
  expect(test.screen76.line_title, "");
  expect(test.screen76.line_title_ex, "");
  expect(test.screen76.line1, "");
  expect(test.screen76.line2, "");
  expect(test.screen76.line3, "");
  expect(test.screen76.line4, "");
  expect(test.screen76.line1_ex, "");
  expect(test.screen76.line2_ex, "");
  expect(test.screen76.line3_ex, "");
  expect(test.screen76.line4_ex, "");
  expect(test.screen76.sound_led1, 0);
  expect(test.screen76.sound_led2, 0);
  expect(test.screen76.sound_led3, 0);
  expect(test.screen77.title, "");
  expect(test.screen77.msg1, "");
  expect(test.screen77.msg2, "");
  expect(test.screen77.msg1_size, 0);
  expect(test.screen77.msg2_size, 0);
  expect(test.screen77.sound1, 0);
  expect(test.screen77.sound2, 0);
  expect(test.screen77.sound3, 0);
  expect(test.screen77.snd_timer, 0);
  expect(test.screen77.timer1, 0);
  expect(test.screen77.timer2, 0);
  expect(test.screen77.timer3, 0);
  expect(test.screen77.dsp_flg1, 0);
  expect(test.screen77.dsp_flg2, 0);
  expect(test.screen77.movie01_ext, 0);
  expect(test.screen77.movie02_ext, 0);
  expect(test.screen77.movie03_ext, 0);
  expect(test.screen77.movie04_ext, 0);
  expect(test.screen77.line_title, "");
  expect(test.screen77.line_title_ex, "");
  expect(test.screen77.line1, "");
  expect(test.screen77.line2, "");
  expect(test.screen77.line3, "");
  expect(test.screen77.line4, "");
  expect(test.screen77.line1_ex, "");
  expect(test.screen77.line2_ex, "");
  expect(test.screen77.line3_ex, "");
  expect(test.screen77.line4_ex, "");
  expect(test.screen77.sound_led1, 0);
  expect(test.screen77.sound_led2, 0);
  expect(test.screen77.sound_led3, 0);
  expect(test.screen78.title, "");
  expect(test.screen78.msg1, "");
  expect(test.screen78.msg2, "");
  expect(test.screen78.msg1_size, 0);
  expect(test.screen78.msg2_size, 0);
  expect(test.screen78.sound1, 0);
  expect(test.screen78.sound2, 0);
  expect(test.screen78.sound3, 0);
  expect(test.screen78.snd_timer, 0);
  expect(test.screen78.timer1, 0);
  expect(test.screen78.timer2, 0);
  expect(test.screen78.timer3, 0);
  expect(test.screen78.dsp_flg1, 0);
  expect(test.screen78.dsp_flg2, 0);
  expect(test.screen78.movie01_ext, 0);
  expect(test.screen78.movie02_ext, 0);
  expect(test.screen78.movie03_ext, 0);
  expect(test.screen78.movie04_ext, 0);
  expect(test.screen78.line_title, "");
  expect(test.screen78.line_title_ex, "");
  expect(test.screen78.line1, "");
  expect(test.screen78.line2, "");
  expect(test.screen78.line3, "");
  expect(test.screen78.line4, "");
  expect(test.screen78.line1_ex, "");
  expect(test.screen78.line2_ex, "");
  expect(test.screen78.line3_ex, "");
  expect(test.screen78.line4_ex, "");
  expect(test.screen78.sound_led1, 0);
  expect(test.screen78.sound_led2, 0);
  expect(test.screen78.sound_led3, 0);
  expect(test.screen79.title, "");
  expect(test.screen79.msg1, "");
  expect(test.screen79.msg2, "");
  expect(test.screen79.msg1_size, 0);
  expect(test.screen79.msg2_size, 0);
  expect(test.screen79.sound1, 0);
  expect(test.screen79.sound2, 0);
  expect(test.screen79.sound3, 0);
  expect(test.screen79.snd_timer, 0);
  expect(test.screen79.timer1, 0);
  expect(test.screen79.timer2, 0);
  expect(test.screen79.timer3, 0);
  expect(test.screen79.dsp_flg1, 0);
  expect(test.screen79.dsp_flg2, 0);
  expect(test.screen79.movie01_ext, 0);
  expect(test.screen79.movie02_ext, 0);
  expect(test.screen79.movie03_ext, 0);
  expect(test.screen79.movie04_ext, 0);
  expect(test.screen79.line_title, "");
  expect(test.screen79.line_title_ex, "");
  expect(test.screen79.line1, "");
  expect(test.screen79.line2, "");
  expect(test.screen79.line3, "");
  expect(test.screen79.line4, "");
  expect(test.screen79.line1_ex, "");
  expect(test.screen79.line2_ex, "");
  expect(test.screen79.line3_ex, "");
  expect(test.screen79.line4_ex, "");
  expect(test.screen79.sound_led1, 0);
  expect(test.screen79.sound_led2, 0);
  expect(test.screen79.sound_led3, 0);
  expect(test.screen81.title, "");
  expect(test.screen81.msg1, "");
  expect(test.screen81.msg2, "");
  expect(test.screen81.msg1_size, 0);
  expect(test.screen81.msg2_size, 0);
  expect(test.screen81.sound1, 0);
  expect(test.screen81.sound2, 0);
  expect(test.screen81.sound3, 0);
  expect(test.screen81.snd_timer, 0);
  expect(test.screen81.timer1, 0);
  expect(test.screen81.timer2, 0);
  expect(test.screen81.timer3, 0);
  expect(test.screen81.dsp_flg1, 0);
  expect(test.screen81.dsp_flg2, 0);
  expect(test.screen81.movie01_ext, 0);
  expect(test.screen81.movie02_ext, 0);
  expect(test.screen81.movie03_ext, 0);
  expect(test.screen81.movie04_ext, 0);
  expect(test.screen81.line_title, "");
  expect(test.screen81.line_title_ex, "");
  expect(test.screen81.line1, "");
  expect(test.screen81.line2, "");
  expect(test.screen81.line3, "");
  expect(test.screen81.line4, "");
  expect(test.screen81.line1_ex, "");
  expect(test.screen81.line2_ex, "");
  expect(test.screen81.line3_ex, "");
  expect(test.screen81.line4_ex, "");
  expect(test.screen81.sound_led1, 0);
  expect(test.screen81.sound_led2, 0);
  expect(test.screen81.sound_led3, 0);
  expect(test.screen82.title, "");
  expect(test.screen82.msg1, "");
  expect(test.screen82.msg2, "");
  expect(test.screen82.msg1_size, 0);
  expect(test.screen82.msg2_size, 0);
  expect(test.screen82.sound1, 0);
  expect(test.screen82.sound2, 0);
  expect(test.screen82.sound3, 0);
  expect(test.screen82.snd_timer, 0);
  expect(test.screen82.timer1, 0);
  expect(test.screen82.timer2, 0);
  expect(test.screen82.timer3, 0);
  expect(test.screen82.dsp_flg1, 0);
  expect(test.screen82.dsp_flg2, 0);
  expect(test.screen82.movie01_ext, 0);
  expect(test.screen82.movie02_ext, 0);
  expect(test.screen82.movie03_ext, 0);
  expect(test.screen82.movie04_ext, 0);
  expect(test.screen82.line_title, "");
  expect(test.screen82.line_title_ex, "");
  expect(test.screen82.line1, "");
  expect(test.screen82.line2, "");
  expect(test.screen82.line3, "");
  expect(test.screen82.line4, "");
  expect(test.screen82.line1_ex, "");
  expect(test.screen82.line2_ex, "");
  expect(test.screen82.line3_ex, "");
  expect(test.screen82.line4_ex, "");
  expect(test.screen82.sound_led1, 0);
  expect(test.screen82.sound_led2, 0);
  expect(test.screen82.sound_led3, 0);
  expect(test.screen83.title, "");
  expect(test.screen83.msg1, "");
  expect(test.screen83.msg2, "");
  expect(test.screen83.msg1_size, 0);
  expect(test.screen83.msg2_size, 0);
  expect(test.screen83.sound1, 0);
  expect(test.screen83.sound2, 0);
  expect(test.screen83.sound3, 0);
  expect(test.screen83.snd_timer, 0);
  expect(test.screen83.timer1, 0);
  expect(test.screen83.timer2, 0);
  expect(test.screen83.timer3, 0);
  expect(test.screen83.dsp_flg1, 0);
  expect(test.screen83.dsp_flg2, 0);
  expect(test.screen83.movie01_ext, 0);
  expect(test.screen83.movie02_ext, 0);
  expect(test.screen83.movie03_ext, 0);
  expect(test.screen83.movie04_ext, 0);
  expect(test.screen83.line_title, "");
  expect(test.screen83.line_title_ex, "");
  expect(test.screen83.line1, "");
  expect(test.screen83.line2, "");
  expect(test.screen83.line3, "");
  expect(test.screen83.line4, "");
  expect(test.screen83.line1_ex, "");
  expect(test.screen83.line2_ex, "");
  expect(test.screen83.line3_ex, "");
  expect(test.screen83.line4_ex, "");
  expect(test.screen83.sound_led1, 0);
  expect(test.screen83.sound_led2, 0);
  expect(test.screen83.sound_led3, 0);
  expect(test.screen84.title, "");
  expect(test.screen84.msg1, "");
  expect(test.screen84.msg2, "");
  expect(test.screen84.msg1_size, 0);
  expect(test.screen84.msg2_size, 0);
  expect(test.screen84.sound1, 0);
  expect(test.screen84.sound2, 0);
  expect(test.screen84.sound3, 0);
  expect(test.screen84.snd_timer, 0);
  expect(test.screen84.timer1, 0);
  expect(test.screen84.timer2, 0);
  expect(test.screen84.timer3, 0);
  expect(test.screen84.dsp_flg1, 0);
  expect(test.screen84.dsp_flg2, 0);
  expect(test.screen84.movie01_ext, 0);
  expect(test.screen84.movie02_ext, 0);
  expect(test.screen84.movie03_ext, 0);
  expect(test.screen84.movie04_ext, 0);
  expect(test.screen84.line_title, "");
  expect(test.screen84.line_title_ex, "");
  expect(test.screen84.line1, "");
  expect(test.screen84.line2, "");
  expect(test.screen84.line3, "");
  expect(test.screen84.line4, "");
  expect(test.screen84.line1_ex, "");
  expect(test.screen84.line2_ex, "");
  expect(test.screen84.line3_ex, "");
  expect(test.screen84.line4_ex, "");
  expect(test.screen84.sound_led1, 0);
  expect(test.screen84.sound_led2, 0);
  expect(test.screen84.sound_led3, 0);
  expect(test.screen85.title, "");
  expect(test.screen85.msg1, "");
  expect(test.screen85.msg2, "");
  expect(test.screen85.msg1_size, 0);
  expect(test.screen85.msg2_size, 0);
  expect(test.screen85.sound1, 0);
  expect(test.screen85.sound2, 0);
  expect(test.screen85.sound3, 0);
  expect(test.screen85.snd_timer, 0);
  expect(test.screen85.timer1, 0);
  expect(test.screen85.timer2, 0);
  expect(test.screen85.timer3, 0);
  expect(test.screen85.dsp_flg1, 0);
  expect(test.screen85.dsp_flg2, 0);
  expect(test.screen85.movie01_ext, 0);
  expect(test.screen85.movie02_ext, 0);
  expect(test.screen85.movie03_ext, 0);
  expect(test.screen85.movie04_ext, 0);
  expect(test.screen85.line_title, "");
  expect(test.screen85.line_title_ex, "");
  expect(test.screen85.line1, "");
  expect(test.screen85.line2, "");
  expect(test.screen85.line3, "");
  expect(test.screen85.line4, "");
  expect(test.screen85.line1_ex, "");
  expect(test.screen85.line2_ex, "");
  expect(test.screen85.line3_ex, "");
  expect(test.screen85.line4_ex, "");
  expect(test.screen85.sound_led1, 0);
  expect(test.screen85.sound_led2, 0);
  expect(test.screen85.sound_led3, 0);
  expect(test.screen86.title, "");
  expect(test.screen86.msg1, "");
  expect(test.screen86.msg2, "");
  expect(test.screen86.msg1_size, 0);
  expect(test.screen86.msg2_size, 0);
  expect(test.screen86.sound1, 0);
  expect(test.screen86.sound2, 0);
  expect(test.screen86.sound3, 0);
  expect(test.screen86.snd_timer, 0);
  expect(test.screen86.timer1, 0);
  expect(test.screen86.timer2, 0);
  expect(test.screen86.timer3, 0);
  expect(test.screen86.dsp_flg1, 0);
  expect(test.screen86.dsp_flg2, 0);
  expect(test.screen86.movie01_ext, 0);
  expect(test.screen86.movie02_ext, 0);
  expect(test.screen86.movie03_ext, 0);
  expect(test.screen86.movie04_ext, 0);
  expect(test.screen86.line_title, "");
  expect(test.screen86.line_title_ex, "");
  expect(test.screen86.line1, "");
  expect(test.screen86.line2, "");
  expect(test.screen86.line3, "");
  expect(test.screen86.line4, "");
  expect(test.screen86.line1_ex, "");
  expect(test.screen86.line2_ex, "");
  expect(test.screen86.line3_ex, "");
  expect(test.screen86.line4_ex, "");
  expect(test.screen86.sound_led1, 0);
  expect(test.screen86.sound_led2, 0);
  expect(test.screen86.sound_led3, 0);
  expect(test.screen87.title, "");
  expect(test.screen87.msg1, "");
  expect(test.screen87.msg2, "");
  expect(test.screen87.msg1_size, 0);
  expect(test.screen87.msg2_size, 0);
  expect(test.screen87.sound1, 0);
  expect(test.screen87.sound2, 0);
  expect(test.screen87.sound3, 0);
  expect(test.screen87.snd_timer, 0);
  expect(test.screen87.timer1, 0);
  expect(test.screen87.timer2, 0);
  expect(test.screen87.timer3, 0);
  expect(test.screen87.dsp_flg1, 0);
  expect(test.screen87.dsp_flg2, 0);
  expect(test.screen87.movie01_ext, 0);
  expect(test.screen87.movie02_ext, 0);
  expect(test.screen87.movie03_ext, 0);
  expect(test.screen87.movie04_ext, 0);
  expect(test.screen87.line_title, "");
  expect(test.screen87.line_title_ex, "");
  expect(test.screen87.line1, "");
  expect(test.screen87.line2, "");
  expect(test.screen87.line3, "");
  expect(test.screen87.line4, "");
  expect(test.screen87.line1_ex, "");
  expect(test.screen87.line2_ex, "");
  expect(test.screen87.line3_ex, "");
  expect(test.screen87.line4_ex, "");
  expect(test.screen87.sound_led1, 0);
  expect(test.screen87.sound_led2, 0);
  expect(test.screen87.sound_led3, 0);
  expect(test.screen88.title, "");
  expect(test.screen88.msg1, "");
  expect(test.screen88.msg2, "");
  expect(test.screen88.msg1_size, 0);
  expect(test.screen88.msg2_size, 0);
  expect(test.screen88.sound1, 0);
  expect(test.screen88.sound2, 0);
  expect(test.screen88.sound3, 0);
  expect(test.screen88.snd_timer, 0);
  expect(test.screen88.timer1, 0);
  expect(test.screen88.timer2, 0);
  expect(test.screen88.timer3, 0);
  expect(test.screen88.dsp_flg1, 0);
  expect(test.screen88.dsp_flg2, 0);
  expect(test.screen88.movie01_ext, 0);
  expect(test.screen88.movie02_ext, 0);
  expect(test.screen88.movie03_ext, 0);
  expect(test.screen88.movie04_ext, 0);
  expect(test.screen88.line_title, "");
  expect(test.screen88.line_title_ex, "");
  expect(test.screen88.line1, "");
  expect(test.screen88.line2, "");
  expect(test.screen88.line3, "");
  expect(test.screen88.line4, "");
  expect(test.screen88.line1_ex, "");
  expect(test.screen88.line2_ex, "");
  expect(test.screen88.line3_ex, "");
  expect(test.screen88.line4_ex, "");
  expect(test.screen88.sound_led1, 0);
  expect(test.screen88.sound_led2, 0);
  expect(test.screen88.sound_led3, 0);
  expect(test.screen89.title, "");
  expect(test.screen89.msg1, "");
  expect(test.screen89.msg2, "");
  expect(test.screen89.msg1_size, 0);
  expect(test.screen89.msg2_size, 0);
  expect(test.screen89.sound1, 0);
  expect(test.screen89.sound2, 0);
  expect(test.screen89.sound3, 0);
  expect(test.screen89.snd_timer, 0);
  expect(test.screen89.timer1, 0);
  expect(test.screen89.timer2, 0);
  expect(test.screen89.timer3, 0);
  expect(test.screen89.dsp_flg1, 0);
  expect(test.screen89.dsp_flg2, 0);
  expect(test.screen89.movie01_ext, 0);
  expect(test.screen89.movie02_ext, 0);
  expect(test.screen89.movie03_ext, 0);
  expect(test.screen89.movie04_ext, 0);
  expect(test.screen89.line_title, "");
  expect(test.screen89.line_title_ex, "");
  expect(test.screen89.line1, "");
  expect(test.screen89.line2, "");
  expect(test.screen89.line3, "");
  expect(test.screen89.line4, "");
  expect(test.screen89.line1_ex, "");
  expect(test.screen89.line2_ex, "");
  expect(test.screen89.line3_ex, "");
  expect(test.screen89.line4_ex, "");
  expect(test.screen89.sound_led1, 0);
  expect(test.screen89.sound_led2, 0);
  expect(test.screen89.sound_led3, 0);
  expect(test.screen90.title, "");
  expect(test.screen90.msg1, "");
  expect(test.screen90.msg2, "");
  expect(test.screen90.msg1_size, 0);
  expect(test.screen90.msg2_size, 0);
  expect(test.screen90.sound1, 0);
  expect(test.screen90.sound2, 0);
  expect(test.screen90.sound3, 0);
  expect(test.screen90.snd_timer, 0);
  expect(test.screen90.timer1, 0);
  expect(test.screen90.timer2, 0);
  expect(test.screen90.timer3, 0);
  expect(test.screen90.dsp_flg1, 0);
  expect(test.screen90.dsp_flg2, 0);
  expect(test.screen90.movie01_ext, 0);
  expect(test.screen90.movie02_ext, 0);
  expect(test.screen90.movie03_ext, 0);
  expect(test.screen90.movie04_ext, 0);
  expect(test.screen90.line_title, "");
  expect(test.screen90.line_title_ex, "");
  expect(test.screen90.line1, "");
  expect(test.screen90.line2, "");
  expect(test.screen90.line3, "");
  expect(test.screen90.line4, "");
  expect(test.screen90.line1_ex, "");
  expect(test.screen90.line2_ex, "");
  expect(test.screen90.line3_ex, "");
  expect(test.screen90.line4_ex, "");
  expect(test.screen90.sound_led1, 0);
  expect(test.screen90.sound_led2, 0);
  expect(test.screen90.sound_led3, 0);
  expect(test.screen91.title, "");
  expect(test.screen91.msg1, "");
  expect(test.screen91.msg2, "");
  expect(test.screen91.msg1_size, 0);
  expect(test.screen91.msg2_size, 0);
  expect(test.screen91.sound1, 0);
  expect(test.screen91.sound2, 0);
  expect(test.screen91.sound3, 0);
  expect(test.screen91.snd_timer, 0);
  expect(test.screen91.timer1, 0);
  expect(test.screen91.timer2, 0);
  expect(test.screen91.timer3, 0);
  expect(test.screen91.dsp_flg1, 0);
  expect(test.screen91.dsp_flg2, 0);
  expect(test.screen91.movie01_ext, 0);
  expect(test.screen91.movie02_ext, 0);
  expect(test.screen91.movie03_ext, 0);
  expect(test.screen91.movie04_ext, 0);
  expect(test.screen91.line_title, "");
  expect(test.screen91.line_title_ex, "");
  expect(test.screen91.line1, "");
  expect(test.screen91.line2, "");
  expect(test.screen91.line3, "");
  expect(test.screen91.line4, "");
  expect(test.screen91.line1_ex, "");
  expect(test.screen91.line2_ex, "");
  expect(test.screen91.line3_ex, "");
  expect(test.screen91.line4_ex, "");
  expect(test.screen91.sound_led1, 0);
  expect(test.screen91.sound_led2, 0);
  expect(test.screen91.sound_led3, 0);
  expect(test.screen92.title, "");
  expect(test.screen92.msg1, "");
  expect(test.screen92.msg2, "");
  expect(test.screen92.msg1_size, 0);
  expect(test.screen92.msg2_size, 0);
  expect(test.screen92.sound1, 0);
  expect(test.screen92.sound2, 0);
  expect(test.screen92.sound3, 0);
  expect(test.screen92.snd_timer, 0);
  expect(test.screen92.timer1, 0);
  expect(test.screen92.timer2, 0);
  expect(test.screen92.timer3, 0);
  expect(test.screen92.dsp_flg1, 0);
  expect(test.screen92.dsp_flg2, 0);
  expect(test.screen92.movie01_ext, 0);
  expect(test.screen92.movie02_ext, 0);
  expect(test.screen92.movie03_ext, 0);
  expect(test.screen92.movie04_ext, 0);
  expect(test.screen92.line_title, "");
  expect(test.screen92.line_title_ex, "");
  expect(test.screen92.line1, "");
  expect(test.screen92.line2, "");
  expect(test.screen92.line3, "");
  expect(test.screen92.line4, "");
  expect(test.screen92.line1_ex, "");
  expect(test.screen92.line2_ex, "");
  expect(test.screen92.line3_ex, "");
  expect(test.screen92.line4_ex, "");
  expect(test.screen92.sound_led1, 0);
  expect(test.screen92.sound_led2, 0);
  expect(test.screen92.sound_led3, 0);
  expect(test.screen93.title, "");
  expect(test.screen93.msg1, "");
  expect(test.screen93.msg2, "");
  expect(test.screen93.msg1_size, 0);
  expect(test.screen93.msg2_size, 0);
  expect(test.screen93.sound1, 0);
  expect(test.screen93.sound2, 0);
  expect(test.screen93.sound3, 0);
  expect(test.screen93.snd_timer, 0);
  expect(test.screen93.timer1, 0);
  expect(test.screen93.timer2, 0);
  expect(test.screen93.timer3, 0);
  expect(test.screen93.dsp_flg1, 0);
  expect(test.screen93.dsp_flg2, 0);
  expect(test.screen93.movie01_ext, 0);
  expect(test.screen93.movie02_ext, 0);
  expect(test.screen93.movie03_ext, 0);
  expect(test.screen93.movie04_ext, 0);
  expect(test.screen93.line_title, "");
  expect(test.screen93.line_title_ex, "");
  expect(test.screen93.line1, "");
  expect(test.screen93.line2, "");
  expect(test.screen93.line3, "");
  expect(test.screen93.line4, "");
  expect(test.screen93.line1_ex, "");
  expect(test.screen93.line2_ex, "");
  expect(test.screen93.line3_ex, "");
  expect(test.screen93.line4_ex, "");
  expect(test.screen93.sound_led1, 0);
  expect(test.screen93.sound_led2, 0);
  expect(test.screen93.sound_led3, 0);
  expect(test.screen94.title, "");
  expect(test.screen94.msg1, "");
  expect(test.screen94.msg2, "");
  expect(test.screen94.msg1_size, 0);
  expect(test.screen94.msg2_size, 0);
  expect(test.screen94.sound1, 0);
  expect(test.screen94.sound2, 0);
  expect(test.screen94.sound3, 0);
  expect(test.screen94.snd_timer, 0);
  expect(test.screen94.timer1, 0);
  expect(test.screen94.timer2, 0);
  expect(test.screen94.timer3, 0);
  expect(test.screen94.dsp_flg1, 0);
  expect(test.screen94.dsp_flg2, 0);
  expect(test.screen94.movie01_ext, 0);
  expect(test.screen94.movie02_ext, 0);
  expect(test.screen94.movie03_ext, 0);
  expect(test.screen94.movie04_ext, 0);
  expect(test.screen94.line_title, "");
  expect(test.screen94.line_title_ex, "");
  expect(test.screen94.line1, "");
  expect(test.screen94.line2, "");
  expect(test.screen94.line3, "");
  expect(test.screen94.line4, "");
  expect(test.screen94.line1_ex, "");
  expect(test.screen94.line2_ex, "");
  expect(test.screen94.line3_ex, "");
  expect(test.screen94.line4_ex, "");
  expect(test.screen94.sound_led1, 0);
  expect(test.screen94.sound_led2, 0);
  expect(test.screen94.sound_led3, 0);
  expect(test.screen95.title, "");
  expect(test.screen95.msg1, "");
  expect(test.screen95.msg2, "");
  expect(test.screen95.msg1_size, 0);
  expect(test.screen95.msg2_size, 0);
  expect(test.screen95.sound1, 0);
  expect(test.screen95.sound2, 0);
  expect(test.screen95.sound3, 0);
  expect(test.screen95.snd_timer, 0);
  expect(test.screen95.timer1, 0);
  expect(test.screen95.timer2, 0);
  expect(test.screen95.timer3, 0);
  expect(test.screen95.dsp_flg1, 0);
  expect(test.screen95.dsp_flg2, 0);
  expect(test.screen95.movie01_ext, 0);
  expect(test.screen95.movie02_ext, 0);
  expect(test.screen95.movie03_ext, 0);
  expect(test.screen95.movie04_ext, 0);
  expect(test.screen95.line_title, "");
  expect(test.screen95.line_title_ex, "");
  expect(test.screen95.line1, "");
  expect(test.screen95.line2, "");
  expect(test.screen95.line3, "");
  expect(test.screen95.line4, "");
  expect(test.screen95.line1_ex, "");
  expect(test.screen95.line2_ex, "");
  expect(test.screen95.line3_ex, "");
  expect(test.screen95.line4_ex, "");
  expect(test.screen95.sound_led1, 0);
  expect(test.screen95.sound_led2, 0);
  expect(test.screen95.sound_led3, 0);
  expect(test.screen96.title, "");
  expect(test.screen96.msg1, "");
  expect(test.screen96.msg2, "");
  expect(test.screen96.msg1_size, 0);
  expect(test.screen96.msg2_size, 0);
  expect(test.screen96.sound1, 0);
  expect(test.screen96.sound2, 0);
  expect(test.screen96.sound3, 0);
  expect(test.screen96.snd_timer, 0);
  expect(test.screen96.timer1, 0);
  expect(test.screen96.timer2, 0);
  expect(test.screen96.timer3, 0);
  expect(test.screen96.dsp_flg1, 0);
  expect(test.screen96.dsp_flg2, 0);
  expect(test.screen96.movie01_ext, 0);
  expect(test.screen96.movie02_ext, 0);
  expect(test.screen96.movie03_ext, 0);
  expect(test.screen96.movie04_ext, 0);
  expect(test.screen96.line_title, "");
  expect(test.screen96.line_title_ex, "");
  expect(test.screen96.line1, "");
  expect(test.screen96.line2, "");
  expect(test.screen96.line3, "");
  expect(test.screen96.line4, "");
  expect(test.screen96.line1_ex, "");
  expect(test.screen96.line2_ex, "");
  expect(test.screen96.line3_ex, "");
  expect(test.screen96.line4_ex, "");
  expect(test.screen96.sound_led1, 0);
  expect(test.screen96.sound_led2, 0);
  expect(test.screen96.sound_led3, 0);
  expect(test.screen97.title, "");
  expect(test.screen97.msg1, "");
  expect(test.screen97.msg2, "");
  expect(test.screen97.msg1_size, 0);
  expect(test.screen97.msg2_size, 0);
  expect(test.screen97.sound1, 0);
  expect(test.screen97.sound2, 0);
  expect(test.screen97.sound3, 0);
  expect(test.screen97.snd_timer, 0);
  expect(test.screen97.timer1, 0);
  expect(test.screen97.timer2, 0);
  expect(test.screen97.timer3, 0);
  expect(test.screen97.dsp_flg1, 0);
  expect(test.screen97.dsp_flg2, 0);
  expect(test.screen97.movie01_ext, 0);
  expect(test.screen97.movie02_ext, 0);
  expect(test.screen97.movie03_ext, 0);
  expect(test.screen97.movie04_ext, 0);
  expect(test.screen97.line_title, "");
  expect(test.screen97.line_title_ex, "");
  expect(test.screen97.line1, "");
  expect(test.screen97.line2, "");
  expect(test.screen97.line3, "");
  expect(test.screen97.line4, "");
  expect(test.screen97.line1_ex, "");
  expect(test.screen97.line2_ex, "");
  expect(test.screen97.line3_ex, "");
  expect(test.screen97.line4_ex, "");
  expect(test.screen97.sound_led1, 0);
  expect(test.screen97.sound_led2, 0);
  expect(test.screen97.sound_led3, 0);
  expect(test.screen98.title, "");
  expect(test.screen98.msg1, "");
  expect(test.screen98.msg2, "");
  expect(test.screen98.msg1_size, 0);
  expect(test.screen98.msg2_size, 0);
  expect(test.screen98.sound1, 0);
  expect(test.screen98.sound2, 0);
  expect(test.screen98.sound3, 0);
  expect(test.screen98.snd_timer, 0);
  expect(test.screen98.timer1, 0);
  expect(test.screen98.timer2, 0);
  expect(test.screen98.timer3, 0);
  expect(test.screen98.dsp_flg1, 0);
  expect(test.screen98.dsp_flg2, 0);
  expect(test.screen98.movie01_ext, 0);
  expect(test.screen98.movie02_ext, 0);
  expect(test.screen98.movie03_ext, 0);
  expect(test.screen98.movie04_ext, 0);
  expect(test.screen98.line_title, "");
  expect(test.screen98.line_title_ex, "");
  expect(test.screen98.line1, "");
  expect(test.screen98.line2, "");
  expect(test.screen98.line3, "");
  expect(test.screen98.line4, "");
  expect(test.screen98.line1_ex, "");
  expect(test.screen98.line2_ex, "");
  expect(test.screen98.line3_ex, "");
  expect(test.screen98.line4_ex, "");
  expect(test.screen98.sound_led1, 0);
  expect(test.screen98.sound_led2, 0);
  expect(test.screen98.sound_led3, 0);
  expect(test.screen99.title, "");
  expect(test.screen99.msg1, "");
  expect(test.screen99.msg2, "");
  expect(test.screen99.msg1_size, 0);
  expect(test.screen99.msg2_size, 0);
  expect(test.screen99.sound1, 0);
  expect(test.screen99.sound2, 0);
  expect(test.screen99.sound3, 0);
  expect(test.screen99.snd_timer, 0);
  expect(test.screen99.timer1, 0);
  expect(test.screen99.timer2, 0);
  expect(test.screen99.timer3, 0);
  expect(test.screen99.dsp_flg1, 0);
  expect(test.screen99.dsp_flg2, 0);
  expect(test.screen99.movie01_ext, 0);
  expect(test.screen99.movie02_ext, 0);
  expect(test.screen99.movie03_ext, 0);
  expect(test.screen99.movie04_ext, 0);
  expect(test.screen99.line_title, "");
  expect(test.screen99.line_title_ex, "");
  expect(test.screen99.line1, "");
  expect(test.screen99.line2, "");
  expect(test.screen99.line3, "");
  expect(test.screen99.line4, "");
  expect(test.screen99.line1_ex, "");
  expect(test.screen99.line2_ex, "");
  expect(test.screen99.line3_ex, "");
  expect(test.screen99.line4_ex, "");
  expect(test.screen99.sound_led1, 0);
  expect(test.screen99.sound_led2, 0);
  expect(test.screen99.sound_led3, 0);
  expect(test.screen100.title, "");
  expect(test.screen100.msg1, "");
  expect(test.screen100.msg2, "");
  expect(test.screen100.msg1_size, 0);
  expect(test.screen100.msg2_size, 0);
  expect(test.screen100.sound1, 0);
  expect(test.screen100.sound2, 0);
  expect(test.screen100.sound3, 0);
  expect(test.screen100.snd_timer, 0);
  expect(test.screen100.timer1, 0);
  expect(test.screen100.timer2, 0);
  expect(test.screen100.timer3, 0);
  expect(test.screen100.dsp_flg1, 0);
  expect(test.screen100.dsp_flg2, 0);
  expect(test.screen100.movie01_ext, 0);
  expect(test.screen100.movie02_ext, 0);
  expect(test.screen100.movie03_ext, 0);
  expect(test.screen100.movie04_ext, 0);
  expect(test.screen100.line_title, "");
  expect(test.screen100.line_title_ex, "");
  expect(test.screen100.line1, "");
  expect(test.screen100.line2, "");
  expect(test.screen100.line3, "");
  expect(test.screen100.line4, "");
  expect(test.screen100.line1_ex, "");
  expect(test.screen100.line2_ex, "");
  expect(test.screen100.line3_ex, "");
  expect(test.screen100.line4_ex, "");
  expect(test.screen100.sound_led1, 0);
  expect(test.screen100.sound_led2, 0);
  expect(test.screen100.sound_led3, 0);
  expect(test.screen101.title, "");
  expect(test.screen101.msg1, "");
  expect(test.screen101.msg2, "");
  expect(test.screen101.msg1_size, 0);
  expect(test.screen101.msg2_size, 0);
  expect(test.screen101.sound1, 0);
  expect(test.screen101.sound2, 0);
  expect(test.screen101.sound3, 0);
  expect(test.screen101.snd_timer, 0);
  expect(test.screen101.timer1, 0);
  expect(test.screen101.timer2, 0);
  expect(test.screen101.timer3, 0);
  expect(test.screen101.dsp_flg1, 0);
  expect(test.screen101.dsp_flg2, 0);
  expect(test.screen101.movie01_ext, 0);
  expect(test.screen101.movie02_ext, 0);
  expect(test.screen101.movie03_ext, 0);
  expect(test.screen101.movie04_ext, 0);
  expect(test.screen101.line_title, "");
  expect(test.screen101.line_title_ex, "");
  expect(test.screen101.line1, "");
  expect(test.screen101.line2, "");
  expect(test.screen101.line3, "");
  expect(test.screen101.line4, "");
  expect(test.screen101.line1_ex, "");
  expect(test.screen101.line2_ex, "");
  expect(test.screen101.line3_ex, "");
  expect(test.screen101.line4_ex, "");
  expect(test.screen101.sound_led1, 0);
  expect(test.screen101.sound_led2, 0);
  expect(test.screen101.sound_led3, 0);
  expect(test.screen102.title, "");
  expect(test.screen102.msg1, "");
  expect(test.screen102.msg2, "");
  expect(test.screen102.msg1_size, 0);
  expect(test.screen102.msg2_size, 0);
  expect(test.screen102.sound1, 0);
  expect(test.screen102.sound2, 0);
  expect(test.screen102.sound3, 0);
  expect(test.screen102.snd_timer, 0);
  expect(test.screen102.timer1, 0);
  expect(test.screen102.timer2, 0);
  expect(test.screen102.timer3, 0);
  expect(test.screen102.dsp_flg1, 0);
  expect(test.screen102.dsp_flg2, 0);
  expect(test.screen102.movie01_ext, 0);
  expect(test.screen102.movie02_ext, 0);
  expect(test.screen102.movie03_ext, 0);
  expect(test.screen102.movie04_ext, 0);
  expect(test.screen102.line_title, "");
  expect(test.screen102.line_title_ex, "");
  expect(test.screen102.line1, "");
  expect(test.screen102.line2, "");
  expect(test.screen102.line3, "");
  expect(test.screen102.line4, "");
  expect(test.screen102.line1_ex, "");
  expect(test.screen102.line2_ex, "");
  expect(test.screen102.line3_ex, "");
  expect(test.screen102.line4_ex, "");
  expect(test.screen102.sound_led1, 0);
  expect(test.screen102.sound_led2, 0);
  expect(test.screen102.sound_led3, 0);
  expect(test.screen103.title, "");
  expect(test.screen103.msg1, "");
  expect(test.screen103.msg2, "");
  expect(test.screen103.msg1_size, 0);
  expect(test.screen103.msg2_size, 0);
  expect(test.screen103.sound1, 0);
  expect(test.screen103.sound2, 0);
  expect(test.screen103.sound3, 0);
  expect(test.screen103.snd_timer, 0);
  expect(test.screen103.timer1, 0);
  expect(test.screen103.timer2, 0);
  expect(test.screen103.timer3, 0);
  expect(test.screen103.dsp_flg1, 0);
  expect(test.screen103.dsp_flg2, 0);
  expect(test.screen103.movie01_ext, 0);
  expect(test.screen103.movie02_ext, 0);
  expect(test.screen103.movie03_ext, 0);
  expect(test.screen103.movie04_ext, 0);
  expect(test.screen103.line_title, "");
  expect(test.screen103.line_title_ex, "");
  expect(test.screen103.line1, "");
  expect(test.screen103.line2, "");
  expect(test.screen103.line3, "");
  expect(test.screen103.line4, "");
  expect(test.screen103.line1_ex, "");
  expect(test.screen103.line2_ex, "");
  expect(test.screen103.line3_ex, "");
  expect(test.screen103.line4_ex, "");
  expect(test.screen103.sound_led1, 0);
  expect(test.screen103.sound_led2, 0);
  expect(test.screen103.sound_led3, 0);
  expect(test.screen104.title, "");
  expect(test.screen104.msg1, "");
  expect(test.screen104.msg2, "");
  expect(test.screen104.msg1_size, 0);
  expect(test.screen104.msg2_size, 0);
  expect(test.screen104.sound1, 0);
  expect(test.screen104.sound2, 0);
  expect(test.screen104.sound3, 0);
  expect(test.screen104.snd_timer, 0);
  expect(test.screen104.timer1, 0);
  expect(test.screen104.timer2, 0);
  expect(test.screen104.timer3, 0);
  expect(test.screen104.dsp_flg1, 0);
  expect(test.screen104.dsp_flg2, 0);
  expect(test.screen104.movie01_ext, 0);
  expect(test.screen104.movie02_ext, 0);
  expect(test.screen104.movie03_ext, 0);
  expect(test.screen104.movie04_ext, 0);
  expect(test.screen104.line_title, "");
  expect(test.screen104.line_title_ex, "");
  expect(test.screen104.line1, "");
  expect(test.screen104.line2, "");
  expect(test.screen104.line3, "");
  expect(test.screen104.line4, "");
  expect(test.screen104.line1_ex, "");
  expect(test.screen104.line2_ex, "");
  expect(test.screen104.line3_ex, "");
  expect(test.screen104.line4_ex, "");
  expect(test.screen104.sound_led1, 0);
  expect(test.screen104.sound_led2, 0);
  expect(test.screen104.sound_led3, 0);
  expect(test.screen105.title, "");
  expect(test.screen105.msg1, "");
  expect(test.screen105.msg2, "");
  expect(test.screen105.msg1_size, 0);
  expect(test.screen105.msg2_size, 0);
  expect(test.screen105.sound1, 0);
  expect(test.screen105.sound2, 0);
  expect(test.screen105.sound3, 0);
  expect(test.screen105.snd_timer, 0);
  expect(test.screen105.timer1, 0);
  expect(test.screen105.timer2, 0);
  expect(test.screen105.timer3, 0);
  expect(test.screen105.dsp_flg1, 0);
  expect(test.screen105.dsp_flg2, 0);
  expect(test.screen105.movie01_ext, 0);
  expect(test.screen105.movie02_ext, 0);
  expect(test.screen105.movie03_ext, 0);
  expect(test.screen105.movie04_ext, 0);
  expect(test.screen105.line_title, "");
  expect(test.screen105.line_title_ex, "");
  expect(test.screen105.line1, "");
  expect(test.screen105.line2, "");
  expect(test.screen105.line3, "");
  expect(test.screen105.line4, "");
  expect(test.screen105.line1_ex, "");
  expect(test.screen105.line2_ex, "");
  expect(test.screen105.line3_ex, "");
  expect(test.screen105.line4_ex, "");
  expect(test.screen105.sound_led1, 0);
  expect(test.screen105.sound_led2, 0);
  expect(test.screen105.sound_led3, 0);
  expect(test.screen106.title, "");
  expect(test.screen106.msg1, "");
  expect(test.screen106.msg2, "");
  expect(test.screen106.msg1_size, 0);
  expect(test.screen106.msg2_size, 0);
  expect(test.screen106.sound1, 0);
  expect(test.screen106.sound2, 0);
  expect(test.screen106.sound3, 0);
  expect(test.screen106.snd_timer, 0);
  expect(test.screen106.timer1, 0);
  expect(test.screen106.timer2, 0);
  expect(test.screen106.timer3, 0);
  expect(test.screen106.dsp_flg1, 0);
  expect(test.screen106.dsp_flg2, 0);
  expect(test.screen106.movie01_ext, 0);
  expect(test.screen106.movie02_ext, 0);
  expect(test.screen106.movie03_ext, 0);
  expect(test.screen106.movie04_ext, 0);
  expect(test.screen106.line_title, "");
  expect(test.screen106.line_title_ex, "");
  expect(test.screen106.line1, "");
  expect(test.screen106.line2, "");
  expect(test.screen106.line3, "");
  expect(test.screen106.line4, "");
  expect(test.screen106.line1_ex, "");
  expect(test.screen106.line2_ex, "");
  expect(test.screen106.line3_ex, "");
  expect(test.screen106.line4_ex, "");
  expect(test.screen106.sound_led1, 0);
  expect(test.screen106.sound_led2, 0);
  expect(test.screen106.sound_led3, 0);
  expect(test.screen107.title, "");
  expect(test.screen107.msg1, "");
  expect(test.screen107.msg2, "");
  expect(test.screen107.msg1_size, 0);
  expect(test.screen107.msg2_size, 0);
  expect(test.screen107.sound1, 0);
  expect(test.screen107.sound2, 0);
  expect(test.screen107.sound3, 0);
  expect(test.screen107.snd_timer, 0);
  expect(test.screen107.timer1, 0);
  expect(test.screen107.timer2, 0);
  expect(test.screen107.timer3, 0);
  expect(test.screen107.dsp_flg1, 0);
  expect(test.screen107.dsp_flg2, 0);
  expect(test.screen107.movie01_ext, 0);
  expect(test.screen107.movie02_ext, 0);
  expect(test.screen107.movie03_ext, 0);
  expect(test.screen107.movie04_ext, 0);
  expect(test.screen107.line_title, "");
  expect(test.screen107.line_title_ex, "");
  expect(test.screen107.line1, "");
  expect(test.screen107.line2, "");
  expect(test.screen107.line3, "");
  expect(test.screen107.line4, "");
  expect(test.screen107.line1_ex, "");
  expect(test.screen107.line2_ex, "");
  expect(test.screen107.line3_ex, "");
  expect(test.screen107.line4_ex, "");
  expect(test.screen107.sound_led1, 0);
  expect(test.screen107.sound_led2, 0);
  expect(test.screen107.sound_led3, 0);
  expect(test.screen109.title, "");
  expect(test.screen109.msg1, "");
  expect(test.screen109.msg2, "");
  expect(test.screen109.msg1_size, 0);
  expect(test.screen109.msg2_size, 0);
  expect(test.screen109.sound1, 0);
  expect(test.screen109.sound2, 0);
  expect(test.screen109.sound3, 0);
  expect(test.screen109.snd_timer, 0);
  expect(test.screen109.timer1, 0);
  expect(test.screen109.timer2, 0);
  expect(test.screen109.timer3, 0);
  expect(test.screen109.dsp_flg1, 0);
  expect(test.screen109.dsp_flg2, 0);
  expect(test.screen109.movie01_ext, 0);
  expect(test.screen109.movie02_ext, 0);
  expect(test.screen109.movie03_ext, 0);
  expect(test.screen109.movie04_ext, 0);
  expect(test.screen109.line_title, "");
  expect(test.screen109.line_title_ex, "");
  expect(test.screen109.line1, "");
  expect(test.screen109.line2, "");
  expect(test.screen109.line3, "");
  expect(test.screen109.line4, "");
  expect(test.screen109.line1_ex, "");
  expect(test.screen109.line2_ex, "");
  expect(test.screen109.line3_ex, "");
  expect(test.screen109.line4_ex, "");
  expect(test.screen109.sound_led1, 0);
  expect(test.screen109.sound_led2, 0);
  expect(test.screen109.sound_led3, 0);
  expect(test.screen111.title, "");
  expect(test.screen111.msg1, "");
  expect(test.screen111.msg2, "");
  expect(test.screen111.msg1_size, 0);
  expect(test.screen111.msg2_size, 0);
  expect(test.screen111.sound1, 0);
  expect(test.screen111.sound2, 0);
  expect(test.screen111.sound3, 0);
  expect(test.screen111.snd_timer, 0);
  expect(test.screen111.timer1, 0);
  expect(test.screen111.timer2, 0);
  expect(test.screen111.timer3, 0);
  expect(test.screen111.dsp_flg1, 0);
  expect(test.screen111.dsp_flg2, 0);
  expect(test.screen111.movie01_ext, 0);
  expect(test.screen111.movie02_ext, 0);
  expect(test.screen111.movie03_ext, 0);
  expect(test.screen111.movie04_ext, 0);
  expect(test.screen111.line_title, "");
  expect(test.screen111.line_title_ex, "");
  expect(test.screen111.line1, "");
  expect(test.screen111.line2, "");
  expect(test.screen111.line3, "");
  expect(test.screen111.line4, "");
  expect(test.screen111.line1_ex, "");
  expect(test.screen111.line2_ex, "");
  expect(test.screen111.line3_ex, "");
  expect(test.screen111.line4_ex, "");
  expect(test.screen111.sound_led1, 0);
  expect(test.screen111.sound_led2, 0);
  expect(test.screen111.sound_led3, 0);
  expect(test.screen112.title, "");
  expect(test.screen112.msg1, "");
  expect(test.screen112.msg2, "");
  expect(test.screen112.msg1_size, 0);
  expect(test.screen112.msg2_size, 0);
  expect(test.screen112.sound1, 0);
  expect(test.screen112.sound2, 0);
  expect(test.screen112.sound3, 0);
  expect(test.screen112.snd_timer, 0);
  expect(test.screen112.timer1, 0);
  expect(test.screen112.timer2, 0);
  expect(test.screen112.timer3, 0);
  expect(test.screen112.dsp_flg1, 0);
  expect(test.screen112.dsp_flg2, 0);
  expect(test.screen112.movie01_ext, 0);
  expect(test.screen112.movie02_ext, 0);
  expect(test.screen112.movie03_ext, 0);
  expect(test.screen112.movie04_ext, 0);
  expect(test.screen112.line_title, "");
  expect(test.screen112.line_title_ex, "");
  expect(test.screen112.line1, "");
  expect(test.screen112.line2, "");
  expect(test.screen112.line3, "");
  expect(test.screen112.line4, "");
  expect(test.screen112.line1_ex, "");
  expect(test.screen112.line2_ex, "");
  expect(test.screen112.line3_ex, "");
  expect(test.screen112.line4_ex, "");
  expect(test.screen112.sound_led1, 0);
  expect(test.screen112.sound_led2, 0);
  expect(test.screen112.sound_led3, 0);
  expect(test.screen113.title, "");
  expect(test.screen113.msg1, "");
  expect(test.screen113.msg2, "");
  expect(test.screen113.msg1_size, 0);
  expect(test.screen113.msg2_size, 0);
  expect(test.screen113.sound1, 0);
  expect(test.screen113.sound2, 0);
  expect(test.screen113.sound3, 0);
  expect(test.screen113.snd_timer, 0);
  expect(test.screen113.timer1, 0);
  expect(test.screen113.timer2, 0);
  expect(test.screen113.timer3, 0);
  expect(test.screen113.dsp_flg1, 0);
  expect(test.screen113.dsp_flg2, 0);
  expect(test.screen113.movie01_ext, 0);
  expect(test.screen113.movie02_ext, 0);
  expect(test.screen113.movie03_ext, 0);
  expect(test.screen113.movie04_ext, 0);
  expect(test.screen113.line_title, "");
  expect(test.screen113.line_title_ex, "");
  expect(test.screen113.line1, "");
  expect(test.screen113.line2, "");
  expect(test.screen113.line3, "");
  expect(test.screen113.line4, "");
  expect(test.screen113.line1_ex, "");
  expect(test.screen113.line2_ex, "");
  expect(test.screen113.line3_ex, "");
  expect(test.screen113.line4_ex, "");
  expect(test.screen113.sound_led1, 0);
  expect(test.screen113.sound_led2, 0);
  expect(test.screen113.sound_led3, 0);
  expect(test.screen114.title, "");
  expect(test.screen114.msg1, "");
  expect(test.screen114.msg2, "");
  expect(test.screen114.msg1_size, 0);
  expect(test.screen114.msg2_size, 0);
  expect(test.screen114.sound1, 0);
  expect(test.screen114.sound2, 0);
  expect(test.screen114.sound3, 0);
  expect(test.screen114.snd_timer, 0);
  expect(test.screen114.timer1, 0);
  expect(test.screen114.timer2, 0);
  expect(test.screen114.timer3, 0);
  expect(test.screen114.dsp_flg1, 0);
  expect(test.screen114.dsp_flg2, 0);
  expect(test.screen114.movie01_ext, 0);
  expect(test.screen114.movie02_ext, 0);
  expect(test.screen114.movie03_ext, 0);
  expect(test.screen114.movie04_ext, 0);
  expect(test.screen114.line_title, "");
  expect(test.screen114.line_title_ex, "");
  expect(test.screen114.line1, "");
  expect(test.screen114.line2, "");
  expect(test.screen114.line3, "");
  expect(test.screen114.line4, "");
  expect(test.screen114.line1_ex, "");
  expect(test.screen114.line2_ex, "");
  expect(test.screen114.line3_ex, "");
  expect(test.screen114.line4_ex, "");
  expect(test.screen114.sound_led1, 0);
  expect(test.screen114.sound_led2, 0);
  expect(test.screen114.sound_led3, 0);
  expect(test.screen115.title, "");
  expect(test.screen115.msg1, "");
  expect(test.screen115.msg2, "");
  expect(test.screen115.msg1_size, 0);
  expect(test.screen115.msg2_size, 0);
  expect(test.screen115.sound1, 0);
  expect(test.screen115.sound2, 0);
  expect(test.screen115.sound3, 0);
  expect(test.screen115.snd_timer, 0);
  expect(test.screen115.timer1, 0);
  expect(test.screen115.timer2, 0);
  expect(test.screen115.timer3, 0);
  expect(test.screen115.dsp_flg1, 0);
  expect(test.screen115.dsp_flg2, 0);
  expect(test.screen115.movie01_ext, 0);
  expect(test.screen115.movie02_ext, 0);
  expect(test.screen115.movie03_ext, 0);
  expect(test.screen115.movie04_ext, 0);
  expect(test.screen115.line_title, "");
  expect(test.screen115.line_title_ex, "");
  expect(test.screen115.line1, "");
  expect(test.screen115.line2, "");
  expect(test.screen115.line3, "");
  expect(test.screen115.line4, "");
  expect(test.screen115.line1_ex, "");
  expect(test.screen115.line2_ex, "");
  expect(test.screen115.line3_ex, "");
  expect(test.screen115.line4_ex, "");
  expect(test.screen115.sound_led1, 0);
  expect(test.screen115.sound_led2, 0);
  expect(test.screen115.sound_led3, 0);
  expect(test.screen116.title, "");
  expect(test.screen116.msg1, "");
  expect(test.screen116.msg2, "");
  expect(test.screen116.msg1_size, 0);
  expect(test.screen116.msg2_size, 0);
  expect(test.screen116.sound1, 0);
  expect(test.screen116.sound2, 0);
  expect(test.screen116.sound3, 0);
  expect(test.screen116.snd_timer, 0);
  expect(test.screen116.timer1, 0);
  expect(test.screen116.timer2, 0);
  expect(test.screen116.timer3, 0);
  expect(test.screen116.dsp_flg1, 0);
  expect(test.screen116.dsp_flg2, 0);
  expect(test.screen116.movie01_ext, 0);
  expect(test.screen116.movie02_ext, 0);
  expect(test.screen116.movie03_ext, 0);
  expect(test.screen116.movie04_ext, 0);
  expect(test.screen116.line_title, "");
  expect(test.screen116.line_title_ex, "");
  expect(test.screen116.line1, "");
  expect(test.screen116.line2, "");
  expect(test.screen116.line3, "");
  expect(test.screen116.line4, "");
  expect(test.screen116.line1_ex, "");
  expect(test.screen116.line2_ex, "");
  expect(test.screen116.line3_ex, "");
  expect(test.screen116.line4_ex, "");
  expect(test.screen116.sound_led1, 0);
  expect(test.screen116.sound_led2, 0);
  expect(test.screen116.sound_led3, 0);
  expect(test.screen117.title, "");
  expect(test.screen117.msg1, "");
  expect(test.screen117.msg2, "");
  expect(test.screen117.msg1_size, 0);
  expect(test.screen117.msg2_size, 0);
  expect(test.screen117.sound1, 0);
  expect(test.screen117.sound2, 0);
  expect(test.screen117.sound3, 0);
  expect(test.screen117.snd_timer, 0);
  expect(test.screen117.timer1, 0);
  expect(test.screen117.timer2, 0);
  expect(test.screen117.timer3, 0);
  expect(test.screen117.dsp_flg1, 0);
  expect(test.screen117.dsp_flg2, 0);
  expect(test.screen117.movie01_ext, 0);
  expect(test.screen117.movie02_ext, 0);
  expect(test.screen117.movie03_ext, 0);
  expect(test.screen117.movie04_ext, 0);
  expect(test.screen117.line_title, "");
  expect(test.screen117.line_title_ex, "");
  expect(test.screen117.line1, "");
  expect(test.screen117.line2, "");
  expect(test.screen117.line3, "");
  expect(test.screen117.line4, "");
  expect(test.screen117.line1_ex, "");
  expect(test.screen117.line2_ex, "");
  expect(test.screen117.line3_ex, "");
  expect(test.screen117.line4_ex, "");
  expect(test.screen117.sound_led1, 0);
  expect(test.screen117.sound_led2, 0);
  expect(test.screen117.sound_led3, 0);
  expect(test.screen118.title, "");
  expect(test.screen118.msg1, "");
  expect(test.screen118.msg2, "");
  expect(test.screen118.msg1_size, 0);
  expect(test.screen118.msg2_size, 0);
  expect(test.screen118.sound1, 0);
  expect(test.screen118.sound2, 0);
  expect(test.screen118.sound3, 0);
  expect(test.screen118.snd_timer, 0);
  expect(test.screen118.timer1, 0);
  expect(test.screen118.timer2, 0);
  expect(test.screen118.timer3, 0);
  expect(test.screen118.dsp_flg1, 0);
  expect(test.screen118.dsp_flg2, 0);
  expect(test.screen118.movie01_ext, 0);
  expect(test.screen118.movie02_ext, 0);
  expect(test.screen118.movie03_ext, 0);
  expect(test.screen118.movie04_ext, 0);
  expect(test.screen118.line_title, "");
  expect(test.screen118.line_title_ex, "");
  expect(test.screen118.line1, "");
  expect(test.screen118.line2, "");
  expect(test.screen118.line3, "");
  expect(test.screen118.line4, "");
  expect(test.screen118.line1_ex, "");
  expect(test.screen118.line2_ex, "");
  expect(test.screen118.line3_ex, "");
  expect(test.screen118.line4_ex, "");
  expect(test.screen118.sound_led1, 0);
  expect(test.screen118.sound_led2, 0);
  expect(test.screen118.sound_led3, 0);
  expect(test.screen119.title, "");
  expect(test.screen119.msg1, "");
  expect(test.screen119.msg2, "");
  expect(test.screen119.msg1_size, 0);
  expect(test.screen119.msg2_size, 0);
  expect(test.screen119.sound1, 0);
  expect(test.screen119.sound2, 0);
  expect(test.screen119.sound3, 0);
  expect(test.screen119.snd_timer, 0);
  expect(test.screen119.timer1, 0);
  expect(test.screen119.timer2, 0);
  expect(test.screen119.timer3, 0);
  expect(test.screen119.dsp_flg1, 0);
  expect(test.screen119.dsp_flg2, 0);
  expect(test.screen119.movie01_ext, 0);
  expect(test.screen119.movie02_ext, 0);
  expect(test.screen119.movie03_ext, 0);
  expect(test.screen119.movie04_ext, 0);
  expect(test.screen119.line_title, "");
  expect(test.screen119.line_title_ex, "");
  expect(test.screen119.line1, "");
  expect(test.screen119.line2, "");
  expect(test.screen119.line3, "");
  expect(test.screen119.line4, "");
  expect(test.screen119.line1_ex, "");
  expect(test.screen119.line2_ex, "");
  expect(test.screen119.line3_ex, "");
  expect(test.screen119.line4_ex, "");
  expect(test.screen119.sound_led1, 0);
  expect(test.screen119.sound_led2, 0);
  expect(test.screen119.sound_led3, 0);
  expect(test.screen120.title, "");
  expect(test.screen120.msg1, "");
  expect(test.screen120.msg2, "");
  expect(test.screen120.msg1_size, 0);
  expect(test.screen120.msg2_size, 0);
  expect(test.screen120.sound1, 0);
  expect(test.screen120.sound2, 0);
  expect(test.screen120.sound3, 0);
  expect(test.screen120.snd_timer, 0);
  expect(test.screen120.timer1, 0);
  expect(test.screen120.timer2, 0);
  expect(test.screen120.timer3, 0);
  expect(test.screen120.dsp_flg1, 0);
  expect(test.screen120.dsp_flg2, 0);
  expect(test.screen120.movie01_ext, 0);
  expect(test.screen120.movie02_ext, 0);
  expect(test.screen120.movie03_ext, 0);
  expect(test.screen120.movie04_ext, 0);
  expect(test.screen120.line_title, "");
  expect(test.screen120.line_title_ex, "");
  expect(test.screen120.line1, "");
  expect(test.screen120.line2, "");
  expect(test.screen120.line3, "");
  expect(test.screen120.line4, "");
  expect(test.screen120.line1_ex, "");
  expect(test.screen120.line2_ex, "");
  expect(test.screen120.line3_ex, "");
  expect(test.screen120.line4_ex, "");
  expect(test.screen120.sound_led1, 0);
  expect(test.screen120.sound_led2, 0);
  expect(test.screen120.sound_led3, 0);
  expect(test.screen121.title, "");
  expect(test.screen121.msg1, "");
  expect(test.screen121.msg2, "");
  expect(test.screen121.msg1_size, 0);
  expect(test.screen121.msg2_size, 0);
  expect(test.screen121.sound1, 0);
  expect(test.screen121.sound2, 0);
  expect(test.screen121.sound3, 0);
  expect(test.screen121.snd_timer, 0);
  expect(test.screen121.timer1, 0);
  expect(test.screen121.timer2, 0);
  expect(test.screen121.timer3, 0);
  expect(test.screen121.dsp_flg1, 0);
  expect(test.screen121.dsp_flg2, 0);
  expect(test.screen121.movie01_ext, 0);
  expect(test.screen121.movie02_ext, 0);
  expect(test.screen121.movie03_ext, 0);
  expect(test.screen121.movie04_ext, 0);
  expect(test.screen121.line_title, "");
  expect(test.screen121.line_title_ex, "");
  expect(test.screen121.line1, "");
  expect(test.screen121.line2, "");
  expect(test.screen121.line3, "");
  expect(test.screen121.line4, "");
  expect(test.screen121.line1_ex, "");
  expect(test.screen121.line2_ex, "");
  expect(test.screen121.line3_ex, "");
  expect(test.screen121.line4_ex, "");
  expect(test.screen121.sound_led1, 0);
  expect(test.screen121.sound_led2, 0);
  expect(test.screen121.sound_led3, 0);
  expect(test.screen122.title, "");
  expect(test.screen122.msg1, "");
  expect(test.screen122.msg2, "");
  expect(test.screen122.msg1_size, 0);
  expect(test.screen122.msg2_size, 0);
  expect(test.screen122.sound1, 0);
  expect(test.screen122.sound2, 0);
  expect(test.screen122.sound3, 0);
  expect(test.screen122.snd_timer, 0);
  expect(test.screen122.timer1, 0);
  expect(test.screen122.timer2, 0);
  expect(test.screen122.timer3, 0);
  expect(test.screen122.dsp_flg1, 0);
  expect(test.screen122.dsp_flg2, 0);
  expect(test.screen122.movie01_ext, 0);
  expect(test.screen122.movie02_ext, 0);
  expect(test.screen122.movie03_ext, 0);
  expect(test.screen122.movie04_ext, 0);
  expect(test.screen122.line_title, "");
  expect(test.screen122.line_title_ex, "");
  expect(test.screen122.line1, "");
  expect(test.screen122.line2, "");
  expect(test.screen122.line3, "");
  expect(test.screen122.line4, "");
  expect(test.screen122.line1_ex, "");
  expect(test.screen122.line2_ex, "");
  expect(test.screen122.line3_ex, "");
  expect(test.screen122.line4_ex, "");
  expect(test.screen122.sound_led1, 0);
  expect(test.screen122.sound_led2, 0);
  expect(test.screen122.sound_led3, 0);
  expect(test.screen123.title, "");
  expect(test.screen123.msg1, "");
  expect(test.screen123.msg2, "");
  expect(test.screen123.msg1_size, 0);
  expect(test.screen123.msg2_size, 0);
  expect(test.screen123.sound1, 0);
  expect(test.screen123.sound2, 0);
  expect(test.screen123.sound3, 0);
  expect(test.screen123.snd_timer, 0);
  expect(test.screen123.timer1, 0);
  expect(test.screen123.timer2, 0);
  expect(test.screen123.timer3, 0);
  expect(test.screen123.dsp_flg1, 0);
  expect(test.screen123.dsp_flg2, 0);
  expect(test.screen123.movie01_ext, 0);
  expect(test.screen123.movie02_ext, 0);
  expect(test.screen123.movie03_ext, 0);
  expect(test.screen123.movie04_ext, 0);
  expect(test.screen123.line_title, "");
  expect(test.screen123.line_title_ex, "");
  expect(test.screen123.line1, "");
  expect(test.screen123.line2, "");
  expect(test.screen123.line3, "");
  expect(test.screen123.line4, "");
  expect(test.screen123.line1_ex, "");
  expect(test.screen123.line2_ex, "");
  expect(test.screen123.line3_ex, "");
  expect(test.screen123.line4_ex, "");
  expect(test.screen123.sound_led1, 0);
  expect(test.screen123.sound_led2, 0);
  expect(test.screen123.sound_led3, 0);
  expect(test.screen124.title, "");
  expect(test.screen124.msg1, "");
  expect(test.screen124.msg2, "");
  expect(test.screen124.msg1_size, 0);
  expect(test.screen124.msg2_size, 0);
  expect(test.screen124.sound1, 0);
  expect(test.screen124.sound2, "");
  expect(test.screen124.sound3, "");
  expect(test.screen124.snd_timer, 0);
  expect(test.screen124.timer1, 0);
  expect(test.screen124.timer2, 0);
  expect(test.screen124.timer3, 0);
  expect(test.screen124.dsp_flg1, 0);
  expect(test.screen124.dsp_flg2, 0);
  expect(test.screen124.movie01_ext, 0);
  expect(test.screen124.movie02_ext, 0);
  expect(test.screen124.movie03_ext, 0);
  expect(test.screen124.movie04_ext, 0);
  expect(test.screen124.line_title, "");
  expect(test.screen124.line_title_ex, "");
  expect(test.screen124.line1, "");
  expect(test.screen124.line2, "");
  expect(test.screen124.line3, "");
  expect(test.screen124.line4, "");
  expect(test.screen124.line1_ex, "");
  expect(test.screen124.line2_ex, "");
  expect(test.screen124.line3_ex, "");
  expect(test.screen124.line4_ex, "");
  expect(test.screen124.sound_led1, 0);
  expect(test.screen124.sound_led2, "");
  expect(test.screen124.sound_led3, "");
  expect(test.screen125.title, "");
  expect(test.screen125.msg1, "");
  expect(test.screen125.msg2, "");
  expect(test.screen125.msg1_size, 0);
  expect(test.screen125.msg2_size, "");
  expect(test.screen125.sound1, 0);
  expect(test.screen125.sound2, 0);
  expect(test.screen125.sound3, 0);
  expect(test.screen125.snd_timer, 0);
  expect(test.screen125.timer1, 0);
  expect(test.screen125.timer2, 0);
  expect(test.screen125.timer3, 0);
  expect(test.screen125.dsp_flg1, 0);
  expect(test.screen125.dsp_flg2, 0);
  expect(test.screen125.movie01_ext, 0);
  expect(test.screen125.movie02_ext, 0);
  expect(test.screen125.movie03_ext, 0);
  expect(test.screen125.movie04_ext, 0);
  expect(test.screen125.line_title, "");
  expect(test.screen125.line_title_ex, "");
  expect(test.screen125.line1, "");
  expect(test.screen125.line2, "");
  expect(test.screen125.line3, "");
  expect(test.screen125.line4, "");
  expect(test.screen125.line1_ex, "");
  expect(test.screen125.line2_ex, "");
  expect(test.screen125.line3_ex, "");
  expect(test.screen125.line4_ex, "");
  expect(test.screen125.sound_led1, 0);
  expect(test.screen125.sound_led2, 0);
  expect(test.screen125.sound_led3, 0);
  expect(test.screen126.title, "");
  expect(test.screen126.msg1, "");
  expect(test.screen126.msg2, "");
  expect(test.screen126.msg1_size, 0);
  expect(test.screen126.msg2_size, "");
  expect(test.screen126.sound1, 0);
  expect(test.screen126.sound2, 0);
  expect(test.screen126.sound3, 0);
  expect(test.screen126.snd_timer, 0);
  expect(test.screen126.timer1, 0);
  expect(test.screen126.timer2, 0);
  expect(test.screen126.timer3, 0);
  expect(test.screen126.dsp_flg1, 0);
  expect(test.screen126.dsp_flg2, 0);
  expect(test.screen126.movie01_ext, 0);
  expect(test.screen126.movie02_ext, 0);
  expect(test.screen126.movie03_ext, 0);
  expect(test.screen126.movie04_ext, 0);
  expect(test.screen126.line_title, "");
  expect(test.screen126.line_title_ex, "");
  expect(test.screen126.line1, "");
  expect(test.screen126.line2, "");
  expect(test.screen126.line3, "");
  expect(test.screen126.line4, "");
  expect(test.screen126.line1_ex, "");
  expect(test.screen126.line2_ex, "");
  expect(test.screen126.line3_ex, "");
  expect(test.screen126.line4_ex, "");
  expect(test.screen126.sound_led1, 0);
  expect(test.screen126.sound_led2, 0);
  expect(test.screen126.sound_led3, 0);
  expect(test.screen127.title, "");
  expect(test.screen127.msg1, "");
  expect(test.screen127.msg2, "");
  expect(test.screen127.msg1_size, 0);
  expect(test.screen127.msg2_size, 0);
  expect(test.screen127.sound1, 0);
  expect(test.screen127.sound2, 0);
  expect(test.screen127.sound3, 0);
  expect(test.screen127.snd_timer, 0);
  expect(test.screen127.timer1, 0);
  expect(test.screen127.timer2, 0);
  expect(test.screen127.timer3, 0);
  expect(test.screen127.dsp_flg1, 0);
  expect(test.screen127.dsp_flg2, 0);
  expect(test.screen127.movie01_ext, 0);
  expect(test.screen127.movie02_ext, 0);
  expect(test.screen127.movie03_ext, 0);
  expect(test.screen127.movie04_ext, 0);
  expect(test.screen127.line_title, "");
  expect(test.screen127.line_title_ex, "");
  expect(test.screen127.line1, "");
  expect(test.screen127.line2, "");
  expect(test.screen127.line3, "");
  expect(test.screen127.line4, "");
  expect(test.screen127.line1_ex, "");
  expect(test.screen127.line2_ex, "");
  expect(test.screen127.line3_ex, "");
  expect(test.screen127.line4_ex, "");
  expect(test.screen127.sound_led1, 0);
  expect(test.screen127.sound_led2, 0);
  expect(test.screen127.sound_led3, 0);
  expect(test.screen128.title, "");
  expect(test.screen128.msg1, "");
  expect(test.screen128.msg2, "");
  expect(test.screen128.msg1_size, 0);
  expect(test.screen128.msg2_size, 0);
  expect(test.screen128.sound1, 0);
  expect(test.screen128.sound2, 0);
  expect(test.screen128.sound3, 0);
  expect(test.screen128.snd_timer, 0);
  expect(test.screen128.timer1, 0);
  expect(test.screen128.timer2, 0);
  expect(test.screen128.timer3, 0);
  expect(test.screen128.dsp_flg1, 0);
  expect(test.screen128.dsp_flg2, 0);
  expect(test.screen128.movie01_ext, 0);
  expect(test.screen128.movie02_ext, 0);
  expect(test.screen128.movie03_ext, 0);
  expect(test.screen128.movie04_ext, 0);
  expect(test.screen128.line_title, "");
  expect(test.screen128.line_title_ex, "");
  expect(test.screen128.line1, "");
  expect(test.screen128.line2, "");
  expect(test.screen128.line3, "");
  expect(test.screen128.line4, "");
  expect(test.screen128.line1_ex, "");
  expect(test.screen128.line2_ex, "");
  expect(test.screen128.line3_ex, "");
  expect(test.screen128.line4_ex, "");
  expect(test.screen128.sound_led1, 0);
  expect(test.screen128.sound_led2, 0);
  expect(test.screen128.sound_led3, 0);
  expect(test.screen129.title, "");
  expect(test.screen129.msg1, "");
  expect(test.screen129.msg2, "");
  expect(test.screen129.msg1_size, 0);
  expect(test.screen129.msg2_size, 0);
  expect(test.screen129.sound1, 0);
  expect(test.screen129.sound2, 0);
  expect(test.screen129.sound3, 0);
  expect(test.screen129.snd_timer, 0);
  expect(test.screen129.timer1, 0);
  expect(test.screen129.timer2, 0);
  expect(test.screen129.timer3, 0);
  expect(test.screen129.dsp_flg1, 0);
  expect(test.screen129.dsp_flg2, 0);
  expect(test.screen129.movie01_ext, 0);
  expect(test.screen129.movie02_ext, 0);
  expect(test.screen129.movie03_ext, 0);
  expect(test.screen129.movie04_ext, 0);
  expect(test.screen129.line_title, "");
  expect(test.screen129.line_title_ex, "");
  expect(test.screen129.line1, "");
  expect(test.screen129.line2, "");
  expect(test.screen129.line3, "");
  expect(test.screen129.line4, "");
  expect(test.screen129.line1_ex, "");
  expect(test.screen129.line2_ex, "");
  expect(test.screen129.line3_ex, "");
  expect(test.screen129.line4_ex, "");
  expect(test.screen129.sound_led1, 0);
  expect(test.screen129.sound_led2, 0);
  expect(test.screen129.sound_led3, 0);
  expect(test.screen130.title, "");
  expect(test.screen130.msg1, "");
  expect(test.screen130.msg2, "");
  expect(test.screen130.msg1_size, 0);
  expect(test.screen130.msg2_size, 0);
  expect(test.screen130.sound1, 0);
  expect(test.screen130.sound2, "");
  expect(test.screen130.sound3, "");
  expect(test.screen130.snd_timer, 0);
  expect(test.screen130.timer1, 0);
  expect(test.screen130.timer2, 0);
  expect(test.screen130.timer3, 0);
  expect(test.screen130.dsp_flg1, 0);
  expect(test.screen130.dsp_flg2, 0);
  expect(test.screen130.movie01_ext, 0);
  expect(test.screen130.movie02_ext, 0);
  expect(test.screen130.movie03_ext, 0);
  expect(test.screen130.movie04_ext, 0);
  expect(test.screen130.line_title, "");
  expect(test.screen130.line_title_ex, "");
  expect(test.screen130.line1, "");
  expect(test.screen130.line2, "");
  expect(test.screen130.line3, "");
  expect(test.screen130.line4, "");
  expect(test.screen130.line1_ex, "");
  expect(test.screen130.line2_ex, "");
  expect(test.screen130.line3_ex, "");
  expect(test.screen130.line4_ex, "");
  expect(test.screen130.sound_led1, 0);
  expect(test.screen130.sound_led2, "");
  expect(test.screen130.sound_led3, "");
  expect(test.screen131.title, "");
  expect(test.screen131.msg1, "");
  expect(test.screen131.msg2, "");
  expect(test.screen131.msg1_size, 0);
  expect(test.screen131.msg2_size, 0);
  expect(test.screen131.sound1, 0);
  expect(test.screen131.sound2, 0);
  expect(test.screen131.sound3, 0);
  expect(test.screen131.snd_timer, 0);
  expect(test.screen131.timer1, 0);
  expect(test.screen131.timer2, 0);
  expect(test.screen131.timer3, 0);
  expect(test.screen131.dsp_flg1, 0);
  expect(test.screen131.dsp_flg2, 0);
  expect(test.screen131.movie01_ext, 0);
  expect(test.screen131.movie02_ext, 0);
  expect(test.screen131.movie03_ext, 0);
  expect(test.screen131.movie04_ext, 0);
  expect(test.screen131.line_title, "");
  expect(test.screen131.line_title_ex, "");
  expect(test.screen131.line1, "");
  expect(test.screen131.line2, "");
  expect(test.screen131.line3, "");
  expect(test.screen131.line4, "");
  expect(test.screen131.line1_ex, "");
  expect(test.screen131.line2_ex, "");
  expect(test.screen131.line3_ex, "");
  expect(test.screen131.line4_ex, "");
  expect(test.screen131.sound_led1, 0);
  expect(test.screen131.sound_led2, 0);
  expect(test.screen131.sound_led3, 0);
  expect(test.screen132.title, "");
  expect(test.screen132.msg1, "");
  expect(test.screen132.msg2, "");
  expect(test.screen132.msg1_size, 0);
  expect(test.screen132.msg2_size, "");
  expect(test.screen132.sound1, 0);
  expect(test.screen132.sound2, 0);
  expect(test.screen132.sound3, 0);
  expect(test.screen132.snd_timer, 0);
  expect(test.screen132.timer1, 0);
  expect(test.screen132.timer2, 0);
  expect(test.screen132.timer3, 0);
  expect(test.screen132.dsp_flg1, 0);
  expect(test.screen132.dsp_flg2, 0);
  expect(test.screen132.movie01_ext, 0);
  expect(test.screen132.movie02_ext, 0);
  expect(test.screen132.movie03_ext, 0);
  expect(test.screen132.movie04_ext, 0);
  expect(test.screen132.line_title, "");
  expect(test.screen132.line_title_ex, "");
  expect(test.screen132.line1, "");
  expect(test.screen132.line2, "");
  expect(test.screen132.line3, "");
  expect(test.screen132.line4, "");
  expect(test.screen132.line1_ex, "");
  expect(test.screen132.line2_ex, "");
  expect(test.screen132.line3_ex, "");
  expect(test.screen132.line4_ex, "");
  expect(test.screen132.sound_led1, 0);
  expect(test.screen132.sound_led2, 0);
  expect(test.screen132.sound_led3, 0);
  expect(test.screen133.title, "");
  expect(test.screen133.msg1, "");
  expect(test.screen133.msg2, "");
  expect(test.screen133.msg1_size, 0);
  expect(test.screen133.msg2_size, 0);
  expect(test.screen133.sound1, 0);
  expect(test.screen133.sound2, 0);
  expect(test.screen133.sound3, 0);
  expect(test.screen133.snd_timer, 0);
  expect(test.screen133.timer1, 0);
  expect(test.screen133.timer2, 0);
  expect(test.screen133.timer3, 0);
  expect(test.screen133.dsp_flg1, 0);
  expect(test.screen133.dsp_flg2, 0);
  expect(test.screen133.movie01_ext, 0);
  expect(test.screen133.movie02_ext, 0);
  expect(test.screen133.movie03_ext, 0);
  expect(test.screen133.movie04_ext, 0);
  expect(test.screen133.line_title, "");
  expect(test.screen133.line_title_ex, "");
  expect(test.screen133.line1, "");
  expect(test.screen133.line2, "");
  expect(test.screen133.line3, "");
  expect(test.screen133.line4, "");
  expect(test.screen133.line1_ex, "");
  expect(test.screen133.line2_ex, "");
  expect(test.screen133.line3_ex, "");
  expect(test.screen133.line4_ex, "");
  expect(test.screen133.sound_led1, 0);
  expect(test.screen133.sound_led2, 0);
  expect(test.screen133.sound_led3, 0);
  expect(test.screen134.title, "");
  expect(test.screen134.msg1, "");
  expect(test.screen134.msg2, "");
  expect(test.screen134.msg1_size, 0);
  expect(test.screen134.msg2_size, "");
  expect(test.screen134.sound1, 0);
  expect(test.screen134.sound2, 0);
  expect(test.screen134.sound3, 0);
  expect(test.screen134.snd_timer, 0);
  expect(test.screen134.timer1, 0);
  expect(test.screen134.timer2, 0);
  expect(test.screen134.timer3, 0);
  expect(test.screen134.dsp_flg1, 0);
  expect(test.screen134.dsp_flg2, 0);
  expect(test.screen134.movie01_ext, 0);
  expect(test.screen134.movie02_ext, 0);
  expect(test.screen134.movie03_ext, 0);
  expect(test.screen134.movie04_ext, 0);
  expect(test.screen134.line_title, "");
  expect(test.screen134.line_title_ex, "");
  expect(test.screen134.line1, "");
  expect(test.screen134.line2, "");
  expect(test.screen134.line3, "");
  expect(test.screen134.line4, "");
  expect(test.screen134.line1_ex, "");
  expect(test.screen134.line2_ex, "");
  expect(test.screen134.line3_ex, "");
  expect(test.screen134.line4_ex, "");
  expect(test.screen134.sound_led1, 0);
  expect(test.screen134.sound_led2, 0);
  expect(test.screen134.sound_led3, 0);
  expect(test.screen135.title, "");
  expect(test.screen135.msg1, "");
  expect(test.screen135.msg2, "");
  expect(test.screen135.msg1_size, 0);
  expect(test.screen135.msg2_size, 0);
  expect(test.screen135.sound1, 0);
  expect(test.screen135.sound2, 0);
  expect(test.screen135.sound3, 0);
  expect(test.screen135.snd_timer, 0);
  expect(test.screen135.timer1, 0);
  expect(test.screen135.timer2, 0);
  expect(test.screen135.timer3, 0);
  expect(test.screen135.dsp_flg1, 0);
  expect(test.screen135.dsp_flg2, 0);
  expect(test.screen135.movie01_ext, 0);
  expect(test.screen135.movie02_ext, 0);
  expect(test.screen135.movie03_ext, 0);
  expect(test.screen135.movie04_ext, 0);
  expect(test.screen135.line_title, "");
  expect(test.screen135.line_title_ex, "");
  expect(test.screen135.line1, "");
  expect(test.screen135.line2, "");
  expect(test.screen135.line3, "");
  expect(test.screen135.line4, "");
  expect(test.screen135.line1_ex, "");
  expect(test.screen135.line2_ex, "");
  expect(test.screen135.line3_ex, "");
  expect(test.screen135.line4_ex, "");
  expect(test.screen135.sound_led1, 0);
  expect(test.screen135.sound_led2, 0);
  expect(test.screen135.sound_led3, 0);
  expect(test.screen136.title, "");
  expect(test.screen136.msg1, "");
  expect(test.screen136.msg2, "");
  expect(test.screen136.msg1_size, 0);
  expect(test.screen136.msg2_size, 0);
  expect(test.screen136.sound1, 0);
  expect(test.screen136.sound2, 0);
  expect(test.screen136.sound3, 0);
  expect(test.screen136.snd_timer, 0);
  expect(test.screen136.timer1, 0);
  expect(test.screen136.timer2, 0);
  expect(test.screen136.timer3, 0);
  expect(test.screen136.dsp_flg1, 0);
  expect(test.screen136.dsp_flg2, 0);
  expect(test.screen136.movie01_ext, 0);
  expect(test.screen136.movie02_ext, 0);
  expect(test.screen136.movie03_ext, 0);
  expect(test.screen136.movie04_ext, 0);
  expect(test.screen136.line_title, "");
  expect(test.screen136.line_title_ex, "");
  expect(test.screen136.line1, "");
  expect(test.screen136.line2, "");
  expect(test.screen136.line3, "");
  expect(test.screen136.line4, "");
  expect(test.screen136.line1_ex, "");
  expect(test.screen136.line2_ex, "");
  expect(test.screen136.line3_ex, "");
  expect(test.screen136.line4_ex, "");
  expect(test.screen136.sound_led1, 0);
  expect(test.screen136.sound_led2, 0);
  expect(test.screen136.sound_led3, 0);
  expect(test.screen137.title, "");
  expect(test.screen137.msg1, "");
  expect(test.screen137.msg2, "");
  expect(test.screen137.msg1_size, 0);
  expect(test.screen137.msg2_size, 0);
  expect(test.screen137.sound1, 0);
  expect(test.screen137.sound2, 0);
  expect(test.screen137.sound3, 0);
  expect(test.screen137.snd_timer, 0);
  expect(test.screen137.timer1, 0);
  expect(test.screen137.timer2, 0);
  expect(test.screen137.timer3, 0);
  expect(test.screen137.dsp_flg1, 0);
  expect(test.screen137.dsp_flg2, 0);
  expect(test.screen137.movie01_ext, 0);
  expect(test.screen137.movie02_ext, 0);
  expect(test.screen137.movie03_ext, 0);
  expect(test.screen137.movie04_ext, 0);
  expect(test.screen137.line_title, "");
  expect(test.screen137.line_title_ex, "");
  expect(test.screen137.line1, "");
  expect(test.screen137.line2, "");
  expect(test.screen137.line3, "");
  expect(test.screen137.line4, "");
  expect(test.screen137.line1_ex, "");
  expect(test.screen137.line2_ex, "");
  expect(test.screen137.line3_ex, "");
  expect(test.screen137.line4_ex, "");
  expect(test.screen137.sound_led1, 0);
  expect(test.screen137.sound_led2, 0);
  expect(test.screen137.sound_led3, 0);
  expect(test.screen138.title, "");
  expect(test.screen138.msg1, "");
  expect(test.screen138.msg2, "");
  expect(test.screen138.msg1_size, 0);
  expect(test.screen138.msg2_size, 0);
  expect(test.screen138.sound1, 0);
  expect(test.screen138.sound2, 0);
  expect(test.screen138.sound3, 0);
  expect(test.screen138.snd_timer, 0);
  expect(test.screen138.timer1, 0);
  expect(test.screen138.timer2, 0);
  expect(test.screen138.timer3, 0);
  expect(test.screen138.dsp_flg1, 0);
  expect(test.screen138.dsp_flg2, 0);
  expect(test.screen138.movie01_ext, 0);
  expect(test.screen138.movie02_ext, 0);
  expect(test.screen138.movie03_ext, 0);
  expect(test.screen138.movie04_ext, 0);
  expect(test.screen138.line_title, "");
  expect(test.screen138.line_title_ex, "");
  expect(test.screen138.line1, "");
  expect(test.screen138.line2, "");
  expect(test.screen138.line3, "");
  expect(test.screen138.line4, "");
  expect(test.screen138.line1_ex, "");
  expect(test.screen138.line2_ex, "");
  expect(test.screen138.line3_ex, "");
  expect(test.screen138.line4_ex, "");
  expect(test.screen138.sound_led1, 0);
  expect(test.screen138.sound_led2, 0);
  expect(test.screen138.sound_led3, 0);
  expect(test.screen139.title, "");
  expect(test.screen139.msg1, "");
  expect(test.screen139.msg2, "");
  expect(test.screen139.msg1_size, 0);
  expect(test.screen139.msg2_size, 0);
  expect(test.screen139.sound1, 0);
  expect(test.screen139.sound2, 0);
  expect(test.screen139.sound3, 0);
  expect(test.screen139.snd_timer, 0);
  expect(test.screen139.timer1, 0);
  expect(test.screen139.timer2, 0);
  expect(test.screen139.timer3, 0);
  expect(test.screen139.dsp_flg1, 0);
  expect(test.screen139.dsp_flg2, 0);
  expect(test.screen139.movie01_ext, 0);
  expect(test.screen139.movie02_ext, 0);
  expect(test.screen139.movie03_ext, 0);
  expect(test.screen139.movie04_ext, 0);
  expect(test.screen139.line_title, "");
  expect(test.screen139.line_title_ex, "");
  expect(test.screen139.line1, "");
  expect(test.screen139.line2, "");
  expect(test.screen139.line3, "");
  expect(test.screen139.line4, "");
  expect(test.screen139.line1_ex, "");
  expect(test.screen139.line2_ex, "");
  expect(test.screen139.line3_ex, "");
  expect(test.screen139.line4_ex, "");
  expect(test.screen139.sound_led1, 0);
  expect(test.screen139.sound_led2, 0);
  expect(test.screen139.sound_led3, 0);
  expect(test.screen140.title, "");
  expect(test.screen140.msg1, "");
  expect(test.screen140.msg2, "");
  expect(test.screen140.msg1_size, 0);
  expect(test.screen140.msg2_size, 0);
  expect(test.screen140.sound1, 0);
  expect(test.screen140.sound2, 0);
  expect(test.screen140.sound3, 0);
  expect(test.screen140.snd_timer, 0);
  expect(test.screen140.timer1, 0);
  expect(test.screen140.timer2, 0);
  expect(test.screen140.timer3, 0);
  expect(test.screen140.dsp_flg1, 0);
  expect(test.screen140.dsp_flg2, 0);
  expect(test.screen140.movie01_ext, 0);
  expect(test.screen140.movie02_ext, 0);
  expect(test.screen140.movie03_ext, 0);
  expect(test.screen140.movie04_ext, 0);
  expect(test.screen140.line_title, "");
  expect(test.screen140.line_title_ex, "");
  expect(test.screen140.line1, "");
  expect(test.screen140.line2, "");
  expect(test.screen140.line3, "");
  expect(test.screen140.line4, "");
  expect(test.screen140.line1_ex, "");
  expect(test.screen140.line2_ex, "");
  expect(test.screen140.line3_ex, "");
  expect(test.screen140.line4_ex, "");
  expect(test.screen140.sound_led1, 0);
  expect(test.screen140.sound_led2, 0);
  expect(test.screen140.sound_led3, 0);
  expect(test.screen141.title, "");
  expect(test.screen141.msg1, "");
  expect(test.screen141.msg2, "");
  expect(test.screen141.msg1_size, 0);
  expect(test.screen141.msg2_size, 0);
  expect(test.screen141.sound1, 0);
  expect(test.screen141.sound2, 0);
  expect(test.screen141.sound3, 0);
  expect(test.screen141.snd_timer, 0);
  expect(test.screen141.timer1, 0);
  expect(test.screen141.timer2, 0);
  expect(test.screen141.timer3, 0);
  expect(test.screen141.dsp_flg1, 0);
  expect(test.screen141.dsp_flg2, 0);
  expect(test.screen141.movie01_ext, 0);
  expect(test.screen141.movie02_ext, 0);
  expect(test.screen141.movie03_ext, 0);
  expect(test.screen141.movie04_ext, 0);
  expect(test.screen141.line_title, "");
  expect(test.screen141.line_title_ex, "");
  expect(test.screen141.line1, "");
  expect(test.screen141.line2, "");
  expect(test.screen141.line3, "");
  expect(test.screen141.line4, "");
  expect(test.screen141.line1_ex, "");
  expect(test.screen141.line2_ex, "");
  expect(test.screen141.line3_ex, "");
  expect(test.screen141.line4_ex, "");
  expect(test.screen141.sound_led1, 0);
  expect(test.screen141.sound_led2, 0);
  expect(test.screen141.sound_led3, 0);
  expect(test.screen144.title, "");
  expect(test.screen144.msg1, "");
  expect(test.screen144.msg2, "");
  expect(test.screen144.msg1_size, 0);
  expect(test.screen144.msg2_size, 0);
  expect(test.screen144.sound1, 0);
  expect(test.screen144.sound2, 0);
  expect(test.screen144.sound3, 0);
  expect(test.screen144.snd_timer, 0);
  expect(test.screen144.timer1, 0);
  expect(test.screen144.timer2, 0);
  expect(test.screen144.timer3, 0);
  expect(test.screen144.dsp_flg1, 0);
  expect(test.screen144.dsp_flg2, 0);
  expect(test.screen144.movie01_ext, 0);
  expect(test.screen144.movie02_ext, 0);
  expect(test.screen144.movie03_ext, 0);
  expect(test.screen144.movie04_ext, 0);
  expect(test.screen144.line_title, "");
  expect(test.screen144.line_title_ex, "");
  expect(test.screen144.line1, "");
  expect(test.screen144.line2, "");
  expect(test.screen144.line3, "");
  expect(test.screen144.line4, "");
  expect(test.screen144.line1_ex, "");
  expect(test.screen144.line2_ex, "");
  expect(test.screen144.line3_ex, "");
  expect(test.screen144.line4_ex, "");
  expect(test.screen144.sound_led1, 0);
  expect(test.screen144.sound_led2, 0);
  expect(test.screen144.sound_led3, 0);
  expect(test.ActSetUp.ReadAlertTime, 0);
  expect(test.ActSetUp.AutoReadInterval, 0);
  expect(test.ActSetUp.InterruptPrint, 0);
  expect(test.ActSetUp.InterruptPay, 0);
  expect(test.ActSetUp.UpdGetFtpTimer, 0);
  expect(test.HiddenSetUp.TableReadInterval, 0);
  expect(test.customer.cust_card_max, 0);
  expect(test.customer.cust_card_type1, 0);
  expect(test.customer.cust_card_type2, 0);
  expect(test.customer.cust_card_type3, 0);
  expect(test.customer.cust_card_type4, 0);
  expect(test.customer.cust_card_type5, 0);
  expect(test.customer.cust_card_type6, 0);
  expect(test.ShopAndGo.shop_and_go_nonfile_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_nonscan_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_limit1, 0);
  expect(test.ShopAndGo.shop_and_go_limit2, 0);
  expect(test.ShopAndGo.shop_and_go_limit3, 0);
  expect(test.ShopAndGo.shop_and_go_test_srv_flg, 0);
  expect(test.ShopAndGo.shop_and_go_companycode, 0);
  expect(test.ShopAndGo.shop_and_go_storecode, 0);
  expect(test.ShopAndGo.shop_and_go_mbr_chk_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_server_timeout, 0);
  expect(test.ShopAndGo.shop_and_go_proxy, "");
  expect(test.ShopAndGo.shop_and_go_proxy_port, 0);
  expect(test.ShopAndGo.shop_and_go_n_money_btn_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_domain, "");
  expect(test.ShopAndGo.shop_and_go_mbr_card_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cr50_domain, "");
  expect(test.ShopAndGo.shop_and_go_point_domain, "");
  expect(test.ShopAndGo.shop_and_go_cr50_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_eatin_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cogca_read_twice, 0);
  expect(test.ShopAndGo.shop_and_go_use_class, 0);
  expect(test.ShopAndGo.shop_and_go_expensive_mark_prn, 0);
  expect(test.ShopAndGo.shop_and_go_regbag_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_use_preset_grp_code, 0);
  expect(test.ShopAndGo.shop_and_go_mente_nonplu_btn_reference, 0);
  expect(test.ShopAndGo.shop_and_go_mbr_auto_cncl_time, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_msg_use_no, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print_normal, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss, 0);
  expect(test.ShopAndGo.shop_and_go_thread_timeout, 0);
  expect(test.PaymentGroup.pay_grp_name1, "");
  expect(test.PaymentGroup.pay_grp_name2, "");
  expect(test.PaymentGroup.pay_grp_name3, "");
  expect(test.PaymentGroup.pay_grp_name4, "");
  expect(test.PaymentGroup.pay_grp_name5, "");
  expect(test.PaymentGroup.pay_grp_name6, "");
  expect(test.PaymentGroup.pay_grp_name7, "");
  expect(test.PaymentGroup.pay_grp_name8, "");
  expect(test.PaymentGroup.pay_grp_name9, "");
  expect(test.PaymentGroup.pay_typ1_grp, 0);
  expect(test.PaymentGroup.pay_typ2_grp, 0);
  expect(test.PaymentGroup.pay_typ3_grp, 0);
  expect(test.PaymentGroup.pay_typ4_grp, 0);
  expect(test.PaymentGroup.pay_typ5_grp, 0);
  expect(test.PaymentGroup.pay_typ6_grp, 0);
  expect(test.PaymentGroup.pay_typ7_grp, 0);
  expect(test.PaymentGroup.pay_typ8_grp, 0);
  expect(test.PaymentGroup.pay_typ9_grp, 0);
  expect(test.PaymentGroup.pay_typ10_grp, 0);
  expect(test.PaymentGroup.pay_typ11_grp, 0);
  expect(test.PaymentGroup.pay_typ12_grp, 0);
  expect(test.PaymentGroup.pay_typ13_grp, 0);
  expect(test.PaymentGroup.pay_typ14_grp, 0);
  expect(test.PaymentGroup.pay_typ15_grp, 0);
  expect(test.PaymentGroup.pay_typ16_grp, 0);
  expect(test.PaymentGroup.pay_grp_name1_ex, "");
  expect(test.PaymentGroup.pay_grp_name2_ex, "");
  expect(test.PaymentGroup.pay_grp_name3_ex, "");
  expect(test.PaymentGroup.pay_grp_name4_ex, "");
  expect(test.PaymentGroup.pay_grp_name5_ex, "");
  expect(test.PaymentGroup.pay_grp_name6_ex, "");
  expect(test.PaymentGroup.pay_grp_name7_ex, "");
  expect(test.PaymentGroup.pay_grp_name8_ex, "");
  expect(test.PaymentGroup.pay_grp_name9_ex, "");
}

void allPropatyCheck(QcashierJsonFile test, bool firstItemCheck)
{
  if(firstItemCheck == true) {
    expect(test.common.item_disp, 1);
  }
  expect(test.common.logo_typ, 0);
  expect(test.common.disp_typ, 1);
  expect(test.common.spdsp_use, 1);
  expect(test.common.fix_max, 10);
  expect(test.common.fix_typ, 1);
  expect(test.common.ptn_max, 6);
  expect(test.common.ptn_typ, 1);
  expect(test.common.spe_typ, 1);
  expect(test.common.chara_typ, 0);
  expect(test.common.language_typ, 0);
  expect(test.common.page_max, 145);
  expect(test.common.typ_max, 1);
  expect(test.common.pay_typ1, 0);
  expect(test.common.pay_typ2, 1);
  expect(test.common.pay_typ3, 0);
  expect(test.common.pay_typ4, 0);
  expect(test.common.pay_typ5, 0);
  expect(test.common.pay_typ6, 0);
  expect(test.common.pay_typ7, 0);
  expect(test.common.pay_typ8, 0);
  expect(test.common.demo_disp_btn, 0);
  expect(test.common.rcpt_limit_time, 10);
  expect(test.common.next_rcpt_limit, 60);
  expect(test.common.auto_susdsp, 0);
  expect(test.common.susdsp_time, 2200);
  expect(test.common.rfm_receipt, 1);
  expect(test.common.signp_typ, 0);
  expect(test.common.select_typ, 0);
  expect(test.common.select_str_msg, 0);
  expect(test.common.regbag1_plucd, 0);
  expect(test.common.regbag2_plucd, 0);
  expect(test.common.regbag3_plucd, 0);
  expect(test.common.autocash_operation, 0);
  expect(test.common.autocash_equaltime, 10);
  expect(test.common.autocash_overtime, 0);
  expect(test.common.fip_disp, 0);
  expect(test.common.crdtcard_gettimer, 0);
  expect(test.common.charge_plucd1, 0);
  expect(test.common.charge_plucd2, 0);
  expect(test.common.charge_plucd3, 0);
  expect(test.common.charge_plucd4, 0);
  expect(test.common.charge_plucd5, 0);
  expect(test.common.charge_plucd6, 0);
  expect(test.common.crdtcard_warntime, 6);
  expect(test.common.acx_recalc_btn, 0);
  expect(test.common.lang_chg_max, 0);
  expect(test.common.lang_select1, 0);
  expect(test.common.lang_select2, 0);
  expect(test.common.lang_select3, 0);
  expect(test.common.lang_select4, 0);
  expect(test.common.lang_select5, 0);
  expect(test.common.lang_select6, 0);
  expect(test.common.lang_select7, 0);
  expect(test.common.lang_select8, 0);
  expect(test.common.autocrdt_operation, 0);
  expect(test.common.autocrdt_time, 10);
  expect(test.common.preca_charge_only, 0);
  expect(test.common.preca_charge_plucd1, 0);
  expect(test.common.preca_charge_plucd2, 0);
  expect(test.common.preca_charge_plucd3, 0);
  expect(test.common.preca_charge_plucd4, 0);
  expect(test.common.preca_charge_plucd5, 0);
  expect(test.common.preca_charge_plucd6, 0);
  expect(test.common.select_dsp_ccin, 0);
  expect(test.common.cancel_btn_dsp, 0);
  expect(test.common.clinic_mode, 0);
  expect(test.common.clinic_receipt, 1);
  expect(test.common.clinic_greeting, 1);
  expect(test.common.clinic_greeting_sound, 1);
  expect(test.common.fin_btn_chg, 0);
  expect(test.common.startdsp_btn_single, 1);
  expect(test.common.startdsp_scan_enable, 0);
  expect(test.common.pay_typ9, 0);
  expect(test.common.pay_typ10, 0);
  expect(test.common.pay_typ11, 0);
  expect(test.common.pay_typ12, 0);
  expect(test.common.pay_typ13, 0);
  expect(test.common.pay_typ14, 0);
  expect(test.common.pay_typ15, 0);
  expect(test.common.pay_typ16, 0);
  expect(test.common.verifone_nfc_crdt, 0);
  expect(test.common.hs_dualdisp_chk, 1);
  expect(test.common.back_btn_dsp, 1);
  expect(test.common.NoOperationWarning, 0);
  expect(test.common.NoOperationSignpaul_time, 0);
  expect(test.common.NoOperationVoicesound_time, 0);
  expect(test.common.NoOperationSound, 0);
  expect(test.common.NoOperationPayWarning, 0);
  expect(test.common.cin_dsp_wait, 0);
  expect(test.common.clinic_auto_stl, 0);
  expect(test.common.acracb_stlmode, 1);
  expect(test.common.apbf_regbag_plucd, 0);
  expect(test.common.apbf_dlgdisp_time, 30);
  expect(test.common.mybag_plu_point_add, 0);
  expect(test.common.video_jpqr_scanner, 0);
  expect(test.common.chg_warn_timer_use, 0);
  expect(test.common.cin_cnl_btn_show, 0);
  expect(test.common.regs_use_class, 0);
  expect(test.common.sg_eatin_chk, 0);
  expect(test.common.selfmode1_auto_cancel, 0);
  expect(test.common.point_use_unit, 1);
  expect(test.common.selfmode1_wav_qty, 0);
  expect(test.common.age_chk_notice, 0);
  expect(test.common.verifone_nfc_repika_crdt, 0);
  expect(test.common.regbag1_default, 0);
  expect(test.common.regbag2_default, 0);
  expect(test.common.regbag3_default, 0);
  expect(test.common.regbag_timing, 0);
  expect(test.common.regbag_disp_back_btn, 1);
  expect(test.common.self_disp_preca_ref, 0);
  expect(test.common.fs_cashless_dsp_change, 0);
  expect(test.common.hs_fs_scanning_guide, 0);
  expect(test.common.hs_fs_twice_read_stop, 0);
  expect(test.common.cashin_sound, 0);
  expect(test.common.sound_change_flg, 0);
  expect(test.common.hs_fs_auto_preset_dsp, 0);
  expect(test.common.cashless_dsp_return, 0);
  expect(test.common.regbag_screen_scan_input, 0);
  expect(test.common.g3_pay_btn_blink, 0);
  expect(test.common.g3_employee_call_btn, 1);
  expect(test.common.g3_pay_slct_btn_ptn, 0);
  expect(test.common.video_jpqr_sidescanner, 0);
  expect(test.common.mente_itemlist_type, 0);
  expect(test.common.rg_self_noteplu_perm, 0);
  expect(test.common.g3_self_itemlist_scrvoid, 0);
  expect(test.common.g3_fs_presetgroup_custom, 0);
  expect(test.common.g3_fs_presetgroup_btn1, 0);
  expect(test.common.g3_fs_presetgroup_btn2, 0);
  expect(test.common.g3_fs_presetgroup_btn3, 0);
  expect(test.common.g3_fs_presetgroup_btn4, 0);
  expect(test.common.g3_fs_presetgroup_btn5, 0);
  expect(test.common.g3_fs_presetgroup_btn6, 0);
  expect(test.common.g3_fs_presetgroup_btn7, 0);
  expect(test.common.g3_fs_presetgroup_btn8, 0);
  expect(test.common.callBuzzer_sound_change_flg, 0);
  expect(test.common.top_map_display, 0);
  expect(test.common.start_payselect_display, 0);
  expect(test.common.idle_signp_state, 0);
  expect(test.common.jpqr_paybtn_image, 0);
  expect(test.common.vega_credit_forget_chk, 0);
  expect(test.common.cash_only_setting, 0);
  expect(test.common.cash_only_border, 0);
  expect(test.chg_info.chg_info, 1);
  expect(test.chg_info.chg_5000, 0);
  expect(test.chg_info.chg_2000, 0);
  expect(test.chg_info.chg_1000, 9);
  expect(test.chg_info.chg_500, 0);
  expect(test.chg_info.chg_100, 9);
  expect(test.chg_info.chg_50, 0);
  expect(test.chg_info.chg_10, 9);
  expect(test.chg_info.chg_5, 0);
  expect(test.chg_info.chg_1, 9);
  expect(test.chg_info.chg_info_full_chk, 30);
  expect(test.chg_info.chg_signp_full_chk, 10);
  expect(test.period.spr_str, 301);
  expect(test.period.spr_end, 531);
  expect(test.period.sum_str, 601);
  expect(test.period.sum_end, 831);
  expect(test.period.aut_str, 901);
  expect(test.period.aut_end, 1130);
  expect(test.period.win1_str, 1201);
  expect(test.period.win1_end, 1231);
  expect(test.period.win2_str, 101);
  expect(test.period.win2_end, 229);
  expect(test.period.sp1_flg, 1);
  expect(test.period.sp2_flg, 0);
  expect(test.period.sp3_flg, 1);
  expect(test.period.sp4_flg, 1);
  expect(test.period.sp5_flg, 0);
  expect(test.period.sp6_flg, 1);
  expect(test.period.sp7_flg, 1);
  expect(test.period.sp8_flg, 0);
  expect(test.period.sp9_flg, 0);
  expect(test.period.sp10_flg, 1);
  expect(test.period.sp11_flg, 0);
  expect(test.period.sp12_flg, 1);
  expect(test.period.sp13_flg, 0);
  expect(test.period.sp14_flg, 1);
  expect(test.period.sp15_flg, 0);
  expect(test.period.sp16_flg, 1);
  expect(test.period.sp17_flg, 1);
  expect(test.period.sp18_flg, 0);
  expect(test.period.sp1_str, 101);
  expect(test.period.sp1_end, 107);
  expect(test.period.sp2_str, "");
  expect(test.period.sp2_end, "");
  expect(test.period.sp3_str, 201);
  expect(test.period.sp3_end, 214);
  expect(test.period.sp4_str, 215);
  expect(test.period.sp4_end, 303);
  expect(test.period.sp5_str, "");
  expect(test.period.sp5_end, "");
  expect(test.period.sp6_str, 325);
  expect(test.period.sp6_end, 410);
  expect(test.period.sp7_str, 425);
  expect(test.period.sp7_end, 505);
  expect(test.period.sp8_str, "");
  expect(test.period.sp8_end, "");
  expect(test.period.sp9_str, "");
  expect(test.period.sp9_end, "");
  expect(test.period.sp10_str, 627);
  expect(test.period.sp10_end, 707);
  expect(test.period.sp11_str, "");
  expect(test.period.sp11_end, "");
  expect(test.period.sp12_str, 825);
  expect(test.period.sp12_end, 920);
  expect(test.period.sp13_str, "");
  expect(test.period.sp13_end, "");
  expect(test.period.sp14_str, 1015);
  expect(test.period.sp14_end, 1030);
  expect(test.period.sp15_str, "");
  expect(test.period.sp15_end, "");
  expect(test.period.sp16_str, 1201);
  expect(test.period.sp16_end, 1225);
  expect(test.period.sp17_str, 1226);
  expect(test.period.sp17_end, 1231);
  expect(test.period.sp18_str, "");
  expect(test.period.sp18_end, "");
  expect(test.period.spr_time1, 600);
  expect(test.period.spr_time2, 1700);
  expect(test.period.sum_time1, 600);
  expect(test.period.sum_time2, 1800);
  expect(test.period.aut_time1, 600);
  expect(test.period.aut_time2, 1700);
  expect(test.period.win_time1, 600);
  expect(test.period.win_time2, 1700);
  expect(test.screen0.title, "スタート画面");
  expect(test.screen0.msg1, "お会計券を読ませるとスタートします");
  expect(test.screen0.msg2, "");
  expect(test.screen0.msg1_size, 0);
  expect(test.screen0.msg2_size, 0);
  expect(test.screen0.sound1, 0);
  expect(test.screen0.sound2, 0);
  expect(test.screen0.sound3, 6091);
  expect(test.screen0.snd_timer, 0);
  expect(test.screen0.timer1, 0);
  expect(test.screen0.timer2, 0);
  expect(test.screen0.timer3, 0);
  expect(test.screen0.dsp_flg1, 0);
  expect(test.screen0.dsp_flg2, 0);
  expect(test.screen0.movie01_ext, 0);
  expect(test.screen0.movie02_ext, 0);
  expect(test.screen0.movie03_ext, 0);
  expect(test.screen0.movie04_ext, 0);
  expect(test.screen0.line_title, "");
  expect(test.screen0.line_title_ex, "");
  expect(test.screen0.line1, "");
  expect(test.screen0.line2, "お会計券を");
  expect(test.screen0.line3, "読ませてください");
  expect(test.screen0.line4, "");
  expect(test.screen0.line1_ex, "");
  expect(test.screen0.line2_ex, "Insert the ticket");
  expect(test.screen0.line3_ex, "into the scanner.");
  expect(test.screen0.line4_ex, "");
  expect(test.screen0.sound_led1, 0);
  expect(test.screen0.sound_led2, 0);
  expect(test.screen0.sound_led3, 6091);
  expect(test.screen1.title, "スキャン中画面");
  expect(test.screen1.msg1, "お会計券を読ませるとスタートします");
  expect(test.screen1.msg2, "");
  expect(test.screen1.msg1_size, 0);
  expect(test.screen1.msg2_size, 0);
  expect(test.screen1.sound1, 6003);
  expect(test.screen1.sound2, 6097);
  expect(test.screen1.sound3, 6096);
  expect(test.screen1.snd_timer, 10);
  expect(test.screen1.timer1, 2);
  expect(test.screen1.timer2, 10);
  expect(test.screen1.timer3, 10);
  expect(test.screen1.dsp_flg1, 0);
  expect(test.screen1.dsp_flg2, 0);
  expect(test.screen1.movie01_ext, 0);
  expect(test.screen1.movie02_ext, 0);
  expect(test.screen1.movie03_ext, 0);
  expect(test.screen1.movie04_ext, 0);
  expect(test.screen1.line_title, "");
  expect(test.screen1.line_title_ex, "");
  expect(test.screen1.line1, "");
  expect(test.screen1.line2, "");
  expect(test.screen1.line3, "");
  expect(test.screen1.line4, "");
  expect(test.screen1.line1_ex, "");
  expect(test.screen1.line2_ex, "");
  expect(test.screen1.line3_ex, "");
  expect(test.screen1.line4_ex, "");
  expect(test.screen1.sound_led1, 6003);
  expect(test.screen1.sound_led2, 6097);
  expect(test.screen1.sound_led3, 6096);
  expect(test.screen2.title, "会計選択画面");
  expect(test.screen2.msg1, "お支払方法のボタンを押して下さい");
  expect(test.screen2.msg2, "");
  expect(test.screen2.msg1_size, 0);
  expect(test.screen2.msg2_size, 0);
  expect(test.screen2.sound1, 6004);
  expect(test.screen2.sound2, 0);
  expect(test.screen2.sound3, 0);
  expect(test.screen2.snd_timer, 30);
  expect(test.screen2.timer1, 60);
  expect(test.screen2.timer2, 10);
  expect(test.screen2.timer3, 10);
  expect(test.screen2.dsp_flg1, 0);
  expect(test.screen2.dsp_flg2, 0);
  expect(test.screen2.movie01_ext, 0);
  expect(test.screen2.movie02_ext, 0);
  expect(test.screen2.movie03_ext, 0);
  expect(test.screen2.movie04_ext, 0);
  expect(test.screen2.line_title, "");
  expect(test.screen2.line_title_ex, "");
  expect(test.screen2.line1, "お支払方法を");
  expect(test.screen2.line2, "押してください");
  expect(test.screen2.line3, "");
  expect(test.screen2.line4, "");
  expect(test.screen2.line1_ex, "Please select your");
  expect(test.screen2.line2_ex, "payment method.");
  expect(test.screen2.line3_ex, "");
  expect(test.screen2.line4_ex, "");
  expect(test.screen2.sound_led1, 6129);
  expect(test.screen2.sound_led2, 0);
  expect(test.screen2.sound_led3, 0);
  expect(test.screen3.title, "現金入金画面");
  expect(test.screen3.msg1, "お買上金額を確認し             お金をいれてください");
  expect(test.screen3.msg2, "");
  expect(test.screen3.msg1_size, 0);
  expect(test.screen3.msg2_size, 0);
  expect(test.screen3.sound1, 6005);
  expect(test.screen3.sound2, 6006);
  expect(test.screen3.sound3, 6015);
  expect(test.screen3.snd_timer, 20);
  expect(test.screen3.timer1, 0);
  expect(test.screen3.timer2, 0);
  expect(test.screen3.timer3, 0);
  expect(test.screen3.dsp_flg1, 0);
  expect(test.screen3.dsp_flg2, 0);
  expect(test.screen3.movie01_ext, 0);
  expect(test.screen3.movie02_ext, 0);
  expect(test.screen3.movie03_ext, 0);
  expect(test.screen3.movie04_ext, 0);
  expect(test.screen3.line_title, "現金でお支払い");
  expect(test.screen3.line_title_ex, "Cash Payment");
  expect(test.screen3.line1, "お金を");
  expect(test.screen3.line2, "入れてください");
  expect(test.screen3.line3, "");
  expect(test.screen3.line4, "");
  expect(test.screen3.line1_ex, "Please insert the cash.");
  expect(test.screen3.line2_ex, "");
  expect(test.screen3.line3_ex, "");
  expect(test.screen3.line4_ex, "");
  expect(test.screen3.sound_led1, 6180);
  expect(test.screen3.sound_led2, 6130);
  expect(test.screen3.sound_led3, 6015);
  expect(test.screen4.title, "現金支払画面");
  expect(test.screen4.msg1, "お買上金額を確認し             お金をいれてください");
  expect(test.screen4.msg2, "");
  expect(test.screen4.msg1_size, 0);
  expect(test.screen4.msg2_size, 0);
  expect(test.screen4.sound1, 6016);
  expect(test.screen4.sound2, 0);
  expect(test.screen4.sound3, 0);
  expect(test.screen4.snd_timer, 20);
  expect(test.screen4.timer1, 10);
  expect(test.screen4.timer2, 0);
  expect(test.screen4.timer3, 0);
  expect(test.screen4.dsp_flg1, 0);
  expect(test.screen4.dsp_flg2, 0);
  expect(test.screen4.movie01_ext, 0);
  expect(test.screen4.movie02_ext, 0);
  expect(test.screen4.movie03_ext, 0);
  expect(test.screen4.movie04_ext, 0);
  expect(test.screen4.line_title, "");
  expect(test.screen4.line_title_ex, "");
  expect(test.screen4.line1, "よろしければ");
  expect(test.screen4.line2, "おわりボタンを");
  expect(test.screen4.line3, "押してください");
  expect(test.screen4.line4, "");
  expect(test.screen4.line1_ex, "When ready, ");
  expect(test.screen4.line2_ex, "press \"finish\"");
  expect(test.screen4.line3_ex, "to complete payment.");
  expect(test.screen4.line4_ex, "");
  expect(test.screen4.sound_led1, 6179);
  expect(test.screen4.sound_led2, 6217);
  expect(test.screen4.sound_led3, 0);
  expect(test.screen5.title, "現金支払完了画面");
  expect(test.screen5.msg1, "お釣りとレシートを             お取りください。");
  expect(test.screen5.msg2, "");
  expect(test.screen5.msg1_size, 0);
  expect(test.screen5.msg2_size, 0);
  expect(test.screen5.sound1, 6017);
  expect(test.screen5.sound2, "");
  expect(test.screen5.sound3, 0);
  expect(test.screen5.snd_timer, 0);
  expect(test.screen5.timer1, 5);
  expect(test.screen5.timer2, 10);
  expect(test.screen5.timer3, 2);
  expect(test.screen5.dsp_flg1, 0);
  expect(test.screen5.dsp_flg2, 0);
  expect(test.screen5.movie01_ext, 0);
  expect(test.screen5.movie02_ext, 0);
  expect(test.screen5.movie03_ext, 0);
  expect(test.screen5.movie04_ext, 0);
  expect(test.screen5.line_title, "");
  expect(test.screen5.line_title_ex, "");
  expect(test.screen5.line1, "おつりを");
  expect(test.screen5.line2, "お受け取りください");
  expect(test.screen5.line3, "");
  expect(test.screen5.line4, "");
  expect(test.screen5.line1_ex, "Please take your change.");
  expect(test.screen5.line2_ex, "");
  expect(test.screen5.line3_ex, "");
  expect(test.screen5.line4_ex, "");
  expect(test.screen5.sound_led1, 6132);
  expect(test.screen5.sound_led2, 6132);
  expect(test.screen5.sound_led3, 0);
  expect(test.screen6.title, "支払完了(お釣り０円)");
  expect(test.screen6.msg1, "レシートをお取りください。");
  expect(test.screen6.msg2, "");
  expect(test.screen6.msg1_size, 0);
  expect(test.screen6.msg2_size, 0);
  expect(test.screen6.sound1, 6018);
  expect(test.screen6.sound2, 6129);
  expect(test.screen6.sound3, 6548);
  expect(test.screen6.snd_timer, 0);
  expect(test.screen6.timer1, 5);
  expect(test.screen6.timer2, 10);
  expect(test.screen6.timer3, 0);
  expect(test.screen6.dsp_flg1, 0);
  expect(test.screen6.dsp_flg2, 0);
  expect(test.screen6.movie01_ext, 0);
  expect(test.screen6.movie02_ext, 0);
  expect(test.screen6.movie03_ext, 0);
  expect(test.screen6.movie04_ext, 0);
  expect(test.screen6.line_title, "");
  expect(test.screen6.line_title_ex, "");
  expect(test.screen6.line1, "レシートを");
  expect(test.screen6.line2, "お受け取りください");
  expect(test.screen6.line3, "ありがとう");
  expect(test.screen6.line4, "ございました");
  expect(test.screen6.line1_ex, "Thank you.");
  expect(test.screen6.line2_ex, "Please take your receipt.");
  expect(test.screen6.line3_ex, "");
  expect(test.screen6.line4_ex, "");
  expect(test.screen6.sound_led1, 6133);
  expect(test.screen6.sound_led2, 6132);
  expect(test.screen6.sound_led3, 6548);
  expect(test.screen6.line2_1, "レシートを");
  expect(test.screen6.line2_2, "お受け取りください");
  expect(test.screen6.line2_3, "お大事にして下さい");
  expect(test.screen6.line2_4, "");
  expect(test.screen7.title, "アイテム明細画面");
  expect(test.screen7.msg1, "確認が終わりましたら、お会計ボタンを押してください");
  expect(test.screen7.msg2, "");
  expect(test.screen7.msg1_size, 0);
  expect(test.screen7.msg2_size, 0);
  expect(test.screen7.sound1, 6027);
  expect(test.screen7.sound2, 0);
  expect(test.screen7.sound3, 0);
  expect(test.screen7.snd_timer, 20);
  expect(test.screen7.timer1, 1);
  expect(test.screen7.timer2, 0);
  expect(test.screen7.timer3, 0);
  expect(test.screen7.dsp_flg1, 0);
  expect(test.screen7.dsp_flg2, 0);
  expect(test.screen7.movie01_ext, 0);
  expect(test.screen7.movie02_ext, 0);
  expect(test.screen7.movie03_ext, 0);
  expect(test.screen7.movie04_ext, 0);
  expect(test.screen7.line_title, "");
  expect(test.screen7.line_title_ex, "");
  expect(test.screen7.line1, "");
  expect(test.screen7.line2, "");
  expect(test.screen7.line3, "");
  expect(test.screen7.line4, "");
  expect(test.screen7.line1_ex, "");
  expect(test.screen7.line2_ex, "");
  expect(test.screen7.line3_ex, "");
  expect(test.screen7.line4_ex, "");
  expect(test.screen7.sound_led1, 6027);
  expect(test.screen7.sound_led2, 0);
  expect(test.screen7.sound_led3, 0);
  expect(test.screen8.title, "ｸﾚｼﾞｯﾄﾘｰﾄﾞ画面");
  expect(test.screen8.msg1, "お買上金額を確認し             クレジットカードを読ませて下さい");
  expect(test.screen8.msg2, "");
  expect(test.screen8.msg1_size, 0);
  expect(test.screen8.msg2_size, 0);
  expect(test.screen8.sound1, 6007);
  expect(test.screen8.sound2, 6008);
  expect(test.screen8.sound3, 0);
  expect(test.screen8.snd_timer, 20);
  expect(test.screen8.timer1, 0);
  expect(test.screen8.timer2, 0);
  expect(test.screen8.timer3, 0);
  expect(test.screen8.dsp_flg1, 0);
  expect(test.screen8.dsp_flg2, 0);
  expect(test.screen8.movie01_ext, 0);
  expect(test.screen8.movie02_ext, 0);
  expect(test.screen8.movie03_ext, 0);
  expect(test.screen8.movie04_ext, 0);
  expect(test.screen8.line_title, "クレジットでお支払い");
  expect(test.screen8.line_title_ex, "Credit Card Payment");
  expect(test.screen8.line1, "クレジットカードを");
  expect(test.screen8.line2, "読ませてください");
  expect(test.screen8.line3, "");
  expect(test.screen8.line4, "");
  expect(test.screen8.line1_ex, "Please swipe");
  expect(test.screen8.line2_ex, "your credit card.");
  expect(test.screen8.line3_ex, "");
  expect(test.screen8.line4_ex, "");
  expect(test.screen8.sound_led1, 6007);
  expect(test.screen8.sound_led2, 6008);
  expect(test.screen8.sound_led3, 0);
  expect(test.screen9.title, "ｸﾚｼﾞｯﾄ支払完了画面");
  expect(test.screen9.msg1, "レシートをお取りください。");
  expect(test.screen9.msg2, "");
  expect(test.screen9.msg1_size, 0);
  expect(test.screen9.msg2_size, 0);
  expect(test.screen9.sound1, 6018);
  expect(test.screen9.sound2, 0);
  expect(test.screen9.sound3, 0);
  expect(test.screen9.snd_timer, 0);
  expect(test.screen9.timer1, 5);
  expect(test.screen9.timer2, 10);
  expect(test.screen9.timer3, 0);
  expect(test.screen9.dsp_flg1, 0);
  expect(test.screen9.dsp_flg2, 0);
  expect(test.screen9.movie01_ext, 0);
  expect(test.screen9.movie02_ext, 0);
  expect(test.screen9.movie03_ext, 0);
  expect(test.screen9.movie04_ext, 0);
  expect(test.screen9.line_title, "");
  expect(test.screen9.line_title_ex, "");
  expect(test.screen9.line1, "レシートを");
  expect(test.screen9.line2, "お受け取りください");
  expect(test.screen9.line3, "ありがとう");
  expect(test.screen9.line4, "ございました");
  expect(test.screen9.line1_ex, "Thank you.");
  expect(test.screen9.line2_ex, "Please take your receipt.");
  expect(test.screen9.line3_ex, "");
  expect(test.screen9.line4_ex, "");
  expect(test.screen9.sound_led1, 6133);
  expect(test.screen9.sound_led2, 0);
  expect(test.screen9.sound_led3, 0);
  expect(test.screen10.title, "ありがとうございました画面");
  expect(test.screen10.msg1, "");
  expect(test.screen10.msg2, "");
  expect(test.screen10.msg1_size, 0);
  expect(test.screen10.msg2_size, 0);
  expect(test.screen10.sound1, 6025);
  expect(test.screen10.sound2, 6098);
  expect(test.screen10.sound3, 0);
  expect(test.screen10.snd_timer, 0);
  expect(test.screen10.timer1, 4);
  expect(test.screen10.timer2, 0);
  expect(test.screen10.timer3, 0);
  expect(test.screen10.dsp_flg1, 0);
  expect(test.screen10.dsp_flg2, 0);
  expect(test.screen10.movie01_ext, 0);
  expect(test.screen10.movie02_ext, 0);
  expect(test.screen10.movie03_ext, 0);
  expect(test.screen10.movie04_ext, 0);
  expect(test.screen10.line_title, "");
  expect(test.screen10.line_title_ex, "");
  expect(test.screen10.line1, "");
  expect(test.screen10.line2, "");
  expect(test.screen10.line3, "");
  expect(test.screen10.line4, "");
  expect(test.screen10.line1_ex, "");
  expect(test.screen10.line2_ex, "");
  expect(test.screen10.line3_ex, "");
  expect(test.screen10.line4_ex, "");
  expect(test.screen10.sound_led1, 6025);
  expect(test.screen10.sound_led2, 6098);
  expect(test.screen10.sound_led3, 0);
  expect(test.screen11.title, "店員呼び出し選択画面");
  expect(test.screen11.msg1, "");
  expect(test.screen11.msg2, "");
  expect(test.screen11.msg1_size, 0);
  expect(test.screen11.msg2_size, 0);
  expect(test.screen11.sound1, 6034);
  expect(test.screen11.sound2, 0);
  expect(test.screen11.sound3, 0);
  expect(test.screen11.snd_timer, 10);
  expect(test.screen11.timer1, 0);
  expect(test.screen11.timer2, 0);
  expect(test.screen11.timer3, 0);
  expect(test.screen11.dsp_flg1, 0);
  expect(test.screen11.dsp_flg2, 0);
  expect(test.screen11.movie01_ext, 0);
  expect(test.screen11.movie02_ext, 0);
  expect(test.screen11.movie03_ext, 0);
  expect(test.screen11.movie04_ext, 0);
  expect(test.screen11.line_title, "");
  expect(test.screen11.line_title_ex, "");
  expect(test.screen11.line1, "");
  expect(test.screen11.line2, "");
  expect(test.screen11.line3, "");
  expect(test.screen11.line4, "");
  expect(test.screen11.line1_ex, "");
  expect(test.screen11.line2_ex, "");
  expect(test.screen11.line3_ex, "");
  expect(test.screen11.line4_ex, "");
  expect(test.screen11.sound_led1, 6034);
  expect(test.screen11.sound_led2, 0);
  expect(test.screen11.sound_led3, 0);
  expect(test.screen12.title, "店員呼び出し中画面");
  expect(test.screen12.msg1, "");
  expect(test.screen12.msg2, "");
  expect(test.screen12.msg1_size, 0);
  expect(test.screen12.msg2_size, 0);
  expect(test.screen12.sound1, 6035);
  expect(test.screen12.sound2, 0);
  expect(test.screen12.sound3, 0);
  expect(test.screen12.snd_timer, 15);
  expect(test.screen12.timer1, 0);
  expect(test.screen12.timer2, 0);
  expect(test.screen12.timer3, 0);
  expect(test.screen12.dsp_flg1, 0);
  expect(test.screen12.dsp_flg2, 0);
  expect(test.screen12.movie01_ext, 0);
  expect(test.screen12.movie02_ext, 0);
  expect(test.screen12.movie03_ext, 0);
  expect(test.screen12.movie04_ext, 0);
  expect(test.screen12.line_title, "");
  expect(test.screen12.line_title_ex, "");
  expect(test.screen12.line1, "");
  expect(test.screen12.line2, "");
  expect(test.screen12.line3, "");
  expect(test.screen12.line4, "");
  expect(test.screen12.line1_ex, "");
  expect(test.screen12.line2_ex, "");
  expect(test.screen12.line3_ex, "");
  expect(test.screen12.line4_ex, "");
  expect(test.screen12.sound_led1, 6178);
  expect(test.screen12.sound_led2, 0);
  expect(test.screen12.sound_led3, 0);
  expect(test.screen13.title, "パスワード入力");
  expect(test.screen13.msg1, "");
  expect(test.screen13.msg2, "");
  expect(test.screen13.msg1_size, 0);
  expect(test.screen13.msg2_size, 0);
  expect(test.screen13.sound1, 6036);
  expect(test.screen13.sound2, 0);
  expect(test.screen13.sound3, 0);
  expect(test.screen13.snd_timer, 20);
  expect(test.screen13.timer1, 0);
  expect(test.screen13.timer2, 0);
  expect(test.screen13.timer3, 0);
  expect(test.screen13.dsp_flg1, 0);
  expect(test.screen13.dsp_flg2, 0);
  expect(test.screen13.movie01_ext, 0);
  expect(test.screen13.movie02_ext, 0);
  expect(test.screen13.movie03_ext, 0);
  expect(test.screen13.movie04_ext, 0);
  expect(test.screen13.line_title, "");
  expect(test.screen13.line_title_ex, "");
  expect(test.screen13.line1, "");
  expect(test.screen13.line2, "");
  expect(test.screen13.line3, "");
  expect(test.screen13.line4, "");
  expect(test.screen13.line1_ex, "");
  expect(test.screen13.line2_ex, "");
  expect(test.screen13.line3_ex, "");
  expect(test.screen13.line4_ex, "");
  expect(test.screen13.sound_led1, 6036);
  expect(test.screen13.sound_led2, 0);
  expect(test.screen13.sound_led3, 0);
  expect(test.screen14.title, "メンテナンス画面");
  expect(test.screen14.msg1, "");
  expect(test.screen14.msg2, "");
  expect(test.screen14.msg1_size, 0);
  expect(test.screen14.msg2_size, 0);
  expect(test.screen14.sound1, 6031);
  expect(test.screen14.sound2, 1008);
  expect(test.screen14.sound3, 0);
  expect(test.screen14.snd_timer, 0);
  expect(test.screen14.timer1, 0);
  expect(test.screen14.timer2, 0);
  expect(test.screen14.timer3, 0);
  expect(test.screen14.dsp_flg1, 0);
  expect(test.screen14.dsp_flg2, 0);
  expect(test.screen14.movie01_ext, 0);
  expect(test.screen14.movie02_ext, 0);
  expect(test.screen14.movie03_ext, 0);
  expect(test.screen14.movie04_ext, 0);
  expect(test.screen14.line_title, "");
  expect(test.screen14.line_title_ex, "");
  expect(test.screen14.line1, "");
  expect(test.screen14.line2, "");
  expect(test.screen14.line3, "");
  expect(test.screen14.line4, "");
  expect(test.screen14.line1_ex, "");
  expect(test.screen14.line2_ex, "");
  expect(test.screen14.line3_ex, "");
  expect(test.screen14.line4_ex, "");
  expect(test.screen14.sound_led1, 6031);
  expect(test.screen14.sound_led2, 1008);
  expect(test.screen14.sound_led3, 0);
  expect(test.screen15.title, "商品取消画面");
  expect(test.screen15.msg1, "");
  expect(test.screen15.msg2, "");
  expect(test.screen15.msg1_size, 0);
  expect(test.screen15.msg2_size, 0);
  expect(test.screen15.sound1, 1054);
  expect(test.screen15.sound2, 5089);
  expect(test.screen15.sound3, 5090);
  expect(test.screen15.snd_timer, 30);
  expect(test.screen15.timer1, 0);
  expect(test.screen15.timer2, 0);
  expect(test.screen15.timer3, 0);
  expect(test.screen15.dsp_flg1, 0);
  expect(test.screen15.dsp_flg2, 0);
  expect(test.screen15.movie01_ext, 0);
  expect(test.screen15.movie02_ext, 0);
  expect(test.screen15.movie03_ext, 0);
  expect(test.screen15.movie04_ext, 0);
  expect(test.screen15.line_title, "");
  expect(test.screen15.line_title_ex, "");
  expect(test.screen15.line1, "");
  expect(test.screen15.line2, "");
  expect(test.screen15.line3, "");
  expect(test.screen15.line4, "");
  expect(test.screen15.line1_ex, "");
  expect(test.screen15.line2_ex, "");
  expect(test.screen15.line3_ex, "");
  expect(test.screen15.line4_ex, "");
  expect(test.screen15.sound_led1, 1054);
  expect(test.screen15.sound_led2, 5089);
  expect(test.screen15.sound_led3, 5090);
  expect(test.screen16.title, "クレジットリード完了画面");
  expect(test.screen16.msg1, "よろしければ決済ボタンを       押してください");
  expect(test.screen16.msg2, "");
  expect(test.screen16.msg1_size, 0);
  expect(test.screen16.msg2_size, 0);
  expect(test.screen16.sound1, 6119);
  expect(test.screen16.sound2, "");
  expect(test.screen16.sound3, "");
  expect(test.screen16.snd_timer, 20);
  expect(test.screen16.timer1, 0);
  expect(test.screen16.timer2, 0);
  expect(test.screen16.timer3, 0);
  expect(test.screen16.dsp_flg1, 0);
  expect(test.screen16.dsp_flg2, 0);
  expect(test.screen16.movie01_ext, 0);
  expect(test.screen16.movie02_ext, 0);
  expect(test.screen16.movie03_ext, 0);
  expect(test.screen16.movie04_ext, 0);
  expect(test.screen16.line_title, "");
  expect(test.screen16.line_title_ex, "");
  expect(test.screen16.line1, "よろしければ");
  expect(test.screen16.line2, "おわりボタンを");
  expect(test.screen16.line3, "押してください");
  expect(test.screen16.line4, "");
  expect(test.screen16.line1_ex, "When ready, ");
  expect(test.screen16.line2_ex, "press \"finish\"");
  expect(test.screen16.line3_ex, "to complete payment.");
  expect(test.screen16.line4_ex, "");
  expect(test.screen16.sound_led1, 6179);
  expect(test.screen16.sound_led2, "");
  expect(test.screen16.sound_led3, "");
  expect(test.screen16.msg_max, 1);
  expect(test.screen16.line2_1, "クレジット決済できませんでした");
  expect(test.screen16.line2_2, "会計中止ボタンを押して");
  expect(test.screen16.line2_3, "再度お会計を行ってください");
  expect(test.screen16.line2_4, "");
  expect(test.screen16.line2_1_ex, "Payment failed.");
  expect(test.screen16.line2_2_ex, "Press \"Swipe again\"");
  expect(test.screen16.line2_3_ex, "and try it again.");
  expect(test.screen16.line2_4_ex, "");
  expect(test.screen17.title, "Edyタッチ画面");
  expect(test.screen17.msg1, "お会計金額を確認し             “Ｅｄｙ”をタッチしてください");
  expect(test.screen17.msg2, "");
  expect(test.screen17.msg1_size, 0);
  expect(test.screen17.msg2_size, 0);
  expect(test.screen17.sound1, 6124);
  expect(test.screen17.sound2, 6125);
  expect(test.screen17.sound3, 0);
  expect(test.screen17.snd_timer, 20);
  expect(test.screen17.timer1, 0);
  expect(test.screen17.timer2, 0);
  expect(test.screen17.timer3, 0);
  expect(test.screen17.dsp_flg1, 0);
  expect(test.screen17.dsp_flg2, 0);
  expect(test.screen17.movie01_ext, 0);
  expect(test.screen17.movie02_ext, 0);
  expect(test.screen17.movie03_ext, 0);
  expect(test.screen17.movie04_ext, 0);
  expect(test.screen17.line_title, "Ｅｄｙでお支払い");
  expect(test.screen17.line_title_ex, "Edy Payment");
  expect(test.screen17.line1, "お会計金額を確認し");
  expect(test.screen17.line2, "カードをタッチしてください");
  expect(test.screen17.line3, "");
  expect(test.screen17.line4, "");
  expect(test.screen17.line1_ex, "Please read");
  expect(test.screen17.line2_ex, "Card on the Reader.");
  expect(test.screen17.line3_ex, "");
  expect(test.screen17.line4_ex, "");
  expect(test.screen17.sound_led1, 6124);
  expect(test.screen17.sound_led2, 6125);
  expect(test.screen17.sound_led3, 0);
  expect(test.screen18.title, "Edy支払完了画面");
  expect(test.screen18.msg1, "レシートをお取りください。");
  expect(test.screen18.msg2, "");
  expect(test.screen18.msg1_size, 0);
  expect(test.screen18.msg2_size, 0);
  expect(test.screen18.sound1, 6019);
  expect(test.screen18.sound2, 0);
  expect(test.screen18.sound3, 0);
  expect(test.screen18.snd_timer, 0);
  expect(test.screen18.timer1, 5);
  expect(test.screen18.timer2, 10);
  expect(test.screen18.timer3, 0);
  expect(test.screen18.dsp_flg1, 0);
  expect(test.screen18.dsp_flg2, 0);
  expect(test.screen18.movie01_ext, 0);
  expect(test.screen18.movie02_ext, 0);
  expect(test.screen18.movie03_ext, 0);
  expect(test.screen18.movie04_ext, 0);
  expect(test.screen18.line_title, "");
  expect(test.screen18.line_title_ex, "");
  expect(test.screen18.line1, "レシートを");
  expect(test.screen18.line2, "お受け取りください");
  expect(test.screen18.line3, "ありがとう");
  expect(test.screen18.line4, "ございました");
  expect(test.screen18.line1_ex, "Thank you.");
  expect(test.screen18.line2_ex, "Please take your receipt.");
  expect(test.screen18.line3_ex, "");
  expect(test.screen18.line4_ex, "");
  expect(test.screen18.sound_led1, 6019);
  expect(test.screen18.sound_led2, 0);
  expect(test.screen18.sound_led3, 0);
  expect(test.screen19.title, "Edyタッチ完了画面");
  expect(test.screen19.msg1, "レシート発行ボタンを              押してください");
  expect(test.screen19.msg2, "");
  expect(test.screen19.msg1_size, 0);
  expect(test.screen19.msg2_size, 0);
  expect(test.screen19.sound1, 6126);
  expect(test.screen19.sound2, "");
  expect(test.screen19.sound3, "");
  expect(test.screen19.snd_timer, 20);
  expect(test.screen19.timer1, 0);
  expect(test.screen19.timer2, 0);
  expect(test.screen19.timer3, 0);
  expect(test.screen19.dsp_flg1, 0);
  expect(test.screen19.dsp_flg2, 0);
  expect(test.screen19.movie01_ext, 0);
  expect(test.screen19.movie02_ext, 0);
  expect(test.screen19.movie03_ext, 0);
  expect(test.screen19.movie04_ext, 0);
  expect(test.screen19.line_title, "");
  expect(test.screen19.line_title_ex, "");
  expect(test.screen19.line1, "よろしければ");
  expect(test.screen19.line2, "おわりボタンを");
  expect(test.screen19.line3, "押してください");
  expect(test.screen19.line4, "");
  expect(test.screen19.line1_ex, "When ready, ");
  expect(test.screen19.line2_ex, "press \"finish\"");
  expect(test.screen19.line3_ex, "to complete payment.");
  expect(test.screen19.line4_ex, "");
  expect(test.screen19.sound_led1, 6179);
  expect(test.screen19.sound_led2, "");
  expect(test.screen19.sound_led3, "");
  expect(test.screen20.title, "電子マネー確認選択画面");
  expect(test.screen20.msg1, "確認する電子マネーを選択してください");
  expect(test.screen20.msg2, "");
  expect(test.screen20.msg1_size, 0);
  expect(test.screen20.msg2_size, 0);
  expect(test.screen20.sound1, 6028);
  expect(test.screen20.sound2, 0);
  expect(test.screen20.sound3, 0);
  expect(test.screen20.snd_timer, 30);
  expect(test.screen20.timer1, 0);
  expect(test.screen20.timer2, 0);
  expect(test.screen20.timer3, 0);
  expect(test.screen20.dsp_flg1, 0);
  expect(test.screen20.dsp_flg2, 0);
  expect(test.screen20.movie01_ext, 0);
  expect(test.screen20.movie02_ext, 0);
  expect(test.screen20.movie03_ext, 0);
  expect(test.screen20.movie04_ext, 0);
  expect(test.screen20.line_title, "");
  expect(test.screen20.line_title_ex, "");
  expect(test.screen20.line1, "");
  expect(test.screen20.line2, "");
  expect(test.screen20.line3, "");
  expect(test.screen20.line4, "");
  expect(test.screen20.line1_ex, "");
  expect(test.screen20.line2_ex, "");
  expect(test.screen20.line3_ex, "");
  expect(test.screen20.line4_ex, "");
  expect(test.screen20.sound_led1, 6028);
  expect(test.screen20.sound_led2, 0);
  expect(test.screen20.sound_led3, 0);
  expect(test.screen21.title, "電子マネー確認Edyタッチ画面");
  expect(test.screen21.msg1, "Ｅｄｙをタッチしてください");
  expect(test.screen21.msg2, "");
  expect(test.screen21.msg1_size, 0);
  expect(test.screen21.msg2_size, 0);
  expect(test.screen21.sound1, 6009);
  expect(test.screen21.sound2, 0);
  expect(test.screen21.sound3, 0);
  expect(test.screen21.snd_timer, 10);
  expect(test.screen21.timer1, 0);
  expect(test.screen21.timer2, 0);
  expect(test.screen21.timer3, 0);
  expect(test.screen21.dsp_flg1, 0);
  expect(test.screen21.dsp_flg2, 0);
  expect(test.screen21.movie01_ext, 0);
  expect(test.screen21.movie02_ext, 0);
  expect(test.screen21.movie03_ext, 0);
  expect(test.screen21.movie04_ext, 0);
  expect(test.screen21.line_title, "");
  expect(test.screen21.line_title_ex, "");
  expect(test.screen21.line1, "");
  expect(test.screen21.line2, "");
  expect(test.screen21.line3, "");
  expect(test.screen21.line4, "");
  expect(test.screen21.line1_ex, "");
  expect(test.screen21.line2_ex, "");
  expect(test.screen21.line3_ex, "");
  expect(test.screen21.line4_ex, "");
  expect(test.screen21.sound_led1, 6009);
  expect(test.screen21.sound_led2, 0);
  expect(test.screen21.sound_led3, 0);
  expect(test.screen22.title, "電子マネー確認Edy完了画面");
  expect(test.screen22.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen22.msg2, "");
  expect(test.screen22.msg1_size, 0);
  expect(test.screen22.msg2_size, 0);
  expect(test.screen22.sound1, 6029);
  expect(test.screen22.sound2, 0);
  expect(test.screen22.sound3, 0);
  expect(test.screen22.snd_timer, 20);
  expect(test.screen22.timer1, 0);
  expect(test.screen22.timer2, 0);
  expect(test.screen22.timer3, 0);
  expect(test.screen22.dsp_flg1, 0);
  expect(test.screen22.dsp_flg2, 0);
  expect(test.screen22.movie01_ext, 0);
  expect(test.screen22.movie02_ext, 0);
  expect(test.screen22.movie03_ext, 0);
  expect(test.screen22.movie04_ext, 0);
  expect(test.screen22.line_title, "");
  expect(test.screen22.line_title_ex, "");
  expect(test.screen22.line1, "");
  expect(test.screen22.line2, "");
  expect(test.screen22.line3, "");
  expect(test.screen22.line4, "");
  expect(test.screen22.line1_ex, "");
  expect(test.screen22.line2_ex, "");
  expect(test.screen22.line3_ex, "");
  expect(test.screen22.line4_ex, "");
  expect(test.screen22.sound_led1, 6029);
  expect(test.screen22.sound_led2, 0);
  expect(test.screen22.sound_led3, 0);
  expect(test.screen23.title, "返金画面");
  expect(test.screen23.msg1, "お金とレシートを　             お取りください。");
  expect(test.screen23.msg2, "");
  expect(test.screen23.msg1_size, 0);
  expect(test.screen23.msg2_size, 0);
  expect(test.screen23.sound1, 6127);
  expect(test.screen23.sound2, 0);
  expect(test.screen23.sound3, 0);
  expect(test.screen23.snd_timer, 0);
  expect(test.screen23.timer1, 0);
  expect(test.screen23.timer2, 0);
  expect(test.screen23.timer3, 0);
  expect(test.screen23.dsp_flg1, 0);
  expect(test.screen23.dsp_flg2, 0);
  expect(test.screen23.movie01_ext, 0);
  expect(test.screen23.movie02_ext, 0);
  expect(test.screen23.movie03_ext, 0);
  expect(test.screen23.movie04_ext, 0);
  expect(test.screen23.line_title, "");
  expect(test.screen23.line_title_ex, "");
  expect(test.screen23.line1, "お金を");
  expect(test.screen23.line2, "お受け取りください");
  expect(test.screen23.line3, "");
  expect(test.screen23.line4, "");
  expect(test.screen23.line1_ex, "Please take the money.");
  expect(test.screen23.line2_ex, "");
  expect(test.screen23.line3_ex, "");
  expect(test.screen23.line4_ex, "");
  expect(test.screen23.sound_led1, 6098);
  expect(test.screen23.sound_led2, 0);
  expect(test.screen23.sound_led3, 0);
  expect(test.screen24.title, "交通系ICタッチ画面");
  expect(test.screen24.msg1, "お会計金額を確認し             “交通系IC”をタッチしてください");
  expect(test.screen24.msg2, "");
  expect(test.screen24.msg1_size, 0);
  expect(test.screen24.msg2_size, 0);
  expect(test.screen24.sound1, 6153);
  expect(test.screen24.sound2, 6070);
  expect(test.screen24.sound3, 0);
  expect(test.screen24.snd_timer, 20);
  expect(test.screen24.timer1, 0);
  expect(test.screen24.timer2, 0);
  expect(test.screen24.timer3, 0);
  expect(test.screen24.dsp_flg1, 0);
  expect(test.screen24.dsp_flg2, 0);
  expect(test.screen24.movie01_ext, 0);
  expect(test.screen24.movie02_ext, 0);
  expect(test.screen24.movie03_ext, 0);
  expect(test.screen24.movie04_ext, 0);
  expect(test.screen24.line_title, "交通系ICでお支払い");
  expect(test.screen24.line_title_ex, "IC Card Payment");
  expect(test.screen24.line1, "お会計金額を確認し");
  expect(test.screen24.line2, "カードをタッチしてください");
  expect(test.screen24.line3, "");
  expect(test.screen24.line4, "");
  expect(test.screen24.line1_ex, "Tap your IC card");
  expect(test.screen24.line2_ex, "on the terminal.");
  expect(test.screen24.line3_ex, "");
  expect(test.screen24.line4_ex, "");
  expect(test.screen24.sound_led1, 6153);
  expect(test.screen24.sound_led2, 6070);
  expect(test.screen24.sound_led3, 0);
  expect(test.screen25.title, "交通系IC支払完了画面");
  expect(test.screen25.msg1, "レシートをお取りください。");
  expect(test.screen25.msg2, "");
  expect(test.screen25.msg1_size, 0);
  expect(test.screen25.msg2_size, 0);
  expect(test.screen25.sound1, 6219);
  expect(test.screen25.sound2, 0);
  expect(test.screen25.sound3, 0);
  expect(test.screen25.snd_timer, 0);
  expect(test.screen25.timer1, 5);
  expect(test.screen25.timer2, 10);
  expect(test.screen25.timer3, 0);
  expect(test.screen25.dsp_flg1, 0);
  expect(test.screen25.dsp_flg2, 0);
  expect(test.screen25.movie01_ext, 0);
  expect(test.screen25.movie02_ext, 0);
  expect(test.screen25.movie03_ext, 0);
  expect(test.screen25.movie04_ext, 0);
  expect(test.screen25.line_title, "");
  expect(test.screen25.line_title_ex, "");
  expect(test.screen25.line1, "レシートを");
  expect(test.screen25.line2, "お受け取りください");
  expect(test.screen25.line3, "ありがとう");
  expect(test.screen25.line4, "ございました");
  expect(test.screen25.line1_ex, "Please take your card");
  expect(test.screen25.line2_ex, "and the receipt.");
  expect(test.screen25.line3_ex, "Thank you.");
  expect(test.screen25.line4_ex, "");
  expect(test.screen25.sound_led1, 6219);
  expect(test.screen25.sound_led2, 0);
  expect(test.screen25.sound_led3, 0);
  expect(test.screen26.title, "交通系ICタッチ完了画面");
  expect(test.screen26.msg1, "レシート発行ボタンを              押してください");
  expect(test.screen26.msg2, "");
  expect(test.screen26.msg1_size, 0);
  expect(test.screen26.msg2_size, 0);
  expect(test.screen26.sound1, 6126);
  expect(test.screen26.sound2, "");
  expect(test.screen26.sound3, "");
  expect(test.screen26.snd_timer, 20);
  expect(test.screen26.timer1, 0);
  expect(test.screen26.timer2, 0);
  expect(test.screen26.timer3, 0);
  expect(test.screen26.dsp_flg1, 0);
  expect(test.screen26.dsp_flg2, 0);
  expect(test.screen26.movie01_ext, 0);
  expect(test.screen26.movie02_ext, 0);
  expect(test.screen26.movie03_ext, 0);
  expect(test.screen26.movie04_ext, 0);
  expect(test.screen26.line_title, "");
  expect(test.screen26.line_title_ex, "");
  expect(test.screen26.line1, "よろしければ");
  expect(test.screen26.line2, "おわりボタンを");
  expect(test.screen26.line3, "押してください");
  expect(test.screen26.line4, "");
  expect(test.screen26.line1_ex, "When ready, ");
  expect(test.screen26.line2_ex, "press \"finish\"");
  expect(test.screen26.line3_ex, "to complete payment.");
  expect(test.screen26.line4_ex, "");
  expect(test.screen26.sound_led1, 6179);
  expect(test.screen26.sound_led2, "");
  expect(test.screen26.sound_led3, "");
  expect(test.screen27.title, "電子マネー確認交通系ICタッチ画面");
  expect(test.screen27.msg1, "交通系ICをタッチしてください");
  expect(test.screen27.msg2, "");
  expect(test.screen27.msg1_size, 0);
  expect(test.screen27.msg2_size, 0);
  expect(test.screen27.sound1, 6153);
  expect(test.screen27.sound2, 0);
  expect(test.screen27.sound3, 0);
  expect(test.screen27.snd_timer, 10);
  expect(test.screen27.timer1, 0);
  expect(test.screen27.timer2, 0);
  expect(test.screen27.timer3, 0);
  expect(test.screen27.dsp_flg1, 0);
  expect(test.screen27.dsp_flg2, 0);
  expect(test.screen27.movie01_ext, 0);
  expect(test.screen27.movie02_ext, 0);
  expect(test.screen27.movie03_ext, 0);
  expect(test.screen27.movie04_ext, 0);
  expect(test.screen27.line_title, "");
  expect(test.screen27.line_title_ex, "");
  expect(test.screen27.line1, "");
  expect(test.screen27.line2, "");
  expect(test.screen27.line3, "");
  expect(test.screen27.line4, "");
  expect(test.screen27.line1_ex, "");
  expect(test.screen27.line2_ex, "");
  expect(test.screen27.line3_ex, "");
  expect(test.screen27.line4_ex, "");
  expect(test.screen27.sound_led1, 6153);
  expect(test.screen27.sound_led2, 0);
  expect(test.screen27.sound_led3, 0);
  expect(test.screen28.title, "電子マネー確認交通系IC完了画面");
  expect(test.screen28.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen28.msg2, "");
  expect(test.screen28.msg1_size, 0);
  expect(test.screen28.msg2_size, 0);
  expect(test.screen28.sound1, 6029);
  expect(test.screen28.sound2, 0);
  expect(test.screen28.sound3, 0);
  expect(test.screen28.snd_timer, 20);
  expect(test.screen28.timer1, 0);
  expect(test.screen28.timer2, 0);
  expect(test.screen28.timer3, 0);
  expect(test.screen28.dsp_flg1, 0);
  expect(test.screen28.dsp_flg2, 0);
  expect(test.screen28.movie01_ext, 0);
  expect(test.screen28.movie02_ext, 0);
  expect(test.screen28.movie03_ext, 0);
  expect(test.screen28.movie04_ext, 0);
  expect(test.screen28.line_title, "");
  expect(test.screen28.line_title_ex, "");
  expect(test.screen28.line1, "");
  expect(test.screen28.line2, "");
  expect(test.screen28.line3, "");
  expect(test.screen28.line4, "");
  expect(test.screen28.line1_ex, "");
  expect(test.screen28.line2_ex, "");
  expect(test.screen28.line3_ex, "");
  expect(test.screen28.line4_ex, "");
  expect(test.screen28.sound_led1, 6029);
  expect(test.screen28.sound_led2, 0);
  expect(test.screen28.sound_led3, 0);
  expect(test.screen29.title, "レジ袋登録画面");
  expect(test.screen29.msg1, "レジ袋登録");
  expect(test.screen29.msg2, "レジ袋は有料となっております。枚数を入力してください。");
  expect(test.screen29.msg1_size, 1);
  expect(test.screen29.msg2_size, 1);
  expect(test.screen29.sound1, 0);
  expect(test.screen29.sound2, 0);
  expect(test.screen29.sound3, 0);
  expect(test.screen29.snd_timer, 0);
  expect(test.screen29.timer1, 0);
  expect(test.screen29.timer2, 0);
  expect(test.screen29.timer3, 0);
  expect(test.screen29.dsp_flg1, 0);
  expect(test.screen29.dsp_flg2, 0);
  expect(test.screen29.movie01_ext, 0);
  expect(test.screen29.movie02_ext, 0);
  expect(test.screen29.movie03_ext, 0);
  expect(test.screen29.movie04_ext, 0);
  expect(test.screen29.line_title, "");
  expect(test.screen29.line_title_ex, "");
  expect(test.screen29.line1, "");
  expect(test.screen29.line2, "");
  expect(test.screen29.line3, "");
  expect(test.screen29.line4, "");
  expect(test.screen29.line1_ex, "");
  expect(test.screen29.line2_ex, "");
  expect(test.screen29.line3_ex, "");
  expect(test.screen29.line4_ex, "");
  expect(test.screen29.sound_led1, 0);
  expect(test.screen29.sound_led2, 0);
  expect(test.screen29.sound_led3, 0);
  expect(test.screen30.title, "おつりチャージ画面");
  expect(test.screen30.msg1, "");
  expect(test.screen30.msg2, "");
  expect(test.screen30.msg1_size, 0);
  expect(test.screen30.msg2_size, 0);
  expect(test.screen30.sound1, 6183);
  expect(test.screen30.sound2, 0);
  expect(test.screen30.sound3, 0);
  expect(test.screen30.snd_timer, 20);
  expect(test.screen30.timer1, 0);
  expect(test.screen30.timer2, 0);
  expect(test.screen30.timer3, 0);
  expect(test.screen30.dsp_flg1, 0);
  expect(test.screen30.dsp_flg2, 0);
  expect(test.screen30.movie01_ext, 0);
  expect(test.screen30.movie02_ext, 0);
  expect(test.screen30.movie03_ext, 0);
  expect(test.screen30.movie04_ext, 0);
  expect(test.screen30.line_title, "");
  expect(test.screen30.line_title_ex, "");
  expect(test.screen30.line1, "");
  expect(test.screen30.line2, "");
  expect(test.screen30.line3, "");
  expect(test.screen30.line4, "");
  expect(test.screen30.line1_ex, "");
  expect(test.screen30.line2_ex, "");
  expect(test.screen30.line3_ex, "");
  expect(test.screen30.line4_ex, "");
  expect(test.screen30.sound_led1, 6183);
  expect(test.screen30.sound_led2, 0);
  expect(test.screen30.sound_led3, 0);
  expect(test.screen31.title, "現金チャージ選択画面");
  expect(test.screen31.msg1, "チャージ金額を選択してください");
  expect(test.screen31.msg2, "Select the amount you want to add to your card.");
  expect(test.screen31.msg1_size, 30);
  expect(test.screen31.msg2_size, 47);
  expect(test.screen31.sound1, 6198);
  expect(test.screen31.sound2, 0);
  expect(test.screen31.sound3, 0);
  expect(test.screen31.snd_timer, 30);
  expect(test.screen31.timer1, 0);
  expect(test.screen31.timer2, 0);
  expect(test.screen31.timer3, 0);
  expect(test.screen31.dsp_flg1, 0);
  expect(test.screen31.dsp_flg2, 0);
  expect(test.screen31.movie01_ext, 0);
  expect(test.screen31.movie02_ext, 0);
  expect(test.screen31.movie03_ext, 0);
  expect(test.screen31.movie04_ext, 0);
  expect(test.screen31.line_title, "");
  expect(test.screen31.line_title_ex, "");
  expect(test.screen31.line1, "");
  expect(test.screen31.line2, "");
  expect(test.screen31.line3, "");
  expect(test.screen31.line4, "");
  expect(test.screen31.line1_ex, "");
  expect(test.screen31.line2_ex, "");
  expect(test.screen31.line3_ex, "");
  expect(test.screen31.line4_ex, "");
  expect(test.screen31.sound_led1, 6198);
  expect(test.screen31.sound_led2, 0);
  expect(test.screen31.sound_led3, 0);
  expect(test.screen32.title, "ｎｉｍｏｃａカード確認画面");
  expect(test.screen32.msg1, "★ｎｉｍｏｃａカード、または");
  expect(test.screen32.msg2, "クレジットｎｉｍｏｃａカードはお持ちですか？");
  expect(test.screen32.msg1_size, 28);
  expect(test.screen32.msg2_size, 44);
  expect(test.screen32.sound1, 6214);
  expect(test.screen32.sound2, 0);
  expect(test.screen32.sound3, 0);
  expect(test.screen32.snd_timer, 30);
  expect(test.screen32.timer1, 0);
  expect(test.screen32.timer2, 0);
  expect(test.screen32.timer3, 0);
  expect(test.screen32.dsp_flg1, 0);
  expect(test.screen32.dsp_flg2, 0);
  expect(test.screen32.movie01_ext, 0);
  expect(test.screen32.movie02_ext, 0);
  expect(test.screen32.movie03_ext, 0);
  expect(test.screen32.movie04_ext, 0);
  expect(test.screen32.line_title, "");
  expect(test.screen32.line_title_ex, "");
  expect(test.screen32.line1, "");
  expect(test.screen32.line2, "");
  expect(test.screen32.line3, "");
  expect(test.screen32.line4, "");
  expect(test.screen32.line1_ex, "");
  expect(test.screen32.line2_ex, "");
  expect(test.screen32.line3_ex, "");
  expect(test.screen32.line4_ex, "");
  expect(test.screen32.sound_led1, 6214);
  expect(test.screen32.sound_led2, 0);
  expect(test.screen32.sound_led3, 0);
  expect(test.screen33.title, "交通系ICチャージ画面");
  expect(test.screen33.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen33.msg2, "");
  expect(test.screen33.msg1_size, 0);
  expect(test.screen33.msg2_size, 0);
  expect(test.screen33.sound1, 6005);
  expect(test.screen33.sound2, 6006);
  expect(test.screen33.sound3, 6015);
  expect(test.screen33.snd_timer, 20);
  expect(test.screen33.timer1, 0);
  expect(test.screen33.timer2, 0);
  expect(test.screen33.timer3, 0);
  expect(test.screen33.dsp_flg1, 0);
  expect(test.screen33.dsp_flg2, 0);
  expect(test.screen33.movie01_ext, 0);
  expect(test.screen33.movie02_ext, 0);
  expect(test.screen33.movie03_ext, 0);
  expect(test.screen33.movie04_ext, 0);
  expect(test.screen33.line_title, "交通系ICチャージ");
  expect(test.screen33.line_title_ex, "Reload Card");
  expect(test.screen33.line1, "お金を");
  expect(test.screen33.line2, "入れてください");
  expect(test.screen33.line3, "");
  expect(test.screen33.line4, "");
  expect(test.screen33.line1_ex, "Insert the payment.");
  expect(test.screen33.line2_ex, "");
  expect(test.screen33.line3_ex, "");
  expect(test.screen33.line4_ex, "");
  expect(test.screen33.sound_led1, 6216);
  expect(test.screen33.sound_led2, 6216);
  expect(test.screen33.sound_led3, 6015);
  expect(test.screen34.title, "交通系ICチャージタッチ画面");
  expect(test.screen34.msg1, "チャージ金額を確認し“交通系IC”をタッチしてください");
  expect(test.screen34.msg2, "");
  expect(test.screen34.msg1_size, 0);
  expect(test.screen34.msg2_size, 0);
  expect(test.screen34.sound1, 6153);
  expect(test.screen34.sound2, 6070);
  expect(test.screen34.sound3, 0);
  expect(test.screen34.snd_timer, 20);
  expect(test.screen34.timer1, 0);
  expect(test.screen34.timer2, 0);
  expect(test.screen34.timer3, 0);
  expect(test.screen34.dsp_flg1, 0);
  expect(test.screen34.dsp_flg2, 0);
  expect(test.screen34.movie01_ext, 0);
  expect(test.screen34.movie02_ext, 0);
  expect(test.screen34.movie03_ext, 0);
  expect(test.screen34.movie04_ext, 0);
  expect(test.screen34.line_title, "交通系ICチャージ");
  expect(test.screen34.line_title_ex, "Reload Card");
  expect(test.screen34.line1, "チャージ金額を確認し");
  expect(test.screen34.line2, "カードをタッチしてください");
  expect(test.screen34.line3, "");
  expect(test.screen34.line4, "");
  expect(test.screen34.line1_ex, "Tap your IC card");
  expect(test.screen34.line2_ex, "on the terminal.");
  expect(test.screen34.line3_ex, "");
  expect(test.screen34.line4_ex, "");
  expect(test.screen34.sound_led1, 6153);
  expect(test.screen34.sound_led2, 6070);
  expect(test.screen34.sound_led3, 0);
  expect(test.screen35.title, "チャージする、しない確認画面");
  expect(test.screen35.msg1, "残額が不足しています。チャージしますか？");
  expect(test.screen35.msg2, "");
  expect(test.screen35.msg1_size, 42);
  expect(test.screen35.msg2_size, 0);
  expect(test.screen35.sound1, 6218);
  expect(test.screen35.sound2, 0);
  expect(test.screen35.sound3, 0);
  expect(test.screen35.snd_timer, 30);
  expect(test.screen35.timer1, 0);
  expect(test.screen35.timer2, 0);
  expect(test.screen35.timer3, 0);
  expect(test.screen35.dsp_flg1, 0);
  expect(test.screen35.dsp_flg2, 0);
  expect(test.screen35.movie01_ext, 0);
  expect(test.screen35.movie02_ext, 0);
  expect(test.screen35.movie03_ext, 0);
  expect(test.screen35.movie04_ext, 0);
  expect(test.screen35.line_title, "");
  expect(test.screen35.line_title_ex, "");
  expect(test.screen35.line1, "");
  expect(test.screen35.line2, "");
  expect(test.screen35.line3, "");
  expect(test.screen35.line4, "");
  expect(test.screen35.line1_ex, "");
  expect(test.screen35.line2_ex, "");
  expect(test.screen35.line3_ex, "");
  expect(test.screen35.line4_ex, "");
  expect(test.screen35.sound_led1, 6218);
  expect(test.screen35.sound_led2, 0);
  expect(test.screen35.sound_led3, 0);
  expect(test.screen36.title, "残額不足！！現金併用する？しない？確認画面");
  expect(test.screen36.msg1, "残額が不足している為、支払いが完了出来ません");
  expect(test.screen36.msg2, "不足額を現金でお支払いください");
  expect(test.screen36.msg1_size, 44);
  expect(test.screen36.msg2_size, 30);
  expect(test.screen36.sound1, 6224);
  expect(test.screen36.sound2, 0);
  expect(test.screen36.sound3, 0);
  expect(test.screen36.snd_timer, 30);
  expect(test.screen36.timer1, 0);
  expect(test.screen36.timer2, 0);
  expect(test.screen36.timer3, 0);
  expect(test.screen36.dsp_flg1, 0);
  expect(test.screen36.dsp_flg2, 0);
  expect(test.screen36.movie01_ext, 0);
  expect(test.screen36.movie02_ext, 0);
  expect(test.screen36.movie03_ext, 0);
  expect(test.screen36.movie04_ext, 0);
  expect(test.screen36.line_title, "");
  expect(test.screen36.line_title_ex, "");
  expect(test.screen36.line1, "");
  expect(test.screen36.line2, "");
  expect(test.screen36.line3, "");
  expect(test.screen36.line4, "");
  expect(test.screen36.line1_ex, "");
  expect(test.screen36.line2_ex, "");
  expect(test.screen36.line3_ex, "");
  expect(test.screen36.line4_ex, "");
  expect(test.screen36.sound_led1, 6224);
  expect(test.screen36.sound_led2, 0);
  expect(test.screen36.sound_led3, 0);
  expect(test.screen37.title, "領収書？レシート？発行確認画面");
  expect(test.screen37.msg1, "どちらか一方のボタンを選択してください");
  expect(test.screen37.msg2, "Please touch either of the buttons.");
  expect(test.screen37.msg1_size, 38);
  expect(test.screen37.msg2_size, 35);
  expect(test.screen37.sound1, 6225);
  expect(test.screen37.sound2, 0);
  expect(test.screen37.sound3, 0);
  expect(test.screen37.snd_timer, 30);
  expect(test.screen37.timer1, 0);
  expect(test.screen37.timer2, 0);
  expect(test.screen37.timer3, 0);
  expect(test.screen37.dsp_flg1, 0);
  expect(test.screen37.dsp_flg2, 0);
  expect(test.screen37.movie01_ext, 0);
  expect(test.screen37.movie02_ext, 0);
  expect(test.screen37.movie03_ext, 0);
  expect(test.screen37.movie04_ext, 0);
  expect(test.screen37.line_title, "");
  expect(test.screen37.line_title_ex, "");
  expect(test.screen37.line1, "");
  expect(test.screen37.line2, "");
  expect(test.screen37.line3, "");
  expect(test.screen37.line4, "");
  expect(test.screen37.line1_ex, "");
  expect(test.screen37.line2_ex, "");
  expect(test.screen37.line3_ex, "");
  expect(test.screen37.line4_ex, "");
  expect(test.screen37.sound_led1, 6225);
  expect(test.screen37.sound_led2, 0);
  expect(test.screen37.sound_led3, 0);
  expect(test.screen38.title, "交通系ICチャージ入金完了画面");
  expect(test.screen38.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen38.msg2, "");
  expect(test.screen38.msg1_size, 0);
  expect(test.screen38.msg2_size, 0);
  expect(test.screen38.sound1, 6217);
  expect(test.screen38.sound2, 0);
  expect(test.screen38.sound3, 0);
  expect(test.screen38.snd_timer, 20);
  expect(test.screen38.timer1, 10);
  expect(test.screen38.timer2, 0);
  expect(test.screen38.timer3, 0);
  expect(test.screen38.dsp_flg1, 0);
  expect(test.screen38.dsp_flg2, 0);
  expect(test.screen38.movie01_ext, 0);
  expect(test.screen38.movie02_ext, 0);
  expect(test.screen38.movie03_ext, 0);
  expect(test.screen38.movie04_ext, 0);
  expect(test.screen38.line_title, "交通系ICチャージ");
  expect(test.screen38.line_title_ex, "Reload Card");
  expect(test.screen38.line1, "よろしければ");
  expect(test.screen38.line2, "チャージボタンを");
  expect(test.screen38.line3, "押してください");
  expect(test.screen38.line4, "");
  expect(test.screen38.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen38.line2_ex, "button to reload");
  expect(test.screen38.line3_ex, "your card.");
  expect(test.screen38.line4_ex, "");
  expect(test.screen38.sound_led1, 6179);
  expect(test.screen38.sound_led2, 6217);
  expect(test.screen38.sound_led3, 0);
  expect(test.screen39.title, "未精算支払画面");
  expect(test.screen39.msg1, "よろしければ未精算支払へを押してください");
  expect(test.screen39.msg2, "");
  expect(test.screen39.msg1_size, 0);
  expect(test.screen39.msg2_size, 0);
  expect(test.screen39.sound1, 6226);
  expect(test.screen39.sound2, 0);
  expect(test.screen39.sound3, 0);
  expect(test.screen39.snd_timer, 20);
  expect(test.screen39.timer1, 10);
  expect(test.screen39.timer2, 0);
  expect(test.screen39.timer3, 0);
  expect(test.screen39.dsp_flg1, 0);
  expect(test.screen39.dsp_flg2, 0);
  expect(test.screen39.movie01_ext, 0);
  expect(test.screen39.movie02_ext, 0);
  expect(test.screen39.movie03_ext, 0);
  expect(test.screen39.movie04_ext, 0);
  expect(test.screen39.line_title, "");
  expect(test.screen39.line_title_ex, "");
  expect(test.screen39.line1, "よろしければ");
  expect(test.screen39.line2, "未精算支払へを");
  expect(test.screen39.line3, "押してください");
  expect(test.screen39.line4, "");
  expect(test.screen39.line1_ex, "Touch the");
  expect(test.screen39.line2_ex, "\"Pay remaining balance\"");
  expect(test.screen39.line3_ex, "button.");
  expect(test.screen39.line4_ex, "");
  expect(test.screen39.sound_led1, 6226);
  expect(test.screen39.sound_led2, 0);
  expect(test.screen39.sound_led3, 0);
  expect(test.screen40.title, "ポイント機能なしカード通知画面");
  expect(test.screen40.msg1, "ポイント機能なしカードです");
  expect(test.screen40.msg2, "You cannot use this card to earn points.");
  expect(test.screen40.msg1_size, 26);
  expect(test.screen40.msg2_size, 40);
  expect(test.screen40.sound1, 6632);
  expect(test.screen40.sound2, 0);
  expect(test.screen40.sound3, 0);
  expect(test.screen40.snd_timer, 30);
  expect(test.screen40.timer1, 0);
  expect(test.screen40.timer2, 0);
  expect(test.screen40.timer3, 0);
  expect(test.screen40.dsp_flg1, 0);
  expect(test.screen40.dsp_flg2, 0);
  expect(test.screen40.movie01_ext, 0);
  expect(test.screen40.movie02_ext, 0);
  expect(test.screen40.movie03_ext, 0);
  expect(test.screen40.movie04_ext, 0);
  expect(test.screen40.line_title, "");
  expect(test.screen40.line_title_ex, "");
  expect(test.screen40.line1, "");
  expect(test.screen40.line2, "");
  expect(test.screen40.line3, "");
  expect(test.screen40.line4, "");
  expect(test.screen40.line1_ex, "");
  expect(test.screen40.line2_ex, "");
  expect(test.screen40.line3_ex, "");
  expect(test.screen40.line4_ex, "");
  expect(test.screen40.sound_led1, 6632);
  expect(test.screen40.sound_led2, 0);
  expect(test.screen40.sound_led3, 0);
  expect(test.screen41.title, "チケットお取り下さい画面");
  expect(test.screen41.msg1, "チケットをお取りください。");
  expect(test.screen41.msg2, "");
  expect(test.screen41.msg1_size, 0);
  expect(test.screen41.msg2_size, 0);
  expect(test.screen41.sound1, 6228);
  expect(test.screen41.sound2, 0);
  expect(test.screen41.sound3, 0);
  expect(test.screen41.snd_timer, 0);
  expect(test.screen41.timer1, 5);
  expect(test.screen41.timer2, 10);
  expect(test.screen41.timer3, 0);
  expect(test.screen41.dsp_flg1, 0);
  expect(test.screen41.dsp_flg2, 0);
  expect(test.screen41.movie01_ext, 0);
  expect(test.screen41.movie02_ext, 0);
  expect(test.screen41.movie03_ext, 0);
  expect(test.screen41.movie04_ext, 0);
  expect(test.screen41.line_title, "");
  expect(test.screen41.line_title_ex, "");
  expect(test.screen41.line1, "チケットとレシートを");
  expect(test.screen41.line2, "お受け取りください");
  expect(test.screen41.line3, "ありがとう");
  expect(test.screen41.line4, "ございました");
  expect(test.screen41.line1_ex, "Thank you.");
  expect(test.screen41.line2_ex, "Please take your receipt.");
  expect(test.screen41.line3_ex, "");
  expect(test.screen41.line4_ex, "");
  expect(test.screen41.sound_led1, 6228);
  expect(test.screen41.sound_led2, 0);
  expect(test.screen41.sound_led3, 0);
  expect(test.screen42.title, "クレジット利用画面<verifone>");
  expect(test.screen42.msg1, "クレジットでお会計ですね");
  expect(test.screen42.msg2, "");
  expect(test.screen42.msg1_size, 0);
  expect(test.screen42.msg2_size, 0);
  expect(test.screen42.sound1, 6007);
  expect(test.screen42.sound2, 6008);
  expect(test.screen42.sound3, 0);
  expect(test.screen42.snd_timer, 20);
  expect(test.screen42.timer1, 0);
  expect(test.screen42.timer2, 0);
  expect(test.screen42.timer3, 0);
  expect(test.screen42.dsp_flg1, 0);
  expect(test.screen42.dsp_flg2, 0);
  expect(test.screen42.movie01_ext, 0);
  expect(test.screen42.movie02_ext, 0);
  expect(test.screen42.movie03_ext, 0);
  expect(test.screen42.movie04_ext, 0);
  expect(test.screen42.line_title, "クレジットでお支払い");
  expect(test.screen42.line_title_ex, "Credit Card Payment");
  expect(test.screen42.line1, "お支払い金額を確認し");
  expect(test.screen42.line2, "カードを読ませてください");
  expect(test.screen42.line3, "");
  expect(test.screen42.line4, "");
  expect(test.screen42.line1_ex, "Please swipe");
  expect(test.screen42.line2_ex, "your credit card.");
  expect(test.screen42.line3_ex, "");
  expect(test.screen42.line4_ex, "");
  expect(test.screen42.sound_led1, 6007);
  expect(test.screen42.sound_led2, 6008);
  expect(test.screen42.sound_led3, 0);
  expect(test.screen43.title, "Edy利用画面<verifone>");
  expect(test.screen43.msg1, "Edyでお会計ですね");
  expect(test.screen43.msg2, "");
  expect(test.screen43.msg1_size, 0);
  expect(test.screen43.msg2_size, 0);
  expect(test.screen43.sound1, 6124);
  expect(test.screen43.sound2, 6125);
  expect(test.screen43.sound3, 0);
  expect(test.screen43.snd_timer, 20);
  expect(test.screen43.timer1, 0);
  expect(test.screen43.timer2, 0);
  expect(test.screen43.timer3, 0);
  expect(test.screen43.dsp_flg1, 0);
  expect(test.screen43.dsp_flg2, 0);
  expect(test.screen43.movie01_ext, 0);
  expect(test.screen43.movie02_ext, 0);
  expect(test.screen43.movie03_ext, 0);
  expect(test.screen43.movie04_ext, 0);
  expect(test.screen43.line_title, "Ｅｄｙでお支払い");
  expect(test.screen43.line_title_ex, "Edy Payment");
  expect(test.screen43.line1, "お支払い金額を確認し");
  expect(test.screen43.line2, "カードをタッチしてください");
  expect(test.screen43.line3, "");
  expect(test.screen43.line4, "");
  expect(test.screen43.line1_ex, "Tap your IC card");
  expect(test.screen43.line2_ex, "on the terminal.");
  expect(test.screen43.line3_ex, "");
  expect(test.screen43.line4_ex, "");
  expect(test.screen43.sound_led1, 6124);
  expect(test.screen43.sound_led2, 6125);
  expect(test.screen43.sound_led3, 0);
  expect(test.screen44.title, "iD利用画面<verifone>");
  expect(test.screen44.msg1, "iDでお会計ですね");
  expect(test.screen44.msg2, "");
  expect(test.screen44.msg1_size, 0);
  expect(test.screen44.msg2_size, 0);
  expect(test.screen44.sound1, 6124);
  expect(test.screen44.sound2, 6255);
  expect(test.screen44.sound3, 0);
  expect(test.screen44.snd_timer, 20);
  expect(test.screen44.timer1, 0);
  expect(test.screen44.timer2, 0);
  expect(test.screen44.timer3, 0);
  expect(test.screen44.dsp_flg1, 0);
  expect(test.screen44.dsp_flg2, 0);
  expect(test.screen44.movie01_ext, 0);
  expect(test.screen44.movie02_ext, 0);
  expect(test.screen44.movie03_ext, 0);
  expect(test.screen44.movie04_ext, 0);
  expect(test.screen44.line_title, "ｉＤでお支払い");
  expect(test.screen44.line_title_ex, "iD Payment");
  expect(test.screen44.line1, "お支払い金額を確認し");
  expect(test.screen44.line2, "カードをタッチしてください");
  expect(test.screen44.line3, "");
  expect(test.screen44.line4, "");
  expect(test.screen44.line1_ex, "Tap your IC card");
  expect(test.screen44.line2_ex, "on the terminal.");
  expect(test.screen44.line3_ex, "");
  expect(test.screen44.line4_ex, "");
  expect(test.screen44.sound_led1, 6124);
  expect(test.screen44.sound_led2, 6255);
  expect(test.screen44.sound_led3, 0);
  expect(test.screen45.title, "交通系IC利用画面<verifone>");
  expect(test.screen45.msg1, "交通系ICでお会計ですね");
  expect(test.screen45.msg2, "");
  expect(test.screen45.msg1_size, 0);
  expect(test.screen45.msg2_size, 0);
  expect(test.screen45.sound1, 6124);
  expect(test.screen45.sound2, 6153);
  expect(test.screen45.sound3, 0);
  expect(test.screen45.snd_timer, 20);
  expect(test.screen45.timer1, 0);
  expect(test.screen45.timer2, 0);
  expect(test.screen45.timer3, 0);
  expect(test.screen45.dsp_flg1, 0);
  expect(test.screen45.dsp_flg2, 0);
  expect(test.screen45.movie01_ext, 0);
  expect(test.screen45.movie02_ext, 0);
  expect(test.screen45.movie03_ext, 0);
  expect(test.screen45.movie04_ext, 0);
  expect(test.screen45.line_title, "交通系ＩＣでお支払い");
  expect(test.screen45.line_title_ex, "IC Card Payment");
  expect(test.screen45.line1, "お支払い金額を確認し");
  expect(test.screen45.line2, "カードをタッチしてください");
  expect(test.screen45.line3, "");
  expect(test.screen45.line4, "");
  expect(test.screen45.line1_ex, "Tap your IC card");
  expect(test.screen45.line2_ex, "on the terminal.");
  expect(test.screen45.line3_ex, "");
  expect(test.screen45.line4_ex, "");
  expect(test.screen45.sound_led1, 6124);
  expect(test.screen45.sound_led2, 6153);
  expect(test.screen45.sound_led3, 0);
  expect(test.screen46.title, "QUICPay利用画面<verifone>");
  expect(test.screen46.msg1, "QUICPayでお会計ですね");
  expect(test.screen46.msg2, "");
  expect(test.screen46.msg1_size, 0);
  expect(test.screen46.msg2_size, 0);
  expect(test.screen46.sound1, 6124);
  expect(test.screen46.sound2, 6254);
  expect(test.screen46.sound3, 0);
  expect(test.screen46.snd_timer, 20);
  expect(test.screen46.timer1, 0);
  expect(test.screen46.timer2, 0);
  expect(test.screen46.timer3, 0);
  expect(test.screen46.dsp_flg1, 0);
  expect(test.screen46.dsp_flg2, 0);
  expect(test.screen46.movie01_ext, 0);
  expect(test.screen46.movie02_ext, 0);
  expect(test.screen46.movie03_ext, 0);
  expect(test.screen46.movie04_ext, 0);
  expect(test.screen46.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen46.line_title_ex, "QUICPay Payment");
  expect(test.screen46.line1, "お支払い金額を確認し");
  expect(test.screen46.line2, "カードをタッチしてください");
  expect(test.screen46.line3, "");
  expect(test.screen46.line4, "");
  expect(test.screen46.line1_ex, "Tap your IC card");
  expect(test.screen46.line2_ex, "on the terminal.");
  expect(test.screen46.line3_ex, "");
  expect(test.screen46.line4_ex, "");
  expect(test.screen46.sound_led1, 6124);
  expect(test.screen46.sound_led2, 6254);
  expect(test.screen46.sound_led3, 0);
  expect(test.screen47.title, "WAON利用画面<verifone>");
  expect(test.screen47.msg1, "WAONでお会計ですね");
  expect(test.screen47.msg2, "");
  expect(test.screen47.msg1_size, 0);
  expect(test.screen47.msg2_size, 0);
  expect(test.screen47.sound1, 6124);
  expect(test.screen47.sound2, 6256);
  expect(test.screen47.sound3, 0);
  expect(test.screen47.snd_timer, 20);
  expect(test.screen47.timer1, 0);
  expect(test.screen47.timer2, 0);
  expect(test.screen47.timer3, 0);
  expect(test.screen47.dsp_flg1, 0);
  expect(test.screen47.dsp_flg2, 0);
  expect(test.screen47.movie01_ext, 0);
  expect(test.screen47.movie02_ext, 0);
  expect(test.screen47.movie03_ext, 0);
  expect(test.screen47.movie04_ext, 0);
  expect(test.screen47.line_title, "ＷＡＯＮでお支払い");
  expect(test.screen47.line_title_ex, "WAON Payment");
  expect(test.screen47.line1, "お支払い金額を確認し");
  expect(test.screen47.line2, "カードをタッチしてください");
  expect(test.screen47.line3, "");
  expect(test.screen47.line4, "");
  expect(test.screen47.line1_ex, "Tap your IC card");
  expect(test.screen47.line2_ex, "on the terminal.");
  expect(test.screen47.line3_ex, "");
  expect(test.screen47.line4_ex, "");
  expect(test.screen47.sound_led1, 6124);
  expect(test.screen47.sound_led2, 6256);
  expect(test.screen47.sound_led3, 0);
  expect(test.screen48.title, "nanaco利用画面<verifone>");
  expect(test.screen48.msg1, "nanacoでお会計ですね");
  expect(test.screen48.msg2, "");
  expect(test.screen48.msg1_size, 0);
  expect(test.screen48.msg2_size, 0);
  expect(test.screen48.sound1, 6124);
  expect(test.screen48.sound2, 6257);
  expect(test.screen48.sound3, 0);
  expect(test.screen48.snd_timer, 20);
  expect(test.screen48.timer1, 0);
  expect(test.screen48.timer2, 0);
  expect(test.screen48.timer3, 0);
  expect(test.screen48.dsp_flg1, 0);
  expect(test.screen48.dsp_flg2, 0);
  expect(test.screen48.movie01_ext, 0);
  expect(test.screen48.movie02_ext, 0);
  expect(test.screen48.movie03_ext, 0);
  expect(test.screen48.movie04_ext, 0);
  expect(test.screen48.line_title, "ｎａｎａｃｏでお支払い");
  expect(test.screen48.line_title_ex, "nanaco Payment");
  expect(test.screen48.line1, "お支払い金額を確認し");
  expect(test.screen48.line2, "カードをタッチしてください");
  expect(test.screen48.line3, "");
  expect(test.screen48.line4, "");
  expect(test.screen48.line1_ex, "Tap your IC card");
  expect(test.screen48.line2_ex, "on the terminal.");
  expect(test.screen48.line3_ex, "");
  expect(test.screen48.line4_ex, "");
  expect(test.screen48.sound_led1, 6124);
  expect(test.screen48.sound_led2, 6257);
  expect(test.screen48.sound_led3, 0);
  expect(test.screen49.title, "銀聯利用画面<verifone>");
  expect(test.screen49.msg1, "銀聯でお会計ですね");
  expect(test.screen49.msg2, "");
  expect(test.screen49.msg1_size, 0);
  expect(test.screen49.msg2_size, 0);
  expect(test.screen49.sound1, 6258);
  expect(test.screen49.sound2, 6252);
  expect(test.screen49.sound3, 0);
  expect(test.screen49.snd_timer, 20);
  expect(test.screen49.timer1, 0);
  expect(test.screen49.timer2, 0);
  expect(test.screen49.timer3, 0);
  expect(test.screen49.dsp_flg1, 0);
  expect(test.screen49.dsp_flg2, 0);
  expect(test.screen49.movie01_ext, 0);
  expect(test.screen49.movie02_ext, 0);
  expect(test.screen49.movie03_ext, 0);
  expect(test.screen49.movie04_ext, 0);
  expect(test.screen49.line_title, "銀聯でお支払い");
  expect(test.screen49.line_title_ex, "UnionPay Card Payment");
  expect(test.screen49.line1, "お支払い金額を確認し");
  expect(test.screen49.line2, "カードを読ませてください");
  expect(test.screen49.line3, "");
  expect(test.screen49.line4, "");
  expect(test.screen49.line1_ex, "Please swipe");
  expect(test.screen49.line2_ex, "your unionpay card.");
  expect(test.screen49.line3_ex, "");
  expect(test.screen49.line4_ex, "");
  expect(test.screen49.sound_led1, 6258);
  expect(test.screen49.sound_led2, 6252);
  expect(test.screen49.sound_led3, 0);
  expect(test.screen50.title, "プリカ利用画面<verifone>");
  expect(test.screen50.msg1, "プリペイドカードでお会計ですね");
  expect(test.screen50.msg2, "");
  expect(test.screen50.msg1_size, 0);
  expect(test.screen50.msg2_size, 0);
  expect(test.screen50.sound1, 6258);
  expect(test.screen50.sound2, 6253);
  expect(test.screen50.sound3, 0);
  expect(test.screen50.snd_timer, 20);
  expect(test.screen50.timer1, 0);
  expect(test.screen50.timer2, 0);
  expect(test.screen50.timer3, 0);
  expect(test.screen50.dsp_flg1, 0);
  expect(test.screen50.dsp_flg2, 0);
  expect(test.screen50.movie01_ext, 0);
  expect(test.screen50.movie02_ext, 0);
  expect(test.screen50.movie03_ext, 0);
  expect(test.screen50.movie04_ext, 0);
  expect(test.screen50.line_title, "プリカでお支払い");
  expect(test.screen50.line_title_ex, "Prepaid Card Payment");
  expect(test.screen50.line1, "お支払い金額を確認し");
  expect(test.screen50.line2, "カードを読ませてください");
  expect(test.screen50.line3, "");
  expect(test.screen50.line4, "");
  expect(test.screen50.line1_ex, "Please swipe");
  expect(test.screen50.line2_ex, "your prepaid card.");
  expect(test.screen50.line3_ex, "");
  expect(test.screen50.line4_ex, "");
  expect(test.screen50.sound_led1, 6258);
  expect(test.screen50.sound_led2, 6253);
  expect(test.screen50.sound_led3, 0);
  expect(test.screen51.title, "Edy入金画面<verifone>");
  expect(test.screen51.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen51.msg2, "");
  expect(test.screen51.msg1_size, 0);
  expect(test.screen51.msg2_size, 0);
  expect(test.screen51.sound1, 6216);
  expect(test.screen51.sound2, 6216);
  expect(test.screen51.sound3, "");
  expect(test.screen51.snd_timer, 20);
  expect(test.screen51.timer1, 0);
  expect(test.screen51.timer2, 0);
  expect(test.screen51.timer3, 0);
  expect(test.screen51.dsp_flg1, 0);
  expect(test.screen51.dsp_flg2, 0);
  expect(test.screen51.movie01_ext, 0);
  expect(test.screen51.movie02_ext, 0);
  expect(test.screen51.movie03_ext, 0);
  expect(test.screen51.movie04_ext, 0);
  expect(test.screen51.line_title, "Ｅｄｙチャージ");
  expect(test.screen51.line_title_ex, "Reload Card");
  expect(test.screen51.line1, "お金を");
  expect(test.screen51.line2, "入れてください");
  expect(test.screen51.line3, "");
  expect(test.screen51.line4, "");
  expect(test.screen51.line1_ex, "Insert the payment.");
  expect(test.screen51.line2_ex, "");
  expect(test.screen51.line3_ex, "");
  expect(test.screen51.line4_ex, "");
  expect(test.screen51.sound_led1, 6216);
  expect(test.screen51.sound_led2, 6216);
  expect(test.screen51.sound_led3, "");
  expect(test.screen52.title, "Edyチャージ画面<verifone>");
  expect(test.screen52.msg1, "“Edy”をタッチしてください");
  expect(test.screen52.msg2, "");
  expect(test.screen52.msg1_size, 0);
  expect(test.screen52.msg2_size, 0);
  expect(test.screen52.sound1, 6009);
  expect(test.screen52.sound2, 6009);
  expect(test.screen52.sound3, 0);
  expect(test.screen52.snd_timer, 20);
  expect(test.screen52.timer1, 0);
  expect(test.screen52.timer2, 0);
  expect(test.screen52.timer3, 0);
  expect(test.screen52.dsp_flg1, 0);
  expect(test.screen52.dsp_flg2, 0);
  expect(test.screen52.movie01_ext, 0);
  expect(test.screen52.movie02_ext, 0);
  expect(test.screen52.movie03_ext, 0);
  expect(test.screen52.movie04_ext, 0);
  expect(test.screen52.line_title, "Ｅｄｙチャージ");
  expect(test.screen52.line_title_ex, "Reload Card");
  expect(test.screen52.line1, "チャージ金額を確認し");
  expect(test.screen52.line2, "カードをタッチしてください");
  expect(test.screen52.line3, "");
  expect(test.screen52.line4, "");
  expect(test.screen52.line1_ex, "Tap your IC card");
  expect(test.screen52.line2_ex, "on the terminal.");
  expect(test.screen52.line3_ex, "");
  expect(test.screen52.line4_ex, "");
  expect(test.screen52.sound_led1, 6009);
  expect(test.screen52.sound_led2, 6009);
  expect(test.screen52.sound_led3, 0);
  expect(test.screen53.title, "Edy入金終了画面<verifone>");
  expect(test.screen53.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen53.msg2, "");
  expect(test.screen53.msg1_size, 0);
  expect(test.screen53.msg2_size, 0);
  expect(test.screen53.sound1, 6217);
  expect(test.screen53.sound2, 6217);
  expect(test.screen53.sound3, 0);
  expect(test.screen53.snd_timer, 20);
  expect(test.screen53.timer1, 10);
  expect(test.screen53.timer2, 0);
  expect(test.screen53.timer3, 0);
  expect(test.screen53.dsp_flg1, 0);
  expect(test.screen53.dsp_flg2, 0);
  expect(test.screen53.movie01_ext, 0);
  expect(test.screen53.movie02_ext, 0);
  expect(test.screen53.movie03_ext, 0);
  expect(test.screen53.movie04_ext, 0);
  expect(test.screen53.line_title, "Ｅｄｙチャージ");
  expect(test.screen53.line_title_ex, "Reload Card");
  expect(test.screen53.line1, "よろしければ");
  expect(test.screen53.line2, "チャージボタンを");
  expect(test.screen53.line3, "押してください");
  expect(test.screen53.line4, "");
  expect(test.screen53.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen53.line2_ex, "button to reload");
  expect(test.screen53.line3_ex, "your card.");
  expect(test.screen53.line4_ex, "");
  expect(test.screen53.sound_led1, 6217);
  expect(test.screen53.sound_led2, 6217);
  expect(test.screen53.sound_led3, 0);
  expect(test.screen54.title, "交通系IC入金画面<verifone>");
  expect(test.screen54.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen54.msg2, "");
  expect(test.screen54.msg1_size, 0);
  expect(test.screen54.msg2_size, 0);
  expect(test.screen54.sound1, 6216);
  expect(test.screen54.sound2, 6216);
  expect(test.screen54.sound3, "");
  expect(test.screen54.snd_timer, 20);
  expect(test.screen54.timer1, 0);
  expect(test.screen54.timer2, 0);
  expect(test.screen54.timer3, 0);
  expect(test.screen54.dsp_flg1, 0);
  expect(test.screen54.dsp_flg2, 0);
  expect(test.screen54.movie01_ext, 0);
  expect(test.screen54.movie02_ext, 0);
  expect(test.screen54.movie03_ext, 0);
  expect(test.screen54.movie04_ext, 0);
  expect(test.screen54.line_title, "交通系ＩＣチャージ");
  expect(test.screen54.line_title_ex, "Reload Card");
  expect(test.screen54.line1, "お金を");
  expect(test.screen54.line2, "入れてください");
  expect(test.screen54.line3, "");
  expect(test.screen54.line4, "");
  expect(test.screen54.line1_ex, "Insert the payment.");
  expect(test.screen54.line2_ex, "");
  expect(test.screen54.line3_ex, "");
  expect(test.screen54.line4_ex, "");
  expect(test.screen54.sound_led1, 6216);
  expect(test.screen54.sound_led2, 6216);
  expect(test.screen54.sound_led3, "");
  expect(test.screen55.title, "交通系ICチャージ画面<verifone>");
  expect(test.screen55.msg1, "“交通系IC”をタッチしてください");
  expect(test.screen55.msg2, "");
  expect(test.screen55.msg1_size, 0);
  expect(test.screen55.msg2_size, 0);
  expect(test.screen55.sound1, 6009);
  expect(test.screen55.sound2, 6009);
  expect(test.screen55.sound3, 0);
  expect(test.screen55.snd_timer, 20);
  expect(test.screen55.timer1, 0);
  expect(test.screen55.timer2, 0);
  expect(test.screen55.timer3, 0);
  expect(test.screen55.dsp_flg1, 0);
  expect(test.screen55.dsp_flg2, 0);
  expect(test.screen55.movie01_ext, 0);
  expect(test.screen55.movie02_ext, 0);
  expect(test.screen55.movie03_ext, 0);
  expect(test.screen55.movie04_ext, 0);
  expect(test.screen55.line_title, "交通系ＩＣチャージ");
  expect(test.screen55.line_title_ex, "Reload Card");
  expect(test.screen55.line1, "チャージ金額を確認し");
  expect(test.screen55.line2, "カードをタッチしてください");
  expect(test.screen55.line3, "");
  expect(test.screen55.line4, "");
  expect(test.screen55.line1_ex, "Tap your IC card");
  expect(test.screen55.line2_ex, "on the terminal.");
  expect(test.screen55.line3_ex, "");
  expect(test.screen55.line4_ex, "");
  expect(test.screen55.sound_led1, 6009);
  expect(test.screen55.sound_led2, 6009);
  expect(test.screen55.sound_led3, 0);
  expect(test.screen56.title, "交通系IC入金終了画面<verifone>");
  expect(test.screen56.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen56.msg2, "");
  expect(test.screen56.msg1_size, 0);
  expect(test.screen56.msg2_size, 0);
  expect(test.screen56.sound1, 6217);
  expect(test.screen56.sound2, 6217);
  expect(test.screen56.sound3, 0);
  expect(test.screen56.snd_timer, 20);
  expect(test.screen56.timer1, 10);
  expect(test.screen56.timer2, 0);
  expect(test.screen56.timer3, 0);
  expect(test.screen56.dsp_flg1, 0);
  expect(test.screen56.dsp_flg2, 0);
  expect(test.screen56.movie01_ext, 0);
  expect(test.screen56.movie02_ext, 0);
  expect(test.screen56.movie03_ext, 0);
  expect(test.screen56.movie04_ext, 0);
  expect(test.screen56.line_title, "交通系ＩＣチャージ");
  expect(test.screen56.line_title_ex, "Reload Card");
  expect(test.screen56.line1, "よろしければ");
  expect(test.screen56.line2, "チャージボタンを");
  expect(test.screen56.line3, "押してください");
  expect(test.screen56.line4, "");
  expect(test.screen56.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen56.line2_ex, "button to reload");
  expect(test.screen56.line3_ex, "your card.");
  expect(test.screen56.line4_ex, "");
  expect(test.screen56.sound_led1, 6217);
  expect(test.screen56.sound_led2, 6217);
  expect(test.screen56.sound_led3, 0);
  expect(test.screen57.title, "WAON入金画面<verifone>");
  expect(test.screen57.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen57.msg2, "");
  expect(test.screen57.msg1_size, 0);
  expect(test.screen57.msg2_size, 0);
  expect(test.screen57.sound1, 6216);
  expect(test.screen57.sound2, 6216);
  expect(test.screen57.sound3, "");
  expect(test.screen57.snd_timer, 20);
  expect(test.screen57.timer1, 0);
  expect(test.screen57.timer2, 0);
  expect(test.screen57.timer3, 0);
  expect(test.screen57.dsp_flg1, 0);
  expect(test.screen57.dsp_flg2, 0);
  expect(test.screen57.movie01_ext, 0);
  expect(test.screen57.movie02_ext, 0);
  expect(test.screen57.movie03_ext, 0);
  expect(test.screen57.movie04_ext, 0);
  expect(test.screen57.line_title, "ＷＡＯＮチャージ");
  expect(test.screen57.line_title_ex, "Reload Card");
  expect(test.screen57.line1, "お金を");
  expect(test.screen57.line2, "入れてください");
  expect(test.screen57.line3, "");
  expect(test.screen57.line4, "");
  expect(test.screen57.line1_ex, "Insert the payment.");
  expect(test.screen57.line2_ex, "");
  expect(test.screen57.line3_ex, "");
  expect(test.screen57.line4_ex, "");
  expect(test.screen57.sound_led1, 6216);
  expect(test.screen57.sound_led2, 6216);
  expect(test.screen57.sound_led3, "");
  expect(test.screen58.title, "WAONチャージ画面<verifone>");
  expect(test.screen58.msg1, "“WAON”をタッチしてください");
  expect(test.screen58.msg2, "");
  expect(test.screen58.msg1_size, 0);
  expect(test.screen58.msg2_size, 0);
  expect(test.screen58.sound1, 6009);
  expect(test.screen58.sound2, 6009);
  expect(test.screen58.sound3, 0);
  expect(test.screen58.snd_timer, 20);
  expect(test.screen58.timer1, 0);
  expect(test.screen58.timer2, 0);
  expect(test.screen58.timer3, 0);
  expect(test.screen58.dsp_flg1, 0);
  expect(test.screen58.dsp_flg2, 0);
  expect(test.screen58.movie01_ext, 0);
  expect(test.screen58.movie02_ext, 0);
  expect(test.screen58.movie03_ext, 0);
  expect(test.screen58.movie04_ext, 0);
  expect(test.screen58.line_title, "ＷＡＯＮチャージ");
  expect(test.screen58.line_title_ex, "Reload Card");
  expect(test.screen58.line1, "チャージ金額を確認し");
  expect(test.screen58.line2, "カードをタッチしてください");
  expect(test.screen58.line3, "");
  expect(test.screen58.line4, "");
  expect(test.screen58.line1_ex, "Tap your IC card");
  expect(test.screen58.line2_ex, "on the terminal.");
  expect(test.screen58.line3_ex, "");
  expect(test.screen58.line4_ex, "");
  expect(test.screen58.sound_led1, 6009);
  expect(test.screen58.sound_led2, 6009);
  expect(test.screen58.sound_led3, 0);
  expect(test.screen59.title, "WAON入金終了画面<verifone>");
  expect(test.screen59.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen59.msg2, "");
  expect(test.screen59.msg1_size, 0);
  expect(test.screen59.msg2_size, 0);
  expect(test.screen59.sound1, 6217);
  expect(test.screen59.sound2, 6217);
  expect(test.screen59.sound3, 0);
  expect(test.screen59.snd_timer, 20);
  expect(test.screen59.timer1, 10);
  expect(test.screen59.timer2, 0);
  expect(test.screen59.timer3, 0);
  expect(test.screen59.dsp_flg1, 0);
  expect(test.screen59.dsp_flg2, 0);
  expect(test.screen59.movie01_ext, 0);
  expect(test.screen59.movie02_ext, 0);
  expect(test.screen59.movie03_ext, 0);
  expect(test.screen59.movie04_ext, 0);
  expect(test.screen59.line_title, "ＷＡＯＮチャージ");
  expect(test.screen59.line_title_ex, "Reload Card");
  expect(test.screen59.line1, "よろしければ");
  expect(test.screen59.line2, "チャージボタンを");
  expect(test.screen59.line3, "押してください");
  expect(test.screen59.line4, "");
  expect(test.screen59.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen59.line2_ex, "button to reload");
  expect(test.screen59.line3_ex, "your card.");
  expect(test.screen59.line4_ex, "");
  expect(test.screen59.sound_led1, 6217);
  expect(test.screen59.sound_led2, 6217);
  expect(test.screen59.sound_led3, 0);
  expect(test.screen60.title, "nanaco入金画面<verifone>");
  expect(test.screen60.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen60.msg2, "");
  expect(test.screen60.msg1_size, 0);
  expect(test.screen60.msg2_size, 0);
  expect(test.screen60.sound1, 6216);
  expect(test.screen60.sound2, 6216);
  expect(test.screen60.sound3, "");
  expect(test.screen60.snd_timer, 20);
  expect(test.screen60.timer1, 0);
  expect(test.screen60.timer2, 0);
  expect(test.screen60.timer3, 0);
  expect(test.screen60.dsp_flg1, 0);
  expect(test.screen60.dsp_flg2, 0);
  expect(test.screen60.movie01_ext, 0);
  expect(test.screen60.movie02_ext, 0);
  expect(test.screen60.movie03_ext, 0);
  expect(test.screen60.movie04_ext, 0);
  expect(test.screen60.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen60.line_title_ex, "Reload Card");
  expect(test.screen60.line1, "お金を");
  expect(test.screen60.line2, "入れてください");
  expect(test.screen60.line3, "");
  expect(test.screen60.line4, "");
  expect(test.screen60.line1_ex, "Insert the payment.");
  expect(test.screen60.line2_ex, "");
  expect(test.screen60.line3_ex, "");
  expect(test.screen60.line4_ex, "");
  expect(test.screen60.sound_led1, 6216);
  expect(test.screen60.sound_led2, 6216);
  expect(test.screen60.sound_led3, "");
  expect(test.screen61.title, "nanacoチャージ画面<verifone>");
  expect(test.screen61.msg1, "“nanaco”をタッチしてください");
  expect(test.screen61.msg2, "");
  expect(test.screen61.msg1_size, 0);
  expect(test.screen61.msg2_size, 0);
  expect(test.screen61.sound1, 6009);
  expect(test.screen61.sound2, 6009);
  expect(test.screen61.sound3, 0);
  expect(test.screen61.snd_timer, 20);
  expect(test.screen61.timer1, 0);
  expect(test.screen61.timer2, 0);
  expect(test.screen61.timer3, 0);
  expect(test.screen61.dsp_flg1, 0);
  expect(test.screen61.dsp_flg2, 0);
  expect(test.screen61.movie01_ext, 0);
  expect(test.screen61.movie02_ext, 0);
  expect(test.screen61.movie03_ext, 0);
  expect(test.screen61.movie04_ext, 0);
  expect(test.screen61.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen61.line_title_ex, "Reload Card");
  expect(test.screen61.line1, "チャージ金額を確認し");
  expect(test.screen61.line2, "カードをタッチしてください");
  expect(test.screen61.line3, "");
  expect(test.screen61.line4, "");
  expect(test.screen61.line1_ex, "Tap your IC card");
  expect(test.screen61.line2_ex, "on the terminal.");
  expect(test.screen61.line3_ex, "");
  expect(test.screen61.line4_ex, "");
  expect(test.screen61.sound_led1, 6009);
  expect(test.screen61.sound_led2, 6009);
  expect(test.screen61.sound_led3, 0);
  expect(test.screen62.title, "nanaco入金終了画面<verifone>");
  expect(test.screen62.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen62.msg2, "");
  expect(test.screen62.msg1_size, 0);
  expect(test.screen62.msg2_size, 0);
  expect(test.screen62.sound1, 6217);
  expect(test.screen62.sound2, 6217);
  expect(test.screen62.sound3, 0);
  expect(test.screen62.snd_timer, 20);
  expect(test.screen62.timer1, 10);
  expect(test.screen62.timer2, 0);
  expect(test.screen62.timer3, 0);
  expect(test.screen62.dsp_flg1, 0);
  expect(test.screen62.dsp_flg2, 0);
  expect(test.screen62.movie01_ext, 0);
  expect(test.screen62.movie02_ext, 0);
  expect(test.screen62.movie03_ext, 0);
  expect(test.screen62.movie04_ext, 0);
  expect(test.screen62.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen62.line_title_ex, "Reload Card");
  expect(test.screen62.line1, "よろしければ");
  expect(test.screen62.line2, "チャージボタンを");
  expect(test.screen62.line3, "押してください");
  expect(test.screen62.line4, "");
  expect(test.screen62.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen62.line2_ex, "button to reload");
  expect(test.screen62.line3_ex, "your card.");
  expect(test.screen62.line4_ex, "");
  expect(test.screen62.sound_led1, 6217);
  expect(test.screen62.sound_led2, 6217);
  expect(test.screen62.sound_led3, 0);
  expect(test.screen63.title, "プリカ入金画面<verifone>");
  expect(test.screen63.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen63.msg2, "");
  expect(test.screen63.msg1_size, 0);
  expect(test.screen63.msg2_size, 0);
  expect(test.screen63.sound1, 6216);
  expect(test.screen63.sound2, 6216);
  expect(test.screen63.sound3, "");
  expect(test.screen63.snd_timer, 20);
  expect(test.screen63.timer1, 0);
  expect(test.screen63.timer2, 0);
  expect(test.screen63.timer3, 0);
  expect(test.screen63.dsp_flg1, 0);
  expect(test.screen63.dsp_flg2, 0);
  expect(test.screen63.movie01_ext, 0);
  expect(test.screen63.movie02_ext, 0);
  expect(test.screen63.movie03_ext, 0);
  expect(test.screen63.movie04_ext, 0);
  expect(test.screen63.line_title, "プリカチャージ");
  expect(test.screen63.line_title_ex, "Reload Card");
  expect(test.screen63.line1, "お金を");
  expect(test.screen63.line2, "入れてください");
  expect(test.screen63.line3, "");
  expect(test.screen63.line4, "");
  expect(test.screen63.line1_ex, "Insert the payment.");
  expect(test.screen63.line2_ex, "");
  expect(test.screen63.line3_ex, "");
  expect(test.screen63.line4_ex, "");
  expect(test.screen63.sound_led1, 6216);
  expect(test.screen63.sound_led2, 6216);
  expect(test.screen63.sound_led3, "");
  expect(test.screen64.title, "プリカチャージ画面<verifone>");
  expect(test.screen64.msg1, "“プリペイドカード”を読ませてください");
  expect(test.screen64.msg2, "");
  expect(test.screen64.msg1_size, 0);
  expect(test.screen64.msg2_size, 0);
  expect(test.screen64.sound1, 6258);
  expect(test.screen64.sound2, 6258);
  expect(test.screen64.sound3, 0);
  expect(test.screen64.snd_timer, 20);
  expect(test.screen64.timer1, 0);
  expect(test.screen64.timer2, 0);
  expect(test.screen64.timer3, 0);
  expect(test.screen64.dsp_flg1, 0);
  expect(test.screen64.dsp_flg2, 0);
  expect(test.screen64.movie01_ext, 0);
  expect(test.screen64.movie02_ext, 0);
  expect(test.screen64.movie03_ext, 0);
  expect(test.screen64.movie04_ext, 0);
  expect(test.screen64.line_title, "プリカチャージ");
  expect(test.screen64.line_title_ex, "Reload Card");
  expect(test.screen64.line1, "チャージ金額を確認し");
  expect(test.screen64.line2, "カードを読ませてください");
  expect(test.screen64.line3, "");
  expect(test.screen64.line4, "");
  expect(test.screen64.line1_ex, "Please swipe");
  expect(test.screen64.line2_ex, "your prepaid card.");
  expect(test.screen64.line3_ex, "");
  expect(test.screen64.line4_ex, "");
  expect(test.screen64.sound_led1, 6258);
  expect(test.screen64.sound_led2, 6258);
  expect(test.screen64.sound_led3, 0);
  expect(test.screen65.title, "プリカ入金終了画面<verifone>");
  expect(test.screen65.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen65.msg2, "");
  expect(test.screen65.msg1_size, 0);
  expect(test.screen65.msg2_size, 0);
  expect(test.screen65.sound1, 6217);
  expect(test.screen65.sound2, 6217);
  expect(test.screen65.sound3, 0);
  expect(test.screen65.snd_timer, 20);
  expect(test.screen65.timer1, 10);
  expect(test.screen65.timer2, 0);
  expect(test.screen65.timer3, 0);
  expect(test.screen65.dsp_flg1, 0);
  expect(test.screen65.dsp_flg2, 0);
  expect(test.screen65.movie01_ext, 0);
  expect(test.screen65.movie02_ext, 0);
  expect(test.screen65.movie03_ext, 0);
  expect(test.screen65.movie04_ext, 0);
  expect(test.screen65.line_title, "プリカチャージ");
  expect(test.screen65.line_title_ex, "Reload Card");
  expect(test.screen65.line1, "よろしければ");
  expect(test.screen65.line2, "チャージボタンを");
  expect(test.screen65.line3, "押してください");
  expect(test.screen65.line4, "");
  expect(test.screen65.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen65.line2_ex, "button to reload");
  expect(test.screen65.line3_ex, "your card.");
  expect(test.screen65.line4_ex, "");
  expect(test.screen65.sound_led1, 6217);
  expect(test.screen65.sound_led2, 6217);
  expect(test.screen65.sound_led3, 0);
  expect(test.screen67.title, "店員操作中画面<対面>");
  expect(test.screen67.msg1, "");
  expect(test.screen67.msg2, "");
  expect(test.screen67.msg1_size, 0);
  expect(test.screen67.msg2_size, 0);
  expect(test.screen67.sound1, 0);
  expect(test.screen67.sound2, 0);
  expect(test.screen67.sound3, 0);
  expect(test.screen67.snd_timer, 0);
  expect(test.screen67.timer1, 0);
  expect(test.screen67.timer2, 0);
  expect(test.screen67.timer3, 0);
  expect(test.screen67.dsp_flg1, 0);
  expect(test.screen67.dsp_flg2, 0);
  expect(test.screen67.movie01_ext, 0);
  expect(test.screen67.movie02_ext, 0);
  expect(test.screen67.movie03_ext, 0);
  expect(test.screen67.movie04_ext, 0);
  expect(test.screen67.line_title, "");
  expect(test.screen67.line_title_ex, "");
  expect(test.screen67.line1, "店員操作中です");
  expect(test.screen67.line2, "お待ちください");
  expect(test.screen67.line3, "");
  expect(test.screen67.line4, "");
  expect(test.screen67.line1_ex, "");
  expect(test.screen67.line2_ex, "");
  expect(test.screen67.line3_ex, "");
  expect(test.screen67.line4_ex, "");
  expect(test.screen67.sound_led1, 0);
  expect(test.screen67.sound_led2, 0);
  expect(test.screen67.sound_led3, 0);
  expect(test.screen68.title, "プリカチャージ入金完了画面");
  expect(test.screen68.msg1, "");
  expect(test.screen68.msg2, "");
  expect(test.screen68.msg1_size, 0);
  expect(test.screen68.msg2_size, 0);
  expect(test.screen68.sound1, 0);
  expect(test.screen68.sound2, 0);
  expect(test.screen68.sound3, 0);
  expect(test.screen68.snd_timer, 0);
  expect(test.screen68.timer1, 0);
  expect(test.screen68.timer2, 0);
  expect(test.screen68.timer3, 0);
  expect(test.screen68.dsp_flg1, 0);
  expect(test.screen68.dsp_flg2, 0);
  expect(test.screen68.movie01_ext, 0);
  expect(test.screen68.movie02_ext, 0);
  expect(test.screen68.movie03_ext, 0);
  expect(test.screen68.movie04_ext, 0);
  expect(test.screen68.line_title, "");
  expect(test.screen68.line_title_ex, "");
  expect(test.screen68.line1, "よろしければ");
  expect(test.screen68.line2, "チャージボタンを");
  expect(test.screen68.line3, "押してください");
  expect(test.screen68.line4, "");
  expect(test.screen68.line1_ex, "");
  expect(test.screen68.line2_ex, "");
  expect(test.screen68.line3_ex, "");
  expect(test.screen68.line4_ex, "");
  expect(test.screen68.sound_led1, 6179);
  expect(test.screen68.sound_led2, 6217);
  expect(test.screen68.sound_led3, 0);
  expect(test.screen69.title, "チャージ完了画面<印字なし>");
  expect(test.screen69.msg1, "");
  expect(test.screen69.msg2, "");
  expect(test.screen69.msg1_size, 0);
  expect(test.screen69.msg2_size, 0);
  expect(test.screen69.sound1, 0);
  expect(test.screen69.sound2, 0);
  expect(test.screen69.sound3, 0);
  expect(test.screen69.snd_timer, 0);
  expect(test.screen69.timer1, 0);
  expect(test.screen69.timer2, 0);
  expect(test.screen69.timer3, 0);
  expect(test.screen69.dsp_flg1, 0);
  expect(test.screen69.dsp_flg2, 0);
  expect(test.screen69.movie01_ext, 0);
  expect(test.screen69.movie02_ext, 0);
  expect(test.screen69.movie03_ext, 0);
  expect(test.screen69.movie04_ext, 0);
  expect(test.screen69.line_title, "");
  expect(test.screen69.line_title_ex, "");
  expect(test.screen69.line1, "チャージしました");
  expect(test.screen69.line2, "お支払いを続けて");
  expect(test.screen69.line3, "ください");
  expect(test.screen69.line4, "");
  expect(test.screen69.line1_ex, "");
  expect(test.screen69.line2_ex, "");
  expect(test.screen69.line3_ex, "");
  expect(test.screen69.line4_ex, "");
  expect(test.screen69.sound_led1, 0);
  expect(test.screen69.sound_led2, 0);
  expect(test.screen69.sound_led3, 0);
  expect(test.screen70.title, "あいさつ画面");
  expect(test.screen70.msg1, "");
  expect(test.screen70.msg2, "");
  expect(test.screen70.msg1_size, 0);
  expect(test.screen70.msg2_size, 0);
  expect(test.screen70.sound1, 6547);
  expect(test.screen70.sound2, 0);
  expect(test.screen70.sound3, 0);
  expect(test.screen70.snd_timer, 20);
  expect(test.screen70.timer1, 0);
  expect(test.screen70.timer2, 0);
  expect(test.screen70.timer3, 0);
  expect(test.screen70.dsp_flg1, 0);
  expect(test.screen70.dsp_flg2, 0);
  expect(test.screen70.movie01_ext, 0);
  expect(test.screen70.movie02_ext, 0);
  expect(test.screen70.movie03_ext, 0);
  expect(test.screen70.movie04_ext, 0);
  expect(test.screen70.line_title, "");
  expect(test.screen70.line_title_ex, "");
  expect(test.screen70.line1, "");
  expect(test.screen70.line2, "");
  expect(test.screen70.line3, "");
  expect(test.screen70.line4, "");
  expect(test.screen70.line1_ex, "");
  expect(test.screen70.line2_ex, "");
  expect(test.screen70.line3_ex, "");
  expect(test.screen70.line4_ex, "");
  expect(test.screen70.sound_led1, 6547);
  expect(test.screen70.sound_led2, 0);
  expect(test.screen70.sound_led3, 0);
  expect(test.screen71.title, "会員カード選択画面");
  expect(test.screen71.msg1, "");
  expect(test.screen71.msg2, "");
  expect(test.screen71.msg1_size, 0);
  expect(test.screen71.msg2_size, 0);
  expect(test.screen71.sound1, 6547);
  expect(test.screen71.sound2, 0);
  expect(test.screen71.sound3, 0);
  expect(test.screen71.snd_timer, 20);
  expect(test.screen71.timer1, 0);
  expect(test.screen71.timer2, 0);
  expect(test.screen71.timer3, 0);
  expect(test.screen71.dsp_flg1, 0);
  expect(test.screen71.dsp_flg2, 0);
  expect(test.screen71.movie01_ext, 0);
  expect(test.screen71.movie02_ext, 0);
  expect(test.screen71.movie03_ext, 0);
  expect(test.screen71.movie04_ext, 0);
  expect(test.screen71.line_title, "");
  expect(test.screen71.line_title_ex, "");
  expect(test.screen71.line1, "");
  expect(test.screen71.line2, "");
  expect(test.screen71.line3, "");
  expect(test.screen71.line4, "");
  expect(test.screen71.line1_ex, "");
  expect(test.screen71.line2_ex, "");
  expect(test.screen71.line3_ex, "");
  expect(test.screen71.line4_ex, "");
  expect(test.screen71.sound_led1, 6547);
  expect(test.screen71.sound_led2, 0);
  expect(test.screen71.sound_led3, 0);
  expect(test.screen72.title, "会員リード画面");
  expect(test.screen72.msg1, "");
  expect(test.screen72.msg2, "");
  expect(test.screen72.msg1_size, 0);
  expect(test.screen72.msg2_size, 0);
  expect(test.screen72.sound1, 6143);
  expect(test.screen72.sound2, 0);
  expect(test.screen72.sound3, 0);
  expect(test.screen72.snd_timer, 20);
  expect(test.screen72.timer1, 0);
  expect(test.screen72.timer2, 0);
  expect(test.screen72.timer3, 0);
  expect(test.screen72.dsp_flg1, 0);
  expect(test.screen72.dsp_flg2, 0);
  expect(test.screen72.movie01_ext, 0);
  expect(test.screen72.movie02_ext, 0);
  expect(test.screen72.movie03_ext, 0);
  expect(test.screen72.movie04_ext, 0);
  expect(test.screen72.line_title, "");
  expect(test.screen72.line_title_ex, "");
  expect(test.screen72.line1, "");
  expect(test.screen72.line2, "");
  expect(test.screen72.line3, "");
  expect(test.screen72.line4, "");
  expect(test.screen72.line1_ex, "");
  expect(test.screen72.line2_ex, "");
  expect(test.screen72.line3_ex, "");
  expect(test.screen72.line4_ex, "");
  expect(test.screen72.sound_led1, 6143);
  expect(test.screen72.sound_led2, 0);
  expect(test.screen72.sound_led3, 0);
  expect(test.screen73.title, "dポイント支払画面");
  expect(test.screen73.msg1, "");
  expect(test.screen73.msg2, "");
  expect(test.screen73.msg1_size, 24);
  expect(test.screen73.msg2_size, 0);
  expect(test.screen73.sound1, 6534);
  expect(test.screen73.sound2, 6534);
  expect(test.screen73.sound3, 0);
  expect(test.screen73.snd_timer, 20);
  expect(test.screen73.timer1, 10);
  expect(test.screen73.timer2, 0);
  expect(test.screen73.timer3, 0);
  expect(test.screen73.dsp_flg1, 0);
  expect(test.screen73.dsp_flg2, 0);
  expect(test.screen73.movie01_ext, 0);
  expect(test.screen73.movie02_ext, 0);
  expect(test.screen73.movie03_ext, 0);
  expect(test.screen73.movie04_ext, 0);
  expect(test.screen73.line_title, "");
  expect(test.screen73.line_title_ex, "");
  expect(test.screen73.line1, "ポイント数を入力して");
  expect(test.screen73.line2, "決定を押してください");
  expect(test.screen73.line3, "訂正する場合はクリア");
  expect(test.screen73.line4, "ボタンを押してください");
  expect(test.screen73.line1_ex, "");
  expect(test.screen73.line2_ex, "");
  expect(test.screen73.line3_ex, "");
  expect(test.screen73.line4_ex, "");
  expect(test.screen73.sound_led1, 6534);
  expect(test.screen73.sound_led2, 6534);
  expect(test.screen73.sound_led3, 0);
  expect(test.screen74.title, "dﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen74.msg1, "");
  expect(test.screen74.msg2, "");
  expect(test.screen74.msg1_size, 0);
  expect(test.screen74.msg2_size, 0);
  expect(test.screen74.sound1, 6179);
  expect(test.screen74.sound2, 6179);
  expect(test.screen74.sound3, 0);
  expect(test.screen74.snd_timer, 20);
  expect(test.screen74.timer1, 10);
  expect(test.screen74.timer2, 0);
  expect(test.screen74.timer3, 0);
  expect(test.screen74.dsp_flg1, 0);
  expect(test.screen74.dsp_flg2, 0);
  expect(test.screen74.movie01_ext, 0);
  expect(test.screen74.movie02_ext, 0);
  expect(test.screen74.movie03_ext, 0);
  expect(test.screen74.movie04_ext, 0);
  expect(test.screen74.line_title, "");
  expect(test.screen74.line_title_ex, "");
  expect(test.screen74.line1, "よろしければ");
  expect(test.screen74.line2, "おわりボタンを");
  expect(test.screen74.line3, "押してください");
  expect(test.screen74.line4, "");
  expect(test.screen74.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen74.line2_ex, "button to complete");
  expect(test.screen74.line3_ex, "the payment.");
  expect(test.screen74.line4_ex, "");
  expect(test.screen74.sound_led1, 6179);
  expect(test.screen74.sound_led2, 6179);
  expect(test.screen74.sound_led3, 0);
  expect(test.screen75.title, "dﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen75.msg1, "レシートをお取りください。");
  expect(test.screen75.msg2, "");
  expect(test.screen75.msg1_size, 0);
  expect(test.screen75.msg2_size, 0);
  expect(test.screen75.sound1, 6133);
  expect(test.screen75.sound2, 6133);
  expect(test.screen75.sound3, 0);
  expect(test.screen75.snd_timer, 0);
  expect(test.screen75.timer1, 5);
  expect(test.screen75.timer2, 10);
  expect(test.screen75.timer3, 0);
  expect(test.screen75.dsp_flg1, 0);
  expect(test.screen75.dsp_flg2, 0);
  expect(test.screen75.movie01_ext, 0);
  expect(test.screen75.movie02_ext, 0);
  expect(test.screen75.movie03_ext, 0);
  expect(test.screen75.movie04_ext, 0);
  expect(test.screen75.line_title, "");
  expect(test.screen75.line_title_ex, "");
  expect(test.screen75.line1, "レシートを");
  expect(test.screen75.line2, "お受け取りください");
  expect(test.screen75.line3, "ありがとう");
  expect(test.screen75.line4, "ございました");
  expect(test.screen75.line1_ex, "Thank you.");
  expect(test.screen75.line2_ex, "Please take your receipt.");
  expect(test.screen75.line3_ex, "");
  expect(test.screen75.line4_ex, "");
  expect(test.screen75.sound_led1, 6133);
  expect(test.screen75.sound_led2, 6133);
  expect(test.screen75.sound_led3, 0);
  expect(test.screen76.title, "LINE Pay読取画面");
  expect(test.screen76.msg1, "");
  expect(test.screen76.msg2, "");
  expect(test.screen76.msg1_size, 24);
  expect(test.screen76.msg2_size, 0);
  expect(test.screen76.sound1, 0);
  expect(test.screen76.sound2, 0);
  expect(test.screen76.sound3, 0);
  expect(test.screen76.snd_timer, 20);
  expect(test.screen76.timer1, 0);
  expect(test.screen76.timer2, 0);
  expect(test.screen76.timer3, 0);
  expect(test.screen76.dsp_flg1, 0);
  expect(test.screen76.dsp_flg2, 0);
  expect(test.screen76.movie01_ext, 0);
  expect(test.screen76.movie02_ext, 0);
  expect(test.screen76.movie03_ext, 0);
  expect(test.screen76.movie04_ext, 0);
  expect(test.screen76.line_title, "LINE Payでお支払い");
  expect(test.screen76.line_title_ex, "");
  expect(test.screen76.line1, "お支払い金額を確認し");
  expect(test.screen76.line2, "バーコードを読ませてください");
  expect(test.screen76.line3, "");
  expect(test.screen76.line4, "");
  expect(test.screen76.line1_ex, "");
  expect(test.screen76.line2_ex, "");
  expect(test.screen76.line3_ex, "");
  expect(test.screen76.line4_ex, "");
  expect(test.screen76.sound_led1, 6273);
  expect(test.screen76.sound_led2, 6273);
  expect(test.screen76.sound_led3, 0);
  expect(test.screen77.title, "Alipay読取画面");
  expect(test.screen77.msg1, "");
  expect(test.screen77.msg2, "");
  expect(test.screen77.msg1_size, 0);
  expect(test.screen77.msg2_size, 0);
  expect(test.screen77.sound1, 0);
  expect(test.screen77.sound2, 0);
  expect(test.screen77.sound3, 0);
  expect(test.screen77.snd_timer, 20);
  expect(test.screen77.timer1, 0);
  expect(test.screen77.timer2, 0);
  expect(test.screen77.timer3, 0);
  expect(test.screen77.dsp_flg1, 0);
  expect(test.screen77.dsp_flg2, 0);
  expect(test.screen77.movie01_ext, 0);
  expect(test.screen77.movie02_ext, 0);
  expect(test.screen77.movie03_ext, 0);
  expect(test.screen77.movie04_ext, 0);
  expect(test.screen77.line_title, "Alipayでお支払い");
  expect(test.screen77.line_title_ex, "");
  expect(test.screen77.line1, "お支払い金額を確認し");
  expect(test.screen77.line2, "QRコードを読み込んでください");
  expect(test.screen77.line3, "");
  expect(test.screen77.line4, "");
  expect(test.screen77.line1_ex, "");
  expect(test.screen77.line2_ex, "");
  expect(test.screen77.line3_ex, "");
  expect(test.screen77.line4_ex, "");
  expect(test.screen77.sound_led1, 6272);
  expect(test.screen77.sound_led2, 6272);
  expect(test.screen77.sound_led3, 0);
  expect(test.screen78.title, "バーコード決済支払完了画面");
  expect(test.screen78.msg1, "レシートをお取りください。");
  expect(test.screen78.msg2, "");
  expect(test.screen78.msg1_size, 0);
  expect(test.screen78.msg2_size, 0);
  expect(test.screen78.sound1, 0);
  expect(test.screen78.sound2, 0);
  expect(test.screen78.sound3, 0);
  expect(test.screen78.snd_timer, 0);
  expect(test.screen78.timer1, 5);
  expect(test.screen78.timer2, 10);
  expect(test.screen78.timer3, 0);
  expect(test.screen78.dsp_flg1, 0);
  expect(test.screen78.dsp_flg2, 0);
  expect(test.screen78.movie01_ext, 0);
  expect(test.screen78.movie02_ext, 0);
  expect(test.screen78.movie03_ext, 0);
  expect(test.screen78.movie04_ext, 0);
  expect(test.screen78.line_title, "");
  expect(test.screen78.line_title_ex, "");
  expect(test.screen78.line1, "レシートを");
  expect(test.screen78.line2, "お受け取りください");
  expect(test.screen78.line3, "ありがとう");
  expect(test.screen78.line4, "ございました");
  expect(test.screen78.line1_ex, "");
  expect(test.screen78.line2_ex, "");
  expect(test.screen78.line3_ex, "");
  expect(test.screen78.line4_ex, "");
  expect(test.screen78.sound_led1, 6133);
  expect(test.screen78.sound_led2, 6133);
  expect(test.screen78.sound_led3, 0);
  expect(test.screen79.title, "バーコード決済残高不足画面");
  expect(test.screen79.msg1, "残高が不足しています");
  expect(test.screen79.msg2, "");
  expect(test.screen79.msg1_size, 24);
  expect(test.screen79.msg2_size, 0);
  expect(test.screen79.sound1, 0);
  expect(test.screen79.sound2, 0);
  expect(test.screen79.sound3, 0);
  expect(test.screen79.snd_timer, 20);
  expect(test.screen79.timer1, 0);
  expect(test.screen79.timer2, 0);
  expect(test.screen79.timer3, 0);
  expect(test.screen79.dsp_flg1, 0);
  expect(test.screen79.dsp_flg2, 0);
  expect(test.screen79.movie01_ext, 0);
  expect(test.screen79.movie02_ext, 0);
  expect(test.screen79.movie03_ext, 0);
  expect(test.screen79.movie04_ext, 0);
  expect(test.screen79.line_title, "");
  expect(test.screen79.line_title_ex, "");
  expect(test.screen79.line1, "");
  expect(test.screen79.line2, "");
  expect(test.screen79.line3, "");
  expect(test.screen79.line4, "");
  expect(test.screen79.line1_ex, "");
  expect(test.screen79.line2_ex, "");
  expect(test.screen79.line3_ex, "");
  expect(test.screen79.line4_ex, "");
  expect(test.screen79.sound_led1, 6280);
  expect(test.screen79.sound_led2, 6280);
  expect(test.screen79.sound_led3, 0);
  expect(test.screen81.title, "Alipay読取画面");
  expect(test.screen81.msg1, "");
  expect(test.screen81.msg2, "");
  expect(test.screen81.msg1_size, 24);
  expect(test.screen81.msg2_size, 0);
  expect(test.screen81.sound1, 0);
  expect(test.screen81.sound2, 0);
  expect(test.screen81.sound3, 0);
  expect(test.screen81.snd_timer, 20);
  expect(test.screen81.timer1, 0);
  expect(test.screen81.timer2, 0);
  expect(test.screen81.timer3, 0);
  expect(test.screen81.dsp_flg1, 0);
  expect(test.screen81.dsp_flg2, 0);
  expect(test.screen81.movie01_ext, 0);
  expect(test.screen81.movie02_ext, 0);
  expect(test.screen81.movie03_ext, 0);
  expect(test.screen81.movie04_ext, 0);
  expect(test.screen81.line_title, "Alipayでお支払い");
  expect(test.screen81.line_title_ex, "");
  expect(test.screen81.line1, "お支払い金額を確認し");
  expect(test.screen81.line2, "バーコードを読ませてください");
  expect(test.screen81.line3, "");
  expect(test.screen81.line4, "");
  expect(test.screen81.line1_ex, "");
  expect(test.screen81.line2_ex, "");
  expect(test.screen81.line3_ex, "");
  expect(test.screen81.line4_ex, "");
  expect(test.screen81.sound_led1, 6273);
  expect(test.screen81.sound_led2, 6273);
  expect(test.screen81.sound_led3, 0);
  expect(test.screen82.title, "WeChatPay読取画面");
  expect(test.screen82.msg1, "");
  expect(test.screen82.msg2, "");
  expect(test.screen82.msg1_size, 0);
  expect(test.screen82.msg2_size, 0);
  expect(test.screen82.sound1, 0);
  expect(test.screen82.sound2, 0);
  expect(test.screen82.sound3, 0);
  expect(test.screen82.snd_timer, 20);
  expect(test.screen82.timer1, 0);
  expect(test.screen82.timer2, 0);
  expect(test.screen82.timer3, 0);
  expect(test.screen82.dsp_flg1, 0);
  expect(test.screen82.dsp_flg2, 0);
  expect(test.screen82.movie01_ext, 0);
  expect(test.screen82.movie02_ext, 0);
  expect(test.screen82.movie03_ext, 0);
  expect(test.screen82.movie04_ext, 0);
  expect(test.screen82.line_title, "WeChatPayでお支払い");
  expect(test.screen82.line_title_ex, "");
  expect(test.screen82.line1, "お支払い金額を確認し");
  expect(test.screen82.line2, "QRコードを読み込んでください");
  expect(test.screen82.line3, "");
  expect(test.screen82.line4, "");
  expect(test.screen82.line1_ex, "");
  expect(test.screen82.line2_ex, "");
  expect(test.screen82.line3_ex, "");
  expect(test.screen82.line4_ex, "");
  expect(test.screen82.sound_led1, 6272);
  expect(test.screen82.sound_led2, 6272);
  expect(test.screen82.sound_led3, 0);
  expect(test.screen83.title, "WeChatPay読取画面");
  expect(test.screen83.msg1, "");
  expect(test.screen83.msg2, "");
  expect(test.screen83.msg1_size, 24);
  expect(test.screen83.msg2_size, 0);
  expect(test.screen83.sound1, 0);
  expect(test.screen83.sound2, 0);
  expect(test.screen83.sound3, 0);
  expect(test.screen83.snd_timer, 20);
  expect(test.screen83.timer1, 0);
  expect(test.screen83.timer2, 0);
  expect(test.screen83.timer3, 0);
  expect(test.screen83.dsp_flg1, 0);
  expect(test.screen83.dsp_flg2, 0);
  expect(test.screen83.movie01_ext, 0);
  expect(test.screen83.movie02_ext, 0);
  expect(test.screen83.movie03_ext, 0);
  expect(test.screen83.movie04_ext, 0);
  expect(test.screen83.line_title, "WeChatPayでお支払い");
  expect(test.screen83.line_title_ex, "");
  expect(test.screen83.line1, "お支払い金額を確認し");
  expect(test.screen83.line2, "バーコードを読ませてください");
  expect(test.screen83.line3, "");
  expect(test.screen83.line4, "");
  expect(test.screen83.line1_ex, "");
  expect(test.screen83.line2_ex, "");
  expect(test.screen83.line3_ex, "");
  expect(test.screen83.line4_ex, "");
  expect(test.screen83.sound_led1, 6273);
  expect(test.screen83.sound_led2, 6273);
  expect(test.screen83.sound_led3, 0);
  expect(test.screen84.title, "JPQR PAY 読取画面");
  expect(test.screen84.msg1, "");
  expect(test.screen84.msg2, "");
  expect(test.screen84.msg1_size, 24);
  expect(test.screen84.msg2_size, 0);
  expect(test.screen84.sound1, 0);
  expect(test.screen84.sound2, 0);
  expect(test.screen84.sound3, 0);
  expect(test.screen84.snd_timer, 20);
  expect(test.screen84.timer1, 0);
  expect(test.screen84.timer2, 0);
  expect(test.screen84.timer3, 0);
  expect(test.screen84.dsp_flg1, 0);
  expect(test.screen84.dsp_flg2, 0);
  expect(test.screen84.movie01_ext, 0);
  expect(test.screen84.movie02_ext, 0);
  expect(test.screen84.movie03_ext, 0);
  expect(test.screen84.movie04_ext, 0);
  expect(test.screen84.line_title, "JPQRでお支払い");
  expect(test.screen84.line_title_ex, "");
  expect(test.screen84.line1, "お支払い金額を確認し");
  expect(test.screen84.line2, "バーコードを読ませてください");
  expect(test.screen84.line3, "");
  expect(test.screen84.line4, "");
  expect(test.screen84.line1_ex, "");
  expect(test.screen84.line2_ex, "");
  expect(test.screen84.line3_ex, "");
  expect(test.screen84.line4_ex, "");
  expect(test.screen84.sound_led1, 6273);
  expect(test.screen84.sound_led2, 6273);
  expect(test.screen84.sound_led3, 0);
  expect(test.screen85.title, "コード決済 読取画面");
  expect(test.screen85.msg1, "");
  expect(test.screen85.msg2, "");
  expect(test.screen85.msg1_size, 24);
  expect(test.screen85.msg2_size, 0);
  expect(test.screen85.sound1, 0);
  expect(test.screen85.sound2, 0);
  expect(test.screen85.sound3, 0);
  expect(test.screen85.snd_timer, 20);
  expect(test.screen85.timer1, 0);
  expect(test.screen85.timer2, 0);
  expect(test.screen85.timer3, 0);
  expect(test.screen85.dsp_flg1, 0);
  expect(test.screen85.dsp_flg2, 0);
  expect(test.screen85.movie01_ext, 0);
  expect(test.screen85.movie02_ext, 0);
  expect(test.screen85.movie03_ext, 0);
  expect(test.screen85.movie04_ext, 0);
  expect(test.screen85.line_title, "コード決済でお支払い");
  expect(test.screen85.line_title_ex, "");
  expect(test.screen85.line1, "お支払い金額を確認し");
  expect(test.screen85.line2, "バーコードを読ませてください");
  expect(test.screen85.line3, "");
  expect(test.screen85.line4, "");
  expect(test.screen85.line1_ex, "");
  expect(test.screen85.line2_ex, "");
  expect(test.screen85.line3_ex, "");
  expect(test.screen85.line4_ex, "");
  expect(test.screen85.sound_led1, 6273);
  expect(test.screen85.sound_led2, 6273);
  expect(test.screen85.sound_led3, 0);
  expect(test.screen86.title, "イートインアイテム画面");
  expect(test.screen86.msg1, "店内でご飲食される商品はありますか？");
  expect(test.screen86.msg2, "");
  expect(test.screen86.msg1_size, 24);
  expect(test.screen86.msg2_size, 0);
  expect(test.screen86.sound1, 0);
  expect(test.screen86.sound2, 0);
  expect(test.screen86.sound3, 0);
  expect(test.screen86.snd_timer, 10);
  expect(test.screen86.timer1, 0);
  expect(test.screen86.timer2, 0);
  expect(test.screen86.timer3, 0);
  expect(test.screen86.dsp_flg1, 0);
  expect(test.screen86.dsp_flg2, 0);
  expect(test.screen86.movie01_ext, 0);
  expect(test.screen86.movie02_ext, 0);
  expect(test.screen86.movie03_ext, 0);
  expect(test.screen86.movie04_ext, 0);
  expect(test.screen86.line_title, "");
  expect(test.screen86.line_title_ex, "");
  expect(test.screen86.line1, "");
  expect(test.screen86.line2, "");
  expect(test.screen86.line3, "");
  expect(test.screen86.line4, "");
  expect(test.screen86.line1_ex, "");
  expect(test.screen86.line2_ex, "");
  expect(test.screen86.line3_ex, "");
  expect(test.screen86.line4_ex, "");
  expect(test.screen86.sound_led1, 6715);
  expect(test.screen86.sound_led2, 0);
  expect(test.screen86.sound_led3, 0);
  expect(test.screen87.title, "ﾌﾟﾘﾍﾟｲﾄﾞｶｰﾄﾞ読取画面<IC>");
  expect(test.screen87.msg1, "");
  expect(test.screen87.msg2, "");
  expect(test.screen87.msg1_size, 20);
  expect(test.screen87.msg2_size, 0);
  expect(test.screen87.sound1, 0);
  expect(test.screen87.sound2, 0);
  expect(test.screen87.sound3, 0);
  expect(test.screen87.snd_timer, 20);
  expect(test.screen87.timer1, 0);
  expect(test.screen87.timer2, 0);
  expect(test.screen87.timer3, 0);
  expect(test.screen87.dsp_flg1, 0);
  expect(test.screen87.dsp_flg2, 0);
  expect(test.screen87.movie01_ext, 0);
  expect(test.screen87.movie02_ext, 0);
  expect(test.screen87.movie03_ext, 0);
  expect(test.screen87.movie04_ext, 0);
  expect(test.screen87.line_title, "CoGCaでお支払い");
  expect(test.screen87.line_title_ex, "");
  expect(test.screen87.line1, "CoGCaカードを");
  expect(test.screen87.line2, "タッチしてください");
  expect(test.screen87.line3, "");
  expect(test.screen87.line4, "");
  expect(test.screen87.line1_ex, "");
  expect(test.screen87.line2_ex, "");
  expect(test.screen87.line3_ex, "");
  expect(test.screen87.line4_ex, "");
  expect(test.screen87.sound_led1, 6283);
  expect(test.screen87.sound_led2, 6283);
  expect(test.screen87.sound_led3, 0);
  expect(test.screen88.title, "ﾌﾟﾘﾍﾟｲﾄﾞ支払画面");
  expect(test.screen88.msg1, "");
  expect(test.screen88.msg2, "");
  expect(test.screen88.msg1_size, 0);
  expect(test.screen88.msg2_size, 0);
  expect(test.screen88.sound1, 6179);
  expect(test.screen88.sound2, 6179);
  expect(test.screen88.sound3, 0);
  expect(test.screen88.snd_timer, 20);
  expect(test.screen88.timer1, 0);
  expect(test.screen88.timer2, 0);
  expect(test.screen88.timer3, 0);
  expect(test.screen88.dsp_flg1, 0);
  expect(test.screen88.dsp_flg2, 0);
  expect(test.screen88.movie01_ext, 0);
  expect(test.screen88.movie02_ext, 0);
  expect(test.screen88.movie03_ext, 0);
  expect(test.screen88.movie04_ext, 0);
  expect(test.screen88.line_title, "");
  expect(test.screen88.line_title_ex, "");
  expect(test.screen88.line1, "よろしければ");
  expect(test.screen88.line2, "おわりボタンを");
  expect(test.screen88.line3, "押してください");
  expect(test.screen88.line4, "");
  expect(test.screen88.line1_ex, "");
  expect(test.screen88.line2_ex, "");
  expect(test.screen88.line3_ex, "");
  expect(test.screen88.line4_ex, "");
  expect(test.screen88.sound_led1, 6179);
  expect(test.screen88.sound_led2, 6179);
  expect(test.screen88.sound_led3, 0);
  expect(test.screen89.title, "ﾌﾟﾘﾍﾟｲﾄﾞ支払完了画面");
  expect(test.screen89.msg1, "レシートをお取りください。");
  expect(test.screen89.msg2, "");
  expect(test.screen89.msg1_size, 0);
  expect(test.screen89.msg2_size, 0);
  expect(test.screen89.sound1, 6133);
  expect(test.screen89.sound2, 6133);
  expect(test.screen89.sound3, 0);
  expect(test.screen89.snd_timer, 0);
  expect(test.screen89.timer1, 5);
  expect(test.screen89.timer2, 10);
  expect(test.screen89.timer3, 0);
  expect(test.screen89.dsp_flg1, 0);
  expect(test.screen89.dsp_flg2, 0);
  expect(test.screen89.movie01_ext, 0);
  expect(test.screen89.movie02_ext, 0);
  expect(test.screen89.movie03_ext, 0);
  expect(test.screen89.movie04_ext, 0);
  expect(test.screen89.line_title, "");
  expect(test.screen89.line_title_ex, "");
  expect(test.screen89.line1, "レシートを");
  expect(test.screen89.line2, "お受け取りください");
  expect(test.screen89.line3, "ありがとう");
  expect(test.screen89.line4, "ございました");
  expect(test.screen89.line1_ex, "");
  expect(test.screen89.line2_ex, "");
  expect(test.screen89.line3_ex, "");
  expect(test.screen89.line4_ex, "");
  expect(test.screen89.sound_led1, 6133);
  expect(test.screen89.sound_led2, 6133);
  expect(test.screen89.sound_led3, 0);
  expect(test.screen90.title, "ﾌﾟﾘﾍﾟｲﾄﾞ置数支払画面");
  expect(test.screen90.msg1, "お支払金額を入力してください");
  expect(test.screen90.msg2, "");
  expect(test.screen90.msg1_size, 24);
  expect(test.screen90.msg2_size, 0);
  expect(test.screen90.sound1, 0);
  expect(test.screen90.sound2, 0);
  expect(test.screen90.sound3, 0);
  expect(test.screen90.snd_timer, 20);
  expect(test.screen90.timer1, 0);
  expect(test.screen90.timer2, 0);
  expect(test.screen90.timer3, 0);
  expect(test.screen90.dsp_flg1, 0);
  expect(test.screen90.dsp_flg2, 0);
  expect(test.screen90.movie01_ext, 0);
  expect(test.screen90.movie02_ext, 0);
  expect(test.screen90.movie03_ext, 0);
  expect(test.screen90.movie04_ext, 0);
  expect(test.screen90.line_title, "");
  expect(test.screen90.line_title_ex, "");
  expect(test.screen90.line1, "");
  expect(test.screen90.line2, "");
  expect(test.screen90.line3, "");
  expect(test.screen90.line4, "");
  expect(test.screen90.line1_ex, "");
  expect(test.screen90.line2_ex, "");
  expect(test.screen90.line3_ex, "");
  expect(test.screen90.line4_ex, "");
  expect(test.screen90.sound_led1, 6285);
  expect(test.screen90.sound_led2, 0);
  expect(test.screen90.sound_led3, 0);
  expect(test.screen91.title, "ﾌﾟﾘﾍﾟｲﾄﾞ残高不足確認画面");
  expect(test.screen91.msg1, "残高が不足しています");
  expect(test.screen91.msg2, "");
  expect(test.screen91.msg1_size, 24);
  expect(test.screen91.msg2_size, 0);
  expect(test.screen91.sound1, 0);
  expect(test.screen91.sound2, 0);
  expect(test.screen91.sound3, 0);
  expect(test.screen91.snd_timer, 20);
  expect(test.screen91.timer1, 0);
  expect(test.screen91.timer2, 0);
  expect(test.screen91.timer3, 0);
  expect(test.screen91.dsp_flg1, 0);
  expect(test.screen91.dsp_flg2, 0);
  expect(test.screen91.movie01_ext, 0);
  expect(test.screen91.movie02_ext, 0);
  expect(test.screen91.movie03_ext, 0);
  expect(test.screen91.movie04_ext, 0);
  expect(test.screen91.line_title, "");
  expect(test.screen91.line_title_ex, "");
  expect(test.screen91.line1, "");
  expect(test.screen91.line2, "");
  expect(test.screen91.line3, "");
  expect(test.screen91.line4, "");
  expect(test.screen91.line1_ex, "");
  expect(test.screen91.line2_ex, "");
  expect(test.screen91.line3_ex, "");
  expect(test.screen91.line4_ex, "");
  expect(test.screen91.sound_led1, 6284);
  expect(test.screen91.sound_led2, 0);
  expect(test.screen91.sound_led3, 0);
  expect(test.screen92.title, "ﾎﾟｲﾝﾄ支払画面");
  expect(test.screen92.msg1, "");
  expect(test.screen92.msg2, "");
  expect(test.screen92.msg1_size, 24);
  expect(test.screen92.msg2_size, 0);
  expect(test.screen92.sound1, 6534);
  expect(test.screen92.sound2, 6534);
  expect(test.screen92.sound3, 0);
  expect(test.screen92.snd_timer, 20);
  expect(test.screen92.timer1, 10);
  expect(test.screen92.timer2, 0);
  expect(test.screen92.timer3, 0);
  expect(test.screen92.dsp_flg1, 0);
  expect(test.screen92.dsp_flg2, 0);
  expect(test.screen92.movie01_ext, 0);
  expect(test.screen92.movie02_ext, 0);
  expect(test.screen92.movie03_ext, 0);
  expect(test.screen92.movie04_ext, 0);
  expect(test.screen92.line_title, "");
  expect(test.screen92.line_title_ex, "");
  expect(test.screen92.line1, "ポイント数を入力して");
  expect(test.screen92.line2, "決定を押してください");
  expect(test.screen92.line3, "訂正する場合はクリア");
  expect(test.screen92.line4, "ボタンを押してください");
  expect(test.screen92.line1_ex, "ポイント利用単位：");
  expect(test.screen92.line2_ex, "");
  expect(test.screen92.line3_ex, "");
  expect(test.screen92.line4_ex, "");
  expect(test.screen92.sound_led1, 6534);
  expect(test.screen92.sound_led2, 6534);
  expect(test.screen92.sound_led3, 0);
  expect(test.screen93.title, "ﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen93.msg1, "");
  expect(test.screen93.msg2, "");
  expect(test.screen93.msg1_size, 0);
  expect(test.screen93.msg2_size, 0);
  expect(test.screen93.sound1, 6016);
  expect(test.screen93.sound2, 0);
  expect(test.screen93.sound3, 0);
  expect(test.screen93.snd_timer, 20);
  expect(test.screen93.timer1, 10);
  expect(test.screen93.timer2, 0);
  expect(test.screen93.timer3, 0);
  expect(test.screen93.dsp_flg1, 0);
  expect(test.screen93.dsp_flg2, 0);
  expect(test.screen93.movie01_ext, 0);
  expect(test.screen93.movie02_ext, 0);
  expect(test.screen93.movie03_ext, 0);
  expect(test.screen93.movie04_ext, 0);
  expect(test.screen93.line_title, "");
  expect(test.screen93.line_title_ex, "");
  expect(test.screen93.line1, "よろしければ");
  expect(test.screen93.line2, "おわりボタンを");
  expect(test.screen93.line3, "押してください");
  expect(test.screen93.line4, "");
  expect(test.screen93.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen93.line2_ex, "button to complete");
  expect(test.screen93.line3_ex, "the payment.");
  expect(test.screen93.line4_ex, "");
  expect(test.screen93.sound_led1, 6179);
  expect(test.screen93.sound_led2, 6217);
  expect(test.screen93.sound_led3, 0);
  expect(test.screen94.title, "ﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen94.msg1, "レシートをお取りください。");
  expect(test.screen94.msg2, "");
  expect(test.screen94.msg1_size, 0);
  expect(test.screen94.msg2_size, 0);
  expect(test.screen94.sound1, 6018);
  expect(test.screen94.sound2, 0);
  expect(test.screen94.sound3, 0);
  expect(test.screen94.snd_timer, 0);
  expect(test.screen94.timer1, 5);
  expect(test.screen94.timer2, 10);
  expect(test.screen94.timer3, 0);
  expect(test.screen94.dsp_flg1, 0);
  expect(test.screen94.dsp_flg2, 0);
  expect(test.screen94.movie01_ext, 0);
  expect(test.screen94.movie02_ext, 0);
  expect(test.screen94.movie03_ext, 0);
  expect(test.screen94.movie04_ext, 0);
  expect(test.screen94.line_title, "");
  expect(test.screen94.line_title_ex, "");
  expect(test.screen94.line1, "レシートを");
  expect(test.screen94.line2, "お受け取りください");
  expect(test.screen94.line3, "ありがとう");
  expect(test.screen94.line4, "ございました");
  expect(test.screen94.line1_ex, "Thank you.");
  expect(test.screen94.line2_ex, "Please take your receipt.");
  expect(test.screen94.line3_ex, "");
  expect(test.screen94.line4_ex, "");
  expect(test.screen94.sound_led1, 6133);
  expect(test.screen94.sound_led2, 0);
  expect(test.screen94.sound_led3, 0);
  expect(test.screen95.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払画面");
  expect(test.screen95.msg1, "");
  expect(test.screen95.msg2, "");
  expect(test.screen95.msg1_size, 24);
  expect(test.screen95.msg2_size, 0);
  expect(test.screen95.sound1, 6534);
  expect(test.screen95.sound2, 6534);
  expect(test.screen95.sound3, 0);
  expect(test.screen95.snd_timer, 20);
  expect(test.screen95.timer1, 10);
  expect(test.screen95.timer2, 0);
  expect(test.screen95.timer3, 0);
  expect(test.screen95.dsp_flg1, 0);
  expect(test.screen95.dsp_flg2, 0);
  expect(test.screen95.movie01_ext, 0);
  expect(test.screen95.movie02_ext, 0);
  expect(test.screen95.movie03_ext, 0);
  expect(test.screen95.movie04_ext, 0);
  expect(test.screen95.line_title, "");
  expect(test.screen95.line_title_ex, "");
  expect(test.screen95.line1, "ポイント数を入力して");
  expect(test.screen95.line2, "決定を押してください");
  expect(test.screen95.line3, "訂正する場合はクリア");
  expect(test.screen95.line4, "ボタンを押してください");
  expect(test.screen95.line1_ex, "");
  expect(test.screen95.line2_ex, "");
  expect(test.screen95.line3_ex, "");
  expect(test.screen95.line4_ex, "");
  expect(test.screen95.sound_led1, 6534);
  expect(test.screen95.sound_led2, 6534);
  expect(test.screen95.sound_led3, 0);
  expect(test.screen96.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen96.msg1, "");
  expect(test.screen96.msg2, "");
  expect(test.screen96.msg1_size, 0);
  expect(test.screen96.msg2_size, 0);
  expect(test.screen96.sound1, 6016);
  expect(test.screen96.sound2, 0);
  expect(test.screen96.sound3, 0);
  expect(test.screen96.snd_timer, 20);
  expect(test.screen96.timer1, 10);
  expect(test.screen96.timer2, 0);
  expect(test.screen96.timer3, 0);
  expect(test.screen96.dsp_flg1, 0);
  expect(test.screen96.dsp_flg2, 0);
  expect(test.screen96.movie01_ext, 0);
  expect(test.screen96.movie02_ext, 0);
  expect(test.screen96.movie03_ext, 0);
  expect(test.screen96.movie04_ext, 0);
  expect(test.screen96.line_title, "");
  expect(test.screen96.line_title_ex, "");
  expect(test.screen96.line1, "よろしければ");
  expect(test.screen96.line2, "おわりボタンを");
  expect(test.screen96.line3, "押してください");
  expect(test.screen96.line4, "");
  expect(test.screen96.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen96.line2_ex, "button to complete");
  expect(test.screen96.line3_ex, "the payment.");
  expect(test.screen96.line4_ex, "");
  expect(test.screen96.sound_led1, 6179);
  expect(test.screen96.sound_led2, 6217);
  expect(test.screen96.sound_led3, 0);
  expect(test.screen97.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen97.msg1, "レシートをお取りください。");
  expect(test.screen97.msg2, "");
  expect(test.screen97.msg1_size, 0);
  expect(test.screen97.msg2_size, 0);
  expect(test.screen97.sound1, 6018);
  expect(test.screen97.sound2, 0);
  expect(test.screen97.sound3, 0);
  expect(test.screen97.snd_timer, 0);
  expect(test.screen97.timer1, 5);
  expect(test.screen97.timer2, 10);
  expect(test.screen97.timer3, 0);
  expect(test.screen97.dsp_flg1, 0);
  expect(test.screen97.dsp_flg2, 0);
  expect(test.screen97.movie01_ext, 0);
  expect(test.screen97.movie02_ext, 0);
  expect(test.screen97.movie03_ext, 0);
  expect(test.screen97.movie04_ext, 0);
  expect(test.screen97.line_title, "");
  expect(test.screen97.line_title_ex, "");
  expect(test.screen97.line1, "レシートを");
  expect(test.screen97.line2, "お受け取りください");
  expect(test.screen97.line3, "ありがとう");
  expect(test.screen97.line4, "ございました");
  expect(test.screen97.line1_ex, "Thank you.");
  expect(test.screen97.line2_ex, "Please take your receipt.");
  expect(test.screen97.line3_ex, "");
  expect(test.screen97.line4_ex, "");
  expect(test.screen97.sound_led1, 6133);
  expect(test.screen97.sound_led2, 0);
  expect(test.screen97.sound_led3, 0);
  expect(test.screen98.title, "社員証決済画面");
  expect(test.screen98.msg1, "");
  expect(test.screen98.msg2, "");
  expect(test.screen98.msg1_size, 0);
  expect(test.screen98.msg2_size, 0);
  expect(test.screen98.sound1, 0);
  expect(test.screen98.sound2, 0);
  expect(test.screen98.sound3, 0);
  expect(test.screen98.snd_timer, 20);
  expect(test.screen98.timer1, 10);
  expect(test.screen98.timer2, 0);
  expect(test.screen98.timer3, 0);
  expect(test.screen98.dsp_flg1, 0);
  expect(test.screen98.dsp_flg2, 0);
  expect(test.screen98.movie01_ext, 0);
  expect(test.screen98.movie02_ext, 0);
  expect(test.screen98.movie03_ext, 0);
  expect(test.screen98.movie04_ext, 0);
  expect(test.screen98.line_title, "");
  expect(test.screen98.line_title_ex, "");
  expect(test.screen98.line1, "よろしければ");
  expect(test.screen98.line2, "おわりボタンを");
  expect(test.screen98.line3, "押してください");
  expect(test.screen98.line4, "");
  expect(test.screen98.line1_ex, "When ready, ");
  expect(test.screen98.line2_ex, "press \"finish\"");
  expect(test.screen98.line3_ex, "to complete payment.");
  expect(test.screen98.line4_ex, "");
  expect(test.screen98.sound_led1, 6179);
  expect(test.screen98.sound_led2, 6217);
  expect(test.screen98.sound_led3, 0);
  expect(test.screen99.title, "社員証決済完了画面");
  expect(test.screen99.msg1, "");
  expect(test.screen99.msg2, "");
  expect(test.screen99.msg1_size, 0);
  expect(test.screen99.msg2_size, 0);
  expect(test.screen99.sound1, 6133);
  expect(test.screen99.sound2, 6133);
  expect(test.screen99.sound3, 0);
  expect(test.screen99.snd_timer, 0);
  expect(test.screen99.timer1, 5);
  expect(test.screen99.timer2, 10);
  expect(test.screen99.timer3, 0);
  expect(test.screen99.dsp_flg1, 0);
  expect(test.screen99.dsp_flg2, 0);
  expect(test.screen99.movie01_ext, 0);
  expect(test.screen99.movie02_ext, 0);
  expect(test.screen99.movie03_ext, 0);
  expect(test.screen99.movie04_ext, 0);
  expect(test.screen99.line_title, "");
  expect(test.screen99.line_title_ex, "");
  expect(test.screen99.line1, "レシートを");
  expect(test.screen99.line2, "お受け取りください");
  expect(test.screen99.line3, "ありがとう");
  expect(test.screen99.line4, "ございました");
  expect(test.screen99.line1_ex, "Thank you.");
  expect(test.screen99.line2_ex, "Please take your receipt.");
  expect(test.screen99.line3_ex, "");
  expect(test.screen99.line4_ex, "");
  expect(test.screen99.sound_led1, 6133);
  expect(test.screen99.sound_led2, 6133);
  expect(test.screen99.sound_led3, 0);
  expect(test.screen100.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄｶｰﾄﾞ読取画面");
  expect(test.screen100.msg1, "");
  expect(test.screen100.msg2, "");
  expect(test.screen100.msg1_size, 20);
  expect(test.screen100.msg2_size, 0);
  expect(test.screen100.sound1, 6258);
  expect(test.screen100.sound2, 6292);
  expect(test.screen100.sound3, 0);
  expect(test.screen100.snd_timer, 20);
  expect(test.screen100.timer1, 0);
  expect(test.screen100.timer2, 0);
  expect(test.screen100.timer3, 0);
  expect(test.screen100.dsp_flg1, 0);
  expect(test.screen100.dsp_flg2, 0);
  expect(test.screen100.movie01_ext, 0);
  expect(test.screen100.movie02_ext, 0);
  expect(test.screen100.movie03_ext, 0);
  expect(test.screen100.movie04_ext, 0);
  expect(test.screen100.line_title, "プリペイドでお支払い");
  expect(test.screen100.line_title_ex, "");
  expect(test.screen100.line1, "プリペイドカードを");
  expect(test.screen100.line2, "読ませてください");
  expect(test.screen100.line3, "");
  expect(test.screen100.line4, "");
  expect(test.screen100.line1_ex, "");
  expect(test.screen100.line2_ex, "");
  expect(test.screen100.line3_ex, "");
  expect(test.screen100.line4_ex, "");
  expect(test.screen100.sound_led1, 6258);
  expect(test.screen100.sound_led2, 6292);
  expect(test.screen100.sound_led3, 0);
  expect(test.screen101.title, "会員読込画面(フルセルフ)");
  expect(test.screen101.msg1, "");
  expect(test.screen101.msg2, "");
  expect(test.screen101.msg1_size, 0);
  expect(test.screen101.msg2_size, 0);
  expect(test.screen101.sound1, 0);
  expect(test.screen101.sound2, 0);
  expect(test.screen101.sound3, 0);
  expect(test.screen101.snd_timer, 0);
  expect(test.screen101.timer1, 0);
  expect(test.screen101.timer2, 0);
  expect(test.screen101.timer3, 0);
  expect(test.screen101.dsp_flg1, 0);
  expect(test.screen101.dsp_flg2, 0);
  expect(test.screen101.movie01_ext, 0);
  expect(test.screen101.movie02_ext, 0);
  expect(test.screen101.movie03_ext, 0);
  expect(test.screen101.movie04_ext, 0);
  expect(test.screen101.line_title, "");
  expect(test.screen101.line_title_ex, "");
  expect(test.screen101.line1, "");
  expect(test.screen101.line2, "");
  expect(test.screen101.line3, "");
  expect(test.screen101.line4, "");
  expect(test.screen101.line1_ex, "");
  expect(test.screen101.line2_ex, "");
  expect(test.screen101.line3_ex, "");
  expect(test.screen101.line4_ex, "");
  expect(test.screen101.sound_led1, 0);
  expect(test.screen101.sound_led2, 0);
  expect(test.screen101.sound_led3, 0);
  expect(test.screen102.title, "アイテムリスト画面(フルセルフ)");
  expect(test.screen102.msg1, "");
  expect(test.screen102.msg2, "");
  expect(test.screen102.msg1_size, 0);
  expect(test.screen102.msg2_size, 0);
  expect(test.screen102.sound1, 0);
  expect(test.screen102.sound2, 0);
  expect(test.screen102.sound3, 0);
  expect(test.screen102.snd_timer, 0);
  expect(test.screen102.timer1, 0);
  expect(test.screen102.timer2, 0);
  expect(test.screen102.timer3, 0);
  expect(test.screen102.dsp_flg1, 0);
  expect(test.screen102.dsp_flg2, 0);
  expect(test.screen102.movie01_ext, 0);
  expect(test.screen102.movie02_ext, 0);
  expect(test.screen102.movie03_ext, 0);
  expect(test.screen102.movie04_ext, 0);
  expect(test.screen102.line_title, "");
  expect(test.screen102.line_title_ex, "");
  expect(test.screen102.line1, "");
  expect(test.screen102.line2, "");
  expect(test.screen102.line3, "");
  expect(test.screen102.line4, "");
  expect(test.screen102.line1_ex, "");
  expect(test.screen102.line2_ex, "");
  expect(test.screen102.line3_ex, "");
  expect(test.screen102.line4_ex, "");
  expect(test.screen102.sound_led1, 0);
  expect(test.screen102.sound_led2, 0);
  expect(test.screen102.sound_led3, 0);
  expect(test.screen103.title, "カード選択画面");
  expect(test.screen103.msg1, "ポイントカードの種類を選択して下さい");
  expect(test.screen103.msg2, "");
  expect(test.screen103.msg1_size, 24);
  expect(test.screen103.msg2_size, 0);
  expect(test.screen103.sound1, 6270);
  expect(test.screen103.sound2, 0);
  expect(test.screen103.sound3, 0);
  expect(test.screen103.snd_timer, 10);
  expect(test.screen103.timer1, 0);
  expect(test.screen103.timer2, 0);
  expect(test.screen103.timer3, 0);
  expect(test.screen103.dsp_flg1, 0);
  expect(test.screen103.dsp_flg2, 0);
  expect(test.screen103.movie01_ext, 0);
  expect(test.screen103.movie02_ext, 0);
  expect(test.screen103.movie03_ext, 0);
  expect(test.screen103.movie04_ext, 0);
  expect(test.screen103.line_title, "");
  expect(test.screen103.line_title_ex, "");
  expect(test.screen103.line1, "");
  expect(test.screen103.line2, "");
  expect(test.screen103.line3, "");
  expect(test.screen103.line4, "");
  expect(test.screen103.line1_ex, "");
  expect(test.screen103.line2_ex, "");
  expect(test.screen103.line3_ex, "");
  expect(test.screen103.line4_ex, "");
  expect(test.screen103.sound_led1, 6281);
  expect(test.screen103.sound_led2, 0);
  expect(test.screen103.sound_led3, 0);
  expect(test.screen104.title, "カード読込画面");
  expect(test.screen104.msg1, "カードを読ませてください");
  expect(test.screen104.msg2, "");
  expect(test.screen104.msg1_size, 24);
  expect(test.screen104.msg2_size, 0);
  expect(test.screen104.sound1, 6270);
  expect(test.screen104.sound2, 0);
  expect(test.screen104.sound3, 0);
  expect(test.screen104.snd_timer, 10);
  expect(test.screen104.timer1, 0);
  expect(test.screen104.timer2, 0);
  expect(test.screen104.timer3, 0);
  expect(test.screen104.dsp_flg1, 0);
  expect(test.screen104.dsp_flg2, 0);
  expect(test.screen104.movie01_ext, 0);
  expect(test.screen104.movie02_ext, 0);
  expect(test.screen104.movie03_ext, 0);
  expect(test.screen104.movie04_ext, 0);
  expect(test.screen104.line_title, "");
  expect(test.screen104.line_title_ex, "");
  expect(test.screen104.line1, "CoGCaカードを");
  expect(test.screen104.line2, "タッチしてください");
  expect(test.screen104.line3, "");
  expect(test.screen104.line4, "");
  expect(test.screen104.line1_ex, "");
  expect(test.screen104.line2_ex, "");
  expect(test.screen104.line3_ex, "");
  expect(test.screen104.line4_ex, "");
  expect(test.screen104.sound_led1, 6283);
  expect(test.screen104.sound_led2, 0);
  expect(test.screen104.sound_led3, 0);
  expect(test.screen105.title, "カード読込画面");
  expect(test.screen105.msg1, "カードを読ませてください");
  expect(test.screen105.msg2, "");
  expect(test.screen105.msg1_size, 24);
  expect(test.screen105.msg2_size, 0);
  expect(test.screen105.sound1, 6270);
  expect(test.screen105.sound2, 0);
  expect(test.screen105.sound3, 0);
  expect(test.screen105.snd_timer, 10);
  expect(test.screen105.timer1, 0);
  expect(test.screen105.timer2, 0);
  expect(test.screen105.timer3, 0);
  expect(test.screen105.dsp_flg1, 0);
  expect(test.screen105.dsp_flg2, 0);
  expect(test.screen105.movie01_ext, 0);
  expect(test.screen105.movie02_ext, 0);
  expect(test.screen105.movie03_ext, 0);
  expect(test.screen105.movie04_ext, 0);
  expect(test.screen105.line_title, "");
  expect(test.screen105.line_title_ex, "");
  expect(test.screen105.line1, "カードを端末に");
  expect(test.screen105.line2, "通してください");
  expect(test.screen105.line3, "");
  expect(test.screen105.line4, "");
  expect(test.screen105.line1_ex, "");
  expect(test.screen105.line2_ex, "");
  expect(test.screen105.line3_ex, "");
  expect(test.screen105.line4_ex, "");
  expect(test.screen105.sound_led1, 6282);
  expect(test.screen105.sound_led2, 0);
  expect(test.screen105.sound_led3, 0);
  expect(test.screen106.title, "カード読込画面");
  expect(test.screen106.msg1, "カードを読ませてください");
  expect(test.screen106.msg2, "");
  expect(test.screen106.msg1_size, 24);
  expect(test.screen106.msg2_size, 0);
  expect(test.screen106.sound1, 6270);
  expect(test.screen106.sound2, 0);
  expect(test.screen106.sound3, 0);
  expect(test.screen106.snd_timer, 10);
  expect(test.screen106.timer1, 0);
  expect(test.screen106.timer2, 0);
  expect(test.screen106.timer3, 0);
  expect(test.screen106.dsp_flg1, 0);
  expect(test.screen106.dsp_flg2, 0);
  expect(test.screen106.movie01_ext, 0);
  expect(test.screen106.movie02_ext, 0);
  expect(test.screen106.movie03_ext, 0);
  expect(test.screen106.movie04_ext, 0);
  expect(test.screen106.line_title, "");
  expect(test.screen106.line_title_ex, "");
  expect(test.screen106.line1, "CoGCaカードを");
  expect(test.screen106.line2, "タッチしてください");
  expect(test.screen106.line3, "");
  expect(test.screen106.line4, "");
  expect(test.screen106.line1_ex, "");
  expect(test.screen106.line2_ex, "");
  expect(test.screen106.line3_ex, "");
  expect(test.screen106.line4_ex, "");
  expect(test.screen106.sound_led1, 6283);
  expect(test.screen106.sound_led2, 0);
  expect(test.screen106.sound_led3, 0);
  expect(test.screen107.title, "カード読込画面");
  expect(test.screen107.msg1, "カードを読ませてください");
  expect(test.screen107.msg2, "");
  expect(test.screen107.msg1_size, 24);
  expect(test.screen107.msg2_size, 0);
  expect(test.screen107.sound1, 6270);
  expect(test.screen107.sound2, 0);
  expect(test.screen107.sound3, 0);
  expect(test.screen107.snd_timer, 10);
  expect(test.screen107.timer1, 0);
  expect(test.screen107.timer2, 0);
  expect(test.screen107.timer3, 0);
  expect(test.screen107.dsp_flg1, 0);
  expect(test.screen107.dsp_flg2, 0);
  expect(test.screen107.movie01_ext, 0);
  expect(test.screen107.movie02_ext, 0);
  expect(test.screen107.movie03_ext, 0);
  expect(test.screen107.movie04_ext, 0);
  expect(test.screen107.line_title, "");
  expect(test.screen107.line_title_ex, "");
  expect(test.screen107.line1, "CoGCaカードを");
  expect(test.screen107.line2, "タッチしてください");
  expect(test.screen107.line3, "");
  expect(test.screen107.line4, "");
  expect(test.screen107.line1_ex, "");
  expect(test.screen107.line2_ex, "");
  expect(test.screen107.line3_ex, "");
  expect(test.screen107.line4_ex, "");
  expect(test.screen107.sound_led1, 6283);
  expect(test.screen107.sound_led2, 0);
  expect(test.screen107.sound_led3, 0);
  expect(test.screen109.title, "プリカチャージ入金画面");
  expect(test.screen109.msg1, "");
  expect(test.screen109.msg2, "");
  expect(test.screen109.msg1_size, 0);
  expect(test.screen109.msg2_size, 0);
  expect(test.screen109.sound1, 0);
  expect(test.screen109.sound2, 0);
  expect(test.screen109.sound3, 0);
  expect(test.screen109.snd_timer, 0);
  expect(test.screen109.timer1, 0);
  expect(test.screen109.timer2, 0);
  expect(test.screen109.timer3, 0);
  expect(test.screen109.dsp_flg1, 0);
  expect(test.screen109.dsp_flg2, 0);
  expect(test.screen109.movie01_ext, 0);
  expect(test.screen109.movie02_ext, 0);
  expect(test.screen109.movie03_ext, 0);
  expect(test.screen109.movie04_ext, 0);
  expect(test.screen109.line_title, "プリカチャージ");
  expect(test.screen109.line_title_ex, "");
  expect(test.screen109.line1, "お金を");
  expect(test.screen109.line2, "入れてください");
  expect(test.screen109.line3, "");
  expect(test.screen109.line4, "");
  expect(test.screen109.line1_ex, "");
  expect(test.screen109.line2_ex, "");
  expect(test.screen109.line3_ex, "");
  expect(test.screen109.line4_ex, "");
  expect(test.screen109.sound_led1, 6180);
  expect(test.screen109.sound_led2, 6130);
  expect(test.screen109.sound_led3, 6015);
  expect(test.screen111.title, "プリカ利用画面");
  expect(test.screen111.msg1, "プリペイドカードでお会計ですね");
  expect(test.screen111.msg2, "");
  expect(test.screen111.msg1_size, 0);
  expect(test.screen111.msg2_size, 0);
  expect(test.screen111.sound1, 0);
  expect(test.screen111.sound2, 0);
  expect(test.screen111.sound3, 0);
  expect(test.screen111.snd_timer, 20);
  expect(test.screen111.timer1, 0);
  expect(test.screen111.timer2, 0);
  expect(test.screen111.timer3, 0);
  expect(test.screen111.dsp_flg1, 0);
  expect(test.screen111.dsp_flg2, 0);
  expect(test.screen111.movie01_ext, 0);
  expect(test.screen111.movie02_ext, 0);
  expect(test.screen111.movie03_ext, 0);
  expect(test.screen111.movie04_ext, 0);
  expect(test.screen111.line_title, "プリカでお支払い");
  expect(test.screen111.line_title_ex, "Prepaid Card Payment");
  expect(test.screen111.line1, "お支払い金額を確認し");
  expect(test.screen111.line2, "カードを読ませてください");
  expect(test.screen111.line3, "");
  expect(test.screen111.line4, "");
  expect(test.screen111.line1_ex, "Please swipe");
  expect(test.screen111.line2_ex, "your prepaid card.");
  expect(test.screen111.line3_ex, "");
  expect(test.screen111.line4_ex, "");
  expect(test.screen111.sound_led1, 0);
  expect(test.screen111.sound_led2, 0);
  expect(test.screen111.sound_led3, 0);
  expect(test.screen112.title, "釣銭チャージ");
  expect(test.screen112.msg1, "");
  expect(test.screen112.msg2, "");
  expect(test.screen112.msg1_size, 0);
  expect(test.screen112.msg2_size, 0);
  expect(test.screen112.sound1, 0);
  expect(test.screen112.sound2, 0);
  expect(test.screen112.sound3, 0);
  expect(test.screen112.snd_timer, 0);
  expect(test.screen112.timer1, 0);
  expect(test.screen112.timer2, 0);
  expect(test.screen112.timer3, 0);
  expect(test.screen112.dsp_flg1, 0);
  expect(test.screen112.dsp_flg2, 0);
  expect(test.screen112.movie01_ext, 0);
  expect(test.screen112.movie02_ext, 0);
  expect(test.screen112.movie03_ext, 0);
  expect(test.screen112.movie04_ext, 0);
  expect(test.screen112.line_title, "釣銭チャージ中");
  expect(test.screen112.line_title_ex, "");
  expect(test.screen112.line1, "釣銭チャージ中です。");
  expect(test.screen112.line2, "しばらくお待ちください。");
  expect(test.screen112.line3, "");
  expect(test.screen112.line4, "");
  expect(test.screen112.line1_ex, "");
  expect(test.screen112.line2_ex, "");
  expect(test.screen112.line3_ex, "");
  expect(test.screen112.line4_ex, "");
  expect(test.screen112.sound_led1, 0);
  expect(test.screen112.sound_led2, 0);
  expect(test.screen112.sound_led3, 0);
  expect(test.screen113.title, "プリカ残高照会読取画面");
  expect(test.screen113.msg1, "カードを読ませてください");
  expect(test.screen113.msg2, "");
  expect(test.screen113.msg1_size, 0);
  expect(test.screen113.msg2_size, 0);
  expect(test.screen113.sound1, 6289);
  expect(test.screen113.sound2, 0);
  expect(test.screen113.sound3, 0);
  expect(test.screen113.snd_timer, 10);
  expect(test.screen113.timer1, 0);
  expect(test.screen113.timer2, 0);
  expect(test.screen113.timer3, 0);
  expect(test.screen113.dsp_flg1, 0);
  expect(test.screen113.dsp_flg2, 0);
  expect(test.screen113.movie01_ext, 0);
  expect(test.screen113.movie02_ext, 0);
  expect(test.screen113.movie03_ext, 0);
  expect(test.screen113.movie04_ext, 0);
  expect(test.screen113.line_title, "");
  expect(test.screen113.line_title_ex, "");
  expect(test.screen113.line1, "");
  expect(test.screen113.line2, "");
  expect(test.screen113.line3, "");
  expect(test.screen113.line4, "");
  expect(test.screen113.line1_ex, "");
  expect(test.screen113.line2_ex, "");
  expect(test.screen113.line3_ex, "");
  expect(test.screen113.line4_ex, "");
  expect(test.screen113.sound_led1, 6289);
  expect(test.screen113.sound_led2, 0);
  expect(test.screen113.sound_led3, 0);
  expect(test.screen114.title, "プリカ残高照会完了画面");
  expect(test.screen114.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen114.msg2, "");
  expect(test.screen114.msg1_size, 0);
  expect(test.screen114.msg2_size, 0);
  expect(test.screen114.sound1, 6578);
  expect(test.screen114.sound2, 0);
  expect(test.screen114.sound3, 0);
  expect(test.screen114.snd_timer, 20);
  expect(test.screen114.timer1, 0);
  expect(test.screen114.timer2, 0);
  expect(test.screen114.timer3, 0);
  expect(test.screen114.dsp_flg1, 0);
  expect(test.screen114.dsp_flg2, 0);
  expect(test.screen114.movie01_ext, 0);
  expect(test.screen114.movie02_ext, 0);
  expect(test.screen114.movie03_ext, 0);
  expect(test.screen114.movie04_ext, 0);
  expect(test.screen114.line_title, "");
  expect(test.screen114.line_title_ex, "");
  expect(test.screen114.line1, "");
  expect(test.screen114.line2, "");
  expect(test.screen114.line3, "");
  expect(test.screen114.line4, "");
  expect(test.screen114.line1_ex, "");
  expect(test.screen114.line2_ex, "");
  expect(test.screen114.line3_ex, "");
  expect(test.screen114.line4_ex, "");
  expect(test.screen114.sound_led1, 6578);
  expect(test.screen114.sound_led2, 0);
  expect(test.screen114.sound_led3, 0);
  expect(test.screen115.title, "ﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen115.msg1, "");
  expect(test.screen115.msg2, "");
  expect(test.screen115.msg1_size, 0);
  expect(test.screen115.msg2_size, 0);
  expect(test.screen115.sound1, 6016);
  expect(test.screen115.sound2, 0);
  expect(test.screen115.sound3, 0);
  expect(test.screen115.snd_timer, 20);
  expect(test.screen115.timer1, 10);
  expect(test.screen115.timer2, 0);
  expect(test.screen115.timer3, 0);
  expect(test.screen115.dsp_flg1, 0);
  expect(test.screen115.dsp_flg2, 0);
  expect(test.screen115.movie01_ext, 0);
  expect(test.screen115.movie02_ext, 0);
  expect(test.screen115.movie03_ext, 0);
  expect(test.screen115.movie04_ext, 0);
  expect(test.screen115.line_title, "");
  expect(test.screen115.line_title_ex, "");
  expect(test.screen115.line1, "よろしければ");
  expect(test.screen115.line2, "おわりボタンを");
  expect(test.screen115.line3, "押してください");
  expect(test.screen115.line4, "");
  expect(test.screen115.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen115.line2_ex, "button to complete");
  expect(test.screen115.line3_ex, "the payment.");
  expect(test.screen115.line4_ex, "");
  expect(test.screen115.sound_led1, 6179);
  expect(test.screen115.sound_led2, 6217);
  expect(test.screen115.sound_led3, 0);
  expect(test.screen116.title, "ﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen116.msg1, "レシートをお取りください。");
  expect(test.screen116.msg2, "");
  expect(test.screen116.msg1_size, 0);
  expect(test.screen116.msg2_size, 0);
  expect(test.screen116.sound1, 6018);
  expect(test.screen116.sound2, 0);
  expect(test.screen116.sound3, 0);
  expect(test.screen116.snd_timer, 0);
  expect(test.screen116.timer1, 5);
  expect(test.screen116.timer2, 10);
  expect(test.screen116.timer3, 0);
  expect(test.screen116.dsp_flg1, 0);
  expect(test.screen116.dsp_flg2, 0);
  expect(test.screen116.movie01_ext, 0);
  expect(test.screen116.movie02_ext, 0);
  expect(test.screen116.movie03_ext, 0);
  expect(test.screen116.movie04_ext, 0);
  expect(test.screen116.line_title, "");
  expect(test.screen116.line_title_ex, "");
  expect(test.screen116.line1, "レシートを");
  expect(test.screen116.line2, "お受け取りください");
  expect(test.screen116.line3, "ありがとう");
  expect(test.screen116.line4, "ございました");
  expect(test.screen116.line1_ex, "Thank you.");
  expect(test.screen116.line2_ex, "Please take your receipt.");
  expect(test.screen116.line3_ex, "");
  expect(test.screen116.line4_ex, "");
  expect(test.screen116.sound_led1, 6133);
  expect(test.screen116.sound_led2, 0);
  expect(test.screen116.sound_led3, 0);
  expect(test.screen117.title, "ﾎﾟｲﾝﾄ支払画面");
  expect(test.screen117.msg1, "");
  expect(test.screen117.msg2, "");
  expect(test.screen117.msg1_size, 24);
  expect(test.screen117.msg2_size, 0);
  expect(test.screen117.sound1, 6534);
  expect(test.screen117.sound2, 6534);
  expect(test.screen117.sound3, 0);
  expect(test.screen117.snd_timer, 20);
  expect(test.screen117.timer1, 10);
  expect(test.screen117.timer2, 0);
  expect(test.screen117.timer3, 0);
  expect(test.screen117.dsp_flg1, 0);
  expect(test.screen117.dsp_flg2, 0);
  expect(test.screen117.movie01_ext, 0);
  expect(test.screen117.movie02_ext, 0);
  expect(test.screen117.movie03_ext, 0);
  expect(test.screen117.movie04_ext, 0);
  expect(test.screen117.line_title, "");
  expect(test.screen117.line_title_ex, "");
  expect(test.screen117.line1, "ポイント数を入力して");
  expect(test.screen117.line2, "決定を押してください");
  expect(test.screen117.line3, "訂正する場合はクリア");
  expect(test.screen117.line4, "ボタンを押してください");
  expect(test.screen117.line1_ex, "ポイント利用単位：");
  expect(test.screen117.line2_ex, "");
  expect(test.screen117.line3_ex, "");
  expect(test.screen117.line4_ex, "");
  expect(test.screen117.sound_led1, 6534);
  expect(test.screen117.sound_led2, 6534);
  expect(test.screen117.sound_led3, 0);
  expect(test.screen118.title, "暗証番号入力画面");
  expect(test.screen118.msg1, "");
  expect(test.screen118.msg2, "");
  expect(test.screen118.msg1_size, 20);
  expect(test.screen118.msg2_size, 0);
  expect(test.screen118.sound1, 0);
  expect(test.screen118.sound2, 0);
  expect(test.screen118.sound3, 0);
  expect(test.screen118.snd_timer, 10);
  expect(test.screen118.timer1, 0);
  expect(test.screen118.timer2, 0);
  expect(test.screen118.timer3, 0);
  expect(test.screen118.dsp_flg1, 0);
  expect(test.screen118.dsp_flg2, 0);
  expect(test.screen118.movie01_ext, 0);
  expect(test.screen118.movie02_ext, 0);
  expect(test.screen118.movie03_ext, 0);
  expect(test.screen118.movie04_ext, 0);
  expect(test.screen118.line_title, "暗証番号を入力");
  expect(test.screen118.line_title_ex, "");
  expect(test.screen118.line1, "暗証番号を");
  expect(test.screen118.line2, "入力してください");
  expect(test.screen118.line3, "");
  expect(test.screen118.line4, "");
  expect(test.screen118.line1_ex, "Enter the passcode.");
  expect(test.screen118.line2_ex, "");
  expect(test.screen118.line3_ex, "");
  expect(test.screen118.line4_ex, "");
  expect(test.screen118.sound_led1, 6239);
  expect(test.screen118.sound_led2, 6239);
  expect(test.screen118.sound_led3, 0);
  expect(test.screen119.title, "iD利用画面");
  expect(test.screen119.msg1, "iDでお会計ですね");
  expect(test.screen119.msg2, "");
  expect(test.screen119.msg1_size, 0);
  expect(test.screen119.msg2_size, 0);
  expect(test.screen119.sound1, 6124);
  expect(test.screen119.sound2, 6255);
  expect(test.screen119.sound3, 0);
  expect(test.screen119.snd_timer, 20);
  expect(test.screen119.timer1, 0);
  expect(test.screen119.timer2, 0);
  expect(test.screen119.timer3, 0);
  expect(test.screen119.dsp_flg1, 0);
  expect(test.screen119.dsp_flg2, 0);
  expect(test.screen119.movie01_ext, 0);
  expect(test.screen119.movie02_ext, 0);
  expect(test.screen119.movie03_ext, 0);
  expect(test.screen119.movie04_ext, 0);
  expect(test.screen119.line_title, "ｉＤでお支払い");
  expect(test.screen119.line_title_ex, "iD Payment");
  expect(test.screen119.line1, "お支払い金額を確認し");
  expect(test.screen119.line2, "カードをタッチしてください");
  expect(test.screen119.line3, "");
  expect(test.screen119.line4, "");
  expect(test.screen119.line1_ex, "Tap your IC card");
  expect(test.screen119.line2_ex, "on the terminal.");
  expect(test.screen119.line3_ex, "");
  expect(test.screen119.line4_ex, "");
  expect(test.screen119.sound_led1, 6124);
  expect(test.screen119.sound_led2, 6255);
  expect(test.screen119.sound_led3, 0);
  expect(test.screen120.title, "QUICPay利用画面");
  expect(test.screen120.msg1, "QUICPayでお会計ですね");
  expect(test.screen120.msg2, "");
  expect(test.screen120.msg1_size, 0);
  expect(test.screen120.msg2_size, 0);
  expect(test.screen120.sound1, 6124);
  expect(test.screen120.sound2, 6254);
  expect(test.screen120.sound3, 0);
  expect(test.screen120.snd_timer, 20);
  expect(test.screen120.timer1, 0);
  expect(test.screen120.timer2, 0);
  expect(test.screen120.timer3, 0);
  expect(test.screen120.dsp_flg1, 0);
  expect(test.screen120.dsp_flg2, 0);
  expect(test.screen120.movie01_ext, 0);
  expect(test.screen120.movie02_ext, 0);
  expect(test.screen120.movie03_ext, 0);
  expect(test.screen120.movie04_ext, 0);
  expect(test.screen120.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen120.line_title_ex, "QUICPay Payment");
  expect(test.screen120.line1, "お支払い金額を確認し");
  expect(test.screen120.line2, "カードをタッチしてください");
  expect(test.screen120.line3, "");
  expect(test.screen120.line4, "");
  expect(test.screen120.line1_ex, "Tap your IC card");
  expect(test.screen120.line2_ex, "on the terminal.");
  expect(test.screen120.line3_ex, "");
  expect(test.screen120.line4_ex, "");
  expect(test.screen120.sound_led1, 6124);
  expect(test.screen120.sound_led2, 6254);
  expect(test.screen120.sound_led3, 0);
  expect(test.screen121.title, "ID支払完了画面");
  expect(test.screen121.msg1, "レシートをお取りください。");
  expect(test.screen121.msg2, "");
  expect(test.screen121.msg1_size, 0);
  expect(test.screen121.msg2_size, 0);
  expect(test.screen121.sound1, 6133);
  expect(test.screen121.sound2, 0);
  expect(test.screen121.sound3, 0);
  expect(test.screen121.snd_timer, 0);
  expect(test.screen121.timer1, 5);
  expect(test.screen121.timer2, 10);
  expect(test.screen121.timer3, 0);
  expect(test.screen121.dsp_flg1, 0);
  expect(test.screen121.dsp_flg2, 0);
  expect(test.screen121.movie01_ext, 0);
  expect(test.screen121.movie02_ext, 0);
  expect(test.screen121.movie03_ext, 0);
  expect(test.screen121.movie04_ext, 0);
  expect(test.screen121.line_title, "");
  expect(test.screen121.line_title_ex, "");
  expect(test.screen121.line1, "レシートを");
  expect(test.screen121.line2, "お受け取りください");
  expect(test.screen121.line3, "ありがとう");
  expect(test.screen121.line4, "ございました");
  expect(test.screen121.line1_ex, "Thank you.");
  expect(test.screen121.line2_ex, "Please take your receipt.");
  expect(test.screen121.line3_ex, "");
  expect(test.screen121.line4_ex, "");
  expect(test.screen121.sound_led1, 6133);
  expect(test.screen121.sound_led2, 6133);
  expect(test.screen121.sound_led3, 0);
  expect(test.screen122.title, "QUICPay支払完了画面");
  expect(test.screen122.msg1, "レシートをお取りください。");
  expect(test.screen122.msg2, "");
  expect(test.screen122.msg1_size, 0);
  expect(test.screen122.msg2_size, 0);
  expect(test.screen122.sound1, 6133);
  expect(test.screen122.sound2, 0);
  expect(test.screen122.sound3, 0);
  expect(test.screen122.snd_timer, 0);
  expect(test.screen122.timer1, 5);
  expect(test.screen122.timer2, 10);
  expect(test.screen122.timer3, 0);
  expect(test.screen122.dsp_flg1, 0);
  expect(test.screen122.dsp_flg2, 0);
  expect(test.screen122.movie01_ext, 0);
  expect(test.screen122.movie02_ext, 0);
  expect(test.screen122.movie03_ext, 0);
  expect(test.screen122.movie04_ext, 0);
  expect(test.screen122.line_title, "");
  expect(test.screen122.line_title_ex, "");
  expect(test.screen122.line1, "レシートを");
  expect(test.screen122.line2, "お受け取りください");
  expect(test.screen122.line3, "ありがとう");
  expect(test.screen122.line4, "ございました");
  expect(test.screen122.line1_ex, "Thank you.");
  expect(test.screen122.line2_ex, "Please take your receipt.");
  expect(test.screen122.line3_ex, "");
  expect(test.screen122.line4_ex, "");
  expect(test.screen122.sound_led1, 6133);
  expect(test.screen122.sound_led2, 6133);
  expect(test.screen122.sound_led3, 0);
  expect(test.screen123.title, "Verifone支払完了画面");
  expect(test.screen123.msg1, "レシートをお取りください。");
  expect(test.screen123.msg2, "");
  expect(test.screen123.msg1_size, 0);
  expect(test.screen123.msg2_size, 0);
  expect(test.screen123.sound1, 6133);
  expect(test.screen123.sound2, 0);
  expect(test.screen123.sound3, 0);
  expect(test.screen123.snd_timer, 0);
  expect(test.screen123.timer1, 5);
  expect(test.screen123.timer2, 10);
  expect(test.screen123.timer3, 0);
  expect(test.screen123.dsp_flg1, 0);
  expect(test.screen123.dsp_flg2, 0);
  expect(test.screen123.movie01_ext, 0);
  expect(test.screen123.movie02_ext, 0);
  expect(test.screen123.movie03_ext, 0);
  expect(test.screen123.movie04_ext, 0);
  expect(test.screen123.line_title, "");
  expect(test.screen123.line_title_ex, "");
  expect(test.screen123.line1, "レシートを");
  expect(test.screen123.line2, "お受け取りください");
  expect(test.screen123.line3, "ありがとう");
  expect(test.screen123.line4, "ございました");
  expect(test.screen123.line1_ex, "Please take your card");
  expect(test.screen123.line2_ex, "and the receipt.");
  expect(test.screen123.line3_ex, "Thank you.");
  expect(test.screen123.line4_ex, "");
  expect(test.screen123.sound_led1, 6133);
  expect(test.screen123.sound_led2, 0);
  expect(test.screen123.sound_led3, 0);
  expect(test.screen124.title, "Verifone支払確認画面");
  expect(test.screen124.msg1, "");
  expect(test.screen124.msg2, "");
  expect(test.screen124.msg1_size, 0);
  expect(test.screen124.msg2_size, 0);
  expect(test.screen124.sound1, 6179);
  expect(test.screen124.sound2, "");
  expect(test.screen124.sound3, "");
  expect(test.screen124.snd_timer, 20);
  expect(test.screen124.timer1, 0);
  expect(test.screen124.timer2, 0);
  expect(test.screen124.timer3, 0);
  expect(test.screen124.dsp_flg1, 0);
  expect(test.screen124.dsp_flg2, 0);
  expect(test.screen124.movie01_ext, 0);
  expect(test.screen124.movie02_ext, 0);
  expect(test.screen124.movie03_ext, 0);
  expect(test.screen124.movie04_ext, 0);
  expect(test.screen124.line_title, "");
  expect(test.screen124.line_title_ex, "");
  expect(test.screen124.line1, "よろしければ");
  expect(test.screen124.line2, "おわりボタンを");
  expect(test.screen124.line3, "押してください");
  expect(test.screen124.line4, "");
  expect(test.screen124.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen124.line2_ex, "button to complete");
  expect(test.screen124.line3_ex, "the payment.");
  expect(test.screen124.line4_ex, "");
  expect(test.screen124.sound_led1, 6179);
  expect(test.screen124.sound_led2, "");
  expect(test.screen124.sound_led3, "");
  expect(test.screen125.title, "楽天ポイントカード確認画面");
  expect(test.screen125.msg1, "楽天ポイントカードはお持ちですか？");
  expect(test.screen125.msg2, "");
  expect(test.screen125.msg1_size, 44);
  expect(test.screen125.msg2_size, "");
  expect(test.screen125.sound1, 6603);
  expect(test.screen125.sound2, 0);
  expect(test.screen125.sound3, 0);
  expect(test.screen125.snd_timer, 30);
  expect(test.screen125.timer1, 0);
  expect(test.screen125.timer2, 0);
  expect(test.screen125.timer3, 0);
  expect(test.screen125.dsp_flg1, 0);
  expect(test.screen125.dsp_flg2, 0);
  expect(test.screen125.movie01_ext, 0);
  expect(test.screen125.movie02_ext, 0);
  expect(test.screen125.movie03_ext, 0);
  expect(test.screen125.movie04_ext, 0);
  expect(test.screen125.line_title, "");
  expect(test.screen125.line_title_ex, "");
  expect(test.screen125.line1, "");
  expect(test.screen125.line2, "");
  expect(test.screen125.line3, "");
  expect(test.screen125.line4, "");
  expect(test.screen125.line1_ex, "");
  expect(test.screen125.line2_ex, "");
  expect(test.screen125.line3_ex, "");
  expect(test.screen125.line4_ex, "");
  expect(test.screen125.sound_led1, 6603);
  expect(test.screen125.sound_led2, 0);
  expect(test.screen125.sound_led3, 0);
  expect(test.screen126.title, "楽天ポイントカード読込画面");
  expect(test.screen126.msg1, "楽天ポイントカードの登録を行ってください。");
  expect(test.screen126.msg2, "");
  expect(test.screen126.msg1_size, 44);
  expect(test.screen126.msg2_size, "");
  expect(test.screen126.sound1, 6604);
  expect(test.screen126.sound2, 0);
  expect(test.screen126.sound3, 0);
  expect(test.screen126.snd_timer, 30);
  expect(test.screen126.timer1, 0);
  expect(test.screen126.timer2, 0);
  expect(test.screen126.timer3, 0);
  expect(test.screen126.dsp_flg1, 0);
  expect(test.screen126.dsp_flg2, 0);
  expect(test.screen126.movie01_ext, 0);
  expect(test.screen126.movie02_ext, 0);
  expect(test.screen126.movie03_ext, 0);
  expect(test.screen126.movie04_ext, 0);
  expect(test.screen126.line_title, "");
  expect(test.screen126.line_title_ex, "");
  expect(test.screen126.line1, "");
  expect(test.screen126.line2, "");
  expect(test.screen126.line3, "");
  expect(test.screen126.line4, "");
  expect(test.screen126.line1_ex, "");
  expect(test.screen126.line2_ex, "");
  expect(test.screen126.line3_ex, "");
  expect(test.screen126.line4_ex, "");
  expect(test.screen126.sound_led1, 6604);
  expect(test.screen126.sound_led2, 0);
  expect(test.screen126.sound_led3, 0);
  expect(test.screen127.title, "PiTaPa利用画面<verifone>");
  expect(test.screen127.msg1, "PiTaPaでお会計ですね");
  expect(test.screen127.msg2, "");
  expect(test.screen127.msg1_size, 0);
  expect(test.screen127.msg2_size, 0);
  expect(test.screen127.sound1, 6124);
  expect(test.screen127.sound2, 6048);
  expect(test.screen127.sound3, 0);
  expect(test.screen127.snd_timer, 20);
  expect(test.screen127.timer1, 0);
  expect(test.screen127.timer2, 0);
  expect(test.screen127.timer3, 0);
  expect(test.screen127.dsp_flg1, 0);
  expect(test.screen127.dsp_flg2, 0);
  expect(test.screen127.movie01_ext, 0);
  expect(test.screen127.movie02_ext, 0);
  expect(test.screen127.movie03_ext, 0);
  expect(test.screen127.movie04_ext, 0);
  expect(test.screen127.line_title, "ＰｉＴａＰａでお支払い");
  expect(test.screen127.line_title_ex, "PiTaPa Payment");
  expect(test.screen127.line1, "お支払い金額を確認し");
  expect(test.screen127.line2, "カードをタッチしてください");
  expect(test.screen127.line3, "");
  expect(test.screen127.line4, "");
  expect(test.screen127.line1_ex, "Tap your IC card");
  expect(test.screen127.line2_ex, "on the terminal.");
  expect(test.screen127.line3_ex, "");
  expect(test.screen127.line4_ex, "");
  expect(test.screen127.sound_led1, 6124);
  expect(test.screen127.sound_led2, 6048);
  expect(test.screen127.sound_led3, 0);
  expect(test.screen128.title, "カード読込画面");
  expect(test.screen128.msg1, "カードを読ませてください");
  expect(test.screen128.msg2, "");
  expect(test.screen128.msg1_size, 24);
  expect(test.screen128.msg2_size, 0);
  expect(test.screen128.sound1, 6270);
  expect(test.screen128.sound2, 0);
  expect(test.screen128.sound3, 0);
  expect(test.screen128.snd_timer, 10);
  expect(test.screen128.timer1, 0);
  expect(test.screen128.timer2, 0);
  expect(test.screen128.timer3, 0);
  expect(test.screen128.dsp_flg1, 0);
  expect(test.screen128.dsp_flg2, 0);
  expect(test.screen128.movie01_ext, 0);
  expect(test.screen128.movie02_ext, 0);
  expect(test.screen128.movie03_ext, 0);
  expect(test.screen128.movie04_ext, 0);
  expect(test.screen128.line_title, "");
  expect(test.screen128.line_title_ex, "");
  expect(test.screen128.line1, "友の会カードを");
  expect(test.screen128.line2, "読ませてください");
  expect(test.screen128.line3, "");
  expect(test.screen128.line4, "");
  expect(test.screen128.line1_ex, "");
  expect(test.screen128.line2_ex, "");
  expect(test.screen128.line3_ex, "");
  expect(test.screen128.line4_ex, "");
  expect(test.screen128.sound_led1, 6720);
  expect(test.screen128.sound_led2, 0);
  expect(test.screen128.sound_led3, 0);
  expect(test.screen129.title, "友の会でお支払画面");
  expect(test.screen129.msg1, "");
  expect(test.screen129.msg2, "");
  expect(test.screen129.msg1_size, 20);
  expect(test.screen129.msg2_size, 0);
  expect(test.screen129.sound1, 6258);
  expect(test.screen129.sound2, 0);
  expect(test.screen129.sound3, 0);
  expect(test.screen129.snd_timer, 20);
  expect(test.screen129.timer1, 0);
  expect(test.screen129.timer2, 0);
  expect(test.screen129.timer3, 0);
  expect(test.screen129.dsp_flg1, 0);
  expect(test.screen129.dsp_flg2, 0);
  expect(test.screen129.movie01_ext, 0);
  expect(test.screen129.movie02_ext, 0);
  expect(test.screen129.movie03_ext, 0);
  expect(test.screen129.movie04_ext, 0);
  expect(test.screen129.line_title, "友の会でお支払い");
  expect(test.screen129.line_title_ex, "");
  expect(test.screen129.line1, "あああ");
  expect(test.screen129.line2, "いいい");
  expect(test.screen129.line3, "");
  expect(test.screen129.line4, "");
  expect(test.screen129.line1_ex, "");
  expect(test.screen129.line2_ex, "");
  expect(test.screen129.line3_ex, "");
  expect(test.screen129.line4_ex, "");
  expect(test.screen129.sound_led1, 6258);
  expect(test.screen129.sound_led2, 0);
  expect(test.screen129.sound_led3, 0);
  expect(test.screen130.title, "友の会支払確認画面");
  expect(test.screen130.msg1, "");
  expect(test.screen130.msg2, "");
  expect(test.screen130.msg1_size, 0);
  expect(test.screen130.msg2_size, 0);
  expect(test.screen130.sound1, 6179);
  expect(test.screen130.sound2, "");
  expect(test.screen130.sound3, "");
  expect(test.screen130.snd_timer, 20);
  expect(test.screen130.timer1, 0);
  expect(test.screen130.timer2, 0);
  expect(test.screen130.timer3, 0);
  expect(test.screen130.dsp_flg1, 0);
  expect(test.screen130.dsp_flg2, 0);
  expect(test.screen130.movie01_ext, 0);
  expect(test.screen130.movie02_ext, 0);
  expect(test.screen130.movie03_ext, 0);
  expect(test.screen130.movie04_ext, 0);
  expect(test.screen130.line_title, "");
  expect(test.screen130.line_title_ex, "");
  expect(test.screen130.line1, "よろしければ");
  expect(test.screen130.line2, "おわりボタンを");
  expect(test.screen130.line3, "押してください");
  expect(test.screen130.line4, "");
  expect(test.screen130.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen130.line2_ex, "button to complete");
  expect(test.screen130.line3_ex, "the payment.");
  expect(test.screen130.line4_ex, "");
  expect(test.screen130.sound_led1, 6179);
  expect(test.screen130.sound_led2, "");
  expect(test.screen130.sound_led3, "");
  expect(test.screen131.title, "友の会支払完了画面");
  expect(test.screen131.msg1, "レシートをお取りください。");
  expect(test.screen131.msg2, "");
  expect(test.screen131.msg1_size, 0);
  expect(test.screen131.msg2_size, 0);
  expect(test.screen131.sound1, 6133);
  expect(test.screen131.sound2, 0);
  expect(test.screen131.sound3, 0);
  expect(test.screen131.snd_timer, 0);
  expect(test.screen131.timer1, 5);
  expect(test.screen131.timer2, 10);
  expect(test.screen131.timer3, 0);
  expect(test.screen131.dsp_flg1, 0);
  expect(test.screen131.dsp_flg2, 0);
  expect(test.screen131.movie01_ext, 0);
  expect(test.screen131.movie02_ext, 0);
  expect(test.screen131.movie03_ext, 0);
  expect(test.screen131.movie04_ext, 0);
  expect(test.screen131.line_title, "");
  expect(test.screen131.line_title_ex, "");
  expect(test.screen131.line1, "レシートを");
  expect(test.screen131.line2, "お受け取りください");
  expect(test.screen131.line3, "ありがとう");
  expect(test.screen131.line4, "ございました");
  expect(test.screen131.line1_ex, "Please take your card");
  expect(test.screen131.line2_ex, "and the receipt.");
  expect(test.screen131.line3_ex, "Thank you.");
  expect(test.screen131.line4_ex, "");
  expect(test.screen131.sound_led1, 6133);
  expect(test.screen131.sound_led2, 0);
  expect(test.screen131.sound_led3, 0);
  expect(test.screen132.title, "Tクーポン確認画面");
  expect(test.screen132.msg1, "クーポンはお持ちですか？");
  expect(test.screen132.msg2, "");
  expect(test.screen132.msg1_size, 44);
  expect(test.screen132.msg2_size, "");
  expect(test.screen132.sound1, 6552);
  expect(test.screen132.sound2, 0);
  expect(test.screen132.sound3, 0);
  expect(test.screen132.snd_timer, 30);
  expect(test.screen132.timer1, 0);
  expect(test.screen132.timer2, 0);
  expect(test.screen132.timer3, 0);
  expect(test.screen132.dsp_flg1, 0);
  expect(test.screen132.dsp_flg2, 0);
  expect(test.screen132.movie01_ext, 0);
  expect(test.screen132.movie02_ext, 0);
  expect(test.screen132.movie03_ext, 0);
  expect(test.screen132.movie04_ext, 0);
  expect(test.screen132.line_title, "");
  expect(test.screen132.line_title_ex, "");
  expect(test.screen132.line1, "");
  expect(test.screen132.line2, "");
  expect(test.screen132.line3, "");
  expect(test.screen132.line4, "");
  expect(test.screen132.line1_ex, "");
  expect(test.screen132.line2_ex, "");
  expect(test.screen132.line3_ex, "");
  expect(test.screen132.line4_ex, "");
  expect(test.screen132.sound_led1, 6552);
  expect(test.screen132.sound_led2, 0);
  expect(test.screen132.sound_led3, 0);
  expect(test.screen133.title, "Tクーポン読取画面");
  expect(test.screen133.msg1, "クーポンバーコードを");
  expect(test.screen133.msg2, "スキャンしてください");
  expect(test.screen133.msg1_size, 0);
  expect(test.screen133.msg2_size, 0);
  expect(test.screen133.sound1, 6553);
  expect(test.screen133.sound2, 0);
  expect(test.screen133.sound3, 0);
  expect(test.screen133.snd_timer, 20);
  expect(test.screen133.timer1, 0);
  expect(test.screen133.timer2, 0);
  expect(test.screen133.timer3, 0);
  expect(test.screen133.dsp_flg1, 0);
  expect(test.screen133.dsp_flg2, 0);
  expect(test.screen133.movie01_ext, 0);
  expect(test.screen133.movie02_ext, 0);
  expect(test.screen133.movie03_ext, 0);
  expect(test.screen133.movie04_ext, 0);
  expect(test.screen133.line_title, "");
  expect(test.screen133.line_title_ex, "");
  expect(test.screen133.line1, "");
  expect(test.screen133.line2, "");
  expect(test.screen133.line3, "");
  expect(test.screen133.line4, "");
  expect(test.screen133.line1_ex, "");
  expect(test.screen133.line2_ex, "");
  expect(test.screen133.line3_ex, "");
  expect(test.screen133.line4_ex, "");
  expect(test.screen133.sound_led1, 6553);
  expect(test.screen133.sound_led2, 0);
  expect(test.screen133.sound_led3, 0);
  expect(test.screen134.title, "楽天ポイント利用確認画面");
  expect(test.screen134.msg1, "楽天ポイントを利用しますか？");
  expect(test.screen134.msg2, "");
  expect(test.screen134.msg1_size, 44);
  expect(test.screen134.msg2_size, "");
  expect(test.screen134.sound1, 6631);
  expect(test.screen134.sound2, 0);
  expect(test.screen134.sound3, 0);
  expect(test.screen134.snd_timer, 30);
  expect(test.screen134.timer1, 0);
  expect(test.screen134.timer2, 0);
  expect(test.screen134.timer3, 0);
  expect(test.screen134.dsp_flg1, 0);
  expect(test.screen134.dsp_flg2, 0);
  expect(test.screen134.movie01_ext, 0);
  expect(test.screen134.movie02_ext, 0);
  expect(test.screen134.movie03_ext, 0);
  expect(test.screen134.movie04_ext, 0);
  expect(test.screen134.line_title, "");
  expect(test.screen134.line_title_ex, "");
  expect(test.screen134.line1, "");
  expect(test.screen134.line2, "");
  expect(test.screen134.line3, "");
  expect(test.screen134.line4, "");
  expect(test.screen134.line1_ex, "");
  expect(test.screen134.line2_ex, "");
  expect(test.screen134.line3_ex, "");
  expect(test.screen134.line4_ex, "");
  expect(test.screen134.sound_led1, 6631);
  expect(test.screen134.sound_led2, 0);
  expect(test.screen134.sound_led3, 0);
  expect(test.screen135.title, "Edyリトライ画面");
  expect(test.screen135.msg1, "もう一度カードを");
  expect(test.screen135.msg2, "タッチしてください");
  expect(test.screen135.msg1_size, 0);
  expect(test.screen135.msg2_size, 0);
  expect(test.screen135.sound1, 6277);
  expect(test.screen135.sound2, 0);
  expect(test.screen135.sound3, 0);
  expect(test.screen135.snd_timer, 10);
  expect(test.screen135.timer1, 0);
  expect(test.screen135.timer2, 0);
  expect(test.screen135.timer3, 0);
  expect(test.screen135.dsp_flg1, 0);
  expect(test.screen135.dsp_flg2, 0);
  expect(test.screen135.movie01_ext, 0);
  expect(test.screen135.movie02_ext, 0);
  expect(test.screen135.movie03_ext, 0);
  expect(test.screen135.movie04_ext, 0);
  expect(test.screen135.line_title, "Ｅｄｙでお支払い");
  expect(test.screen135.line_title_ex, "");
  expect(test.screen135.line1, "カードの読取が不十分です");
  expect(test.screen135.line2, "もう一度カードを");
  expect(test.screen135.line3, "タッチしてください");
  expect(test.screen135.line4, "");
  expect(test.screen135.line1_ex, "");
  expect(test.screen135.line2_ex, "");
  expect(test.screen135.line3_ex, "");
  expect(test.screen135.line4_ex, "");
  expect(test.screen135.sound_led1, 6277);
  expect(test.screen135.sound_led2, 0);
  expect(test.screen135.sound_led3, 0);
  expect(test.screen136.title, "iDリトライ画面");
  expect(test.screen136.msg1, "もう一度カードを");
  expect(test.screen136.msg2, "タッチしてください");
  expect(test.screen136.msg1_size, 0);
  expect(test.screen136.msg2_size, 0);
  expect(test.screen136.sound1, 6277);
  expect(test.screen136.sound2, 0);
  expect(test.screen136.sound3, 0);
  expect(test.screen136.snd_timer, 10);
  expect(test.screen136.timer1, 0);
  expect(test.screen136.timer2, 0);
  expect(test.screen136.timer3, 0);
  expect(test.screen136.dsp_flg1, 0);
  expect(test.screen136.dsp_flg2, 0);
  expect(test.screen136.movie01_ext, 0);
  expect(test.screen136.movie02_ext, 0);
  expect(test.screen136.movie03_ext, 0);
  expect(test.screen136.movie04_ext, 0);
  expect(test.screen136.line_title, "ｉＤでお支払い");
  expect(test.screen136.line_title_ex, "");
  expect(test.screen136.line1, "カードの読取が不十分です");
  expect(test.screen136.line2, "もう一度カードを");
  expect(test.screen136.line3, "タッチしてください");
  expect(test.screen136.line4, "");
  expect(test.screen136.line1_ex, "");
  expect(test.screen136.line2_ex, "");
  expect(test.screen136.line3_ex, "");
  expect(test.screen136.line4_ex, "");
  expect(test.screen136.sound_led1, 6277);
  expect(test.screen136.sound_led2, 0);
  expect(test.screen136.sound_led3, 0);
  expect(test.screen137.title, "交通系ICリトライ画面");
  expect(test.screen137.msg1, "もう一度カードを");
  expect(test.screen137.msg2, "タッチしてください");
  expect(test.screen137.msg1_size, 0);
  expect(test.screen137.msg2_size, 0);
  expect(test.screen137.sound1, 6277);
  expect(test.screen137.sound2, 0);
  expect(test.screen137.sound3, 0);
  expect(test.screen137.snd_timer, 10);
  expect(test.screen137.timer1, 0);
  expect(test.screen137.timer2, 0);
  expect(test.screen137.timer3, 0);
  expect(test.screen137.dsp_flg1, 0);
  expect(test.screen137.dsp_flg2, 0);
  expect(test.screen137.movie01_ext, 0);
  expect(test.screen137.movie02_ext, 0);
  expect(test.screen137.movie03_ext, 0);
  expect(test.screen137.movie04_ext, 0);
  expect(test.screen137.line_title, "交通系ＩＣでお支払い");
  expect(test.screen137.line_title_ex, "");
  expect(test.screen137.line1, "カードの読取が不十分です");
  expect(test.screen137.line2, "もう一度カードを");
  expect(test.screen137.line3, "タッチしてください");
  expect(test.screen137.line4, "");
  expect(test.screen137.line1_ex, "");
  expect(test.screen137.line2_ex, "");
  expect(test.screen137.line3_ex, "");
  expect(test.screen137.line4_ex, "");
  expect(test.screen137.sound_led1, 6277);
  expect(test.screen137.sound_led2, 0);
  expect(test.screen137.sound_led3, 0);
  expect(test.screen138.title, "QUICPayリトライ画面");
  expect(test.screen138.msg1, "もう一度カードを");
  expect(test.screen138.msg2, "タッチしてください");
  expect(test.screen138.msg1_size, 0);
  expect(test.screen138.msg2_size, 0);
  expect(test.screen138.sound1, 6277);
  expect(test.screen138.sound2, 0);
  expect(test.screen138.sound3, 0);
  expect(test.screen138.snd_timer, 10);
  expect(test.screen138.timer1, 0);
  expect(test.screen138.timer2, 0);
  expect(test.screen138.timer3, 0);
  expect(test.screen138.dsp_flg1, 0);
  expect(test.screen138.dsp_flg2, 0);
  expect(test.screen138.movie01_ext, 0);
  expect(test.screen138.movie02_ext, 0);
  expect(test.screen138.movie03_ext, 0);
  expect(test.screen138.movie04_ext, 0);
  expect(test.screen138.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen138.line_title_ex, "");
  expect(test.screen138.line1, "カードの読取が不十分です");
  expect(test.screen138.line2, "もう一度カードを");
  expect(test.screen138.line3, "タッチしてください");
  expect(test.screen138.line4, "");
  expect(test.screen138.line1_ex, "");
  expect(test.screen138.line2_ex, "");
  expect(test.screen138.line3_ex, "");
  expect(test.screen138.line4_ex, "");
  expect(test.screen138.sound_led1, 6277);
  expect(test.screen138.sound_led2, 0);
  expect(test.screen138.sound_led3, 0);
  expect(test.screen139.title, "nanacoリトライ画面");
  expect(test.screen139.msg1, "もう一度カードを");
  expect(test.screen139.msg2, "タッチしてください");
  expect(test.screen139.msg1_size, 0);
  expect(test.screen139.msg2_size, 0);
  expect(test.screen139.sound1, 6277);
  expect(test.screen139.sound2, 0);
  expect(test.screen139.sound3, 0);
  expect(test.screen139.snd_timer, 10);
  expect(test.screen139.timer1, 0);
  expect(test.screen139.timer2, 0);
  expect(test.screen139.timer3, 0);
  expect(test.screen139.dsp_flg1, 0);
  expect(test.screen139.dsp_flg2, 0);
  expect(test.screen139.movie01_ext, 0);
  expect(test.screen139.movie02_ext, 0);
  expect(test.screen139.movie03_ext, 0);
  expect(test.screen139.movie04_ext, 0);
  expect(test.screen139.line_title, "ｎａｎａｃｏでお支払い");
  expect(test.screen139.line_title_ex, "");
  expect(test.screen139.line1, "カードの読取が不十分です");
  expect(test.screen139.line2, "もう一度カードを");
  expect(test.screen139.line3, "タッチしてください");
  expect(test.screen139.line4, "");
  expect(test.screen139.line1_ex, "");
  expect(test.screen139.line2_ex, "");
  expect(test.screen139.line3_ex, "");
  expect(test.screen139.line4_ex, "");
  expect(test.screen139.sound_led1, 6277);
  expect(test.screen139.sound_led2, 0);
  expect(test.screen139.sound_led3, 0);
  expect(test.screen140.title, "PiTaPaリトライ画面");
  expect(test.screen140.msg1, "もう一度カードを");
  expect(test.screen140.msg2, "タッチしてください");
  expect(test.screen140.msg1_size, 0);
  expect(test.screen140.msg2_size, 0);
  expect(test.screen140.sound1, 6277);
  expect(test.screen140.sound2, 0);
  expect(test.screen140.sound3, 0);
  expect(test.screen140.snd_timer, 10);
  expect(test.screen140.timer1, 0);
  expect(test.screen140.timer2, 0);
  expect(test.screen140.timer3, 0);
  expect(test.screen140.dsp_flg1, 0);
  expect(test.screen140.dsp_flg2, 0);
  expect(test.screen140.movie01_ext, 0);
  expect(test.screen140.movie02_ext, 0);
  expect(test.screen140.movie03_ext, 0);
  expect(test.screen140.movie04_ext, 0);
  expect(test.screen140.line_title, "ＰｉＴａＰａでお支払い");
  expect(test.screen140.line_title_ex, "");
  expect(test.screen140.line1, "カードの読取が不十分です");
  expect(test.screen140.line2, "もう一度カードを");
  expect(test.screen140.line3, "タッチしてください");
  expect(test.screen140.line4, "");
  expect(test.screen140.line1_ex, "");
  expect(test.screen140.line2_ex, "");
  expect(test.screen140.line3_ex, "");
  expect(test.screen140.line4_ex, "");
  expect(test.screen140.sound_led1, 6277);
  expect(test.screen140.sound_led2, 0);
  expect(test.screen140.sound_led3, 0);
  expect(test.screen141.title, "WAONリトライ画面");
  expect(test.screen141.msg1, "もう一度カードを");
  expect(test.screen141.msg2, "タッチしてください");
  expect(test.screen141.msg1_size, 0);
  expect(test.screen141.msg2_size, 0);
  expect(test.screen141.sound1, 6277);
  expect(test.screen141.sound2, 0);
  expect(test.screen141.sound3, 0);
  expect(test.screen141.snd_timer, 10);
  expect(test.screen141.timer1, 0);
  expect(test.screen141.timer2, 0);
  expect(test.screen141.timer3, 0);
  expect(test.screen141.dsp_flg1, 0);
  expect(test.screen141.dsp_flg2, 0);
  expect(test.screen141.movie01_ext, 0);
  expect(test.screen141.movie02_ext, 0);
  expect(test.screen141.movie03_ext, 0);
  expect(test.screen141.movie04_ext, 0);
  expect(test.screen141.line_title, "ＷＡＯＮでお支払い");
  expect(test.screen141.line_title_ex, "");
  expect(test.screen141.line1, "カードの読取が不十分です");
  expect(test.screen141.line2, "もう一度カードを");
  expect(test.screen141.line3, "タッチしてください");
  expect(test.screen141.line4, "");
  expect(test.screen141.line1_ex, "");
  expect(test.screen141.line2_ex, "");
  expect(test.screen141.line3_ex, "");
  expect(test.screen141.line4_ex, "");
  expect(test.screen141.sound_led1, 6277);
  expect(test.screen141.sound_led2, 0);
  expect(test.screen141.sound_led3, 0);
  expect(test.screen144.title, "会員解除確認画面");
  expect(test.screen144.msg1, "会員様優待が適用されません。");
  expect(test.screen144.msg2, "よろしいでしょうか？");
  expect(test.screen144.msg1_size, 28);
  expect(test.screen144.msg2_size, 44);
  expect(test.screen144.sound1, 6606);
  expect(test.screen144.sound2, 0);
  expect(test.screen144.sound3, 0);
  expect(test.screen144.snd_timer, 30);
  expect(test.screen144.timer1, 0);
  expect(test.screen144.timer2, 0);
  expect(test.screen144.timer3, 0);
  expect(test.screen144.dsp_flg1, 0);
  expect(test.screen144.dsp_flg2, 0);
  expect(test.screen144.movie01_ext, 0);
  expect(test.screen144.movie02_ext, 0);
  expect(test.screen144.movie03_ext, 0);
  expect(test.screen144.movie04_ext, 0);
  expect(test.screen144.line_title, "");
  expect(test.screen144.line_title_ex, "");
  expect(test.screen144.line1, "");
  expect(test.screen144.line2, "");
  expect(test.screen144.line3, "");
  expect(test.screen144.line4, "");
  expect(test.screen144.line1_ex, "");
  expect(test.screen144.line2_ex, "");
  expect(test.screen144.line3_ex, "");
  expect(test.screen144.line4_ex, "");
  expect(test.screen144.sound_led1, 6606);
  expect(test.screen144.sound_led2, 0);
  expect(test.screen144.sound_led3, 0);
  expect(test.ActSetUp.ReadAlertTime, 60);
  expect(test.ActSetUp.AutoReadInterval, 3);
  expect(test.ActSetUp.InterruptPrint, 0);
  expect(test.ActSetUp.InterruptPay, 0);
  expect(test.ActSetUp.UpdGetFtpTimer, 10);
  expect(test.HiddenSetUp.TableReadInterval, 500);
  expect(test.customer.cust_card_max, 0);
  expect(test.customer.cust_card_type1, 0);
  expect(test.customer.cust_card_type2, 0);
  expect(test.customer.cust_card_type3, 0);
  expect(test.customer.cust_card_type4, 0);
  expect(test.customer.cust_card_type5, 0);
  expect(test.customer.cust_card_type6, 0);
  expect(test.ShopAndGo.shop_and_go_nonfile_plucd, 999999);
  expect(test.ShopAndGo.shop_and_go_nonscan_plucd, 999998);
  expect(test.ShopAndGo.shop_and_go_limit1, 999);
  expect(test.ShopAndGo.shop_and_go_limit2, 499);
  expect(test.ShopAndGo.shop_and_go_limit3, 299);
  expect(test.ShopAndGo.shop_and_go_test_srv_flg, 0);
  expect(test.ShopAndGo.shop_and_go_companycode, 999999998);
  expect(test.ShopAndGo.shop_and_go_storecode, 123456789);
  expect(test.ShopAndGo.shop_and_go_mbr_chk_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_server_timeout, 3);
  expect(test.ShopAndGo.shop_and_go_proxy, "");
  expect(test.ShopAndGo.shop_and_go_proxy_port, 0);
  expect(test.ShopAndGo.shop_and_go_n_money_btn_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_domain, "https://api.digi-cr.com");
  expect(test.ShopAndGo.shop_and_go_mbr_card_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cr50_domain, "");
  expect(test.ShopAndGo.shop_and_go_point_domain, "");
  expect(test.ShopAndGo.shop_and_go_cr50_plucd, 999997);
  expect(test.ShopAndGo.shop_and_go_eatin_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cogca_read_twice, 0);
  expect(test.ShopAndGo.shop_and_go_use_class, 0);
  expect(test.ShopAndGo.shop_and_go_expensive_mark_prn, 0);
  expect(test.ShopAndGo.shop_and_go_regbag_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_use_preset_grp_code, 0);
  expect(test.ShopAndGo.shop_and_go_mente_nonplu_btn_reference, 1);
  expect(test.ShopAndGo.shop_and_go_mbr_auto_cncl_time, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_msg_use_no, 31);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print_normal, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs, 6);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss, 16);
  expect(test.ShopAndGo.shop_and_go_thread_timeout, 10);
  expect(test.PaymentGroup.pay_grp_name1, "会計グループ１");
  expect(test.PaymentGroup.pay_grp_name2, "会計グループ２");
  expect(test.PaymentGroup.pay_grp_name3, "会計グループ３");
  expect(test.PaymentGroup.pay_grp_name4, "会計グループ４");
  expect(test.PaymentGroup.pay_grp_name5, "会計グループ５");
  expect(test.PaymentGroup.pay_grp_name6, "会計グループ６");
  expect(test.PaymentGroup.pay_grp_name7, "会計グループ７");
  expect(test.PaymentGroup.pay_grp_name8, "会計グループ８");
  expect(test.PaymentGroup.pay_grp_name9, "会計グループ９");
  expect(test.PaymentGroup.pay_typ1_grp, 0);
  expect(test.PaymentGroup.pay_typ2_grp, 0);
  expect(test.PaymentGroup.pay_typ3_grp, 0);
  expect(test.PaymentGroup.pay_typ4_grp, 0);
  expect(test.PaymentGroup.pay_typ5_grp, 0);
  expect(test.PaymentGroup.pay_typ6_grp, 0);
  expect(test.PaymentGroup.pay_typ7_grp, 0);
  expect(test.PaymentGroup.pay_typ8_grp, 0);
  expect(test.PaymentGroup.pay_typ9_grp, 0);
  expect(test.PaymentGroup.pay_typ10_grp, 0);
  expect(test.PaymentGroup.pay_typ11_grp, 0);
  expect(test.PaymentGroup.pay_typ12_grp, 0);
  expect(test.PaymentGroup.pay_typ13_grp, 0);
  expect(test.PaymentGroup.pay_typ14_grp, 0);
  expect(test.PaymentGroup.pay_typ15_grp, 0);
  expect(test.PaymentGroup.pay_typ16_grp, 0);
  expect(test.PaymentGroup.pay_grp_name1_ex, "Payment Group １");
  expect(test.PaymentGroup.pay_grp_name2_ex, "Payment Group ２");
  expect(test.PaymentGroup.pay_grp_name3_ex, "Payment Group ３");
  expect(test.PaymentGroup.pay_grp_name4_ex, "Payment Group ４");
  expect(test.PaymentGroup.pay_grp_name5_ex, "Payment Group ５");
  expect(test.PaymentGroup.pay_grp_name6_ex, "Payment Group ６");
  expect(test.PaymentGroup.pay_grp_name7_ex, "Payment Group ７");
  expect(test.PaymentGroup.pay_grp_name8_ex, "Payment Group ８");
  expect(test.PaymentGroup.pay_grp_name9_ex, "Payment Group ９");
}

