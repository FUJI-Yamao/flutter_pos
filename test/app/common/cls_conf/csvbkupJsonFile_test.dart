/*
 * (C)2023 TERAOKA SEIKO Co., Ltd./株式会社寺岡精工
 * CONFIDENTIAL/社外秘
 * 無断開示・無断複製禁止
 */
 
import 'package:flutter_pos/app/common/environment.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:flutter/services.dart' show rootBundle;
import 'package:flutter/cupertino.dart';
import 'package:path_provider/path_provider.dart';
import 'package:path_provider_platform_interface/path_provider_platform_interface.dart';
import 'package:path/path.dart';
import 'dart:io';
import 'unitTestParts.dart';

import '../../../../lib/app/common/cls_conf/configJsonFile.dart';
import '../../../../lib/app/common/cls_conf/csvbkupJsonFile.dart';

late CsvbkupJsonFile csvbkup;

void main(){
  csvbkupJsonFile_test();
}

void csvbkupJsonFile_test()
{
  TestWidgetsFlutterBinding.ensureInitialized();
  const String confPath = "conf/aa/";
  const String testDir = "test_assets";
  const String fileName = "csvbkup.json";
  const String section = "max_item";
  const String key = "total_item";
  const defaultData = 84;
  const testData1  =  987654321;    // テストデータ1
  const testData1s = "987654321";
  const testData2  =  192834675;    // テストデータ2
  const testData2s = "192834675";
  const testData3  =  129834765;    // テストデータ3
  const testData3s = "129834765";

  group('CsvbkupJsonFile',()
  {
    setUp(() async{
      PathProviderPlatform.instance = MockPathProviderPlatform();
      // 当該JSONファイルをデフォルトに戻す。
      await CsvbkupJsonFile().setDefault();
    });

    // 各テストの事後処理
    tearDown(() async{
      // 当該JSONファイルをデフォルトに戻す。
      await CsvbkupJsonFile().setDefault();
    });

    // ********************************************************
    // テスト00001 : load
    // 前提：アプリ用フォルダに対象JSONファイルが存在しないこと。
    // 試験手順：loadを実行する。
    // 期待結果：①assets/confにある対象JSONファイルがアプリ用フォルダに作成されること。
    // 　　　　　②対象JSONファイルの各プロパティ値を読み込んでいること。
    // ********************************************************
    test('00001_load_01', () async {
      print("\n********** テスト実行：00001_load_01 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // 前提状態構築
      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == true) {
        fileBefore.deleteSync();
      }
      // ⓪：事前状態確認（対象JSONファイルが存在しないこと。）
      expect(fileBefore.exists() == false, false);

      await csvbkup.load();

      final File fileAfter = File(jsonPath);
      // ①-1：load実行により対象JSONファイルが作成されていること。
      expect(fileAfter.existsSync(), true);

      // ②：対象JSONファイルの各プロパティ値を読み込んでいること。
      allPropatyCheck(csvbkup,true);

      print("********** テスト終了：00001_load_01 **********\n\n");
    });

    // ********************************************************
    // テスト00002 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：loadを実行する。
    // 期待結果：アプリ用フォルダの対象JSONファイルの各プロパティ値を読み込んでいること。
    // ********************************************************
    test("00002_load_02", () async {
      print("\n********** テスト実行：00002_load_02 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == false) {
        csvbkup.setDefault();
        debugPrint("setDefault実行");
      }
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      await csvbkup.load();

      // 対象JSONファイルの各プロパティ値を読み込んでいること。
      // 00001実行後で、デフォルト値前提
      allPropatyCheck(csvbkup,true);

      print("********** テスト終了：00002_load_02 **********\n\n");
    });

    // ********************************************************
    // テスト00003 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②任意のプロパティの値を変更する。
    // 　　　　　③loadを実行する。
    // 期待結果：当該プロパティ値の変更が取り消されること。
    // ********************************************************
    test('00003_load_03', () async {
      print("\n********** テスト実行：00003_load_03 **********");
      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①：loadを実行する。
      await csvbkup.load();

      // ②任意のプロパティの値を変更する。
      final prefixData = csvbkup.max_item.total_item;
      csvbkup.max_item.total_item = testData1;
      expect(csvbkup.max_item.total_item == testData1, true);

      // ③loadを実行する。
      //   当該プロパティ値の変更が取り消されること。
      await csvbkup.load();
      expect(csvbkup.max_item.total_item != testData1, true);
      expect(csvbkup.max_item.total_item == prefixData, true);

      print("********** テスト終了：00003_load_03 **********\n\n");
    });

    // ********************************************************
    // テスト00004 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②任意のプロパティの値を変更する。
    // 　　　　　③loadを実行する。
    // 期待結果：当該プロパティ値の変更が取り消されること。
    // ********************************************************
    test('00004_load_04', () async {
      print("\n********** テスト実行：00004_load_04 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②任意のプロパティの値を変更する。
      final prefixData = csvbkup.max_item.total_item;
      csvbkup.max_item.total_item = testData1;
      expect(csvbkup.max_item.total_item, testData1);

      // ③saveを実行する。
      await csvbkup.save();

      // ④loadを実行する。
      await csvbkup.load();

      expect(csvbkup.max_item.total_item != prefixData, true);
      expect(csvbkup.max_item.total_item == testData1, true);
      allPropatyCheck(csvbkup,false);

      print("********** テスト終了：00004_load_04 **********\n\n");
    });

    // ********************************************************
    // テスト00005 : save
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②saveを実行する。
    // 期待結果：アプリ用フォルダにある対象JSONファイルの内容に変化がないこと。
    // ********************************************************
    test('00005_save_01', () async {
      print("\n********** テスト実行：00005_save_01 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      // ① loadを実行する。
      await csvbkup.load();

      // save実行前のJSONファイルを保存する。
      final String jsonBefor = await fileBefore.readAsString();

      // ② saveを実行する。
      await csvbkup.save();

      final File fileAfter = File(jsonPath);
      expect(fileAfter.existsSync(), true);

      // アプリ用フォルダにある対象JSONファイルの内容に変化がないこと。
      final String jsonAfter = await fileAfter.readAsString();
      expect(jsonBefor.replaceAll("\r\n", "\n") == jsonAfter.replaceAll("\r\n", "\n"), true);

      print("********** テスト終了：00201_save_01 **********\n\n");
    });

    // ********************************************************
    // テスト00006 : save
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    // 期待結果：アプリ用フォルダにある対象JSONファイルの当該プロパティの値が
    //         変更した値に変更されていること。
    // ********************************************************
    test('00006_save_02', () async {
      print("\n********** テスト実行：00006_save_02 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      // ① loadを実行する。
      await csvbkup.load();

      // save実行前のJSONファイルを保存する。
      final String jsonBefor = await fileBefore.readAsString();
      expect(csvbkup.max_item.total_item, defaultData);

      // ②任意のプロパティの値を変更する。
      final prefixData = csvbkup.max_item.total_item;
      csvbkup.max_item.total_item = testData1;

      // ③ saveを実行する。
      await csvbkup.save();

      final File fileAfter1 = File(jsonPath);
      expect(fileAfter1.existsSync(), true);

      // アプリ用フォルダにある対象JSONファイルの内容に変化ががあること。
      // 手順②で変更した内容になっていること。
      final String jsonAfter1 = await fileAfter1.readAsString();
      expect(jsonBefor.replaceAll("\r\n", "\n") != jsonAfter1.replaceAll("\r\n", "\n"), true);
      expect(testData1 != prefixData, true);
      expect(csvbkup.max_item.total_item, testData1);

      // ④ loadを実行する。
      await csvbkup.load();

      // アプリ用フォルダにある対象JSONファイルの内容が同じであること。
      // 手順②で変更した内容であること。
      final String jsonAfter2 = await fileAfter1.readAsString();
      expect(jsonAfter1.replaceAll("\r\n", "\n") == jsonAfter2.replaceAll("\r\n", "\n"), true);

      expect(csvbkup.max_item.total_item == testData1, true);
      allPropatyCheck(csvbkup,false);

      print("********** テスト終了：00006_save_02 **********\n\n");
    });

    // ********************************************************
    // テスト00007 : setDefault
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    //         アプリ用フォルダに対象JSONファイルが存在し、任意の編集を施すこと。
    // 試験手順：①アプリ用フォルダにある対象JSONファイルを削除する。
    //         ②setDefaultを実行する。
    // 期待結果：手順②実行後、assets/confにある対象JSONファイルが
    //         アプリ用フォルダに作成されること。
    // ********************************************************
    test('00007_setDefault_01', () async {
      print("\n********** テスト実行：00007_setDefault_01 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①アプリ用フォルダにある対象JSONファイルを削除する。
      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == true) {
        fileBefore.deleteSync();
      }
      expect(fileBefore.existsSync() , false);

      // ②setDefaultを実行する。
      await csvbkup.setDefault();
      expect(fileBefore.existsSync() , true);
      allPropatyCheck(csvbkup,true);

      print("********** テスト終了：00007_setDefault_01 **********\n\n");
    });

    // ********************************************************
    // テスト00008 : setDefault
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    //         アプリ用フォルダに対象JSONファイルが存在し、任意の編集を施すこと。
    // 試験手順：①任意のプロパティの値を変更し、saveを実行する。
    //         ②setDefaultを実行する。
    // 期待結果：手順②実行後、assets/confにある対象JSONファイルの内容で上書きされること。
    //         （変更が取り消されていること）
    // ********************************************************
    test('00008_setDefault_02', () async {
      print("\n********** テスト実行：00008_setDefault_02 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②任意のプロパティの値を変更する。
      csvbkup.max_item.total_item = testData1;
      expect(csvbkup.max_item.total_item, testData1);

      // ③saveを実行する。
      await csvbkup.save();
      expect(csvbkup.max_item.total_item, testData1);

      // ④loadを実行する。
      await csvbkup.setDefault();

      // （デフォルト値と同じであること。）
      allPropatyCheck(csvbkup,true);

      print("********** テスト終了：00008_setDefault_02 **********\n\n");
    });

    // ********************************************************
    // テスト00009 : セクション/キー名称による設定（setValueWithName）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
    //         ②loadを実行する。
    // 期待結果：手順②実行後、手順①で設定したプロパティ変更後の内容で
    //         プロパティ値が設定されていること。
    // ********************************************************
    test('00009_setValueWithName_01', () async {
      print("\n********** テスト実行：00009_setValueWithName_01 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      await csvbkup.setValueWithName(section, key, testData1);

      // ②loadを実行する。
      await csvbkup.load();

      // 手順②実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(csvbkup.max_item.total_item == testData1, true);

      print("********** テスト終了：00009_setValueWithName_01 **********\n\n");
    });

    test('00010_setValueWithName_02', () async {
      print("\n********** テスト実行：00010_setValueWithName_02 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      final value = await csvbkup.setValueWithName("test_section", key, testData1);


      // 手順実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(value.result, false);
      expect(value.cause == json_result.element_not_found, true);

      print("********** テスト終了：00010_setValueWithName_02 **********\n\n");
    });

    test('00011_setValueWithName_03', () async {
      print("\n********** テスト実行：00011_setValueWithName_03 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      final value = await csvbkup.setValueWithName(section, "test_key", testData1);

      // 手順①実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(value.result, false);
      expect(value.cause == json_result.element_not_found, true);

      print("********** テスト終了：00011_setValueWithName_03 **********\n\n");
    });

    // ********************************************************
    // テスト00010 : セクション/キー名称による取得（getValueWithName）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティを変更する。
    //         ③saveを実行する。
    //         ④①で指定したプロパティに相当するセクション名、キー名にて
    //           getValueWithNameを実行する。
    // 期待結果：手順④で設定した値が手順②で設定した値と一致すること。
    // ********************************************************
    test('00012_getValueWithName_01', () async {
      print("\n********** テスト実行：00012_getValueWithName_01********** ");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②任意のプロパティを変更する。
      csvbkup.max_item.total_item = testData1;

      // ③saveを実行する。
      await csvbkup.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await csvbkup.getValueWithName(section, key);
      //print(testData.toString() + " == " + verify.value.toString());
      expect(testData1 == verify.value, true);

      print("********** テスト終了：00012_getValueWithName_01**********\n\n");
    });

    test('00013_getValueWithName_02', () async {
      print("\n********** テスト実行：00013_getValueWithName_02********** ");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②任意のプロパティを変更する。
      csvbkup.max_item.total_item = testData1;

      // ③saveを実行する。
      await csvbkup.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await csvbkup.getValueWithName("test_section", key);
      //print(testData.toString() + " == " + verify.value.toString());

      expect(verify.result, false);
      expect(verify.cause == json_result.element_not_found, true);

      print("********** テスト終了：00013_getValueWithName_02**********\n\n");
    });

    test('00014_getValueWithName_03', () async {
      print("\n********** テスト実行：00014_getValueWithName_03********** ");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②任意のプロパティを変更する。
      csvbkup.max_item.total_item = testData1;

      // ③saveを実行する。
      await csvbkup.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await csvbkup.getValueWithName(section, "test_key");
      //print(testData.toString() + " == " + verify.value.toString());

      expect(verify.result, false);
      expect(verify.cause == json_result.element_not_found, true);

      print("********** テスト終了：00014_getValueWithName_03**********\n\n");
    });

    // ********************************************************
    // テスト00015 : 任意フォルダ設定（_setAbsolutePath）
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティ値を変更し、テスト用フォルダにJSONのコピーを作成する。
    //         ②setDefaultを実行する。
    //         ③テスト用フォルダのパスを引数としてsetAbsolutePathを実行する。
    //         ④loadを実行する。
    // 期待結果：手順④実行後、プロパティ変更後の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00015:_setAbsolutePath_01', () async {
      print("\n********** テスト実行：00015_setAbsolutePath_01 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①任意のフォルダのパスを引数としてsetAbsolutePathを実行する。
      final appDir = Directory(EnvironmentData.TPRX_HOME);
      JsonPath().absolutePath = join(appDir.path, testDir);

      // ②loadを実行する。
      await csvbkup.load();

      // 手順②実行後に①で指定したパスに/assets/conf/当該JSONファイルが作成されていること。
      final String jsonPath = join(appDir.path, testDir, confPath, fileName);
      //print("存在確認先：" + jsonPath);
      final File file = File(jsonPath);
      expect(file.existsSync() == true , true);

      // ③任意のプロパティ値を変更する。
      csvbkup.max_item.total_item = testData1;
      expect(csvbkup.max_item.total_item, testData1);

      // ④saveを実行する。
      await csvbkup.save();

      // 手順④実行後、プロパティ変更後の内容でプロパティ値が設定されていること。
      expect(csvbkup.max_item.total_item, testData1);
      
      // アプリフォルダのパスを元に戻しておく（このテストだけの後処理）。
      JsonPath().absolutePath = join(appDir.path);

      print("********** テスト終了：00015_setAbsolutePath_01 **********\n\n");
    });

    // ********************************************************
    // テスト00016 : ファイル復元（_restoreJson：バックアップ作成中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    //         ④バックアップファイルを作成し、破損状態とする。
    //         ⑤loadを実行する。
    // 期待結果：手順③実行後、プロパティ変更前の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00016_restoreJson_01', () async {
      print("\n********** テスト実行：00016_restoreJson_01 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ②Jsonファイルの任意のプロパティの値を変更する。
      // ④バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern1, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern1);

      // ⑤loadを実行する。
      await csvbkup.load();

      // 手順⑤実行後、手順②で変更した内容でプロパティ値が設定されていること。
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData1, true);

      print("********** テスト終了：00016_restoreJson_01 **********\n\n");
    });

    // ********************************************************
    // テスト00017 : ファイル復元（_restoreJson：バックアップ作成直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    //         ④バックアップファイルを作成する。
    //         ⑤loadを実行する。
    // 期待結果：手順③実行後、プロパティ変更前の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('0017_restoreJson_02', () async {
      print("\n********** テスト実行：00017_restoreJson_02 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ②任意のプロパティの値を変更する。
      // ④バックアップファイルを作成する。
      await makeTestData(confPath, fileName, testFunc.makePattern2, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern2);

      // ⑤loadを実行する。
      await csvbkup.load();

      // 手順⑤実行後、手順②で変更した内容でプロパティ値が設定されていること。
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData2, true);

      print("********** テスト終了：00017_restoreJson_02 **********\n\n");
    });

    // ********************************************************
    // テスト00018 : ファイル復元（_restoreJson：JSON更新中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成する。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00018_restoreJson_03', () async {
      print("\n********** テスト実行：00018_restoreJson_03 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern3, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern3);

      // ③loadを実行する。
      await csvbkup.load();

      // 手順③実行後、①の内容ででプロパティ値が設定されていること。
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData1, true);

      print("********** テスト終了：00018_restoreJson_03 **********\n\n");
    });

    // ********************************************************
    // テスト00019 : ファイル復元（_restoreJson：JSON作成直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成する。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新する。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、②の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00019_restoreJson_04', () async {
      print("\n********** テスト実行：00019_restoreJson_04 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern4, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern4);

      // ③loadを実行する。
      await csvbkup.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData2, true);

      print("********** テスト終了：00019_restoreJson_04 **********\n\n");
    });

    // ********************************************************
    // テスト00020 : ファイル復元（_restoreJson：バックアップ削除中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更した内容でJSONファイルを更新する。
    //         ②バックアップファイルを作成し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00020_restoreJson_05', () async {
      print("\n********** テスト実行：00020_restoreJson_05 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern5, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern5);

      // ③loadを実行する。
      await csvbkup.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData1, true);

      print("********** テスト終了：00020_restoreJson_05 **********\n\n");
    });

    // ********************************************************
    // テスト00021 : ファイル復元（_restoreJson：バックアップ削除直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更する。
    //         ②①の内容でJSONファイルを更新する。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00021_restoreJson_06', () async {
      print("\n********** テスト実行：00021_restoreJson_06 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern6, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern6);

      // ③loadを実行する。
      await csvbkup.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData1, true);

      print("********** テスト終了：00021_restoreJson_06 **********\n\n");
    });

    // ********************************************************
    // テスト00022 : ファイル復元（_restoreJson：バックアップとJSON共に破損：バックアップが新しい日付）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ②バックアップファイルを作成し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：デフォルトの内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00022_restoreJson_07', () async {
      print("\n********** テスト実行：00022_restoreJson_07 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      // ②バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern7, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern7);

      // ③loadを実行する。
      await csvbkup.load();

      // デフォルトの内容でプロパティ値が設定されていること。
      print("check:" + csvbkup.max_item.total_item.toString());
      allPropatyCheck(csvbkup,true);

      print("********** テスト終了：00022_restoreJson_07 **********\n\n");
    });

    // ********************************************************
    // テスト00023 : ファイル復元（_restoreJson：バックアップとJSON共に破損：JSONが新しい日付）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成し、破損状態とする。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：デフォルトの内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00023_restoreJson_08', () async {
      print("\n********** テスト実行：00023_restoreJson_08 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      // ②バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern8, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern8);

      // ③loadを実行する。
      await csvbkup.load();

      // デフォルトの内容でプロパティ値が設定されていること。
      print("check:" + csvbkup.max_item.total_item.toString());
      allPropatyCheck(csvbkup,true);

      print("********** テスト終了：00023_restoreJson_08 **********\n\n");
    });

    // ********************************************************
    // テスト00020 : 言語切換（changeLanguage）
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    // 試験手順：①当該フォルダと同階層にex、cn、twのフォルダを作成する。
    //         ②任意のプロパティ値を変更し、①の各フォルダにJSONのコピーを作成する。
    //         ③changeLanguageを実行し、exフォルダに切り替える。
    //         ④loadを実行する。
    //         ⑤changeLanguageを実行し、cnフォルダに切り替える。
    //         ⑥loadを実行する。
    //         ⑦changeLanguageを実行し、twフォルダに切り替える。
    //         ⑧loadを実行する。
    // 期待結果：手順④、⑥、⑧実行後、手順①で作成したJSONファイルのプロパティ値を読み込むこと。
    // ********************************************************
    test('00020_changeLanguage', () async {
      print("\n********** テスト実行：00020_changeLanguage_01 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①当該フォルダと同階層にex、cn、twのフォルダを作成する。
      // ②任意のプロパティ値を変更し、①の各フォルダにJSONのコピーを作成する。
      await makeTestData(confPath, fileName, testFunc.makePattern9, section, key, testData1, testData2, testData3);
      await getTestDate(confPath, fileName, testFunc.getPattern9);

      // ③changeLanguageを実行し、exフォルダに切り替える。
      // ④loadを実行する。
      csvbkup.changeLanguage(JsonLanguage.ex);
      await csvbkup.load();
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData1, true);
      allPropatyCheck(csvbkup,false);
      // ⑤changeLanguageを実行し、cnフォルダに切り替える。
      // ⑥loadを実行する。
      csvbkup.changeLanguage(JsonLanguage.cn);
      await csvbkup.load();
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData2, true);
      allPropatyCheck(csvbkup,false);
      // ⑦changeLanguageを実行し、twフォルダに切り替える。
      // ⑧loadを実行する。
      csvbkup.changeLanguage(JsonLanguage.tw);
      await csvbkup.load();
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == testData3, true);
      allPropatyCheck(csvbkup,false);
      // ⑨changeLanguageを実行し、aaフォルダに切り替える。
      // ⑩loadを実行する。
      csvbkup.changeLanguage(JsonLanguage.aa);
      await csvbkup.load();
      print("check:" + csvbkup.max_item.total_item.toString());
      expect(csvbkup.max_item.total_item == defaultData, true);
      allPropatyCheck(csvbkup,false);

      print("********** テスト終了：00020_changeLanguage_01 **********\n\n");
    });

    // ********************************************************
    // テスト00025 ～ : 要素取得・設定
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    //         実行前にsetConfigを実行すること。
    // 試験手順：①loadを実行する。
    //         ②指定したプロパティの初期値を取得する。
    //         ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
    //         ④saveを実行後、loadを実行する。
    //         ⑤同じプロパティを読み込み、データに変化がないことを確認する。
    //         ⑥③～⑤を異なるテストデータで実施する。
    //         ⑦③～⑤を手順①で取得した初期値で実施する。
    //         ⑧全てのプロパティが初期値になっていることを確認する。
    // 期待結果：全プロパティ値を取得、設定できること。（１要素、1テストで実施する）
    // ********************************************************
     test('00025_element_check_00001', () async {
      print("\n********** テスト実行：00025_element_check_00001 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.max_item.total_item;
      print(csvbkup.max_item.total_item);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.max_item.total_item = testData1;
      print(csvbkup.max_item.total_item);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.max_item.total_item == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.max_item.total_item == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.max_item.total_item = testData2;
      print(csvbkup.max_item.total_item);
      expect(csvbkup.max_item.total_item == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.max_item.total_item == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.max_item.total_item = defalut;
      print(csvbkup.max_item.total_item);
      expect(csvbkup.max_item.total_item == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.max_item.total_item == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00025_element_check_00001 **********\n\n");
    });

    test('00026_element_check_00002', () async {
      print("\n********** テスト実行：00026_element_check_00002 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.page.total_page;
      print(csvbkup.page.total_page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.page.total_page = testData1;
      print(csvbkup.page.total_page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.page.total_page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.page.total_page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.page.total_page = testData2;
      print(csvbkup.page.total_page);
      expect(csvbkup.page.total_page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.total_page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.page.total_page = defalut;
      print(csvbkup.page.total_page);
      expect(csvbkup.page.total_page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.total_page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00026_element_check_00002 **********\n\n");
    });

    test('00027_element_check_00003', () async {
      print("\n********** テスト実行：00027_element_check_00003 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.page.onoff0;
      print(csvbkup.page.onoff0);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.page.onoff0 = testData1;
      print(csvbkup.page.onoff0);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.page.onoff0 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.page.onoff0 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.page.onoff0 = testData2;
      print(csvbkup.page.onoff0);
      expect(csvbkup.page.onoff0 == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff0 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.page.onoff0 = defalut;
      print(csvbkup.page.onoff0);
      expect(csvbkup.page.onoff0 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff0 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00027_element_check_00003 **********\n\n");
    });

    test('00028_element_check_00004', () async {
      print("\n********** テスト実行：00028_element_check_00004 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.page.onoff1;
      print(csvbkup.page.onoff1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.page.onoff1 = testData1;
      print(csvbkup.page.onoff1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.page.onoff1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.page.onoff1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.page.onoff1 = testData2;
      print(csvbkup.page.onoff1);
      expect(csvbkup.page.onoff1 == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.page.onoff1 = defalut;
      print(csvbkup.page.onoff1);
      expect(csvbkup.page.onoff1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00028_element_check_00004 **********\n\n");
    });

    test('00029_element_check_00005', () async {
      print("\n********** テスト実行：00029_element_check_00005 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.page.onoff2;
      print(csvbkup.page.onoff2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.page.onoff2 = testData1;
      print(csvbkup.page.onoff2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.page.onoff2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.page.onoff2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.page.onoff2 = testData2;
      print(csvbkup.page.onoff2);
      expect(csvbkup.page.onoff2 == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.page.onoff2 = defalut;
      print(csvbkup.page.onoff2);
      expect(csvbkup.page.onoff2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00029_element_check_00005 **********\n\n");
    });

    test('00030_element_check_00006', () async {
      print("\n********** テスト実行：00030_element_check_00006 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.page.onoff3;
      print(csvbkup.page.onoff3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.page.onoff3 = testData1;
      print(csvbkup.page.onoff3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.page.onoff3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.page.onoff3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.page.onoff3 = testData2;
      print(csvbkup.page.onoff3);
      expect(csvbkup.page.onoff3 == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.page.onoff3 = defalut;
      print(csvbkup.page.onoff3);
      expect(csvbkup.page.onoff3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00030_element_check_00006 **********\n\n");
    });

    test('00031_element_check_00007', () async {
      print("\n********** テスト実行：00031_element_check_00007 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.page.onoff4;
      print(csvbkup.page.onoff4);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.page.onoff4 = testData1;
      print(csvbkup.page.onoff4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.page.onoff4 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.page.onoff4 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.page.onoff4 = testData2;
      print(csvbkup.page.onoff4);
      expect(csvbkup.page.onoff4 == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff4 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.page.onoff4 = defalut;
      print(csvbkup.page.onoff4);
      expect(csvbkup.page.onoff4 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00031_element_check_00007 **********\n\n");
    });

    test('00032_element_check_00008', () async {
      print("\n********** テスト実行：00032_element_check_00008 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.page.onoff5;
      print(csvbkup.page.onoff5);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.page.onoff5 = testData1;
      print(csvbkup.page.onoff5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.page.onoff5 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.page.onoff5 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.page.onoff5 = testData2;
      print(csvbkup.page.onoff5);
      expect(csvbkup.page.onoff5 == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff5 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.page.onoff5 = defalut;
      print(csvbkup.page.onoff5);
      expect(csvbkup.page.onoff5 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00032_element_check_00008 **********\n\n");
    });

    test('00033_element_check_00009', () async {
      print("\n********** テスト実行：00033_element_check_00009 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.page.onoff6;
      print(csvbkup.page.onoff6);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.page.onoff6 = testData1;
      print(csvbkup.page.onoff6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.page.onoff6 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.page.onoff6 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.page.onoff6 = testData2;
      print(csvbkup.page.onoff6);
      expect(csvbkup.page.onoff6 == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff6 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.page.onoff6 = defalut;
      print(csvbkup.page.onoff6);
      expect(csvbkup.page.onoff6 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.page.onoff6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00033_element_check_00009 **********\n\n");
    });

    test('00034_element_check_00010', () async {
      print("\n********** テスト実行：00034_element_check_00010 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.onoff;
      print(csvbkup.item0.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.onoff = testData1;
      print(csvbkup.item0.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.onoff = testData2;
      print(csvbkup.item0.onoff);
      expect(csvbkup.item0.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.onoff = defalut;
      print(csvbkup.item0.onoff);
      expect(csvbkup.item0.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00034_element_check_00010 **********\n\n");
    });

    test('00035_element_check_00011', () async {
      print("\n********** テスト実行：00035_element_check_00011 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.page;
      print(csvbkup.item0.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.page = testData1;
      print(csvbkup.item0.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.page = testData2;
      print(csvbkup.item0.page);
      expect(csvbkup.item0.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.page = defalut;
      print(csvbkup.item0.page);
      expect(csvbkup.item0.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00035_element_check_00011 **********\n\n");
    });

    test('00036_element_check_00012', () async {
      print("\n********** テスト実行：00036_element_check_00012 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.position;
      print(csvbkup.item0.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.position = testData1;
      print(csvbkup.item0.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.position = testData2;
      print(csvbkup.item0.position);
      expect(csvbkup.item0.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.position = defalut;
      print(csvbkup.item0.position);
      expect(csvbkup.item0.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00036_element_check_00012 **********\n\n");
    });

    test('00037_element_check_00013', () async {
      print("\n********** テスト実行：00037_element_check_00013 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.table1;
      print(csvbkup.item0.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.table1 = testData1s;
      print(csvbkup.item0.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.table1 = testData2s;
      print(csvbkup.item0.table1);
      expect(csvbkup.item0.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.table1 = defalut;
      print(csvbkup.item0.table1);
      expect(csvbkup.item0.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00037_element_check_00013 **********\n\n");
    });

    test('00038_element_check_00014', () async {
      print("\n********** テスト実行：00038_element_check_00014 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.total;
      print(csvbkup.item0.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.total = testData1;
      print(csvbkup.item0.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.total = testData2;
      print(csvbkup.item0.total);
      expect(csvbkup.item0.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.total = defalut;
      print(csvbkup.item0.total);
      expect(csvbkup.item0.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00038_element_check_00014 **********\n\n");
    });

    test('00039_element_check_00015', () async {
      print("\n********** テスト実行：00039_element_check_00015 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.t_exe1;
      print(csvbkup.item0.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.t_exe1 = testData1s;
      print(csvbkup.item0.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.t_exe1 = testData2s;
      print(csvbkup.item0.t_exe1);
      expect(csvbkup.item0.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.t_exe1 = defalut;
      print(csvbkup.item0.t_exe1);
      expect(csvbkup.item0.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00039_element_check_00015 **********\n\n");
    });

    test('00040_element_check_00016', () async {
      print("\n********** テスト実行：00040_element_check_00016 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.t_exe2;
      print(csvbkup.item0.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.t_exe2 = testData1s;
      print(csvbkup.item0.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.t_exe2 = testData2s;
      print(csvbkup.item0.t_exe2);
      expect(csvbkup.item0.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.t_exe2 = defalut;
      print(csvbkup.item0.t_exe2);
      expect(csvbkup.item0.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00040_element_check_00016 **********\n\n");
    });

    test('00041_element_check_00017', () async {
      print("\n********** テスト実行：00041_element_check_00017 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.t_exe3;
      print(csvbkup.item0.t_exe3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.t_exe3 = testData1s;
      print(csvbkup.item0.t_exe3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.t_exe3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.t_exe3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.t_exe3 = testData2s;
      print(csvbkup.item0.t_exe3);
      expect(csvbkup.item0.t_exe3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.t_exe3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.t_exe3 = defalut;
      print(csvbkup.item0.t_exe3);
      expect(csvbkup.item0.t_exe3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.t_exe3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00041_element_check_00017 **********\n\n");
    });

    test('00042_element_check_00018', () async {
      print("\n********** テスト実行：00042_element_check_00018 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.t_exe4;
      print(csvbkup.item0.t_exe4);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.t_exe4 = testData1s;
      print(csvbkup.item0.t_exe4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.t_exe4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.t_exe4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.t_exe4 = testData2s;
      print(csvbkup.item0.t_exe4);
      expect(csvbkup.item0.t_exe4 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.t_exe4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.t_exe4 = defalut;
      print(csvbkup.item0.t_exe4);
      expect(csvbkup.item0.t_exe4 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.t_exe4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00042_element_check_00018 **********\n\n");
    });

    test('00043_element_check_00019', () async {
      print("\n********** テスト実行：00043_element_check_00019 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.section;
      print(csvbkup.item0.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.section = testData1s;
      print(csvbkup.item0.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.section = testData2s;
      print(csvbkup.item0.section);
      expect(csvbkup.item0.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.section = defalut;
      print(csvbkup.item0.section);
      expect(csvbkup.item0.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00043_element_check_00019 **********\n\n");
    });

    test('00044_element_check_00020', () async {
      print("\n********** テスト実行：00044_element_check_00020 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.keyword;
      print(csvbkup.item0.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.keyword = testData1s;
      print(csvbkup.item0.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.keyword = testData2s;
      print(csvbkup.item0.keyword);
      expect(csvbkup.item0.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.keyword = defalut;
      print(csvbkup.item0.keyword);
      expect(csvbkup.item0.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00044_element_check_00020 **********\n\n");
    });

    test('00045_element_check_00021', () async {
      print("\n********** テスト実行：00045_element_check_00021 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.keyword2;
      print(csvbkup.item0.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.keyword2 = testData1s;
      print(csvbkup.item0.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.keyword2 = testData2s;
      print(csvbkup.item0.keyword2);
      expect(csvbkup.item0.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.keyword2 = defalut;
      print(csvbkup.item0.keyword2);
      expect(csvbkup.item0.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00045_element_check_00021 **********\n\n");
    });

    test('00046_element_check_00022', () async {
      print("\n********** テスト実行：00046_element_check_00022 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.backup_day;
      print(csvbkup.item0.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.backup_day = testData1s;
      print(csvbkup.item0.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.backup_day = testData2s;
      print(csvbkup.item0.backup_day);
      expect(csvbkup.item0.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.backup_day = defalut;
      print(csvbkup.item0.backup_day);
      expect(csvbkup.item0.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00046_element_check_00022 **********\n\n");
    });

    test('00047_element_check_00023', () async {
      print("\n********** テスト実行：00047_element_check_00023 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item0.select_dsp;
      print(csvbkup.item0.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item0.select_dsp = testData1;
      print(csvbkup.item0.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item0.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item0.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item0.select_dsp = testData2;
      print(csvbkup.item0.select_dsp);
      expect(csvbkup.item0.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item0.select_dsp = defalut;
      print(csvbkup.item0.select_dsp);
      expect(csvbkup.item0.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item0.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00047_element_check_00023 **********\n\n");
    });

    test('00048_element_check_00024', () async {
      print("\n********** テスト実行：00048_element_check_00024 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.onoff;
      print(csvbkup.item1.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.onoff = testData1;
      print(csvbkup.item1.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.onoff = testData2;
      print(csvbkup.item1.onoff);
      expect(csvbkup.item1.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.onoff = defalut;
      print(csvbkup.item1.onoff);
      expect(csvbkup.item1.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00048_element_check_00024 **********\n\n");
    });

    test('00049_element_check_00025', () async {
      print("\n********** テスト実行：00049_element_check_00025 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.page;
      print(csvbkup.item1.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.page = testData1;
      print(csvbkup.item1.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.page = testData2;
      print(csvbkup.item1.page);
      expect(csvbkup.item1.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.page = defalut;
      print(csvbkup.item1.page);
      expect(csvbkup.item1.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00049_element_check_00025 **********\n\n");
    });

    test('00050_element_check_00026', () async {
      print("\n********** テスト実行：00050_element_check_00026 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.position;
      print(csvbkup.item1.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.position = testData1;
      print(csvbkup.item1.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.position = testData2;
      print(csvbkup.item1.position);
      expect(csvbkup.item1.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.position = defalut;
      print(csvbkup.item1.position);
      expect(csvbkup.item1.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00050_element_check_00026 **********\n\n");
    });

    test('00051_element_check_00027', () async {
      print("\n********** テスト実行：00051_element_check_00027 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.table1;
      print(csvbkup.item1.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.table1 = testData1s;
      print(csvbkup.item1.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.table1 = testData2s;
      print(csvbkup.item1.table1);
      expect(csvbkup.item1.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.table1 = defalut;
      print(csvbkup.item1.table1);
      expect(csvbkup.item1.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00051_element_check_00027 **********\n\n");
    });

    test('00052_element_check_00028', () async {
      print("\n********** テスト実行：00052_element_check_00028 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.total;
      print(csvbkup.item1.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.total = testData1;
      print(csvbkup.item1.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.total = testData2;
      print(csvbkup.item1.total);
      expect(csvbkup.item1.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.total = defalut;
      print(csvbkup.item1.total);
      expect(csvbkup.item1.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00052_element_check_00028 **********\n\n");
    });

    test('00053_element_check_00029', () async {
      print("\n********** テスト実行：00053_element_check_00029 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.t_exe1;
      print(csvbkup.item1.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.t_exe1 = testData1s;
      print(csvbkup.item1.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.t_exe1 = testData2s;
      print(csvbkup.item1.t_exe1);
      expect(csvbkup.item1.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.t_exe1 = defalut;
      print(csvbkup.item1.t_exe1);
      expect(csvbkup.item1.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00053_element_check_00029 **********\n\n");
    });

    test('00054_element_check_00030', () async {
      print("\n********** テスト実行：00054_element_check_00030 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.section;
      print(csvbkup.item1.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.section = testData1s;
      print(csvbkup.item1.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.section = testData2s;
      print(csvbkup.item1.section);
      expect(csvbkup.item1.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.section = defalut;
      print(csvbkup.item1.section);
      expect(csvbkup.item1.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00054_element_check_00030 **********\n\n");
    });

    test('00055_element_check_00031', () async {
      print("\n********** テスト実行：00055_element_check_00031 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.keyword;
      print(csvbkup.item1.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.keyword = testData1s;
      print(csvbkup.item1.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.keyword = testData2s;
      print(csvbkup.item1.keyword);
      expect(csvbkup.item1.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.keyword = defalut;
      print(csvbkup.item1.keyword);
      expect(csvbkup.item1.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00055_element_check_00031 **********\n\n");
    });

    test('00056_element_check_00032', () async {
      print("\n********** テスト実行：00056_element_check_00032 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.keyword2;
      print(csvbkup.item1.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.keyword2 = testData1s;
      print(csvbkup.item1.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.keyword2 = testData2s;
      print(csvbkup.item1.keyword2);
      expect(csvbkup.item1.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.keyword2 = defalut;
      print(csvbkup.item1.keyword2);
      expect(csvbkup.item1.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00056_element_check_00032 **********\n\n");
    });

    test('00057_element_check_00033', () async {
      print("\n********** テスト実行：00057_element_check_00033 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.backup_day;
      print(csvbkup.item1.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.backup_day = testData1s;
      print(csvbkup.item1.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.backup_day = testData2s;
      print(csvbkup.item1.backup_day);
      expect(csvbkup.item1.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.backup_day = defalut;
      print(csvbkup.item1.backup_day);
      expect(csvbkup.item1.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00057_element_check_00033 **********\n\n");
    });

    test('00058_element_check_00034', () async {
      print("\n********** テスト実行：00058_element_check_00034 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item1.select_dsp;
      print(csvbkup.item1.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item1.select_dsp = testData1;
      print(csvbkup.item1.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item1.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item1.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item1.select_dsp = testData2;
      print(csvbkup.item1.select_dsp);
      expect(csvbkup.item1.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item1.select_dsp = defalut;
      print(csvbkup.item1.select_dsp);
      expect(csvbkup.item1.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item1.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00058_element_check_00034 **********\n\n");
    });

    test('00059_element_check_00035', () async {
      print("\n********** テスト実行：00059_element_check_00035 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.onoff;
      print(csvbkup.item2.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.onoff = testData1;
      print(csvbkup.item2.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.onoff = testData2;
      print(csvbkup.item2.onoff);
      expect(csvbkup.item2.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.onoff = defalut;
      print(csvbkup.item2.onoff);
      expect(csvbkup.item2.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00059_element_check_00035 **********\n\n");
    });

    test('00060_element_check_00036', () async {
      print("\n********** テスト実行：00060_element_check_00036 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.page;
      print(csvbkup.item2.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.page = testData1;
      print(csvbkup.item2.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.page = testData2;
      print(csvbkup.item2.page);
      expect(csvbkup.item2.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.page = defalut;
      print(csvbkup.item2.page);
      expect(csvbkup.item2.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00060_element_check_00036 **********\n\n");
    });

    test('00061_element_check_00037', () async {
      print("\n********** テスト実行：00061_element_check_00037 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.position;
      print(csvbkup.item2.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.position = testData1;
      print(csvbkup.item2.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.position = testData2;
      print(csvbkup.item2.position);
      expect(csvbkup.item2.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.position = defalut;
      print(csvbkup.item2.position);
      expect(csvbkup.item2.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00061_element_check_00037 **********\n\n");
    });

    test('00062_element_check_00038', () async {
      print("\n********** テスト実行：00062_element_check_00038 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.table1;
      print(csvbkup.item2.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.table1 = testData1s;
      print(csvbkup.item2.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.table1 = testData2s;
      print(csvbkup.item2.table1);
      expect(csvbkup.item2.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.table1 = defalut;
      print(csvbkup.item2.table1);
      expect(csvbkup.item2.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00062_element_check_00038 **********\n\n");
    });

    test('00063_element_check_00039', () async {
      print("\n********** テスト実行：00063_element_check_00039 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.total;
      print(csvbkup.item2.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.total = testData1;
      print(csvbkup.item2.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.total = testData2;
      print(csvbkup.item2.total);
      expect(csvbkup.item2.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.total = defalut;
      print(csvbkup.item2.total);
      expect(csvbkup.item2.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00063_element_check_00039 **********\n\n");
    });

    test('00064_element_check_00040', () async {
      print("\n********** テスト実行：00064_element_check_00040 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.t_exe1;
      print(csvbkup.item2.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.t_exe1 = testData1s;
      print(csvbkup.item2.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.t_exe1 = testData2s;
      print(csvbkup.item2.t_exe1);
      expect(csvbkup.item2.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.t_exe1 = defalut;
      print(csvbkup.item2.t_exe1);
      expect(csvbkup.item2.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00064_element_check_00040 **********\n\n");
    });

    test('00065_element_check_00041', () async {
      print("\n********** テスト実行：00065_element_check_00041 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.section;
      print(csvbkup.item2.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.section = testData1s;
      print(csvbkup.item2.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.section = testData2s;
      print(csvbkup.item2.section);
      expect(csvbkup.item2.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.section = defalut;
      print(csvbkup.item2.section);
      expect(csvbkup.item2.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00065_element_check_00041 **********\n\n");
    });

    test('00066_element_check_00042', () async {
      print("\n********** テスト実行：00066_element_check_00042 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.keyword;
      print(csvbkup.item2.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.keyword = testData1s;
      print(csvbkup.item2.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.keyword = testData2s;
      print(csvbkup.item2.keyword);
      expect(csvbkup.item2.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.keyword = defalut;
      print(csvbkup.item2.keyword);
      expect(csvbkup.item2.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00066_element_check_00042 **********\n\n");
    });

    test('00067_element_check_00043', () async {
      print("\n********** テスト実行：00067_element_check_00043 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.keyword2;
      print(csvbkup.item2.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.keyword2 = testData1s;
      print(csvbkup.item2.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.keyword2 = testData2s;
      print(csvbkup.item2.keyword2);
      expect(csvbkup.item2.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.keyword2 = defalut;
      print(csvbkup.item2.keyword2);
      expect(csvbkup.item2.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00067_element_check_00043 **********\n\n");
    });

    test('00068_element_check_00044', () async {
      print("\n********** テスト実行：00068_element_check_00044 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.backup_day;
      print(csvbkup.item2.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.backup_day = testData1s;
      print(csvbkup.item2.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.backup_day = testData2s;
      print(csvbkup.item2.backup_day);
      expect(csvbkup.item2.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.backup_day = defalut;
      print(csvbkup.item2.backup_day);
      expect(csvbkup.item2.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00068_element_check_00044 **********\n\n");
    });

    test('00069_element_check_00045', () async {
      print("\n********** テスト実行：00069_element_check_00045 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item2.select_dsp;
      print(csvbkup.item2.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item2.select_dsp = testData1;
      print(csvbkup.item2.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item2.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item2.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item2.select_dsp = testData2;
      print(csvbkup.item2.select_dsp);
      expect(csvbkup.item2.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item2.select_dsp = defalut;
      print(csvbkup.item2.select_dsp);
      expect(csvbkup.item2.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item2.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00069_element_check_00045 **********\n\n");
    });

    test('00070_element_check_00046', () async {
      print("\n********** テスト実行：00070_element_check_00046 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.onoff;
      print(csvbkup.item3.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.onoff = testData1;
      print(csvbkup.item3.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.onoff = testData2;
      print(csvbkup.item3.onoff);
      expect(csvbkup.item3.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.onoff = defalut;
      print(csvbkup.item3.onoff);
      expect(csvbkup.item3.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00070_element_check_00046 **********\n\n");
    });

    test('00071_element_check_00047', () async {
      print("\n********** テスト実行：00071_element_check_00047 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.page;
      print(csvbkup.item3.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.page = testData1;
      print(csvbkup.item3.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.page = testData2;
      print(csvbkup.item3.page);
      expect(csvbkup.item3.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.page = defalut;
      print(csvbkup.item3.page);
      expect(csvbkup.item3.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00071_element_check_00047 **********\n\n");
    });

    test('00072_element_check_00048', () async {
      print("\n********** テスト実行：00072_element_check_00048 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.position;
      print(csvbkup.item3.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.position = testData1;
      print(csvbkup.item3.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.position = testData2;
      print(csvbkup.item3.position);
      expect(csvbkup.item3.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.position = defalut;
      print(csvbkup.item3.position);
      expect(csvbkup.item3.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00072_element_check_00048 **********\n\n");
    });

    test('00073_element_check_00049', () async {
      print("\n********** テスト実行：00073_element_check_00049 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.table1;
      print(csvbkup.item3.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.table1 = testData1s;
      print(csvbkup.item3.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.table1 = testData2s;
      print(csvbkup.item3.table1);
      expect(csvbkup.item3.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.table1 = defalut;
      print(csvbkup.item3.table1);
      expect(csvbkup.item3.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00073_element_check_00049 **********\n\n");
    });

    test('00074_element_check_00050', () async {
      print("\n********** テスト実行：00074_element_check_00050 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.total;
      print(csvbkup.item3.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.total = testData1;
      print(csvbkup.item3.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.total = testData2;
      print(csvbkup.item3.total);
      expect(csvbkup.item3.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.total = defalut;
      print(csvbkup.item3.total);
      expect(csvbkup.item3.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00074_element_check_00050 **********\n\n");
    });

    test('00075_element_check_00051', () async {
      print("\n********** テスト実行：00075_element_check_00051 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.t_exe1;
      print(csvbkup.item3.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.t_exe1 = testData1s;
      print(csvbkup.item3.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.t_exe1 = testData2s;
      print(csvbkup.item3.t_exe1);
      expect(csvbkup.item3.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.t_exe1 = defalut;
      print(csvbkup.item3.t_exe1);
      expect(csvbkup.item3.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00075_element_check_00051 **********\n\n");
    });

    test('00076_element_check_00052', () async {
      print("\n********** テスト実行：00076_element_check_00052 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.section;
      print(csvbkup.item3.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.section = testData1s;
      print(csvbkup.item3.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.section = testData2s;
      print(csvbkup.item3.section);
      expect(csvbkup.item3.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.section = defalut;
      print(csvbkup.item3.section);
      expect(csvbkup.item3.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00076_element_check_00052 **********\n\n");
    });

    test('00077_element_check_00053', () async {
      print("\n********** テスト実行：00077_element_check_00053 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.keyword;
      print(csvbkup.item3.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.keyword = testData1s;
      print(csvbkup.item3.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.keyword = testData2s;
      print(csvbkup.item3.keyword);
      expect(csvbkup.item3.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.keyword = defalut;
      print(csvbkup.item3.keyword);
      expect(csvbkup.item3.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00077_element_check_00053 **********\n\n");
    });

    test('00078_element_check_00054', () async {
      print("\n********** テスト実行：00078_element_check_00054 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.keyword2;
      print(csvbkup.item3.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.keyword2 = testData1s;
      print(csvbkup.item3.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.keyword2 = testData2s;
      print(csvbkup.item3.keyword2);
      expect(csvbkup.item3.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.keyword2 = defalut;
      print(csvbkup.item3.keyword2);
      expect(csvbkup.item3.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00078_element_check_00054 **********\n\n");
    });

    test('00079_element_check_00055', () async {
      print("\n********** テスト実行：00079_element_check_00055 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.backup_day;
      print(csvbkup.item3.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.backup_day = testData1s;
      print(csvbkup.item3.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.backup_day = testData2s;
      print(csvbkup.item3.backup_day);
      expect(csvbkup.item3.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.backup_day = defalut;
      print(csvbkup.item3.backup_day);
      expect(csvbkup.item3.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00079_element_check_00055 **********\n\n");
    });

    test('00080_element_check_00056', () async {
      print("\n********** テスト実行：00080_element_check_00056 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item3.select_dsp;
      print(csvbkup.item3.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item3.select_dsp = testData1;
      print(csvbkup.item3.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item3.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item3.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item3.select_dsp = testData2;
      print(csvbkup.item3.select_dsp);
      expect(csvbkup.item3.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item3.select_dsp = defalut;
      print(csvbkup.item3.select_dsp);
      expect(csvbkup.item3.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item3.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00080_element_check_00056 **********\n\n");
    });

    test('00081_element_check_00057', () async {
      print("\n********** テスト実行：00081_element_check_00057 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.onoff;
      print(csvbkup.item4.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.onoff = testData1;
      print(csvbkup.item4.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.onoff = testData2;
      print(csvbkup.item4.onoff);
      expect(csvbkup.item4.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.onoff = defalut;
      print(csvbkup.item4.onoff);
      expect(csvbkup.item4.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00081_element_check_00057 **********\n\n");
    });

    test('00082_element_check_00058', () async {
      print("\n********** テスト実行：00082_element_check_00058 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.page;
      print(csvbkup.item4.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.page = testData1;
      print(csvbkup.item4.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.page = testData2;
      print(csvbkup.item4.page);
      expect(csvbkup.item4.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.page = defalut;
      print(csvbkup.item4.page);
      expect(csvbkup.item4.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00082_element_check_00058 **********\n\n");
    });

    test('00083_element_check_00059', () async {
      print("\n********** テスト実行：00083_element_check_00059 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.position;
      print(csvbkup.item4.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.position = testData1;
      print(csvbkup.item4.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.position = testData2;
      print(csvbkup.item4.position);
      expect(csvbkup.item4.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.position = defalut;
      print(csvbkup.item4.position);
      expect(csvbkup.item4.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00083_element_check_00059 **********\n\n");
    });

    test('00084_element_check_00060', () async {
      print("\n********** テスト実行：00084_element_check_00060 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.table1;
      print(csvbkup.item4.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.table1 = testData1s;
      print(csvbkup.item4.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.table1 = testData2s;
      print(csvbkup.item4.table1);
      expect(csvbkup.item4.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.table1 = defalut;
      print(csvbkup.item4.table1);
      expect(csvbkup.item4.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00084_element_check_00060 **********\n\n");
    });

    test('00085_element_check_00061', () async {
      print("\n********** テスト実行：00085_element_check_00061 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.total;
      print(csvbkup.item4.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.total = testData1;
      print(csvbkup.item4.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.total = testData2;
      print(csvbkup.item4.total);
      expect(csvbkup.item4.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.total = defalut;
      print(csvbkup.item4.total);
      expect(csvbkup.item4.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00085_element_check_00061 **********\n\n");
    });

    test('00086_element_check_00062', () async {
      print("\n********** テスト実行：00086_element_check_00062 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.t_exe1;
      print(csvbkup.item4.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.t_exe1 = testData1s;
      print(csvbkup.item4.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.t_exe1 = testData2s;
      print(csvbkup.item4.t_exe1);
      expect(csvbkup.item4.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.t_exe1 = defalut;
      print(csvbkup.item4.t_exe1);
      expect(csvbkup.item4.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00086_element_check_00062 **********\n\n");
    });

    test('00087_element_check_00063', () async {
      print("\n********** テスト実行：00087_element_check_00063 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.section;
      print(csvbkup.item4.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.section = testData1s;
      print(csvbkup.item4.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.section = testData2s;
      print(csvbkup.item4.section);
      expect(csvbkup.item4.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.section = defalut;
      print(csvbkup.item4.section);
      expect(csvbkup.item4.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00087_element_check_00063 **********\n\n");
    });

    test('00088_element_check_00064', () async {
      print("\n********** テスト実行：00088_element_check_00064 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.keyword;
      print(csvbkup.item4.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.keyword = testData1s;
      print(csvbkup.item4.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.keyword = testData2s;
      print(csvbkup.item4.keyword);
      expect(csvbkup.item4.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.keyword = defalut;
      print(csvbkup.item4.keyword);
      expect(csvbkup.item4.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00088_element_check_00064 **********\n\n");
    });

    test('00089_element_check_00065', () async {
      print("\n********** テスト実行：00089_element_check_00065 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.keyword2;
      print(csvbkup.item4.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.keyword2 = testData1s;
      print(csvbkup.item4.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.keyword2 = testData2s;
      print(csvbkup.item4.keyword2);
      expect(csvbkup.item4.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.keyword2 = defalut;
      print(csvbkup.item4.keyword2);
      expect(csvbkup.item4.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00089_element_check_00065 **********\n\n");
    });

    test('00090_element_check_00066', () async {
      print("\n********** テスト実行：00090_element_check_00066 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.backup_day;
      print(csvbkup.item4.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.backup_day = testData1s;
      print(csvbkup.item4.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.backup_day = testData2s;
      print(csvbkup.item4.backup_day);
      expect(csvbkup.item4.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.backup_day = defalut;
      print(csvbkup.item4.backup_day);
      expect(csvbkup.item4.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00090_element_check_00066 **********\n\n");
    });

    test('00091_element_check_00067', () async {
      print("\n********** テスト実行：00091_element_check_00067 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item4.select_dsp;
      print(csvbkup.item4.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item4.select_dsp = testData1;
      print(csvbkup.item4.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item4.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item4.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item4.select_dsp = testData2;
      print(csvbkup.item4.select_dsp);
      expect(csvbkup.item4.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item4.select_dsp = defalut;
      print(csvbkup.item4.select_dsp);
      expect(csvbkup.item4.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item4.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00091_element_check_00067 **********\n\n");
    });

    test('00092_element_check_00068', () async {
      print("\n********** テスト実行：00092_element_check_00068 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.onoff;
      print(csvbkup.item5.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.onoff = testData1;
      print(csvbkup.item5.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.onoff = testData2;
      print(csvbkup.item5.onoff);
      expect(csvbkup.item5.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.onoff = defalut;
      print(csvbkup.item5.onoff);
      expect(csvbkup.item5.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00092_element_check_00068 **********\n\n");
    });

    test('00093_element_check_00069', () async {
      print("\n********** テスト実行：00093_element_check_00069 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.page;
      print(csvbkup.item5.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.page = testData1;
      print(csvbkup.item5.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.page = testData2;
      print(csvbkup.item5.page);
      expect(csvbkup.item5.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.page = defalut;
      print(csvbkup.item5.page);
      expect(csvbkup.item5.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00093_element_check_00069 **********\n\n");
    });

    test('00094_element_check_00070', () async {
      print("\n********** テスト実行：00094_element_check_00070 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.position;
      print(csvbkup.item5.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.position = testData1;
      print(csvbkup.item5.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.position = testData2;
      print(csvbkup.item5.position);
      expect(csvbkup.item5.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.position = defalut;
      print(csvbkup.item5.position);
      expect(csvbkup.item5.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00094_element_check_00070 **********\n\n");
    });

    test('00095_element_check_00071', () async {
      print("\n********** テスト実行：00095_element_check_00071 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.table1;
      print(csvbkup.item5.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.table1 = testData1s;
      print(csvbkup.item5.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.table1 = testData2s;
      print(csvbkup.item5.table1);
      expect(csvbkup.item5.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.table1 = defalut;
      print(csvbkup.item5.table1);
      expect(csvbkup.item5.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00095_element_check_00071 **********\n\n");
    });

    test('00096_element_check_00072', () async {
      print("\n********** テスト実行：00096_element_check_00072 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.total;
      print(csvbkup.item5.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.total = testData1;
      print(csvbkup.item5.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.total = testData2;
      print(csvbkup.item5.total);
      expect(csvbkup.item5.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.total = defalut;
      print(csvbkup.item5.total);
      expect(csvbkup.item5.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00096_element_check_00072 **********\n\n");
    });

    test('00097_element_check_00073', () async {
      print("\n********** テスト実行：00097_element_check_00073 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.t_exe1;
      print(csvbkup.item5.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.t_exe1 = testData1s;
      print(csvbkup.item5.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.t_exe1 = testData2s;
      print(csvbkup.item5.t_exe1);
      expect(csvbkup.item5.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.t_exe1 = defalut;
      print(csvbkup.item5.t_exe1);
      expect(csvbkup.item5.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00097_element_check_00073 **********\n\n");
    });

    test('00098_element_check_00074', () async {
      print("\n********** テスト実行：00098_element_check_00074 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.section;
      print(csvbkup.item5.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.section = testData1s;
      print(csvbkup.item5.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.section = testData2s;
      print(csvbkup.item5.section);
      expect(csvbkup.item5.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.section = defalut;
      print(csvbkup.item5.section);
      expect(csvbkup.item5.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00098_element_check_00074 **********\n\n");
    });

    test('00099_element_check_00075', () async {
      print("\n********** テスト実行：00099_element_check_00075 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.keyword;
      print(csvbkup.item5.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.keyword = testData1s;
      print(csvbkup.item5.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.keyword = testData2s;
      print(csvbkup.item5.keyword);
      expect(csvbkup.item5.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.keyword = defalut;
      print(csvbkup.item5.keyword);
      expect(csvbkup.item5.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00099_element_check_00075 **********\n\n");
    });

    test('00100_element_check_00076', () async {
      print("\n********** テスト実行：00100_element_check_00076 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.keyword2;
      print(csvbkup.item5.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.keyword2 = testData1s;
      print(csvbkup.item5.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.keyword2 = testData2s;
      print(csvbkup.item5.keyword2);
      expect(csvbkup.item5.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.keyword2 = defalut;
      print(csvbkup.item5.keyword2);
      expect(csvbkup.item5.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00100_element_check_00076 **********\n\n");
    });

    test('00101_element_check_00077', () async {
      print("\n********** テスト実行：00101_element_check_00077 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.backup_day;
      print(csvbkup.item5.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.backup_day = testData1s;
      print(csvbkup.item5.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.backup_day = testData2s;
      print(csvbkup.item5.backup_day);
      expect(csvbkup.item5.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.backup_day = defalut;
      print(csvbkup.item5.backup_day);
      expect(csvbkup.item5.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00101_element_check_00077 **********\n\n");
    });

    test('00102_element_check_00078', () async {
      print("\n********** テスト実行：00102_element_check_00078 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item5.select_dsp;
      print(csvbkup.item5.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item5.select_dsp = testData1;
      print(csvbkup.item5.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item5.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item5.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item5.select_dsp = testData2;
      print(csvbkup.item5.select_dsp);
      expect(csvbkup.item5.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item5.select_dsp = defalut;
      print(csvbkup.item5.select_dsp);
      expect(csvbkup.item5.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item5.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00102_element_check_00078 **********\n\n");
    });

    test('00103_element_check_00079', () async {
      print("\n********** テスト実行：00103_element_check_00079 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.onoff;
      print(csvbkup.item6.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.onoff = testData1;
      print(csvbkup.item6.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.onoff = testData2;
      print(csvbkup.item6.onoff);
      expect(csvbkup.item6.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.onoff = defalut;
      print(csvbkup.item6.onoff);
      expect(csvbkup.item6.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00103_element_check_00079 **********\n\n");
    });

    test('00104_element_check_00080', () async {
      print("\n********** テスト実行：00104_element_check_00080 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.page;
      print(csvbkup.item6.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.page = testData1;
      print(csvbkup.item6.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.page = testData2;
      print(csvbkup.item6.page);
      expect(csvbkup.item6.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.page = defalut;
      print(csvbkup.item6.page);
      expect(csvbkup.item6.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00104_element_check_00080 **********\n\n");
    });

    test('00105_element_check_00081', () async {
      print("\n********** テスト実行：00105_element_check_00081 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.position;
      print(csvbkup.item6.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.position = testData1;
      print(csvbkup.item6.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.position = testData2;
      print(csvbkup.item6.position);
      expect(csvbkup.item6.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.position = defalut;
      print(csvbkup.item6.position);
      expect(csvbkup.item6.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00105_element_check_00081 **********\n\n");
    });

    test('00106_element_check_00082', () async {
      print("\n********** テスト実行：00106_element_check_00082 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.table1;
      print(csvbkup.item6.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.table1 = testData1s;
      print(csvbkup.item6.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.table1 = testData2s;
      print(csvbkup.item6.table1);
      expect(csvbkup.item6.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.table1 = defalut;
      print(csvbkup.item6.table1);
      expect(csvbkup.item6.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00106_element_check_00082 **********\n\n");
    });

    test('00107_element_check_00083', () async {
      print("\n********** テスト実行：00107_element_check_00083 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.total;
      print(csvbkup.item6.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.total = testData1;
      print(csvbkup.item6.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.total = testData2;
      print(csvbkup.item6.total);
      expect(csvbkup.item6.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.total = defalut;
      print(csvbkup.item6.total);
      expect(csvbkup.item6.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00107_element_check_00083 **********\n\n");
    });

    test('00108_element_check_00084', () async {
      print("\n********** テスト実行：00108_element_check_00084 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.t_exe1;
      print(csvbkup.item6.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.t_exe1 = testData1s;
      print(csvbkup.item6.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.t_exe1 = testData2s;
      print(csvbkup.item6.t_exe1);
      expect(csvbkup.item6.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.t_exe1 = defalut;
      print(csvbkup.item6.t_exe1);
      expect(csvbkup.item6.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00108_element_check_00084 **********\n\n");
    });

    test('00109_element_check_00085', () async {
      print("\n********** テスト実行：00109_element_check_00085 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.section;
      print(csvbkup.item6.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.section = testData1s;
      print(csvbkup.item6.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.section = testData2s;
      print(csvbkup.item6.section);
      expect(csvbkup.item6.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.section = defalut;
      print(csvbkup.item6.section);
      expect(csvbkup.item6.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00109_element_check_00085 **********\n\n");
    });

    test('00110_element_check_00086', () async {
      print("\n********** テスト実行：00110_element_check_00086 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.keyword;
      print(csvbkup.item6.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.keyword = testData1s;
      print(csvbkup.item6.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.keyword = testData2s;
      print(csvbkup.item6.keyword);
      expect(csvbkup.item6.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.keyword = defalut;
      print(csvbkup.item6.keyword);
      expect(csvbkup.item6.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00110_element_check_00086 **********\n\n");
    });

    test('00111_element_check_00087', () async {
      print("\n********** テスト実行：00111_element_check_00087 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.keyword2;
      print(csvbkup.item6.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.keyword2 = testData1s;
      print(csvbkup.item6.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.keyword2 = testData2s;
      print(csvbkup.item6.keyword2);
      expect(csvbkup.item6.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.keyword2 = defalut;
      print(csvbkup.item6.keyword2);
      expect(csvbkup.item6.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00111_element_check_00087 **********\n\n");
    });

    test('00112_element_check_00088', () async {
      print("\n********** テスト実行：00112_element_check_00088 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.backup_day;
      print(csvbkup.item6.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.backup_day = testData1s;
      print(csvbkup.item6.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.backup_day = testData2s;
      print(csvbkup.item6.backup_day);
      expect(csvbkup.item6.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.backup_day = defalut;
      print(csvbkup.item6.backup_day);
      expect(csvbkup.item6.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00112_element_check_00088 **********\n\n");
    });

    test('00113_element_check_00089', () async {
      print("\n********** テスト実行：00113_element_check_00089 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item6.select_dsp;
      print(csvbkup.item6.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item6.select_dsp = testData1;
      print(csvbkup.item6.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item6.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item6.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item6.select_dsp = testData2;
      print(csvbkup.item6.select_dsp);
      expect(csvbkup.item6.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item6.select_dsp = defalut;
      print(csvbkup.item6.select_dsp);
      expect(csvbkup.item6.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item6.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00113_element_check_00089 **********\n\n");
    });

    test('00114_element_check_00090', () async {
      print("\n********** テスト実行：00114_element_check_00090 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.onoff;
      print(csvbkup.item7.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.onoff = testData1;
      print(csvbkup.item7.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.onoff = testData2;
      print(csvbkup.item7.onoff);
      expect(csvbkup.item7.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.onoff = defalut;
      print(csvbkup.item7.onoff);
      expect(csvbkup.item7.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00114_element_check_00090 **********\n\n");
    });

    test('00115_element_check_00091', () async {
      print("\n********** テスト実行：00115_element_check_00091 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.page;
      print(csvbkup.item7.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.page = testData1;
      print(csvbkup.item7.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.page = testData2;
      print(csvbkup.item7.page);
      expect(csvbkup.item7.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.page = defalut;
      print(csvbkup.item7.page);
      expect(csvbkup.item7.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00115_element_check_00091 **********\n\n");
    });

    test('00116_element_check_00092', () async {
      print("\n********** テスト実行：00116_element_check_00092 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.position;
      print(csvbkup.item7.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.position = testData1;
      print(csvbkup.item7.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.position = testData2;
      print(csvbkup.item7.position);
      expect(csvbkup.item7.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.position = defalut;
      print(csvbkup.item7.position);
      expect(csvbkup.item7.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00116_element_check_00092 **********\n\n");
    });

    test('00117_element_check_00093', () async {
      print("\n********** テスト実行：00117_element_check_00093 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.table1;
      print(csvbkup.item7.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.table1 = testData1s;
      print(csvbkup.item7.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.table1 = testData2s;
      print(csvbkup.item7.table1);
      expect(csvbkup.item7.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.table1 = defalut;
      print(csvbkup.item7.table1);
      expect(csvbkup.item7.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00117_element_check_00093 **********\n\n");
    });

    test('00118_element_check_00094', () async {
      print("\n********** テスト実行：00118_element_check_00094 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.total;
      print(csvbkup.item7.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.total = testData1;
      print(csvbkup.item7.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.total = testData2;
      print(csvbkup.item7.total);
      expect(csvbkup.item7.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.total = defalut;
      print(csvbkup.item7.total);
      expect(csvbkup.item7.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00118_element_check_00094 **********\n\n");
    });

    test('00119_element_check_00095', () async {
      print("\n********** テスト実行：00119_element_check_00095 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.t_exe1;
      print(csvbkup.item7.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.t_exe1 = testData1s;
      print(csvbkup.item7.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.t_exe1 = testData2s;
      print(csvbkup.item7.t_exe1);
      expect(csvbkup.item7.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.t_exe1 = defalut;
      print(csvbkup.item7.t_exe1);
      expect(csvbkup.item7.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00119_element_check_00095 **********\n\n");
    });

    test('00120_element_check_00096', () async {
      print("\n********** テスト実行：00120_element_check_00096 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.section;
      print(csvbkup.item7.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.section = testData1s;
      print(csvbkup.item7.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.section = testData2s;
      print(csvbkup.item7.section);
      expect(csvbkup.item7.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.section = defalut;
      print(csvbkup.item7.section);
      expect(csvbkup.item7.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00120_element_check_00096 **********\n\n");
    });

    test('00121_element_check_00097', () async {
      print("\n********** テスト実行：00121_element_check_00097 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.keyword;
      print(csvbkup.item7.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.keyword = testData1s;
      print(csvbkup.item7.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.keyword = testData2s;
      print(csvbkup.item7.keyword);
      expect(csvbkup.item7.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.keyword = defalut;
      print(csvbkup.item7.keyword);
      expect(csvbkup.item7.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00121_element_check_00097 **********\n\n");
    });

    test('00122_element_check_00098', () async {
      print("\n********** テスト実行：00122_element_check_00098 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.keyword2;
      print(csvbkup.item7.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.keyword2 = testData1s;
      print(csvbkup.item7.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.keyword2 = testData2s;
      print(csvbkup.item7.keyword2);
      expect(csvbkup.item7.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.keyword2 = defalut;
      print(csvbkup.item7.keyword2);
      expect(csvbkup.item7.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00122_element_check_00098 **********\n\n");
    });

    test('00123_element_check_00099', () async {
      print("\n********** テスト実行：00123_element_check_00099 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.backup_day;
      print(csvbkup.item7.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.backup_day = testData1s;
      print(csvbkup.item7.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.backup_day = testData2s;
      print(csvbkup.item7.backup_day);
      expect(csvbkup.item7.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.backup_day = defalut;
      print(csvbkup.item7.backup_day);
      expect(csvbkup.item7.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00123_element_check_00099 **********\n\n");
    });

    test('00124_element_check_00100', () async {
      print("\n********** テスト実行：00124_element_check_00100 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item7.select_dsp;
      print(csvbkup.item7.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item7.select_dsp = testData1;
      print(csvbkup.item7.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item7.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item7.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item7.select_dsp = testData2;
      print(csvbkup.item7.select_dsp);
      expect(csvbkup.item7.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item7.select_dsp = defalut;
      print(csvbkup.item7.select_dsp);
      expect(csvbkup.item7.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item7.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00124_element_check_00100 **********\n\n");
    });

    test('00125_element_check_00101', () async {
      print("\n********** テスト実行：00125_element_check_00101 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.onoff;
      print(csvbkup.item8.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.onoff = testData1;
      print(csvbkup.item8.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.onoff = testData2;
      print(csvbkup.item8.onoff);
      expect(csvbkup.item8.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.onoff = defalut;
      print(csvbkup.item8.onoff);
      expect(csvbkup.item8.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00125_element_check_00101 **********\n\n");
    });

    test('00126_element_check_00102', () async {
      print("\n********** テスト実行：00126_element_check_00102 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.page;
      print(csvbkup.item8.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.page = testData1;
      print(csvbkup.item8.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.page = testData2;
      print(csvbkup.item8.page);
      expect(csvbkup.item8.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.page = defalut;
      print(csvbkup.item8.page);
      expect(csvbkup.item8.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00126_element_check_00102 **********\n\n");
    });

    test('00127_element_check_00103', () async {
      print("\n********** テスト実行：00127_element_check_00103 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.position;
      print(csvbkup.item8.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.position = testData1;
      print(csvbkup.item8.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.position = testData2;
      print(csvbkup.item8.position);
      expect(csvbkup.item8.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.position = defalut;
      print(csvbkup.item8.position);
      expect(csvbkup.item8.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00127_element_check_00103 **********\n\n");
    });

    test('00128_element_check_00104', () async {
      print("\n********** テスト実行：00128_element_check_00104 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.table1;
      print(csvbkup.item8.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.table1 = testData1s;
      print(csvbkup.item8.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.table1 = testData2s;
      print(csvbkup.item8.table1);
      expect(csvbkup.item8.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.table1 = defalut;
      print(csvbkup.item8.table1);
      expect(csvbkup.item8.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00128_element_check_00104 **********\n\n");
    });

    test('00129_element_check_00105', () async {
      print("\n********** テスト実行：00129_element_check_00105 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.total;
      print(csvbkup.item8.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.total = testData1;
      print(csvbkup.item8.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.total = testData2;
      print(csvbkup.item8.total);
      expect(csvbkup.item8.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.total = defalut;
      print(csvbkup.item8.total);
      expect(csvbkup.item8.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00129_element_check_00105 **********\n\n");
    });

    test('00130_element_check_00106', () async {
      print("\n********** テスト実行：00130_element_check_00106 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.t_exe1;
      print(csvbkup.item8.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.t_exe1 = testData1s;
      print(csvbkup.item8.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.t_exe1 = testData2s;
      print(csvbkup.item8.t_exe1);
      expect(csvbkup.item8.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.t_exe1 = defalut;
      print(csvbkup.item8.t_exe1);
      expect(csvbkup.item8.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00130_element_check_00106 **********\n\n");
    });

    test('00131_element_check_00107', () async {
      print("\n********** テスト実行：00131_element_check_00107 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.section;
      print(csvbkup.item8.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.section = testData1s;
      print(csvbkup.item8.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.section = testData2s;
      print(csvbkup.item8.section);
      expect(csvbkup.item8.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.section = defalut;
      print(csvbkup.item8.section);
      expect(csvbkup.item8.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00131_element_check_00107 **********\n\n");
    });

    test('00132_element_check_00108', () async {
      print("\n********** テスト実行：00132_element_check_00108 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.keyword;
      print(csvbkup.item8.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.keyword = testData1s;
      print(csvbkup.item8.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.keyword = testData2s;
      print(csvbkup.item8.keyword);
      expect(csvbkup.item8.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.keyword = defalut;
      print(csvbkup.item8.keyword);
      expect(csvbkup.item8.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00132_element_check_00108 **********\n\n");
    });

    test('00133_element_check_00109', () async {
      print("\n********** テスト実行：00133_element_check_00109 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.keyword2;
      print(csvbkup.item8.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.keyword2 = testData1s;
      print(csvbkup.item8.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.keyword2 = testData2s;
      print(csvbkup.item8.keyword2);
      expect(csvbkup.item8.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.keyword2 = defalut;
      print(csvbkup.item8.keyword2);
      expect(csvbkup.item8.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00133_element_check_00109 **********\n\n");
    });

    test('00134_element_check_00110', () async {
      print("\n********** テスト実行：00134_element_check_00110 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.backup_day;
      print(csvbkup.item8.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.backup_day = testData1s;
      print(csvbkup.item8.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.backup_day = testData2s;
      print(csvbkup.item8.backup_day);
      expect(csvbkup.item8.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.backup_day = defalut;
      print(csvbkup.item8.backup_day);
      expect(csvbkup.item8.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00134_element_check_00110 **********\n\n");
    });

    test('00135_element_check_00111', () async {
      print("\n********** テスト実行：00135_element_check_00111 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item8.select_dsp;
      print(csvbkup.item8.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item8.select_dsp = testData1;
      print(csvbkup.item8.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item8.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item8.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item8.select_dsp = testData2;
      print(csvbkup.item8.select_dsp);
      expect(csvbkup.item8.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item8.select_dsp = defalut;
      print(csvbkup.item8.select_dsp);
      expect(csvbkup.item8.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item8.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00135_element_check_00111 **********\n\n");
    });

    test('00136_element_check_00112', () async {
      print("\n********** テスト実行：00136_element_check_00112 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.onoff;
      print(csvbkup.item9.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.onoff = testData1;
      print(csvbkup.item9.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.onoff = testData2;
      print(csvbkup.item9.onoff);
      expect(csvbkup.item9.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.onoff = defalut;
      print(csvbkup.item9.onoff);
      expect(csvbkup.item9.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00136_element_check_00112 **********\n\n");
    });

    test('00137_element_check_00113', () async {
      print("\n********** テスト実行：00137_element_check_00113 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.page;
      print(csvbkup.item9.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.page = testData1;
      print(csvbkup.item9.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.page = testData2;
      print(csvbkup.item9.page);
      expect(csvbkup.item9.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.page = defalut;
      print(csvbkup.item9.page);
      expect(csvbkup.item9.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00137_element_check_00113 **********\n\n");
    });

    test('00138_element_check_00114', () async {
      print("\n********** テスト実行：00138_element_check_00114 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.position;
      print(csvbkup.item9.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.position = testData1;
      print(csvbkup.item9.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.position = testData2;
      print(csvbkup.item9.position);
      expect(csvbkup.item9.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.position = defalut;
      print(csvbkup.item9.position);
      expect(csvbkup.item9.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00138_element_check_00114 **********\n\n");
    });

    test('00139_element_check_00115', () async {
      print("\n********** テスト実行：00139_element_check_00115 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.table1;
      print(csvbkup.item9.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.table1 = testData1s;
      print(csvbkup.item9.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.table1 = testData2s;
      print(csvbkup.item9.table1);
      expect(csvbkup.item9.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.table1 = defalut;
      print(csvbkup.item9.table1);
      expect(csvbkup.item9.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00139_element_check_00115 **********\n\n");
    });

    test('00140_element_check_00116', () async {
      print("\n********** テスト実行：00140_element_check_00116 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.total;
      print(csvbkup.item9.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.total = testData1;
      print(csvbkup.item9.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.total = testData2;
      print(csvbkup.item9.total);
      expect(csvbkup.item9.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.total = defalut;
      print(csvbkup.item9.total);
      expect(csvbkup.item9.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00140_element_check_00116 **********\n\n");
    });

    test('00141_element_check_00117', () async {
      print("\n********** テスト実行：00141_element_check_00117 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.t_exe1;
      print(csvbkup.item9.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.t_exe1 = testData1s;
      print(csvbkup.item9.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.t_exe1 = testData2s;
      print(csvbkup.item9.t_exe1);
      expect(csvbkup.item9.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.t_exe1 = defalut;
      print(csvbkup.item9.t_exe1);
      expect(csvbkup.item9.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00141_element_check_00117 **********\n\n");
    });

    test('00142_element_check_00118', () async {
      print("\n********** テスト実行：00142_element_check_00118 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.t_exe2;
      print(csvbkup.item9.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.t_exe2 = testData1s;
      print(csvbkup.item9.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.t_exe2 = testData2s;
      print(csvbkup.item9.t_exe2);
      expect(csvbkup.item9.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.t_exe2 = defalut;
      print(csvbkup.item9.t_exe2);
      expect(csvbkup.item9.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00142_element_check_00118 **********\n\n");
    });

    test('00143_element_check_00119', () async {
      print("\n********** テスト実行：00143_element_check_00119 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.section;
      print(csvbkup.item9.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.section = testData1s;
      print(csvbkup.item9.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.section = testData2s;
      print(csvbkup.item9.section);
      expect(csvbkup.item9.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.section = defalut;
      print(csvbkup.item9.section);
      expect(csvbkup.item9.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00143_element_check_00119 **********\n\n");
    });

    test('00144_element_check_00120', () async {
      print("\n********** テスト実行：00144_element_check_00120 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.keyword;
      print(csvbkup.item9.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.keyword = testData1s;
      print(csvbkup.item9.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.keyword = testData2s;
      print(csvbkup.item9.keyword);
      expect(csvbkup.item9.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.keyword = defalut;
      print(csvbkup.item9.keyword);
      expect(csvbkup.item9.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00144_element_check_00120 **********\n\n");
    });

    test('00145_element_check_00121', () async {
      print("\n********** テスト実行：00145_element_check_00121 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.keyword2;
      print(csvbkup.item9.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.keyword2 = testData1s;
      print(csvbkup.item9.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.keyword2 = testData2s;
      print(csvbkup.item9.keyword2);
      expect(csvbkup.item9.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.keyword2 = defalut;
      print(csvbkup.item9.keyword2);
      expect(csvbkup.item9.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00145_element_check_00121 **********\n\n");
    });

    test('00146_element_check_00122', () async {
      print("\n********** テスト実行：00146_element_check_00122 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.backup_day;
      print(csvbkup.item9.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.backup_day = testData1s;
      print(csvbkup.item9.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.backup_day = testData2s;
      print(csvbkup.item9.backup_day);
      expect(csvbkup.item9.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.backup_day = defalut;
      print(csvbkup.item9.backup_day);
      expect(csvbkup.item9.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00146_element_check_00122 **********\n\n");
    });

    test('00147_element_check_00123', () async {
      print("\n********** テスト実行：00147_element_check_00123 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item9.select_dsp;
      print(csvbkup.item9.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item9.select_dsp = testData1;
      print(csvbkup.item9.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item9.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item9.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item9.select_dsp = testData2;
      print(csvbkup.item9.select_dsp);
      expect(csvbkup.item9.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item9.select_dsp = defalut;
      print(csvbkup.item9.select_dsp);
      expect(csvbkup.item9.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item9.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00147_element_check_00123 **********\n\n");
    });

    test('00148_element_check_00124', () async {
      print("\n********** テスト実行：00148_element_check_00124 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.onoff;
      print(csvbkup.item10.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.onoff = testData1;
      print(csvbkup.item10.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.onoff = testData2;
      print(csvbkup.item10.onoff);
      expect(csvbkup.item10.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.onoff = defalut;
      print(csvbkup.item10.onoff);
      expect(csvbkup.item10.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00148_element_check_00124 **********\n\n");
    });

    test('00149_element_check_00125', () async {
      print("\n********** テスト実行：00149_element_check_00125 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.page;
      print(csvbkup.item10.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.page = testData1;
      print(csvbkup.item10.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.page = testData2;
      print(csvbkup.item10.page);
      expect(csvbkup.item10.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.page = defalut;
      print(csvbkup.item10.page);
      expect(csvbkup.item10.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00149_element_check_00125 **********\n\n");
    });

    test('00150_element_check_00126', () async {
      print("\n********** テスト実行：00150_element_check_00126 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.position;
      print(csvbkup.item10.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.position = testData1;
      print(csvbkup.item10.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.position = testData2;
      print(csvbkup.item10.position);
      expect(csvbkup.item10.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.position = defalut;
      print(csvbkup.item10.position);
      expect(csvbkup.item10.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00150_element_check_00126 **********\n\n");
    });

    test('00151_element_check_00127', () async {
      print("\n********** テスト実行：00151_element_check_00127 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.table1;
      print(csvbkup.item10.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.table1 = testData1s;
      print(csvbkup.item10.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.table1 = testData2s;
      print(csvbkup.item10.table1);
      expect(csvbkup.item10.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.table1 = defalut;
      print(csvbkup.item10.table1);
      expect(csvbkup.item10.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00151_element_check_00127 **********\n\n");
    });

    test('00152_element_check_00128', () async {
      print("\n********** テスト実行：00152_element_check_00128 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.total;
      print(csvbkup.item10.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.total = testData1;
      print(csvbkup.item10.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.total = testData2;
      print(csvbkup.item10.total);
      expect(csvbkup.item10.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.total = defalut;
      print(csvbkup.item10.total);
      expect(csvbkup.item10.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00152_element_check_00128 **********\n\n");
    });

    test('00153_element_check_00129', () async {
      print("\n********** テスト実行：00153_element_check_00129 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.t_exe1;
      print(csvbkup.item10.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.t_exe1 = testData1s;
      print(csvbkup.item10.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.t_exe1 = testData2s;
      print(csvbkup.item10.t_exe1);
      expect(csvbkup.item10.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.t_exe1 = defalut;
      print(csvbkup.item10.t_exe1);
      expect(csvbkup.item10.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00153_element_check_00129 **********\n\n");
    });

    test('00154_element_check_00130', () async {
      print("\n********** テスト実行：00154_element_check_00130 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.section;
      print(csvbkup.item10.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.section = testData1s;
      print(csvbkup.item10.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.section = testData2s;
      print(csvbkup.item10.section);
      expect(csvbkup.item10.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.section = defalut;
      print(csvbkup.item10.section);
      expect(csvbkup.item10.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00154_element_check_00130 **********\n\n");
    });

    test('00155_element_check_00131', () async {
      print("\n********** テスト実行：00155_element_check_00131 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.keyword;
      print(csvbkup.item10.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.keyword = testData1s;
      print(csvbkup.item10.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.keyword = testData2s;
      print(csvbkup.item10.keyword);
      expect(csvbkup.item10.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.keyword = defalut;
      print(csvbkup.item10.keyword);
      expect(csvbkup.item10.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00155_element_check_00131 **********\n\n");
    });

    test('00156_element_check_00132', () async {
      print("\n********** テスト実行：00156_element_check_00132 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.keyword2;
      print(csvbkup.item10.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.keyword2 = testData1s;
      print(csvbkup.item10.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.keyword2 = testData2s;
      print(csvbkup.item10.keyword2);
      expect(csvbkup.item10.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.keyword2 = defalut;
      print(csvbkup.item10.keyword2);
      expect(csvbkup.item10.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00156_element_check_00132 **********\n\n");
    });

    test('00157_element_check_00133', () async {
      print("\n********** テスト実行：00157_element_check_00133 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.backup_day;
      print(csvbkup.item10.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.backup_day = testData1s;
      print(csvbkup.item10.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.backup_day = testData2s;
      print(csvbkup.item10.backup_day);
      expect(csvbkup.item10.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.backup_day = defalut;
      print(csvbkup.item10.backup_day);
      expect(csvbkup.item10.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00157_element_check_00133 **********\n\n");
    });

    test('00158_element_check_00134', () async {
      print("\n********** テスト実行：00158_element_check_00134 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item10.select_dsp;
      print(csvbkup.item10.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item10.select_dsp = testData1;
      print(csvbkup.item10.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item10.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item10.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item10.select_dsp = testData2;
      print(csvbkup.item10.select_dsp);
      expect(csvbkup.item10.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item10.select_dsp = defalut;
      print(csvbkup.item10.select_dsp);
      expect(csvbkup.item10.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item10.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00158_element_check_00134 **********\n\n");
    });

    test('00159_element_check_00135', () async {
      print("\n********** テスト実行：00159_element_check_00135 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.onoff;
      print(csvbkup.item11.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.onoff = testData1;
      print(csvbkup.item11.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.onoff = testData2;
      print(csvbkup.item11.onoff);
      expect(csvbkup.item11.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.onoff = defalut;
      print(csvbkup.item11.onoff);
      expect(csvbkup.item11.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00159_element_check_00135 **********\n\n");
    });

    test('00160_element_check_00136', () async {
      print("\n********** テスト実行：00160_element_check_00136 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.page;
      print(csvbkup.item11.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.page = testData1;
      print(csvbkup.item11.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.page = testData2;
      print(csvbkup.item11.page);
      expect(csvbkup.item11.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.page = defalut;
      print(csvbkup.item11.page);
      expect(csvbkup.item11.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00160_element_check_00136 **********\n\n");
    });

    test('00161_element_check_00137', () async {
      print("\n********** テスト実行：00161_element_check_00137 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.position;
      print(csvbkup.item11.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.position = testData1;
      print(csvbkup.item11.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.position = testData2;
      print(csvbkup.item11.position);
      expect(csvbkup.item11.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.position = defalut;
      print(csvbkup.item11.position);
      expect(csvbkup.item11.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00161_element_check_00137 **********\n\n");
    });

    test('00162_element_check_00138', () async {
      print("\n********** テスト実行：00162_element_check_00138 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.table1;
      print(csvbkup.item11.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.table1 = testData1s;
      print(csvbkup.item11.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.table1 = testData2s;
      print(csvbkup.item11.table1);
      expect(csvbkup.item11.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.table1 = defalut;
      print(csvbkup.item11.table1);
      expect(csvbkup.item11.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00162_element_check_00138 **********\n\n");
    });

    test('00163_element_check_00139', () async {
      print("\n********** テスト実行：00163_element_check_00139 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.total;
      print(csvbkup.item11.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.total = testData1;
      print(csvbkup.item11.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.total = testData2;
      print(csvbkup.item11.total);
      expect(csvbkup.item11.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.total = defalut;
      print(csvbkup.item11.total);
      expect(csvbkup.item11.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00163_element_check_00139 **********\n\n");
    });

    test('00164_element_check_00140', () async {
      print("\n********** テスト実行：00164_element_check_00140 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.t_exe1;
      print(csvbkup.item11.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.t_exe1 = testData1s;
      print(csvbkup.item11.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.t_exe1 = testData2s;
      print(csvbkup.item11.t_exe1);
      expect(csvbkup.item11.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.t_exe1 = defalut;
      print(csvbkup.item11.t_exe1);
      expect(csvbkup.item11.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00164_element_check_00140 **********\n\n");
    });

    test('00165_element_check_00141', () async {
      print("\n********** テスト実行：00165_element_check_00141 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.section;
      print(csvbkup.item11.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.section = testData1s;
      print(csvbkup.item11.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.section = testData2s;
      print(csvbkup.item11.section);
      expect(csvbkup.item11.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.section = defalut;
      print(csvbkup.item11.section);
      expect(csvbkup.item11.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00165_element_check_00141 **********\n\n");
    });

    test('00166_element_check_00142', () async {
      print("\n********** テスト実行：00166_element_check_00142 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.keyword;
      print(csvbkup.item11.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.keyword = testData1s;
      print(csvbkup.item11.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.keyword = testData2s;
      print(csvbkup.item11.keyword);
      expect(csvbkup.item11.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.keyword = defalut;
      print(csvbkup.item11.keyword);
      expect(csvbkup.item11.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00166_element_check_00142 **********\n\n");
    });

    test('00167_element_check_00143', () async {
      print("\n********** テスト実行：00167_element_check_00143 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.keyword2;
      print(csvbkup.item11.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.keyword2 = testData1s;
      print(csvbkup.item11.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.keyword2 = testData2s;
      print(csvbkup.item11.keyword2);
      expect(csvbkup.item11.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.keyword2 = defalut;
      print(csvbkup.item11.keyword2);
      expect(csvbkup.item11.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00167_element_check_00143 **********\n\n");
    });

    test('00168_element_check_00144', () async {
      print("\n********** テスト実行：00168_element_check_00144 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.backup_day;
      print(csvbkup.item11.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.backup_day = testData1s;
      print(csvbkup.item11.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.backup_day = testData2s;
      print(csvbkup.item11.backup_day);
      expect(csvbkup.item11.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.backup_day = defalut;
      print(csvbkup.item11.backup_day);
      expect(csvbkup.item11.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00168_element_check_00144 **********\n\n");
    });

    test('00169_element_check_00145', () async {
      print("\n********** テスト実行：00169_element_check_00145 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item11.select_dsp;
      print(csvbkup.item11.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item11.select_dsp = testData1;
      print(csvbkup.item11.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item11.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item11.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item11.select_dsp = testData2;
      print(csvbkup.item11.select_dsp);
      expect(csvbkup.item11.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item11.select_dsp = defalut;
      print(csvbkup.item11.select_dsp);
      expect(csvbkup.item11.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item11.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00169_element_check_00145 **********\n\n");
    });

    test('00170_element_check_00146', () async {
      print("\n********** テスト実行：00170_element_check_00146 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.onoff;
      print(csvbkup.item12.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.onoff = testData1;
      print(csvbkup.item12.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.onoff = testData2;
      print(csvbkup.item12.onoff);
      expect(csvbkup.item12.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.onoff = defalut;
      print(csvbkup.item12.onoff);
      expect(csvbkup.item12.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00170_element_check_00146 **********\n\n");
    });

    test('00171_element_check_00147', () async {
      print("\n********** テスト実行：00171_element_check_00147 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.page;
      print(csvbkup.item12.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.page = testData1;
      print(csvbkup.item12.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.page = testData2;
      print(csvbkup.item12.page);
      expect(csvbkup.item12.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.page = defalut;
      print(csvbkup.item12.page);
      expect(csvbkup.item12.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00171_element_check_00147 **********\n\n");
    });

    test('00172_element_check_00148', () async {
      print("\n********** テスト実行：00172_element_check_00148 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.position;
      print(csvbkup.item12.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.position = testData1;
      print(csvbkup.item12.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.position = testData2;
      print(csvbkup.item12.position);
      expect(csvbkup.item12.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.position = defalut;
      print(csvbkup.item12.position);
      expect(csvbkup.item12.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00172_element_check_00148 **********\n\n");
    });

    test('00173_element_check_00149', () async {
      print("\n********** テスト実行：00173_element_check_00149 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.table1;
      print(csvbkup.item12.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.table1 = testData1s;
      print(csvbkup.item12.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.table1 = testData2s;
      print(csvbkup.item12.table1);
      expect(csvbkup.item12.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.table1 = defalut;
      print(csvbkup.item12.table1);
      expect(csvbkup.item12.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00173_element_check_00149 **********\n\n");
    });

    test('00174_element_check_00150', () async {
      print("\n********** テスト実行：00174_element_check_00150 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.total;
      print(csvbkup.item12.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.total = testData1;
      print(csvbkup.item12.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.total = testData2;
      print(csvbkup.item12.total);
      expect(csvbkup.item12.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.total = defalut;
      print(csvbkup.item12.total);
      expect(csvbkup.item12.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00174_element_check_00150 **********\n\n");
    });

    test('00175_element_check_00151', () async {
      print("\n********** テスト実行：00175_element_check_00151 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.t_exe1;
      print(csvbkup.item12.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.t_exe1 = testData1s;
      print(csvbkup.item12.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.t_exe1 = testData2s;
      print(csvbkup.item12.t_exe1);
      expect(csvbkup.item12.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.t_exe1 = defalut;
      print(csvbkup.item12.t_exe1);
      expect(csvbkup.item12.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00175_element_check_00151 **********\n\n");
    });

    test('00176_element_check_00152', () async {
      print("\n********** テスト実行：00176_element_check_00152 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.section;
      print(csvbkup.item12.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.section = testData1s;
      print(csvbkup.item12.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.section = testData2s;
      print(csvbkup.item12.section);
      expect(csvbkup.item12.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.section = defalut;
      print(csvbkup.item12.section);
      expect(csvbkup.item12.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00176_element_check_00152 **********\n\n");
    });

    test('00177_element_check_00153', () async {
      print("\n********** テスト実行：00177_element_check_00153 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.keyword;
      print(csvbkup.item12.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.keyword = testData1s;
      print(csvbkup.item12.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.keyword = testData2s;
      print(csvbkup.item12.keyword);
      expect(csvbkup.item12.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.keyword = defalut;
      print(csvbkup.item12.keyword);
      expect(csvbkup.item12.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00177_element_check_00153 **********\n\n");
    });

    test('00178_element_check_00154', () async {
      print("\n********** テスト実行：00178_element_check_00154 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.keyword2;
      print(csvbkup.item12.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.keyword2 = testData1s;
      print(csvbkup.item12.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.keyword2 = testData2s;
      print(csvbkup.item12.keyword2);
      expect(csvbkup.item12.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.keyword2 = defalut;
      print(csvbkup.item12.keyword2);
      expect(csvbkup.item12.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00178_element_check_00154 **********\n\n");
    });

    test('00179_element_check_00155', () async {
      print("\n********** テスト実行：00179_element_check_00155 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.backup_day;
      print(csvbkup.item12.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.backup_day = testData1s;
      print(csvbkup.item12.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.backup_day = testData2s;
      print(csvbkup.item12.backup_day);
      expect(csvbkup.item12.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.backup_day = defalut;
      print(csvbkup.item12.backup_day);
      expect(csvbkup.item12.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00179_element_check_00155 **********\n\n");
    });

    test('00180_element_check_00156', () async {
      print("\n********** テスト実行：00180_element_check_00156 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item12.select_dsp;
      print(csvbkup.item12.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item12.select_dsp = testData1;
      print(csvbkup.item12.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item12.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item12.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item12.select_dsp = testData2;
      print(csvbkup.item12.select_dsp);
      expect(csvbkup.item12.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item12.select_dsp = defalut;
      print(csvbkup.item12.select_dsp);
      expect(csvbkup.item12.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item12.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00180_element_check_00156 **********\n\n");
    });

    test('00181_element_check_00157', () async {
      print("\n********** テスト実行：00181_element_check_00157 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.onoff;
      print(csvbkup.item13.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.onoff = testData1;
      print(csvbkup.item13.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.onoff = testData2;
      print(csvbkup.item13.onoff);
      expect(csvbkup.item13.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.onoff = defalut;
      print(csvbkup.item13.onoff);
      expect(csvbkup.item13.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00181_element_check_00157 **********\n\n");
    });

    test('00182_element_check_00158', () async {
      print("\n********** テスト実行：00182_element_check_00158 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.page;
      print(csvbkup.item13.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.page = testData1;
      print(csvbkup.item13.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.page = testData2;
      print(csvbkup.item13.page);
      expect(csvbkup.item13.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.page = defalut;
      print(csvbkup.item13.page);
      expect(csvbkup.item13.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00182_element_check_00158 **********\n\n");
    });

    test('00183_element_check_00159', () async {
      print("\n********** テスト実行：00183_element_check_00159 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.position;
      print(csvbkup.item13.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.position = testData1;
      print(csvbkup.item13.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.position = testData2;
      print(csvbkup.item13.position);
      expect(csvbkup.item13.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.position = defalut;
      print(csvbkup.item13.position);
      expect(csvbkup.item13.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00183_element_check_00159 **********\n\n");
    });

    test('00184_element_check_00160', () async {
      print("\n********** テスト実行：00184_element_check_00160 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.table1;
      print(csvbkup.item13.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.table1 = testData1s;
      print(csvbkup.item13.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.table1 = testData2s;
      print(csvbkup.item13.table1);
      expect(csvbkup.item13.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.table1 = defalut;
      print(csvbkup.item13.table1);
      expect(csvbkup.item13.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00184_element_check_00160 **********\n\n");
    });

    test('00185_element_check_00161', () async {
      print("\n********** テスト実行：00185_element_check_00161 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.total;
      print(csvbkup.item13.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.total = testData1;
      print(csvbkup.item13.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.total = testData2;
      print(csvbkup.item13.total);
      expect(csvbkup.item13.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.total = defalut;
      print(csvbkup.item13.total);
      expect(csvbkup.item13.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00185_element_check_00161 **********\n\n");
    });

    test('00186_element_check_00162', () async {
      print("\n********** テスト実行：00186_element_check_00162 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.t_exe1;
      print(csvbkup.item13.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.t_exe1 = testData1s;
      print(csvbkup.item13.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.t_exe1 = testData2s;
      print(csvbkup.item13.t_exe1);
      expect(csvbkup.item13.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.t_exe1 = defalut;
      print(csvbkup.item13.t_exe1);
      expect(csvbkup.item13.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00186_element_check_00162 **********\n\n");
    });

    test('00187_element_check_00163', () async {
      print("\n********** テスト実行：00187_element_check_00163 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.section;
      print(csvbkup.item13.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.section = testData1s;
      print(csvbkup.item13.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.section = testData2s;
      print(csvbkup.item13.section);
      expect(csvbkup.item13.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.section = defalut;
      print(csvbkup.item13.section);
      expect(csvbkup.item13.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00187_element_check_00163 **********\n\n");
    });

    test('00188_element_check_00164', () async {
      print("\n********** テスト実行：00188_element_check_00164 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.keyword;
      print(csvbkup.item13.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.keyword = testData1s;
      print(csvbkup.item13.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.keyword = testData2s;
      print(csvbkup.item13.keyword);
      expect(csvbkup.item13.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.keyword = defalut;
      print(csvbkup.item13.keyword);
      expect(csvbkup.item13.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00188_element_check_00164 **********\n\n");
    });

    test('00189_element_check_00165', () async {
      print("\n********** テスト実行：00189_element_check_00165 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.keyword2;
      print(csvbkup.item13.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.keyword2 = testData1s;
      print(csvbkup.item13.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.keyword2 = testData2s;
      print(csvbkup.item13.keyword2);
      expect(csvbkup.item13.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.keyword2 = defalut;
      print(csvbkup.item13.keyword2);
      expect(csvbkup.item13.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00189_element_check_00165 **********\n\n");
    });

    test('00190_element_check_00166', () async {
      print("\n********** テスト実行：00190_element_check_00166 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.backup_day;
      print(csvbkup.item13.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.backup_day = testData1s;
      print(csvbkup.item13.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.backup_day = testData2s;
      print(csvbkup.item13.backup_day);
      expect(csvbkup.item13.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.backup_day = defalut;
      print(csvbkup.item13.backup_day);
      expect(csvbkup.item13.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00190_element_check_00166 **********\n\n");
    });

    test('00191_element_check_00167', () async {
      print("\n********** テスト実行：00191_element_check_00167 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item13.select_dsp;
      print(csvbkup.item13.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item13.select_dsp = testData1;
      print(csvbkup.item13.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item13.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item13.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item13.select_dsp = testData2;
      print(csvbkup.item13.select_dsp);
      expect(csvbkup.item13.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item13.select_dsp = defalut;
      print(csvbkup.item13.select_dsp);
      expect(csvbkup.item13.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item13.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00191_element_check_00167 **********\n\n");
    });

    test('00192_element_check_00168', () async {
      print("\n********** テスト実行：00192_element_check_00168 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.onoff;
      print(csvbkup.item14.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.onoff = testData1;
      print(csvbkup.item14.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.onoff = testData2;
      print(csvbkup.item14.onoff);
      expect(csvbkup.item14.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.onoff = defalut;
      print(csvbkup.item14.onoff);
      expect(csvbkup.item14.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00192_element_check_00168 **********\n\n");
    });

    test('00193_element_check_00169', () async {
      print("\n********** テスト実行：00193_element_check_00169 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.page;
      print(csvbkup.item14.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.page = testData1;
      print(csvbkup.item14.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.page = testData2;
      print(csvbkup.item14.page);
      expect(csvbkup.item14.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.page = defalut;
      print(csvbkup.item14.page);
      expect(csvbkup.item14.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00193_element_check_00169 **********\n\n");
    });

    test('00194_element_check_00170', () async {
      print("\n********** テスト実行：00194_element_check_00170 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.position;
      print(csvbkup.item14.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.position = testData1;
      print(csvbkup.item14.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.position = testData2;
      print(csvbkup.item14.position);
      expect(csvbkup.item14.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.position = defalut;
      print(csvbkup.item14.position);
      expect(csvbkup.item14.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00194_element_check_00170 **********\n\n");
    });

    test('00195_element_check_00171', () async {
      print("\n********** テスト実行：00195_element_check_00171 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.table1;
      print(csvbkup.item14.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.table1 = testData1s;
      print(csvbkup.item14.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.table1 = testData2s;
      print(csvbkup.item14.table1);
      expect(csvbkup.item14.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.table1 = defalut;
      print(csvbkup.item14.table1);
      expect(csvbkup.item14.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00195_element_check_00171 **********\n\n");
    });

    test('00196_element_check_00172', () async {
      print("\n********** テスト実行：00196_element_check_00172 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.total;
      print(csvbkup.item14.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.total = testData1;
      print(csvbkup.item14.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.total = testData2;
      print(csvbkup.item14.total);
      expect(csvbkup.item14.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.total = defalut;
      print(csvbkup.item14.total);
      expect(csvbkup.item14.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00196_element_check_00172 **********\n\n");
    });

    test('00197_element_check_00173', () async {
      print("\n********** テスト実行：00197_element_check_00173 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.t_exe1;
      print(csvbkup.item14.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.t_exe1 = testData1s;
      print(csvbkup.item14.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.t_exe1 = testData2s;
      print(csvbkup.item14.t_exe1);
      expect(csvbkup.item14.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.t_exe1 = defalut;
      print(csvbkup.item14.t_exe1);
      expect(csvbkup.item14.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00197_element_check_00173 **********\n\n");
    });

    test('00198_element_check_00174', () async {
      print("\n********** テスト実行：00198_element_check_00174 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.section;
      print(csvbkup.item14.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.section = testData1s;
      print(csvbkup.item14.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.section = testData2s;
      print(csvbkup.item14.section);
      expect(csvbkup.item14.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.section = defalut;
      print(csvbkup.item14.section);
      expect(csvbkup.item14.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00198_element_check_00174 **********\n\n");
    });

    test('00199_element_check_00175', () async {
      print("\n********** テスト実行：00199_element_check_00175 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.keyword;
      print(csvbkup.item14.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.keyword = testData1s;
      print(csvbkup.item14.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.keyword = testData2s;
      print(csvbkup.item14.keyword);
      expect(csvbkup.item14.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.keyword = defalut;
      print(csvbkup.item14.keyword);
      expect(csvbkup.item14.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00199_element_check_00175 **********\n\n");
    });

    test('00200_element_check_00176', () async {
      print("\n********** テスト実行：00200_element_check_00176 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.keyword2;
      print(csvbkup.item14.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.keyword2 = testData1s;
      print(csvbkup.item14.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.keyword2 = testData2s;
      print(csvbkup.item14.keyword2);
      expect(csvbkup.item14.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.keyword2 = defalut;
      print(csvbkup.item14.keyword2);
      expect(csvbkup.item14.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00200_element_check_00176 **********\n\n");
    });

    test('00201_element_check_00177', () async {
      print("\n********** テスト実行：00201_element_check_00177 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.backup_day;
      print(csvbkup.item14.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.backup_day = testData1s;
      print(csvbkup.item14.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.backup_day = testData2s;
      print(csvbkup.item14.backup_day);
      expect(csvbkup.item14.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.backup_day = defalut;
      print(csvbkup.item14.backup_day);
      expect(csvbkup.item14.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00201_element_check_00177 **********\n\n");
    });

    test('00202_element_check_00178', () async {
      print("\n********** テスト実行：00202_element_check_00178 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item14.select_dsp;
      print(csvbkup.item14.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item14.select_dsp = testData1;
      print(csvbkup.item14.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item14.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item14.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item14.select_dsp = testData2;
      print(csvbkup.item14.select_dsp);
      expect(csvbkup.item14.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item14.select_dsp = defalut;
      print(csvbkup.item14.select_dsp);
      expect(csvbkup.item14.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item14.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00202_element_check_00178 **********\n\n");
    });

    test('00203_element_check_00179', () async {
      print("\n********** テスト実行：00203_element_check_00179 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.onoff;
      print(csvbkup.item15.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.onoff = testData1;
      print(csvbkup.item15.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.onoff = testData2;
      print(csvbkup.item15.onoff);
      expect(csvbkup.item15.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.onoff = defalut;
      print(csvbkup.item15.onoff);
      expect(csvbkup.item15.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00203_element_check_00179 **********\n\n");
    });

    test('00204_element_check_00180', () async {
      print("\n********** テスト実行：00204_element_check_00180 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.page;
      print(csvbkup.item15.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.page = testData1;
      print(csvbkup.item15.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.page = testData2;
      print(csvbkup.item15.page);
      expect(csvbkup.item15.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.page = defalut;
      print(csvbkup.item15.page);
      expect(csvbkup.item15.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00204_element_check_00180 **********\n\n");
    });

    test('00205_element_check_00181', () async {
      print("\n********** テスト実行：00205_element_check_00181 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.position;
      print(csvbkup.item15.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.position = testData1;
      print(csvbkup.item15.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.position = testData2;
      print(csvbkup.item15.position);
      expect(csvbkup.item15.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.position = defalut;
      print(csvbkup.item15.position);
      expect(csvbkup.item15.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00205_element_check_00181 **********\n\n");
    });

    test('00206_element_check_00182', () async {
      print("\n********** テスト実行：00206_element_check_00182 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.table1;
      print(csvbkup.item15.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.table1 = testData1s;
      print(csvbkup.item15.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.table1 = testData2s;
      print(csvbkup.item15.table1);
      expect(csvbkup.item15.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.table1 = defalut;
      print(csvbkup.item15.table1);
      expect(csvbkup.item15.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00206_element_check_00182 **********\n\n");
    });

    test('00207_element_check_00183', () async {
      print("\n********** テスト実行：00207_element_check_00183 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.total;
      print(csvbkup.item15.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.total = testData1;
      print(csvbkup.item15.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.total = testData2;
      print(csvbkup.item15.total);
      expect(csvbkup.item15.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.total = defalut;
      print(csvbkup.item15.total);
      expect(csvbkup.item15.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00207_element_check_00183 **********\n\n");
    });

    test('00208_element_check_00184', () async {
      print("\n********** テスト実行：00208_element_check_00184 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.t_exe1;
      print(csvbkup.item15.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.t_exe1 = testData1s;
      print(csvbkup.item15.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.t_exe1 = testData2s;
      print(csvbkup.item15.t_exe1);
      expect(csvbkup.item15.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.t_exe1 = defalut;
      print(csvbkup.item15.t_exe1);
      expect(csvbkup.item15.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00208_element_check_00184 **********\n\n");
    });

    test('00209_element_check_00185', () async {
      print("\n********** テスト実行：00209_element_check_00185 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.t_exe2;
      print(csvbkup.item15.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.t_exe2 = testData1s;
      print(csvbkup.item15.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.t_exe2 = testData2s;
      print(csvbkup.item15.t_exe2);
      expect(csvbkup.item15.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.t_exe2 = defalut;
      print(csvbkup.item15.t_exe2);
      expect(csvbkup.item15.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00209_element_check_00185 **********\n\n");
    });

    test('00210_element_check_00186', () async {
      print("\n********** テスト実行：00210_element_check_00186 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.t_exe3;
      print(csvbkup.item15.t_exe3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.t_exe3 = testData1s;
      print(csvbkup.item15.t_exe3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.t_exe3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.t_exe3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.t_exe3 = testData2s;
      print(csvbkup.item15.t_exe3);
      expect(csvbkup.item15.t_exe3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.t_exe3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.t_exe3 = defalut;
      print(csvbkup.item15.t_exe3);
      expect(csvbkup.item15.t_exe3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.t_exe3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00210_element_check_00186 **********\n\n");
    });

    test('00211_element_check_00187', () async {
      print("\n********** テスト実行：00211_element_check_00187 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.section;
      print(csvbkup.item15.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.section = testData1s;
      print(csvbkup.item15.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.section = testData2s;
      print(csvbkup.item15.section);
      expect(csvbkup.item15.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.section = defalut;
      print(csvbkup.item15.section);
      expect(csvbkup.item15.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00211_element_check_00187 **********\n\n");
    });

    test('00212_element_check_00188', () async {
      print("\n********** テスト実行：00212_element_check_00188 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.keyword;
      print(csvbkup.item15.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.keyword = testData1s;
      print(csvbkup.item15.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.keyword = testData2s;
      print(csvbkup.item15.keyword);
      expect(csvbkup.item15.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.keyword = defalut;
      print(csvbkup.item15.keyword);
      expect(csvbkup.item15.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00212_element_check_00188 **********\n\n");
    });

    test('00213_element_check_00189', () async {
      print("\n********** テスト実行：00213_element_check_00189 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.backup_day;
      print(csvbkup.item15.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.backup_day = testData1s;
      print(csvbkup.item15.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.backup_day = testData2s;
      print(csvbkup.item15.backup_day);
      expect(csvbkup.item15.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.backup_day = defalut;
      print(csvbkup.item15.backup_day);
      expect(csvbkup.item15.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00213_element_check_00189 **********\n\n");
    });

    test('00214_element_check_00190', () async {
      print("\n********** テスト実行：00214_element_check_00190 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item15.select_dsp;
      print(csvbkup.item15.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item15.select_dsp = testData1;
      print(csvbkup.item15.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item15.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item15.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item15.select_dsp = testData2;
      print(csvbkup.item15.select_dsp);
      expect(csvbkup.item15.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item15.select_dsp = defalut;
      print(csvbkup.item15.select_dsp);
      expect(csvbkup.item15.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item15.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00214_element_check_00190 **********\n\n");
    });

    test('00215_element_check_00191', () async {
      print("\n********** テスト実行：00215_element_check_00191 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.onoff;
      print(csvbkup.item16.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.onoff = testData1;
      print(csvbkup.item16.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.onoff = testData2;
      print(csvbkup.item16.onoff);
      expect(csvbkup.item16.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.onoff = defalut;
      print(csvbkup.item16.onoff);
      expect(csvbkup.item16.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00215_element_check_00191 **********\n\n");
    });

    test('00216_element_check_00192', () async {
      print("\n********** テスト実行：00216_element_check_00192 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.page;
      print(csvbkup.item16.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.page = testData1;
      print(csvbkup.item16.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.page = testData2;
      print(csvbkup.item16.page);
      expect(csvbkup.item16.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.page = defalut;
      print(csvbkup.item16.page);
      expect(csvbkup.item16.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00216_element_check_00192 **********\n\n");
    });

    test('00217_element_check_00193', () async {
      print("\n********** テスト実行：00217_element_check_00193 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.position;
      print(csvbkup.item16.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.position = testData1;
      print(csvbkup.item16.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.position = testData2;
      print(csvbkup.item16.position);
      expect(csvbkup.item16.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.position = defalut;
      print(csvbkup.item16.position);
      expect(csvbkup.item16.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00217_element_check_00193 **********\n\n");
    });

    test('00218_element_check_00194', () async {
      print("\n********** テスト実行：00218_element_check_00194 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.table1;
      print(csvbkup.item16.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.table1 = testData1s;
      print(csvbkup.item16.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.table1 = testData2s;
      print(csvbkup.item16.table1);
      expect(csvbkup.item16.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.table1 = defalut;
      print(csvbkup.item16.table1);
      expect(csvbkup.item16.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00218_element_check_00194 **********\n\n");
    });

    test('00219_element_check_00195', () async {
      print("\n********** テスト実行：00219_element_check_00195 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.total;
      print(csvbkup.item16.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.total = testData1;
      print(csvbkup.item16.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.total = testData2;
      print(csvbkup.item16.total);
      expect(csvbkup.item16.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.total = defalut;
      print(csvbkup.item16.total);
      expect(csvbkup.item16.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00219_element_check_00195 **********\n\n");
    });

    test('00220_element_check_00196', () async {
      print("\n********** テスト実行：00220_element_check_00196 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.t_exe1;
      print(csvbkup.item16.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.t_exe1 = testData1s;
      print(csvbkup.item16.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.t_exe1 = testData2s;
      print(csvbkup.item16.t_exe1);
      expect(csvbkup.item16.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.t_exe1 = defalut;
      print(csvbkup.item16.t_exe1);
      expect(csvbkup.item16.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00220_element_check_00196 **********\n\n");
    });

    test('00221_element_check_00197', () async {
      print("\n********** テスト実行：00221_element_check_00197 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.section;
      print(csvbkup.item16.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.section = testData1s;
      print(csvbkup.item16.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.section = testData2s;
      print(csvbkup.item16.section);
      expect(csvbkup.item16.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.section = defalut;
      print(csvbkup.item16.section);
      expect(csvbkup.item16.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00221_element_check_00197 **********\n\n");
    });

    test('00222_element_check_00198', () async {
      print("\n********** テスト実行：00222_element_check_00198 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.keyword;
      print(csvbkup.item16.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.keyword = testData1s;
      print(csvbkup.item16.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.keyword = testData2s;
      print(csvbkup.item16.keyword);
      expect(csvbkup.item16.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.keyword = defalut;
      print(csvbkup.item16.keyword);
      expect(csvbkup.item16.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00222_element_check_00198 **********\n\n");
    });

    test('00223_element_check_00199', () async {
      print("\n********** テスト実行：00223_element_check_00199 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.backup_day;
      print(csvbkup.item16.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.backup_day = testData1s;
      print(csvbkup.item16.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.backup_day = testData2s;
      print(csvbkup.item16.backup_day);
      expect(csvbkup.item16.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.backup_day = defalut;
      print(csvbkup.item16.backup_day);
      expect(csvbkup.item16.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00223_element_check_00199 **********\n\n");
    });

    test('00224_element_check_00200', () async {
      print("\n********** テスト実行：00224_element_check_00200 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item16.select_dsp;
      print(csvbkup.item16.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item16.select_dsp = testData1;
      print(csvbkup.item16.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item16.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item16.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item16.select_dsp = testData2;
      print(csvbkup.item16.select_dsp);
      expect(csvbkup.item16.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item16.select_dsp = defalut;
      print(csvbkup.item16.select_dsp);
      expect(csvbkup.item16.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item16.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00224_element_check_00200 **********\n\n");
    });

    test('00225_element_check_00201', () async {
      print("\n********** テスト実行：00225_element_check_00201 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.onoff;
      print(csvbkup.item17.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.onoff = testData1;
      print(csvbkup.item17.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.onoff = testData2;
      print(csvbkup.item17.onoff);
      expect(csvbkup.item17.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.onoff = defalut;
      print(csvbkup.item17.onoff);
      expect(csvbkup.item17.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00225_element_check_00201 **********\n\n");
    });

    test('00226_element_check_00202', () async {
      print("\n********** テスト実行：00226_element_check_00202 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.page;
      print(csvbkup.item17.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.page = testData1;
      print(csvbkup.item17.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.page = testData2;
      print(csvbkup.item17.page);
      expect(csvbkup.item17.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.page = defalut;
      print(csvbkup.item17.page);
      expect(csvbkup.item17.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00226_element_check_00202 **********\n\n");
    });

    test('00227_element_check_00203', () async {
      print("\n********** テスト実行：00227_element_check_00203 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.position;
      print(csvbkup.item17.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.position = testData1;
      print(csvbkup.item17.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.position = testData2;
      print(csvbkup.item17.position);
      expect(csvbkup.item17.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.position = defalut;
      print(csvbkup.item17.position);
      expect(csvbkup.item17.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00227_element_check_00203 **********\n\n");
    });

    test('00228_element_check_00204', () async {
      print("\n********** テスト実行：00228_element_check_00204 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.table1;
      print(csvbkup.item17.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.table1 = testData1s;
      print(csvbkup.item17.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.table1 = testData2s;
      print(csvbkup.item17.table1);
      expect(csvbkup.item17.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.table1 = defalut;
      print(csvbkup.item17.table1);
      expect(csvbkup.item17.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00228_element_check_00204 **********\n\n");
    });

    test('00229_element_check_00205', () async {
      print("\n********** テスト実行：00229_element_check_00205 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.total;
      print(csvbkup.item17.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.total = testData1;
      print(csvbkup.item17.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.total = testData2;
      print(csvbkup.item17.total);
      expect(csvbkup.item17.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.total = defalut;
      print(csvbkup.item17.total);
      expect(csvbkup.item17.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00229_element_check_00205 **********\n\n");
    });

    test('00230_element_check_00206', () async {
      print("\n********** テスト実行：00230_element_check_00206 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.t_exe1;
      print(csvbkup.item17.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.t_exe1 = testData1s;
      print(csvbkup.item17.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.t_exe1 = testData2s;
      print(csvbkup.item17.t_exe1);
      expect(csvbkup.item17.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.t_exe1 = defalut;
      print(csvbkup.item17.t_exe1);
      expect(csvbkup.item17.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00230_element_check_00206 **********\n\n");
    });

    test('00231_element_check_00207', () async {
      print("\n********** テスト実行：00231_element_check_00207 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.section;
      print(csvbkup.item17.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.section = testData1s;
      print(csvbkup.item17.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.section = testData2s;
      print(csvbkup.item17.section);
      expect(csvbkup.item17.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.section = defalut;
      print(csvbkup.item17.section);
      expect(csvbkup.item17.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00231_element_check_00207 **********\n\n");
    });

    test('00232_element_check_00208', () async {
      print("\n********** テスト実行：00232_element_check_00208 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.keyword;
      print(csvbkup.item17.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.keyword = testData1s;
      print(csvbkup.item17.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.keyword = testData2s;
      print(csvbkup.item17.keyword);
      expect(csvbkup.item17.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.keyword = defalut;
      print(csvbkup.item17.keyword);
      expect(csvbkup.item17.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00232_element_check_00208 **********\n\n");
    });

    test('00233_element_check_00209', () async {
      print("\n********** テスト実行：00233_element_check_00209 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.backup_day;
      print(csvbkup.item17.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.backup_day = testData1s;
      print(csvbkup.item17.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.backup_day = testData2s;
      print(csvbkup.item17.backup_day);
      expect(csvbkup.item17.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.backup_day = defalut;
      print(csvbkup.item17.backup_day);
      expect(csvbkup.item17.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00233_element_check_00209 **********\n\n");
    });

    test('00234_element_check_00210', () async {
      print("\n********** テスト実行：00234_element_check_00210 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item17.select_dsp;
      print(csvbkup.item17.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item17.select_dsp = testData1;
      print(csvbkup.item17.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item17.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item17.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item17.select_dsp = testData2;
      print(csvbkup.item17.select_dsp);
      expect(csvbkup.item17.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item17.select_dsp = defalut;
      print(csvbkup.item17.select_dsp);
      expect(csvbkup.item17.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item17.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00234_element_check_00210 **********\n\n");
    });

    test('00235_element_check_00211', () async {
      print("\n********** テスト実行：00235_element_check_00211 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.onoff;
      print(csvbkup.item18.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.onoff = testData1;
      print(csvbkup.item18.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.onoff = testData2;
      print(csvbkup.item18.onoff);
      expect(csvbkup.item18.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.onoff = defalut;
      print(csvbkup.item18.onoff);
      expect(csvbkup.item18.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00235_element_check_00211 **********\n\n");
    });

    test('00236_element_check_00212', () async {
      print("\n********** テスト実行：00236_element_check_00212 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.page;
      print(csvbkup.item18.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.page = testData1;
      print(csvbkup.item18.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.page = testData2;
      print(csvbkup.item18.page);
      expect(csvbkup.item18.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.page = defalut;
      print(csvbkup.item18.page);
      expect(csvbkup.item18.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00236_element_check_00212 **********\n\n");
    });

    test('00237_element_check_00213', () async {
      print("\n********** テスト実行：00237_element_check_00213 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.position;
      print(csvbkup.item18.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.position = testData1;
      print(csvbkup.item18.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.position = testData2;
      print(csvbkup.item18.position);
      expect(csvbkup.item18.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.position = defalut;
      print(csvbkup.item18.position);
      expect(csvbkup.item18.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00237_element_check_00213 **********\n\n");
    });

    test('00238_element_check_00214', () async {
      print("\n********** テスト実行：00238_element_check_00214 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.table1;
      print(csvbkup.item18.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.table1 = testData1s;
      print(csvbkup.item18.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.table1 = testData2s;
      print(csvbkup.item18.table1);
      expect(csvbkup.item18.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.table1 = defalut;
      print(csvbkup.item18.table1);
      expect(csvbkup.item18.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00238_element_check_00214 **********\n\n");
    });

    test('00239_element_check_00215', () async {
      print("\n********** テスト実行：00239_element_check_00215 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.total;
      print(csvbkup.item18.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.total = testData1;
      print(csvbkup.item18.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.total = testData2;
      print(csvbkup.item18.total);
      expect(csvbkup.item18.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.total = defalut;
      print(csvbkup.item18.total);
      expect(csvbkup.item18.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00239_element_check_00215 **********\n\n");
    });

    test('00240_element_check_00216', () async {
      print("\n********** テスト実行：00240_element_check_00216 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.t_exe1;
      print(csvbkup.item18.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.t_exe1 = testData1s;
      print(csvbkup.item18.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.t_exe1 = testData2s;
      print(csvbkup.item18.t_exe1);
      expect(csvbkup.item18.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.t_exe1 = defalut;
      print(csvbkup.item18.t_exe1);
      expect(csvbkup.item18.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00240_element_check_00216 **********\n\n");
    });

    test('00241_element_check_00217', () async {
      print("\n********** テスト実行：00241_element_check_00217 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.section;
      print(csvbkup.item18.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.section = testData1s;
      print(csvbkup.item18.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.section = testData2s;
      print(csvbkup.item18.section);
      expect(csvbkup.item18.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.section = defalut;
      print(csvbkup.item18.section);
      expect(csvbkup.item18.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00241_element_check_00217 **********\n\n");
    });

    test('00242_element_check_00218', () async {
      print("\n********** テスト実行：00242_element_check_00218 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.keyword;
      print(csvbkup.item18.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.keyword = testData1s;
      print(csvbkup.item18.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.keyword = testData2s;
      print(csvbkup.item18.keyword);
      expect(csvbkup.item18.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.keyword = defalut;
      print(csvbkup.item18.keyword);
      expect(csvbkup.item18.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00242_element_check_00218 **********\n\n");
    });

    test('00243_element_check_00219', () async {
      print("\n********** テスト実行：00243_element_check_00219 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.backup_day;
      print(csvbkup.item18.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.backup_day = testData1s;
      print(csvbkup.item18.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.backup_day = testData2s;
      print(csvbkup.item18.backup_day);
      expect(csvbkup.item18.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.backup_day = defalut;
      print(csvbkup.item18.backup_day);
      expect(csvbkup.item18.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00243_element_check_00219 **********\n\n");
    });

    test('00244_element_check_00220', () async {
      print("\n********** テスト実行：00244_element_check_00220 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item18.select_dsp;
      print(csvbkup.item18.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item18.select_dsp = testData1;
      print(csvbkup.item18.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item18.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item18.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item18.select_dsp = testData2;
      print(csvbkup.item18.select_dsp);
      expect(csvbkup.item18.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item18.select_dsp = defalut;
      print(csvbkup.item18.select_dsp);
      expect(csvbkup.item18.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item18.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00244_element_check_00220 **********\n\n");
    });

    test('00245_element_check_00221', () async {
      print("\n********** テスト実行：00245_element_check_00221 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.onoff;
      print(csvbkup.item19.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.onoff = testData1;
      print(csvbkup.item19.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.onoff = testData2;
      print(csvbkup.item19.onoff);
      expect(csvbkup.item19.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.onoff = defalut;
      print(csvbkup.item19.onoff);
      expect(csvbkup.item19.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00245_element_check_00221 **********\n\n");
    });

    test('00246_element_check_00222', () async {
      print("\n********** テスト実行：00246_element_check_00222 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.page;
      print(csvbkup.item19.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.page = testData1;
      print(csvbkup.item19.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.page = testData2;
      print(csvbkup.item19.page);
      expect(csvbkup.item19.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.page = defalut;
      print(csvbkup.item19.page);
      expect(csvbkup.item19.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00246_element_check_00222 **********\n\n");
    });

    test('00247_element_check_00223', () async {
      print("\n********** テスト実行：00247_element_check_00223 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.position;
      print(csvbkup.item19.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.position = testData1;
      print(csvbkup.item19.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.position = testData2;
      print(csvbkup.item19.position);
      expect(csvbkup.item19.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.position = defalut;
      print(csvbkup.item19.position);
      expect(csvbkup.item19.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00247_element_check_00223 **********\n\n");
    });

    test('00248_element_check_00224', () async {
      print("\n********** テスト実行：00248_element_check_00224 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.table1;
      print(csvbkup.item19.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.table1 = testData1s;
      print(csvbkup.item19.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.table1 = testData2s;
      print(csvbkup.item19.table1);
      expect(csvbkup.item19.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.table1 = defalut;
      print(csvbkup.item19.table1);
      expect(csvbkup.item19.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00248_element_check_00224 **********\n\n");
    });

    test('00249_element_check_00225', () async {
      print("\n********** テスト実行：00249_element_check_00225 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.total;
      print(csvbkup.item19.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.total = testData1;
      print(csvbkup.item19.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.total = testData2;
      print(csvbkup.item19.total);
      expect(csvbkup.item19.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.total = defalut;
      print(csvbkup.item19.total);
      expect(csvbkup.item19.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00249_element_check_00225 **********\n\n");
    });

    test('00250_element_check_00226', () async {
      print("\n********** テスト実行：00250_element_check_00226 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.t_exe1;
      print(csvbkup.item19.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.t_exe1 = testData1s;
      print(csvbkup.item19.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.t_exe1 = testData2s;
      print(csvbkup.item19.t_exe1);
      expect(csvbkup.item19.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.t_exe1 = defalut;
      print(csvbkup.item19.t_exe1);
      expect(csvbkup.item19.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00250_element_check_00226 **********\n\n");
    });

    test('00251_element_check_00227', () async {
      print("\n********** テスト実行：00251_element_check_00227 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.section;
      print(csvbkup.item19.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.section = testData1s;
      print(csvbkup.item19.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.section = testData2s;
      print(csvbkup.item19.section);
      expect(csvbkup.item19.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.section = defalut;
      print(csvbkup.item19.section);
      expect(csvbkup.item19.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00251_element_check_00227 **********\n\n");
    });

    test('00252_element_check_00228', () async {
      print("\n********** テスト実行：00252_element_check_00228 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.keyword;
      print(csvbkup.item19.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.keyword = testData1s;
      print(csvbkup.item19.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.keyword = testData2s;
      print(csvbkup.item19.keyword);
      expect(csvbkup.item19.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.keyword = defalut;
      print(csvbkup.item19.keyword);
      expect(csvbkup.item19.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00252_element_check_00228 **********\n\n");
    });

    test('00253_element_check_00229', () async {
      print("\n********** テスト実行：00253_element_check_00229 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.backup_day;
      print(csvbkup.item19.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.backup_day = testData1s;
      print(csvbkup.item19.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.backup_day = testData2s;
      print(csvbkup.item19.backup_day);
      expect(csvbkup.item19.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.backup_day = defalut;
      print(csvbkup.item19.backup_day);
      expect(csvbkup.item19.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00253_element_check_00229 **********\n\n");
    });

    test('00254_element_check_00230', () async {
      print("\n********** テスト実行：00254_element_check_00230 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item19.select_dsp;
      print(csvbkup.item19.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item19.select_dsp = testData1;
      print(csvbkup.item19.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item19.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item19.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item19.select_dsp = testData2;
      print(csvbkup.item19.select_dsp);
      expect(csvbkup.item19.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item19.select_dsp = defalut;
      print(csvbkup.item19.select_dsp);
      expect(csvbkup.item19.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item19.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00254_element_check_00230 **********\n\n");
    });

    test('00255_element_check_00231', () async {
      print("\n********** テスト実行：00255_element_check_00231 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.onoff;
      print(csvbkup.item20.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.onoff = testData1;
      print(csvbkup.item20.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.onoff = testData2;
      print(csvbkup.item20.onoff);
      expect(csvbkup.item20.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.onoff = defalut;
      print(csvbkup.item20.onoff);
      expect(csvbkup.item20.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00255_element_check_00231 **********\n\n");
    });

    test('00256_element_check_00232', () async {
      print("\n********** テスト実行：00256_element_check_00232 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.page;
      print(csvbkup.item20.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.page = testData1;
      print(csvbkup.item20.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.page = testData2;
      print(csvbkup.item20.page);
      expect(csvbkup.item20.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.page = defalut;
      print(csvbkup.item20.page);
      expect(csvbkup.item20.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00256_element_check_00232 **********\n\n");
    });

    test('00257_element_check_00233', () async {
      print("\n********** テスト実行：00257_element_check_00233 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.position;
      print(csvbkup.item20.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.position = testData1;
      print(csvbkup.item20.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.position = testData2;
      print(csvbkup.item20.position);
      expect(csvbkup.item20.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.position = defalut;
      print(csvbkup.item20.position);
      expect(csvbkup.item20.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00257_element_check_00233 **********\n\n");
    });

    test('00258_element_check_00234', () async {
      print("\n********** テスト実行：00258_element_check_00234 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.table1;
      print(csvbkup.item20.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.table1 = testData1s;
      print(csvbkup.item20.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.table1 = testData2s;
      print(csvbkup.item20.table1);
      expect(csvbkup.item20.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.table1 = defalut;
      print(csvbkup.item20.table1);
      expect(csvbkup.item20.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00258_element_check_00234 **********\n\n");
    });

    test('00259_element_check_00235', () async {
      print("\n********** テスト実行：00259_element_check_00235 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.total;
      print(csvbkup.item20.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.total = testData1;
      print(csvbkup.item20.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.total = testData2;
      print(csvbkup.item20.total);
      expect(csvbkup.item20.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.total = defalut;
      print(csvbkup.item20.total);
      expect(csvbkup.item20.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00259_element_check_00235 **********\n\n");
    });

    test('00260_element_check_00236', () async {
      print("\n********** テスト実行：00260_element_check_00236 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.t_exe1;
      print(csvbkup.item20.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.t_exe1 = testData1s;
      print(csvbkup.item20.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.t_exe1 = testData2s;
      print(csvbkup.item20.t_exe1);
      expect(csvbkup.item20.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.t_exe1 = defalut;
      print(csvbkup.item20.t_exe1);
      expect(csvbkup.item20.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00260_element_check_00236 **********\n\n");
    });

    test('00261_element_check_00237', () async {
      print("\n********** テスト実行：00261_element_check_00237 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.section;
      print(csvbkup.item20.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.section = testData1s;
      print(csvbkup.item20.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.section = testData2s;
      print(csvbkup.item20.section);
      expect(csvbkup.item20.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.section = defalut;
      print(csvbkup.item20.section);
      expect(csvbkup.item20.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00261_element_check_00237 **********\n\n");
    });

    test('00262_element_check_00238', () async {
      print("\n********** テスト実行：00262_element_check_00238 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.keyword;
      print(csvbkup.item20.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.keyword = testData1s;
      print(csvbkup.item20.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.keyword = testData2s;
      print(csvbkup.item20.keyword);
      expect(csvbkup.item20.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.keyword = defalut;
      print(csvbkup.item20.keyword);
      expect(csvbkup.item20.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00262_element_check_00238 **********\n\n");
    });

    test('00263_element_check_00239', () async {
      print("\n********** テスト実行：00263_element_check_00239 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.backup_day;
      print(csvbkup.item20.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.backup_day = testData1s;
      print(csvbkup.item20.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.backup_day = testData2s;
      print(csvbkup.item20.backup_day);
      expect(csvbkup.item20.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.backup_day = defalut;
      print(csvbkup.item20.backup_day);
      expect(csvbkup.item20.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00263_element_check_00239 **********\n\n");
    });

    test('00264_element_check_00240', () async {
      print("\n********** テスト実行：00264_element_check_00240 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item20.select_dsp;
      print(csvbkup.item20.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item20.select_dsp = testData1;
      print(csvbkup.item20.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item20.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item20.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item20.select_dsp = testData2;
      print(csvbkup.item20.select_dsp);
      expect(csvbkup.item20.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item20.select_dsp = defalut;
      print(csvbkup.item20.select_dsp);
      expect(csvbkup.item20.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item20.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00264_element_check_00240 **********\n\n");
    });

    test('00265_element_check_00241', () async {
      print("\n********** テスト実行：00265_element_check_00241 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.onoff;
      print(csvbkup.item21.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.onoff = testData1;
      print(csvbkup.item21.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.onoff = testData2;
      print(csvbkup.item21.onoff);
      expect(csvbkup.item21.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.onoff = defalut;
      print(csvbkup.item21.onoff);
      expect(csvbkup.item21.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00265_element_check_00241 **********\n\n");
    });

    test('00266_element_check_00242', () async {
      print("\n********** テスト実行：00266_element_check_00242 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.page;
      print(csvbkup.item21.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.page = testData1;
      print(csvbkup.item21.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.page = testData2;
      print(csvbkup.item21.page);
      expect(csvbkup.item21.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.page = defalut;
      print(csvbkup.item21.page);
      expect(csvbkup.item21.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00266_element_check_00242 **********\n\n");
    });

    test('00267_element_check_00243', () async {
      print("\n********** テスト実行：00267_element_check_00243 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.position;
      print(csvbkup.item21.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.position = testData1;
      print(csvbkup.item21.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.position = testData2;
      print(csvbkup.item21.position);
      expect(csvbkup.item21.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.position = defalut;
      print(csvbkup.item21.position);
      expect(csvbkup.item21.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00267_element_check_00243 **********\n\n");
    });

    test('00268_element_check_00244', () async {
      print("\n********** テスト実行：00268_element_check_00244 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.table1;
      print(csvbkup.item21.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.table1 = testData1s;
      print(csvbkup.item21.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.table1 = testData2s;
      print(csvbkup.item21.table1);
      expect(csvbkup.item21.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.table1 = defalut;
      print(csvbkup.item21.table1);
      expect(csvbkup.item21.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00268_element_check_00244 **********\n\n");
    });

    test('00269_element_check_00245', () async {
      print("\n********** テスト実行：00269_element_check_00245 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.total;
      print(csvbkup.item21.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.total = testData1;
      print(csvbkup.item21.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.total = testData2;
      print(csvbkup.item21.total);
      expect(csvbkup.item21.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.total = defalut;
      print(csvbkup.item21.total);
      expect(csvbkup.item21.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00269_element_check_00245 **********\n\n");
    });

    test('00270_element_check_00246', () async {
      print("\n********** テスト実行：00270_element_check_00246 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.t_exe1;
      print(csvbkup.item21.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.t_exe1 = testData1s;
      print(csvbkup.item21.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.t_exe1 = testData2s;
      print(csvbkup.item21.t_exe1);
      expect(csvbkup.item21.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.t_exe1 = defalut;
      print(csvbkup.item21.t_exe1);
      expect(csvbkup.item21.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00270_element_check_00246 **********\n\n");
    });

    test('00271_element_check_00247', () async {
      print("\n********** テスト実行：00271_element_check_00247 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.section;
      print(csvbkup.item21.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.section = testData1s;
      print(csvbkup.item21.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.section = testData2s;
      print(csvbkup.item21.section);
      expect(csvbkup.item21.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.section = defalut;
      print(csvbkup.item21.section);
      expect(csvbkup.item21.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00271_element_check_00247 **********\n\n");
    });

    test('00272_element_check_00248', () async {
      print("\n********** テスト実行：00272_element_check_00248 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.keyword;
      print(csvbkup.item21.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.keyword = testData1s;
      print(csvbkup.item21.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.keyword = testData2s;
      print(csvbkup.item21.keyword);
      expect(csvbkup.item21.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.keyword = defalut;
      print(csvbkup.item21.keyword);
      expect(csvbkup.item21.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00272_element_check_00248 **********\n\n");
    });

    test('00273_element_check_00249', () async {
      print("\n********** テスト実行：00273_element_check_00249 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.backup_day;
      print(csvbkup.item21.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.backup_day = testData1s;
      print(csvbkup.item21.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.backup_day = testData2s;
      print(csvbkup.item21.backup_day);
      expect(csvbkup.item21.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.backup_day = defalut;
      print(csvbkup.item21.backup_day);
      expect(csvbkup.item21.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00273_element_check_00249 **********\n\n");
    });

    test('00274_element_check_00250', () async {
      print("\n********** テスト実行：00274_element_check_00250 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item21.select_dsp;
      print(csvbkup.item21.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item21.select_dsp = testData1;
      print(csvbkup.item21.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item21.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item21.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item21.select_dsp = testData2;
      print(csvbkup.item21.select_dsp);
      expect(csvbkup.item21.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item21.select_dsp = defalut;
      print(csvbkup.item21.select_dsp);
      expect(csvbkup.item21.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item21.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00274_element_check_00250 **********\n\n");
    });

    test('00275_element_check_00251', () async {
      print("\n********** テスト実行：00275_element_check_00251 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.onoff;
      print(csvbkup.item22.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.onoff = testData1;
      print(csvbkup.item22.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.onoff = testData2;
      print(csvbkup.item22.onoff);
      expect(csvbkup.item22.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.onoff = defalut;
      print(csvbkup.item22.onoff);
      expect(csvbkup.item22.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00275_element_check_00251 **********\n\n");
    });

    test('00276_element_check_00252', () async {
      print("\n********** テスト実行：00276_element_check_00252 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.page;
      print(csvbkup.item22.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.page = testData1;
      print(csvbkup.item22.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.page = testData2;
      print(csvbkup.item22.page);
      expect(csvbkup.item22.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.page = defalut;
      print(csvbkup.item22.page);
      expect(csvbkup.item22.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00276_element_check_00252 **********\n\n");
    });

    test('00277_element_check_00253', () async {
      print("\n********** テスト実行：00277_element_check_00253 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.position;
      print(csvbkup.item22.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.position = testData1;
      print(csvbkup.item22.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.position = testData2;
      print(csvbkup.item22.position);
      expect(csvbkup.item22.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.position = defalut;
      print(csvbkup.item22.position);
      expect(csvbkup.item22.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00277_element_check_00253 **********\n\n");
    });

    test('00278_element_check_00254', () async {
      print("\n********** テスト実行：00278_element_check_00254 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.table1;
      print(csvbkup.item22.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.table1 = testData1s;
      print(csvbkup.item22.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.table1 = testData2s;
      print(csvbkup.item22.table1);
      expect(csvbkup.item22.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.table1 = defalut;
      print(csvbkup.item22.table1);
      expect(csvbkup.item22.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00278_element_check_00254 **********\n\n");
    });

    test('00279_element_check_00255', () async {
      print("\n********** テスト実行：00279_element_check_00255 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.total;
      print(csvbkup.item22.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.total = testData1;
      print(csvbkup.item22.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.total = testData2;
      print(csvbkup.item22.total);
      expect(csvbkup.item22.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.total = defalut;
      print(csvbkup.item22.total);
      expect(csvbkup.item22.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00279_element_check_00255 **********\n\n");
    });

    test('00280_element_check_00256', () async {
      print("\n********** テスト実行：00280_element_check_00256 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.t_exe1;
      print(csvbkup.item22.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.t_exe1 = testData1s;
      print(csvbkup.item22.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.t_exe1 = testData2s;
      print(csvbkup.item22.t_exe1);
      expect(csvbkup.item22.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.t_exe1 = defalut;
      print(csvbkup.item22.t_exe1);
      expect(csvbkup.item22.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00280_element_check_00256 **********\n\n");
    });

    test('00281_element_check_00257', () async {
      print("\n********** テスト実行：00281_element_check_00257 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.t_exe2;
      print(csvbkup.item22.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.t_exe2 = testData1s;
      print(csvbkup.item22.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.t_exe2 = testData2s;
      print(csvbkup.item22.t_exe2);
      expect(csvbkup.item22.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.t_exe2 = defalut;
      print(csvbkup.item22.t_exe2);
      expect(csvbkup.item22.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00281_element_check_00257 **********\n\n");
    });

    test('00282_element_check_00258', () async {
      print("\n********** テスト実行：00282_element_check_00258 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.section;
      print(csvbkup.item22.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.section = testData1s;
      print(csvbkup.item22.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.section = testData2s;
      print(csvbkup.item22.section);
      expect(csvbkup.item22.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.section = defalut;
      print(csvbkup.item22.section);
      expect(csvbkup.item22.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00282_element_check_00258 **********\n\n");
    });

    test('00283_element_check_00259', () async {
      print("\n********** テスト実行：00283_element_check_00259 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.keyword;
      print(csvbkup.item22.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.keyword = testData1s;
      print(csvbkup.item22.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.keyword = testData2s;
      print(csvbkup.item22.keyword);
      expect(csvbkup.item22.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.keyword = defalut;
      print(csvbkup.item22.keyword);
      expect(csvbkup.item22.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00283_element_check_00259 **********\n\n");
    });

    test('00284_element_check_00260', () async {
      print("\n********** テスト実行：00284_element_check_00260 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.keyword2;
      print(csvbkup.item22.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.keyword2 = testData1s;
      print(csvbkup.item22.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.keyword2 = testData2s;
      print(csvbkup.item22.keyword2);
      expect(csvbkup.item22.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.keyword2 = defalut;
      print(csvbkup.item22.keyword2);
      expect(csvbkup.item22.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00284_element_check_00260 **********\n\n");
    });

    test('00285_element_check_00261', () async {
      print("\n********** テスト実行：00285_element_check_00261 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.keyword3;
      print(csvbkup.item22.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.keyword3 = testData1s;
      print(csvbkup.item22.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.keyword3 = testData2s;
      print(csvbkup.item22.keyword3);
      expect(csvbkup.item22.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.keyword3 = defalut;
      print(csvbkup.item22.keyword3);
      expect(csvbkup.item22.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00285_element_check_00261 **********\n\n");
    });

    test('00286_element_check_00262', () async {
      print("\n********** テスト実行：00286_element_check_00262 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.backup_day;
      print(csvbkup.item22.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.backup_day = testData1s;
      print(csvbkup.item22.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.backup_day = testData2s;
      print(csvbkup.item22.backup_day);
      expect(csvbkup.item22.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.backup_day = defalut;
      print(csvbkup.item22.backup_day);
      expect(csvbkup.item22.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00286_element_check_00262 **********\n\n");
    });

    test('00287_element_check_00263', () async {
      print("\n********** テスト実行：00287_element_check_00263 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item22.select_dsp;
      print(csvbkup.item22.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item22.select_dsp = testData1;
      print(csvbkup.item22.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item22.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item22.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item22.select_dsp = testData2;
      print(csvbkup.item22.select_dsp);
      expect(csvbkup.item22.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item22.select_dsp = defalut;
      print(csvbkup.item22.select_dsp);
      expect(csvbkup.item22.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item22.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00287_element_check_00263 **********\n\n");
    });

    test('00288_element_check_00264', () async {
      print("\n********** テスト実行：00288_element_check_00264 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.onoff;
      print(csvbkup.item23.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.onoff = testData1;
      print(csvbkup.item23.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.onoff = testData2;
      print(csvbkup.item23.onoff);
      expect(csvbkup.item23.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.onoff = defalut;
      print(csvbkup.item23.onoff);
      expect(csvbkup.item23.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00288_element_check_00264 **********\n\n");
    });

    test('00289_element_check_00265', () async {
      print("\n********** テスト実行：00289_element_check_00265 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.page;
      print(csvbkup.item23.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.page = testData1;
      print(csvbkup.item23.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.page = testData2;
      print(csvbkup.item23.page);
      expect(csvbkup.item23.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.page = defalut;
      print(csvbkup.item23.page);
      expect(csvbkup.item23.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00289_element_check_00265 **********\n\n");
    });

    test('00290_element_check_00266', () async {
      print("\n********** テスト実行：00290_element_check_00266 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.position;
      print(csvbkup.item23.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.position = testData1;
      print(csvbkup.item23.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.position = testData2;
      print(csvbkup.item23.position);
      expect(csvbkup.item23.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.position = defalut;
      print(csvbkup.item23.position);
      expect(csvbkup.item23.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00290_element_check_00266 **********\n\n");
    });

    test('00291_element_check_00267', () async {
      print("\n********** テスト実行：00291_element_check_00267 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.table1;
      print(csvbkup.item23.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.table1 = testData1s;
      print(csvbkup.item23.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.table1 = testData2s;
      print(csvbkup.item23.table1);
      expect(csvbkup.item23.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.table1 = defalut;
      print(csvbkup.item23.table1);
      expect(csvbkup.item23.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00291_element_check_00267 **********\n\n");
    });

    test('00292_element_check_00268', () async {
      print("\n********** テスト実行：00292_element_check_00268 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.total;
      print(csvbkup.item23.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.total = testData1;
      print(csvbkup.item23.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.total = testData2;
      print(csvbkup.item23.total);
      expect(csvbkup.item23.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.total = defalut;
      print(csvbkup.item23.total);
      expect(csvbkup.item23.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00292_element_check_00268 **********\n\n");
    });

    test('00293_element_check_00269', () async {
      print("\n********** テスト実行：00293_element_check_00269 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.t_exe1;
      print(csvbkup.item23.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.t_exe1 = testData1s;
      print(csvbkup.item23.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.t_exe1 = testData2s;
      print(csvbkup.item23.t_exe1);
      expect(csvbkup.item23.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.t_exe1 = defalut;
      print(csvbkup.item23.t_exe1);
      expect(csvbkup.item23.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00293_element_check_00269 **********\n\n");
    });

    test('00294_element_check_00270', () async {
      print("\n********** テスト実行：00294_element_check_00270 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.t_exe2;
      print(csvbkup.item23.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.t_exe2 = testData1s;
      print(csvbkup.item23.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.t_exe2 = testData2s;
      print(csvbkup.item23.t_exe2);
      expect(csvbkup.item23.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.t_exe2 = defalut;
      print(csvbkup.item23.t_exe2);
      expect(csvbkup.item23.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00294_element_check_00270 **********\n\n");
    });

    test('00295_element_check_00271', () async {
      print("\n********** テスト実行：00295_element_check_00271 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.section;
      print(csvbkup.item23.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.section = testData1s;
      print(csvbkup.item23.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.section = testData2s;
      print(csvbkup.item23.section);
      expect(csvbkup.item23.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.section = defalut;
      print(csvbkup.item23.section);
      expect(csvbkup.item23.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00295_element_check_00271 **********\n\n");
    });

    test('00296_element_check_00272', () async {
      print("\n********** テスト実行：00296_element_check_00272 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.keyword;
      print(csvbkup.item23.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.keyword = testData1s;
      print(csvbkup.item23.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.keyword = testData2s;
      print(csvbkup.item23.keyword);
      expect(csvbkup.item23.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.keyword = defalut;
      print(csvbkup.item23.keyword);
      expect(csvbkup.item23.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00296_element_check_00272 **********\n\n");
    });

    test('00297_element_check_00273', () async {
      print("\n********** テスト実行：00297_element_check_00273 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.keyword2;
      print(csvbkup.item23.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.keyword2 = testData1s;
      print(csvbkup.item23.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.keyword2 = testData2s;
      print(csvbkup.item23.keyword2);
      expect(csvbkup.item23.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.keyword2 = defalut;
      print(csvbkup.item23.keyword2);
      expect(csvbkup.item23.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00297_element_check_00273 **********\n\n");
    });

    test('00298_element_check_00274', () async {
      print("\n********** テスト実行：00298_element_check_00274 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.keyword3;
      print(csvbkup.item23.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.keyword3 = testData1s;
      print(csvbkup.item23.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.keyword3 = testData2s;
      print(csvbkup.item23.keyword3);
      expect(csvbkup.item23.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.keyword3 = defalut;
      print(csvbkup.item23.keyword3);
      expect(csvbkup.item23.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00298_element_check_00274 **********\n\n");
    });

    test('00299_element_check_00275', () async {
      print("\n********** テスト実行：00299_element_check_00275 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.backup_day;
      print(csvbkup.item23.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.backup_day = testData1s;
      print(csvbkup.item23.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.backup_day = testData2s;
      print(csvbkup.item23.backup_day);
      expect(csvbkup.item23.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.backup_day = defalut;
      print(csvbkup.item23.backup_day);
      expect(csvbkup.item23.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00299_element_check_00275 **********\n\n");
    });

    test('00300_element_check_00276', () async {
      print("\n********** テスト実行：00300_element_check_00276 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item23.select_dsp;
      print(csvbkup.item23.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item23.select_dsp = testData1;
      print(csvbkup.item23.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item23.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item23.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item23.select_dsp = testData2;
      print(csvbkup.item23.select_dsp);
      expect(csvbkup.item23.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item23.select_dsp = defalut;
      print(csvbkup.item23.select_dsp);
      expect(csvbkup.item23.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item23.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00300_element_check_00276 **********\n\n");
    });

    test('00301_element_check_00277', () async {
      print("\n********** テスト実行：00301_element_check_00277 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.onoff;
      print(csvbkup.item24.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.onoff = testData1;
      print(csvbkup.item24.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.onoff = testData2;
      print(csvbkup.item24.onoff);
      expect(csvbkup.item24.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.onoff = defalut;
      print(csvbkup.item24.onoff);
      expect(csvbkup.item24.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00301_element_check_00277 **********\n\n");
    });

    test('00302_element_check_00278', () async {
      print("\n********** テスト実行：00302_element_check_00278 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.page;
      print(csvbkup.item24.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.page = testData1;
      print(csvbkup.item24.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.page = testData2;
      print(csvbkup.item24.page);
      expect(csvbkup.item24.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.page = defalut;
      print(csvbkup.item24.page);
      expect(csvbkup.item24.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00302_element_check_00278 **********\n\n");
    });

    test('00303_element_check_00279', () async {
      print("\n********** テスト実行：00303_element_check_00279 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.position;
      print(csvbkup.item24.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.position = testData1;
      print(csvbkup.item24.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.position = testData2;
      print(csvbkup.item24.position);
      expect(csvbkup.item24.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.position = defalut;
      print(csvbkup.item24.position);
      expect(csvbkup.item24.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00303_element_check_00279 **********\n\n");
    });

    test('00304_element_check_00280', () async {
      print("\n********** テスト実行：00304_element_check_00280 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.table1;
      print(csvbkup.item24.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.table1 = testData1s;
      print(csvbkup.item24.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.table1 = testData2s;
      print(csvbkup.item24.table1);
      expect(csvbkup.item24.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.table1 = defalut;
      print(csvbkup.item24.table1);
      expect(csvbkup.item24.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00304_element_check_00280 **********\n\n");
    });

    test('00305_element_check_00281', () async {
      print("\n********** テスト実行：00305_element_check_00281 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.total;
      print(csvbkup.item24.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.total = testData1;
      print(csvbkup.item24.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.total = testData2;
      print(csvbkup.item24.total);
      expect(csvbkup.item24.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.total = defalut;
      print(csvbkup.item24.total);
      expect(csvbkup.item24.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00305_element_check_00281 **********\n\n");
    });

    test('00306_element_check_00282', () async {
      print("\n********** テスト実行：00306_element_check_00282 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.t_exe1;
      print(csvbkup.item24.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.t_exe1 = testData1s;
      print(csvbkup.item24.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.t_exe1 = testData2s;
      print(csvbkup.item24.t_exe1);
      expect(csvbkup.item24.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.t_exe1 = defalut;
      print(csvbkup.item24.t_exe1);
      expect(csvbkup.item24.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00306_element_check_00282 **********\n\n");
    });

    test('00307_element_check_00283', () async {
      print("\n********** テスト実行：00307_element_check_00283 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.t_exe2;
      print(csvbkup.item24.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.t_exe2 = testData1s;
      print(csvbkup.item24.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.t_exe2 = testData2s;
      print(csvbkup.item24.t_exe2);
      expect(csvbkup.item24.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.t_exe2 = defalut;
      print(csvbkup.item24.t_exe2);
      expect(csvbkup.item24.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00307_element_check_00283 **********\n\n");
    });

    test('00308_element_check_00284', () async {
      print("\n********** テスト実行：00308_element_check_00284 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.section;
      print(csvbkup.item24.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.section = testData1s;
      print(csvbkup.item24.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.section = testData2s;
      print(csvbkup.item24.section);
      expect(csvbkup.item24.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.section = defalut;
      print(csvbkup.item24.section);
      expect(csvbkup.item24.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00308_element_check_00284 **********\n\n");
    });

    test('00309_element_check_00285', () async {
      print("\n********** テスト実行：00309_element_check_00285 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.keyword;
      print(csvbkup.item24.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.keyword = testData1s;
      print(csvbkup.item24.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.keyword = testData2s;
      print(csvbkup.item24.keyword);
      expect(csvbkup.item24.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.keyword = defalut;
      print(csvbkup.item24.keyword);
      expect(csvbkup.item24.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00309_element_check_00285 **********\n\n");
    });

    test('00310_element_check_00286', () async {
      print("\n********** テスト実行：00310_element_check_00286 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.keyword2;
      print(csvbkup.item24.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.keyword2 = testData1s;
      print(csvbkup.item24.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.keyword2 = testData2s;
      print(csvbkup.item24.keyword2);
      expect(csvbkup.item24.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.keyword2 = defalut;
      print(csvbkup.item24.keyword2);
      expect(csvbkup.item24.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00310_element_check_00286 **********\n\n");
    });

    test('00311_element_check_00287', () async {
      print("\n********** テスト実行：00311_element_check_00287 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.keyword3;
      print(csvbkup.item24.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.keyword3 = testData1s;
      print(csvbkup.item24.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.keyword3 = testData2s;
      print(csvbkup.item24.keyword3);
      expect(csvbkup.item24.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.keyword3 = defalut;
      print(csvbkup.item24.keyword3);
      expect(csvbkup.item24.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00311_element_check_00287 **********\n\n");
    });

    test('00312_element_check_00288', () async {
      print("\n********** テスト実行：00312_element_check_00288 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.backup_day;
      print(csvbkup.item24.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.backup_day = testData1s;
      print(csvbkup.item24.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.backup_day = testData2s;
      print(csvbkup.item24.backup_day);
      expect(csvbkup.item24.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.backup_day = defalut;
      print(csvbkup.item24.backup_day);
      expect(csvbkup.item24.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00312_element_check_00288 **********\n\n");
    });

    test('00313_element_check_00289', () async {
      print("\n********** テスト実行：00313_element_check_00289 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item24.select_dsp;
      print(csvbkup.item24.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item24.select_dsp = testData1;
      print(csvbkup.item24.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item24.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item24.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item24.select_dsp = testData2;
      print(csvbkup.item24.select_dsp);
      expect(csvbkup.item24.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item24.select_dsp = defalut;
      print(csvbkup.item24.select_dsp);
      expect(csvbkup.item24.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item24.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00313_element_check_00289 **********\n\n");
    });

    test('00314_element_check_00290', () async {
      print("\n********** テスト実行：00314_element_check_00290 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.onoff;
      print(csvbkup.item25.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.onoff = testData1;
      print(csvbkup.item25.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.onoff = testData2;
      print(csvbkup.item25.onoff);
      expect(csvbkup.item25.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.onoff = defalut;
      print(csvbkup.item25.onoff);
      expect(csvbkup.item25.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00314_element_check_00290 **********\n\n");
    });

    test('00315_element_check_00291', () async {
      print("\n********** テスト実行：00315_element_check_00291 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.page;
      print(csvbkup.item25.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.page = testData1;
      print(csvbkup.item25.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.page = testData2;
      print(csvbkup.item25.page);
      expect(csvbkup.item25.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.page = defalut;
      print(csvbkup.item25.page);
      expect(csvbkup.item25.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00315_element_check_00291 **********\n\n");
    });

    test('00316_element_check_00292', () async {
      print("\n********** テスト実行：00316_element_check_00292 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.position;
      print(csvbkup.item25.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.position = testData1;
      print(csvbkup.item25.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.position = testData2;
      print(csvbkup.item25.position);
      expect(csvbkup.item25.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.position = defalut;
      print(csvbkup.item25.position);
      expect(csvbkup.item25.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00316_element_check_00292 **********\n\n");
    });

    test('00317_element_check_00293', () async {
      print("\n********** テスト実行：00317_element_check_00293 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.table1;
      print(csvbkup.item25.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.table1 = testData1s;
      print(csvbkup.item25.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.table1 = testData2s;
      print(csvbkup.item25.table1);
      expect(csvbkup.item25.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.table1 = defalut;
      print(csvbkup.item25.table1);
      expect(csvbkup.item25.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00317_element_check_00293 **********\n\n");
    });

    test('00318_element_check_00294', () async {
      print("\n********** テスト実行：00318_element_check_00294 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.total;
      print(csvbkup.item25.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.total = testData1;
      print(csvbkup.item25.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.total = testData2;
      print(csvbkup.item25.total);
      expect(csvbkup.item25.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.total = defalut;
      print(csvbkup.item25.total);
      expect(csvbkup.item25.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00318_element_check_00294 **********\n\n");
    });

    test('00319_element_check_00295', () async {
      print("\n********** テスト実行：00319_element_check_00295 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.t_exe1;
      print(csvbkup.item25.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.t_exe1 = testData1s;
      print(csvbkup.item25.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.t_exe1 = testData2s;
      print(csvbkup.item25.t_exe1);
      expect(csvbkup.item25.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.t_exe1 = defalut;
      print(csvbkup.item25.t_exe1);
      expect(csvbkup.item25.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00319_element_check_00295 **********\n\n");
    });

    test('00320_element_check_00296', () async {
      print("\n********** テスト実行：00320_element_check_00296 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.section;
      print(csvbkup.item25.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.section = testData1s;
      print(csvbkup.item25.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.section = testData2s;
      print(csvbkup.item25.section);
      expect(csvbkup.item25.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.section = defalut;
      print(csvbkup.item25.section);
      expect(csvbkup.item25.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00320_element_check_00296 **********\n\n");
    });

    test('00321_element_check_00297', () async {
      print("\n********** テスト実行：00321_element_check_00297 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.keyword;
      print(csvbkup.item25.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.keyword = testData1s;
      print(csvbkup.item25.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.keyword = testData2s;
      print(csvbkup.item25.keyword);
      expect(csvbkup.item25.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.keyword = defalut;
      print(csvbkup.item25.keyword);
      expect(csvbkup.item25.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00321_element_check_00297 **********\n\n");
    });

    test('00322_element_check_00298', () async {
      print("\n********** テスト実行：00322_element_check_00298 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.keyword2;
      print(csvbkup.item25.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.keyword2 = testData1s;
      print(csvbkup.item25.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.keyword2 = testData2s;
      print(csvbkup.item25.keyword2);
      expect(csvbkup.item25.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.keyword2 = defalut;
      print(csvbkup.item25.keyword2);
      expect(csvbkup.item25.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00322_element_check_00298 **********\n\n");
    });

    test('00323_element_check_00299', () async {
      print("\n********** テスト実行：00323_element_check_00299 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.keyword3;
      print(csvbkup.item25.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.keyword3 = testData1s;
      print(csvbkup.item25.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.keyword3 = testData2s;
      print(csvbkup.item25.keyword3);
      expect(csvbkup.item25.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.keyword3 = defalut;
      print(csvbkup.item25.keyword3);
      expect(csvbkup.item25.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00323_element_check_00299 **********\n\n");
    });

    test('00324_element_check_00300', () async {
      print("\n********** テスト実行：00324_element_check_00300 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.backup_day;
      print(csvbkup.item25.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.backup_day = testData1s;
      print(csvbkup.item25.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.backup_day = testData2s;
      print(csvbkup.item25.backup_day);
      expect(csvbkup.item25.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.backup_day = defalut;
      print(csvbkup.item25.backup_day);
      expect(csvbkup.item25.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00324_element_check_00300 **********\n\n");
    });

    test('00325_element_check_00301', () async {
      print("\n********** テスト実行：00325_element_check_00301 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item25.select_dsp;
      print(csvbkup.item25.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item25.select_dsp = testData1;
      print(csvbkup.item25.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item25.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item25.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item25.select_dsp = testData2;
      print(csvbkup.item25.select_dsp);
      expect(csvbkup.item25.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item25.select_dsp = defalut;
      print(csvbkup.item25.select_dsp);
      expect(csvbkup.item25.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item25.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00325_element_check_00301 **********\n\n");
    });

    test('00326_element_check_00302', () async {
      print("\n********** テスト実行：00326_element_check_00302 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.onoff;
      print(csvbkup.item26.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.onoff = testData1;
      print(csvbkup.item26.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.onoff = testData2;
      print(csvbkup.item26.onoff);
      expect(csvbkup.item26.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.onoff = defalut;
      print(csvbkup.item26.onoff);
      expect(csvbkup.item26.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00326_element_check_00302 **********\n\n");
    });

    test('00327_element_check_00303', () async {
      print("\n********** テスト実行：00327_element_check_00303 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.page;
      print(csvbkup.item26.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.page = testData1;
      print(csvbkup.item26.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.page = testData2;
      print(csvbkup.item26.page);
      expect(csvbkup.item26.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.page = defalut;
      print(csvbkup.item26.page);
      expect(csvbkup.item26.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00327_element_check_00303 **********\n\n");
    });

    test('00328_element_check_00304', () async {
      print("\n********** テスト実行：00328_element_check_00304 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.position;
      print(csvbkup.item26.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.position = testData1;
      print(csvbkup.item26.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.position = testData2;
      print(csvbkup.item26.position);
      expect(csvbkup.item26.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.position = defalut;
      print(csvbkup.item26.position);
      expect(csvbkup.item26.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00328_element_check_00304 **********\n\n");
    });

    test('00329_element_check_00305', () async {
      print("\n********** テスト実行：00329_element_check_00305 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.table1;
      print(csvbkup.item26.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.table1 = testData1s;
      print(csvbkup.item26.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.table1 = testData2s;
      print(csvbkup.item26.table1);
      expect(csvbkup.item26.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.table1 = defalut;
      print(csvbkup.item26.table1);
      expect(csvbkup.item26.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00329_element_check_00305 **********\n\n");
    });

    test('00330_element_check_00306', () async {
      print("\n********** テスト実行：00330_element_check_00306 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.total;
      print(csvbkup.item26.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.total = testData1;
      print(csvbkup.item26.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.total = testData2;
      print(csvbkup.item26.total);
      expect(csvbkup.item26.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.total = defalut;
      print(csvbkup.item26.total);
      expect(csvbkup.item26.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00330_element_check_00306 **********\n\n");
    });

    test('00331_element_check_00307', () async {
      print("\n********** テスト実行：00331_element_check_00307 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.t_exe1;
      print(csvbkup.item26.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.t_exe1 = testData1s;
      print(csvbkup.item26.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.t_exe1 = testData2s;
      print(csvbkup.item26.t_exe1);
      expect(csvbkup.item26.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.t_exe1 = defalut;
      print(csvbkup.item26.t_exe1);
      expect(csvbkup.item26.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00331_element_check_00307 **********\n\n");
    });

    test('00332_element_check_00308', () async {
      print("\n********** テスト実行：00332_element_check_00308 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.t_exe2;
      print(csvbkup.item26.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.t_exe2 = testData1s;
      print(csvbkup.item26.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.t_exe2 = testData2s;
      print(csvbkup.item26.t_exe2);
      expect(csvbkup.item26.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.t_exe2 = defalut;
      print(csvbkup.item26.t_exe2);
      expect(csvbkup.item26.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00332_element_check_00308 **********\n\n");
    });

    test('00333_element_check_00309', () async {
      print("\n********** テスト実行：00333_element_check_00309 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.section;
      print(csvbkup.item26.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.section = testData1s;
      print(csvbkup.item26.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.section = testData2s;
      print(csvbkup.item26.section);
      expect(csvbkup.item26.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.section = defalut;
      print(csvbkup.item26.section);
      expect(csvbkup.item26.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00333_element_check_00309 **********\n\n");
    });

    test('00334_element_check_00310', () async {
      print("\n********** テスト実行：00334_element_check_00310 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.keyword;
      print(csvbkup.item26.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.keyword = testData1s;
      print(csvbkup.item26.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.keyword = testData2s;
      print(csvbkup.item26.keyword);
      expect(csvbkup.item26.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.keyword = defalut;
      print(csvbkup.item26.keyword);
      expect(csvbkup.item26.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00334_element_check_00310 **********\n\n");
    });

    test('00335_element_check_00311', () async {
      print("\n********** テスト実行：00335_element_check_00311 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.keyword2;
      print(csvbkup.item26.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.keyword2 = testData1s;
      print(csvbkup.item26.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.keyword2 = testData2s;
      print(csvbkup.item26.keyword2);
      expect(csvbkup.item26.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.keyword2 = defalut;
      print(csvbkup.item26.keyword2);
      expect(csvbkup.item26.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00335_element_check_00311 **********\n\n");
    });

    test('00336_element_check_00312', () async {
      print("\n********** テスト実行：00336_element_check_00312 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.keyword3;
      print(csvbkup.item26.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.keyword3 = testData1s;
      print(csvbkup.item26.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.keyword3 = testData2s;
      print(csvbkup.item26.keyword3);
      expect(csvbkup.item26.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.keyword3 = defalut;
      print(csvbkup.item26.keyword3);
      expect(csvbkup.item26.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00336_element_check_00312 **********\n\n");
    });

    test('00337_element_check_00313', () async {
      print("\n********** テスト実行：00337_element_check_00313 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.backup_day;
      print(csvbkup.item26.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.backup_day = testData1s;
      print(csvbkup.item26.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.backup_day = testData2s;
      print(csvbkup.item26.backup_day);
      expect(csvbkup.item26.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.backup_day = defalut;
      print(csvbkup.item26.backup_day);
      expect(csvbkup.item26.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00337_element_check_00313 **********\n\n");
    });

    test('00338_element_check_00314', () async {
      print("\n********** テスト実行：00338_element_check_00314 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item26.select_dsp;
      print(csvbkup.item26.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item26.select_dsp = testData1;
      print(csvbkup.item26.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item26.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item26.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item26.select_dsp = testData2;
      print(csvbkup.item26.select_dsp);
      expect(csvbkup.item26.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item26.select_dsp = defalut;
      print(csvbkup.item26.select_dsp);
      expect(csvbkup.item26.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item26.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00338_element_check_00314 **********\n\n");
    });

    test('00339_element_check_00315', () async {
      print("\n********** テスト実行：00339_element_check_00315 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.onoff;
      print(csvbkup.item27.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.onoff = testData1;
      print(csvbkup.item27.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.onoff = testData2;
      print(csvbkup.item27.onoff);
      expect(csvbkup.item27.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.onoff = defalut;
      print(csvbkup.item27.onoff);
      expect(csvbkup.item27.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00339_element_check_00315 **********\n\n");
    });

    test('00340_element_check_00316', () async {
      print("\n********** テスト実行：00340_element_check_00316 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.page;
      print(csvbkup.item27.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.page = testData1;
      print(csvbkup.item27.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.page = testData2;
      print(csvbkup.item27.page);
      expect(csvbkup.item27.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.page = defalut;
      print(csvbkup.item27.page);
      expect(csvbkup.item27.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00340_element_check_00316 **********\n\n");
    });

    test('00341_element_check_00317', () async {
      print("\n********** テスト実行：00341_element_check_00317 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.position;
      print(csvbkup.item27.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.position = testData1;
      print(csvbkup.item27.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.position = testData2;
      print(csvbkup.item27.position);
      expect(csvbkup.item27.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.position = defalut;
      print(csvbkup.item27.position);
      expect(csvbkup.item27.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00341_element_check_00317 **********\n\n");
    });

    test('00342_element_check_00318', () async {
      print("\n********** テスト実行：00342_element_check_00318 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.table1;
      print(csvbkup.item27.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.table1 = testData1s;
      print(csvbkup.item27.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.table1 = testData2s;
      print(csvbkup.item27.table1);
      expect(csvbkup.item27.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.table1 = defalut;
      print(csvbkup.item27.table1);
      expect(csvbkup.item27.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00342_element_check_00318 **********\n\n");
    });

    test('00343_element_check_00319', () async {
      print("\n********** テスト実行：00343_element_check_00319 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.total;
      print(csvbkup.item27.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.total = testData1;
      print(csvbkup.item27.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.total = testData2;
      print(csvbkup.item27.total);
      expect(csvbkup.item27.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.total = defalut;
      print(csvbkup.item27.total);
      expect(csvbkup.item27.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00343_element_check_00319 **********\n\n");
    });

    test('00344_element_check_00320', () async {
      print("\n********** テスト実行：00344_element_check_00320 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.t_exe1;
      print(csvbkup.item27.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.t_exe1 = testData1s;
      print(csvbkup.item27.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.t_exe1 = testData2s;
      print(csvbkup.item27.t_exe1);
      expect(csvbkup.item27.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.t_exe1 = defalut;
      print(csvbkup.item27.t_exe1);
      expect(csvbkup.item27.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00344_element_check_00320 **********\n\n");
    });

    test('00345_element_check_00321', () async {
      print("\n********** テスト実行：00345_element_check_00321 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.t_exe2;
      print(csvbkup.item27.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.t_exe2 = testData1s;
      print(csvbkup.item27.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.t_exe2 = testData2s;
      print(csvbkup.item27.t_exe2);
      expect(csvbkup.item27.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.t_exe2 = defalut;
      print(csvbkup.item27.t_exe2);
      expect(csvbkup.item27.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00345_element_check_00321 **********\n\n");
    });

    test('00346_element_check_00322', () async {
      print("\n********** テスト実行：00346_element_check_00322 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.section;
      print(csvbkup.item27.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.section = testData1s;
      print(csvbkup.item27.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.section = testData2s;
      print(csvbkup.item27.section);
      expect(csvbkup.item27.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.section = defalut;
      print(csvbkup.item27.section);
      expect(csvbkup.item27.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00346_element_check_00322 **********\n\n");
    });

    test('00347_element_check_00323', () async {
      print("\n********** テスト実行：00347_element_check_00323 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.keyword;
      print(csvbkup.item27.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.keyword = testData1s;
      print(csvbkup.item27.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.keyword = testData2s;
      print(csvbkup.item27.keyword);
      expect(csvbkup.item27.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.keyword = defalut;
      print(csvbkup.item27.keyword);
      expect(csvbkup.item27.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00347_element_check_00323 **********\n\n");
    });

    test('00348_element_check_00324', () async {
      print("\n********** テスト実行：00348_element_check_00324 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.keyword2;
      print(csvbkup.item27.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.keyword2 = testData1s;
      print(csvbkup.item27.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.keyword2 = testData2s;
      print(csvbkup.item27.keyword2);
      expect(csvbkup.item27.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.keyword2 = defalut;
      print(csvbkup.item27.keyword2);
      expect(csvbkup.item27.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00348_element_check_00324 **********\n\n");
    });

    test('00349_element_check_00325', () async {
      print("\n********** テスト実行：00349_element_check_00325 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.keyword3;
      print(csvbkup.item27.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.keyword3 = testData1s;
      print(csvbkup.item27.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.keyword3 = testData2s;
      print(csvbkup.item27.keyword3);
      expect(csvbkup.item27.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.keyword3 = defalut;
      print(csvbkup.item27.keyword3);
      expect(csvbkup.item27.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00349_element_check_00325 **********\n\n");
    });

    test('00350_element_check_00326', () async {
      print("\n********** テスト実行：00350_element_check_00326 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.backup_day;
      print(csvbkup.item27.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.backup_day = testData1s;
      print(csvbkup.item27.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.backup_day = testData2s;
      print(csvbkup.item27.backup_day);
      expect(csvbkup.item27.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.backup_day = defalut;
      print(csvbkup.item27.backup_day);
      expect(csvbkup.item27.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00350_element_check_00326 **********\n\n");
    });

    test('00351_element_check_00327', () async {
      print("\n********** テスト実行：00351_element_check_00327 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item27.select_dsp;
      print(csvbkup.item27.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item27.select_dsp = testData1;
      print(csvbkup.item27.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item27.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item27.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item27.select_dsp = testData2;
      print(csvbkup.item27.select_dsp);
      expect(csvbkup.item27.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item27.select_dsp = defalut;
      print(csvbkup.item27.select_dsp);
      expect(csvbkup.item27.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item27.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00351_element_check_00327 **********\n\n");
    });

    test('00352_element_check_00328', () async {
      print("\n********** テスト実行：00352_element_check_00328 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.onoff;
      print(csvbkup.item28.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.onoff = testData1;
      print(csvbkup.item28.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.onoff = testData2;
      print(csvbkup.item28.onoff);
      expect(csvbkup.item28.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.onoff = defalut;
      print(csvbkup.item28.onoff);
      expect(csvbkup.item28.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00352_element_check_00328 **********\n\n");
    });

    test('00353_element_check_00329', () async {
      print("\n********** テスト実行：00353_element_check_00329 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.page;
      print(csvbkup.item28.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.page = testData1;
      print(csvbkup.item28.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.page = testData2;
      print(csvbkup.item28.page);
      expect(csvbkup.item28.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.page = defalut;
      print(csvbkup.item28.page);
      expect(csvbkup.item28.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00353_element_check_00329 **********\n\n");
    });

    test('00354_element_check_00330', () async {
      print("\n********** テスト実行：00354_element_check_00330 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.position;
      print(csvbkup.item28.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.position = testData1;
      print(csvbkup.item28.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.position = testData2;
      print(csvbkup.item28.position);
      expect(csvbkup.item28.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.position = defalut;
      print(csvbkup.item28.position);
      expect(csvbkup.item28.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00354_element_check_00330 **********\n\n");
    });

    test('00355_element_check_00331', () async {
      print("\n********** テスト実行：00355_element_check_00331 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.table1;
      print(csvbkup.item28.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.table1 = testData1s;
      print(csvbkup.item28.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.table1 = testData2s;
      print(csvbkup.item28.table1);
      expect(csvbkup.item28.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.table1 = defalut;
      print(csvbkup.item28.table1);
      expect(csvbkup.item28.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00355_element_check_00331 **********\n\n");
    });

    test('00356_element_check_00332', () async {
      print("\n********** テスト実行：00356_element_check_00332 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.total;
      print(csvbkup.item28.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.total = testData1;
      print(csvbkup.item28.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.total = testData2;
      print(csvbkup.item28.total);
      expect(csvbkup.item28.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.total = defalut;
      print(csvbkup.item28.total);
      expect(csvbkup.item28.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00356_element_check_00332 **********\n\n");
    });

    test('00357_element_check_00333', () async {
      print("\n********** テスト実行：00357_element_check_00333 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.t_exe1;
      print(csvbkup.item28.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.t_exe1 = testData1s;
      print(csvbkup.item28.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.t_exe1 = testData2s;
      print(csvbkup.item28.t_exe1);
      expect(csvbkup.item28.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.t_exe1 = defalut;
      print(csvbkup.item28.t_exe1);
      expect(csvbkup.item28.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00357_element_check_00333 **********\n\n");
    });

    test('00358_element_check_00334', () async {
      print("\n********** テスト実行：00358_element_check_00334 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.t_exe2;
      print(csvbkup.item28.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.t_exe2 = testData1s;
      print(csvbkup.item28.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.t_exe2 = testData2s;
      print(csvbkup.item28.t_exe2);
      expect(csvbkup.item28.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.t_exe2 = defalut;
      print(csvbkup.item28.t_exe2);
      expect(csvbkup.item28.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00358_element_check_00334 **********\n\n");
    });

    test('00359_element_check_00335', () async {
      print("\n********** テスト実行：00359_element_check_00335 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.t_exe3;
      print(csvbkup.item28.t_exe3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.t_exe3 = testData1s;
      print(csvbkup.item28.t_exe3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.t_exe3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.t_exe3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.t_exe3 = testData2s;
      print(csvbkup.item28.t_exe3);
      expect(csvbkup.item28.t_exe3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.t_exe3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.t_exe3 = defalut;
      print(csvbkup.item28.t_exe3);
      expect(csvbkup.item28.t_exe3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.t_exe3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00359_element_check_00335 **********\n\n");
    });

    test('00360_element_check_00336', () async {
      print("\n********** テスト実行：00360_element_check_00336 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.t_exe4;
      print(csvbkup.item28.t_exe4);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.t_exe4 = testData1s;
      print(csvbkup.item28.t_exe4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.t_exe4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.t_exe4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.t_exe4 = testData2s;
      print(csvbkup.item28.t_exe4);
      expect(csvbkup.item28.t_exe4 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.t_exe4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.t_exe4 = defalut;
      print(csvbkup.item28.t_exe4);
      expect(csvbkup.item28.t_exe4 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.t_exe4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00360_element_check_00336 **********\n\n");
    });

    test('00361_element_check_00337', () async {
      print("\n********** テスト実行：00361_element_check_00337 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.section;
      print(csvbkup.item28.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.section = testData1s;
      print(csvbkup.item28.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.section = testData2s;
      print(csvbkup.item28.section);
      expect(csvbkup.item28.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.section = defalut;
      print(csvbkup.item28.section);
      expect(csvbkup.item28.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00361_element_check_00337 **********\n\n");
    });

    test('00362_element_check_00338', () async {
      print("\n********** テスト実行：00362_element_check_00338 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.keyword;
      print(csvbkup.item28.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.keyword = testData1s;
      print(csvbkup.item28.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.keyword = testData2s;
      print(csvbkup.item28.keyword);
      expect(csvbkup.item28.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.keyword = defalut;
      print(csvbkup.item28.keyword);
      expect(csvbkup.item28.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00362_element_check_00338 **********\n\n");
    });

    test('00363_element_check_00339', () async {
      print("\n********** テスト実行：00363_element_check_00339 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.keyword2;
      print(csvbkup.item28.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.keyword2 = testData1s;
      print(csvbkup.item28.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.keyword2 = testData2s;
      print(csvbkup.item28.keyword2);
      expect(csvbkup.item28.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.keyword2 = defalut;
      print(csvbkup.item28.keyword2);
      expect(csvbkup.item28.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00363_element_check_00339 **********\n\n");
    });

    test('00364_element_check_00340', () async {
      print("\n********** テスト実行：00364_element_check_00340 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.keyword3;
      print(csvbkup.item28.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.keyword3 = testData1s;
      print(csvbkup.item28.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.keyword3 = testData2s;
      print(csvbkup.item28.keyword3);
      expect(csvbkup.item28.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.keyword3 = defalut;
      print(csvbkup.item28.keyword3);
      expect(csvbkup.item28.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00364_element_check_00340 **********\n\n");
    });

    test('00365_element_check_00341', () async {
      print("\n********** テスト実行：00365_element_check_00341 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.backup_day;
      print(csvbkup.item28.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.backup_day = testData1s;
      print(csvbkup.item28.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.backup_day = testData2s;
      print(csvbkup.item28.backup_day);
      expect(csvbkup.item28.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.backup_day = defalut;
      print(csvbkup.item28.backup_day);
      expect(csvbkup.item28.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00365_element_check_00341 **********\n\n");
    });

    test('00366_element_check_00342', () async {
      print("\n********** テスト実行：00366_element_check_00342 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item28.select_dsp;
      print(csvbkup.item28.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item28.select_dsp = testData1;
      print(csvbkup.item28.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item28.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item28.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item28.select_dsp = testData2;
      print(csvbkup.item28.select_dsp);
      expect(csvbkup.item28.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item28.select_dsp = defalut;
      print(csvbkup.item28.select_dsp);
      expect(csvbkup.item28.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item28.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00366_element_check_00342 **********\n\n");
    });

    test('00367_element_check_00343', () async {
      print("\n********** テスト実行：00367_element_check_00343 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.onoff;
      print(csvbkup.item29.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.onoff = testData1;
      print(csvbkup.item29.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.onoff = testData2;
      print(csvbkup.item29.onoff);
      expect(csvbkup.item29.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.onoff = defalut;
      print(csvbkup.item29.onoff);
      expect(csvbkup.item29.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00367_element_check_00343 **********\n\n");
    });

    test('00368_element_check_00344', () async {
      print("\n********** テスト実行：00368_element_check_00344 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.page;
      print(csvbkup.item29.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.page = testData1;
      print(csvbkup.item29.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.page = testData2;
      print(csvbkup.item29.page);
      expect(csvbkup.item29.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.page = defalut;
      print(csvbkup.item29.page);
      expect(csvbkup.item29.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00368_element_check_00344 **********\n\n");
    });

    test('00369_element_check_00345', () async {
      print("\n********** テスト実行：00369_element_check_00345 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.position;
      print(csvbkup.item29.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.position = testData1;
      print(csvbkup.item29.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.position = testData2;
      print(csvbkup.item29.position);
      expect(csvbkup.item29.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.position = defalut;
      print(csvbkup.item29.position);
      expect(csvbkup.item29.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00369_element_check_00345 **********\n\n");
    });

    test('00370_element_check_00346', () async {
      print("\n********** テスト実行：00370_element_check_00346 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.table1;
      print(csvbkup.item29.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.table1 = testData1s;
      print(csvbkup.item29.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.table1 = testData2s;
      print(csvbkup.item29.table1);
      expect(csvbkup.item29.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.table1 = defalut;
      print(csvbkup.item29.table1);
      expect(csvbkup.item29.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00370_element_check_00346 **********\n\n");
    });

    test('00371_element_check_00347', () async {
      print("\n********** テスト実行：00371_element_check_00347 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.total;
      print(csvbkup.item29.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.total = testData1;
      print(csvbkup.item29.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.total = testData2;
      print(csvbkup.item29.total);
      expect(csvbkup.item29.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.total = defalut;
      print(csvbkup.item29.total);
      expect(csvbkup.item29.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00371_element_check_00347 **********\n\n");
    });

    test('00372_element_check_00348', () async {
      print("\n********** テスト実行：00372_element_check_00348 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.t_exe1;
      print(csvbkup.item29.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.t_exe1 = testData1s;
      print(csvbkup.item29.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.t_exe1 = testData2s;
      print(csvbkup.item29.t_exe1);
      expect(csvbkup.item29.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.t_exe1 = defalut;
      print(csvbkup.item29.t_exe1);
      expect(csvbkup.item29.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00372_element_check_00348 **********\n\n");
    });

    test('00373_element_check_00349', () async {
      print("\n********** テスト実行：00373_element_check_00349 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.section;
      print(csvbkup.item29.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.section = testData1s;
      print(csvbkup.item29.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.section = testData2s;
      print(csvbkup.item29.section);
      expect(csvbkup.item29.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.section = defalut;
      print(csvbkup.item29.section);
      expect(csvbkup.item29.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00373_element_check_00349 **********\n\n");
    });

    test('00374_element_check_00350', () async {
      print("\n********** テスト実行：00374_element_check_00350 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.keyword;
      print(csvbkup.item29.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.keyword = testData1s;
      print(csvbkup.item29.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.keyword = testData2s;
      print(csvbkup.item29.keyword);
      expect(csvbkup.item29.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.keyword = defalut;
      print(csvbkup.item29.keyword);
      expect(csvbkup.item29.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00374_element_check_00350 **********\n\n");
    });

    test('00375_element_check_00351', () async {
      print("\n********** テスト実行：00375_element_check_00351 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.keyword2;
      print(csvbkup.item29.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.keyword2 = testData1s;
      print(csvbkup.item29.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.keyword2 = testData2s;
      print(csvbkup.item29.keyword2);
      expect(csvbkup.item29.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.keyword2 = defalut;
      print(csvbkup.item29.keyword2);
      expect(csvbkup.item29.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00375_element_check_00351 **********\n\n");
    });

    test('00376_element_check_00352', () async {
      print("\n********** テスト実行：00376_element_check_00352 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.keyword3;
      print(csvbkup.item29.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.keyword3 = testData1s;
      print(csvbkup.item29.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.keyword3 = testData2s;
      print(csvbkup.item29.keyword3);
      expect(csvbkup.item29.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.keyword3 = defalut;
      print(csvbkup.item29.keyword3);
      expect(csvbkup.item29.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00376_element_check_00352 **********\n\n");
    });

    test('00377_element_check_00353', () async {
      print("\n********** テスト実行：00377_element_check_00353 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.backup_day;
      print(csvbkup.item29.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.backup_day = testData1s;
      print(csvbkup.item29.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.backup_day = testData2s;
      print(csvbkup.item29.backup_day);
      expect(csvbkup.item29.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.backup_day = defalut;
      print(csvbkup.item29.backup_day);
      expect(csvbkup.item29.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00377_element_check_00353 **********\n\n");
    });

    test('00378_element_check_00354', () async {
      print("\n********** テスト実行：00378_element_check_00354 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item29.select_dsp;
      print(csvbkup.item29.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item29.select_dsp = testData1;
      print(csvbkup.item29.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item29.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item29.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item29.select_dsp = testData2;
      print(csvbkup.item29.select_dsp);
      expect(csvbkup.item29.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item29.select_dsp = defalut;
      print(csvbkup.item29.select_dsp);
      expect(csvbkup.item29.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item29.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00378_element_check_00354 **********\n\n");
    });

    test('00379_element_check_00355', () async {
      print("\n********** テスト実行：00379_element_check_00355 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.onoff;
      print(csvbkup.item30.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.onoff = testData1;
      print(csvbkup.item30.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.onoff = testData2;
      print(csvbkup.item30.onoff);
      expect(csvbkup.item30.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.onoff = defalut;
      print(csvbkup.item30.onoff);
      expect(csvbkup.item30.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00379_element_check_00355 **********\n\n");
    });

    test('00380_element_check_00356', () async {
      print("\n********** テスト実行：00380_element_check_00356 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.page;
      print(csvbkup.item30.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.page = testData1;
      print(csvbkup.item30.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.page = testData2;
      print(csvbkup.item30.page);
      expect(csvbkup.item30.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.page = defalut;
      print(csvbkup.item30.page);
      expect(csvbkup.item30.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00380_element_check_00356 **********\n\n");
    });

    test('00381_element_check_00357', () async {
      print("\n********** テスト実行：00381_element_check_00357 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.position;
      print(csvbkup.item30.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.position = testData1;
      print(csvbkup.item30.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.position = testData2;
      print(csvbkup.item30.position);
      expect(csvbkup.item30.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.position = defalut;
      print(csvbkup.item30.position);
      expect(csvbkup.item30.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00381_element_check_00357 **********\n\n");
    });

    test('00382_element_check_00358', () async {
      print("\n********** テスト実行：00382_element_check_00358 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.table1;
      print(csvbkup.item30.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.table1 = testData1s;
      print(csvbkup.item30.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.table1 = testData2s;
      print(csvbkup.item30.table1);
      expect(csvbkup.item30.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.table1 = defalut;
      print(csvbkup.item30.table1);
      expect(csvbkup.item30.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00382_element_check_00358 **********\n\n");
    });

    test('00383_element_check_00359', () async {
      print("\n********** テスト実行：00383_element_check_00359 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.total;
      print(csvbkup.item30.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.total = testData1;
      print(csvbkup.item30.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.total = testData2;
      print(csvbkup.item30.total);
      expect(csvbkup.item30.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.total = defalut;
      print(csvbkup.item30.total);
      expect(csvbkup.item30.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00383_element_check_00359 **********\n\n");
    });

    test('00384_element_check_00360', () async {
      print("\n********** テスト実行：00384_element_check_00360 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.t_exe1;
      print(csvbkup.item30.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.t_exe1 = testData1s;
      print(csvbkup.item30.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.t_exe1 = testData2s;
      print(csvbkup.item30.t_exe1);
      expect(csvbkup.item30.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.t_exe1 = defalut;
      print(csvbkup.item30.t_exe1);
      expect(csvbkup.item30.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00384_element_check_00360 **********\n\n");
    });

    test('00385_element_check_00361', () async {
      print("\n********** テスト実行：00385_element_check_00361 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.section;
      print(csvbkup.item30.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.section = testData1s;
      print(csvbkup.item30.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.section = testData2s;
      print(csvbkup.item30.section);
      expect(csvbkup.item30.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.section = defalut;
      print(csvbkup.item30.section);
      expect(csvbkup.item30.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00385_element_check_00361 **********\n\n");
    });

    test('00386_element_check_00362', () async {
      print("\n********** テスト実行：00386_element_check_00362 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.keyword;
      print(csvbkup.item30.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.keyword = testData1s;
      print(csvbkup.item30.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.keyword = testData2s;
      print(csvbkup.item30.keyword);
      expect(csvbkup.item30.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.keyword = defalut;
      print(csvbkup.item30.keyword);
      expect(csvbkup.item30.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00386_element_check_00362 **********\n\n");
    });

    test('00387_element_check_00363', () async {
      print("\n********** テスト実行：00387_element_check_00363 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.keyword2;
      print(csvbkup.item30.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.keyword2 = testData1s;
      print(csvbkup.item30.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.keyword2 = testData2s;
      print(csvbkup.item30.keyword2);
      expect(csvbkup.item30.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.keyword2 = defalut;
      print(csvbkup.item30.keyword2);
      expect(csvbkup.item30.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00387_element_check_00363 **********\n\n");
    });

    test('00388_element_check_00364', () async {
      print("\n********** テスト実行：00388_element_check_00364 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.backup_day;
      print(csvbkup.item30.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.backup_day = testData1s;
      print(csvbkup.item30.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.backup_day = testData2s;
      print(csvbkup.item30.backup_day);
      expect(csvbkup.item30.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.backup_day = defalut;
      print(csvbkup.item30.backup_day);
      expect(csvbkup.item30.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00388_element_check_00364 **********\n\n");
    });

    test('00389_element_check_00365', () async {
      print("\n********** テスト実行：00389_element_check_00365 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item30.select_dsp;
      print(csvbkup.item30.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item30.select_dsp = testData1;
      print(csvbkup.item30.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item30.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item30.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item30.select_dsp = testData2;
      print(csvbkup.item30.select_dsp);
      expect(csvbkup.item30.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item30.select_dsp = defalut;
      print(csvbkup.item30.select_dsp);
      expect(csvbkup.item30.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item30.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00389_element_check_00365 **********\n\n");
    });

    test('00390_element_check_00366', () async {
      print("\n********** テスト実行：00390_element_check_00366 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.onoff;
      print(csvbkup.item31.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.onoff = testData1;
      print(csvbkup.item31.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.onoff = testData2;
      print(csvbkup.item31.onoff);
      expect(csvbkup.item31.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.onoff = defalut;
      print(csvbkup.item31.onoff);
      expect(csvbkup.item31.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00390_element_check_00366 **********\n\n");
    });

    test('00391_element_check_00367', () async {
      print("\n********** テスト実行：00391_element_check_00367 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.page;
      print(csvbkup.item31.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.page = testData1;
      print(csvbkup.item31.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.page = testData2;
      print(csvbkup.item31.page);
      expect(csvbkup.item31.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.page = defalut;
      print(csvbkup.item31.page);
      expect(csvbkup.item31.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00391_element_check_00367 **********\n\n");
    });

    test('00392_element_check_00368', () async {
      print("\n********** テスト実行：00392_element_check_00368 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.position;
      print(csvbkup.item31.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.position = testData1;
      print(csvbkup.item31.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.position = testData2;
      print(csvbkup.item31.position);
      expect(csvbkup.item31.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.position = defalut;
      print(csvbkup.item31.position);
      expect(csvbkup.item31.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00392_element_check_00368 **********\n\n");
    });

    test('00393_element_check_00369', () async {
      print("\n********** テスト実行：00393_element_check_00369 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.table1;
      print(csvbkup.item31.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.table1 = testData1s;
      print(csvbkup.item31.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.table1 = testData2s;
      print(csvbkup.item31.table1);
      expect(csvbkup.item31.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.table1 = defalut;
      print(csvbkup.item31.table1);
      expect(csvbkup.item31.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00393_element_check_00369 **********\n\n");
    });

    test('00394_element_check_00370', () async {
      print("\n********** テスト実行：00394_element_check_00370 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.total;
      print(csvbkup.item31.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.total = testData1;
      print(csvbkup.item31.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.total = testData2;
      print(csvbkup.item31.total);
      expect(csvbkup.item31.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.total = defalut;
      print(csvbkup.item31.total);
      expect(csvbkup.item31.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00394_element_check_00370 **********\n\n");
    });

    test('00395_element_check_00371', () async {
      print("\n********** テスト実行：00395_element_check_00371 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.t_exe1;
      print(csvbkup.item31.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.t_exe1 = testData1s;
      print(csvbkup.item31.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.t_exe1 = testData2s;
      print(csvbkup.item31.t_exe1);
      expect(csvbkup.item31.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.t_exe1 = defalut;
      print(csvbkup.item31.t_exe1);
      expect(csvbkup.item31.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00395_element_check_00371 **********\n\n");
    });

    test('00396_element_check_00372', () async {
      print("\n********** テスト実行：00396_element_check_00372 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.section;
      print(csvbkup.item31.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.section = testData1s;
      print(csvbkup.item31.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.section = testData2s;
      print(csvbkup.item31.section);
      expect(csvbkup.item31.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.section = defalut;
      print(csvbkup.item31.section);
      expect(csvbkup.item31.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00396_element_check_00372 **********\n\n");
    });

    test('00397_element_check_00373', () async {
      print("\n********** テスト実行：00397_element_check_00373 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.keyword;
      print(csvbkup.item31.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.keyword = testData1s;
      print(csvbkup.item31.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.keyword = testData2s;
      print(csvbkup.item31.keyword);
      expect(csvbkup.item31.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.keyword = defalut;
      print(csvbkup.item31.keyword);
      expect(csvbkup.item31.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00397_element_check_00373 **********\n\n");
    });

    test('00398_element_check_00374', () async {
      print("\n********** テスト実行：00398_element_check_00374 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.keyword2;
      print(csvbkup.item31.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.keyword2 = testData1s;
      print(csvbkup.item31.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.keyword2 = testData2s;
      print(csvbkup.item31.keyword2);
      expect(csvbkup.item31.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.keyword2 = defalut;
      print(csvbkup.item31.keyword2);
      expect(csvbkup.item31.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00398_element_check_00374 **********\n\n");
    });

    test('00399_element_check_00375', () async {
      print("\n********** テスト実行：00399_element_check_00375 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.backup_day;
      print(csvbkup.item31.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.backup_day = testData1s;
      print(csvbkup.item31.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.backup_day = testData2s;
      print(csvbkup.item31.backup_day);
      expect(csvbkup.item31.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.backup_day = defalut;
      print(csvbkup.item31.backup_day);
      expect(csvbkup.item31.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00399_element_check_00375 **********\n\n");
    });

    test('00400_element_check_00376', () async {
      print("\n********** テスト実行：00400_element_check_00376 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item31.select_dsp;
      print(csvbkup.item31.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item31.select_dsp = testData1;
      print(csvbkup.item31.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item31.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item31.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item31.select_dsp = testData2;
      print(csvbkup.item31.select_dsp);
      expect(csvbkup.item31.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item31.select_dsp = defalut;
      print(csvbkup.item31.select_dsp);
      expect(csvbkup.item31.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item31.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00400_element_check_00376 **********\n\n");
    });

    test('00401_element_check_00377', () async {
      print("\n********** テスト実行：00401_element_check_00377 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.onoff;
      print(csvbkup.item32.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.onoff = testData1;
      print(csvbkup.item32.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.onoff = testData2;
      print(csvbkup.item32.onoff);
      expect(csvbkup.item32.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.onoff = defalut;
      print(csvbkup.item32.onoff);
      expect(csvbkup.item32.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00401_element_check_00377 **********\n\n");
    });

    test('00402_element_check_00378', () async {
      print("\n********** テスト実行：00402_element_check_00378 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.page;
      print(csvbkup.item32.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.page = testData1;
      print(csvbkup.item32.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.page = testData2;
      print(csvbkup.item32.page);
      expect(csvbkup.item32.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.page = defalut;
      print(csvbkup.item32.page);
      expect(csvbkup.item32.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00402_element_check_00378 **********\n\n");
    });

    test('00403_element_check_00379', () async {
      print("\n********** テスト実行：00403_element_check_00379 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.position;
      print(csvbkup.item32.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.position = testData1;
      print(csvbkup.item32.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.position = testData2;
      print(csvbkup.item32.position);
      expect(csvbkup.item32.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.position = defalut;
      print(csvbkup.item32.position);
      expect(csvbkup.item32.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00403_element_check_00379 **********\n\n");
    });

    test('00404_element_check_00380', () async {
      print("\n********** テスト実行：00404_element_check_00380 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.table1;
      print(csvbkup.item32.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.table1 = testData1s;
      print(csvbkup.item32.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.table1 = testData2s;
      print(csvbkup.item32.table1);
      expect(csvbkup.item32.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.table1 = defalut;
      print(csvbkup.item32.table1);
      expect(csvbkup.item32.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00404_element_check_00380 **********\n\n");
    });

    test('00405_element_check_00381', () async {
      print("\n********** テスト実行：00405_element_check_00381 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.total;
      print(csvbkup.item32.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.total = testData1;
      print(csvbkup.item32.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.total = testData2;
      print(csvbkup.item32.total);
      expect(csvbkup.item32.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.total = defalut;
      print(csvbkup.item32.total);
      expect(csvbkup.item32.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00405_element_check_00381 **********\n\n");
    });

    test('00406_element_check_00382', () async {
      print("\n********** テスト実行：00406_element_check_00382 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.t_exe1;
      print(csvbkup.item32.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.t_exe1 = testData1s;
      print(csvbkup.item32.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.t_exe1 = testData2s;
      print(csvbkup.item32.t_exe1);
      expect(csvbkup.item32.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.t_exe1 = defalut;
      print(csvbkup.item32.t_exe1);
      expect(csvbkup.item32.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00406_element_check_00382 **********\n\n");
    });

    test('00407_element_check_00383', () async {
      print("\n********** テスト実行：00407_element_check_00383 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.section;
      print(csvbkup.item32.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.section = testData1s;
      print(csvbkup.item32.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.section = testData2s;
      print(csvbkup.item32.section);
      expect(csvbkup.item32.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.section = defalut;
      print(csvbkup.item32.section);
      expect(csvbkup.item32.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00407_element_check_00383 **********\n\n");
    });

    test('00408_element_check_00384', () async {
      print("\n********** テスト実行：00408_element_check_00384 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.keyword;
      print(csvbkup.item32.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.keyword = testData1s;
      print(csvbkup.item32.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.keyword = testData2s;
      print(csvbkup.item32.keyword);
      expect(csvbkup.item32.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.keyword = defalut;
      print(csvbkup.item32.keyword);
      expect(csvbkup.item32.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00408_element_check_00384 **********\n\n");
    });

    test('00409_element_check_00385', () async {
      print("\n********** テスト実行：00409_element_check_00385 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.keyword2;
      print(csvbkup.item32.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.keyword2 = testData1s;
      print(csvbkup.item32.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.keyword2 = testData2s;
      print(csvbkup.item32.keyword2);
      expect(csvbkup.item32.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.keyword2 = defalut;
      print(csvbkup.item32.keyword2);
      expect(csvbkup.item32.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00409_element_check_00385 **********\n\n");
    });

    test('00410_element_check_00386', () async {
      print("\n********** テスト実行：00410_element_check_00386 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.backup_day;
      print(csvbkup.item32.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.backup_day = testData1s;
      print(csvbkup.item32.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.backup_day = testData2s;
      print(csvbkup.item32.backup_day);
      expect(csvbkup.item32.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.backup_day = defalut;
      print(csvbkup.item32.backup_day);
      expect(csvbkup.item32.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00410_element_check_00386 **********\n\n");
    });

    test('00411_element_check_00387', () async {
      print("\n********** テスト実行：00411_element_check_00387 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item32.select_dsp;
      print(csvbkup.item32.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item32.select_dsp = testData1;
      print(csvbkup.item32.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item32.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item32.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item32.select_dsp = testData2;
      print(csvbkup.item32.select_dsp);
      expect(csvbkup.item32.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item32.select_dsp = defalut;
      print(csvbkup.item32.select_dsp);
      expect(csvbkup.item32.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item32.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00411_element_check_00387 **********\n\n");
    });

    test('00412_element_check_00388', () async {
      print("\n********** テスト実行：00412_element_check_00388 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.onoff;
      print(csvbkup.item33.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.onoff = testData1;
      print(csvbkup.item33.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.onoff = testData2;
      print(csvbkup.item33.onoff);
      expect(csvbkup.item33.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.onoff = defalut;
      print(csvbkup.item33.onoff);
      expect(csvbkup.item33.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00412_element_check_00388 **********\n\n");
    });

    test('00413_element_check_00389', () async {
      print("\n********** テスト実行：00413_element_check_00389 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.page;
      print(csvbkup.item33.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.page = testData1;
      print(csvbkup.item33.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.page = testData2;
      print(csvbkup.item33.page);
      expect(csvbkup.item33.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.page = defalut;
      print(csvbkup.item33.page);
      expect(csvbkup.item33.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00413_element_check_00389 **********\n\n");
    });

    test('00414_element_check_00390', () async {
      print("\n********** テスト実行：00414_element_check_00390 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.position;
      print(csvbkup.item33.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.position = testData1;
      print(csvbkup.item33.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.position = testData2;
      print(csvbkup.item33.position);
      expect(csvbkup.item33.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.position = defalut;
      print(csvbkup.item33.position);
      expect(csvbkup.item33.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00414_element_check_00390 **********\n\n");
    });

    test('00415_element_check_00391', () async {
      print("\n********** テスト実行：00415_element_check_00391 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.table1;
      print(csvbkup.item33.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.table1 = testData1s;
      print(csvbkup.item33.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.table1 = testData2s;
      print(csvbkup.item33.table1);
      expect(csvbkup.item33.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.table1 = defalut;
      print(csvbkup.item33.table1);
      expect(csvbkup.item33.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00415_element_check_00391 **********\n\n");
    });

    test('00416_element_check_00392', () async {
      print("\n********** テスト実行：00416_element_check_00392 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.total;
      print(csvbkup.item33.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.total = testData1;
      print(csvbkup.item33.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.total = testData2;
      print(csvbkup.item33.total);
      expect(csvbkup.item33.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.total = defalut;
      print(csvbkup.item33.total);
      expect(csvbkup.item33.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00416_element_check_00392 **********\n\n");
    });

    test('00417_element_check_00393', () async {
      print("\n********** テスト実行：00417_element_check_00393 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.t_exe1;
      print(csvbkup.item33.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.t_exe1 = testData1s;
      print(csvbkup.item33.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.t_exe1 = testData2s;
      print(csvbkup.item33.t_exe1);
      expect(csvbkup.item33.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.t_exe1 = defalut;
      print(csvbkup.item33.t_exe1);
      expect(csvbkup.item33.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00417_element_check_00393 **********\n\n");
    });

    test('00418_element_check_00394', () async {
      print("\n********** テスト実行：00418_element_check_00394 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.section;
      print(csvbkup.item33.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.section = testData1s;
      print(csvbkup.item33.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.section = testData2s;
      print(csvbkup.item33.section);
      expect(csvbkup.item33.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.section = defalut;
      print(csvbkup.item33.section);
      expect(csvbkup.item33.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00418_element_check_00394 **********\n\n");
    });

    test('00419_element_check_00395', () async {
      print("\n********** テスト実行：00419_element_check_00395 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.keyword;
      print(csvbkup.item33.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.keyword = testData1s;
      print(csvbkup.item33.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.keyword = testData2s;
      print(csvbkup.item33.keyword);
      expect(csvbkup.item33.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.keyword = defalut;
      print(csvbkup.item33.keyword);
      expect(csvbkup.item33.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00419_element_check_00395 **********\n\n");
    });

    test('00420_element_check_00396', () async {
      print("\n********** テスト実行：00420_element_check_00396 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.keyword2;
      print(csvbkup.item33.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.keyword2 = testData1s;
      print(csvbkup.item33.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.keyword2 = testData2s;
      print(csvbkup.item33.keyword2);
      expect(csvbkup.item33.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.keyword2 = defalut;
      print(csvbkup.item33.keyword2);
      expect(csvbkup.item33.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00420_element_check_00396 **********\n\n");
    });

    test('00421_element_check_00397', () async {
      print("\n********** テスト実行：00421_element_check_00397 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.backup_day;
      print(csvbkup.item33.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.backup_day = testData1s;
      print(csvbkup.item33.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.backup_day = testData2s;
      print(csvbkup.item33.backup_day);
      expect(csvbkup.item33.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.backup_day = defalut;
      print(csvbkup.item33.backup_day);
      expect(csvbkup.item33.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00421_element_check_00397 **********\n\n");
    });

    test('00422_element_check_00398', () async {
      print("\n********** テスト実行：00422_element_check_00398 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item33.select_dsp;
      print(csvbkup.item33.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item33.select_dsp = testData1;
      print(csvbkup.item33.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item33.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item33.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item33.select_dsp = testData2;
      print(csvbkup.item33.select_dsp);
      expect(csvbkup.item33.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item33.select_dsp = defalut;
      print(csvbkup.item33.select_dsp);
      expect(csvbkup.item33.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item33.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00422_element_check_00398 **********\n\n");
    });

    test('00423_element_check_00399', () async {
      print("\n********** テスト実行：00423_element_check_00399 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.onoff;
      print(csvbkup.item34.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.onoff = testData1;
      print(csvbkup.item34.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.onoff = testData2;
      print(csvbkup.item34.onoff);
      expect(csvbkup.item34.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.onoff = defalut;
      print(csvbkup.item34.onoff);
      expect(csvbkup.item34.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00423_element_check_00399 **********\n\n");
    });

    test('00424_element_check_00400', () async {
      print("\n********** テスト実行：00424_element_check_00400 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.page;
      print(csvbkup.item34.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.page = testData1;
      print(csvbkup.item34.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.page = testData2;
      print(csvbkup.item34.page);
      expect(csvbkup.item34.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.page = defalut;
      print(csvbkup.item34.page);
      expect(csvbkup.item34.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00424_element_check_00400 **********\n\n");
    });

    test('00425_element_check_00401', () async {
      print("\n********** テスト実行：00425_element_check_00401 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.position;
      print(csvbkup.item34.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.position = testData1;
      print(csvbkup.item34.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.position = testData2;
      print(csvbkup.item34.position);
      expect(csvbkup.item34.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.position = defalut;
      print(csvbkup.item34.position);
      expect(csvbkup.item34.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00425_element_check_00401 **********\n\n");
    });

    test('00426_element_check_00402', () async {
      print("\n********** テスト実行：00426_element_check_00402 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.table1;
      print(csvbkup.item34.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.table1 = testData1s;
      print(csvbkup.item34.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.table1 = testData2s;
      print(csvbkup.item34.table1);
      expect(csvbkup.item34.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.table1 = defalut;
      print(csvbkup.item34.table1);
      expect(csvbkup.item34.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00426_element_check_00402 **********\n\n");
    });

    test('00427_element_check_00403', () async {
      print("\n********** テスト実行：00427_element_check_00403 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.total;
      print(csvbkup.item34.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.total = testData1;
      print(csvbkup.item34.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.total = testData2;
      print(csvbkup.item34.total);
      expect(csvbkup.item34.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.total = defalut;
      print(csvbkup.item34.total);
      expect(csvbkup.item34.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00427_element_check_00403 **********\n\n");
    });

    test('00428_element_check_00404', () async {
      print("\n********** テスト実行：00428_element_check_00404 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.t_exe1;
      print(csvbkup.item34.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.t_exe1 = testData1s;
      print(csvbkup.item34.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.t_exe1 = testData2s;
      print(csvbkup.item34.t_exe1);
      expect(csvbkup.item34.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.t_exe1 = defalut;
      print(csvbkup.item34.t_exe1);
      expect(csvbkup.item34.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00428_element_check_00404 **********\n\n");
    });

    test('00429_element_check_00405', () async {
      print("\n********** テスト実行：00429_element_check_00405 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.section;
      print(csvbkup.item34.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.section = testData1s;
      print(csvbkup.item34.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.section = testData2s;
      print(csvbkup.item34.section);
      expect(csvbkup.item34.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.section = defalut;
      print(csvbkup.item34.section);
      expect(csvbkup.item34.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00429_element_check_00405 **********\n\n");
    });

    test('00430_element_check_00406', () async {
      print("\n********** テスト実行：00430_element_check_00406 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.keyword;
      print(csvbkup.item34.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.keyword = testData1s;
      print(csvbkup.item34.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.keyword = testData2s;
      print(csvbkup.item34.keyword);
      expect(csvbkup.item34.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.keyword = defalut;
      print(csvbkup.item34.keyword);
      expect(csvbkup.item34.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00430_element_check_00406 **********\n\n");
    });

    test('00431_element_check_00407', () async {
      print("\n********** テスト実行：00431_element_check_00407 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.keyword2;
      print(csvbkup.item34.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.keyword2 = testData1s;
      print(csvbkup.item34.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.keyword2 = testData2s;
      print(csvbkup.item34.keyword2);
      expect(csvbkup.item34.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.keyword2 = defalut;
      print(csvbkup.item34.keyword2);
      expect(csvbkup.item34.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00431_element_check_00407 **********\n\n");
    });

    test('00432_element_check_00408', () async {
      print("\n********** テスト実行：00432_element_check_00408 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.backup_day;
      print(csvbkup.item34.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.backup_day = testData1s;
      print(csvbkup.item34.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.backup_day = testData2s;
      print(csvbkup.item34.backup_day);
      expect(csvbkup.item34.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.backup_day = defalut;
      print(csvbkup.item34.backup_day);
      expect(csvbkup.item34.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00432_element_check_00408 **********\n\n");
    });

    test('00433_element_check_00409', () async {
      print("\n********** テスト実行：00433_element_check_00409 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item34.select_dsp;
      print(csvbkup.item34.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item34.select_dsp = testData1;
      print(csvbkup.item34.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item34.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item34.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item34.select_dsp = testData2;
      print(csvbkup.item34.select_dsp);
      expect(csvbkup.item34.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item34.select_dsp = defalut;
      print(csvbkup.item34.select_dsp);
      expect(csvbkup.item34.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item34.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00433_element_check_00409 **********\n\n");
    });

    test('00434_element_check_00410', () async {
      print("\n********** テスト実行：00434_element_check_00410 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.onoff;
      print(csvbkup.item35.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.onoff = testData1;
      print(csvbkup.item35.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.onoff = testData2;
      print(csvbkup.item35.onoff);
      expect(csvbkup.item35.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.onoff = defalut;
      print(csvbkup.item35.onoff);
      expect(csvbkup.item35.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00434_element_check_00410 **********\n\n");
    });

    test('00435_element_check_00411', () async {
      print("\n********** テスト実行：00435_element_check_00411 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.page;
      print(csvbkup.item35.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.page = testData1;
      print(csvbkup.item35.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.page = testData2;
      print(csvbkup.item35.page);
      expect(csvbkup.item35.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.page = defalut;
      print(csvbkup.item35.page);
      expect(csvbkup.item35.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00435_element_check_00411 **********\n\n");
    });

    test('00436_element_check_00412', () async {
      print("\n********** テスト実行：00436_element_check_00412 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.position;
      print(csvbkup.item35.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.position = testData1;
      print(csvbkup.item35.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.position = testData2;
      print(csvbkup.item35.position);
      expect(csvbkup.item35.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.position = defalut;
      print(csvbkup.item35.position);
      expect(csvbkup.item35.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00436_element_check_00412 **********\n\n");
    });

    test('00437_element_check_00413', () async {
      print("\n********** テスト実行：00437_element_check_00413 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.table1;
      print(csvbkup.item35.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.table1 = testData1s;
      print(csvbkup.item35.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.table1 = testData2s;
      print(csvbkup.item35.table1);
      expect(csvbkup.item35.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.table1 = defalut;
      print(csvbkup.item35.table1);
      expect(csvbkup.item35.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00437_element_check_00413 **********\n\n");
    });

    test('00438_element_check_00414', () async {
      print("\n********** テスト実行：00438_element_check_00414 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.total;
      print(csvbkup.item35.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.total = testData1;
      print(csvbkup.item35.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.total = testData2;
      print(csvbkup.item35.total);
      expect(csvbkup.item35.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.total = defalut;
      print(csvbkup.item35.total);
      expect(csvbkup.item35.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00438_element_check_00414 **********\n\n");
    });

    test('00439_element_check_00415', () async {
      print("\n********** テスト実行：00439_element_check_00415 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.t_exe1;
      print(csvbkup.item35.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.t_exe1 = testData1s;
      print(csvbkup.item35.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.t_exe1 = testData2s;
      print(csvbkup.item35.t_exe1);
      expect(csvbkup.item35.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.t_exe1 = defalut;
      print(csvbkup.item35.t_exe1);
      expect(csvbkup.item35.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00439_element_check_00415 **********\n\n");
    });

    test('00440_element_check_00416', () async {
      print("\n********** テスト実行：00440_element_check_00416 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.section;
      print(csvbkup.item35.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.section = testData1s;
      print(csvbkup.item35.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.section = testData2s;
      print(csvbkup.item35.section);
      expect(csvbkup.item35.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.section = defalut;
      print(csvbkup.item35.section);
      expect(csvbkup.item35.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00440_element_check_00416 **********\n\n");
    });

    test('00441_element_check_00417', () async {
      print("\n********** テスト実行：00441_element_check_00417 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.keyword;
      print(csvbkup.item35.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.keyword = testData1s;
      print(csvbkup.item35.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.keyword = testData2s;
      print(csvbkup.item35.keyword);
      expect(csvbkup.item35.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.keyword = defalut;
      print(csvbkup.item35.keyword);
      expect(csvbkup.item35.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00441_element_check_00417 **********\n\n");
    });

    test('00442_element_check_00418', () async {
      print("\n********** テスト実行：00442_element_check_00418 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.keyword2;
      print(csvbkup.item35.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.keyword2 = testData1s;
      print(csvbkup.item35.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.keyword2 = testData2s;
      print(csvbkup.item35.keyword2);
      expect(csvbkup.item35.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.keyword2 = defalut;
      print(csvbkup.item35.keyword2);
      expect(csvbkup.item35.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00442_element_check_00418 **********\n\n");
    });

    test('00443_element_check_00419', () async {
      print("\n********** テスト実行：00443_element_check_00419 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.backup_day;
      print(csvbkup.item35.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.backup_day = testData1s;
      print(csvbkup.item35.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.backup_day = testData2s;
      print(csvbkup.item35.backup_day);
      expect(csvbkup.item35.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.backup_day = defalut;
      print(csvbkup.item35.backup_day);
      expect(csvbkup.item35.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00443_element_check_00419 **********\n\n");
    });

    test('00444_element_check_00420', () async {
      print("\n********** テスト実行：00444_element_check_00420 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item35.select_dsp;
      print(csvbkup.item35.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item35.select_dsp = testData1;
      print(csvbkup.item35.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item35.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item35.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item35.select_dsp = testData2;
      print(csvbkup.item35.select_dsp);
      expect(csvbkup.item35.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item35.select_dsp = defalut;
      print(csvbkup.item35.select_dsp);
      expect(csvbkup.item35.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item35.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00444_element_check_00420 **********\n\n");
    });

    test('00445_element_check_00421', () async {
      print("\n********** テスト実行：00445_element_check_00421 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.onoff;
      print(csvbkup.item36.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.onoff = testData1;
      print(csvbkup.item36.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.onoff = testData2;
      print(csvbkup.item36.onoff);
      expect(csvbkup.item36.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.onoff = defalut;
      print(csvbkup.item36.onoff);
      expect(csvbkup.item36.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00445_element_check_00421 **********\n\n");
    });

    test('00446_element_check_00422', () async {
      print("\n********** テスト実行：00446_element_check_00422 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.page;
      print(csvbkup.item36.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.page = testData1;
      print(csvbkup.item36.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.page = testData2;
      print(csvbkup.item36.page);
      expect(csvbkup.item36.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.page = defalut;
      print(csvbkup.item36.page);
      expect(csvbkup.item36.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00446_element_check_00422 **********\n\n");
    });

    test('00447_element_check_00423', () async {
      print("\n********** テスト実行：00447_element_check_00423 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.position;
      print(csvbkup.item36.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.position = testData1;
      print(csvbkup.item36.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.position = testData2;
      print(csvbkup.item36.position);
      expect(csvbkup.item36.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.position = defalut;
      print(csvbkup.item36.position);
      expect(csvbkup.item36.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00447_element_check_00423 **********\n\n");
    });

    test('00448_element_check_00424', () async {
      print("\n********** テスト実行：00448_element_check_00424 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.table1;
      print(csvbkup.item36.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.table1 = testData1s;
      print(csvbkup.item36.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.table1 = testData2s;
      print(csvbkup.item36.table1);
      expect(csvbkup.item36.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.table1 = defalut;
      print(csvbkup.item36.table1);
      expect(csvbkup.item36.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00448_element_check_00424 **********\n\n");
    });

    test('00449_element_check_00425', () async {
      print("\n********** テスト実行：00449_element_check_00425 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.total;
      print(csvbkup.item36.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.total = testData1;
      print(csvbkup.item36.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.total = testData2;
      print(csvbkup.item36.total);
      expect(csvbkup.item36.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.total = defalut;
      print(csvbkup.item36.total);
      expect(csvbkup.item36.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00449_element_check_00425 **********\n\n");
    });

    test('00450_element_check_00426', () async {
      print("\n********** テスト実行：00450_element_check_00426 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.t_exe1;
      print(csvbkup.item36.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.t_exe1 = testData1s;
      print(csvbkup.item36.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.t_exe1 = testData2s;
      print(csvbkup.item36.t_exe1);
      expect(csvbkup.item36.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.t_exe1 = defalut;
      print(csvbkup.item36.t_exe1);
      expect(csvbkup.item36.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00450_element_check_00426 **********\n\n");
    });

    test('00451_element_check_00427', () async {
      print("\n********** テスト実行：00451_element_check_00427 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.section;
      print(csvbkup.item36.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.section = testData1s;
      print(csvbkup.item36.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.section = testData2s;
      print(csvbkup.item36.section);
      expect(csvbkup.item36.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.section = defalut;
      print(csvbkup.item36.section);
      expect(csvbkup.item36.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00451_element_check_00427 **********\n\n");
    });

    test('00452_element_check_00428', () async {
      print("\n********** テスト実行：00452_element_check_00428 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.keyword;
      print(csvbkup.item36.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.keyword = testData1s;
      print(csvbkup.item36.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.keyword = testData2s;
      print(csvbkup.item36.keyword);
      expect(csvbkup.item36.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.keyword = defalut;
      print(csvbkup.item36.keyword);
      expect(csvbkup.item36.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00452_element_check_00428 **********\n\n");
    });

    test('00453_element_check_00429', () async {
      print("\n********** テスト実行：00453_element_check_00429 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.keyword2;
      print(csvbkup.item36.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.keyword2 = testData1s;
      print(csvbkup.item36.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.keyword2 = testData2s;
      print(csvbkup.item36.keyword2);
      expect(csvbkup.item36.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.keyword2 = defalut;
      print(csvbkup.item36.keyword2);
      expect(csvbkup.item36.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00453_element_check_00429 **********\n\n");
    });

    test('00454_element_check_00430', () async {
      print("\n********** テスト実行：00454_element_check_00430 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.backup_day;
      print(csvbkup.item36.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.backup_day = testData1s;
      print(csvbkup.item36.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.backup_day = testData2s;
      print(csvbkup.item36.backup_day);
      expect(csvbkup.item36.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.backup_day = defalut;
      print(csvbkup.item36.backup_day);
      expect(csvbkup.item36.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00454_element_check_00430 **********\n\n");
    });

    test('00455_element_check_00431', () async {
      print("\n********** テスト実行：00455_element_check_00431 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item36.select_dsp;
      print(csvbkup.item36.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item36.select_dsp = testData1;
      print(csvbkup.item36.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item36.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item36.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item36.select_dsp = testData2;
      print(csvbkup.item36.select_dsp);
      expect(csvbkup.item36.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item36.select_dsp = defalut;
      print(csvbkup.item36.select_dsp);
      expect(csvbkup.item36.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item36.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00455_element_check_00431 **********\n\n");
    });

    test('00456_element_check_00432', () async {
      print("\n********** テスト実行：00456_element_check_00432 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.onoff;
      print(csvbkup.item37.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.onoff = testData1;
      print(csvbkup.item37.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.onoff = testData2;
      print(csvbkup.item37.onoff);
      expect(csvbkup.item37.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.onoff = defalut;
      print(csvbkup.item37.onoff);
      expect(csvbkup.item37.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00456_element_check_00432 **********\n\n");
    });

    test('00457_element_check_00433', () async {
      print("\n********** テスト実行：00457_element_check_00433 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.page;
      print(csvbkup.item37.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.page = testData1;
      print(csvbkup.item37.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.page = testData2;
      print(csvbkup.item37.page);
      expect(csvbkup.item37.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.page = defalut;
      print(csvbkup.item37.page);
      expect(csvbkup.item37.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00457_element_check_00433 **********\n\n");
    });

    test('00458_element_check_00434', () async {
      print("\n********** テスト実行：00458_element_check_00434 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.position;
      print(csvbkup.item37.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.position = testData1;
      print(csvbkup.item37.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.position = testData2;
      print(csvbkup.item37.position);
      expect(csvbkup.item37.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.position = defalut;
      print(csvbkup.item37.position);
      expect(csvbkup.item37.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00458_element_check_00434 **********\n\n");
    });

    test('00459_element_check_00435', () async {
      print("\n********** テスト実行：00459_element_check_00435 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.table1;
      print(csvbkup.item37.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.table1 = testData1s;
      print(csvbkup.item37.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.table1 = testData2s;
      print(csvbkup.item37.table1);
      expect(csvbkup.item37.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.table1 = defalut;
      print(csvbkup.item37.table1);
      expect(csvbkup.item37.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00459_element_check_00435 **********\n\n");
    });

    test('00460_element_check_00436', () async {
      print("\n********** テスト実行：00460_element_check_00436 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.total;
      print(csvbkup.item37.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.total = testData1;
      print(csvbkup.item37.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.total = testData2;
      print(csvbkup.item37.total);
      expect(csvbkup.item37.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.total = defalut;
      print(csvbkup.item37.total);
      expect(csvbkup.item37.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00460_element_check_00436 **********\n\n");
    });

    test('00461_element_check_00437', () async {
      print("\n********** テスト実行：00461_element_check_00437 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.t_exe1;
      print(csvbkup.item37.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.t_exe1 = testData1s;
      print(csvbkup.item37.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.t_exe1 = testData2s;
      print(csvbkup.item37.t_exe1);
      expect(csvbkup.item37.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.t_exe1 = defalut;
      print(csvbkup.item37.t_exe1);
      expect(csvbkup.item37.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00461_element_check_00437 **********\n\n");
    });

    test('00462_element_check_00438', () async {
      print("\n********** テスト実行：00462_element_check_00438 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.section;
      print(csvbkup.item37.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.section = testData1s;
      print(csvbkup.item37.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.section = testData2s;
      print(csvbkup.item37.section);
      expect(csvbkup.item37.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.section = defalut;
      print(csvbkup.item37.section);
      expect(csvbkup.item37.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00462_element_check_00438 **********\n\n");
    });

    test('00463_element_check_00439', () async {
      print("\n********** テスト実行：00463_element_check_00439 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.keyword;
      print(csvbkup.item37.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.keyword = testData1s;
      print(csvbkup.item37.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.keyword = testData2s;
      print(csvbkup.item37.keyword);
      expect(csvbkup.item37.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.keyword = defalut;
      print(csvbkup.item37.keyword);
      expect(csvbkup.item37.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00463_element_check_00439 **********\n\n");
    });

    test('00464_element_check_00440', () async {
      print("\n********** テスト実行：00464_element_check_00440 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.backup_day;
      print(csvbkup.item37.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.backup_day = testData1s;
      print(csvbkup.item37.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.backup_day = testData2s;
      print(csvbkup.item37.backup_day);
      expect(csvbkup.item37.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.backup_day = defalut;
      print(csvbkup.item37.backup_day);
      expect(csvbkup.item37.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00464_element_check_00440 **********\n\n");
    });

    test('00465_element_check_00441', () async {
      print("\n********** テスト実行：00465_element_check_00441 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item37.select_dsp;
      print(csvbkup.item37.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item37.select_dsp = testData1;
      print(csvbkup.item37.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item37.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item37.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item37.select_dsp = testData2;
      print(csvbkup.item37.select_dsp);
      expect(csvbkup.item37.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item37.select_dsp = defalut;
      print(csvbkup.item37.select_dsp);
      expect(csvbkup.item37.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item37.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00465_element_check_00441 **********\n\n");
    });

    test('00466_element_check_00442', () async {
      print("\n********** テスト実行：00466_element_check_00442 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.onoff;
      print(csvbkup.item38.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.onoff = testData1;
      print(csvbkup.item38.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.onoff = testData2;
      print(csvbkup.item38.onoff);
      expect(csvbkup.item38.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.onoff = defalut;
      print(csvbkup.item38.onoff);
      expect(csvbkup.item38.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00466_element_check_00442 **********\n\n");
    });

    test('00467_element_check_00443', () async {
      print("\n********** テスト実行：00467_element_check_00443 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.page;
      print(csvbkup.item38.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.page = testData1;
      print(csvbkup.item38.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.page = testData2;
      print(csvbkup.item38.page);
      expect(csvbkup.item38.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.page = defalut;
      print(csvbkup.item38.page);
      expect(csvbkup.item38.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00467_element_check_00443 **********\n\n");
    });

    test('00468_element_check_00444', () async {
      print("\n********** テスト実行：00468_element_check_00444 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.position;
      print(csvbkup.item38.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.position = testData1;
      print(csvbkup.item38.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.position = testData2;
      print(csvbkup.item38.position);
      expect(csvbkup.item38.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.position = defalut;
      print(csvbkup.item38.position);
      expect(csvbkup.item38.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00468_element_check_00444 **********\n\n");
    });

    test('00469_element_check_00445', () async {
      print("\n********** テスト実行：00469_element_check_00445 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.table1;
      print(csvbkup.item38.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.table1 = testData1s;
      print(csvbkup.item38.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.table1 = testData2s;
      print(csvbkup.item38.table1);
      expect(csvbkup.item38.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.table1 = defalut;
      print(csvbkup.item38.table1);
      expect(csvbkup.item38.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00469_element_check_00445 **********\n\n");
    });

    test('00470_element_check_00446', () async {
      print("\n********** テスト実行：00470_element_check_00446 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.total;
      print(csvbkup.item38.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.total = testData1;
      print(csvbkup.item38.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.total = testData2;
      print(csvbkup.item38.total);
      expect(csvbkup.item38.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.total = defalut;
      print(csvbkup.item38.total);
      expect(csvbkup.item38.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00470_element_check_00446 **********\n\n");
    });

    test('00471_element_check_00447', () async {
      print("\n********** テスト実行：00471_element_check_00447 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.t_exe1;
      print(csvbkup.item38.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.t_exe1 = testData1s;
      print(csvbkup.item38.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.t_exe1 = testData2s;
      print(csvbkup.item38.t_exe1);
      expect(csvbkup.item38.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.t_exe1 = defalut;
      print(csvbkup.item38.t_exe1);
      expect(csvbkup.item38.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00471_element_check_00447 **********\n\n");
    });

    test('00472_element_check_00448', () async {
      print("\n********** テスト実行：00472_element_check_00448 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.section;
      print(csvbkup.item38.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.section = testData1s;
      print(csvbkup.item38.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.section = testData2s;
      print(csvbkup.item38.section);
      expect(csvbkup.item38.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.section = defalut;
      print(csvbkup.item38.section);
      expect(csvbkup.item38.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00472_element_check_00448 **********\n\n");
    });

    test('00473_element_check_00449', () async {
      print("\n********** テスト実行：00473_element_check_00449 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.keyword;
      print(csvbkup.item38.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.keyword = testData1s;
      print(csvbkup.item38.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.keyword = testData2s;
      print(csvbkup.item38.keyword);
      expect(csvbkup.item38.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.keyword = defalut;
      print(csvbkup.item38.keyword);
      expect(csvbkup.item38.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00473_element_check_00449 **********\n\n");
    });

    test('00474_element_check_00450', () async {
      print("\n********** テスト実行：00474_element_check_00450 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.backup_day;
      print(csvbkup.item38.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.backup_day = testData1s;
      print(csvbkup.item38.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.backup_day = testData2s;
      print(csvbkup.item38.backup_day);
      expect(csvbkup.item38.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.backup_day = defalut;
      print(csvbkup.item38.backup_day);
      expect(csvbkup.item38.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00474_element_check_00450 **********\n\n");
    });

    test('00475_element_check_00451', () async {
      print("\n********** テスト実行：00475_element_check_00451 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item38.select_dsp;
      print(csvbkup.item38.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item38.select_dsp = testData1;
      print(csvbkup.item38.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item38.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item38.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item38.select_dsp = testData2;
      print(csvbkup.item38.select_dsp);
      expect(csvbkup.item38.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item38.select_dsp = defalut;
      print(csvbkup.item38.select_dsp);
      expect(csvbkup.item38.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item38.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00475_element_check_00451 **********\n\n");
    });

    test('00476_element_check_00452', () async {
      print("\n********** テスト実行：00476_element_check_00452 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.onoff;
      print(csvbkup.item39.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.onoff = testData1;
      print(csvbkup.item39.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.onoff = testData2;
      print(csvbkup.item39.onoff);
      expect(csvbkup.item39.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.onoff = defalut;
      print(csvbkup.item39.onoff);
      expect(csvbkup.item39.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00476_element_check_00452 **********\n\n");
    });

    test('00477_element_check_00453', () async {
      print("\n********** テスト実行：00477_element_check_00453 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.page;
      print(csvbkup.item39.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.page = testData1;
      print(csvbkup.item39.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.page = testData2;
      print(csvbkup.item39.page);
      expect(csvbkup.item39.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.page = defalut;
      print(csvbkup.item39.page);
      expect(csvbkup.item39.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00477_element_check_00453 **********\n\n");
    });

    test('00478_element_check_00454', () async {
      print("\n********** テスト実行：00478_element_check_00454 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.position;
      print(csvbkup.item39.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.position = testData1;
      print(csvbkup.item39.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.position = testData2;
      print(csvbkup.item39.position);
      expect(csvbkup.item39.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.position = defalut;
      print(csvbkup.item39.position);
      expect(csvbkup.item39.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00478_element_check_00454 **********\n\n");
    });

    test('00479_element_check_00455', () async {
      print("\n********** テスト実行：00479_element_check_00455 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.table1;
      print(csvbkup.item39.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.table1 = testData1s;
      print(csvbkup.item39.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.table1 = testData2s;
      print(csvbkup.item39.table1);
      expect(csvbkup.item39.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.table1 = defalut;
      print(csvbkup.item39.table1);
      expect(csvbkup.item39.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00479_element_check_00455 **********\n\n");
    });

    test('00480_element_check_00456', () async {
      print("\n********** テスト実行：00480_element_check_00456 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.total;
      print(csvbkup.item39.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.total = testData1;
      print(csvbkup.item39.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.total = testData2;
      print(csvbkup.item39.total);
      expect(csvbkup.item39.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.total = defalut;
      print(csvbkup.item39.total);
      expect(csvbkup.item39.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00480_element_check_00456 **********\n\n");
    });

    test('00481_element_check_00457', () async {
      print("\n********** テスト実行：00481_element_check_00457 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.t_exe1;
      print(csvbkup.item39.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.t_exe1 = testData1s;
      print(csvbkup.item39.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.t_exe1 = testData2s;
      print(csvbkup.item39.t_exe1);
      expect(csvbkup.item39.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.t_exe1 = defalut;
      print(csvbkup.item39.t_exe1);
      expect(csvbkup.item39.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00481_element_check_00457 **********\n\n");
    });

    test('00482_element_check_00458', () async {
      print("\n********** テスト実行：00482_element_check_00458 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.section;
      print(csvbkup.item39.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.section = testData1s;
      print(csvbkup.item39.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.section = testData2s;
      print(csvbkup.item39.section);
      expect(csvbkup.item39.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.section = defalut;
      print(csvbkup.item39.section);
      expect(csvbkup.item39.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00482_element_check_00458 **********\n\n");
    });

    test('00483_element_check_00459', () async {
      print("\n********** テスト実行：00483_element_check_00459 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.keyword;
      print(csvbkup.item39.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.keyword = testData1s;
      print(csvbkup.item39.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.keyword = testData2s;
      print(csvbkup.item39.keyword);
      expect(csvbkup.item39.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.keyword = defalut;
      print(csvbkup.item39.keyword);
      expect(csvbkup.item39.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00483_element_check_00459 **********\n\n");
    });

    test('00484_element_check_00460', () async {
      print("\n********** テスト実行：00484_element_check_00460 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.backup_day;
      print(csvbkup.item39.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.backup_day = testData1s;
      print(csvbkup.item39.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.backup_day = testData2s;
      print(csvbkup.item39.backup_day);
      expect(csvbkup.item39.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.backup_day = defalut;
      print(csvbkup.item39.backup_day);
      expect(csvbkup.item39.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00484_element_check_00460 **********\n\n");
    });

    test('00485_element_check_00461', () async {
      print("\n********** テスト実行：00485_element_check_00461 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item39.select_dsp;
      print(csvbkup.item39.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item39.select_dsp = testData1;
      print(csvbkup.item39.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item39.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item39.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item39.select_dsp = testData2;
      print(csvbkup.item39.select_dsp);
      expect(csvbkup.item39.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item39.select_dsp = defalut;
      print(csvbkup.item39.select_dsp);
      expect(csvbkup.item39.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item39.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00485_element_check_00461 **********\n\n");
    });

    test('00486_element_check_00462', () async {
      print("\n********** テスト実行：00486_element_check_00462 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.onoff;
      print(csvbkup.item40.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.onoff = testData1;
      print(csvbkup.item40.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.onoff = testData2;
      print(csvbkup.item40.onoff);
      expect(csvbkup.item40.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.onoff = defalut;
      print(csvbkup.item40.onoff);
      expect(csvbkup.item40.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00486_element_check_00462 **********\n\n");
    });

    test('00487_element_check_00463', () async {
      print("\n********** テスト実行：00487_element_check_00463 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.page;
      print(csvbkup.item40.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.page = testData1;
      print(csvbkup.item40.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.page = testData2;
      print(csvbkup.item40.page);
      expect(csvbkup.item40.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.page = defalut;
      print(csvbkup.item40.page);
      expect(csvbkup.item40.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00487_element_check_00463 **********\n\n");
    });

    test('00488_element_check_00464', () async {
      print("\n********** テスト実行：00488_element_check_00464 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.position;
      print(csvbkup.item40.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.position = testData1;
      print(csvbkup.item40.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.position = testData2;
      print(csvbkup.item40.position);
      expect(csvbkup.item40.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.position = defalut;
      print(csvbkup.item40.position);
      expect(csvbkup.item40.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00488_element_check_00464 **********\n\n");
    });

    test('00489_element_check_00465', () async {
      print("\n********** テスト実行：00489_element_check_00465 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.table1;
      print(csvbkup.item40.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.table1 = testData1s;
      print(csvbkup.item40.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.table1 = testData2s;
      print(csvbkup.item40.table1);
      expect(csvbkup.item40.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.table1 = defalut;
      print(csvbkup.item40.table1);
      expect(csvbkup.item40.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00489_element_check_00465 **********\n\n");
    });

    test('00490_element_check_00466', () async {
      print("\n********** テスト実行：00490_element_check_00466 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.total;
      print(csvbkup.item40.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.total = testData1;
      print(csvbkup.item40.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.total = testData2;
      print(csvbkup.item40.total);
      expect(csvbkup.item40.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.total = defalut;
      print(csvbkup.item40.total);
      expect(csvbkup.item40.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00490_element_check_00466 **********\n\n");
    });

    test('00491_element_check_00467', () async {
      print("\n********** テスト実行：00491_element_check_00467 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.t_exe1;
      print(csvbkup.item40.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.t_exe1 = testData1s;
      print(csvbkup.item40.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.t_exe1 = testData2s;
      print(csvbkup.item40.t_exe1);
      expect(csvbkup.item40.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.t_exe1 = defalut;
      print(csvbkup.item40.t_exe1);
      expect(csvbkup.item40.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00491_element_check_00467 **********\n\n");
    });

    test('00492_element_check_00468', () async {
      print("\n********** テスト実行：00492_element_check_00468 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.section;
      print(csvbkup.item40.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.section = testData1s;
      print(csvbkup.item40.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.section = testData2s;
      print(csvbkup.item40.section);
      expect(csvbkup.item40.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.section = defalut;
      print(csvbkup.item40.section);
      expect(csvbkup.item40.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00492_element_check_00468 **********\n\n");
    });

    test('00493_element_check_00469', () async {
      print("\n********** テスト実行：00493_element_check_00469 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.keyword;
      print(csvbkup.item40.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.keyword = testData1s;
      print(csvbkup.item40.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.keyword = testData2s;
      print(csvbkup.item40.keyword);
      expect(csvbkup.item40.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.keyword = defalut;
      print(csvbkup.item40.keyword);
      expect(csvbkup.item40.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00493_element_check_00469 **********\n\n");
    });

    test('00494_element_check_00470', () async {
      print("\n********** テスト実行：00494_element_check_00470 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.backup_day;
      print(csvbkup.item40.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.backup_day = testData1s;
      print(csvbkup.item40.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.backup_day = testData2s;
      print(csvbkup.item40.backup_day);
      expect(csvbkup.item40.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.backup_day = defalut;
      print(csvbkup.item40.backup_day);
      expect(csvbkup.item40.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00494_element_check_00470 **********\n\n");
    });

    test('00495_element_check_00471', () async {
      print("\n********** テスト実行：00495_element_check_00471 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item40.select_dsp;
      print(csvbkup.item40.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item40.select_dsp = testData1;
      print(csvbkup.item40.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item40.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item40.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item40.select_dsp = testData2;
      print(csvbkup.item40.select_dsp);
      expect(csvbkup.item40.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item40.select_dsp = defalut;
      print(csvbkup.item40.select_dsp);
      expect(csvbkup.item40.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item40.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00495_element_check_00471 **********\n\n");
    });

    test('00496_element_check_00472', () async {
      print("\n********** テスト実行：00496_element_check_00472 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.onoff;
      print(csvbkup.item41.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.onoff = testData1;
      print(csvbkup.item41.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.onoff = testData2;
      print(csvbkup.item41.onoff);
      expect(csvbkup.item41.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.onoff = defalut;
      print(csvbkup.item41.onoff);
      expect(csvbkup.item41.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00496_element_check_00472 **********\n\n");
    });

    test('00497_element_check_00473', () async {
      print("\n********** テスト実行：00497_element_check_00473 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.page;
      print(csvbkup.item41.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.page = testData1;
      print(csvbkup.item41.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.page = testData2;
      print(csvbkup.item41.page);
      expect(csvbkup.item41.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.page = defalut;
      print(csvbkup.item41.page);
      expect(csvbkup.item41.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00497_element_check_00473 **********\n\n");
    });

    test('00498_element_check_00474', () async {
      print("\n********** テスト実行：00498_element_check_00474 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.position;
      print(csvbkup.item41.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.position = testData1;
      print(csvbkup.item41.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.position = testData2;
      print(csvbkup.item41.position);
      expect(csvbkup.item41.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.position = defalut;
      print(csvbkup.item41.position);
      expect(csvbkup.item41.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00498_element_check_00474 **********\n\n");
    });

    test('00499_element_check_00475', () async {
      print("\n********** テスト実行：00499_element_check_00475 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.table1;
      print(csvbkup.item41.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.table1 = testData1s;
      print(csvbkup.item41.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.table1 = testData2s;
      print(csvbkup.item41.table1);
      expect(csvbkup.item41.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.table1 = defalut;
      print(csvbkup.item41.table1);
      expect(csvbkup.item41.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00499_element_check_00475 **********\n\n");
    });

    test('00500_element_check_00476', () async {
      print("\n********** テスト実行：00500_element_check_00476 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.total;
      print(csvbkup.item41.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.total = testData1;
      print(csvbkup.item41.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.total = testData2;
      print(csvbkup.item41.total);
      expect(csvbkup.item41.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.total = defalut;
      print(csvbkup.item41.total);
      expect(csvbkup.item41.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00500_element_check_00476 **********\n\n");
    });

    test('00501_element_check_00477', () async {
      print("\n********** テスト実行：00501_element_check_00477 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.t_exe1;
      print(csvbkup.item41.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.t_exe1 = testData1s;
      print(csvbkup.item41.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.t_exe1 = testData2s;
      print(csvbkup.item41.t_exe1);
      expect(csvbkup.item41.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.t_exe1 = defalut;
      print(csvbkup.item41.t_exe1);
      expect(csvbkup.item41.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00501_element_check_00477 **********\n\n");
    });

    test('00502_element_check_00478', () async {
      print("\n********** テスト実行：00502_element_check_00478 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.section;
      print(csvbkup.item41.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.section = testData1s;
      print(csvbkup.item41.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.section = testData2s;
      print(csvbkup.item41.section);
      expect(csvbkup.item41.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.section = defalut;
      print(csvbkup.item41.section);
      expect(csvbkup.item41.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00502_element_check_00478 **********\n\n");
    });

    test('00503_element_check_00479', () async {
      print("\n********** テスト実行：00503_element_check_00479 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.keyword;
      print(csvbkup.item41.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.keyword = testData1s;
      print(csvbkup.item41.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.keyword = testData2s;
      print(csvbkup.item41.keyword);
      expect(csvbkup.item41.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.keyword = defalut;
      print(csvbkup.item41.keyword);
      expect(csvbkup.item41.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00503_element_check_00479 **********\n\n");
    });

    test('00504_element_check_00480', () async {
      print("\n********** テスト実行：00504_element_check_00480 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.backup_day;
      print(csvbkup.item41.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.backup_day = testData1s;
      print(csvbkup.item41.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.backup_day = testData2s;
      print(csvbkup.item41.backup_day);
      expect(csvbkup.item41.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.backup_day = defalut;
      print(csvbkup.item41.backup_day);
      expect(csvbkup.item41.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00504_element_check_00480 **********\n\n");
    });

    test('00505_element_check_00481', () async {
      print("\n********** テスト実行：00505_element_check_00481 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item41.select_dsp;
      print(csvbkup.item41.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item41.select_dsp = testData1;
      print(csvbkup.item41.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item41.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item41.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item41.select_dsp = testData2;
      print(csvbkup.item41.select_dsp);
      expect(csvbkup.item41.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item41.select_dsp = defalut;
      print(csvbkup.item41.select_dsp);
      expect(csvbkup.item41.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item41.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00505_element_check_00481 **********\n\n");
    });

    test('00506_element_check_00482', () async {
      print("\n********** テスト実行：00506_element_check_00482 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.onoff;
      print(csvbkup.item42.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.onoff = testData1;
      print(csvbkup.item42.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.onoff = testData2;
      print(csvbkup.item42.onoff);
      expect(csvbkup.item42.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.onoff = defalut;
      print(csvbkup.item42.onoff);
      expect(csvbkup.item42.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00506_element_check_00482 **********\n\n");
    });

    test('00507_element_check_00483', () async {
      print("\n********** テスト実行：00507_element_check_00483 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.page;
      print(csvbkup.item42.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.page = testData1;
      print(csvbkup.item42.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.page = testData2;
      print(csvbkup.item42.page);
      expect(csvbkup.item42.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.page = defalut;
      print(csvbkup.item42.page);
      expect(csvbkup.item42.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00507_element_check_00483 **********\n\n");
    });

    test('00508_element_check_00484', () async {
      print("\n********** テスト実行：00508_element_check_00484 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.position;
      print(csvbkup.item42.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.position = testData1;
      print(csvbkup.item42.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.position = testData2;
      print(csvbkup.item42.position);
      expect(csvbkup.item42.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.position = defalut;
      print(csvbkup.item42.position);
      expect(csvbkup.item42.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00508_element_check_00484 **********\n\n");
    });

    test('00509_element_check_00485', () async {
      print("\n********** テスト実行：00509_element_check_00485 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.table1;
      print(csvbkup.item42.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.table1 = testData1s;
      print(csvbkup.item42.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.table1 = testData2s;
      print(csvbkup.item42.table1);
      expect(csvbkup.item42.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.table1 = defalut;
      print(csvbkup.item42.table1);
      expect(csvbkup.item42.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00509_element_check_00485 **********\n\n");
    });

    test('00510_element_check_00486', () async {
      print("\n********** テスト実行：00510_element_check_00486 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.total;
      print(csvbkup.item42.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.total = testData1;
      print(csvbkup.item42.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.total = testData2;
      print(csvbkup.item42.total);
      expect(csvbkup.item42.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.total = defalut;
      print(csvbkup.item42.total);
      expect(csvbkup.item42.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00510_element_check_00486 **********\n\n");
    });

    test('00511_element_check_00487', () async {
      print("\n********** テスト実行：00511_element_check_00487 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.t_exe1;
      print(csvbkup.item42.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.t_exe1 = testData1s;
      print(csvbkup.item42.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.t_exe1 = testData2s;
      print(csvbkup.item42.t_exe1);
      expect(csvbkup.item42.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.t_exe1 = defalut;
      print(csvbkup.item42.t_exe1);
      expect(csvbkup.item42.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00511_element_check_00487 **********\n\n");
    });

    test('00512_element_check_00488', () async {
      print("\n********** テスト実行：00512_element_check_00488 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.section;
      print(csvbkup.item42.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.section = testData1s;
      print(csvbkup.item42.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.section = testData2s;
      print(csvbkup.item42.section);
      expect(csvbkup.item42.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.section = defalut;
      print(csvbkup.item42.section);
      expect(csvbkup.item42.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00512_element_check_00488 **********\n\n");
    });

    test('00513_element_check_00489', () async {
      print("\n********** テスト実行：00513_element_check_00489 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.keyword;
      print(csvbkup.item42.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.keyword = testData1s;
      print(csvbkup.item42.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.keyword = testData2s;
      print(csvbkup.item42.keyword);
      expect(csvbkup.item42.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.keyword = defalut;
      print(csvbkup.item42.keyword);
      expect(csvbkup.item42.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00513_element_check_00489 **********\n\n");
    });

    test('00514_element_check_00490', () async {
      print("\n********** テスト実行：00514_element_check_00490 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.backup_day;
      print(csvbkup.item42.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.backup_day = testData1s;
      print(csvbkup.item42.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.backup_day = testData2s;
      print(csvbkup.item42.backup_day);
      expect(csvbkup.item42.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.backup_day = defalut;
      print(csvbkup.item42.backup_day);
      expect(csvbkup.item42.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00514_element_check_00490 **********\n\n");
    });

    test('00515_element_check_00491', () async {
      print("\n********** テスト実行：00515_element_check_00491 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item42.select_dsp;
      print(csvbkup.item42.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item42.select_dsp = testData1;
      print(csvbkup.item42.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item42.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item42.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item42.select_dsp = testData2;
      print(csvbkup.item42.select_dsp);
      expect(csvbkup.item42.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item42.select_dsp = defalut;
      print(csvbkup.item42.select_dsp);
      expect(csvbkup.item42.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item42.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00515_element_check_00491 **********\n\n");
    });

    test('00516_element_check_00492', () async {
      print("\n********** テスト実行：00516_element_check_00492 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.onoff;
      print(csvbkup.item43.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.onoff = testData1;
      print(csvbkup.item43.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.onoff = testData2;
      print(csvbkup.item43.onoff);
      expect(csvbkup.item43.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.onoff = defalut;
      print(csvbkup.item43.onoff);
      expect(csvbkup.item43.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00516_element_check_00492 **********\n\n");
    });

    test('00517_element_check_00493', () async {
      print("\n********** テスト実行：00517_element_check_00493 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.page;
      print(csvbkup.item43.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.page = testData1;
      print(csvbkup.item43.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.page = testData2;
      print(csvbkup.item43.page);
      expect(csvbkup.item43.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.page = defalut;
      print(csvbkup.item43.page);
      expect(csvbkup.item43.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00517_element_check_00493 **********\n\n");
    });

    test('00518_element_check_00494', () async {
      print("\n********** テスト実行：00518_element_check_00494 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.position;
      print(csvbkup.item43.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.position = testData1;
      print(csvbkup.item43.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.position = testData2;
      print(csvbkup.item43.position);
      expect(csvbkup.item43.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.position = defalut;
      print(csvbkup.item43.position);
      expect(csvbkup.item43.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00518_element_check_00494 **********\n\n");
    });

    test('00519_element_check_00495', () async {
      print("\n********** テスト実行：00519_element_check_00495 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.table1;
      print(csvbkup.item43.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.table1 = testData1s;
      print(csvbkup.item43.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.table1 = testData2s;
      print(csvbkup.item43.table1);
      expect(csvbkup.item43.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.table1 = defalut;
      print(csvbkup.item43.table1);
      expect(csvbkup.item43.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00519_element_check_00495 **********\n\n");
    });

    test('00520_element_check_00496', () async {
      print("\n********** テスト実行：00520_element_check_00496 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.total;
      print(csvbkup.item43.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.total = testData1;
      print(csvbkup.item43.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.total = testData2;
      print(csvbkup.item43.total);
      expect(csvbkup.item43.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.total = defalut;
      print(csvbkup.item43.total);
      expect(csvbkup.item43.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00520_element_check_00496 **********\n\n");
    });

    test('00521_element_check_00497', () async {
      print("\n********** テスト実行：00521_element_check_00497 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.t_exe1;
      print(csvbkup.item43.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.t_exe1 = testData1s;
      print(csvbkup.item43.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.t_exe1 = testData2s;
      print(csvbkup.item43.t_exe1);
      expect(csvbkup.item43.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.t_exe1 = defalut;
      print(csvbkup.item43.t_exe1);
      expect(csvbkup.item43.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00521_element_check_00497 **********\n\n");
    });

    test('00522_element_check_00498', () async {
      print("\n********** テスト実行：00522_element_check_00498 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.section;
      print(csvbkup.item43.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.section = testData1s;
      print(csvbkup.item43.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.section = testData2s;
      print(csvbkup.item43.section);
      expect(csvbkup.item43.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.section = defalut;
      print(csvbkup.item43.section);
      expect(csvbkup.item43.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00522_element_check_00498 **********\n\n");
    });

    test('00523_element_check_00499', () async {
      print("\n********** テスト実行：00523_element_check_00499 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.keyword;
      print(csvbkup.item43.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.keyword = testData1s;
      print(csvbkup.item43.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.keyword = testData2s;
      print(csvbkup.item43.keyword);
      expect(csvbkup.item43.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.keyword = defalut;
      print(csvbkup.item43.keyword);
      expect(csvbkup.item43.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00523_element_check_00499 **********\n\n");
    });

    test('00524_element_check_00500', () async {
      print("\n********** テスト実行：00524_element_check_00500 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.backup_day;
      print(csvbkup.item43.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.backup_day = testData1s;
      print(csvbkup.item43.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.backup_day = testData2s;
      print(csvbkup.item43.backup_day);
      expect(csvbkup.item43.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.backup_day = defalut;
      print(csvbkup.item43.backup_day);
      expect(csvbkup.item43.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00524_element_check_00500 **********\n\n");
    });

    test('00525_element_check_00501', () async {
      print("\n********** テスト実行：00525_element_check_00501 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item43.select_dsp;
      print(csvbkup.item43.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item43.select_dsp = testData1;
      print(csvbkup.item43.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item43.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item43.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item43.select_dsp = testData2;
      print(csvbkup.item43.select_dsp);
      expect(csvbkup.item43.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item43.select_dsp = defalut;
      print(csvbkup.item43.select_dsp);
      expect(csvbkup.item43.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item43.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00525_element_check_00501 **********\n\n");
    });

    test('00526_element_check_00502', () async {
      print("\n********** テスト実行：00526_element_check_00502 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.onoff;
      print(csvbkup.item44.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.onoff = testData1;
      print(csvbkup.item44.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.onoff = testData2;
      print(csvbkup.item44.onoff);
      expect(csvbkup.item44.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.onoff = defalut;
      print(csvbkup.item44.onoff);
      expect(csvbkup.item44.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00526_element_check_00502 **********\n\n");
    });

    test('00527_element_check_00503', () async {
      print("\n********** テスト実行：00527_element_check_00503 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.page;
      print(csvbkup.item44.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.page = testData1;
      print(csvbkup.item44.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.page = testData2;
      print(csvbkup.item44.page);
      expect(csvbkup.item44.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.page = defalut;
      print(csvbkup.item44.page);
      expect(csvbkup.item44.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00527_element_check_00503 **********\n\n");
    });

    test('00528_element_check_00504', () async {
      print("\n********** テスト実行：00528_element_check_00504 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.position;
      print(csvbkup.item44.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.position = testData1;
      print(csvbkup.item44.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.position = testData2;
      print(csvbkup.item44.position);
      expect(csvbkup.item44.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.position = defalut;
      print(csvbkup.item44.position);
      expect(csvbkup.item44.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00528_element_check_00504 **********\n\n");
    });

    test('00529_element_check_00505', () async {
      print("\n********** テスト実行：00529_element_check_00505 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.table1;
      print(csvbkup.item44.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.table1 = testData1s;
      print(csvbkup.item44.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.table1 = testData2s;
      print(csvbkup.item44.table1);
      expect(csvbkup.item44.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.table1 = defalut;
      print(csvbkup.item44.table1);
      expect(csvbkup.item44.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00529_element_check_00505 **********\n\n");
    });

    test('00530_element_check_00506', () async {
      print("\n********** テスト実行：00530_element_check_00506 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.total;
      print(csvbkup.item44.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.total = testData1;
      print(csvbkup.item44.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.total = testData2;
      print(csvbkup.item44.total);
      expect(csvbkup.item44.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.total = defalut;
      print(csvbkup.item44.total);
      expect(csvbkup.item44.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00530_element_check_00506 **********\n\n");
    });

    test('00531_element_check_00507', () async {
      print("\n********** テスト実行：00531_element_check_00507 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.t_exe1;
      print(csvbkup.item44.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.t_exe1 = testData1s;
      print(csvbkup.item44.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.t_exe1 = testData2s;
      print(csvbkup.item44.t_exe1);
      expect(csvbkup.item44.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.t_exe1 = defalut;
      print(csvbkup.item44.t_exe1);
      expect(csvbkup.item44.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00531_element_check_00507 **********\n\n");
    });

    test('00532_element_check_00508', () async {
      print("\n********** テスト実行：00532_element_check_00508 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.t_exe2;
      print(csvbkup.item44.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.t_exe2 = testData1s;
      print(csvbkup.item44.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.t_exe2 = testData2s;
      print(csvbkup.item44.t_exe2);
      expect(csvbkup.item44.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.t_exe2 = defalut;
      print(csvbkup.item44.t_exe2);
      expect(csvbkup.item44.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00532_element_check_00508 **********\n\n");
    });

    test('00533_element_check_00509', () async {
      print("\n********** テスト実行：00533_element_check_00509 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.section;
      print(csvbkup.item44.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.section = testData1s;
      print(csvbkup.item44.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.section = testData2s;
      print(csvbkup.item44.section);
      expect(csvbkup.item44.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.section = defalut;
      print(csvbkup.item44.section);
      expect(csvbkup.item44.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00533_element_check_00509 **********\n\n");
    });

    test('00534_element_check_00510', () async {
      print("\n********** テスト実行：00534_element_check_00510 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.keyword;
      print(csvbkup.item44.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.keyword = testData1s;
      print(csvbkup.item44.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.keyword = testData2s;
      print(csvbkup.item44.keyword);
      expect(csvbkup.item44.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.keyword = defalut;
      print(csvbkup.item44.keyword);
      expect(csvbkup.item44.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00534_element_check_00510 **********\n\n");
    });

    test('00535_element_check_00511', () async {
      print("\n********** テスト実行：00535_element_check_00511 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.keyword2;
      print(csvbkup.item44.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.keyword2 = testData1s;
      print(csvbkup.item44.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.keyword2 = testData2s;
      print(csvbkup.item44.keyword2);
      expect(csvbkup.item44.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.keyword2 = defalut;
      print(csvbkup.item44.keyword2);
      expect(csvbkup.item44.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00535_element_check_00511 **********\n\n");
    });

    test('00536_element_check_00512', () async {
      print("\n********** テスト実行：00536_element_check_00512 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.keyword3;
      print(csvbkup.item44.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.keyword3 = testData1s;
      print(csvbkup.item44.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.keyword3 = testData2s;
      print(csvbkup.item44.keyword3);
      expect(csvbkup.item44.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.keyword3 = defalut;
      print(csvbkup.item44.keyword3);
      expect(csvbkup.item44.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00536_element_check_00512 **********\n\n");
    });

    test('00537_element_check_00513', () async {
      print("\n********** テスト実行：00537_element_check_00513 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.backup_day;
      print(csvbkup.item44.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.backup_day = testData1s;
      print(csvbkup.item44.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.backup_day = testData2s;
      print(csvbkup.item44.backup_day);
      expect(csvbkup.item44.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.backup_day = defalut;
      print(csvbkup.item44.backup_day);
      expect(csvbkup.item44.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00537_element_check_00513 **********\n\n");
    });

    test('00538_element_check_00514', () async {
      print("\n********** テスト実行：00538_element_check_00514 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item44.select_dsp;
      print(csvbkup.item44.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item44.select_dsp = testData1;
      print(csvbkup.item44.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item44.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item44.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item44.select_dsp = testData2;
      print(csvbkup.item44.select_dsp);
      expect(csvbkup.item44.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item44.select_dsp = defalut;
      print(csvbkup.item44.select_dsp);
      expect(csvbkup.item44.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item44.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00538_element_check_00514 **********\n\n");
    });

    test('00539_element_check_00515', () async {
      print("\n********** テスト実行：00539_element_check_00515 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.onoff;
      print(csvbkup.item45.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.onoff = testData1;
      print(csvbkup.item45.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.onoff = testData2;
      print(csvbkup.item45.onoff);
      expect(csvbkup.item45.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.onoff = defalut;
      print(csvbkup.item45.onoff);
      expect(csvbkup.item45.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00539_element_check_00515 **********\n\n");
    });

    test('00540_element_check_00516', () async {
      print("\n********** テスト実行：00540_element_check_00516 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.page;
      print(csvbkup.item45.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.page = testData1;
      print(csvbkup.item45.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.page = testData2;
      print(csvbkup.item45.page);
      expect(csvbkup.item45.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.page = defalut;
      print(csvbkup.item45.page);
      expect(csvbkup.item45.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00540_element_check_00516 **********\n\n");
    });

    test('00541_element_check_00517', () async {
      print("\n********** テスト実行：00541_element_check_00517 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.position;
      print(csvbkup.item45.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.position = testData1;
      print(csvbkup.item45.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.position = testData2;
      print(csvbkup.item45.position);
      expect(csvbkup.item45.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.position = defalut;
      print(csvbkup.item45.position);
      expect(csvbkup.item45.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00541_element_check_00517 **********\n\n");
    });

    test('00542_element_check_00518', () async {
      print("\n********** テスト実行：00542_element_check_00518 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.table1;
      print(csvbkup.item45.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.table1 = testData1s;
      print(csvbkup.item45.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.table1 = testData2s;
      print(csvbkup.item45.table1);
      expect(csvbkup.item45.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.table1 = defalut;
      print(csvbkup.item45.table1);
      expect(csvbkup.item45.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00542_element_check_00518 **********\n\n");
    });

    test('00543_element_check_00519', () async {
      print("\n********** テスト実行：00543_element_check_00519 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.total;
      print(csvbkup.item45.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.total = testData1;
      print(csvbkup.item45.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.total = testData2;
      print(csvbkup.item45.total);
      expect(csvbkup.item45.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.total = defalut;
      print(csvbkup.item45.total);
      expect(csvbkup.item45.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00543_element_check_00519 **********\n\n");
    });

    test('00544_element_check_00520', () async {
      print("\n********** テスト実行：00544_element_check_00520 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.t_exe1;
      print(csvbkup.item45.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.t_exe1 = testData1s;
      print(csvbkup.item45.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.t_exe1 = testData2s;
      print(csvbkup.item45.t_exe1);
      expect(csvbkup.item45.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.t_exe1 = defalut;
      print(csvbkup.item45.t_exe1);
      expect(csvbkup.item45.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00544_element_check_00520 **********\n\n");
    });

    test('00545_element_check_00521', () async {
      print("\n********** テスト実行：00545_element_check_00521 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.section;
      print(csvbkup.item45.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.section = testData1s;
      print(csvbkup.item45.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.section = testData2s;
      print(csvbkup.item45.section);
      expect(csvbkup.item45.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.section = defalut;
      print(csvbkup.item45.section);
      expect(csvbkup.item45.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00545_element_check_00521 **********\n\n");
    });

    test('00546_element_check_00522', () async {
      print("\n********** テスト実行：00546_element_check_00522 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.keyword;
      print(csvbkup.item45.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.keyword = testData1s;
      print(csvbkup.item45.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.keyword = testData2s;
      print(csvbkup.item45.keyword);
      expect(csvbkup.item45.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.keyword = defalut;
      print(csvbkup.item45.keyword);
      expect(csvbkup.item45.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00546_element_check_00522 **********\n\n");
    });

    test('00547_element_check_00523', () async {
      print("\n********** テスト実行：00547_element_check_00523 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.keyword2;
      print(csvbkup.item45.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.keyword2 = testData1s;
      print(csvbkup.item45.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.keyword2 = testData2s;
      print(csvbkup.item45.keyword2);
      expect(csvbkup.item45.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.keyword2 = defalut;
      print(csvbkup.item45.keyword2);
      expect(csvbkup.item45.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00547_element_check_00523 **********\n\n");
    });

    test('00548_element_check_00524', () async {
      print("\n********** テスト実行：00548_element_check_00524 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.keyword3;
      print(csvbkup.item45.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.keyword3 = testData1s;
      print(csvbkup.item45.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.keyword3 = testData2s;
      print(csvbkup.item45.keyword3);
      expect(csvbkup.item45.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.keyword3 = defalut;
      print(csvbkup.item45.keyword3);
      expect(csvbkup.item45.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00548_element_check_00524 **********\n\n");
    });

    test('00549_element_check_00525', () async {
      print("\n********** テスト実行：00549_element_check_00525 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.backup_day;
      print(csvbkup.item45.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.backup_day = testData1s;
      print(csvbkup.item45.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.backup_day = testData2s;
      print(csvbkup.item45.backup_day);
      expect(csvbkup.item45.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.backup_day = defalut;
      print(csvbkup.item45.backup_day);
      expect(csvbkup.item45.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00549_element_check_00525 **********\n\n");
    });

    test('00550_element_check_00526', () async {
      print("\n********** テスト実行：00550_element_check_00526 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item45.select_dsp;
      print(csvbkup.item45.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item45.select_dsp = testData1;
      print(csvbkup.item45.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item45.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item45.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item45.select_dsp = testData2;
      print(csvbkup.item45.select_dsp);
      expect(csvbkup.item45.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item45.select_dsp = defalut;
      print(csvbkup.item45.select_dsp);
      expect(csvbkup.item45.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item45.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00550_element_check_00526 **********\n\n");
    });

    test('00551_element_check_00527', () async {
      print("\n********** テスト実行：00551_element_check_00527 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.onoff;
      print(csvbkup.item46.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.onoff = testData1;
      print(csvbkup.item46.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.onoff = testData2;
      print(csvbkup.item46.onoff);
      expect(csvbkup.item46.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.onoff = defalut;
      print(csvbkup.item46.onoff);
      expect(csvbkup.item46.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00551_element_check_00527 **********\n\n");
    });

    test('00552_element_check_00528', () async {
      print("\n********** テスト実行：00552_element_check_00528 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.page;
      print(csvbkup.item46.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.page = testData1;
      print(csvbkup.item46.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.page = testData2;
      print(csvbkup.item46.page);
      expect(csvbkup.item46.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.page = defalut;
      print(csvbkup.item46.page);
      expect(csvbkup.item46.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00552_element_check_00528 **********\n\n");
    });

    test('00553_element_check_00529', () async {
      print("\n********** テスト実行：00553_element_check_00529 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.position;
      print(csvbkup.item46.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.position = testData1;
      print(csvbkup.item46.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.position = testData2;
      print(csvbkup.item46.position);
      expect(csvbkup.item46.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.position = defalut;
      print(csvbkup.item46.position);
      expect(csvbkup.item46.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00553_element_check_00529 **********\n\n");
    });

    test('00554_element_check_00530', () async {
      print("\n********** テスト実行：00554_element_check_00530 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.table1;
      print(csvbkup.item46.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.table1 = testData1s;
      print(csvbkup.item46.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.table1 = testData2s;
      print(csvbkup.item46.table1);
      expect(csvbkup.item46.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.table1 = defalut;
      print(csvbkup.item46.table1);
      expect(csvbkup.item46.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00554_element_check_00530 **********\n\n");
    });

    test('00555_element_check_00531', () async {
      print("\n********** テスト実行：00555_element_check_00531 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.total;
      print(csvbkup.item46.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.total = testData1;
      print(csvbkup.item46.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.total = testData2;
      print(csvbkup.item46.total);
      expect(csvbkup.item46.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.total = defalut;
      print(csvbkup.item46.total);
      expect(csvbkup.item46.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00555_element_check_00531 **********\n\n");
    });

    test('00556_element_check_00532', () async {
      print("\n********** テスト実行：00556_element_check_00532 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.t_exe1;
      print(csvbkup.item46.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.t_exe1 = testData1s;
      print(csvbkup.item46.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.t_exe1 = testData2s;
      print(csvbkup.item46.t_exe1);
      expect(csvbkup.item46.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.t_exe1 = defalut;
      print(csvbkup.item46.t_exe1);
      expect(csvbkup.item46.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00556_element_check_00532 **********\n\n");
    });

    test('00557_element_check_00533', () async {
      print("\n********** テスト実行：00557_element_check_00533 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.section;
      print(csvbkup.item46.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.section = testData1s;
      print(csvbkup.item46.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.section = testData2s;
      print(csvbkup.item46.section);
      expect(csvbkup.item46.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.section = defalut;
      print(csvbkup.item46.section);
      expect(csvbkup.item46.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00557_element_check_00533 **********\n\n");
    });

    test('00558_element_check_00534', () async {
      print("\n********** テスト実行：00558_element_check_00534 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.keyword;
      print(csvbkup.item46.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.keyword = testData1s;
      print(csvbkup.item46.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.keyword = testData2s;
      print(csvbkup.item46.keyword);
      expect(csvbkup.item46.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.keyword = defalut;
      print(csvbkup.item46.keyword);
      expect(csvbkup.item46.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00558_element_check_00534 **********\n\n");
    });

    test('00559_element_check_00535', () async {
      print("\n********** テスト実行：00559_element_check_00535 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.keyword2;
      print(csvbkup.item46.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.keyword2 = testData1s;
      print(csvbkup.item46.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.keyword2 = testData2s;
      print(csvbkup.item46.keyword2);
      expect(csvbkup.item46.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.keyword2 = defalut;
      print(csvbkup.item46.keyword2);
      expect(csvbkup.item46.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00559_element_check_00535 **********\n\n");
    });

    test('00560_element_check_00536', () async {
      print("\n********** テスト実行：00560_element_check_00536 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.keyword3;
      print(csvbkup.item46.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.keyword3 = testData1s;
      print(csvbkup.item46.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.keyword3 = testData2s;
      print(csvbkup.item46.keyword3);
      expect(csvbkup.item46.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.keyword3 = defalut;
      print(csvbkup.item46.keyword3);
      expect(csvbkup.item46.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00560_element_check_00536 **********\n\n");
    });

    test('00561_element_check_00537', () async {
      print("\n********** テスト実行：00561_element_check_00537 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.backup_day;
      print(csvbkup.item46.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.backup_day = testData1s;
      print(csvbkup.item46.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.backup_day = testData2s;
      print(csvbkup.item46.backup_day);
      expect(csvbkup.item46.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.backup_day = defalut;
      print(csvbkup.item46.backup_day);
      expect(csvbkup.item46.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00561_element_check_00537 **********\n\n");
    });

    test('00562_element_check_00538', () async {
      print("\n********** テスト実行：00562_element_check_00538 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item46.select_dsp;
      print(csvbkup.item46.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item46.select_dsp = testData1;
      print(csvbkup.item46.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item46.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item46.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item46.select_dsp = testData2;
      print(csvbkup.item46.select_dsp);
      expect(csvbkup.item46.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item46.select_dsp = defalut;
      print(csvbkup.item46.select_dsp);
      expect(csvbkup.item46.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item46.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00562_element_check_00538 **********\n\n");
    });

    test('00563_element_check_00539', () async {
      print("\n********** テスト実行：00563_element_check_00539 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.onoff;
      print(csvbkup.item47.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.onoff = testData1;
      print(csvbkup.item47.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.onoff = testData2;
      print(csvbkup.item47.onoff);
      expect(csvbkup.item47.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.onoff = defalut;
      print(csvbkup.item47.onoff);
      expect(csvbkup.item47.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00563_element_check_00539 **********\n\n");
    });

    test('00564_element_check_00540', () async {
      print("\n********** テスト実行：00564_element_check_00540 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.page;
      print(csvbkup.item47.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.page = testData1;
      print(csvbkup.item47.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.page = testData2;
      print(csvbkup.item47.page);
      expect(csvbkup.item47.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.page = defalut;
      print(csvbkup.item47.page);
      expect(csvbkup.item47.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00564_element_check_00540 **********\n\n");
    });

    test('00565_element_check_00541', () async {
      print("\n********** テスト実行：00565_element_check_00541 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.position;
      print(csvbkup.item47.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.position = testData1;
      print(csvbkup.item47.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.position = testData2;
      print(csvbkup.item47.position);
      expect(csvbkup.item47.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.position = defalut;
      print(csvbkup.item47.position);
      expect(csvbkup.item47.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00565_element_check_00541 **********\n\n");
    });

    test('00566_element_check_00542', () async {
      print("\n********** テスト実行：00566_element_check_00542 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.table1;
      print(csvbkup.item47.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.table1 = testData1s;
      print(csvbkup.item47.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.table1 = testData2s;
      print(csvbkup.item47.table1);
      expect(csvbkup.item47.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.table1 = defalut;
      print(csvbkup.item47.table1);
      expect(csvbkup.item47.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00566_element_check_00542 **********\n\n");
    });

    test('00567_element_check_00543', () async {
      print("\n********** テスト実行：00567_element_check_00543 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.total;
      print(csvbkup.item47.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.total = testData1;
      print(csvbkup.item47.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.total = testData2;
      print(csvbkup.item47.total);
      expect(csvbkup.item47.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.total = defalut;
      print(csvbkup.item47.total);
      expect(csvbkup.item47.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00567_element_check_00543 **********\n\n");
    });

    test('00568_element_check_00544', () async {
      print("\n********** テスト実行：00568_element_check_00544 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.t_exe1;
      print(csvbkup.item47.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.t_exe1 = testData1s;
      print(csvbkup.item47.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.t_exe1 = testData2s;
      print(csvbkup.item47.t_exe1);
      expect(csvbkup.item47.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.t_exe1 = defalut;
      print(csvbkup.item47.t_exe1);
      expect(csvbkup.item47.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00568_element_check_00544 **********\n\n");
    });

    test('00569_element_check_00545', () async {
      print("\n********** テスト実行：00569_element_check_00545 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.section;
      print(csvbkup.item47.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.section = testData1s;
      print(csvbkup.item47.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.section = testData2s;
      print(csvbkup.item47.section);
      expect(csvbkup.item47.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.section = defalut;
      print(csvbkup.item47.section);
      expect(csvbkup.item47.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00569_element_check_00545 **********\n\n");
    });

    test('00570_element_check_00546', () async {
      print("\n********** テスト実行：00570_element_check_00546 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.keyword;
      print(csvbkup.item47.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.keyword = testData1s;
      print(csvbkup.item47.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.keyword = testData2s;
      print(csvbkup.item47.keyword);
      expect(csvbkup.item47.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.keyword = defalut;
      print(csvbkup.item47.keyword);
      expect(csvbkup.item47.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00570_element_check_00546 **********\n\n");
    });

    test('00571_element_check_00547', () async {
      print("\n********** テスト実行：00571_element_check_00547 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.keyword2;
      print(csvbkup.item47.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.keyword2 = testData1s;
      print(csvbkup.item47.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.keyword2 = testData2s;
      print(csvbkup.item47.keyword2);
      expect(csvbkup.item47.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.keyword2 = defalut;
      print(csvbkup.item47.keyword2);
      expect(csvbkup.item47.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00571_element_check_00547 **********\n\n");
    });

    test('00572_element_check_00548', () async {
      print("\n********** テスト実行：00572_element_check_00548 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.keyword3;
      print(csvbkup.item47.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.keyword3 = testData1s;
      print(csvbkup.item47.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.keyword3 = testData2s;
      print(csvbkup.item47.keyword3);
      expect(csvbkup.item47.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.keyword3 = defalut;
      print(csvbkup.item47.keyword3);
      expect(csvbkup.item47.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00572_element_check_00548 **********\n\n");
    });

    test('00573_element_check_00549', () async {
      print("\n********** テスト実行：00573_element_check_00549 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.backup_day;
      print(csvbkup.item47.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.backup_day = testData1s;
      print(csvbkup.item47.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.backup_day = testData2s;
      print(csvbkup.item47.backup_day);
      expect(csvbkup.item47.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.backup_day = defalut;
      print(csvbkup.item47.backup_day);
      expect(csvbkup.item47.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00573_element_check_00549 **********\n\n");
    });

    test('00574_element_check_00550', () async {
      print("\n********** テスト実行：00574_element_check_00550 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item47.select_dsp;
      print(csvbkup.item47.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item47.select_dsp = testData1;
      print(csvbkup.item47.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item47.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item47.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item47.select_dsp = testData2;
      print(csvbkup.item47.select_dsp);
      expect(csvbkup.item47.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item47.select_dsp = defalut;
      print(csvbkup.item47.select_dsp);
      expect(csvbkup.item47.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item47.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00574_element_check_00550 **********\n\n");
    });

    test('00575_element_check_00551', () async {
      print("\n********** テスト実行：00575_element_check_00551 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.onoff;
      print(csvbkup.item48.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.onoff = testData1;
      print(csvbkup.item48.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.onoff = testData2;
      print(csvbkup.item48.onoff);
      expect(csvbkup.item48.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.onoff = defalut;
      print(csvbkup.item48.onoff);
      expect(csvbkup.item48.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00575_element_check_00551 **********\n\n");
    });

    test('00576_element_check_00552', () async {
      print("\n********** テスト実行：00576_element_check_00552 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.page;
      print(csvbkup.item48.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.page = testData1;
      print(csvbkup.item48.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.page = testData2;
      print(csvbkup.item48.page);
      expect(csvbkup.item48.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.page = defalut;
      print(csvbkup.item48.page);
      expect(csvbkup.item48.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00576_element_check_00552 **********\n\n");
    });

    test('00577_element_check_00553', () async {
      print("\n********** テスト実行：00577_element_check_00553 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.position;
      print(csvbkup.item48.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.position = testData1;
      print(csvbkup.item48.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.position = testData2;
      print(csvbkup.item48.position);
      expect(csvbkup.item48.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.position = defalut;
      print(csvbkup.item48.position);
      expect(csvbkup.item48.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00577_element_check_00553 **********\n\n");
    });

    test('00578_element_check_00554', () async {
      print("\n********** テスト実行：00578_element_check_00554 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.table1;
      print(csvbkup.item48.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.table1 = testData1s;
      print(csvbkup.item48.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.table1 = testData2s;
      print(csvbkup.item48.table1);
      expect(csvbkup.item48.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.table1 = defalut;
      print(csvbkup.item48.table1);
      expect(csvbkup.item48.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00578_element_check_00554 **********\n\n");
    });

    test('00579_element_check_00555', () async {
      print("\n********** テスト実行：00579_element_check_00555 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.total;
      print(csvbkup.item48.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.total = testData1;
      print(csvbkup.item48.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.total = testData2;
      print(csvbkup.item48.total);
      expect(csvbkup.item48.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.total = defalut;
      print(csvbkup.item48.total);
      expect(csvbkup.item48.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00579_element_check_00555 **********\n\n");
    });

    test('00580_element_check_00556', () async {
      print("\n********** テスト実行：00580_element_check_00556 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.t_exe1;
      print(csvbkup.item48.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.t_exe1 = testData1s;
      print(csvbkup.item48.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.t_exe1 = testData2s;
      print(csvbkup.item48.t_exe1);
      expect(csvbkup.item48.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.t_exe1 = defalut;
      print(csvbkup.item48.t_exe1);
      expect(csvbkup.item48.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00580_element_check_00556 **********\n\n");
    });

    test('00581_element_check_00557', () async {
      print("\n********** テスト実行：00581_element_check_00557 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.section;
      print(csvbkup.item48.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.section = testData1s;
      print(csvbkup.item48.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.section = testData2s;
      print(csvbkup.item48.section);
      expect(csvbkup.item48.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.section = defalut;
      print(csvbkup.item48.section);
      expect(csvbkup.item48.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00581_element_check_00557 **********\n\n");
    });

    test('00582_element_check_00558', () async {
      print("\n********** テスト実行：00582_element_check_00558 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.keyword;
      print(csvbkup.item48.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.keyword = testData1s;
      print(csvbkup.item48.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.keyword = testData2s;
      print(csvbkup.item48.keyword);
      expect(csvbkup.item48.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.keyword = defalut;
      print(csvbkup.item48.keyword);
      expect(csvbkup.item48.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00582_element_check_00558 **********\n\n");
    });

    test('00583_element_check_00559', () async {
      print("\n********** テスト実行：00583_element_check_00559 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.keyword2;
      print(csvbkup.item48.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.keyword2 = testData1s;
      print(csvbkup.item48.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.keyword2 = testData2s;
      print(csvbkup.item48.keyword2);
      expect(csvbkup.item48.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.keyword2 = defalut;
      print(csvbkup.item48.keyword2);
      expect(csvbkup.item48.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00583_element_check_00559 **********\n\n");
    });

    test('00584_element_check_00560', () async {
      print("\n********** テスト実行：00584_element_check_00560 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.keyword3;
      print(csvbkup.item48.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.keyword3 = testData1s;
      print(csvbkup.item48.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.keyword3 = testData2s;
      print(csvbkup.item48.keyword3);
      expect(csvbkup.item48.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.keyword3 = defalut;
      print(csvbkup.item48.keyword3);
      expect(csvbkup.item48.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00584_element_check_00560 **********\n\n");
    });

    test('00585_element_check_00561', () async {
      print("\n********** テスト実行：00585_element_check_00561 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.backup_day;
      print(csvbkup.item48.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.backup_day = testData1s;
      print(csvbkup.item48.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.backup_day = testData2s;
      print(csvbkup.item48.backup_day);
      expect(csvbkup.item48.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.backup_day = defalut;
      print(csvbkup.item48.backup_day);
      expect(csvbkup.item48.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00585_element_check_00561 **********\n\n");
    });

    test('00586_element_check_00562', () async {
      print("\n********** テスト実行：00586_element_check_00562 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item48.select_dsp;
      print(csvbkup.item48.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item48.select_dsp = testData1;
      print(csvbkup.item48.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item48.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item48.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item48.select_dsp = testData2;
      print(csvbkup.item48.select_dsp);
      expect(csvbkup.item48.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item48.select_dsp = defalut;
      print(csvbkup.item48.select_dsp);
      expect(csvbkup.item48.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item48.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00586_element_check_00562 **********\n\n");
    });

    test('00587_element_check_00563', () async {
      print("\n********** テスト実行：00587_element_check_00563 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.onoff;
      print(csvbkup.item49.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.onoff = testData1;
      print(csvbkup.item49.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.onoff = testData2;
      print(csvbkup.item49.onoff);
      expect(csvbkup.item49.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.onoff = defalut;
      print(csvbkup.item49.onoff);
      expect(csvbkup.item49.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00587_element_check_00563 **********\n\n");
    });

    test('00588_element_check_00564', () async {
      print("\n********** テスト実行：00588_element_check_00564 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.page;
      print(csvbkup.item49.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.page = testData1;
      print(csvbkup.item49.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.page = testData2;
      print(csvbkup.item49.page);
      expect(csvbkup.item49.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.page = defalut;
      print(csvbkup.item49.page);
      expect(csvbkup.item49.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00588_element_check_00564 **********\n\n");
    });

    test('00589_element_check_00565', () async {
      print("\n********** テスト実行：00589_element_check_00565 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.position;
      print(csvbkup.item49.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.position = testData1;
      print(csvbkup.item49.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.position = testData2;
      print(csvbkup.item49.position);
      expect(csvbkup.item49.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.position = defalut;
      print(csvbkup.item49.position);
      expect(csvbkup.item49.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00589_element_check_00565 **********\n\n");
    });

    test('00590_element_check_00566', () async {
      print("\n********** テスト実行：00590_element_check_00566 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.table1;
      print(csvbkup.item49.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.table1 = testData1s;
      print(csvbkup.item49.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.table1 = testData2s;
      print(csvbkup.item49.table1);
      expect(csvbkup.item49.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.table1 = defalut;
      print(csvbkup.item49.table1);
      expect(csvbkup.item49.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00590_element_check_00566 **********\n\n");
    });

    test('00591_element_check_00567', () async {
      print("\n********** テスト実行：00591_element_check_00567 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.total;
      print(csvbkup.item49.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.total = testData1;
      print(csvbkup.item49.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.total = testData2;
      print(csvbkup.item49.total);
      expect(csvbkup.item49.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.total = defalut;
      print(csvbkup.item49.total);
      expect(csvbkup.item49.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00591_element_check_00567 **********\n\n");
    });

    test('00592_element_check_00568', () async {
      print("\n********** テスト実行：00592_element_check_00568 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.t_exe1;
      print(csvbkup.item49.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.t_exe1 = testData1s;
      print(csvbkup.item49.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.t_exe1 = testData2s;
      print(csvbkup.item49.t_exe1);
      expect(csvbkup.item49.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.t_exe1 = defalut;
      print(csvbkup.item49.t_exe1);
      expect(csvbkup.item49.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00592_element_check_00568 **********\n\n");
    });

    test('00593_element_check_00569', () async {
      print("\n********** テスト実行：00593_element_check_00569 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.section;
      print(csvbkup.item49.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.section = testData1s;
      print(csvbkup.item49.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.section = testData2s;
      print(csvbkup.item49.section);
      expect(csvbkup.item49.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.section = defalut;
      print(csvbkup.item49.section);
      expect(csvbkup.item49.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00593_element_check_00569 **********\n\n");
    });

    test('00594_element_check_00570', () async {
      print("\n********** テスト実行：00594_element_check_00570 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.keyword;
      print(csvbkup.item49.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.keyword = testData1s;
      print(csvbkup.item49.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.keyword = testData2s;
      print(csvbkup.item49.keyword);
      expect(csvbkup.item49.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.keyword = defalut;
      print(csvbkup.item49.keyword);
      expect(csvbkup.item49.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00594_element_check_00570 **********\n\n");
    });

    test('00595_element_check_00571', () async {
      print("\n********** テスト実行：00595_element_check_00571 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.keyword2;
      print(csvbkup.item49.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.keyword2 = testData1s;
      print(csvbkup.item49.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.keyword2 = testData2s;
      print(csvbkup.item49.keyword2);
      expect(csvbkup.item49.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.keyword2 = defalut;
      print(csvbkup.item49.keyword2);
      expect(csvbkup.item49.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00595_element_check_00571 **********\n\n");
    });

    test('00596_element_check_00572', () async {
      print("\n********** テスト実行：00596_element_check_00572 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.keyword3;
      print(csvbkup.item49.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.keyword3 = testData1s;
      print(csvbkup.item49.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.keyword3 = testData2s;
      print(csvbkup.item49.keyword3);
      expect(csvbkup.item49.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.keyword3 = defalut;
      print(csvbkup.item49.keyword3);
      expect(csvbkup.item49.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00596_element_check_00572 **********\n\n");
    });

    test('00597_element_check_00573', () async {
      print("\n********** テスト実行：00597_element_check_00573 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.backup_day;
      print(csvbkup.item49.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.backup_day = testData1s;
      print(csvbkup.item49.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.backup_day = testData2s;
      print(csvbkup.item49.backup_day);
      expect(csvbkup.item49.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.backup_day = defalut;
      print(csvbkup.item49.backup_day);
      expect(csvbkup.item49.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00597_element_check_00573 **********\n\n");
    });

    test('00598_element_check_00574', () async {
      print("\n********** テスト実行：00598_element_check_00574 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item49.select_dsp;
      print(csvbkup.item49.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item49.select_dsp = testData1;
      print(csvbkup.item49.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item49.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item49.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item49.select_dsp = testData2;
      print(csvbkup.item49.select_dsp);
      expect(csvbkup.item49.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item49.select_dsp = defalut;
      print(csvbkup.item49.select_dsp);
      expect(csvbkup.item49.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item49.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00598_element_check_00574 **********\n\n");
    });

    test('00599_element_check_00575', () async {
      print("\n********** テスト実行：00599_element_check_00575 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.onoff;
      print(csvbkup.item50.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.onoff = testData1;
      print(csvbkup.item50.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.onoff = testData2;
      print(csvbkup.item50.onoff);
      expect(csvbkup.item50.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.onoff = defalut;
      print(csvbkup.item50.onoff);
      expect(csvbkup.item50.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00599_element_check_00575 **********\n\n");
    });

    test('00600_element_check_00576', () async {
      print("\n********** テスト実行：00600_element_check_00576 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.page;
      print(csvbkup.item50.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.page = testData1;
      print(csvbkup.item50.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.page = testData2;
      print(csvbkup.item50.page);
      expect(csvbkup.item50.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.page = defalut;
      print(csvbkup.item50.page);
      expect(csvbkup.item50.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00600_element_check_00576 **********\n\n");
    });

    test('00601_element_check_00577', () async {
      print("\n********** テスト実行：00601_element_check_00577 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.position;
      print(csvbkup.item50.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.position = testData1;
      print(csvbkup.item50.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.position = testData2;
      print(csvbkup.item50.position);
      expect(csvbkup.item50.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.position = defalut;
      print(csvbkup.item50.position);
      expect(csvbkup.item50.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00601_element_check_00577 **********\n\n");
    });

    test('00602_element_check_00578', () async {
      print("\n********** テスト実行：00602_element_check_00578 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.table1;
      print(csvbkup.item50.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.table1 = testData1s;
      print(csvbkup.item50.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.table1 = testData2s;
      print(csvbkup.item50.table1);
      expect(csvbkup.item50.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.table1 = defalut;
      print(csvbkup.item50.table1);
      expect(csvbkup.item50.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00602_element_check_00578 **********\n\n");
    });

    test('00603_element_check_00579', () async {
      print("\n********** テスト実行：00603_element_check_00579 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.total;
      print(csvbkup.item50.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.total = testData1;
      print(csvbkup.item50.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.total = testData2;
      print(csvbkup.item50.total);
      expect(csvbkup.item50.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.total = defalut;
      print(csvbkup.item50.total);
      expect(csvbkup.item50.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00603_element_check_00579 **********\n\n");
    });

    test('00604_element_check_00580', () async {
      print("\n********** テスト実行：00604_element_check_00580 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.t_exe1;
      print(csvbkup.item50.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.t_exe1 = testData1s;
      print(csvbkup.item50.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.t_exe1 = testData2s;
      print(csvbkup.item50.t_exe1);
      expect(csvbkup.item50.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.t_exe1 = defalut;
      print(csvbkup.item50.t_exe1);
      expect(csvbkup.item50.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00604_element_check_00580 **********\n\n");
    });

    test('00605_element_check_00581', () async {
      print("\n********** テスト実行：00605_element_check_00581 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.section;
      print(csvbkup.item50.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.section = testData1s;
      print(csvbkup.item50.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.section = testData2s;
      print(csvbkup.item50.section);
      expect(csvbkup.item50.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.section = defalut;
      print(csvbkup.item50.section);
      expect(csvbkup.item50.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00605_element_check_00581 **********\n\n");
    });

    test('00606_element_check_00582', () async {
      print("\n********** テスト実行：00606_element_check_00582 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.keyword;
      print(csvbkup.item50.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.keyword = testData1s;
      print(csvbkup.item50.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.keyword = testData2s;
      print(csvbkup.item50.keyword);
      expect(csvbkup.item50.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.keyword = defalut;
      print(csvbkup.item50.keyword);
      expect(csvbkup.item50.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00606_element_check_00582 **********\n\n");
    });

    test('00607_element_check_00583', () async {
      print("\n********** テスト実行：00607_element_check_00583 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.keyword2;
      print(csvbkup.item50.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.keyword2 = testData1s;
      print(csvbkup.item50.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.keyword2 = testData2s;
      print(csvbkup.item50.keyword2);
      expect(csvbkup.item50.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.keyword2 = defalut;
      print(csvbkup.item50.keyword2);
      expect(csvbkup.item50.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00607_element_check_00583 **********\n\n");
    });

    test('00608_element_check_00584', () async {
      print("\n********** テスト実行：00608_element_check_00584 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.keyword3;
      print(csvbkup.item50.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.keyword3 = testData1s;
      print(csvbkup.item50.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.keyword3 = testData2s;
      print(csvbkup.item50.keyword3);
      expect(csvbkup.item50.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.keyword3 = defalut;
      print(csvbkup.item50.keyword3);
      expect(csvbkup.item50.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00608_element_check_00584 **********\n\n");
    });

    test('00609_element_check_00585', () async {
      print("\n********** テスト実行：00609_element_check_00585 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.backup_day;
      print(csvbkup.item50.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.backup_day = testData1s;
      print(csvbkup.item50.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.backup_day = testData2s;
      print(csvbkup.item50.backup_day);
      expect(csvbkup.item50.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.backup_day = defalut;
      print(csvbkup.item50.backup_day);
      expect(csvbkup.item50.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00609_element_check_00585 **********\n\n");
    });

    test('00610_element_check_00586', () async {
      print("\n********** テスト実行：00610_element_check_00586 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item50.select_dsp;
      print(csvbkup.item50.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item50.select_dsp = testData1;
      print(csvbkup.item50.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item50.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item50.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item50.select_dsp = testData2;
      print(csvbkup.item50.select_dsp);
      expect(csvbkup.item50.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item50.select_dsp = defalut;
      print(csvbkup.item50.select_dsp);
      expect(csvbkup.item50.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item50.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00610_element_check_00586 **********\n\n");
    });

    test('00611_element_check_00587', () async {
      print("\n********** テスト実行：00611_element_check_00587 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.onoff;
      print(csvbkup.item51.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.onoff = testData1;
      print(csvbkup.item51.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.onoff = testData2;
      print(csvbkup.item51.onoff);
      expect(csvbkup.item51.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.onoff = defalut;
      print(csvbkup.item51.onoff);
      expect(csvbkup.item51.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00611_element_check_00587 **********\n\n");
    });

    test('00612_element_check_00588', () async {
      print("\n********** テスト実行：00612_element_check_00588 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.page;
      print(csvbkup.item51.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.page = testData1;
      print(csvbkup.item51.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.page = testData2;
      print(csvbkup.item51.page);
      expect(csvbkup.item51.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.page = defalut;
      print(csvbkup.item51.page);
      expect(csvbkup.item51.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00612_element_check_00588 **********\n\n");
    });

    test('00613_element_check_00589', () async {
      print("\n********** テスト実行：00613_element_check_00589 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.position;
      print(csvbkup.item51.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.position = testData1;
      print(csvbkup.item51.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.position = testData2;
      print(csvbkup.item51.position);
      expect(csvbkup.item51.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.position = defalut;
      print(csvbkup.item51.position);
      expect(csvbkup.item51.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00613_element_check_00589 **********\n\n");
    });

    test('00614_element_check_00590', () async {
      print("\n********** テスト実行：00614_element_check_00590 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.table1;
      print(csvbkup.item51.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.table1 = testData1s;
      print(csvbkup.item51.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.table1 = testData2s;
      print(csvbkup.item51.table1);
      expect(csvbkup.item51.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.table1 = defalut;
      print(csvbkup.item51.table1);
      expect(csvbkup.item51.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00614_element_check_00590 **********\n\n");
    });

    test('00615_element_check_00591', () async {
      print("\n********** テスト実行：00615_element_check_00591 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.total;
      print(csvbkup.item51.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.total = testData1;
      print(csvbkup.item51.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.total = testData2;
      print(csvbkup.item51.total);
      expect(csvbkup.item51.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.total = defalut;
      print(csvbkup.item51.total);
      expect(csvbkup.item51.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00615_element_check_00591 **********\n\n");
    });

    test('00616_element_check_00592', () async {
      print("\n********** テスト実行：00616_element_check_00592 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.t_exe1;
      print(csvbkup.item51.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.t_exe1 = testData1s;
      print(csvbkup.item51.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.t_exe1 = testData2s;
      print(csvbkup.item51.t_exe1);
      expect(csvbkup.item51.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.t_exe1 = defalut;
      print(csvbkup.item51.t_exe1);
      expect(csvbkup.item51.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00616_element_check_00592 **********\n\n");
    });

    test('00617_element_check_00593', () async {
      print("\n********** テスト実行：00617_element_check_00593 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.section;
      print(csvbkup.item51.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.section = testData1s;
      print(csvbkup.item51.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.section = testData2s;
      print(csvbkup.item51.section);
      expect(csvbkup.item51.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.section = defalut;
      print(csvbkup.item51.section);
      expect(csvbkup.item51.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00617_element_check_00593 **********\n\n");
    });

    test('00618_element_check_00594', () async {
      print("\n********** テスト実行：00618_element_check_00594 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.keyword;
      print(csvbkup.item51.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.keyword = testData1s;
      print(csvbkup.item51.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.keyword = testData2s;
      print(csvbkup.item51.keyword);
      expect(csvbkup.item51.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.keyword = defalut;
      print(csvbkup.item51.keyword);
      expect(csvbkup.item51.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00618_element_check_00594 **********\n\n");
    });

    test('00619_element_check_00595', () async {
      print("\n********** テスト実行：00619_element_check_00595 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.keyword2;
      print(csvbkup.item51.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.keyword2 = testData1s;
      print(csvbkup.item51.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.keyword2 = testData2s;
      print(csvbkup.item51.keyword2);
      expect(csvbkup.item51.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.keyword2 = defalut;
      print(csvbkup.item51.keyword2);
      expect(csvbkup.item51.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00619_element_check_00595 **********\n\n");
    });

    test('00620_element_check_00596', () async {
      print("\n********** テスト実行：00620_element_check_00596 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.backup_day;
      print(csvbkup.item51.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.backup_day = testData1s;
      print(csvbkup.item51.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.backup_day = testData2s;
      print(csvbkup.item51.backup_day);
      expect(csvbkup.item51.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.backup_day = defalut;
      print(csvbkup.item51.backup_day);
      expect(csvbkup.item51.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00620_element_check_00596 **********\n\n");
    });

    test('00621_element_check_00597', () async {
      print("\n********** テスト実行：00621_element_check_00597 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item51.select_dsp;
      print(csvbkup.item51.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item51.select_dsp = testData1;
      print(csvbkup.item51.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item51.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item51.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item51.select_dsp = testData2;
      print(csvbkup.item51.select_dsp);
      expect(csvbkup.item51.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item51.select_dsp = defalut;
      print(csvbkup.item51.select_dsp);
      expect(csvbkup.item51.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item51.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00621_element_check_00597 **********\n\n");
    });

    test('00622_element_check_00598', () async {
      print("\n********** テスト実行：00622_element_check_00598 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.onoff;
      print(csvbkup.item52.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.onoff = testData1;
      print(csvbkup.item52.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.onoff = testData2;
      print(csvbkup.item52.onoff);
      expect(csvbkup.item52.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.onoff = defalut;
      print(csvbkup.item52.onoff);
      expect(csvbkup.item52.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00622_element_check_00598 **********\n\n");
    });

    test('00623_element_check_00599', () async {
      print("\n********** テスト実行：00623_element_check_00599 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.page;
      print(csvbkup.item52.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.page = testData1;
      print(csvbkup.item52.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.page = testData2;
      print(csvbkup.item52.page);
      expect(csvbkup.item52.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.page = defalut;
      print(csvbkup.item52.page);
      expect(csvbkup.item52.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00623_element_check_00599 **********\n\n");
    });

    test('00624_element_check_00600', () async {
      print("\n********** テスト実行：00624_element_check_00600 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.position;
      print(csvbkup.item52.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.position = testData1;
      print(csvbkup.item52.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.position = testData2;
      print(csvbkup.item52.position);
      expect(csvbkup.item52.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.position = defalut;
      print(csvbkup.item52.position);
      expect(csvbkup.item52.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00624_element_check_00600 **********\n\n");
    });

    test('00625_element_check_00601', () async {
      print("\n********** テスト実行：00625_element_check_00601 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.table1;
      print(csvbkup.item52.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.table1 = testData1s;
      print(csvbkup.item52.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.table1 = testData2s;
      print(csvbkup.item52.table1);
      expect(csvbkup.item52.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.table1 = defalut;
      print(csvbkup.item52.table1);
      expect(csvbkup.item52.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00625_element_check_00601 **********\n\n");
    });

    test('00626_element_check_00602', () async {
      print("\n********** テスト実行：00626_element_check_00602 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.total;
      print(csvbkup.item52.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.total = testData1;
      print(csvbkup.item52.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.total = testData2;
      print(csvbkup.item52.total);
      expect(csvbkup.item52.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.total = defalut;
      print(csvbkup.item52.total);
      expect(csvbkup.item52.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00626_element_check_00602 **********\n\n");
    });

    test('00627_element_check_00603', () async {
      print("\n********** テスト実行：00627_element_check_00603 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.t_exe1;
      print(csvbkup.item52.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.t_exe1 = testData1s;
      print(csvbkup.item52.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.t_exe1 = testData2s;
      print(csvbkup.item52.t_exe1);
      expect(csvbkup.item52.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.t_exe1 = defalut;
      print(csvbkup.item52.t_exe1);
      expect(csvbkup.item52.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00627_element_check_00603 **********\n\n");
    });

    test('00628_element_check_00604', () async {
      print("\n********** テスト実行：00628_element_check_00604 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.section;
      print(csvbkup.item52.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.section = testData1s;
      print(csvbkup.item52.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.section = testData2s;
      print(csvbkup.item52.section);
      expect(csvbkup.item52.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.section = defalut;
      print(csvbkup.item52.section);
      expect(csvbkup.item52.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00628_element_check_00604 **********\n\n");
    });

    test('00629_element_check_00605', () async {
      print("\n********** テスト実行：00629_element_check_00605 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.keyword;
      print(csvbkup.item52.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.keyword = testData1s;
      print(csvbkup.item52.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.keyword = testData2s;
      print(csvbkup.item52.keyword);
      expect(csvbkup.item52.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.keyword = defalut;
      print(csvbkup.item52.keyword);
      expect(csvbkup.item52.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00629_element_check_00605 **********\n\n");
    });

    test('00630_element_check_00606', () async {
      print("\n********** テスト実行：00630_element_check_00606 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.keyword2;
      print(csvbkup.item52.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.keyword2 = testData1s;
      print(csvbkup.item52.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.keyword2 = testData2s;
      print(csvbkup.item52.keyword2);
      expect(csvbkup.item52.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.keyword2 = defalut;
      print(csvbkup.item52.keyword2);
      expect(csvbkup.item52.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00630_element_check_00606 **********\n\n");
    });

    test('00631_element_check_00607', () async {
      print("\n********** テスト実行：00631_element_check_00607 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.backup_day;
      print(csvbkup.item52.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.backup_day = testData1s;
      print(csvbkup.item52.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.backup_day = testData2s;
      print(csvbkup.item52.backup_day);
      expect(csvbkup.item52.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.backup_day = defalut;
      print(csvbkup.item52.backup_day);
      expect(csvbkup.item52.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00631_element_check_00607 **********\n\n");
    });

    test('00632_element_check_00608', () async {
      print("\n********** テスト実行：00632_element_check_00608 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item52.select_dsp;
      print(csvbkup.item52.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item52.select_dsp = testData1;
      print(csvbkup.item52.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item52.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item52.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item52.select_dsp = testData2;
      print(csvbkup.item52.select_dsp);
      expect(csvbkup.item52.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item52.select_dsp = defalut;
      print(csvbkup.item52.select_dsp);
      expect(csvbkup.item52.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item52.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00632_element_check_00608 **********\n\n");
    });

    test('00633_element_check_00609', () async {
      print("\n********** テスト実行：00633_element_check_00609 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.onoff;
      print(csvbkup.item53.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.onoff = testData1;
      print(csvbkup.item53.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.onoff = testData2;
      print(csvbkup.item53.onoff);
      expect(csvbkup.item53.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.onoff = defalut;
      print(csvbkup.item53.onoff);
      expect(csvbkup.item53.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00633_element_check_00609 **********\n\n");
    });

    test('00634_element_check_00610', () async {
      print("\n********** テスト実行：00634_element_check_00610 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.page;
      print(csvbkup.item53.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.page = testData1;
      print(csvbkup.item53.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.page = testData2;
      print(csvbkup.item53.page);
      expect(csvbkup.item53.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.page = defalut;
      print(csvbkup.item53.page);
      expect(csvbkup.item53.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00634_element_check_00610 **********\n\n");
    });

    test('00635_element_check_00611', () async {
      print("\n********** テスト実行：00635_element_check_00611 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.position;
      print(csvbkup.item53.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.position = testData1;
      print(csvbkup.item53.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.position = testData2;
      print(csvbkup.item53.position);
      expect(csvbkup.item53.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.position = defalut;
      print(csvbkup.item53.position);
      expect(csvbkup.item53.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00635_element_check_00611 **********\n\n");
    });

    test('00636_element_check_00612', () async {
      print("\n********** テスト実行：00636_element_check_00612 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.table1;
      print(csvbkup.item53.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.table1 = testData1s;
      print(csvbkup.item53.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.table1 = testData2s;
      print(csvbkup.item53.table1);
      expect(csvbkup.item53.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.table1 = defalut;
      print(csvbkup.item53.table1);
      expect(csvbkup.item53.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00636_element_check_00612 **********\n\n");
    });

    test('00637_element_check_00613', () async {
      print("\n********** テスト実行：00637_element_check_00613 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.total;
      print(csvbkup.item53.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.total = testData1;
      print(csvbkup.item53.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.total = testData2;
      print(csvbkup.item53.total);
      expect(csvbkup.item53.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.total = defalut;
      print(csvbkup.item53.total);
      expect(csvbkup.item53.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00637_element_check_00613 **********\n\n");
    });

    test('00638_element_check_00614', () async {
      print("\n********** テスト実行：00638_element_check_00614 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.t_exe1;
      print(csvbkup.item53.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.t_exe1 = testData1s;
      print(csvbkup.item53.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.t_exe1 = testData2s;
      print(csvbkup.item53.t_exe1);
      expect(csvbkup.item53.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.t_exe1 = defalut;
      print(csvbkup.item53.t_exe1);
      expect(csvbkup.item53.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00638_element_check_00614 **********\n\n");
    });

    test('00639_element_check_00615', () async {
      print("\n********** テスト実行：00639_element_check_00615 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.t_exe2;
      print(csvbkup.item53.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.t_exe2 = testData1s;
      print(csvbkup.item53.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.t_exe2 = testData2s;
      print(csvbkup.item53.t_exe2);
      expect(csvbkup.item53.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.t_exe2 = defalut;
      print(csvbkup.item53.t_exe2);
      expect(csvbkup.item53.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00639_element_check_00615 **********\n\n");
    });

    test('00640_element_check_00616', () async {
      print("\n********** テスト実行：00640_element_check_00616 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.section;
      print(csvbkup.item53.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.section = testData1s;
      print(csvbkup.item53.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.section = testData2s;
      print(csvbkup.item53.section);
      expect(csvbkup.item53.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.section = defalut;
      print(csvbkup.item53.section);
      expect(csvbkup.item53.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00640_element_check_00616 **********\n\n");
    });

    test('00641_element_check_00617', () async {
      print("\n********** テスト実行：00641_element_check_00617 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.keyword;
      print(csvbkup.item53.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.keyword = testData1s;
      print(csvbkup.item53.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.keyword = testData2s;
      print(csvbkup.item53.keyword);
      expect(csvbkup.item53.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.keyword = defalut;
      print(csvbkup.item53.keyword);
      expect(csvbkup.item53.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00641_element_check_00617 **********\n\n");
    });

    test('00642_element_check_00618', () async {
      print("\n********** テスト実行：00642_element_check_00618 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.keyword2;
      print(csvbkup.item53.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.keyword2 = testData1s;
      print(csvbkup.item53.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.keyword2 = testData2s;
      print(csvbkup.item53.keyword2);
      expect(csvbkup.item53.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.keyword2 = defalut;
      print(csvbkup.item53.keyword2);
      expect(csvbkup.item53.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00642_element_check_00618 **********\n\n");
    });

    test('00643_element_check_00619', () async {
      print("\n********** テスト実行：00643_element_check_00619 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.keyword3;
      print(csvbkup.item53.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.keyword3 = testData1s;
      print(csvbkup.item53.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.keyword3 = testData2s;
      print(csvbkup.item53.keyword3);
      expect(csvbkup.item53.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.keyword3 = defalut;
      print(csvbkup.item53.keyword3);
      expect(csvbkup.item53.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00643_element_check_00619 **********\n\n");
    });

    test('00644_element_check_00620', () async {
      print("\n********** テスト実行：00644_element_check_00620 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.backup_day;
      print(csvbkup.item53.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.backup_day = testData1s;
      print(csvbkup.item53.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.backup_day = testData2s;
      print(csvbkup.item53.backup_day);
      expect(csvbkup.item53.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.backup_day = defalut;
      print(csvbkup.item53.backup_day);
      expect(csvbkup.item53.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00644_element_check_00620 **********\n\n");
    });

    test('00645_element_check_00621', () async {
      print("\n********** テスト実行：00645_element_check_00621 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item53.select_dsp;
      print(csvbkup.item53.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item53.select_dsp = testData1;
      print(csvbkup.item53.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item53.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item53.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item53.select_dsp = testData2;
      print(csvbkup.item53.select_dsp);
      expect(csvbkup.item53.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item53.select_dsp = defalut;
      print(csvbkup.item53.select_dsp);
      expect(csvbkup.item53.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item53.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00645_element_check_00621 **********\n\n");
    });

    test('00646_element_check_00622', () async {
      print("\n********** テスト実行：00646_element_check_00622 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.onoff;
      print(csvbkup.item54.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.onoff = testData1;
      print(csvbkup.item54.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.onoff = testData2;
      print(csvbkup.item54.onoff);
      expect(csvbkup.item54.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.onoff = defalut;
      print(csvbkup.item54.onoff);
      expect(csvbkup.item54.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00646_element_check_00622 **********\n\n");
    });

    test('00647_element_check_00623', () async {
      print("\n********** テスト実行：00647_element_check_00623 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.page;
      print(csvbkup.item54.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.page = testData1;
      print(csvbkup.item54.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.page = testData2;
      print(csvbkup.item54.page);
      expect(csvbkup.item54.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.page = defalut;
      print(csvbkup.item54.page);
      expect(csvbkup.item54.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00647_element_check_00623 **********\n\n");
    });

    test('00648_element_check_00624', () async {
      print("\n********** テスト実行：00648_element_check_00624 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.position;
      print(csvbkup.item54.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.position = testData1;
      print(csvbkup.item54.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.position = testData2;
      print(csvbkup.item54.position);
      expect(csvbkup.item54.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.position = defalut;
      print(csvbkup.item54.position);
      expect(csvbkup.item54.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00648_element_check_00624 **********\n\n");
    });

    test('00649_element_check_00625', () async {
      print("\n********** テスト実行：00649_element_check_00625 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.table1;
      print(csvbkup.item54.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.table1 = testData1s;
      print(csvbkup.item54.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.table1 = testData2s;
      print(csvbkup.item54.table1);
      expect(csvbkup.item54.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.table1 = defalut;
      print(csvbkup.item54.table1);
      expect(csvbkup.item54.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00649_element_check_00625 **********\n\n");
    });

    test('00650_element_check_00626', () async {
      print("\n********** テスト実行：00650_element_check_00626 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.total;
      print(csvbkup.item54.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.total = testData1;
      print(csvbkup.item54.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.total = testData2;
      print(csvbkup.item54.total);
      expect(csvbkup.item54.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.total = defalut;
      print(csvbkup.item54.total);
      expect(csvbkup.item54.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00650_element_check_00626 **********\n\n");
    });

    test('00651_element_check_00627', () async {
      print("\n********** テスト実行：00651_element_check_00627 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.t_exe1;
      print(csvbkup.item54.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.t_exe1 = testData1s;
      print(csvbkup.item54.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.t_exe1 = testData2s;
      print(csvbkup.item54.t_exe1);
      expect(csvbkup.item54.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.t_exe1 = defalut;
      print(csvbkup.item54.t_exe1);
      expect(csvbkup.item54.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00651_element_check_00627 **********\n\n");
    });

    test('00652_element_check_00628', () async {
      print("\n********** テスト実行：00652_element_check_00628 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.t_exe2;
      print(csvbkup.item54.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.t_exe2 = testData1s;
      print(csvbkup.item54.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.t_exe2 = testData2s;
      print(csvbkup.item54.t_exe2);
      expect(csvbkup.item54.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.t_exe2 = defalut;
      print(csvbkup.item54.t_exe2);
      expect(csvbkup.item54.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00652_element_check_00628 **********\n\n");
    });

    test('00653_element_check_00629', () async {
      print("\n********** テスト実行：00653_element_check_00629 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.t_exe3;
      print(csvbkup.item54.t_exe3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.t_exe3 = testData1s;
      print(csvbkup.item54.t_exe3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.t_exe3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.t_exe3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.t_exe3 = testData2s;
      print(csvbkup.item54.t_exe3);
      expect(csvbkup.item54.t_exe3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.t_exe3 = defalut;
      print(csvbkup.item54.t_exe3);
      expect(csvbkup.item54.t_exe3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00653_element_check_00629 **********\n\n");
    });

    test('00654_element_check_00630', () async {
      print("\n********** テスト実行：00654_element_check_00630 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.t_exe4;
      print(csvbkup.item54.t_exe4);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.t_exe4 = testData1s;
      print(csvbkup.item54.t_exe4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.t_exe4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.t_exe4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.t_exe4 = testData2s;
      print(csvbkup.item54.t_exe4);
      expect(csvbkup.item54.t_exe4 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.t_exe4 = defalut;
      print(csvbkup.item54.t_exe4);
      expect(csvbkup.item54.t_exe4 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00654_element_check_00630 **********\n\n");
    });

    test('00655_element_check_00631', () async {
      print("\n********** テスト実行：00655_element_check_00631 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.t_exe5;
      print(csvbkup.item54.t_exe5);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.t_exe5 = testData1s;
      print(csvbkup.item54.t_exe5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.t_exe5 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.t_exe5 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.t_exe5 = testData2s;
      print(csvbkup.item54.t_exe5);
      expect(csvbkup.item54.t_exe5 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe5 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.t_exe5 = defalut;
      print(csvbkup.item54.t_exe5);
      expect(csvbkup.item54.t_exe5 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00655_element_check_00631 **********\n\n");
    });

    test('00656_element_check_00632', () async {
      print("\n********** テスト実行：00656_element_check_00632 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.t_exe6;
      print(csvbkup.item54.t_exe6);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.t_exe6 = testData1s;
      print(csvbkup.item54.t_exe6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.t_exe6 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.t_exe6 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.t_exe6 = testData2s;
      print(csvbkup.item54.t_exe6);
      expect(csvbkup.item54.t_exe6 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe6 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.t_exe6 = defalut;
      print(csvbkup.item54.t_exe6);
      expect(csvbkup.item54.t_exe6 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.t_exe6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00656_element_check_00632 **********\n\n");
    });

    test('00657_element_check_00633', () async {
      print("\n********** テスト実行：00657_element_check_00633 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.section;
      print(csvbkup.item54.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.section = testData1s;
      print(csvbkup.item54.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.section = testData2s;
      print(csvbkup.item54.section);
      expect(csvbkup.item54.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.section = defalut;
      print(csvbkup.item54.section);
      expect(csvbkup.item54.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00657_element_check_00633 **********\n\n");
    });

    test('00658_element_check_00634', () async {
      print("\n********** テスト実行：00658_element_check_00634 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.keyword;
      print(csvbkup.item54.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.keyword = testData1s;
      print(csvbkup.item54.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.keyword = testData2s;
      print(csvbkup.item54.keyword);
      expect(csvbkup.item54.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.keyword = defalut;
      print(csvbkup.item54.keyword);
      expect(csvbkup.item54.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00658_element_check_00634 **********\n\n");
    });

    test('00659_element_check_00635', () async {
      print("\n********** テスト実行：00659_element_check_00635 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.keyword2;
      print(csvbkup.item54.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.keyword2 = testData1s;
      print(csvbkup.item54.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.keyword2 = testData2s;
      print(csvbkup.item54.keyword2);
      expect(csvbkup.item54.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.keyword2 = defalut;
      print(csvbkup.item54.keyword2);
      expect(csvbkup.item54.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00659_element_check_00635 **********\n\n");
    });

    test('00660_element_check_00636', () async {
      print("\n********** テスト実行：00660_element_check_00636 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.keyword3;
      print(csvbkup.item54.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.keyword3 = testData1s;
      print(csvbkup.item54.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.keyword3 = testData2s;
      print(csvbkup.item54.keyword3);
      expect(csvbkup.item54.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.keyword3 = defalut;
      print(csvbkup.item54.keyword3);
      expect(csvbkup.item54.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00660_element_check_00636 **********\n\n");
    });

    test('00661_element_check_00637', () async {
      print("\n********** テスト実行：00661_element_check_00637 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.backup_day;
      print(csvbkup.item54.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.backup_day = testData1s;
      print(csvbkup.item54.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.backup_day = testData2s;
      print(csvbkup.item54.backup_day);
      expect(csvbkup.item54.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.backup_day = defalut;
      print(csvbkup.item54.backup_day);
      expect(csvbkup.item54.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00661_element_check_00637 **********\n\n");
    });

    test('00662_element_check_00638', () async {
      print("\n********** テスト実行：00662_element_check_00638 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item54.select_dsp;
      print(csvbkup.item54.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item54.select_dsp = testData1;
      print(csvbkup.item54.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item54.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item54.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item54.select_dsp = testData2;
      print(csvbkup.item54.select_dsp);
      expect(csvbkup.item54.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item54.select_dsp = defalut;
      print(csvbkup.item54.select_dsp);
      expect(csvbkup.item54.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item54.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00662_element_check_00638 **********\n\n");
    });

    test('00663_element_check_00639', () async {
      print("\n********** テスト実行：00663_element_check_00639 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.onoff;
      print(csvbkup.item55.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.onoff = testData1;
      print(csvbkup.item55.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.onoff = testData2;
      print(csvbkup.item55.onoff);
      expect(csvbkup.item55.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.onoff = defalut;
      print(csvbkup.item55.onoff);
      expect(csvbkup.item55.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00663_element_check_00639 **********\n\n");
    });

    test('00664_element_check_00640', () async {
      print("\n********** テスト実行：00664_element_check_00640 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.page;
      print(csvbkup.item55.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.page = testData1;
      print(csvbkup.item55.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.page = testData2;
      print(csvbkup.item55.page);
      expect(csvbkup.item55.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.page = defalut;
      print(csvbkup.item55.page);
      expect(csvbkup.item55.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00664_element_check_00640 **********\n\n");
    });

    test('00665_element_check_00641', () async {
      print("\n********** テスト実行：00665_element_check_00641 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.position;
      print(csvbkup.item55.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.position = testData1;
      print(csvbkup.item55.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.position = testData2;
      print(csvbkup.item55.position);
      expect(csvbkup.item55.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.position = defalut;
      print(csvbkup.item55.position);
      expect(csvbkup.item55.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00665_element_check_00641 **********\n\n");
    });

    test('00666_element_check_00642', () async {
      print("\n********** テスト実行：00666_element_check_00642 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.table1;
      print(csvbkup.item55.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.table1 = testData1s;
      print(csvbkup.item55.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.table1 = testData2s;
      print(csvbkup.item55.table1);
      expect(csvbkup.item55.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.table1 = defalut;
      print(csvbkup.item55.table1);
      expect(csvbkup.item55.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00666_element_check_00642 **********\n\n");
    });

    test('00667_element_check_00643', () async {
      print("\n********** テスト実行：00667_element_check_00643 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.total;
      print(csvbkup.item55.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.total = testData1;
      print(csvbkup.item55.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.total = testData2;
      print(csvbkup.item55.total);
      expect(csvbkup.item55.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.total = defalut;
      print(csvbkup.item55.total);
      expect(csvbkup.item55.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00667_element_check_00643 **********\n\n");
    });

    test('00668_element_check_00644', () async {
      print("\n********** テスト実行：00668_element_check_00644 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.t_exe1;
      print(csvbkup.item55.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.t_exe1 = testData1s;
      print(csvbkup.item55.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.t_exe1 = testData2s;
      print(csvbkup.item55.t_exe1);
      expect(csvbkup.item55.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.t_exe1 = defalut;
      print(csvbkup.item55.t_exe1);
      expect(csvbkup.item55.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00668_element_check_00644 **********\n\n");
    });

    test('00669_element_check_00645', () async {
      print("\n********** テスト実行：00669_element_check_00645 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.t_exe2;
      print(csvbkup.item55.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.t_exe2 = testData1s;
      print(csvbkup.item55.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.t_exe2 = testData2s;
      print(csvbkup.item55.t_exe2);
      expect(csvbkup.item55.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.t_exe2 = defalut;
      print(csvbkup.item55.t_exe2);
      expect(csvbkup.item55.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00669_element_check_00645 **********\n\n");
    });

    test('00670_element_check_00646', () async {
      print("\n********** テスト実行：00670_element_check_00646 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.section;
      print(csvbkup.item55.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.section = testData1s;
      print(csvbkup.item55.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.section = testData2s;
      print(csvbkup.item55.section);
      expect(csvbkup.item55.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.section = defalut;
      print(csvbkup.item55.section);
      expect(csvbkup.item55.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00670_element_check_00646 **********\n\n");
    });

    test('00671_element_check_00647', () async {
      print("\n********** テスト実行：00671_element_check_00647 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.keyword;
      print(csvbkup.item55.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.keyword = testData1s;
      print(csvbkup.item55.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.keyword = testData2s;
      print(csvbkup.item55.keyword);
      expect(csvbkup.item55.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.keyword = defalut;
      print(csvbkup.item55.keyword);
      expect(csvbkup.item55.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00671_element_check_00647 **********\n\n");
    });

    test('00672_element_check_00648', () async {
      print("\n********** テスト実行：00672_element_check_00648 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.keyword2;
      print(csvbkup.item55.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.keyword2 = testData1s;
      print(csvbkup.item55.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.keyword2 = testData2s;
      print(csvbkup.item55.keyword2);
      expect(csvbkup.item55.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.keyword2 = defalut;
      print(csvbkup.item55.keyword2);
      expect(csvbkup.item55.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00672_element_check_00648 **********\n\n");
    });

    test('00673_element_check_00649', () async {
      print("\n********** テスト実行：00673_element_check_00649 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.keyword3;
      print(csvbkup.item55.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.keyword3 = testData1s;
      print(csvbkup.item55.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.keyword3 = testData2s;
      print(csvbkup.item55.keyword3);
      expect(csvbkup.item55.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.keyword3 = defalut;
      print(csvbkup.item55.keyword3);
      expect(csvbkup.item55.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00673_element_check_00649 **********\n\n");
    });

    test('00674_element_check_00650', () async {
      print("\n********** テスト実行：00674_element_check_00650 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.backup_day;
      print(csvbkup.item55.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.backup_day = testData1s;
      print(csvbkup.item55.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.backup_day = testData2s;
      print(csvbkup.item55.backup_day);
      expect(csvbkup.item55.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.backup_day = defalut;
      print(csvbkup.item55.backup_day);
      expect(csvbkup.item55.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00674_element_check_00650 **********\n\n");
    });

    test('00675_element_check_00651', () async {
      print("\n********** テスト実行：00675_element_check_00651 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item55.select_dsp;
      print(csvbkup.item55.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item55.select_dsp = testData1;
      print(csvbkup.item55.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item55.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item55.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item55.select_dsp = testData2;
      print(csvbkup.item55.select_dsp);
      expect(csvbkup.item55.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item55.select_dsp = defalut;
      print(csvbkup.item55.select_dsp);
      expect(csvbkup.item55.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item55.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00675_element_check_00651 **********\n\n");
    });

    test('00676_element_check_00652', () async {
      print("\n********** テスト実行：00676_element_check_00652 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.onoff;
      print(csvbkup.item56.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.onoff = testData1;
      print(csvbkup.item56.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.onoff = testData2;
      print(csvbkup.item56.onoff);
      expect(csvbkup.item56.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.onoff = defalut;
      print(csvbkup.item56.onoff);
      expect(csvbkup.item56.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00676_element_check_00652 **********\n\n");
    });

    test('00677_element_check_00653', () async {
      print("\n********** テスト実行：00677_element_check_00653 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.page;
      print(csvbkup.item56.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.page = testData1;
      print(csvbkup.item56.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.page = testData2;
      print(csvbkup.item56.page);
      expect(csvbkup.item56.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.page = defalut;
      print(csvbkup.item56.page);
      expect(csvbkup.item56.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00677_element_check_00653 **********\n\n");
    });

    test('00678_element_check_00654', () async {
      print("\n********** テスト実行：00678_element_check_00654 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.position;
      print(csvbkup.item56.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.position = testData1;
      print(csvbkup.item56.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.position = testData2;
      print(csvbkup.item56.position);
      expect(csvbkup.item56.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.position = defalut;
      print(csvbkup.item56.position);
      expect(csvbkup.item56.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00678_element_check_00654 **********\n\n");
    });

    test('00679_element_check_00655', () async {
      print("\n********** テスト実行：00679_element_check_00655 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.table1;
      print(csvbkup.item56.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.table1 = testData1s;
      print(csvbkup.item56.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.table1 = testData2s;
      print(csvbkup.item56.table1);
      expect(csvbkup.item56.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.table1 = defalut;
      print(csvbkup.item56.table1);
      expect(csvbkup.item56.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00679_element_check_00655 **********\n\n");
    });

    test('00680_element_check_00656', () async {
      print("\n********** テスト実行：00680_element_check_00656 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.total;
      print(csvbkup.item56.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.total = testData1;
      print(csvbkup.item56.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.total = testData2;
      print(csvbkup.item56.total);
      expect(csvbkup.item56.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.total = defalut;
      print(csvbkup.item56.total);
      expect(csvbkup.item56.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00680_element_check_00656 **********\n\n");
    });

    test('00681_element_check_00657', () async {
      print("\n********** テスト実行：00681_element_check_00657 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.t_exe1;
      print(csvbkup.item56.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.t_exe1 = testData1s;
      print(csvbkup.item56.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.t_exe1 = testData2s;
      print(csvbkup.item56.t_exe1);
      expect(csvbkup.item56.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.t_exe1 = defalut;
      print(csvbkup.item56.t_exe1);
      expect(csvbkup.item56.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00681_element_check_00657 **********\n\n");
    });

    test('00682_element_check_00658', () async {
      print("\n********** テスト実行：00682_element_check_00658 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.section;
      print(csvbkup.item56.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.section = testData1s;
      print(csvbkup.item56.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.section = testData2s;
      print(csvbkup.item56.section);
      expect(csvbkup.item56.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.section = defalut;
      print(csvbkup.item56.section);
      expect(csvbkup.item56.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00682_element_check_00658 **********\n\n");
    });

    test('00683_element_check_00659', () async {
      print("\n********** テスト実行：00683_element_check_00659 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.keyword;
      print(csvbkup.item56.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.keyword = testData1s;
      print(csvbkup.item56.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.keyword = testData2s;
      print(csvbkup.item56.keyword);
      expect(csvbkup.item56.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.keyword = defalut;
      print(csvbkup.item56.keyword);
      expect(csvbkup.item56.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00683_element_check_00659 **********\n\n");
    });

    test('00684_element_check_00660', () async {
      print("\n********** テスト実行：00684_element_check_00660 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.keyword2;
      print(csvbkup.item56.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.keyword2 = testData1s;
      print(csvbkup.item56.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.keyword2 = testData2s;
      print(csvbkup.item56.keyword2);
      expect(csvbkup.item56.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.keyword2 = defalut;
      print(csvbkup.item56.keyword2);
      expect(csvbkup.item56.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00684_element_check_00660 **********\n\n");
    });

    test('00685_element_check_00661', () async {
      print("\n********** テスト実行：00685_element_check_00661 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.keyword3;
      print(csvbkup.item56.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.keyword3 = testData1s;
      print(csvbkup.item56.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.keyword3 = testData2s;
      print(csvbkup.item56.keyword3);
      expect(csvbkup.item56.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.keyword3 = defalut;
      print(csvbkup.item56.keyword3);
      expect(csvbkup.item56.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00685_element_check_00661 **********\n\n");
    });

    test('00686_element_check_00662', () async {
      print("\n********** テスト実行：00686_element_check_00662 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.backup_day;
      print(csvbkup.item56.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.backup_day = testData1s;
      print(csvbkup.item56.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.backup_day = testData2s;
      print(csvbkup.item56.backup_day);
      expect(csvbkup.item56.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.backup_day = defalut;
      print(csvbkup.item56.backup_day);
      expect(csvbkup.item56.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00686_element_check_00662 **********\n\n");
    });

    test('00687_element_check_00663', () async {
      print("\n********** テスト実行：00687_element_check_00663 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item56.select_dsp;
      print(csvbkup.item56.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item56.select_dsp = testData1;
      print(csvbkup.item56.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item56.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item56.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item56.select_dsp = testData2;
      print(csvbkup.item56.select_dsp);
      expect(csvbkup.item56.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item56.select_dsp = defalut;
      print(csvbkup.item56.select_dsp);
      expect(csvbkup.item56.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item56.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00687_element_check_00663 **********\n\n");
    });

    test('00688_element_check_00664', () async {
      print("\n********** テスト実行：00688_element_check_00664 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.onoff;
      print(csvbkup.item57.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.onoff = testData1;
      print(csvbkup.item57.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.onoff = testData2;
      print(csvbkup.item57.onoff);
      expect(csvbkup.item57.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.onoff = defalut;
      print(csvbkup.item57.onoff);
      expect(csvbkup.item57.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00688_element_check_00664 **********\n\n");
    });

    test('00689_element_check_00665', () async {
      print("\n********** テスト実行：00689_element_check_00665 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.page;
      print(csvbkup.item57.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.page = testData1;
      print(csvbkup.item57.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.page = testData2;
      print(csvbkup.item57.page);
      expect(csvbkup.item57.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.page = defalut;
      print(csvbkup.item57.page);
      expect(csvbkup.item57.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00689_element_check_00665 **********\n\n");
    });

    test('00690_element_check_00666', () async {
      print("\n********** テスト実行：00690_element_check_00666 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.position;
      print(csvbkup.item57.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.position = testData1;
      print(csvbkup.item57.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.position = testData2;
      print(csvbkup.item57.position);
      expect(csvbkup.item57.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.position = defalut;
      print(csvbkup.item57.position);
      expect(csvbkup.item57.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00690_element_check_00666 **********\n\n");
    });

    test('00691_element_check_00667', () async {
      print("\n********** テスト実行：00691_element_check_00667 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.table1;
      print(csvbkup.item57.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.table1 = testData1s;
      print(csvbkup.item57.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.table1 = testData2s;
      print(csvbkup.item57.table1);
      expect(csvbkup.item57.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.table1 = defalut;
      print(csvbkup.item57.table1);
      expect(csvbkup.item57.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00691_element_check_00667 **********\n\n");
    });

    test('00692_element_check_00668', () async {
      print("\n********** テスト実行：00692_element_check_00668 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.total;
      print(csvbkup.item57.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.total = testData1;
      print(csvbkup.item57.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.total = testData2;
      print(csvbkup.item57.total);
      expect(csvbkup.item57.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.total = defalut;
      print(csvbkup.item57.total);
      expect(csvbkup.item57.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00692_element_check_00668 **********\n\n");
    });

    test('00693_element_check_00669', () async {
      print("\n********** テスト実行：00693_element_check_00669 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.t_exe1;
      print(csvbkup.item57.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.t_exe1 = testData1s;
      print(csvbkup.item57.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.t_exe1 = testData2s;
      print(csvbkup.item57.t_exe1);
      expect(csvbkup.item57.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.t_exe1 = defalut;
      print(csvbkup.item57.t_exe1);
      expect(csvbkup.item57.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00693_element_check_00669 **********\n\n");
    });

    test('00694_element_check_00670', () async {
      print("\n********** テスト実行：00694_element_check_00670 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.section;
      print(csvbkup.item57.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.section = testData1s;
      print(csvbkup.item57.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.section = testData2s;
      print(csvbkup.item57.section);
      expect(csvbkup.item57.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.section = defalut;
      print(csvbkup.item57.section);
      expect(csvbkup.item57.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00694_element_check_00670 **********\n\n");
    });

    test('00695_element_check_00671', () async {
      print("\n********** テスト実行：00695_element_check_00671 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.keyword;
      print(csvbkup.item57.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.keyword = testData1s;
      print(csvbkup.item57.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.keyword = testData2s;
      print(csvbkup.item57.keyword);
      expect(csvbkup.item57.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.keyword = defalut;
      print(csvbkup.item57.keyword);
      expect(csvbkup.item57.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00695_element_check_00671 **********\n\n");
    });

    test('00696_element_check_00672', () async {
      print("\n********** テスト実行：00696_element_check_00672 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.keyword2;
      print(csvbkup.item57.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.keyword2 = testData1s;
      print(csvbkup.item57.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.keyword2 = testData2s;
      print(csvbkup.item57.keyword2);
      expect(csvbkup.item57.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.keyword2 = defalut;
      print(csvbkup.item57.keyword2);
      expect(csvbkup.item57.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00696_element_check_00672 **********\n\n");
    });

    test('00697_element_check_00673', () async {
      print("\n********** テスト実行：00697_element_check_00673 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.keyword3;
      print(csvbkup.item57.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.keyword3 = testData1s;
      print(csvbkup.item57.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.keyword3 = testData2s;
      print(csvbkup.item57.keyword3);
      expect(csvbkup.item57.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.keyword3 = defalut;
      print(csvbkup.item57.keyword3);
      expect(csvbkup.item57.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00697_element_check_00673 **********\n\n");
    });

    test('00698_element_check_00674', () async {
      print("\n********** テスト実行：00698_element_check_00674 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.backup_day;
      print(csvbkup.item57.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.backup_day = testData1s;
      print(csvbkup.item57.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.backup_day = testData2s;
      print(csvbkup.item57.backup_day);
      expect(csvbkup.item57.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.backup_day = defalut;
      print(csvbkup.item57.backup_day);
      expect(csvbkup.item57.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00698_element_check_00674 **********\n\n");
    });

    test('00699_element_check_00675', () async {
      print("\n********** テスト実行：00699_element_check_00675 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item57.select_dsp;
      print(csvbkup.item57.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item57.select_dsp = testData1;
      print(csvbkup.item57.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item57.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item57.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item57.select_dsp = testData2;
      print(csvbkup.item57.select_dsp);
      expect(csvbkup.item57.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item57.select_dsp = defalut;
      print(csvbkup.item57.select_dsp);
      expect(csvbkup.item57.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item57.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00699_element_check_00675 **********\n\n");
    });

    test('00700_element_check_00676', () async {
      print("\n********** テスト実行：00700_element_check_00676 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.onoff;
      print(csvbkup.item58.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.onoff = testData1;
      print(csvbkup.item58.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.onoff = testData2;
      print(csvbkup.item58.onoff);
      expect(csvbkup.item58.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.onoff = defalut;
      print(csvbkup.item58.onoff);
      expect(csvbkup.item58.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00700_element_check_00676 **********\n\n");
    });

    test('00701_element_check_00677', () async {
      print("\n********** テスト実行：00701_element_check_00677 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.page;
      print(csvbkup.item58.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.page = testData1;
      print(csvbkup.item58.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.page = testData2;
      print(csvbkup.item58.page);
      expect(csvbkup.item58.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.page = defalut;
      print(csvbkup.item58.page);
      expect(csvbkup.item58.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00701_element_check_00677 **********\n\n");
    });

    test('00702_element_check_00678', () async {
      print("\n********** テスト実行：00702_element_check_00678 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.position;
      print(csvbkup.item58.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.position = testData1;
      print(csvbkup.item58.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.position = testData2;
      print(csvbkup.item58.position);
      expect(csvbkup.item58.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.position = defalut;
      print(csvbkup.item58.position);
      expect(csvbkup.item58.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00702_element_check_00678 **********\n\n");
    });

    test('00703_element_check_00679', () async {
      print("\n********** テスト実行：00703_element_check_00679 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.table1;
      print(csvbkup.item58.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.table1 = testData1s;
      print(csvbkup.item58.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.table1 = testData2s;
      print(csvbkup.item58.table1);
      expect(csvbkup.item58.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.table1 = defalut;
      print(csvbkup.item58.table1);
      expect(csvbkup.item58.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00703_element_check_00679 **********\n\n");
    });

    test('00704_element_check_00680', () async {
      print("\n********** テスト実行：00704_element_check_00680 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.total;
      print(csvbkup.item58.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.total = testData1;
      print(csvbkup.item58.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.total = testData2;
      print(csvbkup.item58.total);
      expect(csvbkup.item58.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.total = defalut;
      print(csvbkup.item58.total);
      expect(csvbkup.item58.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00704_element_check_00680 **********\n\n");
    });

    test('00705_element_check_00681', () async {
      print("\n********** テスト実行：00705_element_check_00681 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.t_exe1;
      print(csvbkup.item58.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.t_exe1 = testData1s;
      print(csvbkup.item58.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.t_exe1 = testData2s;
      print(csvbkup.item58.t_exe1);
      expect(csvbkup.item58.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.t_exe1 = defalut;
      print(csvbkup.item58.t_exe1);
      expect(csvbkup.item58.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00705_element_check_00681 **********\n\n");
    });

    test('00706_element_check_00682', () async {
      print("\n********** テスト実行：00706_element_check_00682 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.section;
      print(csvbkup.item58.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.section = testData1s;
      print(csvbkup.item58.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.section = testData2s;
      print(csvbkup.item58.section);
      expect(csvbkup.item58.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.section = defalut;
      print(csvbkup.item58.section);
      expect(csvbkup.item58.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00706_element_check_00682 **********\n\n");
    });

    test('00707_element_check_00683', () async {
      print("\n********** テスト実行：00707_element_check_00683 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.keyword;
      print(csvbkup.item58.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.keyword = testData1s;
      print(csvbkup.item58.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.keyword = testData2s;
      print(csvbkup.item58.keyword);
      expect(csvbkup.item58.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.keyword = defalut;
      print(csvbkup.item58.keyword);
      expect(csvbkup.item58.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00707_element_check_00683 **********\n\n");
    });

    test('00708_element_check_00684', () async {
      print("\n********** テスト実行：00708_element_check_00684 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.keyword2;
      print(csvbkup.item58.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.keyword2 = testData1s;
      print(csvbkup.item58.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.keyword2 = testData2s;
      print(csvbkup.item58.keyword2);
      expect(csvbkup.item58.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.keyword2 = defalut;
      print(csvbkup.item58.keyword2);
      expect(csvbkup.item58.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00708_element_check_00684 **********\n\n");
    });

    test('00709_element_check_00685', () async {
      print("\n********** テスト実行：00709_element_check_00685 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.keyword3;
      print(csvbkup.item58.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.keyword3 = testData1s;
      print(csvbkup.item58.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.keyword3 = testData2s;
      print(csvbkup.item58.keyword3);
      expect(csvbkup.item58.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.keyword3 = defalut;
      print(csvbkup.item58.keyword3);
      expect(csvbkup.item58.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00709_element_check_00685 **********\n\n");
    });

    test('00710_element_check_00686', () async {
      print("\n********** テスト実行：00710_element_check_00686 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.backup_day;
      print(csvbkup.item58.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.backup_day = testData1s;
      print(csvbkup.item58.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.backup_day = testData2s;
      print(csvbkup.item58.backup_day);
      expect(csvbkup.item58.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.backup_day = defalut;
      print(csvbkup.item58.backup_day);
      expect(csvbkup.item58.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00710_element_check_00686 **********\n\n");
    });

    test('00711_element_check_00687', () async {
      print("\n********** テスト実行：00711_element_check_00687 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item58.select_dsp;
      print(csvbkup.item58.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item58.select_dsp = testData1;
      print(csvbkup.item58.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item58.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item58.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item58.select_dsp = testData2;
      print(csvbkup.item58.select_dsp);
      expect(csvbkup.item58.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item58.select_dsp = defalut;
      print(csvbkup.item58.select_dsp);
      expect(csvbkup.item58.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item58.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00711_element_check_00687 **********\n\n");
    });

    test('00712_element_check_00688', () async {
      print("\n********** テスト実行：00712_element_check_00688 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.onoff;
      print(csvbkup.item59.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.onoff = testData1;
      print(csvbkup.item59.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.onoff = testData2;
      print(csvbkup.item59.onoff);
      expect(csvbkup.item59.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.onoff = defalut;
      print(csvbkup.item59.onoff);
      expect(csvbkup.item59.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00712_element_check_00688 **********\n\n");
    });

    test('00713_element_check_00689', () async {
      print("\n********** テスト実行：00713_element_check_00689 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.page;
      print(csvbkup.item59.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.page = testData1;
      print(csvbkup.item59.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.page = testData2;
      print(csvbkup.item59.page);
      expect(csvbkup.item59.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.page = defalut;
      print(csvbkup.item59.page);
      expect(csvbkup.item59.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00713_element_check_00689 **********\n\n");
    });

    test('00714_element_check_00690', () async {
      print("\n********** テスト実行：00714_element_check_00690 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.position;
      print(csvbkup.item59.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.position = testData1;
      print(csvbkup.item59.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.position = testData2;
      print(csvbkup.item59.position);
      expect(csvbkup.item59.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.position = defalut;
      print(csvbkup.item59.position);
      expect(csvbkup.item59.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00714_element_check_00690 **********\n\n");
    });

    test('00715_element_check_00691', () async {
      print("\n********** テスト実行：00715_element_check_00691 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.table1;
      print(csvbkup.item59.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.table1 = testData1s;
      print(csvbkup.item59.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.table1 = testData2s;
      print(csvbkup.item59.table1);
      expect(csvbkup.item59.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.table1 = defalut;
      print(csvbkup.item59.table1);
      expect(csvbkup.item59.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00715_element_check_00691 **********\n\n");
    });

    test('00716_element_check_00692', () async {
      print("\n********** テスト実行：00716_element_check_00692 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.total;
      print(csvbkup.item59.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.total = testData1;
      print(csvbkup.item59.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.total = testData2;
      print(csvbkup.item59.total);
      expect(csvbkup.item59.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.total = defalut;
      print(csvbkup.item59.total);
      expect(csvbkup.item59.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00716_element_check_00692 **********\n\n");
    });

    test('00717_element_check_00693', () async {
      print("\n********** テスト実行：00717_element_check_00693 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.t_exe1;
      print(csvbkup.item59.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.t_exe1 = testData1s;
      print(csvbkup.item59.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.t_exe1 = testData2s;
      print(csvbkup.item59.t_exe1);
      expect(csvbkup.item59.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.t_exe1 = defalut;
      print(csvbkup.item59.t_exe1);
      expect(csvbkup.item59.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00717_element_check_00693 **********\n\n");
    });

    test('00718_element_check_00694', () async {
      print("\n********** テスト実行：00718_element_check_00694 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.section;
      print(csvbkup.item59.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.section = testData1s;
      print(csvbkup.item59.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.section = testData2s;
      print(csvbkup.item59.section);
      expect(csvbkup.item59.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.section = defalut;
      print(csvbkup.item59.section);
      expect(csvbkup.item59.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00718_element_check_00694 **********\n\n");
    });

    test('00719_element_check_00695', () async {
      print("\n********** テスト実行：00719_element_check_00695 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.keyword;
      print(csvbkup.item59.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.keyword = testData1s;
      print(csvbkup.item59.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.keyword = testData2s;
      print(csvbkup.item59.keyword);
      expect(csvbkup.item59.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.keyword = defalut;
      print(csvbkup.item59.keyword);
      expect(csvbkup.item59.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00719_element_check_00695 **********\n\n");
    });

    test('00720_element_check_00696', () async {
      print("\n********** テスト実行：00720_element_check_00696 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.backup_day;
      print(csvbkup.item59.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.backup_day = testData1s;
      print(csvbkup.item59.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.backup_day = testData2s;
      print(csvbkup.item59.backup_day);
      expect(csvbkup.item59.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.backup_day = defalut;
      print(csvbkup.item59.backup_day);
      expect(csvbkup.item59.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00720_element_check_00696 **********\n\n");
    });

    test('00721_element_check_00697', () async {
      print("\n********** テスト実行：00721_element_check_00697 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item59.select_dsp;
      print(csvbkup.item59.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item59.select_dsp = testData1;
      print(csvbkup.item59.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item59.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item59.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item59.select_dsp = testData2;
      print(csvbkup.item59.select_dsp);
      expect(csvbkup.item59.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item59.select_dsp = defalut;
      print(csvbkup.item59.select_dsp);
      expect(csvbkup.item59.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item59.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00721_element_check_00697 **********\n\n");
    });

    test('00722_element_check_00698', () async {
      print("\n********** テスト実行：00722_element_check_00698 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.onoff;
      print(csvbkup.item60.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.onoff = testData1;
      print(csvbkup.item60.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.onoff = testData2;
      print(csvbkup.item60.onoff);
      expect(csvbkup.item60.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.onoff = defalut;
      print(csvbkup.item60.onoff);
      expect(csvbkup.item60.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00722_element_check_00698 **********\n\n");
    });

    test('00723_element_check_00699', () async {
      print("\n********** テスト実行：00723_element_check_00699 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.page;
      print(csvbkup.item60.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.page = testData1;
      print(csvbkup.item60.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.page = testData2;
      print(csvbkup.item60.page);
      expect(csvbkup.item60.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.page = defalut;
      print(csvbkup.item60.page);
      expect(csvbkup.item60.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00723_element_check_00699 **********\n\n");
    });

    test('00724_element_check_00700', () async {
      print("\n********** テスト実行：00724_element_check_00700 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.position;
      print(csvbkup.item60.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.position = testData1;
      print(csvbkup.item60.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.position = testData2;
      print(csvbkup.item60.position);
      expect(csvbkup.item60.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.position = defalut;
      print(csvbkup.item60.position);
      expect(csvbkup.item60.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00724_element_check_00700 **********\n\n");
    });

    test('00725_element_check_00701', () async {
      print("\n********** テスト実行：00725_element_check_00701 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.table1;
      print(csvbkup.item60.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.table1 = testData1s;
      print(csvbkup.item60.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.table1 = testData2s;
      print(csvbkup.item60.table1);
      expect(csvbkup.item60.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.table1 = defalut;
      print(csvbkup.item60.table1);
      expect(csvbkup.item60.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00725_element_check_00701 **********\n\n");
    });

    test('00726_element_check_00702', () async {
      print("\n********** テスト実行：00726_element_check_00702 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.total;
      print(csvbkup.item60.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.total = testData1;
      print(csvbkup.item60.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.total = testData2;
      print(csvbkup.item60.total);
      expect(csvbkup.item60.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.total = defalut;
      print(csvbkup.item60.total);
      expect(csvbkup.item60.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00726_element_check_00702 **********\n\n");
    });

    test('00727_element_check_00703', () async {
      print("\n********** テスト実行：00727_element_check_00703 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.t_exe1;
      print(csvbkup.item60.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.t_exe1 = testData1s;
      print(csvbkup.item60.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.t_exe1 = testData2s;
      print(csvbkup.item60.t_exe1);
      expect(csvbkup.item60.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.t_exe1 = defalut;
      print(csvbkup.item60.t_exe1);
      expect(csvbkup.item60.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00727_element_check_00703 **********\n\n");
    });

    test('00728_element_check_00704', () async {
      print("\n********** テスト実行：00728_element_check_00704 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.t_exe2;
      print(csvbkup.item60.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.t_exe2 = testData1s;
      print(csvbkup.item60.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.t_exe2 = testData2s;
      print(csvbkup.item60.t_exe2);
      expect(csvbkup.item60.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.t_exe2 = defalut;
      print(csvbkup.item60.t_exe2);
      expect(csvbkup.item60.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00728_element_check_00704 **********\n\n");
    });

    test('00729_element_check_00705', () async {
      print("\n********** テスト実行：00729_element_check_00705 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.section;
      print(csvbkup.item60.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.section = testData1s;
      print(csvbkup.item60.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.section = testData2s;
      print(csvbkup.item60.section);
      expect(csvbkup.item60.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.section = defalut;
      print(csvbkup.item60.section);
      expect(csvbkup.item60.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00729_element_check_00705 **********\n\n");
    });

    test('00730_element_check_00706', () async {
      print("\n********** テスト実行：00730_element_check_00706 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.keyword;
      print(csvbkup.item60.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.keyword = testData1s;
      print(csvbkup.item60.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.keyword = testData2s;
      print(csvbkup.item60.keyword);
      expect(csvbkup.item60.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.keyword = defalut;
      print(csvbkup.item60.keyword);
      expect(csvbkup.item60.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00730_element_check_00706 **********\n\n");
    });

    test('00731_element_check_00707', () async {
      print("\n********** テスト実行：00731_element_check_00707 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.backup_day;
      print(csvbkup.item60.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.backup_day = testData1s;
      print(csvbkup.item60.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.backup_day = testData2s;
      print(csvbkup.item60.backup_day);
      expect(csvbkup.item60.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.backup_day = defalut;
      print(csvbkup.item60.backup_day);
      expect(csvbkup.item60.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00731_element_check_00707 **********\n\n");
    });

    test('00732_element_check_00708', () async {
      print("\n********** テスト実行：00732_element_check_00708 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item60.select_dsp;
      print(csvbkup.item60.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item60.select_dsp = testData1;
      print(csvbkup.item60.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item60.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item60.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item60.select_dsp = testData2;
      print(csvbkup.item60.select_dsp);
      expect(csvbkup.item60.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item60.select_dsp = defalut;
      print(csvbkup.item60.select_dsp);
      expect(csvbkup.item60.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item60.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00732_element_check_00708 **********\n\n");
    });

    test('00733_element_check_00709', () async {
      print("\n********** テスト実行：00733_element_check_00709 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.onoff;
      print(csvbkup.item61.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.onoff = testData1;
      print(csvbkup.item61.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.onoff = testData2;
      print(csvbkup.item61.onoff);
      expect(csvbkup.item61.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.onoff = defalut;
      print(csvbkup.item61.onoff);
      expect(csvbkup.item61.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00733_element_check_00709 **********\n\n");
    });

    test('00734_element_check_00710', () async {
      print("\n********** テスト実行：00734_element_check_00710 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.page;
      print(csvbkup.item61.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.page = testData1;
      print(csvbkup.item61.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.page = testData2;
      print(csvbkup.item61.page);
      expect(csvbkup.item61.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.page = defalut;
      print(csvbkup.item61.page);
      expect(csvbkup.item61.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00734_element_check_00710 **********\n\n");
    });

    test('00735_element_check_00711', () async {
      print("\n********** テスト実行：00735_element_check_00711 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.position;
      print(csvbkup.item61.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.position = testData1;
      print(csvbkup.item61.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.position = testData2;
      print(csvbkup.item61.position);
      expect(csvbkup.item61.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.position = defalut;
      print(csvbkup.item61.position);
      expect(csvbkup.item61.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00735_element_check_00711 **********\n\n");
    });

    test('00736_element_check_00712', () async {
      print("\n********** テスト実行：00736_element_check_00712 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.table1;
      print(csvbkup.item61.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.table1 = testData1s;
      print(csvbkup.item61.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.table1 = testData2s;
      print(csvbkup.item61.table1);
      expect(csvbkup.item61.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.table1 = defalut;
      print(csvbkup.item61.table1);
      expect(csvbkup.item61.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00736_element_check_00712 **********\n\n");
    });

    test('00737_element_check_00713', () async {
      print("\n********** テスト実行：00737_element_check_00713 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.total;
      print(csvbkup.item61.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.total = testData1;
      print(csvbkup.item61.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.total = testData2;
      print(csvbkup.item61.total);
      expect(csvbkup.item61.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.total = defalut;
      print(csvbkup.item61.total);
      expect(csvbkup.item61.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00737_element_check_00713 **********\n\n");
    });

    test('00738_element_check_00714', () async {
      print("\n********** テスト実行：00738_element_check_00714 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.t_exe1;
      print(csvbkup.item61.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.t_exe1 = testData1s;
      print(csvbkup.item61.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.t_exe1 = testData2s;
      print(csvbkup.item61.t_exe1);
      expect(csvbkup.item61.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.t_exe1 = defalut;
      print(csvbkup.item61.t_exe1);
      expect(csvbkup.item61.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00738_element_check_00714 **********\n\n");
    });

    test('00739_element_check_00715', () async {
      print("\n********** テスト実行：00739_element_check_00715 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.section;
      print(csvbkup.item61.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.section = testData1s;
      print(csvbkup.item61.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.section = testData2s;
      print(csvbkup.item61.section);
      expect(csvbkup.item61.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.section = defalut;
      print(csvbkup.item61.section);
      expect(csvbkup.item61.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00739_element_check_00715 **********\n\n");
    });

    test('00740_element_check_00716', () async {
      print("\n********** テスト実行：00740_element_check_00716 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.keyword;
      print(csvbkup.item61.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.keyword = testData1s;
      print(csvbkup.item61.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.keyword = testData2s;
      print(csvbkup.item61.keyword);
      expect(csvbkup.item61.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.keyword = defalut;
      print(csvbkup.item61.keyword);
      expect(csvbkup.item61.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00740_element_check_00716 **********\n\n");
    });

    test('00741_element_check_00717', () async {
      print("\n********** テスト実行：00741_element_check_00717 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.backup_day;
      print(csvbkup.item61.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.backup_day = testData1s;
      print(csvbkup.item61.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.backup_day = testData2s;
      print(csvbkup.item61.backup_day);
      expect(csvbkup.item61.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.backup_day = defalut;
      print(csvbkup.item61.backup_day);
      expect(csvbkup.item61.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00741_element_check_00717 **********\n\n");
    });

    test('00742_element_check_00718', () async {
      print("\n********** テスト実行：00742_element_check_00718 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item61.select_dsp;
      print(csvbkup.item61.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item61.select_dsp = testData1;
      print(csvbkup.item61.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item61.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item61.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item61.select_dsp = testData2;
      print(csvbkup.item61.select_dsp);
      expect(csvbkup.item61.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item61.select_dsp = defalut;
      print(csvbkup.item61.select_dsp);
      expect(csvbkup.item61.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item61.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00742_element_check_00718 **********\n\n");
    });

    test('00743_element_check_00719', () async {
      print("\n********** テスト実行：00743_element_check_00719 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.onoff;
      print(csvbkup.item62.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.onoff = testData1;
      print(csvbkup.item62.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.onoff = testData2;
      print(csvbkup.item62.onoff);
      expect(csvbkup.item62.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.onoff = defalut;
      print(csvbkup.item62.onoff);
      expect(csvbkup.item62.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00743_element_check_00719 **********\n\n");
    });

    test('00744_element_check_00720', () async {
      print("\n********** テスト実行：00744_element_check_00720 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.page;
      print(csvbkup.item62.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.page = testData1;
      print(csvbkup.item62.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.page = testData2;
      print(csvbkup.item62.page);
      expect(csvbkup.item62.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.page = defalut;
      print(csvbkup.item62.page);
      expect(csvbkup.item62.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00744_element_check_00720 **********\n\n");
    });

    test('00745_element_check_00721', () async {
      print("\n********** テスト実行：00745_element_check_00721 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.position;
      print(csvbkup.item62.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.position = testData1;
      print(csvbkup.item62.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.position = testData2;
      print(csvbkup.item62.position);
      expect(csvbkup.item62.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.position = defalut;
      print(csvbkup.item62.position);
      expect(csvbkup.item62.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00745_element_check_00721 **********\n\n");
    });

    test('00746_element_check_00722', () async {
      print("\n********** テスト実行：00746_element_check_00722 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.table1;
      print(csvbkup.item62.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.table1 = testData1s;
      print(csvbkup.item62.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.table1 = testData2s;
      print(csvbkup.item62.table1);
      expect(csvbkup.item62.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.table1 = defalut;
      print(csvbkup.item62.table1);
      expect(csvbkup.item62.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00746_element_check_00722 **********\n\n");
    });

    test('00747_element_check_00723', () async {
      print("\n********** テスト実行：00747_element_check_00723 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.total;
      print(csvbkup.item62.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.total = testData1;
      print(csvbkup.item62.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.total = testData2;
      print(csvbkup.item62.total);
      expect(csvbkup.item62.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.total = defalut;
      print(csvbkup.item62.total);
      expect(csvbkup.item62.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00747_element_check_00723 **********\n\n");
    });

    test('00748_element_check_00724', () async {
      print("\n********** テスト実行：00748_element_check_00724 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.t_exe1;
      print(csvbkup.item62.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.t_exe1 = testData1s;
      print(csvbkup.item62.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.t_exe1 = testData2s;
      print(csvbkup.item62.t_exe1);
      expect(csvbkup.item62.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.t_exe1 = defalut;
      print(csvbkup.item62.t_exe1);
      expect(csvbkup.item62.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00748_element_check_00724 **********\n\n");
    });

    test('00749_element_check_00725', () async {
      print("\n********** テスト実行：00749_element_check_00725 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.section;
      print(csvbkup.item62.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.section = testData1s;
      print(csvbkup.item62.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.section = testData2s;
      print(csvbkup.item62.section);
      expect(csvbkup.item62.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.section = defalut;
      print(csvbkup.item62.section);
      expect(csvbkup.item62.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00749_element_check_00725 **********\n\n");
    });

    test('00750_element_check_00726', () async {
      print("\n********** テスト実行：00750_element_check_00726 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.keyword;
      print(csvbkup.item62.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.keyword = testData1s;
      print(csvbkup.item62.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.keyword = testData2s;
      print(csvbkup.item62.keyword);
      expect(csvbkup.item62.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.keyword = defalut;
      print(csvbkup.item62.keyword);
      expect(csvbkup.item62.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00750_element_check_00726 **********\n\n");
    });

    test('00751_element_check_00727', () async {
      print("\n********** テスト実行：00751_element_check_00727 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.backup_day;
      print(csvbkup.item62.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.backup_day = testData1s;
      print(csvbkup.item62.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.backup_day = testData2s;
      print(csvbkup.item62.backup_day);
      expect(csvbkup.item62.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.backup_day = defalut;
      print(csvbkup.item62.backup_day);
      expect(csvbkup.item62.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00751_element_check_00727 **********\n\n");
    });

    test('00752_element_check_00728', () async {
      print("\n********** テスト実行：00752_element_check_00728 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item62.select_dsp;
      print(csvbkup.item62.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item62.select_dsp = testData1;
      print(csvbkup.item62.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item62.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item62.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item62.select_dsp = testData2;
      print(csvbkup.item62.select_dsp);
      expect(csvbkup.item62.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item62.select_dsp = defalut;
      print(csvbkup.item62.select_dsp);
      expect(csvbkup.item62.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item62.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00752_element_check_00728 **********\n\n");
    });

    test('00753_element_check_00729', () async {
      print("\n********** テスト実行：00753_element_check_00729 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.onoff;
      print(csvbkup.item63.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.onoff = testData1;
      print(csvbkup.item63.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.onoff = testData2;
      print(csvbkup.item63.onoff);
      expect(csvbkup.item63.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.onoff = defalut;
      print(csvbkup.item63.onoff);
      expect(csvbkup.item63.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00753_element_check_00729 **********\n\n");
    });

    test('00754_element_check_00730', () async {
      print("\n********** テスト実行：00754_element_check_00730 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.page;
      print(csvbkup.item63.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.page = testData1;
      print(csvbkup.item63.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.page = testData2;
      print(csvbkup.item63.page);
      expect(csvbkup.item63.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.page = defalut;
      print(csvbkup.item63.page);
      expect(csvbkup.item63.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00754_element_check_00730 **********\n\n");
    });

    test('00755_element_check_00731', () async {
      print("\n********** テスト実行：00755_element_check_00731 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.position;
      print(csvbkup.item63.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.position = testData1;
      print(csvbkup.item63.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.position = testData2;
      print(csvbkup.item63.position);
      expect(csvbkup.item63.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.position = defalut;
      print(csvbkup.item63.position);
      expect(csvbkup.item63.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00755_element_check_00731 **********\n\n");
    });

    test('00756_element_check_00732', () async {
      print("\n********** テスト実行：00756_element_check_00732 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.table1;
      print(csvbkup.item63.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.table1 = testData1s;
      print(csvbkup.item63.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.table1 = testData2s;
      print(csvbkup.item63.table1);
      expect(csvbkup.item63.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.table1 = defalut;
      print(csvbkup.item63.table1);
      expect(csvbkup.item63.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00756_element_check_00732 **********\n\n");
    });

    test('00757_element_check_00733', () async {
      print("\n********** テスト実行：00757_element_check_00733 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.total;
      print(csvbkup.item63.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.total = testData1;
      print(csvbkup.item63.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.total = testData2;
      print(csvbkup.item63.total);
      expect(csvbkup.item63.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.total = defalut;
      print(csvbkup.item63.total);
      expect(csvbkup.item63.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00757_element_check_00733 **********\n\n");
    });

    test('00758_element_check_00734', () async {
      print("\n********** テスト実行：00758_element_check_00734 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.t_exe1;
      print(csvbkup.item63.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.t_exe1 = testData1s;
      print(csvbkup.item63.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.t_exe1 = testData2s;
      print(csvbkup.item63.t_exe1);
      expect(csvbkup.item63.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.t_exe1 = defalut;
      print(csvbkup.item63.t_exe1);
      expect(csvbkup.item63.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00758_element_check_00734 **********\n\n");
    });

    test('00759_element_check_00735', () async {
      print("\n********** テスト実行：00759_element_check_00735 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.section;
      print(csvbkup.item63.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.section = testData1s;
      print(csvbkup.item63.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.section = testData2s;
      print(csvbkup.item63.section);
      expect(csvbkup.item63.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.section = defalut;
      print(csvbkup.item63.section);
      expect(csvbkup.item63.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00759_element_check_00735 **********\n\n");
    });

    test('00760_element_check_00736', () async {
      print("\n********** テスト実行：00760_element_check_00736 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.keyword;
      print(csvbkup.item63.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.keyword = testData1s;
      print(csvbkup.item63.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.keyword = testData2s;
      print(csvbkup.item63.keyword);
      expect(csvbkup.item63.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.keyword = defalut;
      print(csvbkup.item63.keyword);
      expect(csvbkup.item63.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00760_element_check_00736 **********\n\n");
    });

    test('00761_element_check_00737', () async {
      print("\n********** テスト実行：00761_element_check_00737 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.keyword2;
      print(csvbkup.item63.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.keyword2 = testData1s;
      print(csvbkup.item63.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.keyword2 = testData2s;
      print(csvbkup.item63.keyword2);
      expect(csvbkup.item63.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.keyword2 = defalut;
      print(csvbkup.item63.keyword2);
      expect(csvbkup.item63.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00761_element_check_00737 **********\n\n");
    });

    test('00762_element_check_00738', () async {
      print("\n********** テスト実行：00762_element_check_00738 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.keyword3;
      print(csvbkup.item63.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.keyword3 = testData1s;
      print(csvbkup.item63.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.keyword3 = testData2s;
      print(csvbkup.item63.keyword3);
      expect(csvbkup.item63.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.keyword3 = defalut;
      print(csvbkup.item63.keyword3);
      expect(csvbkup.item63.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00762_element_check_00738 **********\n\n");
    });

    test('00763_element_check_00739', () async {
      print("\n********** テスト実行：00763_element_check_00739 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.backup_day;
      print(csvbkup.item63.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.backup_day = testData1s;
      print(csvbkup.item63.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.backup_day = testData2s;
      print(csvbkup.item63.backup_day);
      expect(csvbkup.item63.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.backup_day = defalut;
      print(csvbkup.item63.backup_day);
      expect(csvbkup.item63.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00763_element_check_00739 **********\n\n");
    });

    test('00764_element_check_00740', () async {
      print("\n********** テスト実行：00764_element_check_00740 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item63.select_dsp;
      print(csvbkup.item63.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item63.select_dsp = testData1;
      print(csvbkup.item63.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item63.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item63.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item63.select_dsp = testData2;
      print(csvbkup.item63.select_dsp);
      expect(csvbkup.item63.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item63.select_dsp = defalut;
      print(csvbkup.item63.select_dsp);
      expect(csvbkup.item63.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item63.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00764_element_check_00740 **********\n\n");
    });

    test('00765_element_check_00741', () async {
      print("\n********** テスト実行：00765_element_check_00741 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.onoff;
      print(csvbkup.item64.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.onoff = testData1;
      print(csvbkup.item64.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.onoff = testData2;
      print(csvbkup.item64.onoff);
      expect(csvbkup.item64.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.onoff = defalut;
      print(csvbkup.item64.onoff);
      expect(csvbkup.item64.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00765_element_check_00741 **********\n\n");
    });

    test('00766_element_check_00742', () async {
      print("\n********** テスト実行：00766_element_check_00742 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.page;
      print(csvbkup.item64.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.page = testData1;
      print(csvbkup.item64.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.page = testData2;
      print(csvbkup.item64.page);
      expect(csvbkup.item64.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.page = defalut;
      print(csvbkup.item64.page);
      expect(csvbkup.item64.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00766_element_check_00742 **********\n\n");
    });

    test('00767_element_check_00743', () async {
      print("\n********** テスト実行：00767_element_check_00743 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.position;
      print(csvbkup.item64.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.position = testData1;
      print(csvbkup.item64.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.position = testData2;
      print(csvbkup.item64.position);
      expect(csvbkup.item64.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.position = defalut;
      print(csvbkup.item64.position);
      expect(csvbkup.item64.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00767_element_check_00743 **********\n\n");
    });

    test('00768_element_check_00744', () async {
      print("\n********** テスト実行：00768_element_check_00744 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.table1;
      print(csvbkup.item64.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.table1 = testData1s;
      print(csvbkup.item64.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.table1 = testData2s;
      print(csvbkup.item64.table1);
      expect(csvbkup.item64.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.table1 = defalut;
      print(csvbkup.item64.table1);
      expect(csvbkup.item64.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00768_element_check_00744 **********\n\n");
    });

    test('00769_element_check_00745', () async {
      print("\n********** テスト実行：00769_element_check_00745 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.total;
      print(csvbkup.item64.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.total = testData1;
      print(csvbkup.item64.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.total = testData2;
      print(csvbkup.item64.total);
      expect(csvbkup.item64.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.total = defalut;
      print(csvbkup.item64.total);
      expect(csvbkup.item64.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00769_element_check_00745 **********\n\n");
    });

    test('00770_element_check_00746', () async {
      print("\n********** テスト実行：00770_element_check_00746 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.t_exe1;
      print(csvbkup.item64.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.t_exe1 = testData1s;
      print(csvbkup.item64.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.t_exe1 = testData2s;
      print(csvbkup.item64.t_exe1);
      expect(csvbkup.item64.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.t_exe1 = defalut;
      print(csvbkup.item64.t_exe1);
      expect(csvbkup.item64.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00770_element_check_00746 **********\n\n");
    });

    test('00771_element_check_00747', () async {
      print("\n********** テスト実行：00771_element_check_00747 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.section;
      print(csvbkup.item64.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.section = testData1s;
      print(csvbkup.item64.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.section = testData2s;
      print(csvbkup.item64.section);
      expect(csvbkup.item64.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.section = defalut;
      print(csvbkup.item64.section);
      expect(csvbkup.item64.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00771_element_check_00747 **********\n\n");
    });

    test('00772_element_check_00748', () async {
      print("\n********** テスト実行：00772_element_check_00748 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.keyword;
      print(csvbkup.item64.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.keyword = testData1s;
      print(csvbkup.item64.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.keyword = testData2s;
      print(csvbkup.item64.keyword);
      expect(csvbkup.item64.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.keyword = defalut;
      print(csvbkup.item64.keyword);
      expect(csvbkup.item64.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00772_element_check_00748 **********\n\n");
    });

    test('00773_element_check_00749', () async {
      print("\n********** テスト実行：00773_element_check_00749 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.keyword2;
      print(csvbkup.item64.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.keyword2 = testData1s;
      print(csvbkup.item64.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.keyword2 = testData2s;
      print(csvbkup.item64.keyword2);
      expect(csvbkup.item64.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.keyword2 = defalut;
      print(csvbkup.item64.keyword2);
      expect(csvbkup.item64.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00773_element_check_00749 **********\n\n");
    });

    test('00774_element_check_00750', () async {
      print("\n********** テスト実行：00774_element_check_00750 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.keyword3;
      print(csvbkup.item64.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.keyword3 = testData1s;
      print(csvbkup.item64.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.keyword3 = testData2s;
      print(csvbkup.item64.keyword3);
      expect(csvbkup.item64.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.keyword3 = defalut;
      print(csvbkup.item64.keyword3);
      expect(csvbkup.item64.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00774_element_check_00750 **********\n\n");
    });

    test('00775_element_check_00751', () async {
      print("\n********** テスト実行：00775_element_check_00751 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.backup_day;
      print(csvbkup.item64.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.backup_day = testData1s;
      print(csvbkup.item64.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.backup_day = testData2s;
      print(csvbkup.item64.backup_day);
      expect(csvbkup.item64.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.backup_day = defalut;
      print(csvbkup.item64.backup_day);
      expect(csvbkup.item64.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00775_element_check_00751 **********\n\n");
    });

    test('00776_element_check_00752', () async {
      print("\n********** テスト実行：00776_element_check_00752 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item64.select_dsp;
      print(csvbkup.item64.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item64.select_dsp = testData1;
      print(csvbkup.item64.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item64.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item64.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item64.select_dsp = testData2;
      print(csvbkup.item64.select_dsp);
      expect(csvbkup.item64.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item64.select_dsp = defalut;
      print(csvbkup.item64.select_dsp);
      expect(csvbkup.item64.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item64.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00776_element_check_00752 **********\n\n");
    });

    test('00777_element_check_00753', () async {
      print("\n********** テスト実行：00777_element_check_00753 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.onoff;
      print(csvbkup.item65.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.onoff = testData1;
      print(csvbkup.item65.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.onoff = testData2;
      print(csvbkup.item65.onoff);
      expect(csvbkup.item65.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.onoff = defalut;
      print(csvbkup.item65.onoff);
      expect(csvbkup.item65.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00777_element_check_00753 **********\n\n");
    });

    test('00778_element_check_00754', () async {
      print("\n********** テスト実行：00778_element_check_00754 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.page;
      print(csvbkup.item65.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.page = testData1;
      print(csvbkup.item65.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.page = testData2;
      print(csvbkup.item65.page);
      expect(csvbkup.item65.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.page = defalut;
      print(csvbkup.item65.page);
      expect(csvbkup.item65.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00778_element_check_00754 **********\n\n");
    });

    test('00779_element_check_00755', () async {
      print("\n********** テスト実行：00779_element_check_00755 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.position;
      print(csvbkup.item65.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.position = testData1;
      print(csvbkup.item65.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.position = testData2;
      print(csvbkup.item65.position);
      expect(csvbkup.item65.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.position = defalut;
      print(csvbkup.item65.position);
      expect(csvbkup.item65.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00779_element_check_00755 **********\n\n");
    });

    test('00780_element_check_00756', () async {
      print("\n********** テスト実行：00780_element_check_00756 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.table1;
      print(csvbkup.item65.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.table1 = testData1s;
      print(csvbkup.item65.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.table1 = testData2s;
      print(csvbkup.item65.table1);
      expect(csvbkup.item65.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.table1 = defalut;
      print(csvbkup.item65.table1);
      expect(csvbkup.item65.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00780_element_check_00756 **********\n\n");
    });

    test('00781_element_check_00757', () async {
      print("\n********** テスト実行：00781_element_check_00757 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.total;
      print(csvbkup.item65.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.total = testData1;
      print(csvbkup.item65.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.total = testData2;
      print(csvbkup.item65.total);
      expect(csvbkup.item65.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.total = defalut;
      print(csvbkup.item65.total);
      expect(csvbkup.item65.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00781_element_check_00757 **********\n\n");
    });

    test('00782_element_check_00758', () async {
      print("\n********** テスト実行：00782_element_check_00758 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.t_exe1;
      print(csvbkup.item65.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.t_exe1 = testData1s;
      print(csvbkup.item65.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.t_exe1 = testData2s;
      print(csvbkup.item65.t_exe1);
      expect(csvbkup.item65.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.t_exe1 = defalut;
      print(csvbkup.item65.t_exe1);
      expect(csvbkup.item65.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00782_element_check_00758 **********\n\n");
    });

    test('00783_element_check_00759', () async {
      print("\n********** テスト実行：00783_element_check_00759 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.section;
      print(csvbkup.item65.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.section = testData1s;
      print(csvbkup.item65.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.section = testData2s;
      print(csvbkup.item65.section);
      expect(csvbkup.item65.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.section = defalut;
      print(csvbkup.item65.section);
      expect(csvbkup.item65.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00783_element_check_00759 **********\n\n");
    });

    test('00784_element_check_00760', () async {
      print("\n********** テスト実行：00784_element_check_00760 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.keyword;
      print(csvbkup.item65.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.keyword = testData1s;
      print(csvbkup.item65.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.keyword = testData2s;
      print(csvbkup.item65.keyword);
      expect(csvbkup.item65.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.keyword = defalut;
      print(csvbkup.item65.keyword);
      expect(csvbkup.item65.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00784_element_check_00760 **********\n\n");
    });

    test('00785_element_check_00761', () async {
      print("\n********** テスト実行：00785_element_check_00761 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.keyword2;
      print(csvbkup.item65.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.keyword2 = testData1s;
      print(csvbkup.item65.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.keyword2 = testData2s;
      print(csvbkup.item65.keyword2);
      expect(csvbkup.item65.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.keyword2 = defalut;
      print(csvbkup.item65.keyword2);
      expect(csvbkup.item65.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00785_element_check_00761 **********\n\n");
    });

    test('00786_element_check_00762', () async {
      print("\n********** テスト実行：00786_element_check_00762 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.keyword3;
      print(csvbkup.item65.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.keyword3 = testData1s;
      print(csvbkup.item65.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.keyword3 = testData2s;
      print(csvbkup.item65.keyword3);
      expect(csvbkup.item65.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.keyword3 = defalut;
      print(csvbkup.item65.keyword3);
      expect(csvbkup.item65.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00786_element_check_00762 **********\n\n");
    });

    test('00787_element_check_00763', () async {
      print("\n********** テスト実行：00787_element_check_00763 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.backup_day;
      print(csvbkup.item65.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.backup_day = testData1s;
      print(csvbkup.item65.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.backup_day = testData2s;
      print(csvbkup.item65.backup_day);
      expect(csvbkup.item65.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.backup_day = defalut;
      print(csvbkup.item65.backup_day);
      expect(csvbkup.item65.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00787_element_check_00763 **********\n\n");
    });

    test('00788_element_check_00764', () async {
      print("\n********** テスト実行：00788_element_check_00764 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item65.select_dsp;
      print(csvbkup.item65.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item65.select_dsp = testData1;
      print(csvbkup.item65.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item65.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item65.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item65.select_dsp = testData2;
      print(csvbkup.item65.select_dsp);
      expect(csvbkup.item65.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item65.select_dsp = defalut;
      print(csvbkup.item65.select_dsp);
      expect(csvbkup.item65.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item65.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00788_element_check_00764 **********\n\n");
    });

    test('00789_element_check_00765', () async {
      print("\n********** テスト実行：00789_element_check_00765 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.onoff;
      print(csvbkup.item66.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.onoff = testData1;
      print(csvbkup.item66.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.onoff = testData2;
      print(csvbkup.item66.onoff);
      expect(csvbkup.item66.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.onoff = defalut;
      print(csvbkup.item66.onoff);
      expect(csvbkup.item66.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00789_element_check_00765 **********\n\n");
    });

    test('00790_element_check_00766', () async {
      print("\n********** テスト実行：00790_element_check_00766 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.page;
      print(csvbkup.item66.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.page = testData1;
      print(csvbkup.item66.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.page = testData2;
      print(csvbkup.item66.page);
      expect(csvbkup.item66.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.page = defalut;
      print(csvbkup.item66.page);
      expect(csvbkup.item66.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00790_element_check_00766 **********\n\n");
    });

    test('00791_element_check_00767', () async {
      print("\n********** テスト実行：00791_element_check_00767 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.position;
      print(csvbkup.item66.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.position = testData1;
      print(csvbkup.item66.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.position = testData2;
      print(csvbkup.item66.position);
      expect(csvbkup.item66.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.position = defalut;
      print(csvbkup.item66.position);
      expect(csvbkup.item66.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00791_element_check_00767 **********\n\n");
    });

    test('00792_element_check_00768', () async {
      print("\n********** テスト実行：00792_element_check_00768 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.table1;
      print(csvbkup.item66.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.table1 = testData1s;
      print(csvbkup.item66.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.table1 = testData2s;
      print(csvbkup.item66.table1);
      expect(csvbkup.item66.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.table1 = defalut;
      print(csvbkup.item66.table1);
      expect(csvbkup.item66.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00792_element_check_00768 **********\n\n");
    });

    test('00793_element_check_00769', () async {
      print("\n********** テスト実行：00793_element_check_00769 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.total;
      print(csvbkup.item66.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.total = testData1;
      print(csvbkup.item66.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.total = testData2;
      print(csvbkup.item66.total);
      expect(csvbkup.item66.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.total = defalut;
      print(csvbkup.item66.total);
      expect(csvbkup.item66.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00793_element_check_00769 **********\n\n");
    });

    test('00794_element_check_00770', () async {
      print("\n********** テスト実行：00794_element_check_00770 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.t_exe1;
      print(csvbkup.item66.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.t_exe1 = testData1s;
      print(csvbkup.item66.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.t_exe1 = testData2s;
      print(csvbkup.item66.t_exe1);
      expect(csvbkup.item66.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.t_exe1 = defalut;
      print(csvbkup.item66.t_exe1);
      expect(csvbkup.item66.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00794_element_check_00770 **********\n\n");
    });

    test('00795_element_check_00771', () async {
      print("\n********** テスト実行：00795_element_check_00771 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.t_exe2;
      print(csvbkup.item66.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.t_exe2 = testData1s;
      print(csvbkup.item66.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.t_exe2 = testData2s;
      print(csvbkup.item66.t_exe2);
      expect(csvbkup.item66.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.t_exe2 = defalut;
      print(csvbkup.item66.t_exe2);
      expect(csvbkup.item66.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00795_element_check_00771 **********\n\n");
    });

    test('00796_element_check_00772', () async {
      print("\n********** テスト実行：00796_element_check_00772 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.section;
      print(csvbkup.item66.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.section = testData1s;
      print(csvbkup.item66.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.section = testData2s;
      print(csvbkup.item66.section);
      expect(csvbkup.item66.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.section = defalut;
      print(csvbkup.item66.section);
      expect(csvbkup.item66.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00796_element_check_00772 **********\n\n");
    });

    test('00797_element_check_00773', () async {
      print("\n********** テスト実行：00797_element_check_00773 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.keyword;
      print(csvbkup.item66.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.keyword = testData1s;
      print(csvbkup.item66.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.keyword = testData2s;
      print(csvbkup.item66.keyword);
      expect(csvbkup.item66.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.keyword = defalut;
      print(csvbkup.item66.keyword);
      expect(csvbkup.item66.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00797_element_check_00773 **********\n\n");
    });

    test('00798_element_check_00774', () async {
      print("\n********** テスト実行：00798_element_check_00774 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.keyword2;
      print(csvbkup.item66.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.keyword2 = testData1s;
      print(csvbkup.item66.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.keyword2 = testData2s;
      print(csvbkup.item66.keyword2);
      expect(csvbkup.item66.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.keyword2 = defalut;
      print(csvbkup.item66.keyword2);
      expect(csvbkup.item66.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00798_element_check_00774 **********\n\n");
    });

    test('00799_element_check_00775', () async {
      print("\n********** テスト実行：00799_element_check_00775 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.keyword3;
      print(csvbkup.item66.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.keyword3 = testData1s;
      print(csvbkup.item66.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.keyword3 = testData2s;
      print(csvbkup.item66.keyword3);
      expect(csvbkup.item66.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.keyword3 = defalut;
      print(csvbkup.item66.keyword3);
      expect(csvbkup.item66.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00799_element_check_00775 **********\n\n");
    });

    test('00800_element_check_00776', () async {
      print("\n********** テスト実行：00800_element_check_00776 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.backup_day;
      print(csvbkup.item66.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.backup_day = testData1s;
      print(csvbkup.item66.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.backup_day = testData2s;
      print(csvbkup.item66.backup_day);
      expect(csvbkup.item66.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.backup_day = defalut;
      print(csvbkup.item66.backup_day);
      expect(csvbkup.item66.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00800_element_check_00776 **********\n\n");
    });

    test('00801_element_check_00777', () async {
      print("\n********** テスト実行：00801_element_check_00777 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item66.select_dsp;
      print(csvbkup.item66.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item66.select_dsp = testData1;
      print(csvbkup.item66.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item66.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item66.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item66.select_dsp = testData2;
      print(csvbkup.item66.select_dsp);
      expect(csvbkup.item66.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item66.select_dsp = defalut;
      print(csvbkup.item66.select_dsp);
      expect(csvbkup.item66.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item66.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00801_element_check_00777 **********\n\n");
    });

    test('00802_element_check_00778', () async {
      print("\n********** テスト実行：00802_element_check_00778 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.onoff;
      print(csvbkup.item67.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.onoff = testData1;
      print(csvbkup.item67.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.onoff = testData2;
      print(csvbkup.item67.onoff);
      expect(csvbkup.item67.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.onoff = defalut;
      print(csvbkup.item67.onoff);
      expect(csvbkup.item67.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00802_element_check_00778 **********\n\n");
    });

    test('00803_element_check_00779', () async {
      print("\n********** テスト実行：00803_element_check_00779 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.page;
      print(csvbkup.item67.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.page = testData1;
      print(csvbkup.item67.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.page = testData2;
      print(csvbkup.item67.page);
      expect(csvbkup.item67.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.page = defalut;
      print(csvbkup.item67.page);
      expect(csvbkup.item67.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00803_element_check_00779 **********\n\n");
    });

    test('00804_element_check_00780', () async {
      print("\n********** テスト実行：00804_element_check_00780 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.position;
      print(csvbkup.item67.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.position = testData1;
      print(csvbkup.item67.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.position = testData2;
      print(csvbkup.item67.position);
      expect(csvbkup.item67.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.position = defalut;
      print(csvbkup.item67.position);
      expect(csvbkup.item67.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00804_element_check_00780 **********\n\n");
    });

    test('00805_element_check_00781', () async {
      print("\n********** テスト実行：00805_element_check_00781 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.table1;
      print(csvbkup.item67.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.table1 = testData1s;
      print(csvbkup.item67.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.table1 = testData2s;
      print(csvbkup.item67.table1);
      expect(csvbkup.item67.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.table1 = defalut;
      print(csvbkup.item67.table1);
      expect(csvbkup.item67.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00805_element_check_00781 **********\n\n");
    });

    test('00806_element_check_00782', () async {
      print("\n********** テスト実行：00806_element_check_00782 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.total;
      print(csvbkup.item67.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.total = testData1;
      print(csvbkup.item67.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.total = testData2;
      print(csvbkup.item67.total);
      expect(csvbkup.item67.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.total = defalut;
      print(csvbkup.item67.total);
      expect(csvbkup.item67.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00806_element_check_00782 **********\n\n");
    });

    test('00807_element_check_00783', () async {
      print("\n********** テスト実行：00807_element_check_00783 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.t_exe1;
      print(csvbkup.item67.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.t_exe1 = testData1s;
      print(csvbkup.item67.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.t_exe1 = testData2s;
      print(csvbkup.item67.t_exe1);
      expect(csvbkup.item67.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.t_exe1 = defalut;
      print(csvbkup.item67.t_exe1);
      expect(csvbkup.item67.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00807_element_check_00783 **********\n\n");
    });

    test('00808_element_check_00784', () async {
      print("\n********** テスト実行：00808_element_check_00784 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.t_exe2;
      print(csvbkup.item67.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.t_exe2 = testData1s;
      print(csvbkup.item67.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.t_exe2 = testData2s;
      print(csvbkup.item67.t_exe2);
      expect(csvbkup.item67.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.t_exe2 = defalut;
      print(csvbkup.item67.t_exe2);
      expect(csvbkup.item67.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00808_element_check_00784 **********\n\n");
    });

    test('00809_element_check_00785', () async {
      print("\n********** テスト実行：00809_element_check_00785 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.section;
      print(csvbkup.item67.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.section = testData1s;
      print(csvbkup.item67.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.section = testData2s;
      print(csvbkup.item67.section);
      expect(csvbkup.item67.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.section = defalut;
      print(csvbkup.item67.section);
      expect(csvbkup.item67.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00809_element_check_00785 **********\n\n");
    });

    test('00810_element_check_00786', () async {
      print("\n********** テスト実行：00810_element_check_00786 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.keyword;
      print(csvbkup.item67.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.keyword = testData1s;
      print(csvbkup.item67.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.keyword = testData2s;
      print(csvbkup.item67.keyword);
      expect(csvbkup.item67.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.keyword = defalut;
      print(csvbkup.item67.keyword);
      expect(csvbkup.item67.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00810_element_check_00786 **********\n\n");
    });

    test('00811_element_check_00787', () async {
      print("\n********** テスト実行：00811_element_check_00787 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.keyword2;
      print(csvbkup.item67.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.keyword2 = testData1s;
      print(csvbkup.item67.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.keyword2 = testData2s;
      print(csvbkup.item67.keyword2);
      expect(csvbkup.item67.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.keyword2 = defalut;
      print(csvbkup.item67.keyword2);
      expect(csvbkup.item67.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00811_element_check_00787 **********\n\n");
    });

    test('00812_element_check_00788', () async {
      print("\n********** テスト実行：00812_element_check_00788 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.keyword3;
      print(csvbkup.item67.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.keyword3 = testData1s;
      print(csvbkup.item67.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.keyword3 = testData2s;
      print(csvbkup.item67.keyword3);
      expect(csvbkup.item67.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.keyword3 = defalut;
      print(csvbkup.item67.keyword3);
      expect(csvbkup.item67.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00812_element_check_00788 **********\n\n");
    });

    test('00813_element_check_00789', () async {
      print("\n********** テスト実行：00813_element_check_00789 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.backup_day;
      print(csvbkup.item67.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.backup_day = testData1s;
      print(csvbkup.item67.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.backup_day = testData2s;
      print(csvbkup.item67.backup_day);
      expect(csvbkup.item67.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.backup_day = defalut;
      print(csvbkup.item67.backup_day);
      expect(csvbkup.item67.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00813_element_check_00789 **********\n\n");
    });

    test('00814_element_check_00790', () async {
      print("\n********** テスト実行：00814_element_check_00790 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item67.select_dsp;
      print(csvbkup.item67.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item67.select_dsp = testData1;
      print(csvbkup.item67.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item67.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item67.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item67.select_dsp = testData2;
      print(csvbkup.item67.select_dsp);
      expect(csvbkup.item67.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item67.select_dsp = defalut;
      print(csvbkup.item67.select_dsp);
      expect(csvbkup.item67.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item67.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00814_element_check_00790 **********\n\n");
    });

    test('00815_element_check_00791', () async {
      print("\n********** テスト実行：00815_element_check_00791 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.onoff;
      print(csvbkup.item68.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.onoff = testData1;
      print(csvbkup.item68.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.onoff = testData2;
      print(csvbkup.item68.onoff);
      expect(csvbkup.item68.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.onoff = defalut;
      print(csvbkup.item68.onoff);
      expect(csvbkup.item68.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00815_element_check_00791 **********\n\n");
    });

    test('00816_element_check_00792', () async {
      print("\n********** テスト実行：00816_element_check_00792 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.page;
      print(csvbkup.item68.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.page = testData1;
      print(csvbkup.item68.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.page = testData2;
      print(csvbkup.item68.page);
      expect(csvbkup.item68.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.page = defalut;
      print(csvbkup.item68.page);
      expect(csvbkup.item68.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00816_element_check_00792 **********\n\n");
    });

    test('00817_element_check_00793', () async {
      print("\n********** テスト実行：00817_element_check_00793 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.position;
      print(csvbkup.item68.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.position = testData1;
      print(csvbkup.item68.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.position = testData2;
      print(csvbkup.item68.position);
      expect(csvbkup.item68.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.position = defalut;
      print(csvbkup.item68.position);
      expect(csvbkup.item68.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00817_element_check_00793 **********\n\n");
    });

    test('00818_element_check_00794', () async {
      print("\n********** テスト実行：00818_element_check_00794 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.table1;
      print(csvbkup.item68.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.table1 = testData1s;
      print(csvbkup.item68.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.table1 = testData2s;
      print(csvbkup.item68.table1);
      expect(csvbkup.item68.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.table1 = defalut;
      print(csvbkup.item68.table1);
      expect(csvbkup.item68.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00818_element_check_00794 **********\n\n");
    });

    test('00819_element_check_00795', () async {
      print("\n********** テスト実行：00819_element_check_00795 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.total;
      print(csvbkup.item68.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.total = testData1;
      print(csvbkup.item68.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.total = testData2;
      print(csvbkup.item68.total);
      expect(csvbkup.item68.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.total = defalut;
      print(csvbkup.item68.total);
      expect(csvbkup.item68.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00819_element_check_00795 **********\n\n");
    });

    test('00820_element_check_00796', () async {
      print("\n********** テスト実行：00820_element_check_00796 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.t_exe1;
      print(csvbkup.item68.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.t_exe1 = testData1s;
      print(csvbkup.item68.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.t_exe1 = testData2s;
      print(csvbkup.item68.t_exe1);
      expect(csvbkup.item68.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.t_exe1 = defalut;
      print(csvbkup.item68.t_exe1);
      expect(csvbkup.item68.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00820_element_check_00796 **********\n\n");
    });

    test('00821_element_check_00797', () async {
      print("\n********** テスト実行：00821_element_check_00797 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.t_exe2;
      print(csvbkup.item68.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.t_exe2 = testData1s;
      print(csvbkup.item68.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.t_exe2 = testData2s;
      print(csvbkup.item68.t_exe2);
      expect(csvbkup.item68.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.t_exe2 = defalut;
      print(csvbkup.item68.t_exe2);
      expect(csvbkup.item68.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00821_element_check_00797 **********\n\n");
    });

    test('00822_element_check_00798', () async {
      print("\n********** テスト実行：00822_element_check_00798 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.section;
      print(csvbkup.item68.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.section = testData1s;
      print(csvbkup.item68.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.section = testData2s;
      print(csvbkup.item68.section);
      expect(csvbkup.item68.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.section = defalut;
      print(csvbkup.item68.section);
      expect(csvbkup.item68.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00822_element_check_00798 **********\n\n");
    });

    test('00823_element_check_00799', () async {
      print("\n********** テスト実行：00823_element_check_00799 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.keyword;
      print(csvbkup.item68.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.keyword = testData1s;
      print(csvbkup.item68.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.keyword = testData2s;
      print(csvbkup.item68.keyword);
      expect(csvbkup.item68.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.keyword = defalut;
      print(csvbkup.item68.keyword);
      expect(csvbkup.item68.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00823_element_check_00799 **********\n\n");
    });

    test('00824_element_check_00800', () async {
      print("\n********** テスト実行：00824_element_check_00800 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.keyword2;
      print(csvbkup.item68.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.keyword2 = testData1s;
      print(csvbkup.item68.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.keyword2 = testData2s;
      print(csvbkup.item68.keyword2);
      expect(csvbkup.item68.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.keyword2 = defalut;
      print(csvbkup.item68.keyword2);
      expect(csvbkup.item68.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00824_element_check_00800 **********\n\n");
    });

    test('00825_element_check_00801', () async {
      print("\n********** テスト実行：00825_element_check_00801 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.keyword3;
      print(csvbkup.item68.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.keyword3 = testData1s;
      print(csvbkup.item68.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.keyword3 = testData2s;
      print(csvbkup.item68.keyword3);
      expect(csvbkup.item68.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.keyword3 = defalut;
      print(csvbkup.item68.keyword3);
      expect(csvbkup.item68.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00825_element_check_00801 **********\n\n");
    });

    test('00826_element_check_00802', () async {
      print("\n********** テスト実行：00826_element_check_00802 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.backup_day;
      print(csvbkup.item68.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.backup_day = testData1s;
      print(csvbkup.item68.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.backup_day = testData2s;
      print(csvbkup.item68.backup_day);
      expect(csvbkup.item68.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.backup_day = defalut;
      print(csvbkup.item68.backup_day);
      expect(csvbkup.item68.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00826_element_check_00802 **********\n\n");
    });

    test('00827_element_check_00803', () async {
      print("\n********** テスト実行：00827_element_check_00803 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item68.select_dsp;
      print(csvbkup.item68.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item68.select_dsp = testData1;
      print(csvbkup.item68.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item68.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item68.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item68.select_dsp = testData2;
      print(csvbkup.item68.select_dsp);
      expect(csvbkup.item68.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item68.select_dsp = defalut;
      print(csvbkup.item68.select_dsp);
      expect(csvbkup.item68.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item68.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00827_element_check_00803 **********\n\n");
    });

    test('00828_element_check_00804', () async {
      print("\n********** テスト実行：00828_element_check_00804 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.onoff;
      print(csvbkup.item69.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.onoff = testData1;
      print(csvbkup.item69.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.onoff = testData2;
      print(csvbkup.item69.onoff);
      expect(csvbkup.item69.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.onoff = defalut;
      print(csvbkup.item69.onoff);
      expect(csvbkup.item69.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00828_element_check_00804 **********\n\n");
    });

    test('00829_element_check_00805', () async {
      print("\n********** テスト実行：00829_element_check_00805 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.page;
      print(csvbkup.item69.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.page = testData1;
      print(csvbkup.item69.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.page = testData2;
      print(csvbkup.item69.page);
      expect(csvbkup.item69.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.page = defalut;
      print(csvbkup.item69.page);
      expect(csvbkup.item69.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00829_element_check_00805 **********\n\n");
    });

    test('00830_element_check_00806', () async {
      print("\n********** テスト実行：00830_element_check_00806 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.position;
      print(csvbkup.item69.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.position = testData1;
      print(csvbkup.item69.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.position = testData2;
      print(csvbkup.item69.position);
      expect(csvbkup.item69.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.position = defalut;
      print(csvbkup.item69.position);
      expect(csvbkup.item69.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00830_element_check_00806 **********\n\n");
    });

    test('00831_element_check_00807', () async {
      print("\n********** テスト実行：00831_element_check_00807 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.table1;
      print(csvbkup.item69.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.table1 = testData1s;
      print(csvbkup.item69.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.table1 = testData2s;
      print(csvbkup.item69.table1);
      expect(csvbkup.item69.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.table1 = defalut;
      print(csvbkup.item69.table1);
      expect(csvbkup.item69.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00831_element_check_00807 **********\n\n");
    });

    test('00832_element_check_00808', () async {
      print("\n********** テスト実行：00832_element_check_00808 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.total;
      print(csvbkup.item69.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.total = testData1;
      print(csvbkup.item69.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.total = testData2;
      print(csvbkup.item69.total);
      expect(csvbkup.item69.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.total = defalut;
      print(csvbkup.item69.total);
      expect(csvbkup.item69.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00832_element_check_00808 **********\n\n");
    });

    test('00833_element_check_00809', () async {
      print("\n********** テスト実行：00833_element_check_00809 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.t_exe1;
      print(csvbkup.item69.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.t_exe1 = testData1s;
      print(csvbkup.item69.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.t_exe1 = testData2s;
      print(csvbkup.item69.t_exe1);
      expect(csvbkup.item69.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.t_exe1 = defalut;
      print(csvbkup.item69.t_exe1);
      expect(csvbkup.item69.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00833_element_check_00809 **********\n\n");
    });

    test('00834_element_check_00810', () async {
      print("\n********** テスト実行：00834_element_check_00810 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.section;
      print(csvbkup.item69.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.section = testData1s;
      print(csvbkup.item69.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.section = testData2s;
      print(csvbkup.item69.section);
      expect(csvbkup.item69.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.section = defalut;
      print(csvbkup.item69.section);
      expect(csvbkup.item69.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00834_element_check_00810 **********\n\n");
    });

    test('00835_element_check_00811', () async {
      print("\n********** テスト実行：00835_element_check_00811 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.keyword;
      print(csvbkup.item69.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.keyword = testData1s;
      print(csvbkup.item69.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.keyword = testData2s;
      print(csvbkup.item69.keyword);
      expect(csvbkup.item69.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.keyword = defalut;
      print(csvbkup.item69.keyword);
      expect(csvbkup.item69.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00835_element_check_00811 **********\n\n");
    });

    test('00836_element_check_00812', () async {
      print("\n********** テスト実行：00836_element_check_00812 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.keyword2;
      print(csvbkup.item69.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.keyword2 = testData1s;
      print(csvbkup.item69.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.keyword2 = testData2s;
      print(csvbkup.item69.keyword2);
      expect(csvbkup.item69.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.keyword2 = defalut;
      print(csvbkup.item69.keyword2);
      expect(csvbkup.item69.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00836_element_check_00812 **********\n\n");
    });

    test('00837_element_check_00813', () async {
      print("\n********** テスト実行：00837_element_check_00813 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.keyword3;
      print(csvbkup.item69.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.keyword3 = testData1s;
      print(csvbkup.item69.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.keyword3 = testData2s;
      print(csvbkup.item69.keyword3);
      expect(csvbkup.item69.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.keyword3 = defalut;
      print(csvbkup.item69.keyword3);
      expect(csvbkup.item69.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00837_element_check_00813 **********\n\n");
    });

    test('00838_element_check_00814', () async {
      print("\n********** テスト実行：00838_element_check_00814 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.backup_day;
      print(csvbkup.item69.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.backup_day = testData1s;
      print(csvbkup.item69.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.backup_day = testData2s;
      print(csvbkup.item69.backup_day);
      expect(csvbkup.item69.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.backup_day = defalut;
      print(csvbkup.item69.backup_day);
      expect(csvbkup.item69.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00838_element_check_00814 **********\n\n");
    });

    test('00839_element_check_00815', () async {
      print("\n********** テスト実行：00839_element_check_00815 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item69.select_dsp;
      print(csvbkup.item69.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item69.select_dsp = testData1;
      print(csvbkup.item69.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item69.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item69.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item69.select_dsp = testData2;
      print(csvbkup.item69.select_dsp);
      expect(csvbkup.item69.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item69.select_dsp = defalut;
      print(csvbkup.item69.select_dsp);
      expect(csvbkup.item69.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item69.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00839_element_check_00815 **********\n\n");
    });

    test('00840_element_check_00816', () async {
      print("\n********** テスト実行：00840_element_check_00816 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.onoff;
      print(csvbkup.item70.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.onoff = testData1;
      print(csvbkup.item70.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.onoff = testData2;
      print(csvbkup.item70.onoff);
      expect(csvbkup.item70.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.onoff = defalut;
      print(csvbkup.item70.onoff);
      expect(csvbkup.item70.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00840_element_check_00816 **********\n\n");
    });

    test('00841_element_check_00817', () async {
      print("\n********** テスト実行：00841_element_check_00817 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.page;
      print(csvbkup.item70.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.page = testData1;
      print(csvbkup.item70.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.page = testData2;
      print(csvbkup.item70.page);
      expect(csvbkup.item70.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.page = defalut;
      print(csvbkup.item70.page);
      expect(csvbkup.item70.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00841_element_check_00817 **********\n\n");
    });

    test('00842_element_check_00818', () async {
      print("\n********** テスト実行：00842_element_check_00818 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.position;
      print(csvbkup.item70.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.position = testData1;
      print(csvbkup.item70.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.position = testData2;
      print(csvbkup.item70.position);
      expect(csvbkup.item70.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.position = defalut;
      print(csvbkup.item70.position);
      expect(csvbkup.item70.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00842_element_check_00818 **********\n\n");
    });

    test('00843_element_check_00819', () async {
      print("\n********** テスト実行：00843_element_check_00819 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.table1;
      print(csvbkup.item70.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.table1 = testData1s;
      print(csvbkup.item70.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.table1 = testData2s;
      print(csvbkup.item70.table1);
      expect(csvbkup.item70.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.table1 = defalut;
      print(csvbkup.item70.table1);
      expect(csvbkup.item70.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00843_element_check_00819 **********\n\n");
    });

    test('00844_element_check_00820', () async {
      print("\n********** テスト実行：00844_element_check_00820 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.total;
      print(csvbkup.item70.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.total = testData1;
      print(csvbkup.item70.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.total = testData2;
      print(csvbkup.item70.total);
      expect(csvbkup.item70.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.total = defalut;
      print(csvbkup.item70.total);
      expect(csvbkup.item70.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00844_element_check_00820 **********\n\n");
    });

    test('00845_element_check_00821', () async {
      print("\n********** テスト実行：00845_element_check_00821 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.t_exe1;
      print(csvbkup.item70.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.t_exe1 = testData1s;
      print(csvbkup.item70.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.t_exe1 = testData2s;
      print(csvbkup.item70.t_exe1);
      expect(csvbkup.item70.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.t_exe1 = defalut;
      print(csvbkup.item70.t_exe1);
      expect(csvbkup.item70.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00845_element_check_00821 **********\n\n");
    });

    test('00846_element_check_00822', () async {
      print("\n********** テスト実行：00846_element_check_00822 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.t_exe2;
      print(csvbkup.item70.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.t_exe2 = testData1s;
      print(csvbkup.item70.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.t_exe2 = testData2s;
      print(csvbkup.item70.t_exe2);
      expect(csvbkup.item70.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.t_exe2 = defalut;
      print(csvbkup.item70.t_exe2);
      expect(csvbkup.item70.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00846_element_check_00822 **********\n\n");
    });

    test('00847_element_check_00823', () async {
      print("\n********** テスト実行：00847_element_check_00823 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.section;
      print(csvbkup.item70.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.section = testData1s;
      print(csvbkup.item70.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.section = testData2s;
      print(csvbkup.item70.section);
      expect(csvbkup.item70.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.section = defalut;
      print(csvbkup.item70.section);
      expect(csvbkup.item70.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00847_element_check_00823 **********\n\n");
    });

    test('00848_element_check_00824', () async {
      print("\n********** テスト実行：00848_element_check_00824 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.keyword;
      print(csvbkup.item70.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.keyword = testData1s;
      print(csvbkup.item70.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.keyword = testData2s;
      print(csvbkup.item70.keyword);
      expect(csvbkup.item70.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.keyword = defalut;
      print(csvbkup.item70.keyword);
      expect(csvbkup.item70.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00848_element_check_00824 **********\n\n");
    });

    test('00849_element_check_00825', () async {
      print("\n********** テスト実行：00849_element_check_00825 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.keyword2;
      print(csvbkup.item70.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.keyword2 = testData1s;
      print(csvbkup.item70.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.keyword2 = testData2s;
      print(csvbkup.item70.keyword2);
      expect(csvbkup.item70.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.keyword2 = defalut;
      print(csvbkup.item70.keyword2);
      expect(csvbkup.item70.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00849_element_check_00825 **********\n\n");
    });

    test('00850_element_check_00826', () async {
      print("\n********** テスト実行：00850_element_check_00826 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.keyword3;
      print(csvbkup.item70.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.keyword3 = testData1s;
      print(csvbkup.item70.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.keyword3 = testData2s;
      print(csvbkup.item70.keyword3);
      expect(csvbkup.item70.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.keyword3 = defalut;
      print(csvbkup.item70.keyword3);
      expect(csvbkup.item70.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00850_element_check_00826 **********\n\n");
    });

    test('00851_element_check_00827', () async {
      print("\n********** テスト実行：00851_element_check_00827 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.backup_day;
      print(csvbkup.item70.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.backup_day = testData1s;
      print(csvbkup.item70.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.backup_day = testData2s;
      print(csvbkup.item70.backup_day);
      expect(csvbkup.item70.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.backup_day = defalut;
      print(csvbkup.item70.backup_day);
      expect(csvbkup.item70.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00851_element_check_00827 **********\n\n");
    });

    test('00852_element_check_00828', () async {
      print("\n********** テスト実行：00852_element_check_00828 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item70.select_dsp;
      print(csvbkup.item70.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item70.select_dsp = testData1;
      print(csvbkup.item70.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item70.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item70.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item70.select_dsp = testData2;
      print(csvbkup.item70.select_dsp);
      expect(csvbkup.item70.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item70.select_dsp = defalut;
      print(csvbkup.item70.select_dsp);
      expect(csvbkup.item70.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item70.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00852_element_check_00828 **********\n\n");
    });

    test('00853_element_check_00829', () async {
      print("\n********** テスト実行：00853_element_check_00829 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.onoff;
      print(csvbkup.item71.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.onoff = testData1;
      print(csvbkup.item71.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.onoff = testData2;
      print(csvbkup.item71.onoff);
      expect(csvbkup.item71.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.onoff = defalut;
      print(csvbkup.item71.onoff);
      expect(csvbkup.item71.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00853_element_check_00829 **********\n\n");
    });

    test('00854_element_check_00830', () async {
      print("\n********** テスト実行：00854_element_check_00830 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.page;
      print(csvbkup.item71.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.page = testData1;
      print(csvbkup.item71.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.page = testData2;
      print(csvbkup.item71.page);
      expect(csvbkup.item71.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.page = defalut;
      print(csvbkup.item71.page);
      expect(csvbkup.item71.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00854_element_check_00830 **********\n\n");
    });

    test('00855_element_check_00831', () async {
      print("\n********** テスト実行：00855_element_check_00831 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.position;
      print(csvbkup.item71.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.position = testData1;
      print(csvbkup.item71.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.position = testData2;
      print(csvbkup.item71.position);
      expect(csvbkup.item71.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.position = defalut;
      print(csvbkup.item71.position);
      expect(csvbkup.item71.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00855_element_check_00831 **********\n\n");
    });

    test('00856_element_check_00832', () async {
      print("\n********** テスト実行：00856_element_check_00832 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.table1;
      print(csvbkup.item71.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.table1 = testData1s;
      print(csvbkup.item71.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.table1 = testData2s;
      print(csvbkup.item71.table1);
      expect(csvbkup.item71.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.table1 = defalut;
      print(csvbkup.item71.table1);
      expect(csvbkup.item71.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00856_element_check_00832 **********\n\n");
    });

    test('00857_element_check_00833', () async {
      print("\n********** テスト実行：00857_element_check_00833 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.total;
      print(csvbkup.item71.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.total = testData1;
      print(csvbkup.item71.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.total = testData2;
      print(csvbkup.item71.total);
      expect(csvbkup.item71.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.total = defalut;
      print(csvbkup.item71.total);
      expect(csvbkup.item71.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00857_element_check_00833 **********\n\n");
    });

    test('00858_element_check_00834', () async {
      print("\n********** テスト実行：00858_element_check_00834 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.t_exe1;
      print(csvbkup.item71.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.t_exe1 = testData1s;
      print(csvbkup.item71.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.t_exe1 = testData2s;
      print(csvbkup.item71.t_exe1);
      expect(csvbkup.item71.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.t_exe1 = defalut;
      print(csvbkup.item71.t_exe1);
      expect(csvbkup.item71.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00858_element_check_00834 **********\n\n");
    });

    test('00859_element_check_00835', () async {
      print("\n********** テスト実行：00859_element_check_00835 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.section;
      print(csvbkup.item71.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.section = testData1s;
      print(csvbkup.item71.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.section = testData2s;
      print(csvbkup.item71.section);
      expect(csvbkup.item71.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.section = defalut;
      print(csvbkup.item71.section);
      expect(csvbkup.item71.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00859_element_check_00835 **********\n\n");
    });

    test('00860_element_check_00836', () async {
      print("\n********** テスト実行：00860_element_check_00836 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.keyword;
      print(csvbkup.item71.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.keyword = testData1s;
      print(csvbkup.item71.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.keyword = testData2s;
      print(csvbkup.item71.keyword);
      expect(csvbkup.item71.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.keyword = defalut;
      print(csvbkup.item71.keyword);
      expect(csvbkup.item71.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00860_element_check_00836 **********\n\n");
    });

    test('00861_element_check_00837', () async {
      print("\n********** テスト実行：00861_element_check_00837 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.keyword2;
      print(csvbkup.item71.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.keyword2 = testData1s;
      print(csvbkup.item71.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.keyword2 = testData2s;
      print(csvbkup.item71.keyword2);
      expect(csvbkup.item71.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.keyword2 = defalut;
      print(csvbkup.item71.keyword2);
      expect(csvbkup.item71.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00861_element_check_00837 **********\n\n");
    });

    test('00862_element_check_00838', () async {
      print("\n********** テスト実行：00862_element_check_00838 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.keyword3;
      print(csvbkup.item71.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.keyword3 = testData1s;
      print(csvbkup.item71.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.keyword3 = testData2s;
      print(csvbkup.item71.keyword3);
      expect(csvbkup.item71.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.keyword3 = defalut;
      print(csvbkup.item71.keyword3);
      expect(csvbkup.item71.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00862_element_check_00838 **********\n\n");
    });

    test('00863_element_check_00839', () async {
      print("\n********** テスト実行：00863_element_check_00839 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.backup_day;
      print(csvbkup.item71.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.backup_day = testData1s;
      print(csvbkup.item71.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.backup_day = testData2s;
      print(csvbkup.item71.backup_day);
      expect(csvbkup.item71.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.backup_day = defalut;
      print(csvbkup.item71.backup_day);
      expect(csvbkup.item71.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00863_element_check_00839 **********\n\n");
    });

    test('00864_element_check_00840', () async {
      print("\n********** テスト実行：00864_element_check_00840 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item71.select_dsp;
      print(csvbkup.item71.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item71.select_dsp = testData1;
      print(csvbkup.item71.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item71.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item71.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item71.select_dsp = testData2;
      print(csvbkup.item71.select_dsp);
      expect(csvbkup.item71.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item71.select_dsp = defalut;
      print(csvbkup.item71.select_dsp);
      expect(csvbkup.item71.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item71.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00864_element_check_00840 **********\n\n");
    });

    test('00865_element_check_00841', () async {
      print("\n********** テスト実行：00865_element_check_00841 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.onoff;
      print(csvbkup.item72.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.onoff = testData1;
      print(csvbkup.item72.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.onoff = testData2;
      print(csvbkup.item72.onoff);
      expect(csvbkup.item72.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.onoff = defalut;
      print(csvbkup.item72.onoff);
      expect(csvbkup.item72.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00865_element_check_00841 **********\n\n");
    });

    test('00866_element_check_00842', () async {
      print("\n********** テスト実行：00866_element_check_00842 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.page;
      print(csvbkup.item72.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.page = testData1;
      print(csvbkup.item72.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.page = testData2;
      print(csvbkup.item72.page);
      expect(csvbkup.item72.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.page = defalut;
      print(csvbkup.item72.page);
      expect(csvbkup.item72.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00866_element_check_00842 **********\n\n");
    });

    test('00867_element_check_00843', () async {
      print("\n********** テスト実行：00867_element_check_00843 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.position;
      print(csvbkup.item72.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.position = testData1;
      print(csvbkup.item72.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.position = testData2;
      print(csvbkup.item72.position);
      expect(csvbkup.item72.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.position = defalut;
      print(csvbkup.item72.position);
      expect(csvbkup.item72.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00867_element_check_00843 **********\n\n");
    });

    test('00868_element_check_00844', () async {
      print("\n********** テスト実行：00868_element_check_00844 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.table1;
      print(csvbkup.item72.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.table1 = testData1s;
      print(csvbkup.item72.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.table1 = testData2s;
      print(csvbkup.item72.table1);
      expect(csvbkup.item72.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.table1 = defalut;
      print(csvbkup.item72.table1);
      expect(csvbkup.item72.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00868_element_check_00844 **********\n\n");
    });

    test('00869_element_check_00845', () async {
      print("\n********** テスト実行：00869_element_check_00845 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.total;
      print(csvbkup.item72.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.total = testData1;
      print(csvbkup.item72.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.total = testData2;
      print(csvbkup.item72.total);
      expect(csvbkup.item72.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.total = defalut;
      print(csvbkup.item72.total);
      expect(csvbkup.item72.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00869_element_check_00845 **********\n\n");
    });

    test('00870_element_check_00846', () async {
      print("\n********** テスト実行：00870_element_check_00846 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.t_exe1;
      print(csvbkup.item72.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.t_exe1 = testData1s;
      print(csvbkup.item72.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.t_exe1 = testData2s;
      print(csvbkup.item72.t_exe1);
      expect(csvbkup.item72.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.t_exe1 = defalut;
      print(csvbkup.item72.t_exe1);
      expect(csvbkup.item72.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00870_element_check_00846 **********\n\n");
    });

    test('00871_element_check_00847', () async {
      print("\n********** テスト実行：00871_element_check_00847 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.section;
      print(csvbkup.item72.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.section = testData1s;
      print(csvbkup.item72.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.section = testData2s;
      print(csvbkup.item72.section);
      expect(csvbkup.item72.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.section = defalut;
      print(csvbkup.item72.section);
      expect(csvbkup.item72.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00871_element_check_00847 **********\n\n");
    });

    test('00872_element_check_00848', () async {
      print("\n********** テスト実行：00872_element_check_00848 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.keyword;
      print(csvbkup.item72.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.keyword = testData1s;
      print(csvbkup.item72.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.keyword = testData2s;
      print(csvbkup.item72.keyword);
      expect(csvbkup.item72.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.keyword = defalut;
      print(csvbkup.item72.keyword);
      expect(csvbkup.item72.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00872_element_check_00848 **********\n\n");
    });

    test('00873_element_check_00849', () async {
      print("\n********** テスト実行：00873_element_check_00849 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.keyword2;
      print(csvbkup.item72.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.keyword2 = testData1s;
      print(csvbkup.item72.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.keyword2 = testData2s;
      print(csvbkup.item72.keyword2);
      expect(csvbkup.item72.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.keyword2 = defalut;
      print(csvbkup.item72.keyword2);
      expect(csvbkup.item72.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00873_element_check_00849 **********\n\n");
    });

    test('00874_element_check_00850', () async {
      print("\n********** テスト実行：00874_element_check_00850 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.keyword3;
      print(csvbkup.item72.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.keyword3 = testData1s;
      print(csvbkup.item72.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.keyword3 = testData2s;
      print(csvbkup.item72.keyword3);
      expect(csvbkup.item72.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.keyword3 = defalut;
      print(csvbkup.item72.keyword3);
      expect(csvbkup.item72.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00874_element_check_00850 **********\n\n");
    });

    test('00875_element_check_00851', () async {
      print("\n********** テスト実行：00875_element_check_00851 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.backup_day;
      print(csvbkup.item72.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.backup_day = testData1s;
      print(csvbkup.item72.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.backup_day = testData2s;
      print(csvbkup.item72.backup_day);
      expect(csvbkup.item72.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.backup_day = defalut;
      print(csvbkup.item72.backup_day);
      expect(csvbkup.item72.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00875_element_check_00851 **********\n\n");
    });

    test('00876_element_check_00852', () async {
      print("\n********** テスト実行：00876_element_check_00852 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item72.select_dsp;
      print(csvbkup.item72.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item72.select_dsp = testData1;
      print(csvbkup.item72.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item72.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item72.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item72.select_dsp = testData2;
      print(csvbkup.item72.select_dsp);
      expect(csvbkup.item72.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item72.select_dsp = defalut;
      print(csvbkup.item72.select_dsp);
      expect(csvbkup.item72.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item72.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00876_element_check_00852 **********\n\n");
    });

    test('00877_element_check_00853', () async {
      print("\n********** テスト実行：00877_element_check_00853 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.onoff;
      print(csvbkup.item73.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.onoff = testData1;
      print(csvbkup.item73.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.onoff = testData2;
      print(csvbkup.item73.onoff);
      expect(csvbkup.item73.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.onoff = defalut;
      print(csvbkup.item73.onoff);
      expect(csvbkup.item73.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00877_element_check_00853 **********\n\n");
    });

    test('00878_element_check_00854', () async {
      print("\n********** テスト実行：00878_element_check_00854 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.page;
      print(csvbkup.item73.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.page = testData1;
      print(csvbkup.item73.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.page = testData2;
      print(csvbkup.item73.page);
      expect(csvbkup.item73.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.page = defalut;
      print(csvbkup.item73.page);
      expect(csvbkup.item73.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00878_element_check_00854 **********\n\n");
    });

    test('00879_element_check_00855', () async {
      print("\n********** テスト実行：00879_element_check_00855 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.position;
      print(csvbkup.item73.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.position = testData1;
      print(csvbkup.item73.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.position = testData2;
      print(csvbkup.item73.position);
      expect(csvbkup.item73.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.position = defalut;
      print(csvbkup.item73.position);
      expect(csvbkup.item73.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00879_element_check_00855 **********\n\n");
    });

    test('00880_element_check_00856', () async {
      print("\n********** テスト実行：00880_element_check_00856 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.table1;
      print(csvbkup.item73.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.table1 = testData1s;
      print(csvbkup.item73.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.table1 = testData2s;
      print(csvbkup.item73.table1);
      expect(csvbkup.item73.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.table1 = defalut;
      print(csvbkup.item73.table1);
      expect(csvbkup.item73.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00880_element_check_00856 **********\n\n");
    });

    test('00881_element_check_00857', () async {
      print("\n********** テスト実行：00881_element_check_00857 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.total;
      print(csvbkup.item73.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.total = testData1;
      print(csvbkup.item73.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.total = testData2;
      print(csvbkup.item73.total);
      expect(csvbkup.item73.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.total = defalut;
      print(csvbkup.item73.total);
      expect(csvbkup.item73.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00881_element_check_00857 **********\n\n");
    });

    test('00882_element_check_00858', () async {
      print("\n********** テスト実行：00882_element_check_00858 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.t_exe1;
      print(csvbkup.item73.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.t_exe1 = testData1s;
      print(csvbkup.item73.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.t_exe1 = testData2s;
      print(csvbkup.item73.t_exe1);
      expect(csvbkup.item73.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.t_exe1 = defalut;
      print(csvbkup.item73.t_exe1);
      expect(csvbkup.item73.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00882_element_check_00858 **********\n\n");
    });

    test('00883_element_check_00859', () async {
      print("\n********** テスト実行：00883_element_check_00859 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.section;
      print(csvbkup.item73.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.section = testData1s;
      print(csvbkup.item73.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.section = testData2s;
      print(csvbkup.item73.section);
      expect(csvbkup.item73.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.section = defalut;
      print(csvbkup.item73.section);
      expect(csvbkup.item73.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00883_element_check_00859 **********\n\n");
    });

    test('00884_element_check_00860', () async {
      print("\n********** テスト実行：00884_element_check_00860 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.keyword;
      print(csvbkup.item73.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.keyword = testData1s;
      print(csvbkup.item73.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.keyword = testData2s;
      print(csvbkup.item73.keyword);
      expect(csvbkup.item73.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.keyword = defalut;
      print(csvbkup.item73.keyword);
      expect(csvbkup.item73.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00884_element_check_00860 **********\n\n");
    });

    test('00885_element_check_00861', () async {
      print("\n********** テスト実行：00885_element_check_00861 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.keyword2;
      print(csvbkup.item73.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.keyword2 = testData1s;
      print(csvbkup.item73.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.keyword2 = testData2s;
      print(csvbkup.item73.keyword2);
      expect(csvbkup.item73.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.keyword2 = defalut;
      print(csvbkup.item73.keyword2);
      expect(csvbkup.item73.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00885_element_check_00861 **********\n\n");
    });

    test('00886_element_check_00862', () async {
      print("\n********** テスト実行：00886_element_check_00862 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.keyword3;
      print(csvbkup.item73.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.keyword3 = testData1s;
      print(csvbkup.item73.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.keyword3 = testData2s;
      print(csvbkup.item73.keyword3);
      expect(csvbkup.item73.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.keyword3 = defalut;
      print(csvbkup.item73.keyword3);
      expect(csvbkup.item73.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00886_element_check_00862 **********\n\n");
    });

    test('00887_element_check_00863', () async {
      print("\n********** テスト実行：00887_element_check_00863 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.backup_day;
      print(csvbkup.item73.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.backup_day = testData1s;
      print(csvbkup.item73.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.backup_day = testData2s;
      print(csvbkup.item73.backup_day);
      expect(csvbkup.item73.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.backup_day = defalut;
      print(csvbkup.item73.backup_day);
      expect(csvbkup.item73.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00887_element_check_00863 **********\n\n");
    });

    test('00888_element_check_00864', () async {
      print("\n********** テスト実行：00888_element_check_00864 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item73.select_dsp;
      print(csvbkup.item73.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item73.select_dsp = testData1;
      print(csvbkup.item73.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item73.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item73.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item73.select_dsp = testData2;
      print(csvbkup.item73.select_dsp);
      expect(csvbkup.item73.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item73.select_dsp = defalut;
      print(csvbkup.item73.select_dsp);
      expect(csvbkup.item73.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item73.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00888_element_check_00864 **********\n\n");
    });

    test('00889_element_check_00865', () async {
      print("\n********** テスト実行：00889_element_check_00865 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.onoff;
      print(csvbkup.item74.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.onoff = testData1;
      print(csvbkup.item74.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.onoff = testData2;
      print(csvbkup.item74.onoff);
      expect(csvbkup.item74.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.onoff = defalut;
      print(csvbkup.item74.onoff);
      expect(csvbkup.item74.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00889_element_check_00865 **********\n\n");
    });

    test('00890_element_check_00866', () async {
      print("\n********** テスト実行：00890_element_check_00866 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.page;
      print(csvbkup.item74.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.page = testData1;
      print(csvbkup.item74.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.page = testData2;
      print(csvbkup.item74.page);
      expect(csvbkup.item74.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.page = defalut;
      print(csvbkup.item74.page);
      expect(csvbkup.item74.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00890_element_check_00866 **********\n\n");
    });

    test('00891_element_check_00867', () async {
      print("\n********** テスト実行：00891_element_check_00867 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.position;
      print(csvbkup.item74.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.position = testData1;
      print(csvbkup.item74.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.position = testData2;
      print(csvbkup.item74.position);
      expect(csvbkup.item74.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.position = defalut;
      print(csvbkup.item74.position);
      expect(csvbkup.item74.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00891_element_check_00867 **********\n\n");
    });

    test('00892_element_check_00868', () async {
      print("\n********** テスト実行：00892_element_check_00868 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.table1;
      print(csvbkup.item74.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.table1 = testData1s;
      print(csvbkup.item74.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.table1 = testData2s;
      print(csvbkup.item74.table1);
      expect(csvbkup.item74.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.table1 = defalut;
      print(csvbkup.item74.table1);
      expect(csvbkup.item74.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00892_element_check_00868 **********\n\n");
    });

    test('00893_element_check_00869', () async {
      print("\n********** テスト実行：00893_element_check_00869 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.total;
      print(csvbkup.item74.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.total = testData1;
      print(csvbkup.item74.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.total = testData2;
      print(csvbkup.item74.total);
      expect(csvbkup.item74.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.total = defalut;
      print(csvbkup.item74.total);
      expect(csvbkup.item74.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00893_element_check_00869 **********\n\n");
    });

    test('00894_element_check_00870', () async {
      print("\n********** テスト実行：00894_element_check_00870 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.t_exe1;
      print(csvbkup.item74.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.t_exe1 = testData1s;
      print(csvbkup.item74.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.t_exe1 = testData2s;
      print(csvbkup.item74.t_exe1);
      expect(csvbkup.item74.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.t_exe1 = defalut;
      print(csvbkup.item74.t_exe1);
      expect(csvbkup.item74.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00894_element_check_00870 **********\n\n");
    });

    test('00895_element_check_00871', () async {
      print("\n********** テスト実行：00895_element_check_00871 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.section;
      print(csvbkup.item74.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.section = testData1s;
      print(csvbkup.item74.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.section = testData2s;
      print(csvbkup.item74.section);
      expect(csvbkup.item74.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.section = defalut;
      print(csvbkup.item74.section);
      expect(csvbkup.item74.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00895_element_check_00871 **********\n\n");
    });

    test('00896_element_check_00872', () async {
      print("\n********** テスト実行：00896_element_check_00872 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.keyword;
      print(csvbkup.item74.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.keyword = testData1s;
      print(csvbkup.item74.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.keyword = testData2s;
      print(csvbkup.item74.keyword);
      expect(csvbkup.item74.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.keyword = defalut;
      print(csvbkup.item74.keyword);
      expect(csvbkup.item74.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00896_element_check_00872 **********\n\n");
    });

    test('00897_element_check_00873', () async {
      print("\n********** テスト実行：00897_element_check_00873 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.keyword2;
      print(csvbkup.item74.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.keyword2 = testData1s;
      print(csvbkup.item74.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.keyword2 = testData2s;
      print(csvbkup.item74.keyword2);
      expect(csvbkup.item74.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.keyword2 = defalut;
      print(csvbkup.item74.keyword2);
      expect(csvbkup.item74.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00897_element_check_00873 **********\n\n");
    });

    test('00898_element_check_00874', () async {
      print("\n********** テスト実行：00898_element_check_00874 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.keyword3;
      print(csvbkup.item74.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.keyword3 = testData1s;
      print(csvbkup.item74.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.keyword3 = testData2s;
      print(csvbkup.item74.keyword3);
      expect(csvbkup.item74.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.keyword3 = defalut;
      print(csvbkup.item74.keyword3);
      expect(csvbkup.item74.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00898_element_check_00874 **********\n\n");
    });

    test('00899_element_check_00875', () async {
      print("\n********** テスト実行：00899_element_check_00875 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.backup_day;
      print(csvbkup.item74.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.backup_day = testData1s;
      print(csvbkup.item74.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.backup_day = testData2s;
      print(csvbkup.item74.backup_day);
      expect(csvbkup.item74.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.backup_day = defalut;
      print(csvbkup.item74.backup_day);
      expect(csvbkup.item74.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00899_element_check_00875 **********\n\n");
    });

    test('00900_element_check_00876', () async {
      print("\n********** テスト実行：00900_element_check_00876 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item74.select_dsp;
      print(csvbkup.item74.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item74.select_dsp = testData1;
      print(csvbkup.item74.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item74.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item74.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item74.select_dsp = testData2;
      print(csvbkup.item74.select_dsp);
      expect(csvbkup.item74.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item74.select_dsp = defalut;
      print(csvbkup.item74.select_dsp);
      expect(csvbkup.item74.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item74.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00900_element_check_00876 **********\n\n");
    });

    test('00901_element_check_00877', () async {
      print("\n********** テスト実行：00901_element_check_00877 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.onoff;
      print(csvbkup.item75.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.onoff = testData1;
      print(csvbkup.item75.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.onoff = testData2;
      print(csvbkup.item75.onoff);
      expect(csvbkup.item75.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.onoff = defalut;
      print(csvbkup.item75.onoff);
      expect(csvbkup.item75.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00901_element_check_00877 **********\n\n");
    });

    test('00902_element_check_00878', () async {
      print("\n********** テスト実行：00902_element_check_00878 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.page;
      print(csvbkup.item75.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.page = testData1;
      print(csvbkup.item75.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.page = testData2;
      print(csvbkup.item75.page);
      expect(csvbkup.item75.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.page = defalut;
      print(csvbkup.item75.page);
      expect(csvbkup.item75.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00902_element_check_00878 **********\n\n");
    });

    test('00903_element_check_00879', () async {
      print("\n********** テスト実行：00903_element_check_00879 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.position;
      print(csvbkup.item75.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.position = testData1;
      print(csvbkup.item75.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.position = testData2;
      print(csvbkup.item75.position);
      expect(csvbkup.item75.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.position = defalut;
      print(csvbkup.item75.position);
      expect(csvbkup.item75.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00903_element_check_00879 **********\n\n");
    });

    test('00904_element_check_00880', () async {
      print("\n********** テスト実行：00904_element_check_00880 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.table1;
      print(csvbkup.item75.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.table1 = testData1s;
      print(csvbkup.item75.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.table1 = testData2s;
      print(csvbkup.item75.table1);
      expect(csvbkup.item75.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.table1 = defalut;
      print(csvbkup.item75.table1);
      expect(csvbkup.item75.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00904_element_check_00880 **********\n\n");
    });

    test('00905_element_check_00881', () async {
      print("\n********** テスト実行：00905_element_check_00881 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.total;
      print(csvbkup.item75.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.total = testData1;
      print(csvbkup.item75.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.total = testData2;
      print(csvbkup.item75.total);
      expect(csvbkup.item75.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.total = defalut;
      print(csvbkup.item75.total);
      expect(csvbkup.item75.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00905_element_check_00881 **********\n\n");
    });

    test('00906_element_check_00882', () async {
      print("\n********** テスト実行：00906_element_check_00882 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.t_exe1;
      print(csvbkup.item75.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.t_exe1 = testData1s;
      print(csvbkup.item75.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.t_exe1 = testData2s;
      print(csvbkup.item75.t_exe1);
      expect(csvbkup.item75.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.t_exe1 = defalut;
      print(csvbkup.item75.t_exe1);
      expect(csvbkup.item75.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00906_element_check_00882 **********\n\n");
    });

    test('00907_element_check_00883', () async {
      print("\n********** テスト実行：00907_element_check_00883 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.t_exe2;
      print(csvbkup.item75.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.t_exe2 = testData1s;
      print(csvbkup.item75.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.t_exe2 = testData2s;
      print(csvbkup.item75.t_exe2);
      expect(csvbkup.item75.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.t_exe2 = defalut;
      print(csvbkup.item75.t_exe2);
      expect(csvbkup.item75.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00907_element_check_00883 **********\n\n");
    });

    test('00908_element_check_00884', () async {
      print("\n********** テスト実行：00908_element_check_00884 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.t_exe3;
      print(csvbkup.item75.t_exe3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.t_exe3 = testData1s;
      print(csvbkup.item75.t_exe3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.t_exe3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.t_exe3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.t_exe3 = testData2s;
      print(csvbkup.item75.t_exe3);
      expect(csvbkup.item75.t_exe3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.t_exe3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.t_exe3 = defalut;
      print(csvbkup.item75.t_exe3);
      expect(csvbkup.item75.t_exe3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.t_exe3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00908_element_check_00884 **********\n\n");
    });

    test('00909_element_check_00885', () async {
      print("\n********** テスト実行：00909_element_check_00885 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.section;
      print(csvbkup.item75.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.section = testData1s;
      print(csvbkup.item75.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.section = testData2s;
      print(csvbkup.item75.section);
      expect(csvbkup.item75.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.section = defalut;
      print(csvbkup.item75.section);
      expect(csvbkup.item75.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00909_element_check_00885 **********\n\n");
    });

    test('00910_element_check_00886', () async {
      print("\n********** テスト実行：00910_element_check_00886 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.keyword;
      print(csvbkup.item75.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.keyword = testData1s;
      print(csvbkup.item75.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.keyword = testData2s;
      print(csvbkup.item75.keyword);
      expect(csvbkup.item75.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.keyword = defalut;
      print(csvbkup.item75.keyword);
      expect(csvbkup.item75.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00910_element_check_00886 **********\n\n");
    });

    test('00911_element_check_00887', () async {
      print("\n********** テスト実行：00911_element_check_00887 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.keyword2;
      print(csvbkup.item75.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.keyword2 = testData1s;
      print(csvbkup.item75.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.keyword2 = testData2s;
      print(csvbkup.item75.keyword2);
      expect(csvbkup.item75.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.keyword2 = defalut;
      print(csvbkup.item75.keyword2);
      expect(csvbkup.item75.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00911_element_check_00887 **********\n\n");
    });

    test('00912_element_check_00888', () async {
      print("\n********** テスト実行：00912_element_check_00888 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.keyword3;
      print(csvbkup.item75.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.keyword3 = testData1s;
      print(csvbkup.item75.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.keyword3 = testData2s;
      print(csvbkup.item75.keyword3);
      expect(csvbkup.item75.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.keyword3 = defalut;
      print(csvbkup.item75.keyword3);
      expect(csvbkup.item75.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00912_element_check_00888 **********\n\n");
    });

    test('00913_element_check_00889', () async {
      print("\n********** テスト実行：00913_element_check_00889 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.backup_day;
      print(csvbkup.item75.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.backup_day = testData1s;
      print(csvbkup.item75.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.backup_day = testData2s;
      print(csvbkup.item75.backup_day);
      expect(csvbkup.item75.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.backup_day = defalut;
      print(csvbkup.item75.backup_day);
      expect(csvbkup.item75.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00913_element_check_00889 **********\n\n");
    });

    test('00914_element_check_00890', () async {
      print("\n********** テスト実行：00914_element_check_00890 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item75.select_dsp;
      print(csvbkup.item75.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item75.select_dsp = testData1;
      print(csvbkup.item75.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item75.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item75.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item75.select_dsp = testData2;
      print(csvbkup.item75.select_dsp);
      expect(csvbkup.item75.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item75.select_dsp = defalut;
      print(csvbkup.item75.select_dsp);
      expect(csvbkup.item75.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item75.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00914_element_check_00890 **********\n\n");
    });

    test('00915_element_check_00891', () async {
      print("\n********** テスト実行：00915_element_check_00891 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.onoff;
      print(csvbkup.item76.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.onoff = testData1;
      print(csvbkup.item76.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.onoff = testData2;
      print(csvbkup.item76.onoff);
      expect(csvbkup.item76.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.onoff = defalut;
      print(csvbkup.item76.onoff);
      expect(csvbkup.item76.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00915_element_check_00891 **********\n\n");
    });

    test('00916_element_check_00892', () async {
      print("\n********** テスト実行：00916_element_check_00892 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.page;
      print(csvbkup.item76.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.page = testData1;
      print(csvbkup.item76.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.page = testData2;
      print(csvbkup.item76.page);
      expect(csvbkup.item76.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.page = defalut;
      print(csvbkup.item76.page);
      expect(csvbkup.item76.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00916_element_check_00892 **********\n\n");
    });

    test('00917_element_check_00893', () async {
      print("\n********** テスト実行：00917_element_check_00893 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.position;
      print(csvbkup.item76.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.position = testData1;
      print(csvbkup.item76.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.position = testData2;
      print(csvbkup.item76.position);
      expect(csvbkup.item76.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.position = defalut;
      print(csvbkup.item76.position);
      expect(csvbkup.item76.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00917_element_check_00893 **********\n\n");
    });

    test('00918_element_check_00894', () async {
      print("\n********** テスト実行：00918_element_check_00894 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.table1;
      print(csvbkup.item76.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.table1 = testData1s;
      print(csvbkup.item76.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.table1 = testData2s;
      print(csvbkup.item76.table1);
      expect(csvbkup.item76.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.table1 = defalut;
      print(csvbkup.item76.table1);
      expect(csvbkup.item76.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00918_element_check_00894 **********\n\n");
    });

    test('00919_element_check_00895', () async {
      print("\n********** テスト実行：00919_element_check_00895 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.total;
      print(csvbkup.item76.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.total = testData1;
      print(csvbkup.item76.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.total = testData2;
      print(csvbkup.item76.total);
      expect(csvbkup.item76.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.total = defalut;
      print(csvbkup.item76.total);
      expect(csvbkup.item76.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00919_element_check_00895 **********\n\n");
    });

    test('00920_element_check_00896', () async {
      print("\n********** テスト実行：00920_element_check_00896 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.t_exe1;
      print(csvbkup.item76.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.t_exe1 = testData1s;
      print(csvbkup.item76.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.t_exe1 = testData2s;
      print(csvbkup.item76.t_exe1);
      expect(csvbkup.item76.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.t_exe1 = defalut;
      print(csvbkup.item76.t_exe1);
      expect(csvbkup.item76.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00920_element_check_00896 **********\n\n");
    });

    test('00921_element_check_00897', () async {
      print("\n********** テスト実行：00921_element_check_00897 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.section;
      print(csvbkup.item76.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.section = testData1s;
      print(csvbkup.item76.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.section = testData2s;
      print(csvbkup.item76.section);
      expect(csvbkup.item76.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.section = defalut;
      print(csvbkup.item76.section);
      expect(csvbkup.item76.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00921_element_check_00897 **********\n\n");
    });

    test('00922_element_check_00898', () async {
      print("\n********** テスト実行：00922_element_check_00898 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.keyword;
      print(csvbkup.item76.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.keyword = testData1s;
      print(csvbkup.item76.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.keyword = testData2s;
      print(csvbkup.item76.keyword);
      expect(csvbkup.item76.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.keyword = defalut;
      print(csvbkup.item76.keyword);
      expect(csvbkup.item76.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00922_element_check_00898 **********\n\n");
    });

    test('00923_element_check_00899', () async {
      print("\n********** テスト実行：00923_element_check_00899 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.backup_day;
      print(csvbkup.item76.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.backup_day = testData1s;
      print(csvbkup.item76.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.backup_day = testData2s;
      print(csvbkup.item76.backup_day);
      expect(csvbkup.item76.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.backup_day = defalut;
      print(csvbkup.item76.backup_day);
      expect(csvbkup.item76.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00923_element_check_00899 **********\n\n");
    });

    test('00924_element_check_00900', () async {
      print("\n********** テスト実行：00924_element_check_00900 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item76.select_dsp;
      print(csvbkup.item76.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item76.select_dsp = testData1;
      print(csvbkup.item76.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item76.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item76.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item76.select_dsp = testData2;
      print(csvbkup.item76.select_dsp);
      expect(csvbkup.item76.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item76.select_dsp = defalut;
      print(csvbkup.item76.select_dsp);
      expect(csvbkup.item76.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item76.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00924_element_check_00900 **********\n\n");
    });

    test('00925_element_check_00901', () async {
      print("\n********** テスト実行：00925_element_check_00901 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.onoff;
      print(csvbkup.item77.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.onoff = testData1;
      print(csvbkup.item77.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.onoff = testData2;
      print(csvbkup.item77.onoff);
      expect(csvbkup.item77.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.onoff = defalut;
      print(csvbkup.item77.onoff);
      expect(csvbkup.item77.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00925_element_check_00901 **********\n\n");
    });

    test('00926_element_check_00902', () async {
      print("\n********** テスト実行：00926_element_check_00902 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.page;
      print(csvbkup.item77.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.page = testData1;
      print(csvbkup.item77.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.page = testData2;
      print(csvbkup.item77.page);
      expect(csvbkup.item77.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.page = defalut;
      print(csvbkup.item77.page);
      expect(csvbkup.item77.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00926_element_check_00902 **********\n\n");
    });

    test('00927_element_check_00903', () async {
      print("\n********** テスト実行：00927_element_check_00903 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.position;
      print(csvbkup.item77.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.position = testData1;
      print(csvbkup.item77.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.position = testData2;
      print(csvbkup.item77.position);
      expect(csvbkup.item77.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.position = defalut;
      print(csvbkup.item77.position);
      expect(csvbkup.item77.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00927_element_check_00903 **********\n\n");
    });

    test('00928_element_check_00904', () async {
      print("\n********** テスト実行：00928_element_check_00904 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.table1;
      print(csvbkup.item77.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.table1 = testData1s;
      print(csvbkup.item77.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.table1 = testData2s;
      print(csvbkup.item77.table1);
      expect(csvbkup.item77.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.table1 = defalut;
      print(csvbkup.item77.table1);
      expect(csvbkup.item77.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00928_element_check_00904 **********\n\n");
    });

    test('00929_element_check_00905', () async {
      print("\n********** テスト実行：00929_element_check_00905 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.total;
      print(csvbkup.item77.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.total = testData1;
      print(csvbkup.item77.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.total = testData2;
      print(csvbkup.item77.total);
      expect(csvbkup.item77.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.total = defalut;
      print(csvbkup.item77.total);
      expect(csvbkup.item77.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00929_element_check_00905 **********\n\n");
    });

    test('00930_element_check_00906', () async {
      print("\n********** テスト実行：00930_element_check_00906 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.t_exe1;
      print(csvbkup.item77.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.t_exe1 = testData1s;
      print(csvbkup.item77.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.t_exe1 = testData2s;
      print(csvbkup.item77.t_exe1);
      expect(csvbkup.item77.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.t_exe1 = defalut;
      print(csvbkup.item77.t_exe1);
      expect(csvbkup.item77.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00930_element_check_00906 **********\n\n");
    });

    test('00931_element_check_00907', () async {
      print("\n********** テスト実行：00931_element_check_00907 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.section;
      print(csvbkup.item77.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.section = testData1s;
      print(csvbkup.item77.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.section = testData2s;
      print(csvbkup.item77.section);
      expect(csvbkup.item77.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.section = defalut;
      print(csvbkup.item77.section);
      expect(csvbkup.item77.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00931_element_check_00907 **********\n\n");
    });

    test('00932_element_check_00908', () async {
      print("\n********** テスト実行：00932_element_check_00908 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.keyword;
      print(csvbkup.item77.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.keyword = testData1s;
      print(csvbkup.item77.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.keyword = testData2s;
      print(csvbkup.item77.keyword);
      expect(csvbkup.item77.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.keyword = defalut;
      print(csvbkup.item77.keyword);
      expect(csvbkup.item77.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00932_element_check_00908 **********\n\n");
    });

    test('00933_element_check_00909', () async {
      print("\n********** テスト実行：00933_element_check_00909 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.keyword2;
      print(csvbkup.item77.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.keyword2 = testData1s;
      print(csvbkup.item77.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.keyword2 = testData2s;
      print(csvbkup.item77.keyword2);
      expect(csvbkup.item77.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.keyword2 = defalut;
      print(csvbkup.item77.keyword2);
      expect(csvbkup.item77.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00933_element_check_00909 **********\n\n");
    });

    test('00934_element_check_00910', () async {
      print("\n********** テスト実行：00934_element_check_00910 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.keyword3;
      print(csvbkup.item77.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.keyword3 = testData1s;
      print(csvbkup.item77.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.keyword3 = testData2s;
      print(csvbkup.item77.keyword3);
      expect(csvbkup.item77.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.keyword3 = defalut;
      print(csvbkup.item77.keyword3);
      expect(csvbkup.item77.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00934_element_check_00910 **********\n\n");
    });

    test('00935_element_check_00911', () async {
      print("\n********** テスト実行：00935_element_check_00911 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.backup_day;
      print(csvbkup.item77.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.backup_day = testData1s;
      print(csvbkup.item77.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.backup_day = testData2s;
      print(csvbkup.item77.backup_day);
      expect(csvbkup.item77.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.backup_day = defalut;
      print(csvbkup.item77.backup_day);
      expect(csvbkup.item77.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00935_element_check_00911 **********\n\n");
    });

    test('00936_element_check_00912', () async {
      print("\n********** テスト実行：00936_element_check_00912 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item77.select_dsp;
      print(csvbkup.item77.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item77.select_dsp = testData1;
      print(csvbkup.item77.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item77.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item77.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item77.select_dsp = testData2;
      print(csvbkup.item77.select_dsp);
      expect(csvbkup.item77.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item77.select_dsp = defalut;
      print(csvbkup.item77.select_dsp);
      expect(csvbkup.item77.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item77.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00936_element_check_00912 **********\n\n");
    });

    test('00937_element_check_00913', () async {
      print("\n********** テスト実行：00937_element_check_00913 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.onoff;
      print(csvbkup.item78.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.onoff = testData1;
      print(csvbkup.item78.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.onoff = testData2;
      print(csvbkup.item78.onoff);
      expect(csvbkup.item78.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.onoff = defalut;
      print(csvbkup.item78.onoff);
      expect(csvbkup.item78.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00937_element_check_00913 **********\n\n");
    });

    test('00938_element_check_00914', () async {
      print("\n********** テスト実行：00938_element_check_00914 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.page;
      print(csvbkup.item78.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.page = testData1;
      print(csvbkup.item78.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.page = testData2;
      print(csvbkup.item78.page);
      expect(csvbkup.item78.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.page = defalut;
      print(csvbkup.item78.page);
      expect(csvbkup.item78.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00938_element_check_00914 **********\n\n");
    });

    test('00939_element_check_00915', () async {
      print("\n********** テスト実行：00939_element_check_00915 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.position;
      print(csvbkup.item78.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.position = testData1;
      print(csvbkup.item78.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.position = testData2;
      print(csvbkup.item78.position);
      expect(csvbkup.item78.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.position = defalut;
      print(csvbkup.item78.position);
      expect(csvbkup.item78.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00939_element_check_00915 **********\n\n");
    });

    test('00940_element_check_00916', () async {
      print("\n********** テスト実行：00940_element_check_00916 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.table1;
      print(csvbkup.item78.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.table1 = testData1s;
      print(csvbkup.item78.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.table1 = testData2s;
      print(csvbkup.item78.table1);
      expect(csvbkup.item78.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.table1 = defalut;
      print(csvbkup.item78.table1);
      expect(csvbkup.item78.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00940_element_check_00916 **********\n\n");
    });

    test('00941_element_check_00917', () async {
      print("\n********** テスト実行：00941_element_check_00917 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.total;
      print(csvbkup.item78.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.total = testData1;
      print(csvbkup.item78.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.total = testData2;
      print(csvbkup.item78.total);
      expect(csvbkup.item78.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.total = defalut;
      print(csvbkup.item78.total);
      expect(csvbkup.item78.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00941_element_check_00917 **********\n\n");
    });

    test('00942_element_check_00918', () async {
      print("\n********** テスト実行：00942_element_check_00918 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.t_exe1;
      print(csvbkup.item78.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.t_exe1 = testData1s;
      print(csvbkup.item78.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.t_exe1 = testData2s;
      print(csvbkup.item78.t_exe1);
      expect(csvbkup.item78.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.t_exe1 = defalut;
      print(csvbkup.item78.t_exe1);
      expect(csvbkup.item78.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00942_element_check_00918 **********\n\n");
    });

    test('00943_element_check_00919', () async {
      print("\n********** テスト実行：00943_element_check_00919 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.t_exe2;
      print(csvbkup.item78.t_exe2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.t_exe2 = testData1s;
      print(csvbkup.item78.t_exe2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.t_exe2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.t_exe2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.t_exe2 = testData2s;
      print(csvbkup.item78.t_exe2);
      expect(csvbkup.item78.t_exe2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.t_exe2 = defalut;
      print(csvbkup.item78.t_exe2);
      expect(csvbkup.item78.t_exe2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00943_element_check_00919 **********\n\n");
    });

    test('00944_element_check_00920', () async {
      print("\n********** テスト実行：00944_element_check_00920 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.t_exe3;
      print(csvbkup.item78.t_exe3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.t_exe3 = testData1s;
      print(csvbkup.item78.t_exe3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.t_exe3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.t_exe3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.t_exe3 = testData2s;
      print(csvbkup.item78.t_exe3);
      expect(csvbkup.item78.t_exe3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.t_exe3 = defalut;
      print(csvbkup.item78.t_exe3);
      expect(csvbkup.item78.t_exe3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00944_element_check_00920 **********\n\n");
    });

    test('00945_element_check_00921', () async {
      print("\n********** テスト実行：00945_element_check_00921 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.t_exe4;
      print(csvbkup.item78.t_exe4);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.t_exe4 = testData1s;
      print(csvbkup.item78.t_exe4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.t_exe4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.t_exe4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.t_exe4 = testData2s;
      print(csvbkup.item78.t_exe4);
      expect(csvbkup.item78.t_exe4 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.t_exe4 = defalut;
      print(csvbkup.item78.t_exe4);
      expect(csvbkup.item78.t_exe4 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00945_element_check_00921 **********\n\n");
    });

    test('00946_element_check_00922', () async {
      print("\n********** テスト実行：00946_element_check_00922 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.t_exe5;
      print(csvbkup.item78.t_exe5);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.t_exe5 = testData1s;
      print(csvbkup.item78.t_exe5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.t_exe5 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.t_exe5 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.t_exe5 = testData2s;
      print(csvbkup.item78.t_exe5);
      expect(csvbkup.item78.t_exe5 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe5 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.t_exe5 = defalut;
      print(csvbkup.item78.t_exe5);
      expect(csvbkup.item78.t_exe5 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00946_element_check_00922 **********\n\n");
    });

    test('00947_element_check_00923', () async {
      print("\n********** テスト実行：00947_element_check_00923 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.t_exe6;
      print(csvbkup.item78.t_exe6);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.t_exe6 = testData1s;
      print(csvbkup.item78.t_exe6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.t_exe6 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.t_exe6 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.t_exe6 = testData2s;
      print(csvbkup.item78.t_exe6);
      expect(csvbkup.item78.t_exe6 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe6 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.t_exe6 = defalut;
      print(csvbkup.item78.t_exe6);
      expect(csvbkup.item78.t_exe6 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00947_element_check_00923 **********\n\n");
    });

    test('00948_element_check_00924', () async {
      print("\n********** テスト実行：00948_element_check_00924 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.t_exe7;
      print(csvbkup.item78.t_exe7);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.t_exe7 = testData1s;
      print(csvbkup.item78.t_exe7);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.t_exe7 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.t_exe7 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.t_exe7 = testData2s;
      print(csvbkup.item78.t_exe7);
      expect(csvbkup.item78.t_exe7 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe7 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.t_exe7 = defalut;
      print(csvbkup.item78.t_exe7);
      expect(csvbkup.item78.t_exe7 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.t_exe7 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00948_element_check_00924 **********\n\n");
    });

    test('00949_element_check_00925', () async {
      print("\n********** テスト実行：00949_element_check_00925 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.section;
      print(csvbkup.item78.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.section = testData1s;
      print(csvbkup.item78.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.section = testData2s;
      print(csvbkup.item78.section);
      expect(csvbkup.item78.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.section = defalut;
      print(csvbkup.item78.section);
      expect(csvbkup.item78.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00949_element_check_00925 **********\n\n");
    });

    test('00950_element_check_00926', () async {
      print("\n********** テスト実行：00950_element_check_00926 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.keyword;
      print(csvbkup.item78.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.keyword = testData1s;
      print(csvbkup.item78.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.keyword = testData2s;
      print(csvbkup.item78.keyword);
      expect(csvbkup.item78.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.keyword = defalut;
      print(csvbkup.item78.keyword);
      expect(csvbkup.item78.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00950_element_check_00926 **********\n\n");
    });

    test('00951_element_check_00927', () async {
      print("\n********** テスト実行：00951_element_check_00927 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.keyword2;
      print(csvbkup.item78.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.keyword2 = testData1s;
      print(csvbkup.item78.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.keyword2 = testData2s;
      print(csvbkup.item78.keyword2);
      expect(csvbkup.item78.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.keyword2 = defalut;
      print(csvbkup.item78.keyword2);
      expect(csvbkup.item78.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00951_element_check_00927 **********\n\n");
    });

    test('00952_element_check_00928', () async {
      print("\n********** テスト実行：00952_element_check_00928 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.keyword3;
      print(csvbkup.item78.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.keyword3 = testData1s;
      print(csvbkup.item78.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.keyword3 = testData2s;
      print(csvbkup.item78.keyword3);
      expect(csvbkup.item78.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.keyword3 = defalut;
      print(csvbkup.item78.keyword3);
      expect(csvbkup.item78.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00952_element_check_00928 **********\n\n");
    });

    test('00953_element_check_00929', () async {
      print("\n********** テスト実行：00953_element_check_00929 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item78.backup_day;
      print(csvbkup.item78.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item78.backup_day = testData1s;
      print(csvbkup.item78.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item78.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item78.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item78.backup_day = testData2s;
      print(csvbkup.item78.backup_day);
      expect(csvbkup.item78.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item78.backup_day = defalut;
      print(csvbkup.item78.backup_day);
      expect(csvbkup.item78.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item78.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00953_element_check_00929 **********\n\n");
    });

    test('00954_element_check_00930', () async {
      print("\n********** テスト実行：00954_element_check_00930 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.onoff;
      print(csvbkup.item79.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.onoff = testData1;
      print(csvbkup.item79.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.onoff = testData2;
      print(csvbkup.item79.onoff);
      expect(csvbkup.item79.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.onoff = defalut;
      print(csvbkup.item79.onoff);
      expect(csvbkup.item79.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00954_element_check_00930 **********\n\n");
    });

    test('00955_element_check_00931', () async {
      print("\n********** テスト実行：00955_element_check_00931 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.page;
      print(csvbkup.item79.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.page = testData1;
      print(csvbkup.item79.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.page = testData2;
      print(csvbkup.item79.page);
      expect(csvbkup.item79.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.page = defalut;
      print(csvbkup.item79.page);
      expect(csvbkup.item79.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00955_element_check_00931 **********\n\n");
    });

    test('00956_element_check_00932', () async {
      print("\n********** テスト実行：00956_element_check_00932 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.position;
      print(csvbkup.item79.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.position = testData1;
      print(csvbkup.item79.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.position = testData2;
      print(csvbkup.item79.position);
      expect(csvbkup.item79.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.position = defalut;
      print(csvbkup.item79.position);
      expect(csvbkup.item79.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00956_element_check_00932 **********\n\n");
    });

    test('00957_element_check_00933', () async {
      print("\n********** テスト実行：00957_element_check_00933 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.table1;
      print(csvbkup.item79.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.table1 = testData1s;
      print(csvbkup.item79.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.table1 = testData2s;
      print(csvbkup.item79.table1);
      expect(csvbkup.item79.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.table1 = defalut;
      print(csvbkup.item79.table1);
      expect(csvbkup.item79.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00957_element_check_00933 **********\n\n");
    });

    test('00958_element_check_00934', () async {
      print("\n********** テスト実行：00958_element_check_00934 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.total;
      print(csvbkup.item79.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.total = testData1;
      print(csvbkup.item79.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.total = testData2;
      print(csvbkup.item79.total);
      expect(csvbkup.item79.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.total = defalut;
      print(csvbkup.item79.total);
      expect(csvbkup.item79.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00958_element_check_00934 **********\n\n");
    });

    test('00959_element_check_00935', () async {
      print("\n********** テスト実行：00959_element_check_00935 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.t_exe1;
      print(csvbkup.item79.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.t_exe1 = testData1s;
      print(csvbkup.item79.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.t_exe1 = testData2s;
      print(csvbkup.item79.t_exe1);
      expect(csvbkup.item79.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.t_exe1 = defalut;
      print(csvbkup.item79.t_exe1);
      expect(csvbkup.item79.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00959_element_check_00935 **********\n\n");
    });

    test('00960_element_check_00936', () async {
      print("\n********** テスト実行：00960_element_check_00936 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.section;
      print(csvbkup.item79.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.section = testData1s;
      print(csvbkup.item79.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.section = testData2s;
      print(csvbkup.item79.section);
      expect(csvbkup.item79.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.section = defalut;
      print(csvbkup.item79.section);
      expect(csvbkup.item79.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00960_element_check_00936 **********\n\n");
    });

    test('00961_element_check_00937', () async {
      print("\n********** テスト実行：00961_element_check_00937 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.keyword;
      print(csvbkup.item79.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.keyword = testData1s;
      print(csvbkup.item79.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.keyword = testData2s;
      print(csvbkup.item79.keyword);
      expect(csvbkup.item79.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.keyword = defalut;
      print(csvbkup.item79.keyword);
      expect(csvbkup.item79.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00961_element_check_00937 **********\n\n");
    });

    test('00962_element_check_00938', () async {
      print("\n********** テスト実行：00962_element_check_00938 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.keyword2;
      print(csvbkup.item79.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.keyword2 = testData1s;
      print(csvbkup.item79.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.keyword2 = testData2s;
      print(csvbkup.item79.keyword2);
      expect(csvbkup.item79.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.keyword2 = defalut;
      print(csvbkup.item79.keyword2);
      expect(csvbkup.item79.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00962_element_check_00938 **********\n\n");
    });

    test('00963_element_check_00939', () async {
      print("\n********** テスト実行：00963_element_check_00939 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.keyword3;
      print(csvbkup.item79.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.keyword3 = testData1s;
      print(csvbkup.item79.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.keyword3 = testData2s;
      print(csvbkup.item79.keyword3);
      expect(csvbkup.item79.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.keyword3 = defalut;
      print(csvbkup.item79.keyword3);
      expect(csvbkup.item79.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00963_element_check_00939 **********\n\n");
    });

    test('00964_element_check_00940', () async {
      print("\n********** テスト実行：00964_element_check_00940 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.backup_day;
      print(csvbkup.item79.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.backup_day = testData1s;
      print(csvbkup.item79.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.backup_day = testData2s;
      print(csvbkup.item79.backup_day);
      expect(csvbkup.item79.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.backup_day = defalut;
      print(csvbkup.item79.backup_day);
      expect(csvbkup.item79.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00964_element_check_00940 **********\n\n");
    });

    test('00965_element_check_00941', () async {
      print("\n********** テスト実行：00965_element_check_00941 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item79.select_dsp;
      print(csvbkup.item79.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item79.select_dsp = testData1;
      print(csvbkup.item79.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item79.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item79.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item79.select_dsp = testData2;
      print(csvbkup.item79.select_dsp);
      expect(csvbkup.item79.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item79.select_dsp = defalut;
      print(csvbkup.item79.select_dsp);
      expect(csvbkup.item79.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item79.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00965_element_check_00941 **********\n\n");
    });

    test('00966_element_check_00942', () async {
      print("\n********** テスト実行：00966_element_check_00942 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.onoff;
      print(csvbkup.item80.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.onoff = testData1;
      print(csvbkup.item80.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.onoff = testData2;
      print(csvbkup.item80.onoff);
      expect(csvbkup.item80.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.onoff = defalut;
      print(csvbkup.item80.onoff);
      expect(csvbkup.item80.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00966_element_check_00942 **********\n\n");
    });

    test('00967_element_check_00943', () async {
      print("\n********** テスト実行：00967_element_check_00943 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.page;
      print(csvbkup.item80.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.page = testData1;
      print(csvbkup.item80.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.page = testData2;
      print(csvbkup.item80.page);
      expect(csvbkup.item80.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.page = defalut;
      print(csvbkup.item80.page);
      expect(csvbkup.item80.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00967_element_check_00943 **********\n\n");
    });

    test('00968_element_check_00944', () async {
      print("\n********** テスト実行：00968_element_check_00944 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.position;
      print(csvbkup.item80.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.position = testData1;
      print(csvbkup.item80.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.position = testData2;
      print(csvbkup.item80.position);
      expect(csvbkup.item80.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.position = defalut;
      print(csvbkup.item80.position);
      expect(csvbkup.item80.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00968_element_check_00944 **********\n\n");
    });

    test('00969_element_check_00945', () async {
      print("\n********** テスト実行：00969_element_check_00945 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.table1;
      print(csvbkup.item80.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.table1 = testData1s;
      print(csvbkup.item80.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.table1 = testData2s;
      print(csvbkup.item80.table1);
      expect(csvbkup.item80.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.table1 = defalut;
      print(csvbkup.item80.table1);
      expect(csvbkup.item80.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00969_element_check_00945 **********\n\n");
    });

    test('00970_element_check_00946', () async {
      print("\n********** テスト実行：00970_element_check_00946 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.total;
      print(csvbkup.item80.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.total = testData1;
      print(csvbkup.item80.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.total = testData2;
      print(csvbkup.item80.total);
      expect(csvbkup.item80.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.total = defalut;
      print(csvbkup.item80.total);
      expect(csvbkup.item80.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00970_element_check_00946 **********\n\n");
    });

    test('00971_element_check_00947', () async {
      print("\n********** テスト実行：00971_element_check_00947 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.t_exe1;
      print(csvbkup.item80.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.t_exe1 = testData1s;
      print(csvbkup.item80.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.t_exe1 = testData2s;
      print(csvbkup.item80.t_exe1);
      expect(csvbkup.item80.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.t_exe1 = defalut;
      print(csvbkup.item80.t_exe1);
      expect(csvbkup.item80.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00971_element_check_00947 **********\n\n");
    });

    test('00972_element_check_00948', () async {
      print("\n********** テスト実行：00972_element_check_00948 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.section;
      print(csvbkup.item80.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.section = testData1s;
      print(csvbkup.item80.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.section = testData2s;
      print(csvbkup.item80.section);
      expect(csvbkup.item80.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.section = defalut;
      print(csvbkup.item80.section);
      expect(csvbkup.item80.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00972_element_check_00948 **********\n\n");
    });

    test('00973_element_check_00949', () async {
      print("\n********** テスト実行：00973_element_check_00949 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.keyword;
      print(csvbkup.item80.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.keyword = testData1s;
      print(csvbkup.item80.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.keyword = testData2s;
      print(csvbkup.item80.keyword);
      expect(csvbkup.item80.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.keyword = defalut;
      print(csvbkup.item80.keyword);
      expect(csvbkup.item80.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00973_element_check_00949 **********\n\n");
    });

    test('00974_element_check_00950', () async {
      print("\n********** テスト実行：00974_element_check_00950 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.keyword2;
      print(csvbkup.item80.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.keyword2 = testData1s;
      print(csvbkup.item80.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.keyword2 = testData2s;
      print(csvbkup.item80.keyword2);
      expect(csvbkup.item80.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.keyword2 = defalut;
      print(csvbkup.item80.keyword2);
      expect(csvbkup.item80.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00974_element_check_00950 **********\n\n");
    });

    test('00975_element_check_00951', () async {
      print("\n********** テスト実行：00975_element_check_00951 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.backup_day;
      print(csvbkup.item80.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.backup_day = testData1s;
      print(csvbkup.item80.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.backup_day = testData2s;
      print(csvbkup.item80.backup_day);
      expect(csvbkup.item80.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.backup_day = defalut;
      print(csvbkup.item80.backup_day);
      expect(csvbkup.item80.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00975_element_check_00951 **********\n\n");
    });

    test('00976_element_check_00952', () async {
      print("\n********** テスト実行：00976_element_check_00952 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item80.select_dsp;
      print(csvbkup.item80.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item80.select_dsp = testData1;
      print(csvbkup.item80.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item80.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item80.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item80.select_dsp = testData2;
      print(csvbkup.item80.select_dsp);
      expect(csvbkup.item80.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item80.select_dsp = defalut;
      print(csvbkup.item80.select_dsp);
      expect(csvbkup.item80.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item80.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00976_element_check_00952 **********\n\n");
    });

    test('00977_element_check_00953', () async {
      print("\n********** テスト実行：00977_element_check_00953 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.onoff;
      print(csvbkup.item81.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.onoff = testData1;
      print(csvbkup.item81.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.onoff = testData2;
      print(csvbkup.item81.onoff);
      expect(csvbkup.item81.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.onoff = defalut;
      print(csvbkup.item81.onoff);
      expect(csvbkup.item81.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00977_element_check_00953 **********\n\n");
    });

    test('00978_element_check_00954', () async {
      print("\n********** テスト実行：00978_element_check_00954 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.page;
      print(csvbkup.item81.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.page = testData1;
      print(csvbkup.item81.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.page = testData2;
      print(csvbkup.item81.page);
      expect(csvbkup.item81.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.page = defalut;
      print(csvbkup.item81.page);
      expect(csvbkup.item81.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00978_element_check_00954 **********\n\n");
    });

    test('00979_element_check_00955', () async {
      print("\n********** テスト実行：00979_element_check_00955 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.position;
      print(csvbkup.item81.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.position = testData1;
      print(csvbkup.item81.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.position = testData2;
      print(csvbkup.item81.position);
      expect(csvbkup.item81.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.position = defalut;
      print(csvbkup.item81.position);
      expect(csvbkup.item81.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00979_element_check_00955 **********\n\n");
    });

    test('00980_element_check_00956', () async {
      print("\n********** テスト実行：00980_element_check_00956 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.table1;
      print(csvbkup.item81.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.table1 = testData1s;
      print(csvbkup.item81.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.table1 = testData2s;
      print(csvbkup.item81.table1);
      expect(csvbkup.item81.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.table1 = defalut;
      print(csvbkup.item81.table1);
      expect(csvbkup.item81.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00980_element_check_00956 **********\n\n");
    });

    test('00981_element_check_00957', () async {
      print("\n********** テスト実行：00981_element_check_00957 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.total;
      print(csvbkup.item81.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.total = testData1;
      print(csvbkup.item81.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.total = testData2;
      print(csvbkup.item81.total);
      expect(csvbkup.item81.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.total = defalut;
      print(csvbkup.item81.total);
      expect(csvbkup.item81.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00981_element_check_00957 **********\n\n");
    });

    test('00982_element_check_00958', () async {
      print("\n********** テスト実行：00982_element_check_00958 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.t_exe1;
      print(csvbkup.item81.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.t_exe1 = testData1s;
      print(csvbkup.item81.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.t_exe1 = testData2s;
      print(csvbkup.item81.t_exe1);
      expect(csvbkup.item81.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.t_exe1 = defalut;
      print(csvbkup.item81.t_exe1);
      expect(csvbkup.item81.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00982_element_check_00958 **********\n\n");
    });

    test('00983_element_check_00959', () async {
      print("\n********** テスト実行：00983_element_check_00959 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.section;
      print(csvbkup.item81.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.section = testData1s;
      print(csvbkup.item81.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.section = testData2s;
      print(csvbkup.item81.section);
      expect(csvbkup.item81.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.section = defalut;
      print(csvbkup.item81.section);
      expect(csvbkup.item81.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00983_element_check_00959 **********\n\n");
    });

    test('00984_element_check_00960', () async {
      print("\n********** テスト実行：00984_element_check_00960 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.keyword;
      print(csvbkup.item81.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.keyword = testData1s;
      print(csvbkup.item81.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.keyword = testData2s;
      print(csvbkup.item81.keyword);
      expect(csvbkup.item81.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.keyword = defalut;
      print(csvbkup.item81.keyword);
      expect(csvbkup.item81.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00984_element_check_00960 **********\n\n");
    });

    test('00985_element_check_00961', () async {
      print("\n********** テスト実行：00985_element_check_00961 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.backup_day;
      print(csvbkup.item81.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.backup_day = testData1s;
      print(csvbkup.item81.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.backup_day = testData2s;
      print(csvbkup.item81.backup_day);
      expect(csvbkup.item81.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.backup_day = defalut;
      print(csvbkup.item81.backup_day);
      expect(csvbkup.item81.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00985_element_check_00961 **********\n\n");
    });

    test('00986_element_check_00962', () async {
      print("\n********** テスト実行：00986_element_check_00962 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item81.select_dsp;
      print(csvbkup.item81.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item81.select_dsp = testData1;
      print(csvbkup.item81.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item81.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item81.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item81.select_dsp = testData2;
      print(csvbkup.item81.select_dsp);
      expect(csvbkup.item81.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item81.select_dsp = defalut;
      print(csvbkup.item81.select_dsp);
      expect(csvbkup.item81.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item81.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00986_element_check_00962 **********\n\n");
    });

    test('00987_element_check_00963', () async {
      print("\n********** テスト実行：00987_element_check_00963 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.onoff;
      print(csvbkup.item82.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.onoff = testData1;
      print(csvbkup.item82.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.onoff = testData2;
      print(csvbkup.item82.onoff);
      expect(csvbkup.item82.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.onoff = defalut;
      print(csvbkup.item82.onoff);
      expect(csvbkup.item82.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00987_element_check_00963 **********\n\n");
    });

    test('00988_element_check_00964', () async {
      print("\n********** テスト実行：00988_element_check_00964 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.page;
      print(csvbkup.item82.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.page = testData1;
      print(csvbkup.item82.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.page = testData2;
      print(csvbkup.item82.page);
      expect(csvbkup.item82.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.page = defalut;
      print(csvbkup.item82.page);
      expect(csvbkup.item82.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00988_element_check_00964 **********\n\n");
    });

    test('00989_element_check_00965', () async {
      print("\n********** テスト実行：00989_element_check_00965 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.position;
      print(csvbkup.item82.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.position = testData1;
      print(csvbkup.item82.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.position = testData2;
      print(csvbkup.item82.position);
      expect(csvbkup.item82.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.position = defalut;
      print(csvbkup.item82.position);
      expect(csvbkup.item82.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00989_element_check_00965 **********\n\n");
    });

    test('00990_element_check_00966', () async {
      print("\n********** テスト実行：00990_element_check_00966 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.table1;
      print(csvbkup.item82.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.table1 = testData1s;
      print(csvbkup.item82.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.table1 = testData2s;
      print(csvbkup.item82.table1);
      expect(csvbkup.item82.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.table1 = defalut;
      print(csvbkup.item82.table1);
      expect(csvbkup.item82.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00990_element_check_00966 **********\n\n");
    });

    test('00991_element_check_00967', () async {
      print("\n********** テスト実行：00991_element_check_00967 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.total;
      print(csvbkup.item82.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.total = testData1;
      print(csvbkup.item82.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.total = testData2;
      print(csvbkup.item82.total);
      expect(csvbkup.item82.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.total = defalut;
      print(csvbkup.item82.total);
      expect(csvbkup.item82.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00991_element_check_00967 **********\n\n");
    });

    test('00992_element_check_00968', () async {
      print("\n********** テスト実行：00992_element_check_00968 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.t_exe1;
      print(csvbkup.item82.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.t_exe1 = testData1s;
      print(csvbkup.item82.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.t_exe1 = testData2s;
      print(csvbkup.item82.t_exe1);
      expect(csvbkup.item82.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.t_exe1 = defalut;
      print(csvbkup.item82.t_exe1);
      expect(csvbkup.item82.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00992_element_check_00968 **********\n\n");
    });

    test('00993_element_check_00969', () async {
      print("\n********** テスト実行：00993_element_check_00969 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.section;
      print(csvbkup.item82.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.section = testData1s;
      print(csvbkup.item82.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.section = testData2s;
      print(csvbkup.item82.section);
      expect(csvbkup.item82.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.section = defalut;
      print(csvbkup.item82.section);
      expect(csvbkup.item82.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00993_element_check_00969 **********\n\n");
    });

    test('00994_element_check_00970', () async {
      print("\n********** テスト実行：00994_element_check_00970 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.keyword;
      print(csvbkup.item82.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.keyword = testData1s;
      print(csvbkup.item82.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.keyword = testData2s;
      print(csvbkup.item82.keyword);
      expect(csvbkup.item82.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.keyword = defalut;
      print(csvbkup.item82.keyword);
      expect(csvbkup.item82.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00994_element_check_00970 **********\n\n");
    });

    test('00995_element_check_00971', () async {
      print("\n********** テスト実行：00995_element_check_00971 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.keyword2;
      print(csvbkup.item82.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.keyword2 = testData1s;
      print(csvbkup.item82.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.keyword2 = testData2s;
      print(csvbkup.item82.keyword2);
      expect(csvbkup.item82.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.keyword2 = defalut;
      print(csvbkup.item82.keyword2);
      expect(csvbkup.item82.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00995_element_check_00971 **********\n\n");
    });

    test('00996_element_check_00972', () async {
      print("\n********** テスト実行：00996_element_check_00972 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.keyword3;
      print(csvbkup.item82.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.keyword3 = testData1s;
      print(csvbkup.item82.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.keyword3 = testData2s;
      print(csvbkup.item82.keyword3);
      expect(csvbkup.item82.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.keyword3 = defalut;
      print(csvbkup.item82.keyword3);
      expect(csvbkup.item82.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00996_element_check_00972 **********\n\n");
    });

    test('00997_element_check_00973', () async {
      print("\n********** テスト実行：00997_element_check_00973 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.backup_day;
      print(csvbkup.item82.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.backup_day = testData1s;
      print(csvbkup.item82.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.backup_day = testData2s;
      print(csvbkup.item82.backup_day);
      expect(csvbkup.item82.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.backup_day = defalut;
      print(csvbkup.item82.backup_day);
      expect(csvbkup.item82.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00997_element_check_00973 **********\n\n");
    });

    test('00998_element_check_00974', () async {
      print("\n********** テスト実行：00998_element_check_00974 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item82.select_dsp;
      print(csvbkup.item82.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item82.select_dsp = testData1;
      print(csvbkup.item82.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item82.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item82.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item82.select_dsp = testData2;
      print(csvbkup.item82.select_dsp);
      expect(csvbkup.item82.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item82.select_dsp = defalut;
      print(csvbkup.item82.select_dsp);
      expect(csvbkup.item82.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item82.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00998_element_check_00974 **********\n\n");
    });

    test('00999_element_check_00975', () async {
      print("\n********** テスト実行：00999_element_check_00975 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.onoff;
      print(csvbkup.item83.onoff);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.onoff = testData1;
      print(csvbkup.item83.onoff);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.onoff == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.onoff == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.onoff = testData2;
      print(csvbkup.item83.onoff);
      expect(csvbkup.item83.onoff == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.onoff == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.onoff = defalut;
      print(csvbkup.item83.onoff);
      expect(csvbkup.item83.onoff == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.onoff == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：00999_element_check_00975 **********\n\n");
    });

    test('01000_element_check_00976', () async {
      print("\n********** テスト実行：01000_element_check_00976 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.page;
      print(csvbkup.item83.page);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.page = testData1;
      print(csvbkup.item83.page);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.page == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.page == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.page = testData2;
      print(csvbkup.item83.page);
      expect(csvbkup.item83.page == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.page == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.page = defalut;
      print(csvbkup.item83.page);
      expect(csvbkup.item83.page == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.page == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01000_element_check_00976 **********\n\n");
    });

    test('01001_element_check_00977', () async {
      print("\n********** テスト実行：01001_element_check_00977 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.position;
      print(csvbkup.item83.position);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.position = testData1;
      print(csvbkup.item83.position);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.position == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.position == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.position = testData2;
      print(csvbkup.item83.position);
      expect(csvbkup.item83.position == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.position == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.position = defalut;
      print(csvbkup.item83.position);
      expect(csvbkup.item83.position == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.position == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01001_element_check_00977 **********\n\n");
    });

    test('01002_element_check_00978', () async {
      print("\n********** テスト実行：01002_element_check_00978 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.table1;
      print(csvbkup.item83.table1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.table1 = testData1s;
      print(csvbkup.item83.table1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.table1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.table1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.table1 = testData2s;
      print(csvbkup.item83.table1);
      expect(csvbkup.item83.table1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.table1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.table1 = defalut;
      print(csvbkup.item83.table1);
      expect(csvbkup.item83.table1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.table1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01002_element_check_00978 **********\n\n");
    });

    test('01003_element_check_00979', () async {
      print("\n********** テスト実行：01003_element_check_00979 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.total;
      print(csvbkup.item83.total);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.total = testData1;
      print(csvbkup.item83.total);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.total == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.total == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.total = testData2;
      print(csvbkup.item83.total);
      expect(csvbkup.item83.total == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.total == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.total = defalut;
      print(csvbkup.item83.total);
      expect(csvbkup.item83.total == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.total == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01003_element_check_00979 **********\n\n");
    });

    test('01004_element_check_00980', () async {
      print("\n********** テスト実行：01004_element_check_00980 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.t_exe1;
      print(csvbkup.item83.t_exe1);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.t_exe1 = testData1s;
      print(csvbkup.item83.t_exe1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.t_exe1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.t_exe1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.t_exe1 = testData2s;
      print(csvbkup.item83.t_exe1);
      expect(csvbkup.item83.t_exe1 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.t_exe1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.t_exe1 = defalut;
      print(csvbkup.item83.t_exe1);
      expect(csvbkup.item83.t_exe1 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.t_exe1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01004_element_check_00980 **********\n\n");
    });

    test('01005_element_check_00981', () async {
      print("\n********** テスト実行：01005_element_check_00981 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.section;
      print(csvbkup.item83.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.section = testData1s;
      print(csvbkup.item83.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.section = testData2s;
      print(csvbkup.item83.section);
      expect(csvbkup.item83.section == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.section = defalut;
      print(csvbkup.item83.section);
      expect(csvbkup.item83.section == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01005_element_check_00981 **********\n\n");
    });

    test('01006_element_check_00982', () async {
      print("\n********** テスト実行：01006_element_check_00982 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.keyword;
      print(csvbkup.item83.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.keyword = testData1s;
      print(csvbkup.item83.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.keyword = testData2s;
      print(csvbkup.item83.keyword);
      expect(csvbkup.item83.keyword == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.keyword = defalut;
      print(csvbkup.item83.keyword);
      expect(csvbkup.item83.keyword == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01006_element_check_00982 **********\n\n");
    });

    test('01007_element_check_00983', () async {
      print("\n********** テスト実行：01007_element_check_00983 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.keyword2;
      print(csvbkup.item83.keyword2);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.keyword2 = testData1s;
      print(csvbkup.item83.keyword2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.keyword2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.keyword2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.keyword2 = testData2s;
      print(csvbkup.item83.keyword2);
      expect(csvbkup.item83.keyword2 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.keyword2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.keyword2 = defalut;
      print(csvbkup.item83.keyword2);
      expect(csvbkup.item83.keyword2 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.keyword2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01007_element_check_00983 **********\n\n");
    });

    test('01008_element_check_00984', () async {
      print("\n********** テスト実行：01008_element_check_00984 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.keyword3;
      print(csvbkup.item83.keyword3);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.keyword3 = testData1s;
      print(csvbkup.item83.keyword3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.keyword3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.keyword3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.keyword3 = testData2s;
      print(csvbkup.item83.keyword3);
      expect(csvbkup.item83.keyword3 == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.keyword3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.keyword3 = defalut;
      print(csvbkup.item83.keyword3);
      expect(csvbkup.item83.keyword3 == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.keyword3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01008_element_check_00984 **********\n\n");
    });

    test('01009_element_check_00985', () async {
      print("\n********** テスト実行：01009_element_check_00985 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.backup_day;
      print(csvbkup.item83.backup_day);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.backup_day = testData1s;
      print(csvbkup.item83.backup_day);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.backup_day == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.backup_day == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.backup_day = testData2s;
      print(csvbkup.item83.backup_day);
      expect(csvbkup.item83.backup_day == testData2s, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.backup_day == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.backup_day = defalut;
      print(csvbkup.item83.backup_day);
      expect(csvbkup.item83.backup_day == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.backup_day == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01009_element_check_00985 **********\n\n");
    });

    test('01010_element_check_00986', () async {
      print("\n********** テスト実行：01010_element_check_00986 **********");

      csvbkup = CsvbkupJsonFile();
      allPropatyCheckInit(csvbkup);

      // ①loadを実行する。
      await csvbkup.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = csvbkup.item83.select_dsp;
      print(csvbkup.item83.select_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      csvbkup.item83.select_dsp = testData1;
      print(csvbkup.item83.select_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(csvbkup.item83.select_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await csvbkup.save();
      await csvbkup.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(csvbkup.item83.select_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      csvbkup.item83.select_dsp = testData2;
      print(csvbkup.item83.select_dsp);
      expect(csvbkup.item83.select_dsp == testData2, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.select_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      csvbkup.item83.select_dsp = defalut;
      print(csvbkup.item83.select_dsp);
      expect(csvbkup.item83.select_dsp == defalut, true);
      await csvbkup.save();
      await csvbkup.load();
      expect(csvbkup.item83.select_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(csvbkup, true);

      print("********** テスト終了：01010_element_check_00986 **********\n\n");
    });

  });
}

void allPropatyCheckInit(CsvbkupJsonFile test)
{
  expect(test.max_item.total_item, 0);
  expect(test.page.total_page, 0);
  expect(test.page.onoff0, 0);
  expect(test.page.onoff1, 0);
  expect(test.page.onoff2, 0);
  expect(test.page.onoff3, 0);
  expect(test.page.onoff4, 0);
  expect(test.page.onoff5, 0);
  expect(test.page.onoff6, 0);
  expect(test.item0.onoff, 0);
  expect(test.item0.page, 0);
  expect(test.item0.position, 0);
  expect(test.item0.table1, "");
  expect(test.item0.total, 0);
  expect(test.item0.t_exe1, "");
  expect(test.item0.t_exe2, "");
  expect(test.item0.t_exe3, "");
  expect(test.item0.t_exe4, "");
  expect(test.item0.section, "");
  expect(test.item0.keyword, "");
  expect(test.item0.keyword2, "");
  expect(test.item0.backup_day, "");
  expect(test.item0.select_dsp, 0);
  expect(test.item1.onoff, 0);
  expect(test.item1.page, 0);
  expect(test.item1.position, 0);
  expect(test.item1.table1, "");
  expect(test.item1.total, 0);
  expect(test.item1.t_exe1, "");
  expect(test.item1.section, "");
  expect(test.item1.keyword, "");
  expect(test.item1.keyword2, "");
  expect(test.item1.backup_day, "");
  expect(test.item1.select_dsp, 0);
  expect(test.item2.onoff, 0);
  expect(test.item2.page, 0);
  expect(test.item2.position, 0);
  expect(test.item2.table1, "");
  expect(test.item2.total, 0);
  expect(test.item2.t_exe1, "");
  expect(test.item2.section, "");
  expect(test.item2.keyword, "");
  expect(test.item2.keyword2, "");
  expect(test.item2.backup_day, "");
  expect(test.item2.select_dsp, 0);
  expect(test.item3.onoff, 0);
  expect(test.item3.page, 0);
  expect(test.item3.position, 0);
  expect(test.item3.table1, "");
  expect(test.item3.total, 0);
  expect(test.item3.t_exe1, "");
  expect(test.item3.section, "");
  expect(test.item3.keyword, "");
  expect(test.item3.keyword2, "");
  expect(test.item3.backup_day, "");
  expect(test.item3.select_dsp, 0);
  expect(test.item4.onoff, 0);
  expect(test.item4.page, 0);
  expect(test.item4.position, 0);
  expect(test.item4.table1, "");
  expect(test.item4.total, 0);
  expect(test.item4.t_exe1, "");
  expect(test.item4.section, "");
  expect(test.item4.keyword, "");
  expect(test.item4.keyword2, "");
  expect(test.item4.backup_day, "");
  expect(test.item4.select_dsp, 0);
  expect(test.item5.onoff, 0);
  expect(test.item5.page, 0);
  expect(test.item5.position, 0);
  expect(test.item5.table1, "");
  expect(test.item5.total, 0);
  expect(test.item5.t_exe1, "");
  expect(test.item5.section, "");
  expect(test.item5.keyword, "");
  expect(test.item5.keyword2, "");
  expect(test.item5.backup_day, "");
  expect(test.item5.select_dsp, 0);
  expect(test.item6.onoff, 0);
  expect(test.item6.page, 0);
  expect(test.item6.position, 0);
  expect(test.item6.table1, "");
  expect(test.item6.total, 0);
  expect(test.item6.t_exe1, "");
  expect(test.item6.section, "");
  expect(test.item6.keyword, "");
  expect(test.item6.keyword2, "");
  expect(test.item6.backup_day, "");
  expect(test.item6.select_dsp, 0);
  expect(test.item7.onoff, 0);
  expect(test.item7.page, 0);
  expect(test.item7.position, 0);
  expect(test.item7.table1, "");
  expect(test.item7.total, 0);
  expect(test.item7.t_exe1, "");
  expect(test.item7.section, "");
  expect(test.item7.keyword, "");
  expect(test.item7.keyword2, "");
  expect(test.item7.backup_day, "");
  expect(test.item7.select_dsp, 0);
  expect(test.item8.onoff, 0);
  expect(test.item8.page, 0);
  expect(test.item8.position, 0);
  expect(test.item8.table1, "");
  expect(test.item8.total, 0);
  expect(test.item8.t_exe1, "");
  expect(test.item8.section, "");
  expect(test.item8.keyword, "");
  expect(test.item8.keyword2, "");
  expect(test.item8.backup_day, "");
  expect(test.item8.select_dsp, 0);
  expect(test.item9.onoff, 0);
  expect(test.item9.page, 0);
  expect(test.item9.position, 0);
  expect(test.item9.table1, "");
  expect(test.item9.total, 0);
  expect(test.item9.t_exe1, "");
  expect(test.item9.t_exe2, "");
  expect(test.item9.section, "");
  expect(test.item9.keyword, "");
  expect(test.item9.keyword2, "");
  expect(test.item9.backup_day, "");
  expect(test.item9.select_dsp, 0);
  expect(test.item10.onoff, 0);
  expect(test.item10.page, 0);
  expect(test.item10.position, 0);
  expect(test.item10.table1, "");
  expect(test.item10.total, 0);
  expect(test.item10.t_exe1, "");
  expect(test.item10.section, "");
  expect(test.item10.keyword, "");
  expect(test.item10.keyword2, "");
  expect(test.item10.backup_day, "");
  expect(test.item10.select_dsp, 0);
  expect(test.item11.onoff, 0);
  expect(test.item11.page, 0);
  expect(test.item11.position, 0);
  expect(test.item11.table1, "");
  expect(test.item11.total, 0);
  expect(test.item11.t_exe1, "");
  expect(test.item11.section, "");
  expect(test.item11.keyword, "");
  expect(test.item11.keyword2, "");
  expect(test.item11.backup_day, "");
  expect(test.item11.select_dsp, 0);
  expect(test.item12.onoff, 0);
  expect(test.item12.page, 0);
  expect(test.item12.position, 0);
  expect(test.item12.table1, "");
  expect(test.item12.total, 0);
  expect(test.item12.t_exe1, "");
  expect(test.item12.section, "");
  expect(test.item12.keyword, "");
  expect(test.item12.keyword2, "");
  expect(test.item12.backup_day, "");
  expect(test.item12.select_dsp, 0);
  expect(test.item13.onoff, 0);
  expect(test.item13.page, 0);
  expect(test.item13.position, 0);
  expect(test.item13.table1, "");
  expect(test.item13.total, 0);
  expect(test.item13.t_exe1, "");
  expect(test.item13.section, "");
  expect(test.item13.keyword, "");
  expect(test.item13.keyword2, "");
  expect(test.item13.backup_day, "");
  expect(test.item13.select_dsp, 0);
  expect(test.item14.onoff, 0);
  expect(test.item14.page, 0);
  expect(test.item14.position, 0);
  expect(test.item14.table1, "");
  expect(test.item14.total, 0);
  expect(test.item14.t_exe1, "");
  expect(test.item14.section, "");
  expect(test.item14.keyword, "");
  expect(test.item14.keyword2, "");
  expect(test.item14.backup_day, "");
  expect(test.item14.select_dsp, 0);
  expect(test.item15.onoff, 0);
  expect(test.item15.page, 0);
  expect(test.item15.position, 0);
  expect(test.item15.table1, "");
  expect(test.item15.total, 0);
  expect(test.item15.t_exe1, "");
  expect(test.item15.t_exe2, "");
  expect(test.item15.t_exe3, "");
  expect(test.item15.section, "");
  expect(test.item15.keyword, "");
  expect(test.item15.backup_day, "");
  expect(test.item15.select_dsp, 0);
  expect(test.item16.onoff, 0);
  expect(test.item16.page, 0);
  expect(test.item16.position, 0);
  expect(test.item16.table1, "");
  expect(test.item16.total, 0);
  expect(test.item16.t_exe1, "");
  expect(test.item16.section, "");
  expect(test.item16.keyword, "");
  expect(test.item16.backup_day, "");
  expect(test.item16.select_dsp, 0);
  expect(test.item17.onoff, 0);
  expect(test.item17.page, 0);
  expect(test.item17.position, 0);
  expect(test.item17.table1, "");
  expect(test.item17.total, 0);
  expect(test.item17.t_exe1, "");
  expect(test.item17.section, "");
  expect(test.item17.keyword, "");
  expect(test.item17.backup_day, "");
  expect(test.item17.select_dsp, 0);
  expect(test.item18.onoff, 0);
  expect(test.item18.page, 0);
  expect(test.item18.position, 0);
  expect(test.item18.table1, "");
  expect(test.item18.total, 0);
  expect(test.item18.t_exe1, "");
  expect(test.item18.section, "");
  expect(test.item18.keyword, "");
  expect(test.item18.backup_day, "");
  expect(test.item18.select_dsp, 0);
  expect(test.item19.onoff, 0);
  expect(test.item19.page, 0);
  expect(test.item19.position, 0);
  expect(test.item19.table1, "");
  expect(test.item19.total, 0);
  expect(test.item19.t_exe1, "");
  expect(test.item19.section, "");
  expect(test.item19.keyword, "");
  expect(test.item19.backup_day, "");
  expect(test.item19.select_dsp, 0);
  expect(test.item20.onoff, 0);
  expect(test.item20.page, 0);
  expect(test.item20.position, 0);
  expect(test.item20.table1, "");
  expect(test.item20.total, 0);
  expect(test.item20.t_exe1, "");
  expect(test.item20.section, "");
  expect(test.item20.keyword, "");
  expect(test.item20.backup_day, "");
  expect(test.item20.select_dsp, 0);
  expect(test.item21.onoff, 0);
  expect(test.item21.page, 0);
  expect(test.item21.position, 0);
  expect(test.item21.table1, "");
  expect(test.item21.total, 0);
  expect(test.item21.t_exe1, "");
  expect(test.item21.section, "");
  expect(test.item21.keyword, "");
  expect(test.item21.backup_day, "");
  expect(test.item21.select_dsp, 0);
  expect(test.item22.onoff, 0);
  expect(test.item22.page, 0);
  expect(test.item22.position, 0);
  expect(test.item22.table1, "");
  expect(test.item22.total, 0);
  expect(test.item22.t_exe1, "");
  expect(test.item22.t_exe2, "");
  expect(test.item22.section, "");
  expect(test.item22.keyword, "");
  expect(test.item22.keyword2, "");
  expect(test.item22.keyword3, "");
  expect(test.item22.backup_day, "");
  expect(test.item22.select_dsp, 0);
  expect(test.item23.onoff, 0);
  expect(test.item23.page, 0);
  expect(test.item23.position, 0);
  expect(test.item23.table1, "");
  expect(test.item23.total, 0);
  expect(test.item23.t_exe1, "");
  expect(test.item23.t_exe2, "");
  expect(test.item23.section, "");
  expect(test.item23.keyword, "");
  expect(test.item23.keyword2, "");
  expect(test.item23.keyword3, "");
  expect(test.item23.backup_day, "");
  expect(test.item23.select_dsp, 0);
  expect(test.item24.onoff, 0);
  expect(test.item24.page, 0);
  expect(test.item24.position, 0);
  expect(test.item24.table1, "");
  expect(test.item24.total, 0);
  expect(test.item24.t_exe1, "");
  expect(test.item24.t_exe2, "");
  expect(test.item24.section, "");
  expect(test.item24.keyword, "");
  expect(test.item24.keyword2, "");
  expect(test.item24.keyword3, "");
  expect(test.item24.backup_day, "");
  expect(test.item24.select_dsp, 0);
  expect(test.item25.onoff, 0);
  expect(test.item25.page, 0);
  expect(test.item25.position, 0);
  expect(test.item25.table1, "");
  expect(test.item25.total, 0);
  expect(test.item25.t_exe1, "");
  expect(test.item25.section, "");
  expect(test.item25.keyword, "");
  expect(test.item25.keyword2, "");
  expect(test.item25.keyword3, "");
  expect(test.item25.backup_day, "");
  expect(test.item25.select_dsp, 0);
  expect(test.item26.onoff, 0);
  expect(test.item26.page, 0);
  expect(test.item26.position, 0);
  expect(test.item26.table1, "");
  expect(test.item26.total, 0);
  expect(test.item26.t_exe1, "");
  expect(test.item26.t_exe2, "");
  expect(test.item26.section, "");
  expect(test.item26.keyword, "");
  expect(test.item26.keyword2, "");
  expect(test.item26.keyword3, "");
  expect(test.item26.backup_day, "");
  expect(test.item26.select_dsp, 0);
  expect(test.item27.onoff, 0);
  expect(test.item27.page, 0);
  expect(test.item27.position, 0);
  expect(test.item27.table1, "");
  expect(test.item27.total, 0);
  expect(test.item27.t_exe1, "");
  expect(test.item27.t_exe2, "");
  expect(test.item27.section, "");
  expect(test.item27.keyword, "");
  expect(test.item27.keyword2, "");
  expect(test.item27.keyword3, "");
  expect(test.item27.backup_day, "");
  expect(test.item27.select_dsp, 0);
  expect(test.item28.onoff, 0);
  expect(test.item28.page, 0);
  expect(test.item28.position, 0);
  expect(test.item28.table1, "");
  expect(test.item28.total, 0);
  expect(test.item28.t_exe1, "");
  expect(test.item28.t_exe2, "");
  expect(test.item28.t_exe3, "");
  expect(test.item28.t_exe4, "");
  expect(test.item28.section, "");
  expect(test.item28.keyword, "");
  expect(test.item28.keyword2, "");
  expect(test.item28.keyword3, "");
  expect(test.item28.backup_day, "");
  expect(test.item28.select_dsp, 0);
  expect(test.item29.onoff, 0);
  expect(test.item29.page, 0);
  expect(test.item29.position, 0);
  expect(test.item29.table1, "");
  expect(test.item29.total, 0);
  expect(test.item29.t_exe1, "");
  expect(test.item29.section, "");
  expect(test.item29.keyword, "");
  expect(test.item29.keyword2, "");
  expect(test.item29.keyword3, "");
  expect(test.item29.backup_day, "");
  expect(test.item29.select_dsp, 0);
  expect(test.item30.onoff, 0);
  expect(test.item30.page, 0);
  expect(test.item30.position, 0);
  expect(test.item30.table1, "");
  expect(test.item30.total, 0);
  expect(test.item30.t_exe1, "");
  expect(test.item30.section, "");
  expect(test.item30.keyword, "");
  expect(test.item30.keyword2, "");
  expect(test.item30.backup_day, "");
  expect(test.item30.select_dsp, 0);
  expect(test.item31.onoff, 0);
  expect(test.item31.page, 0);
  expect(test.item31.position, 0);
  expect(test.item31.table1, "");
  expect(test.item31.total, 0);
  expect(test.item31.t_exe1, "");
  expect(test.item31.section, "");
  expect(test.item31.keyword, "");
  expect(test.item31.keyword2, "");
  expect(test.item31.backup_day, "");
  expect(test.item31.select_dsp, 0);
  expect(test.item32.onoff, 0);
  expect(test.item32.page, 0);
  expect(test.item32.position, 0);
  expect(test.item32.table1, "");
  expect(test.item32.total, 0);
  expect(test.item32.t_exe1, "");
  expect(test.item32.section, "");
  expect(test.item32.keyword, "");
  expect(test.item32.keyword2, "");
  expect(test.item32.backup_day, "");
  expect(test.item32.select_dsp, 0);
  expect(test.item33.onoff, 0);
  expect(test.item33.page, 0);
  expect(test.item33.position, 0);
  expect(test.item33.table1, "");
  expect(test.item33.total, 0);
  expect(test.item33.t_exe1, "");
  expect(test.item33.section, "");
  expect(test.item33.keyword, "");
  expect(test.item33.keyword2, "");
  expect(test.item33.backup_day, "");
  expect(test.item33.select_dsp, 0);
  expect(test.item34.onoff, 0);
  expect(test.item34.page, 0);
  expect(test.item34.position, 0);
  expect(test.item34.table1, "");
  expect(test.item34.total, 0);
  expect(test.item34.t_exe1, "");
  expect(test.item34.section, "");
  expect(test.item34.keyword, "");
  expect(test.item34.keyword2, "");
  expect(test.item34.backup_day, "");
  expect(test.item34.select_dsp, 0);
  expect(test.item35.onoff, 0);
  expect(test.item35.page, 0);
  expect(test.item35.position, 0);
  expect(test.item35.table1, "");
  expect(test.item35.total, 0);
  expect(test.item35.t_exe1, "");
  expect(test.item35.section, "");
  expect(test.item35.keyword, "");
  expect(test.item35.keyword2, "");
  expect(test.item35.backup_day, "");
  expect(test.item35.select_dsp, 0);
  expect(test.item36.onoff, 0);
  expect(test.item36.page, 0);
  expect(test.item36.position, 0);
  expect(test.item36.table1, "");
  expect(test.item36.total, 0);
  expect(test.item36.t_exe1, "");
  expect(test.item36.section, "");
  expect(test.item36.keyword, "");
  expect(test.item36.keyword2, "");
  expect(test.item36.backup_day, "");
  expect(test.item36.select_dsp, 0);
  expect(test.item37.onoff, 0);
  expect(test.item37.page, 0);
  expect(test.item37.position, 0);
  expect(test.item37.table1, "");
  expect(test.item37.total, 0);
  expect(test.item37.t_exe1, "");
  expect(test.item37.section, "");
  expect(test.item37.keyword, "");
  expect(test.item37.backup_day, "");
  expect(test.item37.select_dsp, 0);
  expect(test.item38.onoff, 0);
  expect(test.item38.page, 0);
  expect(test.item38.position, 0);
  expect(test.item38.table1, "");
  expect(test.item38.total, 0);
  expect(test.item38.t_exe1, "");
  expect(test.item38.section, "");
  expect(test.item38.keyword, "");
  expect(test.item38.backup_day, "");
  expect(test.item38.select_dsp, 0);
  expect(test.item39.onoff, 0);
  expect(test.item39.page, 0);
  expect(test.item39.position, 0);
  expect(test.item39.table1, "");
  expect(test.item39.total, 0);
  expect(test.item39.t_exe1, "");
  expect(test.item39.section, "");
  expect(test.item39.keyword, "");
  expect(test.item39.backup_day, "");
  expect(test.item39.select_dsp, 0);
  expect(test.item40.onoff, 0);
  expect(test.item40.page, 0);
  expect(test.item40.position, 0);
  expect(test.item40.table1, "");
  expect(test.item40.total, 0);
  expect(test.item40.t_exe1, "");
  expect(test.item40.section, "");
  expect(test.item40.keyword, "");
  expect(test.item40.backup_day, "");
  expect(test.item40.select_dsp, 0);
  expect(test.item41.onoff, 0);
  expect(test.item41.page, 0);
  expect(test.item41.position, 0);
  expect(test.item41.table1, "");
  expect(test.item41.total, 0);
  expect(test.item41.t_exe1, "");
  expect(test.item41.section, "");
  expect(test.item41.keyword, "");
  expect(test.item41.backup_day, "");
  expect(test.item41.select_dsp, 0);
  expect(test.item42.onoff, 0);
  expect(test.item42.page, 0);
  expect(test.item42.position, 0);
  expect(test.item42.table1, "");
  expect(test.item42.total, 0);
  expect(test.item42.t_exe1, "");
  expect(test.item42.section, "");
  expect(test.item42.keyword, "");
  expect(test.item42.backup_day, "");
  expect(test.item42.select_dsp, 0);
  expect(test.item43.onoff, 0);
  expect(test.item43.page, 0);
  expect(test.item43.position, 0);
  expect(test.item43.table1, "");
  expect(test.item43.total, 0);
  expect(test.item43.t_exe1, "");
  expect(test.item43.section, "");
  expect(test.item43.keyword, "");
  expect(test.item43.backup_day, "");
  expect(test.item43.select_dsp, 0);
  expect(test.item44.onoff, 0);
  expect(test.item44.page, 0);
  expect(test.item44.position, 0);
  expect(test.item44.table1, "");
  expect(test.item44.total, 0);
  expect(test.item44.t_exe1, "");
  expect(test.item44.t_exe2, "");
  expect(test.item44.section, "");
  expect(test.item44.keyword, "");
  expect(test.item44.keyword2, "");
  expect(test.item44.keyword3, "");
  expect(test.item44.backup_day, "");
  expect(test.item44.select_dsp, 0);
  expect(test.item45.onoff, 0);
  expect(test.item45.page, 0);
  expect(test.item45.position, 0);
  expect(test.item45.table1, "");
  expect(test.item45.total, 0);
  expect(test.item45.t_exe1, "");
  expect(test.item45.section, "");
  expect(test.item45.keyword, "");
  expect(test.item45.keyword2, "");
  expect(test.item45.keyword3, "");
  expect(test.item45.backup_day, "");
  expect(test.item45.select_dsp, 0);
  expect(test.item46.onoff, 0);
  expect(test.item46.page, 0);
  expect(test.item46.position, 0);
  expect(test.item46.table1, "");
  expect(test.item46.total, 0);
  expect(test.item46.t_exe1, "");
  expect(test.item46.section, "");
  expect(test.item46.keyword, "");
  expect(test.item46.keyword2, "");
  expect(test.item46.keyword3, "");
  expect(test.item46.backup_day, "");
  expect(test.item46.select_dsp, 0);
  expect(test.item47.onoff, 0);
  expect(test.item47.page, 0);
  expect(test.item47.position, 0);
  expect(test.item47.table1, "");
  expect(test.item47.total, 0);
  expect(test.item47.t_exe1, "");
  expect(test.item47.section, "");
  expect(test.item47.keyword, "");
  expect(test.item47.keyword2, "");
  expect(test.item47.keyword3, "");
  expect(test.item47.backup_day, "");
  expect(test.item47.select_dsp, 0);
  expect(test.item48.onoff, 0);
  expect(test.item48.page, 0);
  expect(test.item48.position, 0);
  expect(test.item48.table1, "");
  expect(test.item48.total, 0);
  expect(test.item48.t_exe1, "");
  expect(test.item48.section, "");
  expect(test.item48.keyword, "");
  expect(test.item48.keyword2, "");
  expect(test.item48.keyword3, "");
  expect(test.item48.backup_day, "");
  expect(test.item48.select_dsp, 0);
  expect(test.item49.onoff, 0);
  expect(test.item49.page, 0);
  expect(test.item49.position, 0);
  expect(test.item49.table1, "");
  expect(test.item49.total, 0);
  expect(test.item49.t_exe1, "");
  expect(test.item49.section, "");
  expect(test.item49.keyword, "");
  expect(test.item49.keyword2, "");
  expect(test.item49.keyword3, "");
  expect(test.item49.backup_day, "");
  expect(test.item49.select_dsp, 0);
  expect(test.item50.onoff, 0);
  expect(test.item50.page, 0);
  expect(test.item50.position, 0);
  expect(test.item50.table1, "");
  expect(test.item50.total, 0);
  expect(test.item50.t_exe1, "");
  expect(test.item50.section, "");
  expect(test.item50.keyword, "");
  expect(test.item50.keyword2, "");
  expect(test.item50.keyword3, "");
  expect(test.item50.backup_day, "");
  expect(test.item50.select_dsp, 0);
  expect(test.item51.onoff, 0);
  expect(test.item51.page, 0);
  expect(test.item51.position, 0);
  expect(test.item51.table1, "");
  expect(test.item51.total, 0);
  expect(test.item51.t_exe1, "");
  expect(test.item51.section, "");
  expect(test.item51.keyword, "");
  expect(test.item51.keyword2, "");
  expect(test.item51.backup_day, "");
  expect(test.item51.select_dsp, 0);
  expect(test.item52.onoff, 0);
  expect(test.item52.page, 0);
  expect(test.item52.position, 0);
  expect(test.item52.table1, "");
  expect(test.item52.total, 0);
  expect(test.item52.t_exe1, "");
  expect(test.item52.section, "");
  expect(test.item52.keyword, "");
  expect(test.item52.keyword2, "");
  expect(test.item52.backup_day, "");
  expect(test.item52.select_dsp, 0);
  expect(test.item53.onoff, 0);
  expect(test.item53.page, 0);
  expect(test.item53.position, 0);
  expect(test.item53.table1, "");
  expect(test.item53.total, 0);
  expect(test.item53.t_exe1, "");
  expect(test.item53.t_exe2, "");
  expect(test.item53.section, "");
  expect(test.item53.keyword, "");
  expect(test.item53.keyword2, "");
  expect(test.item53.keyword3, "");
  expect(test.item53.backup_day, "");
  expect(test.item53.select_dsp, 0);
  expect(test.item54.onoff, 0);
  expect(test.item54.page, 0);
  expect(test.item54.position, 0);
  expect(test.item54.table1, "");
  expect(test.item54.total, 0);
  expect(test.item54.t_exe1, "");
  expect(test.item54.t_exe2, "");
  expect(test.item54.t_exe3, "");
  expect(test.item54.t_exe4, "");
  expect(test.item54.t_exe5, "");
  expect(test.item54.t_exe6, "");
  expect(test.item54.section, "");
  expect(test.item54.keyword, "");
  expect(test.item54.keyword2, "");
  expect(test.item54.keyword3, "");
  expect(test.item54.backup_day, "");
  expect(test.item54.select_dsp, 0);
  expect(test.item55.onoff, 0);
  expect(test.item55.page, 0);
  expect(test.item55.position, 0);
  expect(test.item55.table1, "");
  expect(test.item55.total, 0);
  expect(test.item55.t_exe1, "");
  expect(test.item55.t_exe2, "");
  expect(test.item55.section, "");
  expect(test.item55.keyword, "");
  expect(test.item55.keyword2, "");
  expect(test.item55.keyword3, "");
  expect(test.item55.backup_day, "");
  expect(test.item55.select_dsp, 0);
  expect(test.item56.onoff, 0);
  expect(test.item56.page, 0);
  expect(test.item56.position, 0);
  expect(test.item56.table1, "");
  expect(test.item56.total, 0);
  expect(test.item56.t_exe1, "");
  expect(test.item56.section, "");
  expect(test.item56.keyword, "");
  expect(test.item56.keyword2, "");
  expect(test.item56.keyword3, "");
  expect(test.item56.backup_day, "");
  expect(test.item56.select_dsp, 0);
  expect(test.item57.onoff, 0);
  expect(test.item57.page, 0);
  expect(test.item57.position, 0);
  expect(test.item57.table1, "");
  expect(test.item57.total, 0);
  expect(test.item57.t_exe1, "");
  expect(test.item57.section, "");
  expect(test.item57.keyword, "");
  expect(test.item57.keyword2, "");
  expect(test.item57.keyword3, "");
  expect(test.item57.backup_day, "");
  expect(test.item57.select_dsp, 0);
  expect(test.item58.onoff, 0);
  expect(test.item58.page, 0);
  expect(test.item58.position, 0);
  expect(test.item58.table1, "");
  expect(test.item58.total, 0);
  expect(test.item58.t_exe1, "");
  expect(test.item58.section, "");
  expect(test.item58.keyword, "");
  expect(test.item58.keyword2, "");
  expect(test.item58.keyword3, "");
  expect(test.item58.backup_day, "");
  expect(test.item58.select_dsp, 0);
  expect(test.item59.onoff, 0);
  expect(test.item59.page, 0);
  expect(test.item59.position, 0);
  expect(test.item59.table1, "");
  expect(test.item59.total, 0);
  expect(test.item59.t_exe1, "");
  expect(test.item59.section, "");
  expect(test.item59.keyword, "");
  expect(test.item59.backup_day, "");
  expect(test.item59.select_dsp, 0);
  expect(test.item60.onoff, 0);
  expect(test.item60.page, 0);
  expect(test.item60.position, 0);
  expect(test.item60.table1, "");
  expect(test.item60.total, 0);
  expect(test.item60.t_exe1, "");
  expect(test.item60.t_exe2, "");
  expect(test.item60.section, "");
  expect(test.item60.keyword, "");
  expect(test.item60.backup_day, "");
  expect(test.item60.select_dsp, 0);
  expect(test.item61.onoff, 0);
  expect(test.item61.page, 0);
  expect(test.item61.position, 0);
  expect(test.item61.table1, "");
  expect(test.item61.total, 0);
  expect(test.item61.t_exe1, "");
  expect(test.item61.section, "");
  expect(test.item61.keyword, "");
  expect(test.item61.backup_day, "");
  expect(test.item61.select_dsp, 0);
  expect(test.item62.onoff, 0);
  expect(test.item62.page, 0);
  expect(test.item62.position, 0);
  expect(test.item62.table1, "");
  expect(test.item62.total, 0);
  expect(test.item62.t_exe1, "");
  expect(test.item62.section, "");
  expect(test.item62.keyword, "");
  expect(test.item62.backup_day, "");
  expect(test.item62.select_dsp, 0);
  expect(test.item63.onoff, 0);
  expect(test.item63.page, 0);
  expect(test.item63.position, 0);
  expect(test.item63.table1, "");
  expect(test.item63.total, 0);
  expect(test.item63.t_exe1, "");
  expect(test.item63.section, "");
  expect(test.item63.keyword, "");
  expect(test.item63.keyword2, "");
  expect(test.item63.keyword3, "");
  expect(test.item63.backup_day, "");
  expect(test.item63.select_dsp, 0);
  expect(test.item64.onoff, 0);
  expect(test.item64.page, 0);
  expect(test.item64.position, 0);
  expect(test.item64.table1, "");
  expect(test.item64.total, 0);
  expect(test.item64.t_exe1, "");
  expect(test.item64.section, "");
  expect(test.item64.keyword, "");
  expect(test.item64.keyword2, "");
  expect(test.item64.keyword3, "");
  expect(test.item64.backup_day, "");
  expect(test.item64.select_dsp, 0);
  expect(test.item65.onoff, 0);
  expect(test.item65.page, 0);
  expect(test.item65.position, 0);
  expect(test.item65.table1, "");
  expect(test.item65.total, 0);
  expect(test.item65.t_exe1, "");
  expect(test.item65.section, "");
  expect(test.item65.keyword, "");
  expect(test.item65.keyword2, "");
  expect(test.item65.keyword3, "");
  expect(test.item65.backup_day, "");
  expect(test.item65.select_dsp, 0);
  expect(test.item66.onoff, 0);
  expect(test.item66.page, 0);
  expect(test.item66.position, 0);
  expect(test.item66.table1, "");
  expect(test.item66.total, 0);
  expect(test.item66.t_exe1, "");
  expect(test.item66.t_exe2, "");
  expect(test.item66.section, "");
  expect(test.item66.keyword, "");
  expect(test.item66.keyword2, "");
  expect(test.item66.keyword3, "");
  expect(test.item66.backup_day, "");
  expect(test.item66.select_dsp, 0);
  expect(test.item67.onoff, 0);
  expect(test.item67.page, 0);
  expect(test.item67.position, 0);
  expect(test.item67.table1, "");
  expect(test.item67.total, 0);
  expect(test.item67.t_exe1, "");
  expect(test.item67.t_exe2, "");
  expect(test.item67.section, "");
  expect(test.item67.keyword, "");
  expect(test.item67.keyword2, "");
  expect(test.item67.keyword3, "");
  expect(test.item67.backup_day, "");
  expect(test.item67.select_dsp, 0);
  expect(test.item68.onoff, 0);
  expect(test.item68.page, 0);
  expect(test.item68.position, 0);
  expect(test.item68.table1, "");
  expect(test.item68.total, 0);
  expect(test.item68.t_exe1, "");
  expect(test.item68.t_exe2, "");
  expect(test.item68.section, "");
  expect(test.item68.keyword, "");
  expect(test.item68.keyword2, "");
  expect(test.item68.keyword3, "");
  expect(test.item68.backup_day, "");
  expect(test.item68.select_dsp, 0);
  expect(test.item69.onoff, 0);
  expect(test.item69.page, 0);
  expect(test.item69.position, 0);
  expect(test.item69.table1, "");
  expect(test.item69.total, 0);
  expect(test.item69.t_exe1, "");
  expect(test.item69.section, "");
  expect(test.item69.keyword, "");
  expect(test.item69.keyword2, "");
  expect(test.item69.keyword3, "");
  expect(test.item69.backup_day, "");
  expect(test.item69.select_dsp, 0);
  expect(test.item70.onoff, 0);
  expect(test.item70.page, 0);
  expect(test.item70.position, 0);
  expect(test.item70.table1, "");
  expect(test.item70.total, 0);
  expect(test.item70.t_exe1, "");
  expect(test.item70.t_exe2, "");
  expect(test.item70.section, "");
  expect(test.item70.keyword, "");
  expect(test.item70.keyword2, "");
  expect(test.item70.keyword3, "");
  expect(test.item70.backup_day, "");
  expect(test.item70.select_dsp, 0);
  expect(test.item71.onoff, 0);
  expect(test.item71.page, 0);
  expect(test.item71.position, 0);
  expect(test.item71.table1, "");
  expect(test.item71.total, 0);
  expect(test.item71.t_exe1, "");
  expect(test.item71.section, "");
  expect(test.item71.keyword, "");
  expect(test.item71.keyword2, "");
  expect(test.item71.keyword3, "");
  expect(test.item71.backup_day, "");
  expect(test.item71.select_dsp, 0);
  expect(test.item72.onoff, 0);
  expect(test.item72.page, 0);
  expect(test.item72.position, 0);
  expect(test.item72.table1, "");
  expect(test.item72.total, 0);
  expect(test.item72.t_exe1, "");
  expect(test.item72.section, "");
  expect(test.item72.keyword, "");
  expect(test.item72.keyword2, "");
  expect(test.item72.keyword3, "");
  expect(test.item72.backup_day, "");
  expect(test.item72.select_dsp, 0);
  expect(test.item73.onoff, 0);
  expect(test.item73.page, 0);
  expect(test.item73.position, 0);
  expect(test.item73.table1, "");
  expect(test.item73.total, 0);
  expect(test.item73.t_exe1, "");
  expect(test.item73.section, "");
  expect(test.item73.keyword, "");
  expect(test.item73.keyword2, "");
  expect(test.item73.keyword3, "");
  expect(test.item73.backup_day, "");
  expect(test.item73.select_dsp, 0);
  expect(test.item74.onoff, 0);
  expect(test.item74.page, 0);
  expect(test.item74.position, 0);
  expect(test.item74.table1, "");
  expect(test.item74.total, 0);
  expect(test.item74.t_exe1, "");
  expect(test.item74.section, "");
  expect(test.item74.keyword, "");
  expect(test.item74.keyword2, "");
  expect(test.item74.keyword3, "");
  expect(test.item74.backup_day, "");
  expect(test.item74.select_dsp, 0);
  expect(test.item75.onoff, 0);
  expect(test.item75.page, 0);
  expect(test.item75.position, 0);
  expect(test.item75.table1, "");
  expect(test.item75.total, 0);
  expect(test.item75.t_exe1, "");
  expect(test.item75.t_exe2, "");
  expect(test.item75.t_exe3, "");
  expect(test.item75.section, "");
  expect(test.item75.keyword, "");
  expect(test.item75.keyword2, "");
  expect(test.item75.keyword3, "");
  expect(test.item75.backup_day, "");
  expect(test.item75.select_dsp, 0);
  expect(test.item76.onoff, 0);
  expect(test.item76.page, 0);
  expect(test.item76.position, 0);
  expect(test.item76.table1, "");
  expect(test.item76.total, 0);
  expect(test.item76.t_exe1, "");
  expect(test.item76.section, "");
  expect(test.item76.keyword, "");
  expect(test.item76.backup_day, "");
  expect(test.item76.select_dsp, 0);
  expect(test.item77.onoff, 0);
  expect(test.item77.page, 0);
  expect(test.item77.position, 0);
  expect(test.item77.table1, "");
  expect(test.item77.total, 0);
  expect(test.item77.t_exe1, "");
  expect(test.item77.section, "");
  expect(test.item77.keyword, "");
  expect(test.item77.keyword2, "");
  expect(test.item77.keyword3, "");
  expect(test.item77.backup_day, "");
  expect(test.item77.select_dsp, 0);
  expect(test.item78.onoff, 0);
  expect(test.item78.page, 0);
  expect(test.item78.position, 0);
  expect(test.item78.table1, "");
  expect(test.item78.total, 0);
  expect(test.item78.t_exe1, "");
  expect(test.item78.t_exe2, "");
  expect(test.item78.t_exe3, "");
  expect(test.item78.t_exe4, "");
  expect(test.item78.t_exe5, "");
  expect(test.item78.t_exe6, "");
  expect(test.item78.t_exe7, "");
  expect(test.item78.section, "");
  expect(test.item78.keyword, "");
  expect(test.item78.keyword2, "");
  expect(test.item78.keyword3, "");
  expect(test.item78.backup_day, "");
  expect(test.item79.onoff, 0);
  expect(test.item79.page, 0);
  expect(test.item79.position, 0);
  expect(test.item79.table1, "");
  expect(test.item79.total, 0);
  expect(test.item79.t_exe1, "");
  expect(test.item79.section, "");
  expect(test.item79.keyword, "");
  expect(test.item79.keyword2, "");
  expect(test.item79.keyword3, "");
  expect(test.item79.backup_day, "");
  expect(test.item79.select_dsp, 0);
  expect(test.item80.onoff, 0);
  expect(test.item80.page, 0);
  expect(test.item80.position, 0);
  expect(test.item80.table1, "");
  expect(test.item80.total, 0);
  expect(test.item80.t_exe1, "");
  expect(test.item80.section, "");
  expect(test.item80.keyword, "");
  expect(test.item80.keyword2, "");
  expect(test.item80.backup_day, "");
  expect(test.item80.select_dsp, 0);
  expect(test.item81.onoff, 0);
  expect(test.item81.page, 0);
  expect(test.item81.position, 0);
  expect(test.item81.table1, "");
  expect(test.item81.total, 0);
  expect(test.item81.t_exe1, "");
  expect(test.item81.section, "");
  expect(test.item81.keyword, "");
  expect(test.item81.backup_day, "");
  expect(test.item81.select_dsp, 0);
  expect(test.item82.onoff, 0);
  expect(test.item82.page, 0);
  expect(test.item82.position, 0);
  expect(test.item82.table1, "");
  expect(test.item82.total, 0);
  expect(test.item82.t_exe1, "");
  expect(test.item82.section, "");
  expect(test.item82.keyword, "");
  expect(test.item82.keyword2, "");
  expect(test.item82.keyword3, "");
  expect(test.item82.backup_day, "");
  expect(test.item82.select_dsp, 0);
  expect(test.item83.onoff, 0);
  expect(test.item83.page, 0);
  expect(test.item83.position, 0);
  expect(test.item83.table1, "");
  expect(test.item83.total, 0);
  expect(test.item83.t_exe1, "");
  expect(test.item83.section, "");
  expect(test.item83.keyword, "");
  expect(test.item83.keyword2, "");
  expect(test.item83.keyword3, "");
  expect(test.item83.backup_day, "");
  expect(test.item83.select_dsp, 0);
}

void allPropatyCheck(CsvbkupJsonFile test, bool firstItemCheck)
{
  if(firstItemCheck == true) {
    expect(test.max_item.total_item, 84);
  }
  expect(test.page.total_page, 7);
  expect(test.page.onoff0, 0);
  expect(test.page.onoff1, 0);
  expect(test.page.onoff2, 0);
  expect(test.page.onoff3, 1);
  expect(test.page.onoff4, 1);
  expect(test.page.onoff5, 0);
  expect(test.page.onoff6, 0);
  expect(test.item0.onoff, 8);
  expect(test.item0.page, 1);
  expect(test.item0.position, 1);
  expect(test.item0.table1, "ﾚｼﾞ日別取引");
  expect(test.item0.total, 4);
  expect(test.item0.t_exe1, "reg_dly_deal");
  expect(test.item0.t_exe2, "reg_dly_flow");
  expect(test.item0.t_exe3, "reg_dly_inout");
  expect(test.item0.t_exe4, "reg_dly_acr");
  expect(test.item0.section, "csv_dly");
  expect(test.item0.keyword, "dly_deal");
  expect(test.item0.keyword2, "dlydeal_week");
  expect(test.item0.backup_day, "0000-00-00");
  expect(test.item0.select_dsp, 0);
  expect(test.item1.onoff, 16);
  expect(test.item1.page, 1);
  expect(test.item1.position, 2);
  expect(test.item1.table1, "中分類日計");
  expect(test.item1.total, 1);
  expect(test.item1.t_exe1, "reg_dly_mdl");
  expect(test.item1.section, "csv_dly");
  expect(test.item1.keyword, "dly_mdl");
  expect(test.item1.keyword2, "dlymdl_week");
  expect(test.item1.backup_day, "0000-00-00");
  expect(test.item1.select_dsp, 0);
  expect(test.item2.onoff, 32);
  expect(test.item2.page, 1);
  expect(test.item2.position, 3);
  expect(test.item2.table1, "小分類日計");
  expect(test.item2.total, 1);
  expect(test.item2.t_exe1, "reg_dly_sml");
  expect(test.item2.section, "csv_dly");
  expect(test.item2.keyword, "dly_sml");
  expect(test.item2.keyword2, "dlysml_week");
  expect(test.item2.backup_day, "0000-00-00");
  expect(test.item2.select_dsp, 0);
  expect(test.item3.onoff, 64);
  expect(test.item3.page, 1);
  expect(test.item3.position, 4);
  expect(test.item3.table1, "単品日計");
  expect(test.item3.total, 1);
  expect(test.item3.t_exe1, "reg_dly_plu");
  expect(test.item3.section, "csv_dly");
  expect(test.item3.keyword, "dly_plu");
  expect(test.item3.keyword2, "dlyplu_week");
  expect(test.item3.backup_day, "0000-00-00");
  expect(test.item3.select_dsp, 0);
  expect(test.item4.onoff, 1024);
  expect(test.item4.page, 1);
  expect(test.item4.position, 5);
  expect(test.item4.table1, "ｶﾃｺﾞﾘ値引日計");
  expect(test.item4.total, 1);
  expect(test.item4.t_exe1, "reg_dly_cat");
  expect(test.item4.section, "csv_dly");
  expect(test.item4.keyword, "dly_cat");
  expect(test.item4.keyword2, "dlycat_week");
  expect(test.item4.backup_day, "0000-00-00");
  expect(test.item4.select_dsp, 0);
  expect(test.item5.onoff, 128);
  expect(test.item5.page, 1);
  expect(test.item5.position, 7);
  expect(test.item5.table1, "特売日計");
  expect(test.item5.total, 1);
  expect(test.item5.t_exe1, "reg_dly_brgn");
  expect(test.item5.section, "csv_dly");
  expect(test.item5.keyword, "dly_brgn");
  expect(test.item5.keyword2, "dlybrgn_week");
  expect(test.item5.backup_day, "0000-00-00");
  expect(test.item5.select_dsp, 0);
  expect(test.item6.onoff, 768);
  expect(test.item6.page, 1);
  expect(test.item6.position, 8);
  expect(test.item6.table1, "企画日計");
  expect(test.item6.total, 1);
  expect(test.item6.t_exe1, "reg_dly_mach");
  expect(test.item6.section, "csv_dly");
  expect(test.item6.keyword, "dly_mach");
  expect(test.item6.keyword2, "dlymach_week");
  expect(test.item6.backup_day, "0000-00-00");
  expect(test.item6.select_dsp, 0);
  expect(test.item7.onoff, 0);
  expect(test.item7.page, 1);
  expect(test.item7.position, 9);
  expect(test.item7.table1, "仮登録ﾏｽﾀ");
  expect(test.item7.total, 1);
  expect(test.item7.t_exe1, "c_tmp_mst");
  expect(test.item7.section, "csv_dly");
  expect(test.item7.keyword, "dly_tmp");
  expect(test.item7.keyword2, "dlytmp_week");
  expect(test.item7.backup_day, "0000-00-00");
  expect(test.item7.select_dsp, 0);
  expect(test.item8.onoff, 0);
  expect(test.item8.page, 1);
  expect(test.item8.position, 10);
  expect(test.item8.table1, "売価変更ﾏｽﾀ");
  expect(test.item8.total, 1);
  expect(test.item8.t_exe1, "c_prcchg_mst");
  expect(test.item8.section, "csv_dly");
  expect(test.item8.keyword, "dly_prcchg");
  expect(test.item8.keyword2, "dlyprcchgl_week");
  expect(test.item8.backup_day, "0000-00-00");
  expect(test.item8.select_dsp, 0);
  expect(test.item9.onoff, 0);
  expect(test.item9.page, 1);
  expect(test.item9.position, 11);
  expect(test.item9.table1, "ｸﾚｼﾞｯﾄ");
  expect(test.item9.total, 2);
  expect(test.item9.t_exe1, "c_crdt_demand_tbl");
  expect(test.item9.t_exe2, "c_crdt_actual_log");
  expect(test.item9.section, "csv_dly");
  expect(test.item9.keyword, "dly_crdt");
  expect(test.item9.keyword2, "dlycrdt_week");
  expect(test.item9.backup_day, "0000-00-00");
  expect(test.item9.select_dsp, 0);
  expect(test.item10.onoff, 0);
  expect(test.item10.page, 1);
  expect(test.item10.position, 13);
  expect(test.item10.table1, "ｱｲﾃﾑﾛｸﾞ");
  expect(test.item10.total, 1);
  expect(test.item10.t_exe1, "c_itemlog");
  expect(test.item10.section, "csv_dly");
  expect(test.item10.keyword, "dly_itemlog");
  expect(test.item10.keyword2, "dlyitemlog_week");
  expect(test.item10.backup_day, "0000-00-00");
  expect(test.item10.select_dsp, 0);
  expect(test.item11.onoff, 256);
  expect(test.item11.page, 1);
  expect(test.item11.position, 14);
  expect(test.item11.table1, "ﾐｯｸｽﾏｯﾁﾛｸﾞ");
  expect(test.item11.total, 1);
  expect(test.item11.t_exe1, "c_bdllog");
  expect(test.item11.section, "csv_dly");
  expect(test.item11.keyword, "dly_bdllog");
  expect(test.item11.keyword2, "dlybdllog_week");
  expect(test.item11.backup_day, "0000-00-00");
  expect(test.item11.select_dsp, 0);
  expect(test.item12.onoff, 512);
  expect(test.item12.page, 1);
  expect(test.item12.position, 15);
  expect(test.item12.table1, "ｾｯﾄﾏｯﾁﾛｸﾞ");
  expect(test.item12.total, 1);
  expect(test.item12.t_exe1, "c_stmlog");
  expect(test.item12.section, "csv_dly");
  expect(test.item12.keyword, "dly_stmlog");
  expect(test.item12.keyword2, "dlystmlog_week");
  expect(test.item12.backup_day, "0000-00-00");
  expect(test.item12.select_dsp, 0);
  expect(test.item13.onoff, 0);
  expect(test.item13.page, 1);
  expect(test.item13.position, 16);
  expect(test.item13.table1, "ﾄｰﾀﾙﾛｸﾞ");
  expect(test.item13.total, 1);
  expect(test.item13.t_exe1, "c_ttllog");
  expect(test.item13.section, "csv_dly");
  expect(test.item13.keyword, "dly_ttllog");
  expect(test.item13.keyword2, "dlyttllog_week");
  expect(test.item13.backup_day, "0000-00-00");
  expect(test.item13.select_dsp, 0);
  expect(test.item14.onoff, 0);
  expect(test.item14.page, 2);
  expect(test.item14.position, 13);
  expect(test.item14.table1, "電子ｼﾞｬｰﾅﾙ累計");
  expect(test.item14.total, 1);
  expect(test.item14.t_exe1, "c_ejlog");
  expect(test.item14.section, "csv_dly");
  expect(test.item14.keyword, "dly_ejlog_manual");
  expect(test.item14.keyword2, "dlyejlog_week");
  expect(test.item14.backup_day, "0000-00-00");
  expect(test.item14.select_dsp, 0);
  expect(test.item15.onoff, 8);
  expect(test.item15.page, 2);
  expect(test.item15.position, 1);
  expect(test.item15.table1, "ﾚｼﾞ累計取引実績");
  expect(test.item15.total, 3);
  expect(test.item15.t_exe1, "reg_mly_deal");
  expect(test.item15.t_exe2, "reg_mly_flow");
  expect(test.item15.t_exe3, "reg_mly_inout");
  expect(test.item15.section, "csv_term");
  expect(test.item15.keyword, "reg_mly_deal");
  expect(test.item15.backup_day, "0000-00-00");
  expect(test.item15.select_dsp, 0);
  expect(test.item16.onoff, 16);
  expect(test.item16.page, 2);
  expect(test.item16.position, 2);
  expect(test.item16.table1, "中分類累計実績");
  expect(test.item16.total, 1);
  expect(test.item16.t_exe1, "reg_mly_mdl");
  expect(test.item16.section, "csv_term");
  expect(test.item16.keyword, "reg_mly_mdl");
  expect(test.item16.backup_day, "0000-00-00");
  expect(test.item16.select_dsp, 0);
  expect(test.item17.onoff, 32);
  expect(test.item17.page, 2);
  expect(test.item17.position, 3);
  expect(test.item17.table1, "小分類累計実績");
  expect(test.item17.total, 1);
  expect(test.item17.t_exe1, "reg_mly_sml");
  expect(test.item17.section, "csv_term");
  expect(test.item17.keyword, "reg_mly_sml");
  expect(test.item17.backup_day, "0000-00-00");
  expect(test.item17.select_dsp, 0);
  expect(test.item18.onoff, 64);
  expect(test.item18.page, 2);
  expect(test.item18.position, 4);
  expect(test.item18.table1, "単品累計実績");
  expect(test.item18.total, 1);
  expect(test.item18.t_exe1, "reg_mly_plu");
  expect(test.item18.section, "csv_term");
  expect(test.item18.keyword, "reg_mly_plu");
  expect(test.item18.backup_day, "0000-00-00");
  expect(test.item18.select_dsp, 0);
  expect(test.item19.onoff, 1024);
  expect(test.item19.page, 2);
  expect(test.item19.position, 5);
  expect(test.item19.table1, "ｶﾃｺﾞﾘ値引累計実績");
  expect(test.item19.total, 1);
  expect(test.item19.t_exe1, "reg_mly_cat");
  expect(test.item19.section, "csv_term");
  expect(test.item19.keyword, "reg_mly_cat");
  expect(test.item19.backup_day, "0000-00-00");
  expect(test.item19.select_dsp, 0);
  expect(test.item20.onoff, 128);
  expect(test.item20.page, 2);
  expect(test.item20.position, 7);
  expect(test.item20.table1, "特売累計実績");
  expect(test.item20.total, 1);
  expect(test.item20.t_exe1, "reg_sch_brgn");
  expect(test.item20.section, "csv_term");
  expect(test.item20.keyword, "reg_sch_brgn");
  expect(test.item20.backup_day, "0000-00-00");
  expect(test.item20.select_dsp, 0);
  expect(test.item21.onoff, 768);
  expect(test.item21.page, 2);
  expect(test.item21.position, 8);
  expect(test.item21.table1, "企画累計実績");
  expect(test.item21.total, 1);
  expect(test.item21.t_exe1, "reg_sch_mach");
  expect(test.item21.section, "csv_term");
  expect(test.item21.keyword, "reg_sch_mach");
  expect(test.item21.backup_day, "0000-00-00");
  expect(test.item21.select_dsp, 0);
  expect(test.item22.onoff, 0);
  expect(test.item22.page, 3);
  expect(test.item22.position, 1);
  expect(test.item22.table1, "中分類ﾏｽﾀ");
  expect(test.item22.total, 2);
  expect(test.item22.t_exe1, "c_mdlcls_mst");
  expect(test.item22.t_exe2, "c_stremdl_mst");
  expect(test.item22.section, "csv_prg");
  expect(test.item22.keyword, "mdl_cls_mst");
  expect(test.item22.keyword2, "mdlcls_week");
  expect(test.item22.keyword3, "mdlcls_day");
  expect(test.item22.backup_day, "0000-00-00");
  expect(test.item22.select_dsp, 0);
  expect(test.item23.onoff, 0);
  expect(test.item23.page, 3);
  expect(test.item23.position, 2);
  expect(test.item23.table1, "小分類ﾏｽﾀ");
  expect(test.item23.total, 2);
  expect(test.item23.t_exe1, "c_smlcls_mst");
  expect(test.item23.t_exe2, "c_stresml_mst");
  expect(test.item23.section, "csv_prg");
  expect(test.item23.keyword, "sml_cls_mst");
  expect(test.item23.keyword2, "smlcls_week");
  expect(test.item23.keyword3, "smlcls_day");
  expect(test.item23.backup_day, "0000-00-00");
  expect(test.item23.select_dsp, 0);
  expect(test.item24.onoff, 0);
  expect(test.item24.page, 3);
  expect(test.item24.position, 3);
  expect(test.item24.table1, "商品ﾏｽﾀ");
  expect(test.item24.total, 2);
  expect(test.item24.t_exe1, "c_plu_mst");
  expect(test.item24.t_exe2, "c_scanplu_mst");
  expect(test.item24.section, "csv_prg");
  expect(test.item24.keyword, "plu_mst");
  expect(test.item24.keyword2, "plumst_week");
  expect(test.item24.keyword3, "plumst_day");
  expect(test.item24.backup_day, "0000-00-00");
  expect(test.item24.select_dsp, 0);
  expect(test.item25.onoff, 0);
  expect(test.item25.page, 3);
  expect(test.item25.position, 4);
  expect(test.item25.table1, "ｶﾃｺﾞﾘ値引ﾏｽﾀ");
  expect(test.item25.total, 1);
  expect(test.item25.t_exe1, "c_cat_dsc_mst");
  expect(test.item25.section, "csv_prg");
  expect(test.item25.keyword, "cat_dsc_mst");
  expect(test.item25.keyword2, "catdsc_week");
  expect(test.item25.keyword3, "catdsc_day");
  expect(test.item25.backup_day, "0000-00-00");
  expect(test.item25.select_dsp, 0);
  expect(test.item26.onoff, 0);
  expect(test.item26.page, 3);
  expect(test.item26.position, 7);
  expect(test.item26.table1, "特売ﾏｽﾀ");
  expect(test.item26.total, 2);
  expect(test.item26.t_exe1, "c_brgnsch_mst");
  expect(test.item26.t_exe2, "c_brgnitem_mst");
  expect(test.item26.section, "csv_prg");
  expect(test.item26.keyword, "brgn_mst");
  expect(test.item26.keyword2, "brgnmst_week");
  expect(test.item26.keyword3, "brgnmst_day");
  expect(test.item26.backup_day, "0000-00-00");
  expect(test.item26.select_dsp, 0);
  expect(test.item27.onoff, 0);
  expect(test.item27.page, 3);
  expect(test.item27.position, 8);
  expect(test.item27.table1, "ﾐｯｸｽﾏｯﾁﾏｽﾀ");
  expect(test.item27.total, 2);
  expect(test.item27.t_exe1, "c_bdlsch_mst");
  expect(test.item27.t_exe2, "c_bdlitem_mst");
  expect(test.item27.section, "csv_prg");
  expect(test.item27.keyword, "bdl_mst");
  expect(test.item27.keyword2, "bdlmst_week");
  expect(test.item27.keyword3, "bdlmst_day");
  expect(test.item27.backup_day, "0000-00-00");
  expect(test.item27.select_dsp, 0);
  expect(test.item28.onoff, 0);
  expect(test.item28.page, 3);
  expect(test.item28.position, 9);
  expect(test.item28.table1, "ｾｯﾄﾏｯﾁﾏｽﾀ");
  expect(test.item28.total, 4);
  expect(test.item28.t_exe1, "c_stmsch_mst");
  expect(test.item28.t_exe2, "c_stmitem_mst");
  expect(test.item28.t_exe3, "c_stmsch2_mst");
  expect(test.item28.t_exe4, "c_stmitem2_mst");
  expect(test.item28.section, "csv_prg");
  expect(test.item28.keyword, "stm_mst");
  expect(test.item28.keyword2, "stmmst_week");
  expect(test.item28.keyword3, "stmmst_day");
  expect(test.item28.backup_day, "0000-00-00");
  expect(test.item28.select_dsp, 0);
  expect(test.item29.onoff, 0);
  expect(test.item29.page, 3);
  expect(test.item29.position, 13);
  expect(test.item29.table1, "従業員ﾏｽﾀ");
  expect(test.item29.total, 1);
  expect(test.item29.t_exe1, "c_staff_mst");
  expect(test.item29.section, "csv_prg");
  expect(test.item29.keyword, "staff_mst");
  expect(test.item29.keyword2, "staffmst_week");
  expect(test.item29.keyword3, "staffmst_day");
  expect(test.item29.backup_day, "0000-00-00");
  expect(test.item29.select_dsp, 0);
  expect(test.item30.onoff, -1);
  expect(test.item30.page, 4);
  expect(test.item30.position, 1);
  expect(test.item30.table1, "会員日計");
  expect(test.item30.total, 1);
  expect(test.item30.t_exe1, "reg_dmly_cust");
  expect(test.item30.section, "csv_dly");
  expect(test.item30.keyword, "dly_cust");
  expect(test.item30.keyword2, "dlycust_week");
  expect(test.item30.backup_day, "0000-00-00");
  expect(test.item30.select_dsp, 0);
  expect(test.item31.onoff, 2049);
  expect(test.item31.page, 4);
  expect(test.item31.position, 2);
  expect(test.item31.table1, "地区日計");
  expect(test.item31.total, 1);
  expect(test.item31.t_exe1, "reg_dly_zone");
  expect(test.item31.section, "csv_dly");
  expect(test.item31.keyword, "dly_zone");
  expect(test.item31.keyword2, "dlyzone_week");
  expect(test.item31.backup_day, "0000-00-00");
  expect(test.item31.select_dsp, 0);
  expect(test.item32.onoff, 2049);
  expect(test.item32.page, 4);
  expect(test.item32.position, 3);
  expect(test.item32.table1, "ｻｰﾋﾞｽ分類日計");
  expect(test.item32.total, 1);
  expect(test.item32.t_exe1, "reg_dly_svs");
  expect(test.item32.section, "csv_dly");
  expect(test.item32.keyword, "dly_svs");
  expect(test.item32.keyword2, "dlysvs_week");
  expect(test.item32.backup_day, "0000-00-00");
  expect(test.item32.select_dsp, 0);
  expect(test.item33.onoff, 8194);
  expect(test.item33.page, 4);
  expect(test.item33.position, 6);
  expect(test.item33.table1, "FSP単品日計");
  expect(test.item33.total, 1);
  expect(test.item33.t_exe1, "reg_dly_fspplu");
  expect(test.item33.section, "csv_dly");
  expect(test.item33.keyword, "dly_fspplu");
  expect(test.item33.keyword2, "dlyfspplu_week");
  expect(test.item33.backup_day, "0000-00-00");
  expect(test.item33.select_dsp, 0);
  expect(test.item34.onoff, 8194);
  expect(test.item34.page, 4);
  expect(test.item34.position, 4);
  expect(test.item34.table1, "FSP中分類日計");
  expect(test.item34.total, 1);
  expect(test.item34.t_exe1, "reg_dly_fspmdl");
  expect(test.item34.section, "csv_dly");
  expect(test.item34.keyword, "dly_fspmdl");
  expect(test.item34.keyword2, "dlyfspmdl_week");
  expect(test.item34.backup_day, "0000-00-00");
  expect(test.item34.select_dsp, 0);
  expect(test.item35.onoff, 8194);
  expect(test.item35.page, 4);
  expect(test.item35.position, 5);
  expect(test.item35.table1, "FSP小分類日計");
  expect(test.item35.total, 1);
  expect(test.item35.t_exe1, "reg_dly_fspsml");
  expect(test.item35.section, "csv_dly");
  expect(test.item35.keyword, "dly_fspsml");
  expect(test.item35.keyword2, "dlyfspsml_week");
  expect(test.item35.backup_day, "0000-00-00");
  expect(test.item35.select_dsp, 0);
  expect(test.item36.onoff, 8194);
  expect(test.item36.page, 4);
  expect(test.item36.position, 13);
  expect(test.item36.table1, "FSP合計日計");
  expect(test.item36.total, 1);
  expect(test.item36.t_exe1, "reg_dly_fspttl");
  expect(test.item36.section, "csv_dly");
  expect(test.item36.keyword, "dly_fspttl");
  expect(test.item36.keyword2, "dlyfspttl_week");
  expect(test.item36.backup_day, "0000-00-00");
  expect(test.item36.select_dsp, 0);
  expect(test.item37.onoff, 4097);
  expect(test.item37.page, 4);
  expect(test.item37.position, 7);
  expect(test.item37.table1, "会員日計+累計実績");
  expect(test.item37.total, 1);
  expect(test.item37.t_exe1, "reg_dmly_cust");
  expect(test.item37.section, "csv_term");
  expect(test.item37.keyword, "reg_mly_cust");
  expect(test.item37.backup_day, "0000-00-00");
  expect(test.item37.select_dsp, 0);
  expect(test.item38.onoff, 2049);
  expect(test.item38.page, 4);
  expect(test.item38.position, 8);
  expect(test.item38.table1, "地区累計実績");
  expect(test.item38.total, 1);
  expect(test.item38.t_exe1, "reg_mly_zone");
  expect(test.item38.section, "csv_term");
  expect(test.item38.keyword, "reg_mly_zone");
  expect(test.item38.backup_day, "0000-00-00");
  expect(test.item38.select_dsp, 0);
  expect(test.item39.onoff, 2049);
  expect(test.item39.page, 4);
  expect(test.item39.position, 9);
  expect(test.item39.table1, "ｻｰﾋﾞｽ分類累計実績");
  expect(test.item39.total, 1);
  expect(test.item39.t_exe1, "reg_mly_svs");
  expect(test.item39.section, "csv_term");
  expect(test.item39.keyword, "reg_mly_svs");
  expect(test.item39.backup_day, "0000-00-00");
  expect(test.item39.select_dsp, 0);
  expect(test.item40.onoff, 8194);
  expect(test.item40.page, 4);
  expect(test.item40.position, 12);
  expect(test.item40.table1, "FSP単品累計実績");
  expect(test.item40.total, 1);
  expect(test.item40.t_exe1, "reg_mly_fspplu");
  expect(test.item40.section, "csv_term");
  expect(test.item40.keyword, "reg_mly_fspplu");
  expect(test.item40.backup_day, "0000-00-00");
  expect(test.item40.select_dsp, 0);
  expect(test.item41.onoff, 8194);
  expect(test.item41.page, 4);
  expect(test.item41.position, 10);
  expect(test.item41.table1, "FSP中分類累計実績");
  expect(test.item41.total, 1);
  expect(test.item41.t_exe1, "reg_mly_fspmdl");
  expect(test.item41.section, "csv_term");
  expect(test.item41.keyword, "reg_mly_fspmdl");
  expect(test.item41.backup_day, "0000-00-00");
  expect(test.item41.select_dsp, 0);
  expect(test.item42.onoff, 8194);
  expect(test.item42.page, 4);
  expect(test.item42.position, 11);
  expect(test.item42.table1, "FSP小分類累計実績");
  expect(test.item42.total, 1);
  expect(test.item42.t_exe1, "reg_mly_fspsml");
  expect(test.item42.section, "csv_term");
  expect(test.item42.keyword, "reg_mly_fspsml");
  expect(test.item42.backup_day, "0000-00-00");
  expect(test.item42.select_dsp, 0);
  expect(test.item43.onoff, 8194);
  expect(test.item43.page, 4);
  expect(test.item43.position, 14);
  expect(test.item43.table1, "FSP合計累計実績");
  expect(test.item43.total, 1);
  expect(test.item43.t_exe1, "reg_mly_fspttl");
  expect(test.item43.section, "csv_term");
  expect(test.item43.keyword, "reg_mly_fspttl");
  expect(test.item43.backup_day, "0000-00-00");
  expect(test.item43.select_dsp, 0);
  expect(test.item44.onoff, 0);
  expect(test.item44.page, 5);
  expect(test.item44.position, 1);
  expect(test.item44.table1, "会員ﾏｽﾀ");
  expect(test.item44.total, 2);
  expect(test.item44.t_exe1, "c_cust_mst");
  expect(test.item44.t_exe2, "c_cust_enq_tbl");
  expect(test.item44.section, "csv_prg");
  expect(test.item44.keyword, "cust_mst");
  expect(test.item44.keyword2, "custmst_week");
  expect(test.item44.keyword3, "custmst_day");
  expect(test.item44.backup_day, "0000-00-00");
  expect(test.item44.select_dsp, 0);
  expect(test.item45.onoff, 0);
  expect(test.item45.page, 5);
  expect(test.item45.position, 2);
  expect(test.item45.table1, "地区ﾏｽﾀ");
  expect(test.item45.total, 1);
  expect(test.item45.t_exe1, "zone_mst");
  expect(test.item45.section, "csv_prg");
  expect(test.item45.keyword, "zone_mst");
  expect(test.item45.keyword2, "zonemst_week");
  expect(test.item45.keyword3, "zonemst_day");
  expect(test.item45.backup_day, "0000-00-00");
  expect(test.item45.select_dsp, 0);
  expect(test.item46.onoff, 0);
  expect(test.item46.page, 5);
  expect(test.item46.position, 3);
  expect(test.item46.table1, "ｻｰﾋﾞｽ分類ﾏｽﾀ");
  expect(test.item46.total, 1);
  expect(test.item46.t_exe1, "c_svs_cls_mst");
  expect(test.item46.section, "csv_prg");
  expect(test.item46.keyword, "svs_mst");
  expect(test.item46.keyword2, "svsmst_week");
  expect(test.item46.keyword3, "svsmst_day");
  expect(test.item46.backup_day, "0000-00-00");
  expect(test.item46.select_dsp, 0);
  expect(test.item47.onoff, 0);
  expect(test.item47.page, 5);
  expect(test.item47.position, 13);
  expect(test.item47.table1, "FSPｽｹｼﾞｭｰﾙ");
  expect(test.item47.total, 1);
  expect(test.item47.t_exe1, "c_fspsch_mst");
  expect(test.item47.section, "csv_prg");
  expect(test.item47.keyword, "fspsch_mst");
  expect(test.item47.keyword2, "fspschmst_week");
  expect(test.item47.keyword3, "fspschmst_day");
  expect(test.item47.backup_day, "0000-00-00");
  expect(test.item47.select_dsp, 0);
  expect(test.item48.onoff, 0);
  expect(test.item48.page, 5);
  expect(test.item48.position, 8);
  expect(test.item48.table1, "FSP商品ﾃｰﾌﾞﾙ");
  expect(test.item48.total, 1);
  expect(test.item48.t_exe1, "c_fspplan_plu_tbl");
  expect(test.item48.section, "csv_prg");
  expect(test.item48.keyword, "fspplan_plu");
  expect(test.item48.keyword2, "fspplanplu_week");
  expect(test.item48.keyword3, "fspplanplu_day");
  expect(test.item48.backup_day, "0000-00-00");
  expect(test.item48.select_dsp, 0);
  expect(test.item49.onoff, 0);
  expect(test.item49.page, 5);
  expect(test.item49.position, 9);
  expect(test.item49.table1, "FSP中分類ﾃｰﾌﾞﾙ");
  expect(test.item49.total, 1);
  expect(test.item49.t_exe1, "c_fspplan_mdlcls_tbl");
  expect(test.item49.section, "csv_prg");
  expect(test.item49.keyword, "fspplan_mdl");
  expect(test.item49.keyword2, "fspplanmdl_week");
  expect(test.item49.keyword3, "fspplanmdl_day");
  expect(test.item49.backup_day, "0000-00-00");
  expect(test.item49.select_dsp, 0);
  expect(test.item50.onoff, 0);
  expect(test.item50.page, 5);
  expect(test.item50.position, 7);
  expect(test.item50.table1, "FSP小分類ﾃｰﾌﾞﾙ");
  expect(test.item50.total, 1);
  expect(test.item50.t_exe1, "c_fspplan_smlcls_tbl");
  expect(test.item50.section, "csv_prg");
  expect(test.item50.keyword, "fspplan_sml");
  expect(test.item50.keyword2, "fspplansml_week");
  expect(test.item50.keyword3, "fspplansml_day");
  expect(test.item50.backup_day, "0000-00-00");
  expect(test.item50.select_dsp, 0);
  expect(test.item51.onoff, 0);
  expect(test.item51.page, 1);
  expect(test.item51.position, 17);
  expect(test.item51.table1, "履歴ﾛｸﾞ");
  expect(test.item51.total, 1);
  expect(test.item51.t_exe1, "histlog_mst");
  expect(test.item51.section, "csv_dly");
  expect(test.item51.keyword, "histlog");
  expect(test.item51.keyword2, "histlog_week");
  expect(test.item51.backup_day, "0000-00-00");
  expect(test.item51.select_dsp, 0);
  expect(test.item52.onoff, 0);
  expect(test.item52.page, 1);
  expect(test.item52.position, 18);
  expect(test.item52.table1, "電子ｼﾞｬｰﾅﾙ日計");
  expect(test.item52.total, 1);
  expect(test.item52.t_exe1, "c_ejlog");
  expect(test.item52.section, "csv_dly");
  expect(test.item52.keyword, "dly_ejlog");
  expect(test.item52.keyword2, "dlyejlog_week");
  expect(test.item52.backup_day, "0000-00-00");
  expect(test.item52.select_dsp, 0);
  expect(test.item53.onoff, 0);
  expect(test.item53.page, 6);
  expect(test.item53.position, 1);
  expect(test.item53.table1, "ﾀｰﾐﾅﾙ");
  expect(test.item53.total, 2);
  expect(test.item53.t_exe1, "c_trm_mst");
  expect(test.item53.t_exe2, "c_cust_trm_mst");
  expect(test.item53.section, "csv_prg");
  expect(test.item53.keyword, "dly_trm");
  expect(test.item53.keyword2, "dlytrm_week");
  expect(test.item53.keyword3, "dlytrm_day");
  expect(test.item53.backup_day, "0000-00-00");
  expect(test.item53.select_dsp, 0);
  expect(test.item54.onoff, 0);
  expect(test.item54.page, 6);
  expect(test.item54.position, 7);
  expect(test.item54.table1, "ｷｰｵﾌﾟｼｮﾝ");
  expect(test.item54.total, 6);
  expect(test.item54.t_exe1, "c_kopttran_mst");
  expect(test.item54.t_exe2, "c_koptinout_mst");
  expect(test.item54.t_exe3, "c_koptdisc_mst");
  expect(test.item54.t_exe4, "c_koptref_mst");
  expect(test.item54.t_exe5, "c_koptoth_mst");
  expect(test.item54.t_exe6, "c_koptcmn_mst");
  expect(test.item54.section, "csv_prg");
  expect(test.item54.keyword, "dly_kopt");
  expect(test.item54.keyword2, "dlykopt_week");
  expect(test.item54.keyword3, "dlykopt_day");
  expect(test.item54.backup_day, "0000-00-00");
  expect(test.item54.select_dsp, 0);
  expect(test.item55.onoff, 0);
  expect(test.item55.page, 6);
  expect(test.item55.position, 2);
  expect(test.item55.table1, "ﾚｼｰﾄﾒｯｾｰｼﾞ");
  expect(test.item55.total, 2);
  expect(test.item55.t_exe1, "c_recmsg_mst");
  expect(test.item55.t_exe2, "c_schmsg_mst");
  expect(test.item55.section, "csv_prg");
  expect(test.item55.keyword, "dly_recmsg");
  expect(test.item55.keyword2, "dlyrecmsg_week");
  expect(test.item55.keyword3, "dlyrecmsg_day");
  expect(test.item55.backup_day, "0000-00-00");
  expect(test.item55.select_dsp, 0);
  expect(test.item56.onoff, 0);
  expect(test.item56.page, 6);
  expect(test.item56.position, 8);
  expect(test.item56.table1, "ﾌﾟﾘｾｯﾄ");
  expect(test.item56.total, 1);
  expect(test.item56.t_exe1, "c_preset_mst");
  expect(test.item56.section, "csv_prg");
  expect(test.item56.keyword, "dly_preset");
  expect(test.item56.keyword2, "dlypreset_week");
  expect(test.item56.keyword3, "dlypreset_day");
  expect(test.item56.backup_day, "0000-00-00");
  expect(test.item56.select_dsp, 0);
  expect(test.item57.onoff, 0);
  expect(test.item57.page, 6);
  expect(test.item57.position, 3);
  expect(test.item57.table1, "予約ﾚﾎﾟｰﾄ");
  expect(test.item57.total, 1);
  expect(test.item57.t_exe1, "c_batrepo_mst");
  expect(test.item57.section, "csv_prg");
  expect(test.item57.keyword, "dly_batrepo");
  expect(test.item57.keyword2, "dlybatrepo_week");
  expect(test.item57.keyword3, "dlybatrepo_day");
  expect(test.item57.backup_day, "0000-00-00");
  expect(test.item57.select_dsp, 0);
  expect(test.item58.onoff, 0);
  expect(test.item58.page, 6);
  expect(test.item58.position, 9);
  expect(test.item58.table1, "ｲﾒｰｼﾞ");
  expect(test.item58.total, 1);
  expect(test.item58.t_exe1, "c_img_mst");
  expect(test.item58.section, "csv_prg");
  expect(test.item58.keyword, "dly_img");
  expect(test.item58.keyword2, "dlyimg_week");
  expect(test.item58.keyword3, "dlyimg_day");
  expect(test.item58.backup_day, "0000-00-00");
  expect(test.item58.select_dsp, 0);
  expect(test.item59.onoff, 0);
  expect(test.item59.page, 6);
  expect(test.item59.position, 6);
  expect(test.item59.table1, "単品日計TPR8100");
  expect(test.item59.total, 1);
  expect(test.item59.t_exe1, "PLUD8");
  expect(test.item59.section, "csv_tpr8100");
  expect(test.item59.keyword, "dly_plu_tpr8100");
  expect(test.item59.backup_day, "0000-00-00");
  expect(test.item59.select_dsp, 0);
  expect(test.item60.onoff, 0);
  expect(test.item60.page, 6);
  expect(test.item60.position, 12);
  expect(test.item60.table1, "店舗実績TPR8100");
  expect(test.item60.total, 2);
  expect(test.item60.t_exe1, "STRF8");
  expect(test.item60.t_exe2, "STR28");
  expect(test.item60.section, "csv_tpr8100");
  expect(test.item60.keyword, "dly_deal_tpr8100");
  expect(test.item60.backup_day, "0000-00-00");
  expect(test.item60.select_dsp, 0);
  expect(test.item61.onoff, 0);
  expect(test.item61.page, 6);
  expect(test.item61.position, 18);
  expect(test.item61.table1, "部門時間帯TPR8100");
  expect(test.item61.total, 1);
  expect(test.item61.t_exe1, "TIMF8");
  expect(test.item61.section, "csv_tpr8100");
  expect(test.item61.keyword, "reg_dly_mly_mdl_tpr8100");
  expect(test.item61.backup_day, "0000-00-00");
  expect(test.item61.select_dsp, 0);
  expect(test.item62.onoff, 0);
  expect(test.item62.page, 6);
  expect(test.item62.position, 13);
  expect(test.item62.table1, "JA仕様日計ﾌｧｲﾙ");
  expect(test.item62.total, 1);
  expect(test.item62.t_exe1, "FTKBSNIK");
  expect(test.item62.section, "csv_tpr8100");
  expect(test.item62.keyword, "ibaraki_tpr8100");
  expect(test.item62.backup_day, "0000-00-00");
  expect(test.item62.select_dsp, 0);
  expect(test.item63.onoff, 0);
  expect(test.item63.page, 3);
  expect(test.item63.position, 14);
  expect(test.item63.table1, "税金");
  expect(test.item63.total, 1);
  expect(test.item63.t_exe1, "c_tax_mst");
  expect(test.item63.section, "csv_prg");
  expect(test.item63.keyword, "tax_mst");
  expect(test.item63.keyword2, "tax_week");
  expect(test.item63.keyword3, "tax_day");
  expect(test.item63.backup_day, "0000-00-00");
  expect(test.item63.select_dsp, 0);
  expect(test.item64.onoff, 0);
  expect(test.item64.page, 3);
  expect(test.item64.position, 15);
  expect(test.item64.table1, "共通ｺﾝﾄﾛｰﾙ");
  expect(test.item64.total, 1);
  expect(test.item64.t_exe1, "c_ctrl_mst");
  expect(test.item64.section, "csv_prg");
  expect(test.item64.keyword, "ctrl_mst");
  expect(test.item64.keyword2, "ctrl_week");
  expect(test.item64.keyword3, "ctrl_day");
  expect(test.item64.backup_day, "0000-00-00");
  expect(test.item64.select_dsp, 0);
  expect(test.item65.onoff, 0);
  expect(test.item65.page, 3);
  expect(test.item65.position, 16);
  expect(test.item65.table1, "ｲﾝｽﾄｱﾏｰｷﾝｸﾞ");
  expect(test.item65.total, 1);
  expect(test.item65.t_exe1, "c_instre_mst");
  expect(test.item65.section, "csv_prg");
  expect(test.item65.keyword, "instre_mst");
  expect(test.item65.keyword2, "instre_week");
  expect(test.item65.keyword3, "instre_day");
  expect(test.item65.backup_day, "0000-00-00");
  expect(test.item65.select_dsp, 0);
  expect(test.item66.onoff, 0);
  expect(test.item66.page, 3);
  expect(test.item66.position, 10);
  expect(test.item66.table1, "中分類値下");
  expect(test.item66.total, 2);
  expect(test.item66.t_exe1, "c_mdlsch_mst");
  expect(test.item66.t_exe2, "c_mdlitem_mst");
  expect(test.item66.section, "csv_prg");
  expect(test.item66.keyword, "mdlsch_mst");
  expect(test.item66.keyword2, "mdlsch_week");
  expect(test.item66.keyword3, "mdlsch_day");
  expect(test.item66.backup_day, "0000-00-00");
  expect(test.item66.select_dsp, 0);
  expect(test.item67.onoff, 0);
  expect(test.item67.page, 3);
  expect(test.item67.position, 11);
  expect(test.item67.table1, "小分類値下");
  expect(test.item67.total, 2);
  expect(test.item67.t_exe1, "c_smlsch_mst");
  expect(test.item67.t_exe2, "c_smlitem_mst");
  expect(test.item67.section, "csv_prg");
  expect(test.item67.keyword, "smlsch_mst");
  expect(test.item67.keyword2, "smlsch_week");
  expect(test.item67.keyword3, "smlsch_day");
  expect(test.item67.backup_day, "0000-00-00");
  expect(test.item67.select_dsp, 0);
  expect(test.item68.onoff, 0);
  expect(test.item68.page, 5);
  expect(test.item68.position, 10);
  expect(test.item68.table1, "商品ﾎﾟｲﾝﾄ加算");
  expect(test.item68.total, 2);
  expect(test.item68.t_exe1, "c_plusch_mst");
  expect(test.item68.t_exe2, "c_pluitem_mst");
  expect(test.item68.section, "csv_prg");
  expect(test.item68.keyword, "plusch_mst");
  expect(test.item68.keyword2, "plusch_week");
  expect(test.item68.keyword3, "plusch_day");
  expect(test.item68.backup_day, "0000-00-00");
  expect(test.item68.select_dsp, 0);
  expect(test.item69.onoff, 0);
  expect(test.item69.page, 3);
  expect(test.item69.position, 5);
  expect(test.item69.table1, "予約売価変更");
  expect(test.item69.total, 1);
  expect(test.item69.t_exe1, "c_batprcchg_mst");
  expect(test.item69.section, "csv_prg");
  expect(test.item69.keyword, "batprcchg_mst");
  expect(test.item69.keyword2, "batprcchg_week");
  expect(test.item69.keyword3, "batprcchg_day");
  expect(test.item69.backup_day, "0000-00-00");
  expect(test.item69.select_dsp, 0);
  expect(test.item70.onoff, 0);
  expect(test.item70.page, 3);
  expect(test.item70.position, 6);
  expect(test.item70.table1, "FIPｽｸﾛｰﾙﾒｯｾｰｼﾞ");
  expect(test.item70.total, 2);
  expect(test.item70.t_exe1, "c_fipsch_mst");
  expect(test.item70.t_exe2, "c_fipmsg_mst");
  expect(test.item70.section, "csv_prg");
  expect(test.item70.keyword, "fipsch_mst");
  expect(test.item70.keyword2, "fipsch_week");
  expect(test.item70.keyword3, "fipsch_day");
  expect(test.item70.backup_day, "0000-00-00");
  expect(test.item70.select_dsp, 0);
  expect(test.item71.onoff, 0);
  expect(test.item71.page, 5);
  expect(test.item71.position, 4);
  expect(test.item71.table1, "記念日種別ﾏｽﾀ");
  expect(test.item71.total, 1);
  expect(test.item71.t_exe1, "c_anvkind_mst");
  expect(test.item71.section, "csv_prg");
  expect(test.item71.keyword, "anvkind_mst");
  expect(test.item71.keyword2, "anvkind_week");
  expect(test.item71.keyword3, "anvkind_day");
  expect(test.item71.backup_day, "0000-00-00");
  expect(test.item71.select_dsp, 0);
  expect(test.item72.onoff, 0);
  expect(test.item72.page, 5);
  expect(test.item72.position, 5);
  expect(test.item72.table1, "確定割戻率ﾃｰﾌﾞﾙ");
  expect(test.item72.total, 1);
  expect(test.item72.t_exe1, "dec_rbt_tbl");
  expect(test.item72.section, "csv_prg");
  expect(test.item72.keyword, "decrbt_mst");
  expect(test.item72.keyword2, "decrbt_week");
  expect(test.item72.keyword3, "decrbt_day");
  expect(test.item72.backup_day, "0000-00-00");
  expect(test.item72.select_dsp, 0);
  expect(test.item73.onoff, 0);
  expect(test.item73.page, 5);
  expect(test.item73.position, 6);
  expect(test.item73.table1, "郵便番号ﾏｽﾀ");
  expect(test.item73.total, 1);
  expect(test.item73.t_exe1, "zipcode_mst");
  expect(test.item73.section, "csv_prg");
  expect(test.item73.keyword, "zipcode_mst");
  expect(test.item73.keyword2, "zipcode_week");
  expect(test.item73.keyword3, "zipcode_day");
  expect(test.item73.backup_day, "0000-00-00");
  expect(test.item73.select_dsp, 0);
  expect(test.item74.onoff, 0);
  expect(test.item74.page, 3);
  expect(test.item74.position, 17);
  expect(test.item74.table1, "産地･ﾒｰｶｰ");
  expect(test.item74.total, 1);
  expect(test.item74.t_exe1, "maker_mst");
  expect(test.item74.section, "csv_prg");
  expect(test.item74.keyword, "maker_mst");
  expect(test.item74.keyword2, "maker_week");
  expect(test.item74.keyword3, "maker_day");
  expect(test.item74.backup_day, "0000-00-00");
  expect(test.item74.select_dsp, 0);
  expect(test.item75.onoff, 0);
  expect(test.item75.page, 5);
  expect(test.item75.position, 11);
  expect(test.item75.table1, "Mｶｰﾄﾞ");
  expect(test.item75.total, 3);
  expect(test.item75.t_exe1, "c_mcspec_mst");
  expect(test.item75.t_exe2, "c_mckind_tbl");
  expect(test.item75.t_exe3, "c_mcnega_tbl");
  expect(test.item75.section, "csv_prg");
  expect(test.item75.keyword, "mcard_mst");
  expect(test.item75.keyword2, "mcard_week");
  expect(test.item75.keyword3, "mcard_day");
  expect(test.item75.backup_day, "0000-00-00");
  expect(test.item75.select_dsp, 0);
  expect(test.item76.onoff, 0);
  expect(test.item76.page, 1);
  expect(test.item76.position, 6);
  expect(test.item76.table1, "出退勤ログ");
  expect(test.item76.total, 1);
  expect(test.item76.t_exe1, "c_duty_log");
  expect(test.item76.section, "csv_dly");
  expect(test.item76.keyword, "duty_log");
  expect(test.item76.backup_day, "0000-00-00");
  expect(test.item76.select_dsp, 0);
  expect(test.item77.onoff, 0);
  expect(test.item77.page, 1);
  expect(test.item77.position, 12);
  expect(test.item77.table1, "SIMS用CSVﾛｸﾞ");
  expect(test.item77.total, 1);
  expect(test.item77.t_exe1, "sims_log");
  expect(test.item77.section, "csv_dly");
  expect(test.item77.keyword, "sims_log");
  expect(test.item77.keyword2, "simslog_week");
  expect(test.item77.keyword3, "simslog_day");
  expect(test.item77.backup_day, "0000-00-00");
  expect(test.item77.select_dsp, 0);
  expect(test.item78.onoff, 0);
  expect(test.item78.page, 7);
  expect(test.item78.position, 1);
  expect(test.item78.table1, "予約ログ");
  expect(test.item78.total, 7);
  expect(test.item78.t_exe1, "m_reserv_log");
  expect(test.item78.t_exe2, "reserv_tbl");
  expect(test.item78.t_exe3, "c_itemlog_reserv");
  expect(test.item78.t_exe4, "c_ttllog_reserv");
  expect(test.item78.t_exe5, "c_bdllog_reserv");
  expect(test.item78.t_exe6, "c_stmlog_reserv");
  expect(test.item78.t_exe7, "c_crdt_actual_log_reserv");
  expect(test.item78.section, "csv_dly");
  expect(test.item78.keyword, "reserv_log");
  expect(test.item78.keyword2, "reservlog_week");
  expect(test.item78.keyword3, "reservlog_day");
  expect(test.item78.backup_day, "0000-00-00");
  expect(test.item79.onoff, 0);
  expect(test.item79.page, 6);
  expect(test.item79.position, 16);
  expect(test.item79.table1, "Zレシート");
  expect(test.item79.total, 1);
  expect(test.item79.t_exe1, "z_receipt");
  expect(test.item79.section, "csv_dly");
  expect(test.item79.keyword, "z_receipt");
  expect(test.item79.keyword2, "zreceipt_week");
  expect(test.item79.keyword3, "zreceipt_day");
  expect(test.item79.backup_day, "0000-00-00");
  expect(test.item79.select_dsp, 0);
  expect(test.item80.onoff, 0);
  expect(test.item80.page, 1);
  expect(test.item80.position, 6);
  expect(test.item80.table1, "大分類日計");
  expect(test.item80.total, 1);
  expect(test.item80.t_exe1, "reg_dly_lrg");
  expect(test.item80.section, "csv_dly");
  expect(test.item80.keyword, "dly_lrg");
  expect(test.item80.keyword2, "dlylrg_week");
  expect(test.item80.backup_day, "0000-00-00");
  expect(test.item80.select_dsp, 0);
  expect(test.item81.onoff, 0);
  expect(test.item81.page, 2);
  expect(test.item81.position, 9);
  expect(test.item81.table1, "大分類累計実績");
  expect(test.item81.total, 1);
  expect(test.item81.t_exe1, "reg_mly_lrg");
  expect(test.item81.section, "csv_term");
  expect(test.item81.keyword, "reg_mly_lrg");
  expect(test.item81.backup_day, "0000-00-00");
  expect(test.item81.select_dsp, 0);
  expect(test.item82.onoff, 0);
  expect(test.item82.page, 6);
  expect(test.item82.position, 10);
  expect(test.item82.table1, "理由区分");
  expect(test.item82.total, 1);
  expect(test.item82.t_exe1, "c_reason_mst");
  expect(test.item82.section, "csv_prg");
  expect(test.item82.keyword, "reason_mst");
  expect(test.item82.keyword2, "reason_week");
  expect(test.item82.keyword3, "reason_day");
  expect(test.item82.backup_day, "0000-00-00");
  expect(test.item82.select_dsp, 0);
  expect(test.item83.onoff, 0);
  expect(test.item83.page, 6);
  expect(test.item83.position, 11);
  expect(test.item83.table1, "現金過不足");
  expect(test.item83.total, 1);
  expect(test.item83.t_exe1, "drawchk_cash_log");
  expect(test.item83.section, "csv_dly");
  expect(test.item83.keyword, "drawchk_cash_log");
  expect(test.item83.keyword2, "drawchk_cash_log_week");
  expect(test.item83.keyword3, "drawchk_cash_log_day");
  expect(test.item83.backup_day, "0000-00-00");
  expect(test.item83.select_dsp, 0);
}

