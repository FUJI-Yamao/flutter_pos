/*
 * (C)2023 TERAOKA SEIKO Co., Ltd./株式会社寺岡精工
 * CONFIDENTIAL/社外秘
 * 無断開示・無断複製禁止
 */
 
import 'package:flutter_pos/app/common/environment.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:flutter/services.dart' show rootBundle;
import 'package:flutter/cupertino.dart';
import 'package:path_provider/path_provider.dart';
import 'package:path_provider_platform_interface/path_provider_platform_interface.dart';
import 'package:path/path.dart';
import 'dart:io';
import 'unitTestParts.dart';

import '../../../../lib/app/common/cls_conf/configJsonFile.dart';
import '../../../../lib/app/common/cls_conf/searchlogJsonFile.dart';

late SearchlogJsonFile searchlog;

void main(){
  searchlogJsonFile_test();
}

void searchlogJsonFile_test()
{
  TestWidgetsFlutterBinding.ensureInitialized();
  const String confPath = "conf/aa/";
  const String testDir = "test_assets";
  const String fileName = "searchlog.json";
  const String section = "display";
  const String key = "display";
  const defaultData = "yes";
  const testData1  =  987654321;    // テストデータ1
  const testData1s = "987654321";
  const testData2  =  192834675;    // テストデータ2
  const testData2s = "192834675";
  const testData3  =  129834765;    // テストデータ3
  const testData3s = "129834765";

  group('SearchlogJsonFile',()
  {
    setUp(() async{
      PathProviderPlatform.instance = MockPathProviderPlatform();
      // 当該JSONファイルをデフォルトに戻す。
      await SearchlogJsonFile().setDefault();
    });

    // 各テストの事後処理
    tearDown(() async{
      // 当該JSONファイルをデフォルトに戻す。
      await SearchlogJsonFile().setDefault();
    });

    // ********************************************************
    // テスト00001 : load
    // 前提：アプリ用フォルダに対象JSONファイルが存在しないこと。
    // 試験手順：loadを実行する。
    // 期待結果：①assets/confにある対象JSONファイルがアプリ用フォルダに作成されること。
    // 　　　　　②対象JSONファイルの各プロパティ値を読み込んでいること。
    // ********************************************************
    test('00001_load_01', () async {
      print("\n********** テスト実行：00001_load_01 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // 前提状態構築
      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == true) {
        fileBefore.deleteSync();
      }
      // ⓪：事前状態確認（対象JSONファイルが存在しないこと。）
      expect(fileBefore.exists() == false, false);

      await searchlog.load();

      final File fileAfter = File(jsonPath);
      // ①-1：load実行により対象JSONファイルが作成されていること。
      expect(fileAfter.existsSync(), true);

      // ②：対象JSONファイルの各プロパティ値を読み込んでいること。
      allPropatyCheck(searchlog,true);

      print("********** テスト終了：00001_load_01 **********\n\n");
    });

    // ********************************************************
    // テスト00002 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：loadを実行する。
    // 期待結果：アプリ用フォルダの対象JSONファイルの各プロパティ値を読み込んでいること。
    // ********************************************************
    test("00002_load_02", () async {
      print("\n********** テスト実行：00002_load_02 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == false) {
        searchlog.setDefault();
        debugPrint("setDefault実行");
      }
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      await searchlog.load();

      // 対象JSONファイルの各プロパティ値を読み込んでいること。
      // 00001実行後で、デフォルト値前提
      allPropatyCheck(searchlog,true);

      print("********** テスト終了：00002_load_02 **********\n\n");
    });

    // ********************************************************
    // テスト00003 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②任意のプロパティの値を変更する。
    // 　　　　　③loadを実行する。
    // 期待結果：当該プロパティ値の変更が取り消されること。
    // ********************************************************
    test('00003_load_03', () async {
      print("\n********** テスト実行：00003_load_03 **********");
      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①：loadを実行する。
      await searchlog.load();

      // ②任意のプロパティの値を変更する。
      final prefixData = searchlog.display.display;
      searchlog.display.display = testData1s;
      expect(searchlog.display.display == testData1s, true);

      // ③loadを実行する。
      //   当該プロパティ値の変更が取り消されること。
      await searchlog.load();
      expect(searchlog.display.display != testData1s, true);
      expect(searchlog.display.display == prefixData, true);

      print("********** テスト終了：00003_load_03 **********\n\n");
    });

    // ********************************************************
    // テスト00004 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②任意のプロパティの値を変更する。
    // 　　　　　③loadを実行する。
    // 期待結果：当該プロパティ値の変更が取り消されること。
    // ********************************************************
    test('00004_load_04', () async {
      print("\n********** テスト実行：00004_load_04 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②任意のプロパティの値を変更する。
      final prefixData = searchlog.display.display;
      searchlog.display.display = testData1s;
      expect(searchlog.display.display, testData1s);

      // ③saveを実行する。
      await searchlog.save();

      // ④loadを実行する。
      await searchlog.load();

      expect(searchlog.display.display != prefixData, true);
      expect(searchlog.display.display == testData1s, true);
      allPropatyCheck(searchlog,false);

      print("********** テスト終了：00004_load_04 **********\n\n");
    });

    // ********************************************************
    // テスト00005 : save
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②saveを実行する。
    // 期待結果：アプリ用フォルダにある対象JSONファイルの内容に変化がないこと。
    // ********************************************************
    test('00005_save_01', () async {
      print("\n********** テスト実行：00005_save_01 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      // ① loadを実行する。
      await searchlog.load();

      // save実行前のJSONファイルを保存する。
      final String jsonBefor = await fileBefore.readAsString();

      // ② saveを実行する。
      await searchlog.save();

      final File fileAfter = File(jsonPath);
      expect(fileAfter.existsSync(), true);

      // アプリ用フォルダにある対象JSONファイルの内容に変化がないこと。
      final String jsonAfter = await fileAfter.readAsString();
      expect(jsonBefor.replaceAll("\r\n", "\n") == jsonAfter.replaceAll("\r\n", "\n"), true);

      print("********** テスト終了：00201_save_01 **********\n\n");
    });

    // ********************************************************
    // テスト00006 : save
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    // 期待結果：アプリ用フォルダにある対象JSONファイルの当該プロパティの値が
    //         変更した値に変更されていること。
    // ********************************************************
    test('00006_save_02', () async {
      print("\n********** テスト実行：00006_save_02 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      // ① loadを実行する。
      await searchlog.load();

      // save実行前のJSONファイルを保存する。
      final String jsonBefor = await fileBefore.readAsString();
      expect(searchlog.display.display, defaultData);

      // ②任意のプロパティの値を変更する。
      final prefixData = searchlog.display.display;
      searchlog.display.display = testData1s;

      // ③ saveを実行する。
      await searchlog.save();

      final File fileAfter1 = File(jsonPath);
      expect(fileAfter1.existsSync(), true);

      // アプリ用フォルダにある対象JSONファイルの内容に変化ががあること。
      // 手順②で変更した内容になっていること。
      final String jsonAfter1 = await fileAfter1.readAsString();
      expect(jsonBefor.replaceAll("\r\n", "\n") != jsonAfter1.replaceAll("\r\n", "\n"), true);
      expect(testData1s != prefixData, true);
      expect(searchlog.display.display, testData1s);

      // ④ loadを実行する。
      await searchlog.load();

      // アプリ用フォルダにある対象JSONファイルの内容が同じであること。
      // 手順②で変更した内容であること。
      final String jsonAfter2 = await fileAfter1.readAsString();
      expect(jsonAfter1.replaceAll("\r\n", "\n") == jsonAfter2.replaceAll("\r\n", "\n"), true);

      expect(searchlog.display.display == testData1s, true);
      allPropatyCheck(searchlog,false);

      print("********** テスト終了：00006_save_02 **********\n\n");
    });

    // ********************************************************
    // テスト00007 : setDefault
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    //         アプリ用フォルダに対象JSONファイルが存在し、任意の編集を施すこと。
    // 試験手順：①アプリ用フォルダにある対象JSONファイルを削除する。
    //         ②setDefaultを実行する。
    // 期待結果：手順②実行後、assets/confにある対象JSONファイルが
    //         アプリ用フォルダに作成されること。
    // ********************************************************
    test('00007_setDefault_01', () async {
      print("\n********** テスト実行：00007_setDefault_01 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①アプリ用フォルダにある対象JSONファイルを削除する。
      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == true) {
        fileBefore.deleteSync();
      }
      expect(fileBefore.existsSync() , false);

      // ②setDefaultを実行する。
      await searchlog.setDefault();
      expect(fileBefore.existsSync() , true);
      allPropatyCheck(searchlog,true);

      print("********** テスト終了：00007_setDefault_01 **********\n\n");
    });

    // ********************************************************
    // テスト00008 : setDefault
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    //         アプリ用フォルダに対象JSONファイルが存在し、任意の編集を施すこと。
    // 試験手順：①任意のプロパティの値を変更し、saveを実行する。
    //         ②setDefaultを実行する。
    // 期待結果：手順②実行後、assets/confにある対象JSONファイルの内容で上書きされること。
    //         （変更が取り消されていること）
    // ********************************************************
    test('00008_setDefault_02', () async {
      print("\n********** テスト実行：00008_setDefault_02 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②任意のプロパティの値を変更する。
      searchlog.display.display = testData1s;
      expect(searchlog.display.display, testData1s);

      // ③saveを実行する。
      await searchlog.save();
      expect(searchlog.display.display, testData1s);

      // ④loadを実行する。
      await searchlog.setDefault();

      // （デフォルト値と同じであること。）
      allPropatyCheck(searchlog,true);

      print("********** テスト終了：00008_setDefault_02 **********\n\n");
    });

    // ********************************************************
    // テスト00009 : セクション/キー名称による設定（setValueWithName）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
    //         ②loadを実行する。
    // 期待結果：手順②実行後、手順①で設定したプロパティ変更後の内容で
    //         プロパティ値が設定されていること。
    // ********************************************************
    test('00009_setValueWithName_01', () async {
      print("\n********** テスト実行：00009_setValueWithName_01 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      await searchlog.setValueWithName(section, key, testData1s);

      // ②loadを実行する。
      await searchlog.load();

      // 手順②実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(searchlog.display.display == testData1s, true);

      print("********** テスト終了：00009_setValueWithName_01 **********\n\n");
    });

    test('00010_setValueWithName_02', () async {
      print("\n********** テスト実行：00010_setValueWithName_02 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      final value = await searchlog.setValueWithName("test_section", key, testData1s);


      // 手順実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(value.result, false);
      expect(value.cause == json_result.element_not_found, true);

      print("********** テスト終了：00010_setValueWithName_02 **********\n\n");
    });

    test('00011_setValueWithName_03', () async {
      print("\n********** テスト実行：00011_setValueWithName_03 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      final value = await searchlog.setValueWithName(section, "test_key", testData1s);

      // 手順①実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(value.result, false);
      expect(value.cause == json_result.element_not_found, true);

      print("********** テスト終了：00011_setValueWithName_03 **********\n\n");
    });

    // ********************************************************
    // テスト00010 : セクション/キー名称による取得（getValueWithName）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティを変更する。
    //         ③saveを実行する。
    //         ④①で指定したプロパティに相当するセクション名、キー名にて
    //           getValueWithNameを実行する。
    // 期待結果：手順④で設定した値が手順②で設定した値と一致すること。
    // ********************************************************
    test('00012_getValueWithName_01', () async {
      print("\n********** テスト実行：00012_getValueWithName_01********** ");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②任意のプロパティを変更する。
      searchlog.display.display = testData1s;

      // ③saveを実行する。
      await searchlog.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await searchlog.getValueWithName(section, key);
      //print(testData.toString() + " == " + verify.value.toString());
      expect(testData1s == verify.value, true);

      print("********** テスト終了：00012_getValueWithName_01**********\n\n");
    });

    test('00013_getValueWithName_02', () async {
      print("\n********** テスト実行：00013_getValueWithName_02********** ");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②任意のプロパティを変更する。
      searchlog.display.display = testData1s;

      // ③saveを実行する。
      await searchlog.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await searchlog.getValueWithName("test_section", key);
      //print(testData.toString() + " == " + verify.value.toString());

      expect(verify.result, false);
      expect(verify.cause == json_result.element_not_found, true);

      print("********** テスト終了：00013_getValueWithName_02**********\n\n");
    });

    test('00014_getValueWithName_03', () async {
      print("\n********** テスト実行：00014_getValueWithName_03********** ");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②任意のプロパティを変更する。
      searchlog.display.display = testData1s;

      // ③saveを実行する。
      await searchlog.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await searchlog.getValueWithName(section, "test_key");
      //print(testData.toString() + " == " + verify.value.toString());

      expect(verify.result, false);
      expect(verify.cause == json_result.element_not_found, true);

      print("********** テスト終了：00014_getValueWithName_03**********\n\n");
    });

    // ********************************************************
    // テスト00015 : 任意フォルダ設定（_setAbsolutePath）
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティ値を変更し、テスト用フォルダにJSONのコピーを作成する。
    //         ②setDefaultを実行する。
    //         ③テスト用フォルダのパスを引数としてsetAbsolutePathを実行する。
    //         ④loadを実行する。
    // 期待結果：手順④実行後、プロパティ変更後の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00015:_setAbsolutePath_01', () async {
      print("\n********** テスト実行：00015_setAbsolutePath_01 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①任意のフォルダのパスを引数としてsetAbsolutePathを実行する。
      final appDir = Directory(EnvironmentData.TPRX_HOME);
      JsonPath().absolutePath = join(appDir.path, testDir);

      // ②loadを実行する。
      await searchlog.load();

      // 手順②実行後に①で指定したパスに/assets/conf/当該JSONファイルが作成されていること。
      final String jsonPath = join(appDir.path, testDir, confPath, fileName);
      //print("存在確認先：" + jsonPath);
      final File file = File(jsonPath);
      expect(file.existsSync() == true , true);

      // ③任意のプロパティ値を変更する。
      searchlog.display.display = testData1s;
      expect(searchlog.display.display, testData1s);

      // ④saveを実行する。
      await searchlog.save();

      // 手順④実行後、プロパティ変更後の内容でプロパティ値が設定されていること。
      expect(searchlog.display.display, testData1s);
      
      // アプリフォルダのパスを元に戻しておく（このテストだけの後処理）。
      JsonPath().absolutePath = join(appDir.path);

      print("********** テスト終了：00015_setAbsolutePath_01 **********\n\n");
    });

    // ********************************************************
    // テスト00016 : ファイル復元（_restoreJson：バックアップ作成中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    //         ④バックアップファイルを作成し、破損状態とする。
    //         ⑤loadを実行する。
    // 期待結果：手順③実行後、プロパティ変更前の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00016_restoreJson_01', () async {
      print("\n********** テスト実行：00016_restoreJson_01 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ②Jsonファイルの任意のプロパティの値を変更する。
      // ④バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern1, section, key, testData1s, testData2s);
      await getTestDate(confPath, fileName, testFunc.getPattern1);

      // ⑤loadを実行する。
      await searchlog.load();

      // 手順⑤実行後、手順②で変更した内容でプロパティ値が設定されていること。
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData1s, true);

      print("********** テスト終了：00016_restoreJson_01 **********\n\n");
    });

    // ********************************************************
    // テスト00017 : ファイル復元（_restoreJson：バックアップ作成直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    //         ④バックアップファイルを作成する。
    //         ⑤loadを実行する。
    // 期待結果：手順③実行後、プロパティ変更前の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('0017_restoreJson_02', () async {
      print("\n********** テスト実行：00017_restoreJson_02 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ②任意のプロパティの値を変更する。
      // ④バックアップファイルを作成する。
      await makeTestData(confPath, fileName, testFunc.makePattern2, section, key, testData1s, testData2s);
      await getTestDate(confPath, fileName, testFunc.getPattern2);

      // ⑤loadを実行する。
      await searchlog.load();

      // 手順⑤実行後、手順②で変更した内容でプロパティ値が設定されていること。
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData2s, true);

      print("********** テスト終了：00017_restoreJson_02 **********\n\n");
    });

    // ********************************************************
    // テスト00018 : ファイル復元（_restoreJson：JSON更新中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成する。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00018_restoreJson_03', () async {
      print("\n********** テスト実行：00018_restoreJson_03 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern3, section, key, testData1s, testData2s);
      await getTestDate(confPath, fileName, testFunc.getPattern3);

      // ③loadを実行する。
      await searchlog.load();

      // 手順③実行後、①の内容ででプロパティ値が設定されていること。
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData1s, true);

      print("********** テスト終了：00018_restoreJson_03 **********\n\n");
    });

    // ********************************************************
    // テスト00019 : ファイル復元（_restoreJson：JSON作成直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成する。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新する。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、②の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00019_restoreJson_04', () async {
      print("\n********** テスト実行：00019_restoreJson_04 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern4, section, key, testData1s, testData2s);
      await getTestDate(confPath, fileName, testFunc.getPattern4);

      // ③loadを実行する。
      await searchlog.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData2s, true);

      print("********** テスト終了：00019_restoreJson_04 **********\n\n");
    });

    // ********************************************************
    // テスト00020 : ファイル復元（_restoreJson：バックアップ削除中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更した内容でJSONファイルを更新する。
    //         ②バックアップファイルを作成し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00020_restoreJson_05', () async {
      print("\n********** テスト実行：00020_restoreJson_05 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern5, section, key, testData1s, testData2s);
      await getTestDate(confPath, fileName, testFunc.getPattern5);

      // ③loadを実行する。
      await searchlog.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData1s, true);

      print("********** テスト終了：00020_restoreJson_05 **********\n\n");
    });

    // ********************************************************
    // テスト00021 : ファイル復元（_restoreJson：バックアップ削除直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更する。
    //         ②①の内容でJSONファイルを更新する。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00021_restoreJson_06', () async {
      print("\n********** テスト実行：00021_restoreJson_06 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern6, section, key, testData1s, testData2s);
      await getTestDate(confPath, fileName, testFunc.getPattern6);

      // ③loadを実行する。
      await searchlog.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData1s, true);

      print("********** テスト終了：00021_restoreJson_06 **********\n\n");
    });

    // ********************************************************
    // テスト00022 : ファイル復元（_restoreJson：バックアップとJSON共に破損：バックアップが新しい日付）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ②バックアップファイルを作成し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：デフォルトの内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00022_restoreJson_07', () async {
      print("\n********** テスト実行：00022_restoreJson_07 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      // ②バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern7, section, key, testData1s, testData2s);
      await getTestDate(confPath, fileName, testFunc.getPattern7);

      // ③loadを実行する。
      await searchlog.load();

      // デフォルトの内容でプロパティ値が設定されていること。
      print("check:" + searchlog.display.display.toString());
      allPropatyCheck(searchlog,true);

      print("********** テスト終了：00022_restoreJson_07 **********\n\n");
    });

    // ********************************************************
    // テスト00023 : ファイル復元（_restoreJson：バックアップとJSON共に破損：JSONが新しい日付）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成し、破損状態とする。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：デフォルトの内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00023_restoreJson_08', () async {
      print("\n********** テスト実行：00023_restoreJson_08 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      // ②バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern8, section, key, testData1s, testData2s);
      await getTestDate(confPath, fileName, testFunc.getPattern8);

      // ③loadを実行する。
      await searchlog.load();

      // デフォルトの内容でプロパティ値が設定されていること。
      print("check:" + searchlog.display.display.toString());
      allPropatyCheck(searchlog,true);

      print("********** テスト終了：00023_restoreJson_08 **********\n\n");
    });

    // ********************************************************
    // テスト00020 : 言語切換（changeLanguage）
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    // 試験手順：①当該フォルダと同階層にex、cn、twのフォルダを作成する。
    //         ②任意のプロパティ値を変更し、①の各フォルダにJSONのコピーを作成する。
    //         ③changeLanguageを実行し、exフォルダに切り替える。
    //         ④loadを実行する。
    //         ⑤changeLanguageを実行し、cnフォルダに切り替える。
    //         ⑥loadを実行する。
    //         ⑦changeLanguageを実行し、twフォルダに切り替える。
    //         ⑧loadを実行する。
    // 期待結果：手順④、⑥、⑧実行後、手順①で作成したJSONファイルのプロパティ値を読み込むこと。
    // ********************************************************
    test('00020_changeLanguage', () async {
      print("\n********** テスト実行：00020_changeLanguage_01 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①当該フォルダと同階層にex、cn、twのフォルダを作成する。
      // ②任意のプロパティ値を変更し、①の各フォルダにJSONのコピーを作成する。
      await makeTestData(confPath, fileName, testFunc.makePattern9, section, key, testData1s, testData2s, testData3s);
      await getTestDate(confPath, fileName, testFunc.getPattern9);

      // ③changeLanguageを実行し、exフォルダに切り替える。
      // ④loadを実行する。
      searchlog.changeLanguage(JsonLanguage.ex);
      await searchlog.load();
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData1s, true);
      allPropatyCheck(searchlog,false);
      // ⑤changeLanguageを実行し、cnフォルダに切り替える。
      // ⑥loadを実行する。
      searchlog.changeLanguage(JsonLanguage.cn);
      await searchlog.load();
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData2s, true);
      allPropatyCheck(searchlog,false);
      // ⑦changeLanguageを実行し、twフォルダに切り替える。
      // ⑧loadを実行する。
      searchlog.changeLanguage(JsonLanguage.tw);
      await searchlog.load();
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == testData3s, true);
      allPropatyCheck(searchlog,false);
      // ⑨changeLanguageを実行し、aaフォルダに切り替える。
      // ⑩loadを実行する。
      searchlog.changeLanguage(JsonLanguage.aa);
      await searchlog.load();
      print("check:" + searchlog.display.display.toString());
      expect(searchlog.display.display == defaultData, true);
      allPropatyCheck(searchlog,false);

      print("********** テスト終了：00020_changeLanguage_01 **********\n\n");
    });

    // ********************************************************
    // テスト00025 ～ : 要素取得・設定
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    //         実行前にsetConfigを実行すること。
    // 試験手順：①loadを実行する。
    //         ②指定したプロパティの初期値を取得する。
    //         ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
    //         ④saveを実行後、loadを実行する。
    //         ⑤同じプロパティを読み込み、データに変化がないことを確認する。
    //         ⑥③～⑤を異なるテストデータで実施する。
    //         ⑦③～⑤を手順①で取得した初期値で実施する。
    //         ⑧全てのプロパティが初期値になっていることを確認する。
    // 期待結果：全プロパティ値を取得、設定できること。（１要素、1テストで実施する）
    // ********************************************************
     test('00025_element_check_00001', () async {
      print("\n********** テスト実行：00025_element_check_00001 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.display.display;
      print(searchlog.display.display);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.display.display = testData1s;
      print(searchlog.display.display);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.display.display == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.display.display == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.display.display = testData2s;
      print(searchlog.display.display);
      expect(searchlog.display.display == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.display.display == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.display.display = defalut;
      print(searchlog.display.display);
      expect(searchlog.display.display == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.display.display == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00025_element_check_00001 **********\n\n");
    });

    test('00026_element_check_00002', () async {
      print("\n********** テスト実行：00026_element_check_00002 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.config.title;
      print(searchlog.config.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.config.title = testData1s;
      print(searchlog.config.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.config.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.config.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.config.title = testData2s;
      print(searchlog.config.title);
      expect(searchlog.config.title == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.config.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.config.title = defalut;
      print(searchlog.config.title);
      expect(searchlog.config.title == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.config.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00026_element_check_00002 **********\n\n");
    });

    test('00027_element_check_00003', () async {
      print("\n********** テスト実行：00027_element_check_00003 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.config.command_number;
      print(searchlog.config.command_number);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.config.command_number = testData1;
      print(searchlog.config.command_number);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.config.command_number == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.config.command_number == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.config.command_number = testData2;
      print(searchlog.config.command_number);
      expect(searchlog.config.command_number == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.config.command_number == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.config.command_number = defalut;
      print(searchlog.config.command_number);
      expect(searchlog.config.command_number == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.config.command_number == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00027_element_check_00003 **********\n\n");
    });

    test('00028_element_check_00004', () async {
      print("\n********** テスト実行：00028_element_check_00004 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.config.search_number;
      print(searchlog.config.search_number);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.config.search_number = testData1;
      print(searchlog.config.search_number);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.config.search_number == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.config.search_number == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.config.search_number = testData2;
      print(searchlog.config.search_number);
      expect(searchlog.config.search_number == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.config.search_number == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.config.search_number = defalut;
      print(searchlog.config.search_number);
      expect(searchlog.config.search_number == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.config.search_number == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00028_element_check_00004 **********\n\n");
    });

    test('00029_element_check_00005', () async {
      print("\n********** テスト実行：00029_element_check_00005 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.command1.command;
      print(searchlog.command1.command);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.command1.command = testData1s;
      print(searchlog.command1.command);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.command1.command == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.command1.command == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.command1.command = testData2s;
      print(searchlog.command1.command);
      expect(searchlog.command1.command == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.command1.command = defalut;
      print(searchlog.command1.command);
      expect(searchlog.command1.command == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00029_element_check_00005 **********\n\n");
    });

    test('00030_element_check_00006', () async {
      print("\n********** テスト実行：00030_element_check_00006 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.command1.command_sata;
      print(searchlog.command1.command_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.command1.command_sata = testData1s;
      print(searchlog.command1.command_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.command1.command_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.command1.command_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.command1.command_sata = testData2s;
      print(searchlog.command1.command_sata);
      expect(searchlog.command1.command_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.command1.command_sata = defalut;
      print(searchlog.command1.command_sata);
      expect(searchlog.command1.command_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00030_element_check_00006 **********\n\n");
    });

    test('00031_element_check_00007', () async {
      print("\n********** テスト実行：00031_element_check_00007 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.command1.command_ssd;
      print(searchlog.command1.command_ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.command1.command_ssd = testData1s;
      print(searchlog.command1.command_ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.command1.command_ssd == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.command1.command_ssd == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.command1.command_ssd = testData2s;
      print(searchlog.command1.command_ssd);
      expect(searchlog.command1.command_ssd == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command_ssd == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.command1.command_ssd = defalut;
      print(searchlog.command1.command_ssd);
      expect(searchlog.command1.command_ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command_ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00031_element_check_00007 **********\n\n");
    });

    test('00032_element_check_00008', () async {
      print("\n********** テスト実行：00032_element_check_00008 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.command1.command_sata2;
      print(searchlog.command1.command_sata2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.command1.command_sata2 = testData1s;
      print(searchlog.command1.command_sata2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.command1.command_sata2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.command1.command_sata2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.command1.command_sata2 = testData2s;
      print(searchlog.command1.command_sata2);
      expect(searchlog.command1.command_sata2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command_sata2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.command1.command_sata2 = defalut;
      print(searchlog.command1.command_sata2);
      expect(searchlog.command1.command_sata2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command_sata2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00032_element_check_00008 **********\n\n");
    });

    test('00033_element_check_00009', () async {
      print("\n********** テスト実行：00033_element_check_00009 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.command1.command_ssd2;
      print(searchlog.command1.command_ssd2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.command1.command_ssd2 = testData1s;
      print(searchlog.command1.command_ssd2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.command1.command_ssd2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.command1.command_ssd2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.command1.command_ssd2 = testData2s;
      print(searchlog.command1.command_ssd2);
      expect(searchlog.command1.command_ssd2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command_ssd2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.command1.command_ssd2 = defalut;
      print(searchlog.command1.command_ssd2);
      expect(searchlog.command1.command_ssd2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.command_ssd2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00033_element_check_00009 **********\n\n");
    });

    test('00034_element_check_00010', () async {
      print("\n********** テスト実行：00034_element_check_00010 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.command1.file_name;
      print(searchlog.command1.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.command1.file_name = testData1s;
      print(searchlog.command1.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.command1.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.command1.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.command1.file_name = testData2s;
      print(searchlog.command1.file_name);
      expect(searchlog.command1.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.command1.file_name = defalut;
      print(searchlog.command1.file_name);
      expect(searchlog.command1.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.command1.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00034_element_check_00010 **********\n\n");
    });

    test('00035_element_check_00011', () async {
      print("\n********** テスト実行：00035_element_check_00011 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search1.typ;
      print(searchlog.search1.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search1.typ = testData1;
      print(searchlog.search1.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search1.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search1.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search1.typ = testData2;
      print(searchlog.search1.typ);
      expect(searchlog.search1.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search1.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search1.typ = defalut;
      print(searchlog.search1.typ);
      expect(searchlog.search1.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search1.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00035_element_check_00011 **********\n\n");
    });

    test('00036_element_check_00012', () async {
      print("\n********** テスト実行：00036_element_check_00012 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search1.title;
      print(searchlog.search1.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search1.title = testData1s;
      print(searchlog.search1.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search1.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search1.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search1.title = testData2s;
      print(searchlog.search1.title);
      expect(searchlog.search1.title == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search1.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search1.title = defalut;
      print(searchlog.search1.title);
      expect(searchlog.search1.title == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search1.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00036_element_check_00012 **********\n\n");
    });

    test('00037_element_check_00013', () async {
      print("\n********** テスト実行：00037_element_check_00013 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search1.description_cd;
      print(searchlog.search1.description_cd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search1.description_cd = testData1;
      print(searchlog.search1.description_cd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search1.description_cd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search1.description_cd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search1.description_cd = testData2;
      print(searchlog.search1.description_cd);
      expect(searchlog.search1.description_cd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search1.description_cd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search1.description_cd = defalut;
      print(searchlog.search1.description_cd);
      expect(searchlog.search1.description_cd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search1.description_cd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00037_element_check_00013 **********\n\n");
    });

    test('00038_element_check_00014', () async {
      print("\n********** テスト実行：00038_element_check_00014 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.file_name;
      print(searchlog.search2.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.file_name = testData1s;
      print(searchlog.search2.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.file_name = testData2s;
      print(searchlog.search2.file_name);
      expect(searchlog.search2.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.file_name = defalut;
      print(searchlog.search2.file_name);
      expect(searchlog.search2.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00038_element_check_00014 **********\n\n");
    });

    test('00039_element_check_00015', () async {
      print("\n********** テスト実行：00039_element_check_00015 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.typ;
      print(searchlog.search2.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.typ = testData1;
      print(searchlog.search2.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.typ = testData2;
      print(searchlog.search2.typ);
      expect(searchlog.search2.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.typ = defalut;
      print(searchlog.search2.typ);
      expect(searchlog.search2.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00039_element_check_00015 **********\n\n");
    });

    test('00040_element_check_00016', () async {
      print("\n********** テスト実行：00040_element_check_00016 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.date;
      print(searchlog.search2.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.date = testData1s;
      print(searchlog.search2.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.date = testData2s;
      print(searchlog.search2.date);
      expect(searchlog.search2.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.date = defalut;
      print(searchlog.search2.date);
      expect(searchlog.search2.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00040_element_check_00016 **********\n\n");
    });

    test('00041_element_check_00017', () async {
      print("\n********** テスト実行：00041_element_check_00017 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.term_date;
      print(searchlog.search2.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.term_date = testData1;
      print(searchlog.search2.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.term_date = testData2;
      print(searchlog.search2.term_date);
      expect(searchlog.search2.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.term_date = defalut;
      print(searchlog.search2.term_date);
      expect(searchlog.search2.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00041_element_check_00017 **********\n\n");
    });

    test('00042_element_check_00018', () async {
      print("\n********** テスト実行：00042_element_check_00018 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.out_count;
      print(searchlog.search2.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.out_count = testData1;
      print(searchlog.search2.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.out_count = testData2;
      print(searchlog.search2.out_count);
      expect(searchlog.search2.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.out_count = defalut;
      print(searchlog.search2.out_count);
      expect(searchlog.search2.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00042_element_check_00018 **********\n\n");
    });

    test('00043_element_check_00019', () async {
      print("\n********** テスト実行：00043_element_check_00019 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.print_word;
      print(searchlog.search2.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.print_word = testData1s;
      print(searchlog.search2.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.print_word = testData2s;
      print(searchlog.search2.print_word);
      expect(searchlog.search2.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.print_word = defalut;
      print(searchlog.search2.print_word);
      expect(searchlog.search2.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00043_element_check_00019 **********\n\n");
    });

    test('00044_element_check_00020', () async {
      print("\n********** テスト実行：00044_element_check_00020 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.words;
      print(searchlog.search2.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.words = testData1;
      print(searchlog.search2.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.words = testData2;
      print(searchlog.search2.words);
      expect(searchlog.search2.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.words = defalut;
      print(searchlog.search2.words);
      expect(searchlog.search2.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00044_element_check_00020 **********\n\n");
    });

    test('00045_element_check_00021', () async {
      print("\n********** テスト実行：00045_element_check_00021 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.search_word1;
      print(searchlog.search2.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.search_word1 = testData1s;
      print(searchlog.search2.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.search_word1 = testData2s;
      print(searchlog.search2.search_word1);
      expect(searchlog.search2.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.search_word1 = defalut;
      print(searchlog.search2.search_word1);
      expect(searchlog.search2.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00045_element_check_00021 **********\n\n");
    });

    test('00046_element_check_00022', () async {
      print("\n********** テスト実行：00046_element_check_00022 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.search_word2;
      print(searchlog.search2.search_word2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.search_word2 = testData1s;
      print(searchlog.search2.search_word2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.search_word2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.search_word2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.search_word2 = testData2s;
      print(searchlog.search2.search_word2);
      expect(searchlog.search2.search_word2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.search_word2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.search_word2 = defalut;
      print(searchlog.search2.search_word2);
      expect(searchlog.search2.search_word2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.search_word2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00046_element_check_00022 **********\n\n");
    });

    test('00047_element_check_00023', () async {
      print("\n********** テスト実行：00047_element_check_00023 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.search_word1_sata;
      print(searchlog.search2.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.search_word1_sata = testData1s;
      print(searchlog.search2.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.search_word1_sata = testData2s;
      print(searchlog.search2.search_word1_sata);
      expect(searchlog.search2.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.search_word1_sata = defalut;
      print(searchlog.search2.search_word1_sata);
      expect(searchlog.search2.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00047_element_check_00023 **********\n\n");
    });

    test('00048_element_check_00024', () async {
      print("\n********** テスト実行：00048_element_check_00024 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.search_word2_sata;
      print(searchlog.search2.search_word2_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.search_word2_sata = testData1s;
      print(searchlog.search2.search_word2_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.search_word2_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.search_word2_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.search_word2_sata = testData2s;
      print(searchlog.search2.search_word2_sata);
      expect(searchlog.search2.search_word2_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.search_word2_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.search_word2_sata = defalut;
      print(searchlog.search2.search_word2_sata);
      expect(searchlog.search2.search_word2_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.search_word2_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00048_element_check_00024 **********\n\n");
    });

    test('00049_element_check_00025', () async {
      print("\n********** テスト実行：00049_element_check_00025 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search2.description;
      print(searchlog.search2.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search2.description = testData1s;
      print(searchlog.search2.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search2.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search2.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search2.description = testData2s;
      print(searchlog.search2.description);
      expect(searchlog.search2.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search2.description = defalut;
      print(searchlog.search2.description);
      expect(searchlog.search2.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search2.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00049_element_check_00025 **********\n\n");
    });

    test('00050_element_check_00026', () async {
      print("\n********** テスト実行：00050_element_check_00026 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.file_name;
      print(searchlog.search3.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.file_name = testData1s;
      print(searchlog.search3.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.file_name = testData2s;
      print(searchlog.search3.file_name);
      expect(searchlog.search3.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.file_name = defalut;
      print(searchlog.search3.file_name);
      expect(searchlog.search3.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00050_element_check_00026 **********\n\n");
    });

    test('00051_element_check_00027', () async {
      print("\n********** テスト実行：00051_element_check_00027 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.typ;
      print(searchlog.search3.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.typ = testData1;
      print(searchlog.search3.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.typ = testData2;
      print(searchlog.search3.typ);
      expect(searchlog.search3.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.typ = defalut;
      print(searchlog.search3.typ);
      expect(searchlog.search3.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00051_element_check_00027 **********\n\n");
    });

    test('00052_element_check_00028', () async {
      print("\n********** テスト実行：00052_element_check_00028 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.date;
      print(searchlog.search3.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.date = testData1s;
      print(searchlog.search3.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.date = testData2s;
      print(searchlog.search3.date);
      expect(searchlog.search3.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.date = defalut;
      print(searchlog.search3.date);
      expect(searchlog.search3.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00052_element_check_00028 **********\n\n");
    });

    test('00053_element_check_00029', () async {
      print("\n********** テスト実行：00053_element_check_00029 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.term_date;
      print(searchlog.search3.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.term_date = testData1;
      print(searchlog.search3.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.term_date = testData2;
      print(searchlog.search3.term_date);
      expect(searchlog.search3.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.term_date = defalut;
      print(searchlog.search3.term_date);
      expect(searchlog.search3.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00053_element_check_00029 **********\n\n");
    });

    test('00054_element_check_00030', () async {
      print("\n********** テスト実行：00054_element_check_00030 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.out_count;
      print(searchlog.search3.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.out_count = testData1;
      print(searchlog.search3.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.out_count = testData2;
      print(searchlog.search3.out_count);
      expect(searchlog.search3.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.out_count = defalut;
      print(searchlog.search3.out_count);
      expect(searchlog.search3.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00054_element_check_00030 **********\n\n");
    });

    test('00055_element_check_00031', () async {
      print("\n********** テスト実行：00055_element_check_00031 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.print_word;
      print(searchlog.search3.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.print_word = testData1s;
      print(searchlog.search3.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.print_word = testData2s;
      print(searchlog.search3.print_word);
      expect(searchlog.search3.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.print_word = defalut;
      print(searchlog.search3.print_word);
      expect(searchlog.search3.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00055_element_check_00031 **********\n\n");
    });

    test('00056_element_check_00032', () async {
      print("\n********** テスト実行：00056_element_check_00032 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.words;
      print(searchlog.search3.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.words = testData1;
      print(searchlog.search3.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.words = testData2;
      print(searchlog.search3.words);
      expect(searchlog.search3.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.words = defalut;
      print(searchlog.search3.words);
      expect(searchlog.search3.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00056_element_check_00032 **********\n\n");
    });

    test('00057_element_check_00033', () async {
      print("\n********** テスト実行：00057_element_check_00033 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.search_word1;
      print(searchlog.search3.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.search_word1 = testData1s;
      print(searchlog.search3.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.search_word1 = testData2s;
      print(searchlog.search3.search_word1);
      expect(searchlog.search3.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.search_word1 = defalut;
      print(searchlog.search3.search_word1);
      expect(searchlog.search3.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00057_element_check_00033 **********\n\n");
    });

    test('00058_element_check_00034', () async {
      print("\n********** テスト実行：00058_element_check_00034 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.search_word1_sata;
      print(searchlog.search3.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.search_word1_sata = testData1s;
      print(searchlog.search3.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.search_word1_sata = testData2s;
      print(searchlog.search3.search_word1_sata);
      expect(searchlog.search3.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.search_word1_sata = defalut;
      print(searchlog.search3.search_word1_sata);
      expect(searchlog.search3.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00058_element_check_00034 **********\n\n");
    });

    test('00059_element_check_00035', () async {
      print("\n********** テスト実行：00059_element_check_00035 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search3.description;
      print(searchlog.search3.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search3.description = testData1s;
      print(searchlog.search3.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search3.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search3.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search3.description = testData2s;
      print(searchlog.search3.description);
      expect(searchlog.search3.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search3.description = defalut;
      print(searchlog.search3.description);
      expect(searchlog.search3.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search3.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00059_element_check_00035 **********\n\n");
    });

    test('00060_element_check_00036', () async {
      print("\n********** テスト実行：00060_element_check_00036 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.file_name;
      print(searchlog.search4.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.file_name = testData1s;
      print(searchlog.search4.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.file_name = testData2s;
      print(searchlog.search4.file_name);
      expect(searchlog.search4.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.file_name = defalut;
      print(searchlog.search4.file_name);
      expect(searchlog.search4.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00060_element_check_00036 **********\n\n");
    });

    test('00061_element_check_00037', () async {
      print("\n********** テスト実行：00061_element_check_00037 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.typ;
      print(searchlog.search4.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.typ = testData1;
      print(searchlog.search4.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.typ = testData2;
      print(searchlog.search4.typ);
      expect(searchlog.search4.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.typ = defalut;
      print(searchlog.search4.typ);
      expect(searchlog.search4.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00061_element_check_00037 **********\n\n");
    });

    test('00062_element_check_00038', () async {
      print("\n********** テスト実行：00062_element_check_00038 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.date;
      print(searchlog.search4.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.date = testData1s;
      print(searchlog.search4.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.date = testData2s;
      print(searchlog.search4.date);
      expect(searchlog.search4.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.date = defalut;
      print(searchlog.search4.date);
      expect(searchlog.search4.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00062_element_check_00038 **********\n\n");
    });

    test('00063_element_check_00039', () async {
      print("\n********** テスト実行：00063_element_check_00039 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.term_date;
      print(searchlog.search4.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.term_date = testData1;
      print(searchlog.search4.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.term_date = testData2;
      print(searchlog.search4.term_date);
      expect(searchlog.search4.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.term_date = defalut;
      print(searchlog.search4.term_date);
      expect(searchlog.search4.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00063_element_check_00039 **********\n\n");
    });

    test('00064_element_check_00040', () async {
      print("\n********** テスト実行：00064_element_check_00040 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.out_count;
      print(searchlog.search4.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.out_count = testData1;
      print(searchlog.search4.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.out_count = testData2;
      print(searchlog.search4.out_count);
      expect(searchlog.search4.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.out_count = defalut;
      print(searchlog.search4.out_count);
      expect(searchlog.search4.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00064_element_check_00040 **********\n\n");
    });

    test('00065_element_check_00041', () async {
      print("\n********** テスト実行：00065_element_check_00041 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.print_word;
      print(searchlog.search4.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.print_word = testData1s;
      print(searchlog.search4.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.print_word = testData2s;
      print(searchlog.search4.print_word);
      expect(searchlog.search4.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.print_word = defalut;
      print(searchlog.search4.print_word);
      expect(searchlog.search4.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00065_element_check_00041 **********\n\n");
    });

    test('00066_element_check_00042', () async {
      print("\n********** テスト実行：00066_element_check_00042 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.words;
      print(searchlog.search4.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.words = testData1;
      print(searchlog.search4.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.words = testData2;
      print(searchlog.search4.words);
      expect(searchlog.search4.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.words = defalut;
      print(searchlog.search4.words);
      expect(searchlog.search4.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00066_element_check_00042 **********\n\n");
    });

    test('00067_element_check_00043', () async {
      print("\n********** テスト実行：00067_element_check_00043 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.search_word1;
      print(searchlog.search4.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.search_word1 = testData1s;
      print(searchlog.search4.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.search_word1 = testData2s;
      print(searchlog.search4.search_word1);
      expect(searchlog.search4.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.search_word1 = defalut;
      print(searchlog.search4.search_word1);
      expect(searchlog.search4.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00067_element_check_00043 **********\n\n");
    });

    test('00068_element_check_00044', () async {
      print("\n********** テスト実行：00068_element_check_00044 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.search_word1_sata;
      print(searchlog.search4.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.search_word1_sata = testData1s;
      print(searchlog.search4.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.search_word1_sata = testData2s;
      print(searchlog.search4.search_word1_sata);
      expect(searchlog.search4.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.search_word1_sata = defalut;
      print(searchlog.search4.search_word1_sata);
      expect(searchlog.search4.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00068_element_check_00044 **********\n\n");
    });

    test('00069_element_check_00045', () async {
      print("\n********** テスト実行：00069_element_check_00045 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search4.description;
      print(searchlog.search4.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search4.description = testData1s;
      print(searchlog.search4.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search4.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search4.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search4.description = testData2s;
      print(searchlog.search4.description);
      expect(searchlog.search4.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search4.description = defalut;
      print(searchlog.search4.description);
      expect(searchlog.search4.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search4.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00069_element_check_00045 **********\n\n");
    });

    test('00070_element_check_00046', () async {
      print("\n********** テスト実行：00070_element_check_00046 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search5.file_name;
      print(searchlog.search5.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search5.file_name = testData1s;
      print(searchlog.search5.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search5.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search5.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search5.file_name = testData2s;
      print(searchlog.search5.file_name);
      expect(searchlog.search5.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search5.file_name = defalut;
      print(searchlog.search5.file_name);
      expect(searchlog.search5.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00070_element_check_00046 **********\n\n");
    });

    test('00071_element_check_00047', () async {
      print("\n********** テスト実行：00071_element_check_00047 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search5.typ;
      print(searchlog.search5.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search5.typ = testData1;
      print(searchlog.search5.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search5.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search5.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search5.typ = testData2;
      print(searchlog.search5.typ);
      expect(searchlog.search5.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search5.typ = defalut;
      print(searchlog.search5.typ);
      expect(searchlog.search5.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00071_element_check_00047 **********\n\n");
    });

    test('00072_element_check_00048', () async {
      print("\n********** テスト実行：00072_element_check_00048 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search5.date;
      print(searchlog.search5.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search5.date = testData1s;
      print(searchlog.search5.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search5.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search5.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search5.date = testData2s;
      print(searchlog.search5.date);
      expect(searchlog.search5.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search5.date = defalut;
      print(searchlog.search5.date);
      expect(searchlog.search5.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00072_element_check_00048 **********\n\n");
    });

    test('00073_element_check_00049', () async {
      print("\n********** テスト実行：00073_element_check_00049 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search5.term_date;
      print(searchlog.search5.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search5.term_date = testData1;
      print(searchlog.search5.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search5.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search5.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search5.term_date = testData2;
      print(searchlog.search5.term_date);
      expect(searchlog.search5.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search5.term_date = defalut;
      print(searchlog.search5.term_date);
      expect(searchlog.search5.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00073_element_check_00049 **********\n\n");
    });

    test('00074_element_check_00050', () async {
      print("\n********** テスト実行：00074_element_check_00050 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search5.out_count;
      print(searchlog.search5.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search5.out_count = testData1;
      print(searchlog.search5.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search5.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search5.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search5.out_count = testData2;
      print(searchlog.search5.out_count);
      expect(searchlog.search5.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search5.out_count = defalut;
      print(searchlog.search5.out_count);
      expect(searchlog.search5.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00074_element_check_00050 **********\n\n");
    });

    test('00075_element_check_00051', () async {
      print("\n********** テスト実行：00075_element_check_00051 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search5.print_word;
      print(searchlog.search5.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search5.print_word = testData1s;
      print(searchlog.search5.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search5.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search5.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search5.print_word = testData2s;
      print(searchlog.search5.print_word);
      expect(searchlog.search5.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search5.print_word = defalut;
      print(searchlog.search5.print_word);
      expect(searchlog.search5.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00075_element_check_00051 **********\n\n");
    });

    test('00076_element_check_00052', () async {
      print("\n********** テスト実行：00076_element_check_00052 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search5.sensor_word;
      print(searchlog.search5.sensor_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search5.sensor_word = testData1s;
      print(searchlog.search5.sensor_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search5.sensor_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search5.sensor_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search5.sensor_word = testData2s;
      print(searchlog.search5.sensor_word);
      expect(searchlog.search5.sensor_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.sensor_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search5.sensor_word = defalut;
      print(searchlog.search5.sensor_word);
      expect(searchlog.search5.sensor_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.sensor_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00076_element_check_00052 **********\n\n");
    });

    test('00077_element_check_00053', () async {
      print("\n********** テスト実行：00077_element_check_00053 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search5.description;
      print(searchlog.search5.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search5.description = testData1s;
      print(searchlog.search5.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search5.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search5.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search5.description = testData2s;
      print(searchlog.search5.description);
      expect(searchlog.search5.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search5.description = defalut;
      print(searchlog.search5.description);
      expect(searchlog.search5.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search5.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00077_element_check_00053 **********\n\n");
    });

    test('00078_element_check_00054', () async {
      print("\n********** テスト実行：00078_element_check_00054 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search6.file_name;
      print(searchlog.search6.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search6.file_name = testData1s;
      print(searchlog.search6.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search6.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search6.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search6.file_name = testData2s;
      print(searchlog.search6.file_name);
      expect(searchlog.search6.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search6.file_name = defalut;
      print(searchlog.search6.file_name);
      expect(searchlog.search6.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00078_element_check_00054 **********\n\n");
    });

    test('00079_element_check_00055', () async {
      print("\n********** テスト実行：00079_element_check_00055 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search6.typ;
      print(searchlog.search6.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search6.typ = testData1;
      print(searchlog.search6.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search6.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search6.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search6.typ = testData2;
      print(searchlog.search6.typ);
      expect(searchlog.search6.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search6.typ = defalut;
      print(searchlog.search6.typ);
      expect(searchlog.search6.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00079_element_check_00055 **********\n\n");
    });

    test('00080_element_check_00056', () async {
      print("\n********** テスト実行：00080_element_check_00056 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search6.date;
      print(searchlog.search6.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search6.date = testData1s;
      print(searchlog.search6.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search6.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search6.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search6.date = testData2s;
      print(searchlog.search6.date);
      expect(searchlog.search6.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search6.date = defalut;
      print(searchlog.search6.date);
      expect(searchlog.search6.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00080_element_check_00056 **********\n\n");
    });

    test('00081_element_check_00057', () async {
      print("\n********** テスト実行：00081_element_check_00057 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search6.term_date;
      print(searchlog.search6.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search6.term_date = testData1;
      print(searchlog.search6.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search6.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search6.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search6.term_date = testData2;
      print(searchlog.search6.term_date);
      expect(searchlog.search6.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search6.term_date = defalut;
      print(searchlog.search6.term_date);
      expect(searchlog.search6.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00081_element_check_00057 **********\n\n");
    });

    test('00082_element_check_00058', () async {
      print("\n********** テスト実行：00082_element_check_00058 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search6.out_count;
      print(searchlog.search6.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search6.out_count = testData1;
      print(searchlog.search6.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search6.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search6.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search6.out_count = testData2;
      print(searchlog.search6.out_count);
      expect(searchlog.search6.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search6.out_count = defalut;
      print(searchlog.search6.out_count);
      expect(searchlog.search6.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00082_element_check_00058 **********\n\n");
    });

    test('00083_element_check_00059', () async {
      print("\n********** テスト実行：00083_element_check_00059 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search6.print_word;
      print(searchlog.search6.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search6.print_word = testData1s;
      print(searchlog.search6.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search6.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search6.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search6.print_word = testData2s;
      print(searchlog.search6.print_word);
      expect(searchlog.search6.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search6.print_word = defalut;
      print(searchlog.search6.print_word);
      expect(searchlog.search6.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00083_element_check_00059 **********\n\n");
    });

    test('00084_element_check_00060', () async {
      print("\n********** テスト実行：00084_element_check_00060 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search6.sensor_word;
      print(searchlog.search6.sensor_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search6.sensor_word = testData1s;
      print(searchlog.search6.sensor_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search6.sensor_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search6.sensor_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search6.sensor_word = testData2s;
      print(searchlog.search6.sensor_word);
      expect(searchlog.search6.sensor_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.sensor_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search6.sensor_word = defalut;
      print(searchlog.search6.sensor_word);
      expect(searchlog.search6.sensor_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.sensor_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00084_element_check_00060 **********\n\n");
    });

    test('00085_element_check_00061', () async {
      print("\n********** テスト実行：00085_element_check_00061 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search6.description;
      print(searchlog.search6.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search6.description = testData1s;
      print(searchlog.search6.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search6.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search6.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search6.description = testData2s;
      print(searchlog.search6.description);
      expect(searchlog.search6.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search6.description = defalut;
      print(searchlog.search6.description);
      expect(searchlog.search6.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search6.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00085_element_check_00061 **********\n\n");
    });

    test('00086_element_check_00062', () async {
      print("\n********** テスト実行：00086_element_check_00062 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search7.file_name;
      print(searchlog.search7.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search7.file_name = testData1s;
      print(searchlog.search7.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search7.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search7.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search7.file_name = testData2s;
      print(searchlog.search7.file_name);
      expect(searchlog.search7.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search7.file_name = defalut;
      print(searchlog.search7.file_name);
      expect(searchlog.search7.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00086_element_check_00062 **********\n\n");
    });

    test('00087_element_check_00063', () async {
      print("\n********** テスト実行：00087_element_check_00063 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search7.typ;
      print(searchlog.search7.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search7.typ = testData1;
      print(searchlog.search7.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search7.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search7.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search7.typ = testData2;
      print(searchlog.search7.typ);
      expect(searchlog.search7.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search7.typ = defalut;
      print(searchlog.search7.typ);
      expect(searchlog.search7.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00087_element_check_00063 **********\n\n");
    });

    test('00088_element_check_00064', () async {
      print("\n********** テスト実行：00088_element_check_00064 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search7.date;
      print(searchlog.search7.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search7.date = testData1s;
      print(searchlog.search7.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search7.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search7.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search7.date = testData2s;
      print(searchlog.search7.date);
      expect(searchlog.search7.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search7.date = defalut;
      print(searchlog.search7.date);
      expect(searchlog.search7.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00088_element_check_00064 **********\n\n");
    });

    test('00089_element_check_00065', () async {
      print("\n********** テスト実行：00089_element_check_00065 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search7.term_date;
      print(searchlog.search7.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search7.term_date = testData1;
      print(searchlog.search7.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search7.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search7.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search7.term_date = testData2;
      print(searchlog.search7.term_date);
      expect(searchlog.search7.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search7.term_date = defalut;
      print(searchlog.search7.term_date);
      expect(searchlog.search7.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00089_element_check_00065 **********\n\n");
    });

    test('00090_element_check_00066', () async {
      print("\n********** テスト実行：00090_element_check_00066 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search7.out_count;
      print(searchlog.search7.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search7.out_count = testData1;
      print(searchlog.search7.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search7.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search7.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search7.out_count = testData2;
      print(searchlog.search7.out_count);
      expect(searchlog.search7.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search7.out_count = defalut;
      print(searchlog.search7.out_count);
      expect(searchlog.search7.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00090_element_check_00066 **********\n\n");
    });

    test('00091_element_check_00067', () async {
      print("\n********** テスト実行：00091_element_check_00067 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search7.print_word;
      print(searchlog.search7.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search7.print_word = testData1s;
      print(searchlog.search7.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search7.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search7.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search7.print_word = testData2s;
      print(searchlog.search7.print_word);
      expect(searchlog.search7.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search7.print_word = defalut;
      print(searchlog.search7.print_word);
      expect(searchlog.search7.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00091_element_check_00067 **********\n\n");
    });

    test('00092_element_check_00068', () async {
      print("\n********** テスト実行：00092_element_check_00068 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search7.partition;
      print(searchlog.search7.partition);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search7.partition = testData1s;
      print(searchlog.search7.partition);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search7.partition == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search7.partition == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search7.partition = testData2s;
      print(searchlog.search7.partition);
      expect(searchlog.search7.partition == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.partition == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search7.partition = defalut;
      print(searchlog.search7.partition);
      expect(searchlog.search7.partition == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.partition == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00092_element_check_00068 **********\n\n");
    });

    test('00093_element_check_00069', () async {
      print("\n********** テスト実行：00093_element_check_00069 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search7.description;
      print(searchlog.search7.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search7.description = testData1s;
      print(searchlog.search7.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search7.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search7.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search7.description = testData2s;
      print(searchlog.search7.description);
      expect(searchlog.search7.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search7.description = defalut;
      print(searchlog.search7.description);
      expect(searchlog.search7.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search7.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00093_element_check_00069 **********\n\n");
    });

    test('00094_element_check_00070', () async {
      print("\n********** テスト実行：00094_element_check_00070 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.file_name;
      print(searchlog.search8.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.file_name = testData1s;
      print(searchlog.search8.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.file_name = testData2s;
      print(searchlog.search8.file_name);
      expect(searchlog.search8.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.file_name = defalut;
      print(searchlog.search8.file_name);
      expect(searchlog.search8.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00094_element_check_00070 **********\n\n");
    });

    test('00095_element_check_00071', () async {
      print("\n********** テスト実行：00095_element_check_00071 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.typ;
      print(searchlog.search8.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.typ = testData1;
      print(searchlog.search8.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.typ = testData2;
      print(searchlog.search8.typ);
      expect(searchlog.search8.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.typ = defalut;
      print(searchlog.search8.typ);
      expect(searchlog.search8.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00095_element_check_00071 **********\n\n");
    });

    test('00096_element_check_00072', () async {
      print("\n********** テスト実行：00096_element_check_00072 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.date;
      print(searchlog.search8.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.date = testData1s;
      print(searchlog.search8.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.date = testData2s;
      print(searchlog.search8.date);
      expect(searchlog.search8.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.date = defalut;
      print(searchlog.search8.date);
      expect(searchlog.search8.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00096_element_check_00072 **********\n\n");
    });

    test('00097_element_check_00073', () async {
      print("\n********** テスト実行：00097_element_check_00073 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.term_date;
      print(searchlog.search8.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.term_date = testData1;
      print(searchlog.search8.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.term_date = testData2;
      print(searchlog.search8.term_date);
      expect(searchlog.search8.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.term_date = defalut;
      print(searchlog.search8.term_date);
      expect(searchlog.search8.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00097_element_check_00073 **********\n\n");
    });

    test('00098_element_check_00074', () async {
      print("\n********** テスト実行：00098_element_check_00074 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.out_count;
      print(searchlog.search8.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.out_count = testData1;
      print(searchlog.search8.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.out_count = testData2;
      print(searchlog.search8.out_count);
      expect(searchlog.search8.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.out_count = defalut;
      print(searchlog.search8.out_count);
      expect(searchlog.search8.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00098_element_check_00074 **********\n\n");
    });

    test('00099_element_check_00075', () async {
      print("\n********** テスト実行：00099_element_check_00075 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.print_word;
      print(searchlog.search8.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.print_word = testData1s;
      print(searchlog.search8.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.print_word = testData2s;
      print(searchlog.search8.print_word);
      expect(searchlog.search8.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.print_word = defalut;
      print(searchlog.search8.print_word);
      expect(searchlog.search8.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00099_element_check_00075 **********\n\n");
    });

    test('00100_element_check_00076', () async {
      print("\n********** テスト実行：00100_element_check_00076 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.words;
      print(searchlog.search8.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.words = testData1;
      print(searchlog.search8.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.words = testData2;
      print(searchlog.search8.words);
      expect(searchlog.search8.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.words = defalut;
      print(searchlog.search8.words);
      expect(searchlog.search8.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00100_element_check_00076 **********\n\n");
    });

    test('00101_element_check_00077', () async {
      print("\n********** テスト実行：00101_element_check_00077 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.search_word1;
      print(searchlog.search8.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.search_word1 = testData1s;
      print(searchlog.search8.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.search_word1 = testData2s;
      print(searchlog.search8.search_word1);
      expect(searchlog.search8.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.search_word1 = defalut;
      print(searchlog.search8.search_word1);
      expect(searchlog.search8.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00101_element_check_00077 **********\n\n");
    });

    test('00102_element_check_00078', () async {
      print("\n********** テスト実行：00102_element_check_00078 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.search_word2;
      print(searchlog.search8.search_word2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.search_word2 = testData1s;
      print(searchlog.search8.search_word2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.search_word2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.search_word2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.search_word2 = testData2s;
      print(searchlog.search8.search_word2);
      expect(searchlog.search8.search_word2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.search_word2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.search_word2 = defalut;
      print(searchlog.search8.search_word2);
      expect(searchlog.search8.search_word2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.search_word2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00102_element_check_00078 **********\n\n");
    });

    test('00103_element_check_00079', () async {
      print("\n********** テスト実行：00103_element_check_00079 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.search_word1_sata;
      print(searchlog.search8.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.search_word1_sata = testData1s;
      print(searchlog.search8.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.search_word1_sata = testData2s;
      print(searchlog.search8.search_word1_sata);
      expect(searchlog.search8.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.search_word1_sata = defalut;
      print(searchlog.search8.search_word1_sata);
      expect(searchlog.search8.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00103_element_check_00079 **********\n\n");
    });

    test('00104_element_check_00080', () async {
      print("\n********** テスト実行：00104_element_check_00080 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.search_word2_sata;
      print(searchlog.search8.search_word2_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.search_word2_sata = testData1s;
      print(searchlog.search8.search_word2_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.search_word2_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.search_word2_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.search_word2_sata = testData2s;
      print(searchlog.search8.search_word2_sata);
      expect(searchlog.search8.search_word2_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.search_word2_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.search_word2_sata = defalut;
      print(searchlog.search8.search_word2_sata);
      expect(searchlog.search8.search_word2_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.search_word2_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00104_element_check_00080 **********\n\n");
    });

    test('00105_element_check_00081', () async {
      print("\n********** テスト実行：00105_element_check_00081 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search8.description;
      print(searchlog.search8.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search8.description = testData1s;
      print(searchlog.search8.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search8.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search8.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search8.description = testData2s;
      print(searchlog.search8.description);
      expect(searchlog.search8.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search8.description = defalut;
      print(searchlog.search8.description);
      expect(searchlog.search8.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search8.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00105_element_check_00081 **********\n\n");
    });

    test('00106_element_check_00082', () async {
      print("\n********** テスト実行：00106_element_check_00082 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.file_name;
      print(searchlog.search9.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.file_name = testData1s;
      print(searchlog.search9.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.file_name = testData2s;
      print(searchlog.search9.file_name);
      expect(searchlog.search9.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.file_name = defalut;
      print(searchlog.search9.file_name);
      expect(searchlog.search9.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00106_element_check_00082 **********\n\n");
    });

    test('00107_element_check_00083', () async {
      print("\n********** テスト実行：00107_element_check_00083 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.file_name2;
      print(searchlog.search9.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.file_name2 = testData1s;
      print(searchlog.search9.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.file_name2 = testData2s;
      print(searchlog.search9.file_name2);
      expect(searchlog.search9.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.file_name2 = defalut;
      print(searchlog.search9.file_name2);
      expect(searchlog.search9.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00107_element_check_00083 **********\n\n");
    });

    test('00108_element_check_00084', () async {
      print("\n********** テスト実行：00108_element_check_00084 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.typ;
      print(searchlog.search9.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.typ = testData1;
      print(searchlog.search9.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.typ = testData2;
      print(searchlog.search9.typ);
      expect(searchlog.search9.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.typ = defalut;
      print(searchlog.search9.typ);
      expect(searchlog.search9.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00108_element_check_00084 **********\n\n");
    });

    test('00109_element_check_00085', () async {
      print("\n********** テスト実行：00109_element_check_00085 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.date;
      print(searchlog.search9.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.date = testData1s;
      print(searchlog.search9.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.date = testData2s;
      print(searchlog.search9.date);
      expect(searchlog.search9.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.date = defalut;
      print(searchlog.search9.date);
      expect(searchlog.search9.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00109_element_check_00085 **********\n\n");
    });

    test('00110_element_check_00086', () async {
      print("\n********** テスト実行：00110_element_check_00086 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.term_date;
      print(searchlog.search9.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.term_date = testData1;
      print(searchlog.search9.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.term_date = testData2;
      print(searchlog.search9.term_date);
      expect(searchlog.search9.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.term_date = defalut;
      print(searchlog.search9.term_date);
      expect(searchlog.search9.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00110_element_check_00086 **********\n\n");
    });

    test('00111_element_check_00087', () async {
      print("\n********** テスト実行：00111_element_check_00087 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.out_count;
      print(searchlog.search9.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.out_count = testData1;
      print(searchlog.search9.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.out_count = testData2;
      print(searchlog.search9.out_count);
      expect(searchlog.search9.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.out_count = defalut;
      print(searchlog.search9.out_count);
      expect(searchlog.search9.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00111_element_check_00087 **********\n\n");
    });

    test('00112_element_check_00088', () async {
      print("\n********** テスト実行：00112_element_check_00088 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.print_word;
      print(searchlog.search9.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.print_word = testData1s;
      print(searchlog.search9.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.print_word = testData2s;
      print(searchlog.search9.print_word);
      expect(searchlog.search9.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.print_word = defalut;
      print(searchlog.search9.print_word);
      expect(searchlog.search9.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00112_element_check_00088 **********\n\n");
    });

    test('00113_element_check_00089', () async {
      print("\n********** テスト実行：00113_element_check_00089 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.sensor_word;
      print(searchlog.search9.sensor_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.sensor_word = testData1s;
      print(searchlog.search9.sensor_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.sensor_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.sensor_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.sensor_word = testData2s;
      print(searchlog.search9.sensor_word);
      expect(searchlog.search9.sensor_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.sensor_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.sensor_word = defalut;
      print(searchlog.search9.sensor_word);
      expect(searchlog.search9.sensor_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.sensor_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00113_element_check_00089 **********\n\n");
    });

    test('00114_element_check_00090', () async {
      print("\n********** テスト実行：00114_element_check_00090 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search9.description;
      print(searchlog.search9.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search9.description = testData1s;
      print(searchlog.search9.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search9.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search9.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search9.description = testData2s;
      print(searchlog.search9.description);
      expect(searchlog.search9.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search9.description = defalut;
      print(searchlog.search9.description);
      expect(searchlog.search9.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search9.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00114_element_check_00090 **********\n\n");
    });

    test('00115_element_check_00091', () async {
      print("\n********** テスト実行：00115_element_check_00091 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.file_name;
      print(searchlog.search10.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.file_name = testData1s;
      print(searchlog.search10.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.file_name = testData2s;
      print(searchlog.search10.file_name);
      expect(searchlog.search10.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.file_name = defalut;
      print(searchlog.search10.file_name);
      expect(searchlog.search10.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00115_element_check_00091 **********\n\n");
    });

    test('00116_element_check_00092', () async {
      print("\n********** テスト実行：00116_element_check_00092 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.file_name2;
      print(searchlog.search10.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.file_name2 = testData1s;
      print(searchlog.search10.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.file_name2 = testData2s;
      print(searchlog.search10.file_name2);
      expect(searchlog.search10.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.file_name2 = defalut;
      print(searchlog.search10.file_name2);
      expect(searchlog.search10.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00116_element_check_00092 **********\n\n");
    });

    test('00117_element_check_00093', () async {
      print("\n********** テスト実行：00117_element_check_00093 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.typ;
      print(searchlog.search10.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.typ = testData1;
      print(searchlog.search10.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.typ = testData2;
      print(searchlog.search10.typ);
      expect(searchlog.search10.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.typ = defalut;
      print(searchlog.search10.typ);
      expect(searchlog.search10.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00117_element_check_00093 **********\n\n");
    });

    test('00118_element_check_00094', () async {
      print("\n********** テスト実行：00118_element_check_00094 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.date;
      print(searchlog.search10.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.date = testData1s;
      print(searchlog.search10.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.date = testData2s;
      print(searchlog.search10.date);
      expect(searchlog.search10.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.date = defalut;
      print(searchlog.search10.date);
      expect(searchlog.search10.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00118_element_check_00094 **********\n\n");
    });

    test('00119_element_check_00095', () async {
      print("\n********** テスト実行：00119_element_check_00095 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.term_date;
      print(searchlog.search10.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.term_date = testData1;
      print(searchlog.search10.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.term_date = testData2;
      print(searchlog.search10.term_date);
      expect(searchlog.search10.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.term_date = defalut;
      print(searchlog.search10.term_date);
      expect(searchlog.search10.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00119_element_check_00095 **********\n\n");
    });

    test('00120_element_check_00096', () async {
      print("\n********** テスト実行：00120_element_check_00096 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.out_count;
      print(searchlog.search10.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.out_count = testData1;
      print(searchlog.search10.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.out_count = testData2;
      print(searchlog.search10.out_count);
      expect(searchlog.search10.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.out_count = defalut;
      print(searchlog.search10.out_count);
      expect(searchlog.search10.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00120_element_check_00096 **********\n\n");
    });

    test('00121_element_check_00097', () async {
      print("\n********** テスト実行：00121_element_check_00097 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.print_word;
      print(searchlog.search10.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.print_word = testData1s;
      print(searchlog.search10.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.print_word = testData2s;
      print(searchlog.search10.print_word);
      expect(searchlog.search10.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.print_word = defalut;
      print(searchlog.search10.print_word);
      expect(searchlog.search10.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00121_element_check_00097 **********\n\n");
    });

    test('00122_element_check_00098', () async {
      print("\n********** テスト実行：00122_element_check_00098 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.sensor_word;
      print(searchlog.search10.sensor_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.sensor_word = testData1s;
      print(searchlog.search10.sensor_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.sensor_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.sensor_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.sensor_word = testData2s;
      print(searchlog.search10.sensor_word);
      expect(searchlog.search10.sensor_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.sensor_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.sensor_word = defalut;
      print(searchlog.search10.sensor_word);
      expect(searchlog.search10.sensor_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.sensor_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00122_element_check_00098 **********\n\n");
    });

    test('00123_element_check_00099', () async {
      print("\n********** テスト実行：00123_element_check_00099 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search10.description;
      print(searchlog.search10.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search10.description = testData1s;
      print(searchlog.search10.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search10.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search10.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search10.description = testData2s;
      print(searchlog.search10.description);
      expect(searchlog.search10.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search10.description = defalut;
      print(searchlog.search10.description);
      expect(searchlog.search10.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search10.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00123_element_check_00099 **********\n\n");
    });

    test('00124_element_check_00100', () async {
      print("\n********** テスト実行：00124_element_check_00100 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.file_name;
      print(searchlog.search11.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.file_name = testData1s;
      print(searchlog.search11.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.file_name = testData2s;
      print(searchlog.search11.file_name);
      expect(searchlog.search11.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.file_name = defalut;
      print(searchlog.search11.file_name);
      expect(searchlog.search11.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00124_element_check_00100 **********\n\n");
    });

    test('00125_element_check_00101', () async {
      print("\n********** テスト実行：00125_element_check_00101 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.file_name2;
      print(searchlog.search11.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.file_name2 = testData1s;
      print(searchlog.search11.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.file_name2 = testData2s;
      print(searchlog.search11.file_name2);
      expect(searchlog.search11.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.file_name2 = defalut;
      print(searchlog.search11.file_name2);
      expect(searchlog.search11.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00125_element_check_00101 **********\n\n");
    });

    test('00126_element_check_00102', () async {
      print("\n********** テスト実行：00126_element_check_00102 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.typ;
      print(searchlog.search11.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.typ = testData1;
      print(searchlog.search11.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.typ = testData2;
      print(searchlog.search11.typ);
      expect(searchlog.search11.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.typ = defalut;
      print(searchlog.search11.typ);
      expect(searchlog.search11.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00126_element_check_00102 **********\n\n");
    });

    test('00127_element_check_00103', () async {
      print("\n********** テスト実行：00127_element_check_00103 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.date;
      print(searchlog.search11.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.date = testData1s;
      print(searchlog.search11.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.date = testData2s;
      print(searchlog.search11.date);
      expect(searchlog.search11.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.date = defalut;
      print(searchlog.search11.date);
      expect(searchlog.search11.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00127_element_check_00103 **********\n\n");
    });

    test('00128_element_check_00104', () async {
      print("\n********** テスト実行：00128_element_check_00104 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.term_date;
      print(searchlog.search11.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.term_date = testData1;
      print(searchlog.search11.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.term_date = testData2;
      print(searchlog.search11.term_date);
      expect(searchlog.search11.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.term_date = defalut;
      print(searchlog.search11.term_date);
      expect(searchlog.search11.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00128_element_check_00104 **********\n\n");
    });

    test('00129_element_check_00105', () async {
      print("\n********** テスト実行：00129_element_check_00105 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.out_count;
      print(searchlog.search11.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.out_count = testData1;
      print(searchlog.search11.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.out_count = testData2;
      print(searchlog.search11.out_count);
      expect(searchlog.search11.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.out_count = defalut;
      print(searchlog.search11.out_count);
      expect(searchlog.search11.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00129_element_check_00105 **********\n\n");
    });

    test('00130_element_check_00106', () async {
      print("\n********** テスト実行：00130_element_check_00106 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.print_word;
      print(searchlog.search11.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.print_word = testData1s;
      print(searchlog.search11.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.print_word = testData2s;
      print(searchlog.search11.print_word);
      expect(searchlog.search11.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.print_word = defalut;
      print(searchlog.search11.print_word);
      expect(searchlog.search11.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00130_element_check_00106 **********\n\n");
    });

    test('00131_element_check_00107', () async {
      print("\n********** テスト実行：00131_element_check_00107 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.sensor_word;
      print(searchlog.search11.sensor_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.sensor_word = testData1s;
      print(searchlog.search11.sensor_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.sensor_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.sensor_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.sensor_word = testData2s;
      print(searchlog.search11.sensor_word);
      expect(searchlog.search11.sensor_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.sensor_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.sensor_word = defalut;
      print(searchlog.search11.sensor_word);
      expect(searchlog.search11.sensor_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.sensor_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00131_element_check_00107 **********\n\n");
    });

    test('00132_element_check_00108', () async {
      print("\n********** テスト実行：00132_element_check_00108 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search11.description;
      print(searchlog.search11.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search11.description = testData1s;
      print(searchlog.search11.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search11.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search11.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search11.description = testData2s;
      print(searchlog.search11.description);
      expect(searchlog.search11.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search11.description = defalut;
      print(searchlog.search11.description);
      expect(searchlog.search11.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search11.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00132_element_check_00108 **********\n\n");
    });

    test('00133_element_check_00109', () async {
      print("\n********** テスト実行：00133_element_check_00109 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.file_name;
      print(searchlog.search12.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.file_name = testData1s;
      print(searchlog.search12.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.file_name = testData2s;
      print(searchlog.search12.file_name);
      expect(searchlog.search12.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.file_name = defalut;
      print(searchlog.search12.file_name);
      expect(searchlog.search12.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00133_element_check_00109 **********\n\n");
    });

    test('00134_element_check_00110', () async {
      print("\n********** テスト実行：00134_element_check_00110 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.typ;
      print(searchlog.search12.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.typ = testData1;
      print(searchlog.search12.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.typ = testData2;
      print(searchlog.search12.typ);
      expect(searchlog.search12.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.typ = defalut;
      print(searchlog.search12.typ);
      expect(searchlog.search12.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00134_element_check_00110 **********\n\n");
    });

    test('00135_element_check_00111', () async {
      print("\n********** テスト実行：00135_element_check_00111 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.date;
      print(searchlog.search12.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.date = testData1s;
      print(searchlog.search12.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.date = testData2s;
      print(searchlog.search12.date);
      expect(searchlog.search12.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.date = defalut;
      print(searchlog.search12.date);
      expect(searchlog.search12.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00135_element_check_00111 **********\n\n");
    });

    test('00136_element_check_00112', () async {
      print("\n********** テスト実行：00136_element_check_00112 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.term_date;
      print(searchlog.search12.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.term_date = testData1;
      print(searchlog.search12.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.term_date = testData2;
      print(searchlog.search12.term_date);
      expect(searchlog.search12.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.term_date = defalut;
      print(searchlog.search12.term_date);
      expect(searchlog.search12.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00136_element_check_00112 **********\n\n");
    });

    test('00137_element_check_00113', () async {
      print("\n********** テスト実行：00137_element_check_00113 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.out_count;
      print(searchlog.search12.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.out_count = testData1;
      print(searchlog.search12.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.out_count = testData2;
      print(searchlog.search12.out_count);
      expect(searchlog.search12.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.out_count = defalut;
      print(searchlog.search12.out_count);
      expect(searchlog.search12.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00137_element_check_00113 **********\n\n");
    });

    test('00138_element_check_00114', () async {
      print("\n********** テスト実行：00138_element_check_00114 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.print_word;
      print(searchlog.search12.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.print_word = testData1s;
      print(searchlog.search12.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.print_word = testData2s;
      print(searchlog.search12.print_word);
      expect(searchlog.search12.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.print_word = defalut;
      print(searchlog.search12.print_word);
      expect(searchlog.search12.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00138_element_check_00114 **********\n\n");
    });

    test('00139_element_check_00115', () async {
      print("\n********** テスト実行：00139_element_check_00115 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.words;
      print(searchlog.search12.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.words = testData1;
      print(searchlog.search12.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.words = testData2;
      print(searchlog.search12.words);
      expect(searchlog.search12.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.words = defalut;
      print(searchlog.search12.words);
      expect(searchlog.search12.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00139_element_check_00115 **********\n\n");
    });

    test('00140_element_check_00116', () async {
      print("\n********** テスト実行：00140_element_check_00116 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.search_word1;
      print(searchlog.search12.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.search_word1 = testData1s;
      print(searchlog.search12.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.search_word1 = testData2s;
      print(searchlog.search12.search_word1);
      expect(searchlog.search12.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.search_word1 = defalut;
      print(searchlog.search12.search_word1);
      expect(searchlog.search12.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00140_element_check_00116 **********\n\n");
    });

    test('00141_element_check_00117', () async {
      print("\n********** テスト実行：00141_element_check_00117 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.search_word1_sata;
      print(searchlog.search12.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.search_word1_sata = testData1s;
      print(searchlog.search12.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.search_word1_sata = testData2s;
      print(searchlog.search12.search_word1_sata);
      expect(searchlog.search12.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.search_word1_sata = defalut;
      print(searchlog.search12.search_word1_sata);
      expect(searchlog.search12.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00141_element_check_00117 **********\n\n");
    });

    test('00142_element_check_00118', () async {
      print("\n********** テスト実行：00142_element_check_00118 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search12.description;
      print(searchlog.search12.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search12.description = testData1s;
      print(searchlog.search12.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search12.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search12.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search12.description = testData2s;
      print(searchlog.search12.description);
      expect(searchlog.search12.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search12.description = defalut;
      print(searchlog.search12.description);
      expect(searchlog.search12.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search12.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00142_element_check_00118 **********\n\n");
    });

    test('00143_element_check_00119', () async {
      print("\n********** テスト実行：00143_element_check_00119 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search13.file_name;
      print(searchlog.search13.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search13.file_name = testData1s;
      print(searchlog.search13.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search13.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search13.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search13.file_name = testData2s;
      print(searchlog.search13.file_name);
      expect(searchlog.search13.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search13.file_name = defalut;
      print(searchlog.search13.file_name);
      expect(searchlog.search13.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00143_element_check_00119 **********\n\n");
    });

    test('00144_element_check_00120', () async {
      print("\n********** テスト実行：00144_element_check_00120 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search13.typ;
      print(searchlog.search13.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search13.typ = testData1;
      print(searchlog.search13.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search13.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search13.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search13.typ = testData2;
      print(searchlog.search13.typ);
      expect(searchlog.search13.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search13.typ = defalut;
      print(searchlog.search13.typ);
      expect(searchlog.search13.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00144_element_check_00120 **********\n\n");
    });

    test('00145_element_check_00121', () async {
      print("\n********** テスト実行：00145_element_check_00121 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search13.out_count;
      print(searchlog.search13.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search13.out_count = testData1;
      print(searchlog.search13.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search13.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search13.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search13.out_count = testData2;
      print(searchlog.search13.out_count);
      expect(searchlog.search13.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search13.out_count = defalut;
      print(searchlog.search13.out_count);
      expect(searchlog.search13.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00145_element_check_00121 **********\n\n");
    });

    test('00146_element_check_00122', () async {
      print("\n********** テスト実行：00146_element_check_00122 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search13.print_word;
      print(searchlog.search13.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search13.print_word = testData1s;
      print(searchlog.search13.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search13.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search13.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search13.print_word = testData2s;
      print(searchlog.search13.print_word);
      expect(searchlog.search13.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search13.print_word = defalut;
      print(searchlog.search13.print_word);
      expect(searchlog.search13.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00146_element_check_00122 **********\n\n");
    });

    test('00147_element_check_00123', () async {
      print("\n********** テスト実行：00147_element_check_00123 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search13.description;
      print(searchlog.search13.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search13.description = testData1s;
      print(searchlog.search13.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search13.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search13.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search13.description = testData2s;
      print(searchlog.search13.description);
      expect(searchlog.search13.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search13.description = defalut;
      print(searchlog.search13.description);
      expect(searchlog.search13.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search13.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00147_element_check_00123 **********\n\n");
    });

    test('00148_element_check_00124', () async {
      print("\n********** テスト実行：00148_element_check_00124 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search15.file_name;
      print(searchlog.search15.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search15.file_name = testData1s;
      print(searchlog.search15.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search15.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search15.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search15.file_name = testData2s;
      print(searchlog.search15.file_name);
      expect(searchlog.search15.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search15.file_name = defalut;
      print(searchlog.search15.file_name);
      expect(searchlog.search15.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00148_element_check_00124 **********\n\n");
    });

    test('00149_element_check_00125', () async {
      print("\n********** テスト実行：00149_element_check_00125 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search15.typ;
      print(searchlog.search15.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search15.typ = testData1;
      print(searchlog.search15.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search15.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search15.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search15.typ = testData2;
      print(searchlog.search15.typ);
      expect(searchlog.search15.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search15.typ = defalut;
      print(searchlog.search15.typ);
      expect(searchlog.search15.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00149_element_check_00125 **********\n\n");
    });

    test('00150_element_check_00126', () async {
      print("\n********** テスト実行：00150_element_check_00126 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search15.out_count;
      print(searchlog.search15.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search15.out_count = testData1;
      print(searchlog.search15.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search15.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search15.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search15.out_count = testData2;
      print(searchlog.search15.out_count);
      expect(searchlog.search15.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search15.out_count = defalut;
      print(searchlog.search15.out_count);
      expect(searchlog.search15.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00150_element_check_00126 **********\n\n");
    });

    test('00151_element_check_00127', () async {
      print("\n********** テスト実行：00151_element_check_00127 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search15.section;
      print(searchlog.search15.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search15.section = testData1s;
      print(searchlog.search15.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search15.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search15.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search15.section = testData2s;
      print(searchlog.search15.section);
      expect(searchlog.search15.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search15.section = defalut;
      print(searchlog.search15.section);
      expect(searchlog.search15.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00151_element_check_00127 **********\n\n");
    });

    test('00152_element_check_00128', () async {
      print("\n********** テスト実行：00152_element_check_00128 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search15.keyword;
      print(searchlog.search15.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search15.keyword = testData1s;
      print(searchlog.search15.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search15.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search15.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search15.keyword = testData2s;
      print(searchlog.search15.keyword);
      expect(searchlog.search15.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search15.keyword = defalut;
      print(searchlog.search15.keyword);
      expect(searchlog.search15.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00152_element_check_00128 **********\n\n");
    });

    test('00153_element_check_00129', () async {
      print("\n********** テスト実行：00153_element_check_00129 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search15.print_word;
      print(searchlog.search15.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search15.print_word = testData1s;
      print(searchlog.search15.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search15.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search15.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search15.print_word = testData2s;
      print(searchlog.search15.print_word);
      expect(searchlog.search15.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search15.print_word = defalut;
      print(searchlog.search15.print_word);
      expect(searchlog.search15.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00153_element_check_00129 **********\n\n");
    });

    test('00154_element_check_00130', () async {
      print("\n********** テスト実行：00154_element_check_00130 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search15.description;
      print(searchlog.search15.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search15.description = testData1s;
      print(searchlog.search15.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search15.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search15.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search15.description = testData2s;
      print(searchlog.search15.description);
      expect(searchlog.search15.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search15.description = defalut;
      print(searchlog.search15.description);
      expect(searchlog.search15.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search15.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00154_element_check_00130 **********\n\n");
    });

    test('00155_element_check_00131', () async {
      print("\n********** テスト実行：00155_element_check_00131 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search16.file_name;
      print(searchlog.search16.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search16.file_name = testData1s;
      print(searchlog.search16.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search16.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search16.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search16.file_name = testData2s;
      print(searchlog.search16.file_name);
      expect(searchlog.search16.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search16.file_name = defalut;
      print(searchlog.search16.file_name);
      expect(searchlog.search16.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00155_element_check_00131 **********\n\n");
    });

    test('00156_element_check_00132', () async {
      print("\n********** テスト実行：00156_element_check_00132 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search16.typ;
      print(searchlog.search16.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search16.typ = testData1;
      print(searchlog.search16.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search16.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search16.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search16.typ = testData2;
      print(searchlog.search16.typ);
      expect(searchlog.search16.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search16.typ = defalut;
      print(searchlog.search16.typ);
      expect(searchlog.search16.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00156_element_check_00132 **********\n\n");
    });

    test('00157_element_check_00133', () async {
      print("\n********** テスト実行：00157_element_check_00133 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search16.out_count;
      print(searchlog.search16.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search16.out_count = testData1;
      print(searchlog.search16.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search16.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search16.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search16.out_count = testData2;
      print(searchlog.search16.out_count);
      expect(searchlog.search16.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search16.out_count = defalut;
      print(searchlog.search16.out_count);
      expect(searchlog.search16.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00157_element_check_00133 **********\n\n");
    });

    test('00158_element_check_00134', () async {
      print("\n********** テスト実行：00158_element_check_00134 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search16.section;
      print(searchlog.search16.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search16.section = testData1s;
      print(searchlog.search16.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search16.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search16.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search16.section = testData2s;
      print(searchlog.search16.section);
      expect(searchlog.search16.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search16.section = defalut;
      print(searchlog.search16.section);
      expect(searchlog.search16.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00158_element_check_00134 **********\n\n");
    });

    test('00159_element_check_00135', () async {
      print("\n********** テスト実行：00159_element_check_00135 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search16.keyword;
      print(searchlog.search16.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search16.keyword = testData1s;
      print(searchlog.search16.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search16.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search16.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search16.keyword = testData2s;
      print(searchlog.search16.keyword);
      expect(searchlog.search16.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search16.keyword = defalut;
      print(searchlog.search16.keyword);
      expect(searchlog.search16.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00159_element_check_00135 **********\n\n");
    });

    test('00160_element_check_00136', () async {
      print("\n********** テスト実行：00160_element_check_00136 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search16.print_word;
      print(searchlog.search16.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search16.print_word = testData1s;
      print(searchlog.search16.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search16.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search16.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search16.print_word = testData2s;
      print(searchlog.search16.print_word);
      expect(searchlog.search16.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search16.print_word = defalut;
      print(searchlog.search16.print_word);
      expect(searchlog.search16.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00160_element_check_00136 **********\n\n");
    });

    test('00161_element_check_00137', () async {
      print("\n********** テスト実行：00161_element_check_00137 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search16.description;
      print(searchlog.search16.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search16.description = testData1s;
      print(searchlog.search16.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search16.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search16.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search16.description = testData2s;
      print(searchlog.search16.description);
      expect(searchlog.search16.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search16.description = defalut;
      print(searchlog.search16.description);
      expect(searchlog.search16.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search16.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00161_element_check_00137 **********\n\n");
    });

    test('00162_element_check_00138', () async {
      print("\n********** テスト実行：00162_element_check_00138 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search21.typ;
      print(searchlog.search21.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search21.typ = testData1;
      print(searchlog.search21.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search21.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search21.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search21.typ = testData2;
      print(searchlog.search21.typ);
      expect(searchlog.search21.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search21.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search21.typ = defalut;
      print(searchlog.search21.typ);
      expect(searchlog.search21.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search21.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00162_element_check_00138 **********\n\n");
    });

    test('00163_element_check_00139', () async {
      print("\n********** テスト実行：00163_element_check_00139 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search21.ssd;
      print(searchlog.search21.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search21.ssd = testData1;
      print(searchlog.search21.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search21.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search21.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search21.ssd = testData2;
      print(searchlog.search21.ssd);
      expect(searchlog.search21.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search21.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search21.ssd = defalut;
      print(searchlog.search21.ssd);
      expect(searchlog.search21.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search21.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00163_element_check_00139 **********\n\n");
    });

    test('00164_element_check_00140', () async {
      print("\n********** テスト実行：00164_element_check_00140 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search21.title;
      print(searchlog.search21.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search21.title = testData1s;
      print(searchlog.search21.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search21.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search21.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search21.title = testData2s;
      print(searchlog.search21.title);
      expect(searchlog.search21.title == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search21.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search21.title = defalut;
      print(searchlog.search21.title);
      expect(searchlog.search21.title == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search21.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00164_element_check_00140 **********\n\n");
    });

    test('00165_element_check_00141', () async {
      print("\n********** テスト実行：00165_element_check_00141 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search21.description_cd;
      print(searchlog.search21.description_cd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search21.description_cd = testData1;
      print(searchlog.search21.description_cd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search21.description_cd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search21.description_cd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search21.description_cd = testData2;
      print(searchlog.search21.description_cd);
      expect(searchlog.search21.description_cd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search21.description_cd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search21.description_cd = defalut;
      print(searchlog.search21.description_cd);
      expect(searchlog.search21.description_cd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search21.description_cd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00165_element_check_00141 **********\n\n");
    });

    test('00166_element_check_00142', () async {
      print("\n********** テスト実行：00166_element_check_00142 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.file_name;
      print(searchlog.search22.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.file_name = testData1s;
      print(searchlog.search22.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.file_name = testData2s;
      print(searchlog.search22.file_name);
      expect(searchlog.search22.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.file_name = defalut;
      print(searchlog.search22.file_name);
      expect(searchlog.search22.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00166_element_check_00142 **********\n\n");
    });

    test('00167_element_check_00143', () async {
      print("\n********** テスト実行：00167_element_check_00143 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.file_name2;
      print(searchlog.search22.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.file_name2 = testData1s;
      print(searchlog.search22.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.file_name2 = testData2s;
      print(searchlog.search22.file_name2);
      expect(searchlog.search22.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.file_name2 = defalut;
      print(searchlog.search22.file_name2);
      expect(searchlog.search22.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00167_element_check_00143 **********\n\n");
    });

    test('00168_element_check_00144', () async {
      print("\n********** テスト実行：00168_element_check_00144 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.typ;
      print(searchlog.search22.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.typ = testData1;
      print(searchlog.search22.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.typ = testData2;
      print(searchlog.search22.typ);
      expect(searchlog.search22.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.typ = defalut;
      print(searchlog.search22.typ);
      expect(searchlog.search22.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00168_element_check_00144 **********\n\n");
    });

    test('00169_element_check_00145', () async {
      print("\n********** テスト実行：00169_element_check_00145 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.ssd;
      print(searchlog.search22.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.ssd = testData1;
      print(searchlog.search22.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.ssd = testData2;
      print(searchlog.search22.ssd);
      expect(searchlog.search22.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.ssd = defalut;
      print(searchlog.search22.ssd);
      expect(searchlog.search22.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00169_element_check_00145 **********\n\n");
    });

    test('00170_element_check_00146', () async {
      print("\n********** テスト実行：00170_element_check_00146 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.date;
      print(searchlog.search22.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.date = testData1s;
      print(searchlog.search22.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.date = testData2s;
      print(searchlog.search22.date);
      expect(searchlog.search22.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.date = defalut;
      print(searchlog.search22.date);
      expect(searchlog.search22.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00170_element_check_00146 **********\n\n");
    });

    test('00171_element_check_00147', () async {
      print("\n********** テスト実行：00171_element_check_00147 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.term_date;
      print(searchlog.search22.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.term_date = testData1;
      print(searchlog.search22.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.term_date = testData2;
      print(searchlog.search22.term_date);
      expect(searchlog.search22.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.term_date = defalut;
      print(searchlog.search22.term_date);
      expect(searchlog.search22.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00171_element_check_00147 **********\n\n");
    });

    test('00172_element_check_00148', () async {
      print("\n********** テスト実行：00172_element_check_00148 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.out_count;
      print(searchlog.search22.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.out_count = testData1;
      print(searchlog.search22.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.out_count = testData2;
      print(searchlog.search22.out_count);
      expect(searchlog.search22.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.out_count = defalut;
      print(searchlog.search22.out_count);
      expect(searchlog.search22.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00172_element_check_00148 **********\n\n");
    });

    test('00173_element_check_00149', () async {
      print("\n********** テスト実行：00173_element_check_00149 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.print_word;
      print(searchlog.search22.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.print_word = testData1s;
      print(searchlog.search22.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.print_word = testData2s;
      print(searchlog.search22.print_word);
      expect(searchlog.search22.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.print_word = defalut;
      print(searchlog.search22.print_word);
      expect(searchlog.search22.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00173_element_check_00149 **********\n\n");
    });

    test('00174_element_check_00150', () async {
      print("\n********** テスト実行：00174_element_check_00150 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.ssd_word;
      print(searchlog.search22.ssd_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.ssd_word = testData1s;
      print(searchlog.search22.ssd_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.ssd_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.ssd_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.ssd_word = testData2s;
      print(searchlog.search22.ssd_word);
      expect(searchlog.search22.ssd_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.ssd_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.ssd_word = defalut;
      print(searchlog.search22.ssd_word);
      expect(searchlog.search22.ssd_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.ssd_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00174_element_check_00150 **********\n\n");
    });

    test('00175_element_check_00151', () async {
      print("\n********** テスト実行：00175_element_check_00151 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search22.description;
      print(searchlog.search22.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search22.description = testData1s;
      print(searchlog.search22.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search22.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search22.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search22.description = testData2s;
      print(searchlog.search22.description);
      expect(searchlog.search22.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search22.description = defalut;
      print(searchlog.search22.description);
      expect(searchlog.search22.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search22.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00175_element_check_00151 **********\n\n");
    });

    test('00176_element_check_00152', () async {
      print("\n********** テスト実行：00176_element_check_00152 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.file_name;
      print(searchlog.search23.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.file_name = testData1s;
      print(searchlog.search23.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.file_name = testData2s;
      print(searchlog.search23.file_name);
      expect(searchlog.search23.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.file_name = defalut;
      print(searchlog.search23.file_name);
      expect(searchlog.search23.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00176_element_check_00152 **********\n\n");
    });

    test('00177_element_check_00153', () async {
      print("\n********** テスト実行：00177_element_check_00153 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.file_name2;
      print(searchlog.search23.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.file_name2 = testData1s;
      print(searchlog.search23.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.file_name2 = testData2s;
      print(searchlog.search23.file_name2);
      expect(searchlog.search23.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.file_name2 = defalut;
      print(searchlog.search23.file_name2);
      expect(searchlog.search23.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00177_element_check_00153 **********\n\n");
    });

    test('00178_element_check_00154', () async {
      print("\n********** テスト実行：00178_element_check_00154 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.typ;
      print(searchlog.search23.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.typ = testData1;
      print(searchlog.search23.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.typ = testData2;
      print(searchlog.search23.typ);
      expect(searchlog.search23.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.typ = defalut;
      print(searchlog.search23.typ);
      expect(searchlog.search23.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00178_element_check_00154 **********\n\n");
    });

    test('00179_element_check_00155', () async {
      print("\n********** テスト実行：00179_element_check_00155 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.ssd;
      print(searchlog.search23.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.ssd = testData1;
      print(searchlog.search23.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.ssd = testData2;
      print(searchlog.search23.ssd);
      expect(searchlog.search23.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.ssd = defalut;
      print(searchlog.search23.ssd);
      expect(searchlog.search23.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00179_element_check_00155 **********\n\n");
    });

    test('00180_element_check_00156', () async {
      print("\n********** テスト実行：00180_element_check_00156 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.date;
      print(searchlog.search23.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.date = testData1s;
      print(searchlog.search23.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.date = testData2s;
      print(searchlog.search23.date);
      expect(searchlog.search23.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.date = defalut;
      print(searchlog.search23.date);
      expect(searchlog.search23.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00180_element_check_00156 **********\n\n");
    });

    test('00181_element_check_00157', () async {
      print("\n********** テスト実行：00181_element_check_00157 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.term_date;
      print(searchlog.search23.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.term_date = testData1;
      print(searchlog.search23.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.term_date = testData2;
      print(searchlog.search23.term_date);
      expect(searchlog.search23.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.term_date = defalut;
      print(searchlog.search23.term_date);
      expect(searchlog.search23.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00181_element_check_00157 **********\n\n");
    });

    test('00182_element_check_00158', () async {
      print("\n********** テスト実行：00182_element_check_00158 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.out_count;
      print(searchlog.search23.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.out_count = testData1;
      print(searchlog.search23.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.out_count = testData2;
      print(searchlog.search23.out_count);
      expect(searchlog.search23.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.out_count = defalut;
      print(searchlog.search23.out_count);
      expect(searchlog.search23.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00182_element_check_00158 **********\n\n");
    });

    test('00183_element_check_00159', () async {
      print("\n********** テスト実行：00183_element_check_00159 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.print_word;
      print(searchlog.search23.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.print_word = testData1s;
      print(searchlog.search23.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.print_word = testData2s;
      print(searchlog.search23.print_word);
      expect(searchlog.search23.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.print_word = defalut;
      print(searchlog.search23.print_word);
      expect(searchlog.search23.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00183_element_check_00159 **********\n\n");
    });

    test('00184_element_check_00160', () async {
      print("\n********** テスト実行：00184_element_check_00160 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.ssd_word;
      print(searchlog.search23.ssd_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.ssd_word = testData1s;
      print(searchlog.search23.ssd_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.ssd_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.ssd_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.ssd_word = testData2s;
      print(searchlog.search23.ssd_word);
      expect(searchlog.search23.ssd_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.ssd_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.ssd_word = defalut;
      print(searchlog.search23.ssd_word);
      expect(searchlog.search23.ssd_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.ssd_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00184_element_check_00160 **********\n\n");
    });

    test('00185_element_check_00161', () async {
      print("\n********** テスト実行：00185_element_check_00161 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search23.description;
      print(searchlog.search23.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search23.description = testData1s;
      print(searchlog.search23.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search23.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search23.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search23.description = testData2s;
      print(searchlog.search23.description);
      expect(searchlog.search23.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search23.description = defalut;
      print(searchlog.search23.description);
      expect(searchlog.search23.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search23.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00185_element_check_00161 **********\n\n");
    });

    test('00186_element_check_00162', () async {
      print("\n********** テスト実行：00186_element_check_00162 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.file_name;
      print(searchlog.search24.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.file_name = testData1s;
      print(searchlog.search24.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.file_name = testData2s;
      print(searchlog.search24.file_name);
      expect(searchlog.search24.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.file_name = defalut;
      print(searchlog.search24.file_name);
      expect(searchlog.search24.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00186_element_check_00162 **********\n\n");
    });

    test('00187_element_check_00163', () async {
      print("\n********** テスト実行：00187_element_check_00163 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.file_name2;
      print(searchlog.search24.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.file_name2 = testData1s;
      print(searchlog.search24.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.file_name2 = testData2s;
      print(searchlog.search24.file_name2);
      expect(searchlog.search24.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.file_name2 = defalut;
      print(searchlog.search24.file_name2);
      expect(searchlog.search24.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00187_element_check_00163 **********\n\n");
    });

    test('00188_element_check_00164', () async {
      print("\n********** テスト実行：00188_element_check_00164 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.typ;
      print(searchlog.search24.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.typ = testData1;
      print(searchlog.search24.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.typ = testData2;
      print(searchlog.search24.typ);
      expect(searchlog.search24.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.typ = defalut;
      print(searchlog.search24.typ);
      expect(searchlog.search24.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00188_element_check_00164 **********\n\n");
    });

    test('00189_element_check_00165', () async {
      print("\n********** テスト実行：00189_element_check_00165 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.ssd;
      print(searchlog.search24.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.ssd = testData1;
      print(searchlog.search24.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.ssd = testData2;
      print(searchlog.search24.ssd);
      expect(searchlog.search24.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.ssd = defalut;
      print(searchlog.search24.ssd);
      expect(searchlog.search24.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00189_element_check_00165 **********\n\n");
    });

    test('00190_element_check_00166', () async {
      print("\n********** テスト実行：00190_element_check_00166 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.date;
      print(searchlog.search24.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.date = testData1s;
      print(searchlog.search24.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.date = testData2s;
      print(searchlog.search24.date);
      expect(searchlog.search24.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.date = defalut;
      print(searchlog.search24.date);
      expect(searchlog.search24.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00190_element_check_00166 **********\n\n");
    });

    test('00191_element_check_00167', () async {
      print("\n********** テスト実行：00191_element_check_00167 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.term_date;
      print(searchlog.search24.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.term_date = testData1;
      print(searchlog.search24.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.term_date = testData2;
      print(searchlog.search24.term_date);
      expect(searchlog.search24.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.term_date = defalut;
      print(searchlog.search24.term_date);
      expect(searchlog.search24.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00191_element_check_00167 **********\n\n");
    });

    test('00192_element_check_00168', () async {
      print("\n********** テスト実行：00192_element_check_00168 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.out_count;
      print(searchlog.search24.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.out_count = testData1;
      print(searchlog.search24.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.out_count = testData2;
      print(searchlog.search24.out_count);
      expect(searchlog.search24.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.out_count = defalut;
      print(searchlog.search24.out_count);
      expect(searchlog.search24.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00192_element_check_00168 **********\n\n");
    });

    test('00193_element_check_00169', () async {
      print("\n********** テスト実行：00193_element_check_00169 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.print_word;
      print(searchlog.search24.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.print_word = testData1s;
      print(searchlog.search24.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.print_word = testData2s;
      print(searchlog.search24.print_word);
      expect(searchlog.search24.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.print_word = defalut;
      print(searchlog.search24.print_word);
      expect(searchlog.search24.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00193_element_check_00169 **********\n\n");
    });

    test('00194_element_check_00170', () async {
      print("\n********** テスト実行：00194_element_check_00170 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.ssd_word;
      print(searchlog.search24.ssd_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.ssd_word = testData1s;
      print(searchlog.search24.ssd_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.ssd_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.ssd_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.ssd_word = testData2s;
      print(searchlog.search24.ssd_word);
      expect(searchlog.search24.ssd_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.ssd_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.ssd_word = defalut;
      print(searchlog.search24.ssd_word);
      expect(searchlog.search24.ssd_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.ssd_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00194_element_check_00170 **********\n\n");
    });

    test('00195_element_check_00171', () async {
      print("\n********** テスト実行：00195_element_check_00171 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search24.description;
      print(searchlog.search24.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search24.description = testData1s;
      print(searchlog.search24.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search24.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search24.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search24.description = testData2s;
      print(searchlog.search24.description);
      expect(searchlog.search24.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search24.description = defalut;
      print(searchlog.search24.description);
      expect(searchlog.search24.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search24.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00195_element_check_00171 **********\n\n");
    });

    test('00196_element_check_00172', () async {
      print("\n********** テスト実行：00196_element_check_00172 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search25.file_name;
      print(searchlog.search25.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search25.file_name = testData1s;
      print(searchlog.search25.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search25.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search25.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search25.file_name = testData2s;
      print(searchlog.search25.file_name);
      expect(searchlog.search25.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search25.file_name = defalut;
      print(searchlog.search25.file_name);
      expect(searchlog.search25.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00196_element_check_00172 **********\n\n");
    });

    test('00197_element_check_00173', () async {
      print("\n********** テスト実行：00197_element_check_00173 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search25.typ;
      print(searchlog.search25.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search25.typ = testData1;
      print(searchlog.search25.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search25.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search25.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search25.typ = testData2;
      print(searchlog.search25.typ);
      expect(searchlog.search25.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search25.typ = defalut;
      print(searchlog.search25.typ);
      expect(searchlog.search25.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00197_element_check_00173 **********\n\n");
    });

    test('00198_element_check_00174', () async {
      print("\n********** テスト実行：00198_element_check_00174 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search25.ssd;
      print(searchlog.search25.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search25.ssd = testData1;
      print(searchlog.search25.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search25.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search25.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search25.ssd = testData2;
      print(searchlog.search25.ssd);
      expect(searchlog.search25.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search25.ssd = defalut;
      print(searchlog.search25.ssd);
      expect(searchlog.search25.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00198_element_check_00174 **********\n\n");
    });

    test('00199_element_check_00175', () async {
      print("\n********** テスト実行：00199_element_check_00175 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search25.out_count;
      print(searchlog.search25.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search25.out_count = testData1;
      print(searchlog.search25.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search25.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search25.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search25.out_count = testData2;
      print(searchlog.search25.out_count);
      expect(searchlog.search25.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search25.out_count = defalut;
      print(searchlog.search25.out_count);
      expect(searchlog.search25.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00199_element_check_00175 **********\n\n");
    });

    test('00200_element_check_00176', () async {
      print("\n********** テスト実行：00200_element_check_00176 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search25.print_word;
      print(searchlog.search25.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search25.print_word = testData1s;
      print(searchlog.search25.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search25.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search25.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search25.print_word = testData2s;
      print(searchlog.search25.print_word);
      expect(searchlog.search25.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search25.print_word = defalut;
      print(searchlog.search25.print_word);
      expect(searchlog.search25.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00200_element_check_00176 **********\n\n");
    });

    test('00201_element_check_00177', () async {
      print("\n********** テスト実行：00201_element_check_00177 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search25.description;
      print(searchlog.search25.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search25.description = testData1s;
      print(searchlog.search25.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search25.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search25.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search25.description = testData2s;
      print(searchlog.search25.description);
      expect(searchlog.search25.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search25.description = defalut;
      print(searchlog.search25.description);
      expect(searchlog.search25.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search25.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00201_element_check_00177 **********\n\n");
    });

    test('00202_element_check_00178', () async {
      print("\n********** テスト実行：00202_element_check_00178 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search26.file_name;
      print(searchlog.search26.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search26.file_name = testData1s;
      print(searchlog.search26.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search26.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search26.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search26.file_name = testData2s;
      print(searchlog.search26.file_name);
      expect(searchlog.search26.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search26.file_name = defalut;
      print(searchlog.search26.file_name);
      expect(searchlog.search26.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00202_element_check_00178 **********\n\n");
    });

    test('00203_element_check_00179', () async {
      print("\n********** テスト実行：00203_element_check_00179 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search26.typ;
      print(searchlog.search26.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search26.typ = testData1;
      print(searchlog.search26.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search26.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search26.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search26.typ = testData2;
      print(searchlog.search26.typ);
      expect(searchlog.search26.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search26.typ = defalut;
      print(searchlog.search26.typ);
      expect(searchlog.search26.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00203_element_check_00179 **********\n\n");
    });

    test('00204_element_check_00180', () async {
      print("\n********** テスト実行：00204_element_check_00180 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search26.ssd;
      print(searchlog.search26.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search26.ssd = testData1;
      print(searchlog.search26.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search26.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search26.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search26.ssd = testData2;
      print(searchlog.search26.ssd);
      expect(searchlog.search26.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search26.ssd = defalut;
      print(searchlog.search26.ssd);
      expect(searchlog.search26.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00204_element_check_00180 **********\n\n");
    });

    test('00205_element_check_00181', () async {
      print("\n********** テスト実行：00205_element_check_00181 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search26.out_count;
      print(searchlog.search26.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search26.out_count = testData1;
      print(searchlog.search26.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search26.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search26.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search26.out_count = testData2;
      print(searchlog.search26.out_count);
      expect(searchlog.search26.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search26.out_count = defalut;
      print(searchlog.search26.out_count);
      expect(searchlog.search26.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00205_element_check_00181 **********\n\n");
    });

    test('00206_element_check_00182', () async {
      print("\n********** テスト実行：00206_element_check_00182 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search26.print_word;
      print(searchlog.search26.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search26.print_word = testData1s;
      print(searchlog.search26.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search26.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search26.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search26.print_word = testData2s;
      print(searchlog.search26.print_word);
      expect(searchlog.search26.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search26.print_word = defalut;
      print(searchlog.search26.print_word);
      expect(searchlog.search26.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00206_element_check_00182 **********\n\n");
    });

    test('00207_element_check_00183', () async {
      print("\n********** テスト実行：00207_element_check_00183 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search26.description;
      print(searchlog.search26.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search26.description = testData1s;
      print(searchlog.search26.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search26.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search26.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search26.description = testData2s;
      print(searchlog.search26.description);
      expect(searchlog.search26.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search26.description = defalut;
      print(searchlog.search26.description);
      expect(searchlog.search26.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search26.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00207_element_check_00183 **********\n\n");
    });

    test('00208_element_check_00184', () async {
      print("\n********** テスト実行：00208_element_check_00184 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search27.file_name;
      print(searchlog.search27.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search27.file_name = testData1s;
      print(searchlog.search27.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search27.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search27.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search27.file_name = testData2s;
      print(searchlog.search27.file_name);
      expect(searchlog.search27.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search27.file_name = defalut;
      print(searchlog.search27.file_name);
      expect(searchlog.search27.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00208_element_check_00184 **********\n\n");
    });

    test('00209_element_check_00185', () async {
      print("\n********** テスト実行：00209_element_check_00185 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search27.typ;
      print(searchlog.search27.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search27.typ = testData1;
      print(searchlog.search27.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search27.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search27.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search27.typ = testData2;
      print(searchlog.search27.typ);
      expect(searchlog.search27.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search27.typ = defalut;
      print(searchlog.search27.typ);
      expect(searchlog.search27.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00209_element_check_00185 **********\n\n");
    });

    test('00210_element_check_00186', () async {
      print("\n********** テスト実行：00210_element_check_00186 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search27.ssd;
      print(searchlog.search27.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search27.ssd = testData1;
      print(searchlog.search27.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search27.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search27.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search27.ssd = testData2;
      print(searchlog.search27.ssd);
      expect(searchlog.search27.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search27.ssd = defalut;
      print(searchlog.search27.ssd);
      expect(searchlog.search27.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00210_element_check_00186 **********\n\n");
    });

    test('00211_element_check_00187', () async {
      print("\n********** テスト実行：00211_element_check_00187 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search27.out_count;
      print(searchlog.search27.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search27.out_count = testData1;
      print(searchlog.search27.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search27.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search27.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search27.out_count = testData2;
      print(searchlog.search27.out_count);
      expect(searchlog.search27.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search27.out_count = defalut;
      print(searchlog.search27.out_count);
      expect(searchlog.search27.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00211_element_check_00187 **********\n\n");
    });

    test('00212_element_check_00188', () async {
      print("\n********** テスト実行：00212_element_check_00188 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search27.print_word;
      print(searchlog.search27.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search27.print_word = testData1s;
      print(searchlog.search27.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search27.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search27.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search27.print_word = testData2s;
      print(searchlog.search27.print_word);
      expect(searchlog.search27.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search27.print_word = defalut;
      print(searchlog.search27.print_word);
      expect(searchlog.search27.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00212_element_check_00188 **********\n\n");
    });

    test('00213_element_check_00189', () async {
      print("\n********** テスト実行：00213_element_check_00189 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search27.description;
      print(searchlog.search27.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search27.description = testData1s;
      print(searchlog.search27.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search27.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search27.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search27.description = testData2s;
      print(searchlog.search27.description);
      expect(searchlog.search27.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search27.description = defalut;
      print(searchlog.search27.description);
      expect(searchlog.search27.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search27.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00213_element_check_00189 **********\n\n");
    });

    test('00214_element_check_00190', () async {
      print("\n********** テスト実行：00214_element_check_00190 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search28.file_name;
      print(searchlog.search28.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search28.file_name = testData1s;
      print(searchlog.search28.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search28.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search28.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search28.file_name = testData2s;
      print(searchlog.search28.file_name);
      expect(searchlog.search28.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search28.file_name = defalut;
      print(searchlog.search28.file_name);
      expect(searchlog.search28.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00214_element_check_00190 **********\n\n");
    });

    test('00215_element_check_00191', () async {
      print("\n********** テスト実行：00215_element_check_00191 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search28.typ;
      print(searchlog.search28.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search28.typ = testData1;
      print(searchlog.search28.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search28.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search28.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search28.typ = testData2;
      print(searchlog.search28.typ);
      expect(searchlog.search28.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search28.typ = defalut;
      print(searchlog.search28.typ);
      expect(searchlog.search28.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00215_element_check_00191 **********\n\n");
    });

    test('00216_element_check_00192', () async {
      print("\n********** テスト実行：00216_element_check_00192 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search28.ssd;
      print(searchlog.search28.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search28.ssd = testData1;
      print(searchlog.search28.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search28.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search28.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search28.ssd = testData2;
      print(searchlog.search28.ssd);
      expect(searchlog.search28.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search28.ssd = defalut;
      print(searchlog.search28.ssd);
      expect(searchlog.search28.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00216_element_check_00192 **********\n\n");
    });

    test('00217_element_check_00193', () async {
      print("\n********** テスト実行：00217_element_check_00193 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search28.out_count;
      print(searchlog.search28.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search28.out_count = testData1;
      print(searchlog.search28.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search28.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search28.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search28.out_count = testData2;
      print(searchlog.search28.out_count);
      expect(searchlog.search28.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search28.out_count = defalut;
      print(searchlog.search28.out_count);
      expect(searchlog.search28.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00217_element_check_00193 **********\n\n");
    });

    test('00218_element_check_00194', () async {
      print("\n********** テスト実行：00218_element_check_00194 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search28.print_word;
      print(searchlog.search28.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search28.print_word = testData1s;
      print(searchlog.search28.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search28.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search28.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search28.print_word = testData2s;
      print(searchlog.search28.print_word);
      expect(searchlog.search28.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search28.print_word = defalut;
      print(searchlog.search28.print_word);
      expect(searchlog.search28.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00218_element_check_00194 **********\n\n");
    });

    test('00219_element_check_00195', () async {
      print("\n********** テスト実行：00219_element_check_00195 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search28.description;
      print(searchlog.search28.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search28.description = testData1s;
      print(searchlog.search28.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search28.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search28.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search28.description = testData2s;
      print(searchlog.search28.description);
      expect(searchlog.search28.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search28.description = defalut;
      print(searchlog.search28.description);
      expect(searchlog.search28.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search28.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00219_element_check_00195 **********\n\n");
    });

    test('00220_element_check_00196', () async {
      print("\n********** テスト実行：00220_element_check_00196 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search31.typ;
      print(searchlog.search31.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search31.typ = testData1;
      print(searchlog.search31.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search31.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search31.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search31.typ = testData2;
      print(searchlog.search31.typ);
      expect(searchlog.search31.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search31.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search31.typ = defalut;
      print(searchlog.search31.typ);
      expect(searchlog.search31.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search31.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00220_element_check_00196 **********\n\n");
    });

    test('00221_element_check_00197', () async {
      print("\n********** テスト実行：00221_element_check_00197 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search31.ssd;
      print(searchlog.search31.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search31.ssd = testData1;
      print(searchlog.search31.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search31.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search31.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search31.ssd = testData2;
      print(searchlog.search31.ssd);
      expect(searchlog.search31.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search31.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search31.ssd = defalut;
      print(searchlog.search31.ssd);
      expect(searchlog.search31.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search31.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00221_element_check_00197 **********\n\n");
    });

    test('00222_element_check_00198', () async {
      print("\n********** テスト実行：00222_element_check_00198 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search31.title;
      print(searchlog.search31.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search31.title = testData1s;
      print(searchlog.search31.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search31.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search31.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search31.title = testData2s;
      print(searchlog.search31.title);
      expect(searchlog.search31.title == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search31.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search31.title = defalut;
      print(searchlog.search31.title);
      expect(searchlog.search31.title == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search31.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00222_element_check_00198 **********\n\n");
    });

    test('00223_element_check_00199', () async {
      print("\n********** テスト実行：00223_element_check_00199 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search31.description_cd;
      print(searchlog.search31.description_cd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search31.description_cd = testData1;
      print(searchlog.search31.description_cd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search31.description_cd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search31.description_cd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search31.description_cd = testData2;
      print(searchlog.search31.description_cd);
      expect(searchlog.search31.description_cd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search31.description_cd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search31.description_cd = defalut;
      print(searchlog.search31.description_cd);
      expect(searchlog.search31.description_cd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search31.description_cd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00223_element_check_00199 **********\n\n");
    });

    test('00224_element_check_00200', () async {
      print("\n********** テスト実行：00224_element_check_00200 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search32.typ;
      print(searchlog.search32.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search32.typ = testData1;
      print(searchlog.search32.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search32.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search32.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search32.typ = testData2;
      print(searchlog.search32.typ);
      expect(searchlog.search32.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search32.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search32.typ = defalut;
      print(searchlog.search32.typ);
      expect(searchlog.search32.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search32.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00224_element_check_00200 **********\n\n");
    });

    test('00225_element_check_00201', () async {
      print("\n********** テスト実行：00225_element_check_00201 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search32.ssd;
      print(searchlog.search32.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search32.ssd = testData1;
      print(searchlog.search32.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search32.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search32.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search32.ssd = testData2;
      print(searchlog.search32.ssd);
      expect(searchlog.search32.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search32.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search32.ssd = defalut;
      print(searchlog.search32.ssd);
      expect(searchlog.search32.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search32.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00225_element_check_00201 **********\n\n");
    });

    test('00226_element_check_00202', () async {
      print("\n********** テスト実行：00226_element_check_00202 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search32.title;
      print(searchlog.search32.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search32.title = testData1s;
      print(searchlog.search32.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search32.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search32.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search32.title = testData2s;
      print(searchlog.search32.title);
      expect(searchlog.search32.title == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search32.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search32.title = defalut;
      print(searchlog.search32.title);
      expect(searchlog.search32.title == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search32.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00226_element_check_00202 **********\n\n");
    });

    test('00227_element_check_00203', () async {
      print("\n********** テスト実行：00227_element_check_00203 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search32.description_cd;
      print(searchlog.search32.description_cd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search32.description_cd = testData1;
      print(searchlog.search32.description_cd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search32.description_cd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search32.description_cd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search32.description_cd = testData2;
      print(searchlog.search32.description_cd);
      expect(searchlog.search32.description_cd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search32.description_cd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search32.description_cd = defalut;
      print(searchlog.search32.description_cd);
      expect(searchlog.search32.description_cd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search32.description_cd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00227_element_check_00203 **********\n\n");
    });

    test('00228_element_check_00204', () async {
      print("\n********** テスト実行：00228_element_check_00204 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.file_name;
      print(searchlog.search33.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.file_name = testData1s;
      print(searchlog.search33.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.file_name = testData2s;
      print(searchlog.search33.file_name);
      expect(searchlog.search33.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.file_name = defalut;
      print(searchlog.search33.file_name);
      expect(searchlog.search33.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00228_element_check_00204 **********\n\n");
    });

    test('00229_element_check_00205', () async {
      print("\n********** テスト実行：00229_element_check_00205 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.typ;
      print(searchlog.search33.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.typ = testData1;
      print(searchlog.search33.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.typ = testData2;
      print(searchlog.search33.typ);
      expect(searchlog.search33.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.typ = defalut;
      print(searchlog.search33.typ);
      expect(searchlog.search33.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00229_element_check_00205 **********\n\n");
    });

    test('00230_element_check_00206', () async {
      print("\n********** テスト実行：00230_element_check_00206 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.ssd;
      print(searchlog.search33.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.ssd = testData1;
      print(searchlog.search33.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.ssd = testData2;
      print(searchlog.search33.ssd);
      expect(searchlog.search33.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.ssd = defalut;
      print(searchlog.search33.ssd);
      expect(searchlog.search33.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00230_element_check_00206 **********\n\n");
    });

    test('00231_element_check_00207', () async {
      print("\n********** テスト実行：00231_element_check_00207 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.out_count;
      print(searchlog.search33.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.out_count = testData1;
      print(searchlog.search33.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.out_count = testData2;
      print(searchlog.search33.out_count);
      expect(searchlog.search33.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.out_count = defalut;
      print(searchlog.search33.out_count);
      expect(searchlog.search33.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00231_element_check_00207 **********\n\n");
    });

    test('00232_element_check_00208', () async {
      print("\n********** テスト実行：00232_element_check_00208 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.print_word;
      print(searchlog.search33.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.print_word = testData1s;
      print(searchlog.search33.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.print_word = testData2s;
      print(searchlog.search33.print_word);
      expect(searchlog.search33.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.print_word = defalut;
      print(searchlog.search33.print_word);
      expect(searchlog.search33.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00232_element_check_00208 **********\n\n");
    });

    test('00233_element_check_00209', () async {
      print("\n********** テスト実行：00233_element_check_00209 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.print_value_ok;
      print(searchlog.search33.print_value_ok);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.print_value_ok = testData1s;
      print(searchlog.search33.print_value_ok);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.print_value_ok == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.print_value_ok == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.print_value_ok = testData2s;
      print(searchlog.search33.print_value_ok);
      expect(searchlog.search33.print_value_ok == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.print_value_ok == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.print_value_ok = defalut;
      print(searchlog.search33.print_value_ok);
      expect(searchlog.search33.print_value_ok == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.print_value_ok == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00233_element_check_00209 **********\n\n");
    });

    test('00234_element_check_00210', () async {
      print("\n********** テスト実行：00234_element_check_00210 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.print_value_ng;
      print(searchlog.search33.print_value_ng);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.print_value_ng = testData1s;
      print(searchlog.search33.print_value_ng);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.print_value_ng == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.print_value_ng == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.print_value_ng = testData2s;
      print(searchlog.search33.print_value_ng);
      expect(searchlog.search33.print_value_ng == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.print_value_ng == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.print_value_ng = defalut;
      print(searchlog.search33.print_value_ng);
      expect(searchlog.search33.print_value_ng == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.print_value_ng == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00234_element_check_00210 **********\n\n");
    });

    test('00235_element_check_00211', () async {
      print("\n********** テスト実行：00235_element_check_00211 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.smart_word;
      print(searchlog.search33.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.smart_word = testData1s;
      print(searchlog.search33.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.smart_word = testData2s;
      print(searchlog.search33.smart_word);
      expect(searchlog.search33.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.smart_word = defalut;
      print(searchlog.search33.smart_word);
      expect(searchlog.search33.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00235_element_check_00211 **********\n\n");
    });

    test('00236_element_check_00212', () async {
      print("\n********** テスト実行：00236_element_check_00212 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.smart_word_sata;
      print(searchlog.search33.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.smart_word_sata = testData1s;
      print(searchlog.search33.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.smart_word_sata = testData2s;
      print(searchlog.search33.smart_word_sata);
      expect(searchlog.search33.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.smart_word_sata = defalut;
      print(searchlog.search33.smart_word_sata);
      expect(searchlog.search33.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00236_element_check_00212 **********\n\n");
    });

    test('00237_element_check_00213', () async {
      print("\n********** テスト実行：00237_element_check_00213 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search33.description;
      print(searchlog.search33.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search33.description = testData1s;
      print(searchlog.search33.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search33.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search33.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search33.description = testData2s;
      print(searchlog.search33.description);
      expect(searchlog.search33.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search33.description = defalut;
      print(searchlog.search33.description);
      expect(searchlog.search33.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search33.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00237_element_check_00213 **********\n\n");
    });

    test('00238_element_check_00214', () async {
      print("\n********** テスト実行：00238_element_check_00214 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.file_name;
      print(searchlog.search34.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.file_name = testData1s;
      print(searchlog.search34.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.file_name = testData2s;
      print(searchlog.search34.file_name);
      expect(searchlog.search34.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.file_name = defalut;
      print(searchlog.search34.file_name);
      expect(searchlog.search34.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00238_element_check_00214 **********\n\n");
    });

    test('00239_element_check_00215', () async {
      print("\n********** テスト実行：00239_element_check_00215 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.typ;
      print(searchlog.search34.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.typ = testData1;
      print(searchlog.search34.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.typ = testData2;
      print(searchlog.search34.typ);
      expect(searchlog.search34.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.typ = defalut;
      print(searchlog.search34.typ);
      expect(searchlog.search34.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00239_element_check_00215 **********\n\n");
    });

    test('00240_element_check_00216', () async {
      print("\n********** テスト実行：00240_element_check_00216 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.ssd;
      print(searchlog.search34.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.ssd = testData1;
      print(searchlog.search34.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.ssd = testData2;
      print(searchlog.search34.ssd);
      expect(searchlog.search34.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.ssd = defalut;
      print(searchlog.search34.ssd);
      expect(searchlog.search34.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00240_element_check_00216 **********\n\n");
    });

    test('00241_element_check_00217', () async {
      print("\n********** テスト実行：00241_element_check_00217 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.out_count;
      print(searchlog.search34.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.out_count = testData1;
      print(searchlog.search34.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.out_count = testData2;
      print(searchlog.search34.out_count);
      expect(searchlog.search34.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.out_count = defalut;
      print(searchlog.search34.out_count);
      expect(searchlog.search34.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00241_element_check_00217 **********\n\n");
    });

    test('00242_element_check_00218', () async {
      print("\n********** テスト実行：00242_element_check_00218 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.print_word;
      print(searchlog.search34.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.print_word = testData1s;
      print(searchlog.search34.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.print_word = testData2s;
      print(searchlog.search34.print_word);
      expect(searchlog.search34.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.print_word = defalut;
      print(searchlog.search34.print_word);
      expect(searchlog.search34.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00242_element_check_00218 **********\n\n");
    });

    test('00243_element_check_00219', () async {
      print("\n********** テスト実行：00243_element_check_00219 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.print_value_ok;
      print(searchlog.search34.print_value_ok);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.print_value_ok = testData1s;
      print(searchlog.search34.print_value_ok);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.print_value_ok == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.print_value_ok == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.print_value_ok = testData2s;
      print(searchlog.search34.print_value_ok);
      expect(searchlog.search34.print_value_ok == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.print_value_ok == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.print_value_ok = defalut;
      print(searchlog.search34.print_value_ok);
      expect(searchlog.search34.print_value_ok == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.print_value_ok == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00243_element_check_00219 **********\n\n");
    });

    test('00244_element_check_00220', () async {
      print("\n********** テスト実行：00244_element_check_00220 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.print_value_ng;
      print(searchlog.search34.print_value_ng);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.print_value_ng = testData1s;
      print(searchlog.search34.print_value_ng);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.print_value_ng == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.print_value_ng == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.print_value_ng = testData2s;
      print(searchlog.search34.print_value_ng);
      expect(searchlog.search34.print_value_ng == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.print_value_ng == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.print_value_ng = defalut;
      print(searchlog.search34.print_value_ng);
      expect(searchlog.search34.print_value_ng == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.print_value_ng == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00244_element_check_00220 **********\n\n");
    });

    test('00245_element_check_00221', () async {
      print("\n********** テスト実行：00245_element_check_00221 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.smart_word;
      print(searchlog.search34.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.smart_word = testData1s;
      print(searchlog.search34.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.smart_word = testData2s;
      print(searchlog.search34.smart_word);
      expect(searchlog.search34.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.smart_word = defalut;
      print(searchlog.search34.smart_word);
      expect(searchlog.search34.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00245_element_check_00221 **********\n\n");
    });

    test('00246_element_check_00222', () async {
      print("\n********** テスト実行：00246_element_check_00222 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.smart_word_sata;
      print(searchlog.search34.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.smart_word_sata = testData1s;
      print(searchlog.search34.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.smart_word_sata = testData2s;
      print(searchlog.search34.smart_word_sata);
      expect(searchlog.search34.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.smart_word_sata = defalut;
      print(searchlog.search34.smart_word_sata);
      expect(searchlog.search34.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00246_element_check_00222 **********\n\n");
    });

    test('00247_element_check_00223', () async {
      print("\n********** テスト実行：00247_element_check_00223 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search34.description;
      print(searchlog.search34.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search34.description = testData1s;
      print(searchlog.search34.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search34.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search34.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search34.description = testData2s;
      print(searchlog.search34.description);
      expect(searchlog.search34.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search34.description = defalut;
      print(searchlog.search34.description);
      expect(searchlog.search34.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search34.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00247_element_check_00223 **********\n\n");
    });

    test('00248_element_check_00224', () async {
      print("\n********** テスト実行：00248_element_check_00224 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.file_name;
      print(searchlog.search35.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.file_name = testData1s;
      print(searchlog.search35.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.file_name = testData2s;
      print(searchlog.search35.file_name);
      expect(searchlog.search35.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.file_name = defalut;
      print(searchlog.search35.file_name);
      expect(searchlog.search35.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00248_element_check_00224 **********\n\n");
    });

    test('00249_element_check_00225', () async {
      print("\n********** テスト実行：00249_element_check_00225 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.typ;
      print(searchlog.search35.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.typ = testData1;
      print(searchlog.search35.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.typ = testData2;
      print(searchlog.search35.typ);
      expect(searchlog.search35.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.typ = defalut;
      print(searchlog.search35.typ);
      expect(searchlog.search35.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00249_element_check_00225 **********\n\n");
    });

    test('00250_element_check_00226', () async {
      print("\n********** テスト実行：00250_element_check_00226 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.ssd;
      print(searchlog.search35.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.ssd = testData1;
      print(searchlog.search35.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.ssd = testData2;
      print(searchlog.search35.ssd);
      expect(searchlog.search35.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.ssd = defalut;
      print(searchlog.search35.ssd);
      expect(searchlog.search35.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00250_element_check_00226 **********\n\n");
    });

    test('00251_element_check_00227', () async {
      print("\n********** テスト実行：00251_element_check_00227 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.out_count;
      print(searchlog.search35.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.out_count = testData1;
      print(searchlog.search35.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.out_count = testData2;
      print(searchlog.search35.out_count);
      expect(searchlog.search35.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.out_count = defalut;
      print(searchlog.search35.out_count);
      expect(searchlog.search35.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00251_element_check_00227 **********\n\n");
    });

    test('00252_element_check_00228', () async {
      print("\n********** テスト実行：00252_element_check_00228 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.print_word;
      print(searchlog.search35.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.print_word = testData1s;
      print(searchlog.search35.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.print_word = testData2s;
      print(searchlog.search35.print_word);
      expect(searchlog.search35.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.print_word = defalut;
      print(searchlog.search35.print_word);
      expect(searchlog.search35.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00252_element_check_00228 **********\n\n");
    });

    test('00253_element_check_00229', () async {
      print("\n********** テスト実行：00253_element_check_00229 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.print_value_ok;
      print(searchlog.search35.print_value_ok);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.print_value_ok = testData1s;
      print(searchlog.search35.print_value_ok);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.print_value_ok == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.print_value_ok == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.print_value_ok = testData2s;
      print(searchlog.search35.print_value_ok);
      expect(searchlog.search35.print_value_ok == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.print_value_ok == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.print_value_ok = defalut;
      print(searchlog.search35.print_value_ok);
      expect(searchlog.search35.print_value_ok == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.print_value_ok == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00253_element_check_00229 **********\n\n");
    });

    test('00254_element_check_00230', () async {
      print("\n********** テスト実行：00254_element_check_00230 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.print_value_ng;
      print(searchlog.search35.print_value_ng);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.print_value_ng = testData1s;
      print(searchlog.search35.print_value_ng);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.print_value_ng == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.print_value_ng == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.print_value_ng = testData2s;
      print(searchlog.search35.print_value_ng);
      expect(searchlog.search35.print_value_ng == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.print_value_ng == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.print_value_ng = defalut;
      print(searchlog.search35.print_value_ng);
      expect(searchlog.search35.print_value_ng == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.print_value_ng == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00254_element_check_00230 **********\n\n");
    });

    test('00255_element_check_00231', () async {
      print("\n********** テスト実行：00255_element_check_00231 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.smart_word;
      print(searchlog.search35.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.smart_word = testData1s;
      print(searchlog.search35.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.smart_word = testData2s;
      print(searchlog.search35.smart_word);
      expect(searchlog.search35.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.smart_word = defalut;
      print(searchlog.search35.smart_word);
      expect(searchlog.search35.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00255_element_check_00231 **********\n\n");
    });

    test('00256_element_check_00232', () async {
      print("\n********** テスト実行：00256_element_check_00232 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.smart_word_sata;
      print(searchlog.search35.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.smart_word_sata = testData1s;
      print(searchlog.search35.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.smart_word_sata = testData2s;
      print(searchlog.search35.smart_word_sata);
      expect(searchlog.search35.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.smart_word_sata = defalut;
      print(searchlog.search35.smart_word_sata);
      expect(searchlog.search35.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00256_element_check_00232 **********\n\n");
    });

    test('00257_element_check_00233', () async {
      print("\n********** テスト実行：00257_element_check_00233 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search35.description;
      print(searchlog.search35.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search35.description = testData1s;
      print(searchlog.search35.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search35.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search35.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search35.description = testData2s;
      print(searchlog.search35.description);
      expect(searchlog.search35.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search35.description = defalut;
      print(searchlog.search35.description);
      expect(searchlog.search35.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search35.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00257_element_check_00233 **********\n\n");
    });

    test('00258_element_check_00234', () async {
      print("\n********** テスト実行：00258_element_check_00234 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search36.file_name;
      print(searchlog.search36.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search36.file_name = testData1s;
      print(searchlog.search36.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search36.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search36.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search36.file_name = testData2s;
      print(searchlog.search36.file_name);
      expect(searchlog.search36.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search36.file_name = defalut;
      print(searchlog.search36.file_name);
      expect(searchlog.search36.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00258_element_check_00234 **********\n\n");
    });

    test('00259_element_check_00235', () async {
      print("\n********** テスト実行：00259_element_check_00235 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search36.typ;
      print(searchlog.search36.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search36.typ = testData1;
      print(searchlog.search36.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search36.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search36.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search36.typ = testData2;
      print(searchlog.search36.typ);
      expect(searchlog.search36.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search36.typ = defalut;
      print(searchlog.search36.typ);
      expect(searchlog.search36.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00259_element_check_00235 **********\n\n");
    });

    test('00260_element_check_00236', () async {
      print("\n********** テスト実行：00260_element_check_00236 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search36.ssd;
      print(searchlog.search36.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search36.ssd = testData1;
      print(searchlog.search36.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search36.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search36.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search36.ssd = testData2;
      print(searchlog.search36.ssd);
      expect(searchlog.search36.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search36.ssd = defalut;
      print(searchlog.search36.ssd);
      expect(searchlog.search36.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00260_element_check_00236 **********\n\n");
    });

    test('00261_element_check_00237', () async {
      print("\n********** テスト実行：00261_element_check_00237 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search36.out_count;
      print(searchlog.search36.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search36.out_count = testData1;
      print(searchlog.search36.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search36.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search36.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search36.out_count = testData2;
      print(searchlog.search36.out_count);
      expect(searchlog.search36.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search36.out_count = defalut;
      print(searchlog.search36.out_count);
      expect(searchlog.search36.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00261_element_check_00237 **********\n\n");
    });

    test('00262_element_check_00238', () async {
      print("\n********** テスト実行：00262_element_check_00238 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search36.print_word;
      print(searchlog.search36.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search36.print_word = testData1s;
      print(searchlog.search36.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search36.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search36.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search36.print_word = testData2s;
      print(searchlog.search36.print_word);
      expect(searchlog.search36.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search36.print_word = defalut;
      print(searchlog.search36.print_word);
      expect(searchlog.search36.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00262_element_check_00238 **********\n\n");
    });

    test('00263_element_check_00239', () async {
      print("\n********** テスト実行：00263_element_check_00239 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search36.smart_word;
      print(searchlog.search36.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search36.smart_word = testData1s;
      print(searchlog.search36.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search36.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search36.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search36.smart_word = testData2s;
      print(searchlog.search36.smart_word);
      expect(searchlog.search36.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search36.smart_word = defalut;
      print(searchlog.search36.smart_word);
      expect(searchlog.search36.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00263_element_check_00239 **********\n\n");
    });

    test('00264_element_check_00240', () async {
      print("\n********** テスト実行：00264_element_check_00240 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search36.smart_word_sata;
      print(searchlog.search36.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search36.smart_word_sata = testData1s;
      print(searchlog.search36.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search36.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search36.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search36.smart_word_sata = testData2s;
      print(searchlog.search36.smart_word_sata);
      expect(searchlog.search36.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search36.smart_word_sata = defalut;
      print(searchlog.search36.smart_word_sata);
      expect(searchlog.search36.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00264_element_check_00240 **********\n\n");
    });

    test('00265_element_check_00241', () async {
      print("\n********** テスト実行：00265_element_check_00241 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search36.description;
      print(searchlog.search36.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search36.description = testData1s;
      print(searchlog.search36.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search36.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search36.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search36.description = testData2s;
      print(searchlog.search36.description);
      expect(searchlog.search36.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search36.description = defalut;
      print(searchlog.search36.description);
      expect(searchlog.search36.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search36.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00265_element_check_00241 **********\n\n");
    });

    test('00266_element_check_00242', () async {
      print("\n********** テスト実行：00266_element_check_00242 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.file_name;
      print(searchlog.search37.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.file_name = testData1s;
      print(searchlog.search37.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.file_name = testData2s;
      print(searchlog.search37.file_name);
      expect(searchlog.search37.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.file_name = defalut;
      print(searchlog.search37.file_name);
      expect(searchlog.search37.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00266_element_check_00242 **********\n\n");
    });

    test('00267_element_check_00243', () async {
      print("\n********** テスト実行：00267_element_check_00243 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.typ;
      print(searchlog.search37.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.typ = testData1;
      print(searchlog.search37.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.typ = testData2;
      print(searchlog.search37.typ);
      expect(searchlog.search37.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.typ = defalut;
      print(searchlog.search37.typ);
      expect(searchlog.search37.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00267_element_check_00243 **********\n\n");
    });

    test('00268_element_check_00244', () async {
      print("\n********** テスト実行：00268_element_check_00244 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.ssd;
      print(searchlog.search37.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.ssd = testData1;
      print(searchlog.search37.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.ssd = testData2;
      print(searchlog.search37.ssd);
      expect(searchlog.search37.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.ssd = defalut;
      print(searchlog.search37.ssd);
      expect(searchlog.search37.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00268_element_check_00244 **********\n\n");
    });

    test('00269_element_check_00245', () async {
      print("\n********** テスト実行：00269_element_check_00245 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.out_count;
      print(searchlog.search37.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.out_count = testData1;
      print(searchlog.search37.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.out_count = testData2;
      print(searchlog.search37.out_count);
      expect(searchlog.search37.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.out_count = defalut;
      print(searchlog.search37.out_count);
      expect(searchlog.search37.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00269_element_check_00245 **********\n\n");
    });

    test('00270_element_check_00246', () async {
      print("\n********** テスト実行：00270_element_check_00246 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.print_word;
      print(searchlog.search37.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.print_word = testData1s;
      print(searchlog.search37.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.print_word = testData2s;
      print(searchlog.search37.print_word);
      expect(searchlog.search37.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.print_word = defalut;
      print(searchlog.search37.print_word);
      expect(searchlog.search37.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00270_element_check_00246 **********\n\n");
    });

    test('00271_element_check_00247', () async {
      print("\n********** テスト実行：00271_element_check_00247 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.print_value_ok;
      print(searchlog.search37.print_value_ok);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.print_value_ok = testData1s;
      print(searchlog.search37.print_value_ok);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.print_value_ok == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.print_value_ok == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.print_value_ok = testData2s;
      print(searchlog.search37.print_value_ok);
      expect(searchlog.search37.print_value_ok == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.print_value_ok == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.print_value_ok = defalut;
      print(searchlog.search37.print_value_ok);
      expect(searchlog.search37.print_value_ok == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.print_value_ok == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00271_element_check_00247 **********\n\n");
    });

    test('00272_element_check_00248', () async {
      print("\n********** テスト実行：00272_element_check_00248 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.print_value_ng;
      print(searchlog.search37.print_value_ng);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.print_value_ng = testData1s;
      print(searchlog.search37.print_value_ng);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.print_value_ng == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.print_value_ng == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.print_value_ng = testData2s;
      print(searchlog.search37.print_value_ng);
      expect(searchlog.search37.print_value_ng == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.print_value_ng == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.print_value_ng = defalut;
      print(searchlog.search37.print_value_ng);
      expect(searchlog.search37.print_value_ng == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.print_value_ng == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00272_element_check_00248 **********\n\n");
    });

    test('00273_element_check_00249', () async {
      print("\n********** テスト実行：00273_element_check_00249 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.smart_word;
      print(searchlog.search37.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.smart_word = testData1s;
      print(searchlog.search37.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.smart_word = testData2s;
      print(searchlog.search37.smart_word);
      expect(searchlog.search37.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.smart_word = defalut;
      print(searchlog.search37.smart_word);
      expect(searchlog.search37.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00273_element_check_00249 **********\n\n");
    });

    test('00274_element_check_00250', () async {
      print("\n********** テスト実行：00274_element_check_00250 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.smart_word_sata;
      print(searchlog.search37.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.smart_word_sata = testData1s;
      print(searchlog.search37.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.smart_word_sata = testData2s;
      print(searchlog.search37.smart_word_sata);
      expect(searchlog.search37.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.smart_word_sata = defalut;
      print(searchlog.search37.smart_word_sata);
      expect(searchlog.search37.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00274_element_check_00250 **********\n\n");
    });

    test('00275_element_check_00251', () async {
      print("\n********** テスト実行：00275_element_check_00251 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search37.description;
      print(searchlog.search37.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search37.description = testData1s;
      print(searchlog.search37.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search37.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search37.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search37.description = testData2s;
      print(searchlog.search37.description);
      expect(searchlog.search37.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search37.description = defalut;
      print(searchlog.search37.description);
      expect(searchlog.search37.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search37.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00275_element_check_00251 **********\n\n");
    });

    test('00276_element_check_00252', () async {
      print("\n********** テスト実行：00276_element_check_00252 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search38.file_name;
      print(searchlog.search38.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search38.file_name = testData1s;
      print(searchlog.search38.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search38.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search38.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search38.file_name = testData2s;
      print(searchlog.search38.file_name);
      expect(searchlog.search38.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search38.file_name = defalut;
      print(searchlog.search38.file_name);
      expect(searchlog.search38.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00276_element_check_00252 **********\n\n");
    });

    test('00277_element_check_00253', () async {
      print("\n********** テスト実行：00277_element_check_00253 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search38.typ;
      print(searchlog.search38.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search38.typ = testData1;
      print(searchlog.search38.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search38.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search38.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search38.typ = testData2;
      print(searchlog.search38.typ);
      expect(searchlog.search38.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search38.typ = defalut;
      print(searchlog.search38.typ);
      expect(searchlog.search38.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00277_element_check_00253 **********\n\n");
    });

    test('00278_element_check_00254', () async {
      print("\n********** テスト実行：00278_element_check_00254 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search38.ssd;
      print(searchlog.search38.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search38.ssd = testData1;
      print(searchlog.search38.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search38.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search38.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search38.ssd = testData2;
      print(searchlog.search38.ssd);
      expect(searchlog.search38.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search38.ssd = defalut;
      print(searchlog.search38.ssd);
      expect(searchlog.search38.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00278_element_check_00254 **********\n\n");
    });

    test('00279_element_check_00255', () async {
      print("\n********** テスト実行：00279_element_check_00255 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search38.out_count;
      print(searchlog.search38.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search38.out_count = testData1;
      print(searchlog.search38.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search38.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search38.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search38.out_count = testData2;
      print(searchlog.search38.out_count);
      expect(searchlog.search38.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search38.out_count = defalut;
      print(searchlog.search38.out_count);
      expect(searchlog.search38.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00279_element_check_00255 **********\n\n");
    });

    test('00280_element_check_00256', () async {
      print("\n********** テスト実行：00280_element_check_00256 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search38.print_word;
      print(searchlog.search38.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search38.print_word = testData1s;
      print(searchlog.search38.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search38.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search38.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search38.print_word = testData2s;
      print(searchlog.search38.print_word);
      expect(searchlog.search38.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search38.print_word = defalut;
      print(searchlog.search38.print_word);
      expect(searchlog.search38.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00280_element_check_00256 **********\n\n");
    });

    test('00281_element_check_00257', () async {
      print("\n********** テスト実行：00281_element_check_00257 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search38.smart_word;
      print(searchlog.search38.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search38.smart_word = testData1s;
      print(searchlog.search38.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search38.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search38.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search38.smart_word = testData2s;
      print(searchlog.search38.smart_word);
      expect(searchlog.search38.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search38.smart_word = defalut;
      print(searchlog.search38.smart_word);
      expect(searchlog.search38.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00281_element_check_00257 **********\n\n");
    });

    test('00282_element_check_00258', () async {
      print("\n********** テスト実行：00282_element_check_00258 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search38.smart_word_sata;
      print(searchlog.search38.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search38.smart_word_sata = testData1s;
      print(searchlog.search38.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search38.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search38.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search38.smart_word_sata = testData2s;
      print(searchlog.search38.smart_word_sata);
      expect(searchlog.search38.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search38.smart_word_sata = defalut;
      print(searchlog.search38.smart_word_sata);
      expect(searchlog.search38.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00282_element_check_00258 **********\n\n");
    });

    test('00283_element_check_00259', () async {
      print("\n********** テスト実行：00283_element_check_00259 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search38.description;
      print(searchlog.search38.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search38.description = testData1s;
      print(searchlog.search38.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search38.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search38.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search38.description = testData2s;
      print(searchlog.search38.description);
      expect(searchlog.search38.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search38.description = defalut;
      print(searchlog.search38.description);
      expect(searchlog.search38.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search38.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00283_element_check_00259 **********\n\n");
    });

    test('00284_element_check_00260', () async {
      print("\n********** テスト実行：00284_element_check_00260 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.file_name;
      print(searchlog.search39.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.file_name = testData1s;
      print(searchlog.search39.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.file_name = testData2s;
      print(searchlog.search39.file_name);
      expect(searchlog.search39.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.file_name = defalut;
      print(searchlog.search39.file_name);
      expect(searchlog.search39.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00284_element_check_00260 **********\n\n");
    });

    test('00285_element_check_00261', () async {
      print("\n********** テスト実行：00285_element_check_00261 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.typ;
      print(searchlog.search39.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.typ = testData1;
      print(searchlog.search39.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.typ = testData2;
      print(searchlog.search39.typ);
      expect(searchlog.search39.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.typ = defalut;
      print(searchlog.search39.typ);
      expect(searchlog.search39.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00285_element_check_00261 **********\n\n");
    });

    test('00286_element_check_00262', () async {
      print("\n********** テスト実行：00286_element_check_00262 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.ssd;
      print(searchlog.search39.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.ssd = testData1;
      print(searchlog.search39.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.ssd = testData2;
      print(searchlog.search39.ssd);
      expect(searchlog.search39.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.ssd = defalut;
      print(searchlog.search39.ssd);
      expect(searchlog.search39.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00286_element_check_00262 **********\n\n");
    });

    test('00287_element_check_00263', () async {
      print("\n********** テスト実行：00287_element_check_00263 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.out_count;
      print(searchlog.search39.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.out_count = testData1;
      print(searchlog.search39.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.out_count = testData2;
      print(searchlog.search39.out_count);
      expect(searchlog.search39.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.out_count = defalut;
      print(searchlog.search39.out_count);
      expect(searchlog.search39.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00287_element_check_00263 **********\n\n");
    });

    test('00288_element_check_00264', () async {
      print("\n********** テスト実行：00288_element_check_00264 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.print_word;
      print(searchlog.search39.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.print_word = testData1s;
      print(searchlog.search39.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.print_word = testData2s;
      print(searchlog.search39.print_word);
      expect(searchlog.search39.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.print_word = defalut;
      print(searchlog.search39.print_word);
      expect(searchlog.search39.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00288_element_check_00264 **********\n\n");
    });

    test('00289_element_check_00265', () async {
      print("\n********** テスト実行：00289_element_check_00265 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.print_value_ok;
      print(searchlog.search39.print_value_ok);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.print_value_ok = testData1s;
      print(searchlog.search39.print_value_ok);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.print_value_ok == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.print_value_ok == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.print_value_ok = testData2s;
      print(searchlog.search39.print_value_ok);
      expect(searchlog.search39.print_value_ok == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.print_value_ok == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.print_value_ok = defalut;
      print(searchlog.search39.print_value_ok);
      expect(searchlog.search39.print_value_ok == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.print_value_ok == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00289_element_check_00265 **********\n\n");
    });

    test('00290_element_check_00266', () async {
      print("\n********** テスト実行：00290_element_check_00266 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.print_value_ng;
      print(searchlog.search39.print_value_ng);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.print_value_ng = testData1s;
      print(searchlog.search39.print_value_ng);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.print_value_ng == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.print_value_ng == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.print_value_ng = testData2s;
      print(searchlog.search39.print_value_ng);
      expect(searchlog.search39.print_value_ng == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.print_value_ng == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.print_value_ng = defalut;
      print(searchlog.search39.print_value_ng);
      expect(searchlog.search39.print_value_ng == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.print_value_ng == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00290_element_check_00266 **********\n\n");
    });

    test('00291_element_check_00267', () async {
      print("\n********** テスト実行：00291_element_check_00267 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.smart_word;
      print(searchlog.search39.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.smart_word = testData1s;
      print(searchlog.search39.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.smart_word = testData2s;
      print(searchlog.search39.smart_word);
      expect(searchlog.search39.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.smart_word = defalut;
      print(searchlog.search39.smart_word);
      expect(searchlog.search39.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00291_element_check_00267 **********\n\n");
    });

    test('00292_element_check_00268', () async {
      print("\n********** テスト実行：00292_element_check_00268 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.smart_word_sata;
      print(searchlog.search39.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.smart_word_sata = testData1s;
      print(searchlog.search39.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.smart_word_sata = testData2s;
      print(searchlog.search39.smart_word_sata);
      expect(searchlog.search39.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.smart_word_sata = defalut;
      print(searchlog.search39.smart_word_sata);
      expect(searchlog.search39.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00292_element_check_00268 **********\n\n");
    });

    test('00293_element_check_00269', () async {
      print("\n********** テスト実行：00293_element_check_00269 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search39.description;
      print(searchlog.search39.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search39.description = testData1s;
      print(searchlog.search39.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search39.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search39.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search39.description = testData2s;
      print(searchlog.search39.description);
      expect(searchlog.search39.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search39.description = defalut;
      print(searchlog.search39.description);
      expect(searchlog.search39.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search39.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00293_element_check_00269 **********\n\n");
    });

    test('00294_element_check_00270', () async {
      print("\n********** テスト実行：00294_element_check_00270 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.file_name;
      print(searchlog.search40.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.file_name = testData1s;
      print(searchlog.search40.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.file_name = testData2s;
      print(searchlog.search40.file_name);
      expect(searchlog.search40.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.file_name = defalut;
      print(searchlog.search40.file_name);
      expect(searchlog.search40.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00294_element_check_00270 **********\n\n");
    });

    test('00295_element_check_00271', () async {
      print("\n********** テスト実行：00295_element_check_00271 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.typ;
      print(searchlog.search40.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.typ = testData1;
      print(searchlog.search40.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.typ = testData2;
      print(searchlog.search40.typ);
      expect(searchlog.search40.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.typ = defalut;
      print(searchlog.search40.typ);
      expect(searchlog.search40.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00295_element_check_00271 **********\n\n");
    });

    test('00296_element_check_00272', () async {
      print("\n********** テスト実行：00296_element_check_00272 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.ssd;
      print(searchlog.search40.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.ssd = testData1;
      print(searchlog.search40.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.ssd = testData2;
      print(searchlog.search40.ssd);
      expect(searchlog.search40.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.ssd = defalut;
      print(searchlog.search40.ssd);
      expect(searchlog.search40.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00296_element_check_00272 **********\n\n");
    });

    test('00297_element_check_00273', () async {
      print("\n********** テスト実行：00297_element_check_00273 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.out_count;
      print(searchlog.search40.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.out_count = testData1;
      print(searchlog.search40.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.out_count = testData2;
      print(searchlog.search40.out_count);
      expect(searchlog.search40.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.out_count = defalut;
      print(searchlog.search40.out_count);
      expect(searchlog.search40.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00297_element_check_00273 **********\n\n");
    });

    test('00298_element_check_00274', () async {
      print("\n********** テスト実行：00298_element_check_00274 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.print_word;
      print(searchlog.search40.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.print_word = testData1s;
      print(searchlog.search40.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.print_word = testData2s;
      print(searchlog.search40.print_word);
      expect(searchlog.search40.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.print_word = defalut;
      print(searchlog.search40.print_word);
      expect(searchlog.search40.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00298_element_check_00274 **********\n\n");
    });

    test('00299_element_check_00275', () async {
      print("\n********** テスト実行：00299_element_check_00275 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.print_value_ok;
      print(searchlog.search40.print_value_ok);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.print_value_ok = testData1s;
      print(searchlog.search40.print_value_ok);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.print_value_ok == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.print_value_ok == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.print_value_ok = testData2s;
      print(searchlog.search40.print_value_ok);
      expect(searchlog.search40.print_value_ok == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.print_value_ok == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.print_value_ok = defalut;
      print(searchlog.search40.print_value_ok);
      expect(searchlog.search40.print_value_ok == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.print_value_ok == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00299_element_check_00275 **********\n\n");
    });

    test('00300_element_check_00276', () async {
      print("\n********** テスト実行：00300_element_check_00276 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.print_value_ng;
      print(searchlog.search40.print_value_ng);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.print_value_ng = testData1s;
      print(searchlog.search40.print_value_ng);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.print_value_ng == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.print_value_ng == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.print_value_ng = testData2s;
      print(searchlog.search40.print_value_ng);
      expect(searchlog.search40.print_value_ng == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.print_value_ng == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.print_value_ng = defalut;
      print(searchlog.search40.print_value_ng);
      expect(searchlog.search40.print_value_ng == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.print_value_ng == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00300_element_check_00276 **********\n\n");
    });

    test('00301_element_check_00277', () async {
      print("\n********** テスト実行：00301_element_check_00277 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.smart_word;
      print(searchlog.search40.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.smart_word = testData1s;
      print(searchlog.search40.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.smart_word = testData2s;
      print(searchlog.search40.smart_word);
      expect(searchlog.search40.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.smart_word = defalut;
      print(searchlog.search40.smart_word);
      expect(searchlog.search40.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00301_element_check_00277 **********\n\n");
    });

    test('00302_element_check_00278', () async {
      print("\n********** テスト実行：00302_element_check_00278 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.smart_word_sata;
      print(searchlog.search40.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.smart_word_sata = testData1s;
      print(searchlog.search40.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.smart_word_sata = testData2s;
      print(searchlog.search40.smart_word_sata);
      expect(searchlog.search40.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.smart_word_sata = defalut;
      print(searchlog.search40.smart_word_sata);
      expect(searchlog.search40.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00302_element_check_00278 **********\n\n");
    });

    test('00303_element_check_00279', () async {
      print("\n********** テスト実行：00303_element_check_00279 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search40.description;
      print(searchlog.search40.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search40.description = testData1s;
      print(searchlog.search40.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search40.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search40.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search40.description = testData2s;
      print(searchlog.search40.description);
      expect(searchlog.search40.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search40.description = defalut;
      print(searchlog.search40.description);
      expect(searchlog.search40.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search40.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00303_element_check_00279 **********\n\n");
    });

    test('00304_element_check_00280', () async {
      print("\n********** テスト実行：00304_element_check_00280 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.file_name;
      print(searchlog.search41.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.file_name = testData1s;
      print(searchlog.search41.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.file_name = testData2s;
      print(searchlog.search41.file_name);
      expect(searchlog.search41.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.file_name = defalut;
      print(searchlog.search41.file_name);
      expect(searchlog.search41.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00304_element_check_00280 **********\n\n");
    });

    test('00305_element_check_00281', () async {
      print("\n********** テスト実行：00305_element_check_00281 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.typ;
      print(searchlog.search41.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.typ = testData1;
      print(searchlog.search41.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.typ = testData2;
      print(searchlog.search41.typ);
      expect(searchlog.search41.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.typ = defalut;
      print(searchlog.search41.typ);
      expect(searchlog.search41.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00305_element_check_00281 **********\n\n");
    });

    test('00306_element_check_00282', () async {
      print("\n********** テスト実行：00306_element_check_00282 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.ssd;
      print(searchlog.search41.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.ssd = testData1;
      print(searchlog.search41.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.ssd = testData2;
      print(searchlog.search41.ssd);
      expect(searchlog.search41.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.ssd = defalut;
      print(searchlog.search41.ssd);
      expect(searchlog.search41.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00306_element_check_00282 **********\n\n");
    });

    test('00307_element_check_00283', () async {
      print("\n********** テスト実行：00307_element_check_00283 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.out_count;
      print(searchlog.search41.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.out_count = testData1;
      print(searchlog.search41.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.out_count = testData2;
      print(searchlog.search41.out_count);
      expect(searchlog.search41.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.out_count = defalut;
      print(searchlog.search41.out_count);
      expect(searchlog.search41.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00307_element_check_00283 **********\n\n");
    });

    test('00308_element_check_00284', () async {
      print("\n********** テスト実行：00308_element_check_00284 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.print_word;
      print(searchlog.search41.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.print_word = testData1s;
      print(searchlog.search41.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.print_word = testData2s;
      print(searchlog.search41.print_word);
      expect(searchlog.search41.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.print_word = defalut;
      print(searchlog.search41.print_word);
      expect(searchlog.search41.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00308_element_check_00284 **********\n\n");
    });

    test('00309_element_check_00285', () async {
      print("\n********** テスト実行：00309_element_check_00285 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.print_value_ok;
      print(searchlog.search41.print_value_ok);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.print_value_ok = testData1s;
      print(searchlog.search41.print_value_ok);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.print_value_ok == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.print_value_ok == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.print_value_ok = testData2s;
      print(searchlog.search41.print_value_ok);
      expect(searchlog.search41.print_value_ok == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.print_value_ok == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.print_value_ok = defalut;
      print(searchlog.search41.print_value_ok);
      expect(searchlog.search41.print_value_ok == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.print_value_ok == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00309_element_check_00285 **********\n\n");
    });

    test('00310_element_check_00286', () async {
      print("\n********** テスト実行：00310_element_check_00286 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.print_value_ng;
      print(searchlog.search41.print_value_ng);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.print_value_ng = testData1s;
      print(searchlog.search41.print_value_ng);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.print_value_ng == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.print_value_ng == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.print_value_ng = testData2s;
      print(searchlog.search41.print_value_ng);
      expect(searchlog.search41.print_value_ng == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.print_value_ng == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.print_value_ng = defalut;
      print(searchlog.search41.print_value_ng);
      expect(searchlog.search41.print_value_ng == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.print_value_ng == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00310_element_check_00286 **********\n\n");
    });

    test('00311_element_check_00287', () async {
      print("\n********** テスト実行：00311_element_check_00287 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.smart_word;
      print(searchlog.search41.smart_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.smart_word = testData1s;
      print(searchlog.search41.smart_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.smart_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.smart_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.smart_word = testData2s;
      print(searchlog.search41.smart_word);
      expect(searchlog.search41.smart_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.smart_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.smart_word = defalut;
      print(searchlog.search41.smart_word);
      expect(searchlog.search41.smart_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.smart_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00311_element_check_00287 **********\n\n");
    });

    test('00312_element_check_00288', () async {
      print("\n********** テスト実行：00312_element_check_00288 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.smart_word_sata;
      print(searchlog.search41.smart_word_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.smart_word_sata = testData1s;
      print(searchlog.search41.smart_word_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.smart_word_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.smart_word_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.smart_word_sata = testData2s;
      print(searchlog.search41.smart_word_sata);
      expect(searchlog.search41.smart_word_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.smart_word_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.smart_word_sata = defalut;
      print(searchlog.search41.smart_word_sata);
      expect(searchlog.search41.smart_word_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.smart_word_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00312_element_check_00288 **********\n\n");
    });

    test('00313_element_check_00289', () async {
      print("\n********** テスト実行：00313_element_check_00289 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search41.description;
      print(searchlog.search41.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search41.description = testData1s;
      print(searchlog.search41.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search41.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search41.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search41.description = testData2s;
      print(searchlog.search41.description);
      expect(searchlog.search41.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search41.description = defalut;
      print(searchlog.search41.description);
      expect(searchlog.search41.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search41.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00313_element_check_00289 **********\n\n");
    });

    test('00314_element_check_00290', () async {
      print("\n********** テスト実行：00314_element_check_00290 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.file_name;
      print(searchlog.search42.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.file_name = testData1s;
      print(searchlog.search42.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.file_name = testData2s;
      print(searchlog.search42.file_name);
      expect(searchlog.search42.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.file_name = defalut;
      print(searchlog.search42.file_name);
      expect(searchlog.search42.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00314_element_check_00290 **********\n\n");
    });

    test('00315_element_check_00291', () async {
      print("\n********** テスト実行：00315_element_check_00291 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.file_name2;
      print(searchlog.search42.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.file_name2 = testData1s;
      print(searchlog.search42.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.file_name2 = testData2s;
      print(searchlog.search42.file_name2);
      expect(searchlog.search42.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.file_name2 = defalut;
      print(searchlog.search42.file_name2);
      expect(searchlog.search42.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00315_element_check_00291 **********\n\n");
    });

    test('00316_element_check_00292', () async {
      print("\n********** テスト実行：00316_element_check_00292 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.typ;
      print(searchlog.search42.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.typ = testData1;
      print(searchlog.search42.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.typ = testData2;
      print(searchlog.search42.typ);
      expect(searchlog.search42.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.typ = defalut;
      print(searchlog.search42.typ);
      expect(searchlog.search42.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00316_element_check_00292 **********\n\n");
    });

    test('00317_element_check_00293', () async {
      print("\n********** テスト実行：00317_element_check_00293 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.ssd;
      print(searchlog.search42.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.ssd = testData1;
      print(searchlog.search42.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.ssd = testData2;
      print(searchlog.search42.ssd);
      expect(searchlog.search42.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.ssd = defalut;
      print(searchlog.search42.ssd);
      expect(searchlog.search42.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00317_element_check_00293 **********\n\n");
    });

    test('00318_element_check_00294', () async {
      print("\n********** テスト実行：00318_element_check_00294 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.out_count;
      print(searchlog.search42.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.out_count = testData1;
      print(searchlog.search42.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.out_count = testData2;
      print(searchlog.search42.out_count);
      expect(searchlog.search42.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.out_count = defalut;
      print(searchlog.search42.out_count);
      expect(searchlog.search42.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00318_element_check_00294 **********\n\n");
    });

    test('00319_element_check_00295', () async {
      print("\n********** テスト実行：00319_element_check_00295 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.print_word;
      print(searchlog.search42.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.print_word = testData1s;
      print(searchlog.search42.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.print_word = testData2s;
      print(searchlog.search42.print_word);
      expect(searchlog.search42.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.print_word = defalut;
      print(searchlog.search42.print_word);
      expect(searchlog.search42.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00319_element_check_00295 **********\n\n");
    });

    test('00320_element_check_00296', () async {
      print("\n********** テスト実行：00320_element_check_00296 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.print_word2;
      print(searchlog.search42.print_word2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.print_word2 = testData1s;
      print(searchlog.search42.print_word2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.print_word2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.print_word2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.print_word2 = testData2s;
      print(searchlog.search42.print_word2);
      expect(searchlog.search42.print_word2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.print_word2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.print_word2 = defalut;
      print(searchlog.search42.print_word2);
      expect(searchlog.search42.print_word2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.print_word2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00320_element_check_00296 **********\n\n");
    });

    test('00321_element_check_00297', () async {
      print("\n********** テスト実行：00321_element_check_00297 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.sensor_word;
      print(searchlog.search42.sensor_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.sensor_word = testData1s;
      print(searchlog.search42.sensor_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.sensor_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.sensor_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.sensor_word = testData2s;
      print(searchlog.search42.sensor_word);
      expect(searchlog.search42.sensor_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.sensor_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.sensor_word = defalut;
      print(searchlog.search42.sensor_word);
      expect(searchlog.search42.sensor_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.sensor_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00321_element_check_00297 **********\n\n");
    });

    test('00322_element_check_00298', () async {
      print("\n********** テスト実行：00322_element_check_00298 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.description;
      print(searchlog.search42.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.description = testData1s;
      print(searchlog.search42.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.description = testData2s;
      print(searchlog.search42.description);
      expect(searchlog.search42.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.description = defalut;
      print(searchlog.search42.description);
      expect(searchlog.search42.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00322_element_check_00298 **********\n\n");
    });

    test('00323_element_check_00299', () async {
      print("\n********** テスト実行：00323_element_check_00299 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search42.description_cd;
      print(searchlog.search42.description_cd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search42.description_cd = testData1;
      print(searchlog.search42.description_cd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search42.description_cd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search42.description_cd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search42.description_cd = testData2;
      print(searchlog.search42.description_cd);
      expect(searchlog.search42.description_cd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.description_cd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search42.description_cd = defalut;
      print(searchlog.search42.description_cd);
      expect(searchlog.search42.description_cd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search42.description_cd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00323_element_check_00299 **********\n\n");
    });

    test('00324_element_check_00300', () async {
      print("\n********** テスト実行：00324_element_check_00300 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search51.typ;
      print(searchlog.search51.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search51.typ = testData1;
      print(searchlog.search51.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search51.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search51.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search51.typ = testData2;
      print(searchlog.search51.typ);
      expect(searchlog.search51.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search51.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search51.typ = defalut;
      print(searchlog.search51.typ);
      expect(searchlog.search51.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search51.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00324_element_check_00300 **********\n\n");
    });

    test('00325_element_check_00301', () async {
      print("\n********** テスト実行：00325_element_check_00301 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search51.ssd;
      print(searchlog.search51.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search51.ssd = testData1;
      print(searchlog.search51.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search51.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search51.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search51.ssd = testData2;
      print(searchlog.search51.ssd);
      expect(searchlog.search51.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search51.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search51.ssd = defalut;
      print(searchlog.search51.ssd);
      expect(searchlog.search51.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search51.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00325_element_check_00301 **********\n\n");
    });

    test('00326_element_check_00302', () async {
      print("\n********** テスト実行：00326_element_check_00302 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search51.title;
      print(searchlog.search51.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search51.title = testData1s;
      print(searchlog.search51.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search51.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search51.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search51.title = testData2s;
      print(searchlog.search51.title);
      expect(searchlog.search51.title == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search51.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search51.title = defalut;
      print(searchlog.search51.title);
      expect(searchlog.search51.title == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search51.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00326_element_check_00302 **********\n\n");
    });

    test('00327_element_check_00303', () async {
      print("\n********** テスト実行：00327_element_check_00303 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search51.description_cd;
      print(searchlog.search51.description_cd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search51.description_cd = testData1;
      print(searchlog.search51.description_cd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search51.description_cd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search51.description_cd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search51.description_cd = testData2;
      print(searchlog.search51.description_cd);
      expect(searchlog.search51.description_cd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search51.description_cd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search51.description_cd = defalut;
      print(searchlog.search51.description_cd);
      expect(searchlog.search51.description_cd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search51.description_cd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00327_element_check_00303 **********\n\n");
    });

    test('00328_element_check_00304', () async {
      print("\n********** テスト実行：00328_element_check_00304 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.file_name;
      print(searchlog.search52.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.file_name = testData1s;
      print(searchlog.search52.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.file_name = testData2s;
      print(searchlog.search52.file_name);
      expect(searchlog.search52.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.file_name = defalut;
      print(searchlog.search52.file_name);
      expect(searchlog.search52.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00328_element_check_00304 **********\n\n");
    });

    test('00329_element_check_00305', () async {
      print("\n********** テスト実行：00329_element_check_00305 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.file_name2;
      print(searchlog.search52.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.file_name2 = testData1s;
      print(searchlog.search52.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.file_name2 = testData2s;
      print(searchlog.search52.file_name2);
      expect(searchlog.search52.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.file_name2 = defalut;
      print(searchlog.search52.file_name2);
      expect(searchlog.search52.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00329_element_check_00305 **********\n\n");
    });

    test('00330_element_check_00306', () async {
      print("\n********** テスト実行：00330_element_check_00306 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.typ;
      print(searchlog.search52.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.typ = testData1;
      print(searchlog.search52.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.typ = testData2;
      print(searchlog.search52.typ);
      expect(searchlog.search52.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.typ = defalut;
      print(searchlog.search52.typ);
      expect(searchlog.search52.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00330_element_check_00306 **********\n\n");
    });

    test('00331_element_check_00307', () async {
      print("\n********** テスト実行：00331_element_check_00307 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.ssd;
      print(searchlog.search52.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.ssd = testData1;
      print(searchlog.search52.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.ssd = testData2;
      print(searchlog.search52.ssd);
      expect(searchlog.search52.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.ssd = defalut;
      print(searchlog.search52.ssd);
      expect(searchlog.search52.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00331_element_check_00307 **********\n\n");
    });

    test('00332_element_check_00308', () async {
      print("\n********** テスト実行：00332_element_check_00308 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.date;
      print(searchlog.search52.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.date = testData1s;
      print(searchlog.search52.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.date = testData2s;
      print(searchlog.search52.date);
      expect(searchlog.search52.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.date = defalut;
      print(searchlog.search52.date);
      expect(searchlog.search52.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00332_element_check_00308 **********\n\n");
    });

    test('00333_element_check_00309', () async {
      print("\n********** テスト実行：00333_element_check_00309 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.term_date;
      print(searchlog.search52.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.term_date = testData1;
      print(searchlog.search52.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.term_date = testData2;
      print(searchlog.search52.term_date);
      expect(searchlog.search52.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.term_date = defalut;
      print(searchlog.search52.term_date);
      expect(searchlog.search52.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00333_element_check_00309 **********\n\n");
    });

    test('00334_element_check_00310', () async {
      print("\n********** テスト実行：00334_element_check_00310 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.out_count;
      print(searchlog.search52.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.out_count = testData1;
      print(searchlog.search52.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.out_count = testData2;
      print(searchlog.search52.out_count);
      expect(searchlog.search52.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.out_count = defalut;
      print(searchlog.search52.out_count);
      expect(searchlog.search52.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00334_element_check_00310 **********\n\n");
    });

    test('00335_element_check_00311', () async {
      print("\n********** テスト実行：00335_element_check_00311 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.print_word;
      print(searchlog.search52.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.print_word = testData1s;
      print(searchlog.search52.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.print_word = testData2s;
      print(searchlog.search52.print_word);
      expect(searchlog.search52.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.print_word = defalut;
      print(searchlog.search52.print_word);
      expect(searchlog.search52.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00335_element_check_00311 **********\n\n");
    });

    test('00336_element_check_00312', () async {
      print("\n********** テスト実行：00336_element_check_00312 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.ssd_word;
      print(searchlog.search52.ssd_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.ssd_word = testData1s;
      print(searchlog.search52.ssd_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.ssd_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.ssd_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.ssd_word = testData2s;
      print(searchlog.search52.ssd_word);
      expect(searchlog.search52.ssd_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.ssd_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.ssd_word = defalut;
      print(searchlog.search52.ssd_word);
      expect(searchlog.search52.ssd_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.ssd_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00336_element_check_00312 **********\n\n");
    });

    test('00337_element_check_00313', () async {
      print("\n********** テスト実行：00337_element_check_00313 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search52.description;
      print(searchlog.search52.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search52.description = testData1s;
      print(searchlog.search52.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search52.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search52.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search52.description = testData2s;
      print(searchlog.search52.description);
      expect(searchlog.search52.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search52.description = defalut;
      print(searchlog.search52.description);
      expect(searchlog.search52.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search52.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00337_element_check_00313 **********\n\n");
    });

    test('00338_element_check_00314', () async {
      print("\n********** テスト実行：00338_element_check_00314 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.file_name;
      print(searchlog.search53.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.file_name = testData1s;
      print(searchlog.search53.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.file_name = testData2s;
      print(searchlog.search53.file_name);
      expect(searchlog.search53.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.file_name = defalut;
      print(searchlog.search53.file_name);
      expect(searchlog.search53.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00338_element_check_00314 **********\n\n");
    });

    test('00339_element_check_00315', () async {
      print("\n********** テスト実行：00339_element_check_00315 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.file_name2;
      print(searchlog.search53.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.file_name2 = testData1s;
      print(searchlog.search53.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.file_name2 = testData2s;
      print(searchlog.search53.file_name2);
      expect(searchlog.search53.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.file_name2 = defalut;
      print(searchlog.search53.file_name2);
      expect(searchlog.search53.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00339_element_check_00315 **********\n\n");
    });

    test('00340_element_check_00316', () async {
      print("\n********** テスト実行：00340_element_check_00316 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.typ;
      print(searchlog.search53.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.typ = testData1;
      print(searchlog.search53.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.typ = testData2;
      print(searchlog.search53.typ);
      expect(searchlog.search53.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.typ = defalut;
      print(searchlog.search53.typ);
      expect(searchlog.search53.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00340_element_check_00316 **********\n\n");
    });

    test('00341_element_check_00317', () async {
      print("\n********** テスト実行：00341_element_check_00317 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.ssd;
      print(searchlog.search53.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.ssd = testData1;
      print(searchlog.search53.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.ssd = testData2;
      print(searchlog.search53.ssd);
      expect(searchlog.search53.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.ssd = defalut;
      print(searchlog.search53.ssd);
      expect(searchlog.search53.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00341_element_check_00317 **********\n\n");
    });

    test('00342_element_check_00318', () async {
      print("\n********** テスト実行：00342_element_check_00318 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.date;
      print(searchlog.search53.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.date = testData1s;
      print(searchlog.search53.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.date = testData2s;
      print(searchlog.search53.date);
      expect(searchlog.search53.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.date = defalut;
      print(searchlog.search53.date);
      expect(searchlog.search53.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00342_element_check_00318 **********\n\n");
    });

    test('00343_element_check_00319', () async {
      print("\n********** テスト実行：00343_element_check_00319 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.term_date;
      print(searchlog.search53.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.term_date = testData1;
      print(searchlog.search53.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.term_date = testData2;
      print(searchlog.search53.term_date);
      expect(searchlog.search53.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.term_date = defalut;
      print(searchlog.search53.term_date);
      expect(searchlog.search53.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00343_element_check_00319 **********\n\n");
    });

    test('00344_element_check_00320', () async {
      print("\n********** テスト実行：00344_element_check_00320 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.out_count;
      print(searchlog.search53.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.out_count = testData1;
      print(searchlog.search53.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.out_count = testData2;
      print(searchlog.search53.out_count);
      expect(searchlog.search53.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.out_count = defalut;
      print(searchlog.search53.out_count);
      expect(searchlog.search53.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00344_element_check_00320 **********\n\n");
    });

    test('00345_element_check_00321', () async {
      print("\n********** テスト実行：00345_element_check_00321 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.print_word;
      print(searchlog.search53.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.print_word = testData1s;
      print(searchlog.search53.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.print_word = testData2s;
      print(searchlog.search53.print_word);
      expect(searchlog.search53.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.print_word = defalut;
      print(searchlog.search53.print_word);
      expect(searchlog.search53.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00345_element_check_00321 **********\n\n");
    });

    test('00346_element_check_00322', () async {
      print("\n********** テスト実行：00346_element_check_00322 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.ssd_word;
      print(searchlog.search53.ssd_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.ssd_word = testData1s;
      print(searchlog.search53.ssd_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.ssd_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.ssd_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.ssd_word = testData2s;
      print(searchlog.search53.ssd_word);
      expect(searchlog.search53.ssd_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.ssd_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.ssd_word = defalut;
      print(searchlog.search53.ssd_word);
      expect(searchlog.search53.ssd_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.ssd_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00346_element_check_00322 **********\n\n");
    });

    test('00347_element_check_00323', () async {
      print("\n********** テスト実行：00347_element_check_00323 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search53.description;
      print(searchlog.search53.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search53.description = testData1s;
      print(searchlog.search53.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search53.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search53.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search53.description = testData2s;
      print(searchlog.search53.description);
      expect(searchlog.search53.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search53.description = defalut;
      print(searchlog.search53.description);
      expect(searchlog.search53.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search53.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00347_element_check_00323 **********\n\n");
    });

    test('00348_element_check_00324', () async {
      print("\n********** テスト実行：00348_element_check_00324 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.file_name;
      print(searchlog.search54.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.file_name = testData1s;
      print(searchlog.search54.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.file_name = testData2s;
      print(searchlog.search54.file_name);
      expect(searchlog.search54.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.file_name = defalut;
      print(searchlog.search54.file_name);
      expect(searchlog.search54.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00348_element_check_00324 **********\n\n");
    });

    test('00349_element_check_00325', () async {
      print("\n********** テスト実行：00349_element_check_00325 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.file_name2;
      print(searchlog.search54.file_name2);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.file_name2 = testData1s;
      print(searchlog.search54.file_name2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.file_name2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.file_name2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.file_name2 = testData2s;
      print(searchlog.search54.file_name2);
      expect(searchlog.search54.file_name2 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.file_name2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.file_name2 = defalut;
      print(searchlog.search54.file_name2);
      expect(searchlog.search54.file_name2 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.file_name2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00349_element_check_00325 **********\n\n");
    });

    test('00350_element_check_00326', () async {
      print("\n********** テスト実行：00350_element_check_00326 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.typ;
      print(searchlog.search54.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.typ = testData1;
      print(searchlog.search54.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.typ = testData2;
      print(searchlog.search54.typ);
      expect(searchlog.search54.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.typ = defalut;
      print(searchlog.search54.typ);
      expect(searchlog.search54.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00350_element_check_00326 **********\n\n");
    });

    test('00351_element_check_00327', () async {
      print("\n********** テスト実行：00351_element_check_00327 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.ssd;
      print(searchlog.search54.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.ssd = testData1;
      print(searchlog.search54.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.ssd = testData2;
      print(searchlog.search54.ssd);
      expect(searchlog.search54.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.ssd = defalut;
      print(searchlog.search54.ssd);
      expect(searchlog.search54.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00351_element_check_00327 **********\n\n");
    });

    test('00352_element_check_00328', () async {
      print("\n********** テスト実行：00352_element_check_00328 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.date;
      print(searchlog.search54.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.date = testData1s;
      print(searchlog.search54.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.date = testData2s;
      print(searchlog.search54.date);
      expect(searchlog.search54.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.date = defalut;
      print(searchlog.search54.date);
      expect(searchlog.search54.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00352_element_check_00328 **********\n\n");
    });

    test('00353_element_check_00329', () async {
      print("\n********** テスト実行：00353_element_check_00329 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.term_date;
      print(searchlog.search54.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.term_date = testData1;
      print(searchlog.search54.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.term_date = testData2;
      print(searchlog.search54.term_date);
      expect(searchlog.search54.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.term_date = defalut;
      print(searchlog.search54.term_date);
      expect(searchlog.search54.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00353_element_check_00329 **********\n\n");
    });

    test('00354_element_check_00330', () async {
      print("\n********** テスト実行：00354_element_check_00330 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.out_count;
      print(searchlog.search54.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.out_count = testData1;
      print(searchlog.search54.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.out_count = testData2;
      print(searchlog.search54.out_count);
      expect(searchlog.search54.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.out_count = defalut;
      print(searchlog.search54.out_count);
      expect(searchlog.search54.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00354_element_check_00330 **********\n\n");
    });

    test('00355_element_check_00331', () async {
      print("\n********** テスト実行：00355_element_check_00331 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.print_word;
      print(searchlog.search54.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.print_word = testData1s;
      print(searchlog.search54.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.print_word = testData2s;
      print(searchlog.search54.print_word);
      expect(searchlog.search54.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.print_word = defalut;
      print(searchlog.search54.print_word);
      expect(searchlog.search54.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00355_element_check_00331 **********\n\n");
    });

    test('00356_element_check_00332', () async {
      print("\n********** テスト実行：00356_element_check_00332 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.ssd_word;
      print(searchlog.search54.ssd_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.ssd_word = testData1s;
      print(searchlog.search54.ssd_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.ssd_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.ssd_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.ssd_word = testData2s;
      print(searchlog.search54.ssd_word);
      expect(searchlog.search54.ssd_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.ssd_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.ssd_word = defalut;
      print(searchlog.search54.ssd_word);
      expect(searchlog.search54.ssd_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.ssd_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00356_element_check_00332 **********\n\n");
    });

    test('00357_element_check_00333', () async {
      print("\n********** テスト実行：00357_element_check_00333 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search54.description;
      print(searchlog.search54.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search54.description = testData1s;
      print(searchlog.search54.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search54.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search54.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search54.description = testData2s;
      print(searchlog.search54.description);
      expect(searchlog.search54.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search54.description = defalut;
      print(searchlog.search54.description);
      expect(searchlog.search54.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search54.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00357_element_check_00333 **********\n\n");
    });

    test('00358_element_check_00334', () async {
      print("\n********** テスト実行：00358_element_check_00334 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search56.file_name;
      print(searchlog.search56.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search56.file_name = testData1s;
      print(searchlog.search56.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search56.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search56.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search56.file_name = testData2s;
      print(searchlog.search56.file_name);
      expect(searchlog.search56.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search56.file_name = defalut;
      print(searchlog.search56.file_name);
      expect(searchlog.search56.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00358_element_check_00334 **********\n\n");
    });

    test('00359_element_check_00335', () async {
      print("\n********** テスト実行：00359_element_check_00335 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search56.typ;
      print(searchlog.search56.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search56.typ = testData1;
      print(searchlog.search56.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search56.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search56.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search56.typ = testData2;
      print(searchlog.search56.typ);
      expect(searchlog.search56.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search56.typ = defalut;
      print(searchlog.search56.typ);
      expect(searchlog.search56.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00359_element_check_00335 **********\n\n");
    });

    test('00360_element_check_00336', () async {
      print("\n********** テスト実行：00360_element_check_00336 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search56.ssd;
      print(searchlog.search56.ssd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search56.ssd = testData1;
      print(searchlog.search56.ssd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search56.ssd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search56.ssd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search56.ssd = testData2;
      print(searchlog.search56.ssd);
      expect(searchlog.search56.ssd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.ssd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search56.ssd = defalut;
      print(searchlog.search56.ssd);
      expect(searchlog.search56.ssd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.ssd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00360_element_check_00336 **********\n\n");
    });

    test('00361_element_check_00337', () async {
      print("\n********** テスト実行：00361_element_check_00337 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search56.out_count;
      print(searchlog.search56.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search56.out_count = testData1;
      print(searchlog.search56.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search56.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search56.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search56.out_count = testData2;
      print(searchlog.search56.out_count);
      expect(searchlog.search56.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search56.out_count = defalut;
      print(searchlog.search56.out_count);
      expect(searchlog.search56.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00361_element_check_00337 **********\n\n");
    });

    test('00362_element_check_00338', () async {
      print("\n********** テスト実行：00362_element_check_00338 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search56.print_word;
      print(searchlog.search56.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search56.print_word = testData1s;
      print(searchlog.search56.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search56.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search56.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search56.print_word = testData2s;
      print(searchlog.search56.print_word);
      expect(searchlog.search56.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search56.print_word = defalut;
      print(searchlog.search56.print_word);
      expect(searchlog.search56.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00362_element_check_00338 **********\n\n");
    });

    test('00363_element_check_00339', () async {
      print("\n********** テスト実行：00363_element_check_00339 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search56.description;
      print(searchlog.search56.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search56.description = testData1s;
      print(searchlog.search56.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search56.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search56.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search56.description = testData2s;
      print(searchlog.search56.description);
      expect(searchlog.search56.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search56.description = defalut;
      print(searchlog.search56.description);
      expect(searchlog.search56.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search56.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00363_element_check_00339 **********\n\n");
    });

    test('00364_element_check_00340', () async {
      print("\n********** テスト実行：00364_element_check_00340 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search61.typ;
      print(searchlog.search61.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search61.typ = testData1;
      print(searchlog.search61.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search61.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search61.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search61.typ = testData2;
      print(searchlog.search61.typ);
      expect(searchlog.search61.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search61.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search61.typ = defalut;
      print(searchlog.search61.typ);
      expect(searchlog.search61.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search61.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00364_element_check_00340 **********\n\n");
    });

    test('00365_element_check_00341', () async {
      print("\n********** テスト実行：00365_element_check_00341 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search61.title;
      print(searchlog.search61.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search61.title = testData1s;
      print(searchlog.search61.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search61.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search61.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search61.title = testData2s;
      print(searchlog.search61.title);
      expect(searchlog.search61.title == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search61.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search61.title = defalut;
      print(searchlog.search61.title);
      expect(searchlog.search61.title == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search61.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00365_element_check_00341 **********\n\n");
    });

    test('00366_element_check_00342', () async {
      print("\n********** テスト実行：00366_element_check_00342 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search61.description_cd;
      print(searchlog.search61.description_cd);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search61.description_cd = testData1;
      print(searchlog.search61.description_cd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search61.description_cd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search61.description_cd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search61.description_cd = testData2;
      print(searchlog.search61.description_cd);
      expect(searchlog.search61.description_cd == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search61.description_cd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search61.description_cd = defalut;
      print(searchlog.search61.description_cd);
      expect(searchlog.search61.description_cd == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search61.description_cd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00366_element_check_00342 **********\n\n");
    });

    test('00367_element_check_00343', () async {
      print("\n********** テスト実行：00367_element_check_00343 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.file_name;
      print(searchlog.search62.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.file_name = testData1s;
      print(searchlog.search62.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.file_name = testData2s;
      print(searchlog.search62.file_name);
      expect(searchlog.search62.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.file_name = defalut;
      print(searchlog.search62.file_name);
      expect(searchlog.search62.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00367_element_check_00343 **********\n\n");
    });

    test('00368_element_check_00344', () async {
      print("\n********** テスト実行：00368_element_check_00344 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.typ;
      print(searchlog.search62.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.typ = testData1;
      print(searchlog.search62.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.typ = testData2;
      print(searchlog.search62.typ);
      expect(searchlog.search62.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.typ = defalut;
      print(searchlog.search62.typ);
      expect(searchlog.search62.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00368_element_check_00344 **********\n\n");
    });

    test('00369_element_check_00345', () async {
      print("\n********** テスト実行：00369_element_check_00345 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.date;
      print(searchlog.search62.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.date = testData1s;
      print(searchlog.search62.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.date = testData2s;
      print(searchlog.search62.date);
      expect(searchlog.search62.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.date = defalut;
      print(searchlog.search62.date);
      expect(searchlog.search62.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00369_element_check_00345 **********\n\n");
    });

    test('00370_element_check_00346', () async {
      print("\n********** テスト実行：00370_element_check_00346 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.term_date;
      print(searchlog.search62.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.term_date = testData1;
      print(searchlog.search62.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.term_date = testData2;
      print(searchlog.search62.term_date);
      expect(searchlog.search62.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.term_date = defalut;
      print(searchlog.search62.term_date);
      expect(searchlog.search62.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00370_element_check_00346 **********\n\n");
    });

    test('00371_element_check_00347', () async {
      print("\n********** テスト実行：00371_element_check_00347 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.out_count;
      print(searchlog.search62.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.out_count = testData1;
      print(searchlog.search62.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.out_count = testData2;
      print(searchlog.search62.out_count);
      expect(searchlog.search62.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.out_count = defalut;
      print(searchlog.search62.out_count);
      expect(searchlog.search62.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00371_element_check_00347 **********\n\n");
    });

    test('00372_element_check_00348', () async {
      print("\n********** テスト実行：00372_element_check_00348 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.print_word;
      print(searchlog.search62.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.print_word = testData1s;
      print(searchlog.search62.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.print_word = testData2s;
      print(searchlog.search62.print_word);
      expect(searchlog.search62.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.print_word = defalut;
      print(searchlog.search62.print_word);
      expect(searchlog.search62.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00372_element_check_00348 **********\n\n");
    });

    test('00373_element_check_00349', () async {
      print("\n********** テスト実行：00373_element_check_00349 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.words;
      print(searchlog.search62.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.words = testData1;
      print(searchlog.search62.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.words = testData2;
      print(searchlog.search62.words);
      expect(searchlog.search62.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.words = defalut;
      print(searchlog.search62.words);
      expect(searchlog.search62.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00373_element_check_00349 **********\n\n");
    });

    test('00374_element_check_00350', () async {
      print("\n********** テスト実行：00374_element_check_00350 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.search_word1;
      print(searchlog.search62.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.search_word1 = testData1s;
      print(searchlog.search62.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.search_word1 = testData2s;
      print(searchlog.search62.search_word1);
      expect(searchlog.search62.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.search_word1 = defalut;
      print(searchlog.search62.search_word1);
      expect(searchlog.search62.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00374_element_check_00350 **********\n\n");
    });

    test('00375_element_check_00351', () async {
      print("\n********** テスト実行：00375_element_check_00351 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.search_word1_sata;
      print(searchlog.search62.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.search_word1_sata = testData1s;
      print(searchlog.search62.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.search_word1_sata = testData2s;
      print(searchlog.search62.search_word1_sata);
      expect(searchlog.search62.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.search_word1_sata = defalut;
      print(searchlog.search62.search_word1_sata);
      expect(searchlog.search62.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00375_element_check_00351 **********\n\n");
    });

    test('00376_element_check_00352', () async {
      print("\n********** テスト実行：00376_element_check_00352 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search62.description;
      print(searchlog.search62.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search62.description = testData1s;
      print(searchlog.search62.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search62.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search62.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search62.description = testData2s;
      print(searchlog.search62.description);
      expect(searchlog.search62.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search62.description = defalut;
      print(searchlog.search62.description);
      expect(searchlog.search62.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search62.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00376_element_check_00352 **********\n\n");
    });

    test('00377_element_check_00353', () async {
      print("\n********** テスト実行：00377_element_check_00353 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.file_name;
      print(searchlog.search63.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.file_name = testData1s;
      print(searchlog.search63.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.file_name = testData2s;
      print(searchlog.search63.file_name);
      expect(searchlog.search63.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.file_name = defalut;
      print(searchlog.search63.file_name);
      expect(searchlog.search63.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00377_element_check_00353 **********\n\n");
    });

    test('00378_element_check_00354', () async {
      print("\n********** テスト実行：00378_element_check_00354 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.typ;
      print(searchlog.search63.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.typ = testData1;
      print(searchlog.search63.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.typ = testData2;
      print(searchlog.search63.typ);
      expect(searchlog.search63.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.typ = defalut;
      print(searchlog.search63.typ);
      expect(searchlog.search63.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00378_element_check_00354 **********\n\n");
    });

    test('00379_element_check_00355', () async {
      print("\n********** テスト実行：00379_element_check_00355 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.date;
      print(searchlog.search63.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.date = testData1s;
      print(searchlog.search63.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.date = testData2s;
      print(searchlog.search63.date);
      expect(searchlog.search63.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.date = defalut;
      print(searchlog.search63.date);
      expect(searchlog.search63.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00379_element_check_00355 **********\n\n");
    });

    test('00380_element_check_00356', () async {
      print("\n********** テスト実行：00380_element_check_00356 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.term_date;
      print(searchlog.search63.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.term_date = testData1;
      print(searchlog.search63.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.term_date = testData2;
      print(searchlog.search63.term_date);
      expect(searchlog.search63.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.term_date = defalut;
      print(searchlog.search63.term_date);
      expect(searchlog.search63.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00380_element_check_00356 **********\n\n");
    });

    test('00381_element_check_00357', () async {
      print("\n********** テスト実行：00381_element_check_00357 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.out_count;
      print(searchlog.search63.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.out_count = testData1;
      print(searchlog.search63.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.out_count = testData2;
      print(searchlog.search63.out_count);
      expect(searchlog.search63.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.out_count = defalut;
      print(searchlog.search63.out_count);
      expect(searchlog.search63.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00381_element_check_00357 **********\n\n");
    });

    test('00382_element_check_00358', () async {
      print("\n********** テスト実行：00382_element_check_00358 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.print_word;
      print(searchlog.search63.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.print_word = testData1s;
      print(searchlog.search63.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.print_word = testData2s;
      print(searchlog.search63.print_word);
      expect(searchlog.search63.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.print_word = defalut;
      print(searchlog.search63.print_word);
      expect(searchlog.search63.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00382_element_check_00358 **********\n\n");
    });

    test('00383_element_check_00359', () async {
      print("\n********** テスト実行：00383_element_check_00359 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.words;
      print(searchlog.search63.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.words = testData1;
      print(searchlog.search63.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.words = testData2;
      print(searchlog.search63.words);
      expect(searchlog.search63.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.words = defalut;
      print(searchlog.search63.words);
      expect(searchlog.search63.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00383_element_check_00359 **********\n\n");
    });

    test('00384_element_check_00360', () async {
      print("\n********** テスト実行：00384_element_check_00360 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.search_word1;
      print(searchlog.search63.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.search_word1 = testData1s;
      print(searchlog.search63.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.search_word1 = testData2s;
      print(searchlog.search63.search_word1);
      expect(searchlog.search63.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.search_word1 = defalut;
      print(searchlog.search63.search_word1);
      expect(searchlog.search63.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00384_element_check_00360 **********\n\n");
    });

    test('00385_element_check_00361', () async {
      print("\n********** テスト実行：00385_element_check_00361 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.search_word1_sata;
      print(searchlog.search63.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.search_word1_sata = testData1s;
      print(searchlog.search63.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.search_word1_sata = testData2s;
      print(searchlog.search63.search_word1_sata);
      expect(searchlog.search63.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.search_word1_sata = defalut;
      print(searchlog.search63.search_word1_sata);
      expect(searchlog.search63.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00385_element_check_00361 **********\n\n");
    });

    test('00386_element_check_00362', () async {
      print("\n********** テスト実行：00386_element_check_00362 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search63.description;
      print(searchlog.search63.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search63.description = testData1s;
      print(searchlog.search63.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search63.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search63.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search63.description = testData2s;
      print(searchlog.search63.description);
      expect(searchlog.search63.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search63.description = defalut;
      print(searchlog.search63.description);
      expect(searchlog.search63.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search63.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00386_element_check_00362 **********\n\n");
    });

    test('00387_element_check_00363', () async {
      print("\n********** テスト実行：00387_element_check_00363 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.file_name;
      print(searchlog.search64.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.file_name = testData1s;
      print(searchlog.search64.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.file_name = testData2s;
      print(searchlog.search64.file_name);
      expect(searchlog.search64.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.file_name = defalut;
      print(searchlog.search64.file_name);
      expect(searchlog.search64.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00387_element_check_00363 **********\n\n");
    });

    test('00388_element_check_00364', () async {
      print("\n********** テスト実行：00388_element_check_00364 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.typ;
      print(searchlog.search64.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.typ = testData1;
      print(searchlog.search64.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.typ = testData2;
      print(searchlog.search64.typ);
      expect(searchlog.search64.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.typ = defalut;
      print(searchlog.search64.typ);
      expect(searchlog.search64.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00388_element_check_00364 **********\n\n");
    });

    test('00389_element_check_00365', () async {
      print("\n********** テスト実行：00389_element_check_00365 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.date;
      print(searchlog.search64.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.date = testData1s;
      print(searchlog.search64.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.date = testData2s;
      print(searchlog.search64.date);
      expect(searchlog.search64.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.date = defalut;
      print(searchlog.search64.date);
      expect(searchlog.search64.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00389_element_check_00365 **********\n\n");
    });

    test('00390_element_check_00366', () async {
      print("\n********** テスト実行：00390_element_check_00366 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.term_date;
      print(searchlog.search64.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.term_date = testData1;
      print(searchlog.search64.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.term_date = testData2;
      print(searchlog.search64.term_date);
      expect(searchlog.search64.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.term_date = defalut;
      print(searchlog.search64.term_date);
      expect(searchlog.search64.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00390_element_check_00366 **********\n\n");
    });

    test('00391_element_check_00367', () async {
      print("\n********** テスト実行：00391_element_check_00367 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.out_count;
      print(searchlog.search64.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.out_count = testData1;
      print(searchlog.search64.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.out_count = testData2;
      print(searchlog.search64.out_count);
      expect(searchlog.search64.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.out_count = defalut;
      print(searchlog.search64.out_count);
      expect(searchlog.search64.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00391_element_check_00367 **********\n\n");
    });

    test('00392_element_check_00368', () async {
      print("\n********** テスト実行：00392_element_check_00368 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.print_word;
      print(searchlog.search64.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.print_word = testData1s;
      print(searchlog.search64.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.print_word = testData2s;
      print(searchlog.search64.print_word);
      expect(searchlog.search64.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.print_word = defalut;
      print(searchlog.search64.print_word);
      expect(searchlog.search64.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00392_element_check_00368 **********\n\n");
    });

    test('00393_element_check_00369', () async {
      print("\n********** テスト実行：00393_element_check_00369 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.words;
      print(searchlog.search64.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.words = testData1;
      print(searchlog.search64.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.words = testData2;
      print(searchlog.search64.words);
      expect(searchlog.search64.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.words = defalut;
      print(searchlog.search64.words);
      expect(searchlog.search64.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00393_element_check_00369 **********\n\n");
    });

    test('00394_element_check_00370', () async {
      print("\n********** テスト実行：00394_element_check_00370 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.search_word1;
      print(searchlog.search64.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.search_word1 = testData1s;
      print(searchlog.search64.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.search_word1 = testData2s;
      print(searchlog.search64.search_word1);
      expect(searchlog.search64.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.search_word1 = defalut;
      print(searchlog.search64.search_word1);
      expect(searchlog.search64.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00394_element_check_00370 **********\n\n");
    });

    test('00395_element_check_00371', () async {
      print("\n********** テスト実行：00395_element_check_00371 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.search_word1_sata;
      print(searchlog.search64.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.search_word1_sata = testData1s;
      print(searchlog.search64.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.search_word1_sata = testData2s;
      print(searchlog.search64.search_word1_sata);
      expect(searchlog.search64.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.search_word1_sata = defalut;
      print(searchlog.search64.search_word1_sata);
      expect(searchlog.search64.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00395_element_check_00371 **********\n\n");
    });

    test('00396_element_check_00372', () async {
      print("\n********** テスト実行：00396_element_check_00372 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search64.description;
      print(searchlog.search64.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search64.description = testData1s;
      print(searchlog.search64.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search64.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search64.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search64.description = testData2s;
      print(searchlog.search64.description);
      expect(searchlog.search64.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search64.description = defalut;
      print(searchlog.search64.description);
      expect(searchlog.search64.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search64.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00396_element_check_00372 **********\n\n");
    });

    test('00397_element_check_00373', () async {
      print("\n********** テスト実行：00397_element_check_00373 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.file_name;
      print(searchlog.search65.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.file_name = testData1s;
      print(searchlog.search65.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.file_name = testData2s;
      print(searchlog.search65.file_name);
      expect(searchlog.search65.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.file_name = defalut;
      print(searchlog.search65.file_name);
      expect(searchlog.search65.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00397_element_check_00373 **********\n\n");
    });

    test('00398_element_check_00374', () async {
      print("\n********** テスト実行：00398_element_check_00374 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.typ;
      print(searchlog.search65.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.typ = testData1;
      print(searchlog.search65.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.typ = testData2;
      print(searchlog.search65.typ);
      expect(searchlog.search65.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.typ = defalut;
      print(searchlog.search65.typ);
      expect(searchlog.search65.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00398_element_check_00374 **********\n\n");
    });

    test('00399_element_check_00375', () async {
      print("\n********** テスト実行：00399_element_check_00375 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.date;
      print(searchlog.search65.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.date = testData1s;
      print(searchlog.search65.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.date = testData2s;
      print(searchlog.search65.date);
      expect(searchlog.search65.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.date = defalut;
      print(searchlog.search65.date);
      expect(searchlog.search65.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00399_element_check_00375 **********\n\n");
    });

    test('00400_element_check_00376', () async {
      print("\n********** テスト実行：00400_element_check_00376 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.term_date;
      print(searchlog.search65.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.term_date = testData1;
      print(searchlog.search65.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.term_date = testData2;
      print(searchlog.search65.term_date);
      expect(searchlog.search65.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.term_date = defalut;
      print(searchlog.search65.term_date);
      expect(searchlog.search65.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00400_element_check_00376 **********\n\n");
    });

    test('00401_element_check_00377', () async {
      print("\n********** テスト実行：00401_element_check_00377 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.out_count;
      print(searchlog.search65.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.out_count = testData1;
      print(searchlog.search65.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.out_count = testData2;
      print(searchlog.search65.out_count);
      expect(searchlog.search65.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.out_count = defalut;
      print(searchlog.search65.out_count);
      expect(searchlog.search65.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00401_element_check_00377 **********\n\n");
    });

    test('00402_element_check_00378', () async {
      print("\n********** テスト実行：00402_element_check_00378 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.print_word;
      print(searchlog.search65.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.print_word = testData1s;
      print(searchlog.search65.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.print_word = testData2s;
      print(searchlog.search65.print_word);
      expect(searchlog.search65.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.print_word = defalut;
      print(searchlog.search65.print_word);
      expect(searchlog.search65.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00402_element_check_00378 **********\n\n");
    });

    test('00403_element_check_00379', () async {
      print("\n********** テスト実行：00403_element_check_00379 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.words;
      print(searchlog.search65.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.words = testData1;
      print(searchlog.search65.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.words = testData2;
      print(searchlog.search65.words);
      expect(searchlog.search65.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.words = defalut;
      print(searchlog.search65.words);
      expect(searchlog.search65.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00403_element_check_00379 **********\n\n");
    });

    test('00404_element_check_00380', () async {
      print("\n********** テスト実行：00404_element_check_00380 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.search_word1;
      print(searchlog.search65.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.search_word1 = testData1s;
      print(searchlog.search65.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.search_word1 = testData2s;
      print(searchlog.search65.search_word1);
      expect(searchlog.search65.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.search_word1 = defalut;
      print(searchlog.search65.search_word1);
      expect(searchlog.search65.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00404_element_check_00380 **********\n\n");
    });

    test('00405_element_check_00381', () async {
      print("\n********** テスト実行：00405_element_check_00381 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.search_word1_sata;
      print(searchlog.search65.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.search_word1_sata = testData1s;
      print(searchlog.search65.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.search_word1_sata = testData2s;
      print(searchlog.search65.search_word1_sata);
      expect(searchlog.search65.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.search_word1_sata = defalut;
      print(searchlog.search65.search_word1_sata);
      expect(searchlog.search65.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00405_element_check_00381 **********\n\n");
    });

    test('00406_element_check_00382', () async {
      print("\n********** テスト実行：00406_element_check_00382 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search65.description;
      print(searchlog.search65.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search65.description = testData1s;
      print(searchlog.search65.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search65.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search65.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search65.description = testData2s;
      print(searchlog.search65.description);
      expect(searchlog.search65.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search65.description = defalut;
      print(searchlog.search65.description);
      expect(searchlog.search65.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search65.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00406_element_check_00382 **********\n\n");
    });

    test('00407_element_check_00383', () async {
      print("\n********** テスト実行：00407_element_check_00383 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.file_name;
      print(searchlog.search66.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.file_name = testData1s;
      print(searchlog.search66.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.file_name = testData2s;
      print(searchlog.search66.file_name);
      expect(searchlog.search66.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.file_name = defalut;
      print(searchlog.search66.file_name);
      expect(searchlog.search66.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00407_element_check_00383 **********\n\n");
    });

    test('00408_element_check_00384', () async {
      print("\n********** テスト実行：00408_element_check_00384 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.typ;
      print(searchlog.search66.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.typ = testData1;
      print(searchlog.search66.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.typ = testData2;
      print(searchlog.search66.typ);
      expect(searchlog.search66.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.typ = defalut;
      print(searchlog.search66.typ);
      expect(searchlog.search66.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00408_element_check_00384 **********\n\n");
    });

    test('00409_element_check_00385', () async {
      print("\n********** テスト実行：00409_element_check_00385 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.date;
      print(searchlog.search66.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.date = testData1s;
      print(searchlog.search66.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.date = testData2s;
      print(searchlog.search66.date);
      expect(searchlog.search66.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.date = defalut;
      print(searchlog.search66.date);
      expect(searchlog.search66.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00409_element_check_00385 **********\n\n");
    });

    test('00410_element_check_00386', () async {
      print("\n********** テスト実行：00410_element_check_00386 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.term_date;
      print(searchlog.search66.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.term_date = testData1;
      print(searchlog.search66.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.term_date = testData2;
      print(searchlog.search66.term_date);
      expect(searchlog.search66.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.term_date = defalut;
      print(searchlog.search66.term_date);
      expect(searchlog.search66.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00410_element_check_00386 **********\n\n");
    });

    test('00411_element_check_00387', () async {
      print("\n********** テスト実行：00411_element_check_00387 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.out_count;
      print(searchlog.search66.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.out_count = testData1;
      print(searchlog.search66.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.out_count = testData2;
      print(searchlog.search66.out_count);
      expect(searchlog.search66.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.out_count = defalut;
      print(searchlog.search66.out_count);
      expect(searchlog.search66.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00411_element_check_00387 **********\n\n");
    });

    test('00412_element_check_00388', () async {
      print("\n********** テスト実行：00412_element_check_00388 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.print_word;
      print(searchlog.search66.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.print_word = testData1s;
      print(searchlog.search66.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.print_word = testData2s;
      print(searchlog.search66.print_word);
      expect(searchlog.search66.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.print_word = defalut;
      print(searchlog.search66.print_word);
      expect(searchlog.search66.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00412_element_check_00388 **********\n\n");
    });

    test('00413_element_check_00389', () async {
      print("\n********** テスト実行：00413_element_check_00389 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.words;
      print(searchlog.search66.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.words = testData1;
      print(searchlog.search66.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.words = testData2;
      print(searchlog.search66.words);
      expect(searchlog.search66.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.words = defalut;
      print(searchlog.search66.words);
      expect(searchlog.search66.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00413_element_check_00389 **********\n\n");
    });

    test('00414_element_check_00390', () async {
      print("\n********** テスト実行：00414_element_check_00390 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.search_word1;
      print(searchlog.search66.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.search_word1 = testData1s;
      print(searchlog.search66.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.search_word1 = testData2s;
      print(searchlog.search66.search_word1);
      expect(searchlog.search66.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.search_word1 = defalut;
      print(searchlog.search66.search_word1);
      expect(searchlog.search66.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00414_element_check_00390 **********\n\n");
    });

    test('00415_element_check_00391', () async {
      print("\n********** テスト実行：00415_element_check_00391 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.search_word1_sata;
      print(searchlog.search66.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.search_word1_sata = testData1s;
      print(searchlog.search66.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.search_word1_sata = testData2s;
      print(searchlog.search66.search_word1_sata);
      expect(searchlog.search66.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.search_word1_sata = defalut;
      print(searchlog.search66.search_word1_sata);
      expect(searchlog.search66.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00415_element_check_00391 **********\n\n");
    });

    test('00416_element_check_00392', () async {
      print("\n********** テスト実行：00416_element_check_00392 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search66.description;
      print(searchlog.search66.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search66.description = testData1s;
      print(searchlog.search66.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search66.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search66.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search66.description = testData2s;
      print(searchlog.search66.description);
      expect(searchlog.search66.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search66.description = defalut;
      print(searchlog.search66.description);
      expect(searchlog.search66.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search66.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00416_element_check_00392 **********\n\n");
    });

    test('00417_element_check_00393', () async {
      print("\n********** テスト実行：00417_element_check_00393 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.file_name;
      print(searchlog.search67.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.file_name = testData1s;
      print(searchlog.search67.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.file_name = testData2s;
      print(searchlog.search67.file_name);
      expect(searchlog.search67.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.file_name = defalut;
      print(searchlog.search67.file_name);
      expect(searchlog.search67.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00417_element_check_00393 **********\n\n");
    });

    test('00418_element_check_00394', () async {
      print("\n********** テスト実行：00418_element_check_00394 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.typ;
      print(searchlog.search67.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.typ = testData1;
      print(searchlog.search67.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.typ = testData2;
      print(searchlog.search67.typ);
      expect(searchlog.search67.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.typ = defalut;
      print(searchlog.search67.typ);
      expect(searchlog.search67.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00418_element_check_00394 **********\n\n");
    });

    test('00419_element_check_00395', () async {
      print("\n********** テスト実行：00419_element_check_00395 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.date;
      print(searchlog.search67.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.date = testData1s;
      print(searchlog.search67.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.date = testData2s;
      print(searchlog.search67.date);
      expect(searchlog.search67.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.date = defalut;
      print(searchlog.search67.date);
      expect(searchlog.search67.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00419_element_check_00395 **********\n\n");
    });

    test('00420_element_check_00396', () async {
      print("\n********** テスト実行：00420_element_check_00396 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.term_date;
      print(searchlog.search67.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.term_date = testData1;
      print(searchlog.search67.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.term_date = testData2;
      print(searchlog.search67.term_date);
      expect(searchlog.search67.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.term_date = defalut;
      print(searchlog.search67.term_date);
      expect(searchlog.search67.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00420_element_check_00396 **********\n\n");
    });

    test('00421_element_check_00397', () async {
      print("\n********** テスト実行：00421_element_check_00397 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.out_count;
      print(searchlog.search67.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.out_count = testData1;
      print(searchlog.search67.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.out_count = testData2;
      print(searchlog.search67.out_count);
      expect(searchlog.search67.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.out_count = defalut;
      print(searchlog.search67.out_count);
      expect(searchlog.search67.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00421_element_check_00397 **********\n\n");
    });

    test('00422_element_check_00398', () async {
      print("\n********** テスト実行：00422_element_check_00398 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.print_word;
      print(searchlog.search67.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.print_word = testData1s;
      print(searchlog.search67.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.print_word = testData2s;
      print(searchlog.search67.print_word);
      expect(searchlog.search67.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.print_word = defalut;
      print(searchlog.search67.print_word);
      expect(searchlog.search67.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00422_element_check_00398 **********\n\n");
    });

    test('00423_element_check_00399', () async {
      print("\n********** テスト実行：00423_element_check_00399 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.words;
      print(searchlog.search67.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.words = testData1;
      print(searchlog.search67.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.words = testData2;
      print(searchlog.search67.words);
      expect(searchlog.search67.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.words = defalut;
      print(searchlog.search67.words);
      expect(searchlog.search67.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00423_element_check_00399 **********\n\n");
    });

    test('00424_element_check_00400', () async {
      print("\n********** テスト実行：00424_element_check_00400 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.search_word1;
      print(searchlog.search67.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.search_word1 = testData1s;
      print(searchlog.search67.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.search_word1 = testData2s;
      print(searchlog.search67.search_word1);
      expect(searchlog.search67.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.search_word1 = defalut;
      print(searchlog.search67.search_word1);
      expect(searchlog.search67.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00424_element_check_00400 **********\n\n");
    });

    test('00425_element_check_00401', () async {
      print("\n********** テスト実行：00425_element_check_00401 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.search_word1_sata;
      print(searchlog.search67.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.search_word1_sata = testData1s;
      print(searchlog.search67.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.search_word1_sata = testData2s;
      print(searchlog.search67.search_word1_sata);
      expect(searchlog.search67.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.search_word1_sata = defalut;
      print(searchlog.search67.search_word1_sata);
      expect(searchlog.search67.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00425_element_check_00401 **********\n\n");
    });

    test('00426_element_check_00402', () async {
      print("\n********** テスト実行：00426_element_check_00402 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search67.description;
      print(searchlog.search67.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search67.description = testData1s;
      print(searchlog.search67.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search67.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search67.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search67.description = testData2s;
      print(searchlog.search67.description);
      expect(searchlog.search67.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search67.description = defalut;
      print(searchlog.search67.description);
      expect(searchlog.search67.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search67.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00426_element_check_00402 **********\n\n");
    });

    test('00427_element_check_00403', () async {
      print("\n********** テスト実行：00427_element_check_00403 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.file_name;
      print(searchlog.search68.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.file_name = testData1s;
      print(searchlog.search68.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.file_name = testData2s;
      print(searchlog.search68.file_name);
      expect(searchlog.search68.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.file_name = defalut;
      print(searchlog.search68.file_name);
      expect(searchlog.search68.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00427_element_check_00403 **********\n\n");
    });

    test('00428_element_check_00404', () async {
      print("\n********** テスト実行：00428_element_check_00404 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.typ;
      print(searchlog.search68.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.typ = testData1;
      print(searchlog.search68.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.typ = testData2;
      print(searchlog.search68.typ);
      expect(searchlog.search68.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.typ = defalut;
      print(searchlog.search68.typ);
      expect(searchlog.search68.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00428_element_check_00404 **********\n\n");
    });

    test('00429_element_check_00405', () async {
      print("\n********** テスト実行：00429_element_check_00405 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.date;
      print(searchlog.search68.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.date = testData1s;
      print(searchlog.search68.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.date = testData2s;
      print(searchlog.search68.date);
      expect(searchlog.search68.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.date = defalut;
      print(searchlog.search68.date);
      expect(searchlog.search68.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00429_element_check_00405 **********\n\n");
    });

    test('00430_element_check_00406', () async {
      print("\n********** テスト実行：00430_element_check_00406 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.term_date;
      print(searchlog.search68.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.term_date = testData1;
      print(searchlog.search68.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.term_date = testData2;
      print(searchlog.search68.term_date);
      expect(searchlog.search68.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.term_date = defalut;
      print(searchlog.search68.term_date);
      expect(searchlog.search68.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00430_element_check_00406 **********\n\n");
    });

    test('00431_element_check_00407', () async {
      print("\n********** テスト実行：00431_element_check_00407 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.out_count;
      print(searchlog.search68.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.out_count = testData1;
      print(searchlog.search68.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.out_count = testData2;
      print(searchlog.search68.out_count);
      expect(searchlog.search68.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.out_count = defalut;
      print(searchlog.search68.out_count);
      expect(searchlog.search68.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00431_element_check_00407 **********\n\n");
    });

    test('00432_element_check_00408', () async {
      print("\n********** テスト実行：00432_element_check_00408 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.print_word;
      print(searchlog.search68.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.print_word = testData1s;
      print(searchlog.search68.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.print_word = testData2s;
      print(searchlog.search68.print_word);
      expect(searchlog.search68.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.print_word = defalut;
      print(searchlog.search68.print_word);
      expect(searchlog.search68.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00432_element_check_00408 **********\n\n");
    });

    test('00433_element_check_00409', () async {
      print("\n********** テスト実行：00433_element_check_00409 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.words;
      print(searchlog.search68.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.words = testData1;
      print(searchlog.search68.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.words = testData2;
      print(searchlog.search68.words);
      expect(searchlog.search68.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.words = defalut;
      print(searchlog.search68.words);
      expect(searchlog.search68.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00433_element_check_00409 **********\n\n");
    });

    test('00434_element_check_00410', () async {
      print("\n********** テスト実行：00434_element_check_00410 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.search_word1;
      print(searchlog.search68.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.search_word1 = testData1s;
      print(searchlog.search68.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.search_word1 = testData2s;
      print(searchlog.search68.search_word1);
      expect(searchlog.search68.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.search_word1 = defalut;
      print(searchlog.search68.search_word1);
      expect(searchlog.search68.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00434_element_check_00410 **********\n\n");
    });

    test('00435_element_check_00411', () async {
      print("\n********** テスト実行：00435_element_check_00411 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.search_word1_sata;
      print(searchlog.search68.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.search_word1_sata = testData1s;
      print(searchlog.search68.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.search_word1_sata = testData2s;
      print(searchlog.search68.search_word1_sata);
      expect(searchlog.search68.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.search_word1_sata = defalut;
      print(searchlog.search68.search_word1_sata);
      expect(searchlog.search68.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00435_element_check_00411 **********\n\n");
    });

    test('00436_element_check_00412', () async {
      print("\n********** テスト実行：00436_element_check_00412 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search68.description;
      print(searchlog.search68.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search68.description = testData1s;
      print(searchlog.search68.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search68.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search68.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search68.description = testData2s;
      print(searchlog.search68.description);
      expect(searchlog.search68.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search68.description = defalut;
      print(searchlog.search68.description);
      expect(searchlog.search68.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search68.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00436_element_check_00412 **********\n\n");
    });

    test('00437_element_check_00413', () async {
      print("\n********** テスト実行：00437_element_check_00413 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.file_name;
      print(searchlog.search69.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.file_name = testData1s;
      print(searchlog.search69.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.file_name = testData2s;
      print(searchlog.search69.file_name);
      expect(searchlog.search69.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.file_name = defalut;
      print(searchlog.search69.file_name);
      expect(searchlog.search69.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00437_element_check_00413 **********\n\n");
    });

    test('00438_element_check_00414', () async {
      print("\n********** テスト実行：00438_element_check_00414 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.typ;
      print(searchlog.search69.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.typ = testData1;
      print(searchlog.search69.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.typ = testData2;
      print(searchlog.search69.typ);
      expect(searchlog.search69.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.typ = defalut;
      print(searchlog.search69.typ);
      expect(searchlog.search69.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00438_element_check_00414 **********\n\n");
    });

    test('00439_element_check_00415', () async {
      print("\n********** テスト実行：00439_element_check_00415 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.date;
      print(searchlog.search69.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.date = testData1s;
      print(searchlog.search69.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.date = testData2s;
      print(searchlog.search69.date);
      expect(searchlog.search69.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.date = defalut;
      print(searchlog.search69.date);
      expect(searchlog.search69.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00439_element_check_00415 **********\n\n");
    });

    test('00440_element_check_00416', () async {
      print("\n********** テスト実行：00440_element_check_00416 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.term_date;
      print(searchlog.search69.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.term_date = testData1;
      print(searchlog.search69.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.term_date = testData2;
      print(searchlog.search69.term_date);
      expect(searchlog.search69.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.term_date = defalut;
      print(searchlog.search69.term_date);
      expect(searchlog.search69.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00440_element_check_00416 **********\n\n");
    });

    test('00441_element_check_00417', () async {
      print("\n********** テスト実行：00441_element_check_00417 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.out_count;
      print(searchlog.search69.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.out_count = testData1;
      print(searchlog.search69.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.out_count = testData2;
      print(searchlog.search69.out_count);
      expect(searchlog.search69.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.out_count = defalut;
      print(searchlog.search69.out_count);
      expect(searchlog.search69.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00441_element_check_00417 **********\n\n");
    });

    test('00442_element_check_00418', () async {
      print("\n********** テスト実行：00442_element_check_00418 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.print_word;
      print(searchlog.search69.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.print_word = testData1s;
      print(searchlog.search69.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.print_word = testData2s;
      print(searchlog.search69.print_word);
      expect(searchlog.search69.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.print_word = defalut;
      print(searchlog.search69.print_word);
      expect(searchlog.search69.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00442_element_check_00418 **********\n\n");
    });

    test('00443_element_check_00419', () async {
      print("\n********** テスト実行：00443_element_check_00419 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.words;
      print(searchlog.search69.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.words = testData1;
      print(searchlog.search69.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.words = testData2;
      print(searchlog.search69.words);
      expect(searchlog.search69.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.words = defalut;
      print(searchlog.search69.words);
      expect(searchlog.search69.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00443_element_check_00419 **********\n\n");
    });

    test('00444_element_check_00420', () async {
      print("\n********** テスト実行：00444_element_check_00420 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.search_word1;
      print(searchlog.search69.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.search_word1 = testData1s;
      print(searchlog.search69.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.search_word1 = testData2s;
      print(searchlog.search69.search_word1);
      expect(searchlog.search69.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.search_word1 = defalut;
      print(searchlog.search69.search_word1);
      expect(searchlog.search69.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00444_element_check_00420 **********\n\n");
    });

    test('00445_element_check_00421', () async {
      print("\n********** テスト実行：00445_element_check_00421 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.search_word1_sata;
      print(searchlog.search69.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.search_word1_sata = testData1s;
      print(searchlog.search69.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.search_word1_sata = testData2s;
      print(searchlog.search69.search_word1_sata);
      expect(searchlog.search69.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.search_word1_sata = defalut;
      print(searchlog.search69.search_word1_sata);
      expect(searchlog.search69.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00445_element_check_00421 **********\n\n");
    });

    test('00446_element_check_00422', () async {
      print("\n********** テスト実行：00446_element_check_00422 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search69.description;
      print(searchlog.search69.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search69.description = testData1s;
      print(searchlog.search69.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search69.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search69.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search69.description = testData2s;
      print(searchlog.search69.description);
      expect(searchlog.search69.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search69.description = defalut;
      print(searchlog.search69.description);
      expect(searchlog.search69.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search69.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00446_element_check_00422 **********\n\n");
    });

    test('00447_element_check_00423', () async {
      print("\n********** テスト実行：00447_element_check_00423 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.file_name;
      print(searchlog.search70.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.file_name = testData1s;
      print(searchlog.search70.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.file_name = testData2s;
      print(searchlog.search70.file_name);
      expect(searchlog.search70.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.file_name = defalut;
      print(searchlog.search70.file_name);
      expect(searchlog.search70.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00447_element_check_00423 **********\n\n");
    });

    test('00448_element_check_00424', () async {
      print("\n********** テスト実行：00448_element_check_00424 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.typ;
      print(searchlog.search70.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.typ = testData1;
      print(searchlog.search70.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.typ = testData2;
      print(searchlog.search70.typ);
      expect(searchlog.search70.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.typ = defalut;
      print(searchlog.search70.typ);
      expect(searchlog.search70.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00448_element_check_00424 **********\n\n");
    });

    test('00449_element_check_00425', () async {
      print("\n********** テスト実行：00449_element_check_00425 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.date;
      print(searchlog.search70.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.date = testData1s;
      print(searchlog.search70.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.date = testData2s;
      print(searchlog.search70.date);
      expect(searchlog.search70.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.date = defalut;
      print(searchlog.search70.date);
      expect(searchlog.search70.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00449_element_check_00425 **********\n\n");
    });

    test('00450_element_check_00426', () async {
      print("\n********** テスト実行：00450_element_check_00426 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.term_date;
      print(searchlog.search70.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.term_date = testData1;
      print(searchlog.search70.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.term_date = testData2;
      print(searchlog.search70.term_date);
      expect(searchlog.search70.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.term_date = defalut;
      print(searchlog.search70.term_date);
      expect(searchlog.search70.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00450_element_check_00426 **********\n\n");
    });

    test('00451_element_check_00427', () async {
      print("\n********** テスト実行：00451_element_check_00427 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.out_count;
      print(searchlog.search70.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.out_count = testData1;
      print(searchlog.search70.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.out_count = testData2;
      print(searchlog.search70.out_count);
      expect(searchlog.search70.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.out_count = defalut;
      print(searchlog.search70.out_count);
      expect(searchlog.search70.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00451_element_check_00427 **********\n\n");
    });

    test('00452_element_check_00428', () async {
      print("\n********** テスト実行：00452_element_check_00428 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.print_word;
      print(searchlog.search70.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.print_word = testData1s;
      print(searchlog.search70.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.print_word = testData2s;
      print(searchlog.search70.print_word);
      expect(searchlog.search70.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.print_word = defalut;
      print(searchlog.search70.print_word);
      expect(searchlog.search70.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00452_element_check_00428 **********\n\n");
    });

    test('00453_element_check_00429', () async {
      print("\n********** テスト実行：00453_element_check_00429 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.words;
      print(searchlog.search70.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.words = testData1;
      print(searchlog.search70.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.words = testData2;
      print(searchlog.search70.words);
      expect(searchlog.search70.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.words = defalut;
      print(searchlog.search70.words);
      expect(searchlog.search70.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00453_element_check_00429 **********\n\n");
    });

    test('00454_element_check_00430', () async {
      print("\n********** テスト実行：00454_element_check_00430 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.search_word1;
      print(searchlog.search70.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.search_word1 = testData1s;
      print(searchlog.search70.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.search_word1 = testData2s;
      print(searchlog.search70.search_word1);
      expect(searchlog.search70.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.search_word1 = defalut;
      print(searchlog.search70.search_word1);
      expect(searchlog.search70.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00454_element_check_00430 **********\n\n");
    });

    test('00455_element_check_00431', () async {
      print("\n********** テスト実行：00455_element_check_00431 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.search_word1_sata;
      print(searchlog.search70.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.search_word1_sata = testData1s;
      print(searchlog.search70.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.search_word1_sata = testData2s;
      print(searchlog.search70.search_word1_sata);
      expect(searchlog.search70.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.search_word1_sata = defalut;
      print(searchlog.search70.search_word1_sata);
      expect(searchlog.search70.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00455_element_check_00431 **********\n\n");
    });

    test('00456_element_check_00432', () async {
      print("\n********** テスト実行：00456_element_check_00432 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search70.description;
      print(searchlog.search70.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search70.description = testData1s;
      print(searchlog.search70.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search70.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search70.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search70.description = testData2s;
      print(searchlog.search70.description);
      expect(searchlog.search70.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search70.description = defalut;
      print(searchlog.search70.description);
      expect(searchlog.search70.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search70.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00456_element_check_00432 **********\n\n");
    });

    test('00457_element_check_00433', () async {
      print("\n********** テスト実行：00457_element_check_00433 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.file_name;
      print(searchlog.search71.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.file_name = testData1s;
      print(searchlog.search71.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.file_name = testData2s;
      print(searchlog.search71.file_name);
      expect(searchlog.search71.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.file_name = defalut;
      print(searchlog.search71.file_name);
      expect(searchlog.search71.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00457_element_check_00433 **********\n\n");
    });

    test('00458_element_check_00434', () async {
      print("\n********** テスト実行：00458_element_check_00434 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.typ;
      print(searchlog.search71.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.typ = testData1;
      print(searchlog.search71.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.typ = testData2;
      print(searchlog.search71.typ);
      expect(searchlog.search71.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.typ = defalut;
      print(searchlog.search71.typ);
      expect(searchlog.search71.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00458_element_check_00434 **********\n\n");
    });

    test('00459_element_check_00435', () async {
      print("\n********** テスト実行：00459_element_check_00435 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.date;
      print(searchlog.search71.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.date = testData1s;
      print(searchlog.search71.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.date = testData2s;
      print(searchlog.search71.date);
      expect(searchlog.search71.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.date = defalut;
      print(searchlog.search71.date);
      expect(searchlog.search71.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00459_element_check_00435 **********\n\n");
    });

    test('00460_element_check_00436', () async {
      print("\n********** テスト実行：00460_element_check_00436 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.term_date;
      print(searchlog.search71.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.term_date = testData1;
      print(searchlog.search71.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.term_date = testData2;
      print(searchlog.search71.term_date);
      expect(searchlog.search71.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.term_date = defalut;
      print(searchlog.search71.term_date);
      expect(searchlog.search71.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00460_element_check_00436 **********\n\n");
    });

    test('00461_element_check_00437', () async {
      print("\n********** テスト実行：00461_element_check_00437 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.out_count;
      print(searchlog.search71.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.out_count = testData1;
      print(searchlog.search71.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.out_count = testData2;
      print(searchlog.search71.out_count);
      expect(searchlog.search71.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.out_count = defalut;
      print(searchlog.search71.out_count);
      expect(searchlog.search71.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00461_element_check_00437 **********\n\n");
    });

    test('00462_element_check_00438', () async {
      print("\n********** テスト実行：00462_element_check_00438 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.print_word;
      print(searchlog.search71.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.print_word = testData1s;
      print(searchlog.search71.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.print_word = testData2s;
      print(searchlog.search71.print_word);
      expect(searchlog.search71.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.print_word = defalut;
      print(searchlog.search71.print_word);
      expect(searchlog.search71.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00462_element_check_00438 **********\n\n");
    });

    test('00463_element_check_00439', () async {
      print("\n********** テスト実行：00463_element_check_00439 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.words;
      print(searchlog.search71.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.words = testData1;
      print(searchlog.search71.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.words = testData2;
      print(searchlog.search71.words);
      expect(searchlog.search71.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.words = defalut;
      print(searchlog.search71.words);
      expect(searchlog.search71.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00463_element_check_00439 **********\n\n");
    });

    test('00464_element_check_00440', () async {
      print("\n********** テスト実行：00464_element_check_00440 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.search_word1;
      print(searchlog.search71.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.search_word1 = testData1s;
      print(searchlog.search71.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.search_word1 = testData2s;
      print(searchlog.search71.search_word1);
      expect(searchlog.search71.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.search_word1 = defalut;
      print(searchlog.search71.search_word1);
      expect(searchlog.search71.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00464_element_check_00440 **********\n\n");
    });

    test('00465_element_check_00441', () async {
      print("\n********** テスト実行：00465_element_check_00441 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.search_word1_sata;
      print(searchlog.search71.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.search_word1_sata = testData1s;
      print(searchlog.search71.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.search_word1_sata = testData2s;
      print(searchlog.search71.search_word1_sata);
      expect(searchlog.search71.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.search_word1_sata = defalut;
      print(searchlog.search71.search_word1_sata);
      expect(searchlog.search71.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00465_element_check_00441 **********\n\n");
    });

    test('00466_element_check_00442', () async {
      print("\n********** テスト実行：00466_element_check_00442 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search71.description;
      print(searchlog.search71.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search71.description = testData1s;
      print(searchlog.search71.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search71.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search71.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search71.description = testData2s;
      print(searchlog.search71.description);
      expect(searchlog.search71.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search71.description = defalut;
      print(searchlog.search71.description);
      expect(searchlog.search71.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search71.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00466_element_check_00442 **********\n\n");
    });

    test('00467_element_check_00443', () async {
      print("\n********** テスト実行：00467_element_check_00443 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.file_name;
      print(searchlog.search72.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.file_name = testData1s;
      print(searchlog.search72.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.file_name = testData2s;
      print(searchlog.search72.file_name);
      expect(searchlog.search72.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.file_name = defalut;
      print(searchlog.search72.file_name);
      expect(searchlog.search72.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00467_element_check_00443 **********\n\n");
    });

    test('00468_element_check_00444', () async {
      print("\n********** テスト実行：00468_element_check_00444 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.typ;
      print(searchlog.search72.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.typ = testData1;
      print(searchlog.search72.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.typ = testData2;
      print(searchlog.search72.typ);
      expect(searchlog.search72.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.typ = defalut;
      print(searchlog.search72.typ);
      expect(searchlog.search72.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00468_element_check_00444 **********\n\n");
    });

    test('00469_element_check_00445', () async {
      print("\n********** テスト実行：00469_element_check_00445 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.date;
      print(searchlog.search72.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.date = testData1s;
      print(searchlog.search72.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.date = testData2s;
      print(searchlog.search72.date);
      expect(searchlog.search72.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.date = defalut;
      print(searchlog.search72.date);
      expect(searchlog.search72.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00469_element_check_00445 **********\n\n");
    });

    test('00470_element_check_00446', () async {
      print("\n********** テスト実行：00470_element_check_00446 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.term_date;
      print(searchlog.search72.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.term_date = testData1;
      print(searchlog.search72.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.term_date = testData2;
      print(searchlog.search72.term_date);
      expect(searchlog.search72.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.term_date = defalut;
      print(searchlog.search72.term_date);
      expect(searchlog.search72.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00470_element_check_00446 **********\n\n");
    });

    test('00471_element_check_00447', () async {
      print("\n********** テスト実行：00471_element_check_00447 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.out_count;
      print(searchlog.search72.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.out_count = testData1;
      print(searchlog.search72.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.out_count = testData2;
      print(searchlog.search72.out_count);
      expect(searchlog.search72.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.out_count = defalut;
      print(searchlog.search72.out_count);
      expect(searchlog.search72.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00471_element_check_00447 **********\n\n");
    });

    test('00472_element_check_00448', () async {
      print("\n********** テスト実行：00472_element_check_00448 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.print_word;
      print(searchlog.search72.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.print_word = testData1s;
      print(searchlog.search72.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.print_word = testData2s;
      print(searchlog.search72.print_word);
      expect(searchlog.search72.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.print_word = defalut;
      print(searchlog.search72.print_word);
      expect(searchlog.search72.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00472_element_check_00448 **********\n\n");
    });

    test('00473_element_check_00449', () async {
      print("\n********** テスト実行：00473_element_check_00449 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.words;
      print(searchlog.search72.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.words = testData1;
      print(searchlog.search72.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.words = testData2;
      print(searchlog.search72.words);
      expect(searchlog.search72.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.words = defalut;
      print(searchlog.search72.words);
      expect(searchlog.search72.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00473_element_check_00449 **********\n\n");
    });

    test('00474_element_check_00450', () async {
      print("\n********** テスト実行：00474_element_check_00450 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.search_word1;
      print(searchlog.search72.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.search_word1 = testData1s;
      print(searchlog.search72.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.search_word1 = testData2s;
      print(searchlog.search72.search_word1);
      expect(searchlog.search72.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.search_word1 = defalut;
      print(searchlog.search72.search_word1);
      expect(searchlog.search72.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00474_element_check_00450 **********\n\n");
    });

    test('00475_element_check_00451', () async {
      print("\n********** テスト実行：00475_element_check_00451 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.search_word1_sata;
      print(searchlog.search72.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.search_word1_sata = testData1s;
      print(searchlog.search72.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.search_word1_sata = testData2s;
      print(searchlog.search72.search_word1_sata);
      expect(searchlog.search72.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.search_word1_sata = defalut;
      print(searchlog.search72.search_word1_sata);
      expect(searchlog.search72.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00475_element_check_00451 **********\n\n");
    });

    test('00476_element_check_00452', () async {
      print("\n********** テスト実行：00476_element_check_00452 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search72.description;
      print(searchlog.search72.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search72.description = testData1s;
      print(searchlog.search72.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search72.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search72.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search72.description = testData2s;
      print(searchlog.search72.description);
      expect(searchlog.search72.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search72.description = defalut;
      print(searchlog.search72.description);
      expect(searchlog.search72.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search72.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00476_element_check_00452 **********\n\n");
    });

    test('00477_element_check_00453', () async {
      print("\n********** テスト実行：00477_element_check_00453 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.file_name;
      print(searchlog.search73.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.file_name = testData1s;
      print(searchlog.search73.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.file_name = testData2s;
      print(searchlog.search73.file_name);
      expect(searchlog.search73.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.file_name = defalut;
      print(searchlog.search73.file_name);
      expect(searchlog.search73.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00477_element_check_00453 **********\n\n");
    });

    test('00478_element_check_00454', () async {
      print("\n********** テスト実行：00478_element_check_00454 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.typ;
      print(searchlog.search73.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.typ = testData1;
      print(searchlog.search73.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.typ = testData2;
      print(searchlog.search73.typ);
      expect(searchlog.search73.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.typ = defalut;
      print(searchlog.search73.typ);
      expect(searchlog.search73.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00478_element_check_00454 **********\n\n");
    });

    test('00479_element_check_00455', () async {
      print("\n********** テスト実行：00479_element_check_00455 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.date;
      print(searchlog.search73.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.date = testData1s;
      print(searchlog.search73.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.date = testData2s;
      print(searchlog.search73.date);
      expect(searchlog.search73.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.date = defalut;
      print(searchlog.search73.date);
      expect(searchlog.search73.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00479_element_check_00455 **********\n\n");
    });

    test('00480_element_check_00456', () async {
      print("\n********** テスト実行：00480_element_check_00456 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.term_date;
      print(searchlog.search73.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.term_date = testData1;
      print(searchlog.search73.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.term_date = testData2;
      print(searchlog.search73.term_date);
      expect(searchlog.search73.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.term_date = defalut;
      print(searchlog.search73.term_date);
      expect(searchlog.search73.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00480_element_check_00456 **********\n\n");
    });

    test('00481_element_check_00457', () async {
      print("\n********** テスト実行：00481_element_check_00457 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.out_count;
      print(searchlog.search73.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.out_count = testData1;
      print(searchlog.search73.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.out_count = testData2;
      print(searchlog.search73.out_count);
      expect(searchlog.search73.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.out_count = defalut;
      print(searchlog.search73.out_count);
      expect(searchlog.search73.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00481_element_check_00457 **********\n\n");
    });

    test('00482_element_check_00458', () async {
      print("\n********** テスト実行：00482_element_check_00458 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.print_word;
      print(searchlog.search73.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.print_word = testData1s;
      print(searchlog.search73.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.print_word = testData2s;
      print(searchlog.search73.print_word);
      expect(searchlog.search73.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.print_word = defalut;
      print(searchlog.search73.print_word);
      expect(searchlog.search73.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00482_element_check_00458 **********\n\n");
    });

    test('00483_element_check_00459', () async {
      print("\n********** テスト実行：00483_element_check_00459 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.words;
      print(searchlog.search73.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.words = testData1;
      print(searchlog.search73.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.words = testData2;
      print(searchlog.search73.words);
      expect(searchlog.search73.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.words = defalut;
      print(searchlog.search73.words);
      expect(searchlog.search73.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00483_element_check_00459 **********\n\n");
    });

    test('00484_element_check_00460', () async {
      print("\n********** テスト実行：00484_element_check_00460 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.search_word1;
      print(searchlog.search73.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.search_word1 = testData1s;
      print(searchlog.search73.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.search_word1 = testData2s;
      print(searchlog.search73.search_word1);
      expect(searchlog.search73.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.search_word1 = defalut;
      print(searchlog.search73.search_word1);
      expect(searchlog.search73.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00484_element_check_00460 **********\n\n");
    });

    test('00485_element_check_00461', () async {
      print("\n********** テスト実行：00485_element_check_00461 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.search_word1_sata;
      print(searchlog.search73.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.search_word1_sata = testData1s;
      print(searchlog.search73.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.search_word1_sata = testData2s;
      print(searchlog.search73.search_word1_sata);
      expect(searchlog.search73.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.search_word1_sata = defalut;
      print(searchlog.search73.search_word1_sata);
      expect(searchlog.search73.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00485_element_check_00461 **********\n\n");
    });

    test('00486_element_check_00462', () async {
      print("\n********** テスト実行：00486_element_check_00462 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search73.description;
      print(searchlog.search73.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search73.description = testData1s;
      print(searchlog.search73.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search73.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search73.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search73.description = testData2s;
      print(searchlog.search73.description);
      expect(searchlog.search73.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search73.description = defalut;
      print(searchlog.search73.description);
      expect(searchlog.search73.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search73.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00486_element_check_00462 **********\n\n");
    });

    test('00487_element_check_00463', () async {
      print("\n********** テスト実行：00487_element_check_00463 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.file_name;
      print(searchlog.search74.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.file_name = testData1s;
      print(searchlog.search74.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.file_name = testData2s;
      print(searchlog.search74.file_name);
      expect(searchlog.search74.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.file_name = defalut;
      print(searchlog.search74.file_name);
      expect(searchlog.search74.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00487_element_check_00463 **********\n\n");
    });

    test('00488_element_check_00464', () async {
      print("\n********** テスト実行：00488_element_check_00464 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.typ;
      print(searchlog.search74.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.typ = testData1;
      print(searchlog.search74.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.typ = testData2;
      print(searchlog.search74.typ);
      expect(searchlog.search74.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.typ = defalut;
      print(searchlog.search74.typ);
      expect(searchlog.search74.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00488_element_check_00464 **********\n\n");
    });

    test('00489_element_check_00465', () async {
      print("\n********** テスト実行：00489_element_check_00465 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.date;
      print(searchlog.search74.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.date = testData1s;
      print(searchlog.search74.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.date = testData2s;
      print(searchlog.search74.date);
      expect(searchlog.search74.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.date = defalut;
      print(searchlog.search74.date);
      expect(searchlog.search74.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00489_element_check_00465 **********\n\n");
    });

    test('00490_element_check_00466', () async {
      print("\n********** テスト実行：00490_element_check_00466 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.term_date;
      print(searchlog.search74.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.term_date = testData1;
      print(searchlog.search74.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.term_date = testData2;
      print(searchlog.search74.term_date);
      expect(searchlog.search74.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.term_date = defalut;
      print(searchlog.search74.term_date);
      expect(searchlog.search74.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00490_element_check_00466 **********\n\n");
    });

    test('00491_element_check_00467', () async {
      print("\n********** テスト実行：00491_element_check_00467 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.out_count;
      print(searchlog.search74.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.out_count = testData1;
      print(searchlog.search74.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.out_count = testData2;
      print(searchlog.search74.out_count);
      expect(searchlog.search74.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.out_count = defalut;
      print(searchlog.search74.out_count);
      expect(searchlog.search74.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00491_element_check_00467 **********\n\n");
    });

    test('00492_element_check_00468', () async {
      print("\n********** テスト実行：00492_element_check_00468 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.print_word;
      print(searchlog.search74.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.print_word = testData1s;
      print(searchlog.search74.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.print_word = testData2s;
      print(searchlog.search74.print_word);
      expect(searchlog.search74.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.print_word = defalut;
      print(searchlog.search74.print_word);
      expect(searchlog.search74.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00492_element_check_00468 **********\n\n");
    });

    test('00493_element_check_00469', () async {
      print("\n********** テスト実行：00493_element_check_00469 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.words;
      print(searchlog.search74.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.words = testData1;
      print(searchlog.search74.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.words = testData2;
      print(searchlog.search74.words);
      expect(searchlog.search74.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.words = defalut;
      print(searchlog.search74.words);
      expect(searchlog.search74.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00493_element_check_00469 **********\n\n");
    });

    test('00494_element_check_00470', () async {
      print("\n********** テスト実行：00494_element_check_00470 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.search_word1;
      print(searchlog.search74.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.search_word1 = testData1s;
      print(searchlog.search74.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.search_word1 = testData2s;
      print(searchlog.search74.search_word1);
      expect(searchlog.search74.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.search_word1 = defalut;
      print(searchlog.search74.search_word1);
      expect(searchlog.search74.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00494_element_check_00470 **********\n\n");
    });

    test('00495_element_check_00471', () async {
      print("\n********** テスト実行：00495_element_check_00471 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.search_word1_sata;
      print(searchlog.search74.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.search_word1_sata = testData1s;
      print(searchlog.search74.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.search_word1_sata = testData2s;
      print(searchlog.search74.search_word1_sata);
      expect(searchlog.search74.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.search_word1_sata = defalut;
      print(searchlog.search74.search_word1_sata);
      expect(searchlog.search74.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00495_element_check_00471 **********\n\n");
    });

    test('00496_element_check_00472', () async {
      print("\n********** テスト実行：00496_element_check_00472 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search74.description;
      print(searchlog.search74.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search74.description = testData1s;
      print(searchlog.search74.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search74.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search74.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search74.description = testData2s;
      print(searchlog.search74.description);
      expect(searchlog.search74.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search74.description = defalut;
      print(searchlog.search74.description);
      expect(searchlog.search74.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search74.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00496_element_check_00472 **********\n\n");
    });

    test('00497_element_check_00473', () async {
      print("\n********** テスト実行：00497_element_check_00473 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.file_name;
      print(searchlog.search75.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.file_name = testData1s;
      print(searchlog.search75.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.file_name = testData2s;
      print(searchlog.search75.file_name);
      expect(searchlog.search75.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.file_name = defalut;
      print(searchlog.search75.file_name);
      expect(searchlog.search75.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00497_element_check_00473 **********\n\n");
    });

    test('00498_element_check_00474', () async {
      print("\n********** テスト実行：00498_element_check_00474 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.typ;
      print(searchlog.search75.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.typ = testData1;
      print(searchlog.search75.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.typ = testData2;
      print(searchlog.search75.typ);
      expect(searchlog.search75.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.typ = defalut;
      print(searchlog.search75.typ);
      expect(searchlog.search75.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00498_element_check_00474 **********\n\n");
    });

    test('00499_element_check_00475', () async {
      print("\n********** テスト実行：00499_element_check_00475 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.date;
      print(searchlog.search75.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.date = testData1s;
      print(searchlog.search75.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.date = testData2s;
      print(searchlog.search75.date);
      expect(searchlog.search75.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.date = defalut;
      print(searchlog.search75.date);
      expect(searchlog.search75.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00499_element_check_00475 **********\n\n");
    });

    test('00500_element_check_00476', () async {
      print("\n********** テスト実行：00500_element_check_00476 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.term_date;
      print(searchlog.search75.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.term_date = testData1;
      print(searchlog.search75.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.term_date = testData2;
      print(searchlog.search75.term_date);
      expect(searchlog.search75.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.term_date = defalut;
      print(searchlog.search75.term_date);
      expect(searchlog.search75.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00500_element_check_00476 **********\n\n");
    });

    test('00501_element_check_00477', () async {
      print("\n********** テスト実行：00501_element_check_00477 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.out_count;
      print(searchlog.search75.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.out_count = testData1;
      print(searchlog.search75.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.out_count = testData2;
      print(searchlog.search75.out_count);
      expect(searchlog.search75.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.out_count = defalut;
      print(searchlog.search75.out_count);
      expect(searchlog.search75.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00501_element_check_00477 **********\n\n");
    });

    test('00502_element_check_00478', () async {
      print("\n********** テスト実行：00502_element_check_00478 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.print_word;
      print(searchlog.search75.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.print_word = testData1s;
      print(searchlog.search75.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.print_word = testData2s;
      print(searchlog.search75.print_word);
      expect(searchlog.search75.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.print_word = defalut;
      print(searchlog.search75.print_word);
      expect(searchlog.search75.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00502_element_check_00478 **********\n\n");
    });

    test('00503_element_check_00479', () async {
      print("\n********** テスト実行：00503_element_check_00479 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.words;
      print(searchlog.search75.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.words = testData1;
      print(searchlog.search75.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.words = testData2;
      print(searchlog.search75.words);
      expect(searchlog.search75.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.words = defalut;
      print(searchlog.search75.words);
      expect(searchlog.search75.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00503_element_check_00479 **********\n\n");
    });

    test('00504_element_check_00480', () async {
      print("\n********** テスト実行：00504_element_check_00480 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.search_word1;
      print(searchlog.search75.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.search_word1 = testData1s;
      print(searchlog.search75.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.search_word1 = testData2s;
      print(searchlog.search75.search_word1);
      expect(searchlog.search75.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.search_word1 = defalut;
      print(searchlog.search75.search_word1);
      expect(searchlog.search75.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00504_element_check_00480 **********\n\n");
    });

    test('00505_element_check_00481', () async {
      print("\n********** テスト実行：00505_element_check_00481 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.search_word1_sata;
      print(searchlog.search75.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.search_word1_sata = testData1s;
      print(searchlog.search75.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.search_word1_sata = testData2s;
      print(searchlog.search75.search_word1_sata);
      expect(searchlog.search75.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.search_word1_sata = defalut;
      print(searchlog.search75.search_word1_sata);
      expect(searchlog.search75.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00505_element_check_00481 **********\n\n");
    });

    test('00506_element_check_00482', () async {
      print("\n********** テスト実行：00506_element_check_00482 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search75.description;
      print(searchlog.search75.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search75.description = testData1s;
      print(searchlog.search75.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search75.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search75.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search75.description = testData2s;
      print(searchlog.search75.description);
      expect(searchlog.search75.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search75.description = defalut;
      print(searchlog.search75.description);
      expect(searchlog.search75.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search75.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00506_element_check_00482 **********\n\n");
    });

    test('00507_element_check_00483', () async {
      print("\n********** テスト実行：00507_element_check_00483 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.file_name;
      print(searchlog.search76.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.file_name = testData1s;
      print(searchlog.search76.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.file_name = testData2s;
      print(searchlog.search76.file_name);
      expect(searchlog.search76.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.file_name = defalut;
      print(searchlog.search76.file_name);
      expect(searchlog.search76.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00507_element_check_00483 **********\n\n");
    });

    test('00508_element_check_00484', () async {
      print("\n********** テスト実行：00508_element_check_00484 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.typ;
      print(searchlog.search76.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.typ = testData1;
      print(searchlog.search76.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.typ = testData2;
      print(searchlog.search76.typ);
      expect(searchlog.search76.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.typ = defalut;
      print(searchlog.search76.typ);
      expect(searchlog.search76.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00508_element_check_00484 **********\n\n");
    });

    test('00509_element_check_00485', () async {
      print("\n********** テスト実行：00509_element_check_00485 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.date;
      print(searchlog.search76.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.date = testData1s;
      print(searchlog.search76.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.date = testData2s;
      print(searchlog.search76.date);
      expect(searchlog.search76.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.date = defalut;
      print(searchlog.search76.date);
      expect(searchlog.search76.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00509_element_check_00485 **********\n\n");
    });

    test('00510_element_check_00486', () async {
      print("\n********** テスト実行：00510_element_check_00486 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.term_date;
      print(searchlog.search76.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.term_date = testData1;
      print(searchlog.search76.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.term_date = testData2;
      print(searchlog.search76.term_date);
      expect(searchlog.search76.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.term_date = defalut;
      print(searchlog.search76.term_date);
      expect(searchlog.search76.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00510_element_check_00486 **********\n\n");
    });

    test('00511_element_check_00487', () async {
      print("\n********** テスト実行：00511_element_check_00487 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.out_count;
      print(searchlog.search76.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.out_count = testData1;
      print(searchlog.search76.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.out_count = testData2;
      print(searchlog.search76.out_count);
      expect(searchlog.search76.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.out_count = defalut;
      print(searchlog.search76.out_count);
      expect(searchlog.search76.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00511_element_check_00487 **********\n\n");
    });

    test('00512_element_check_00488', () async {
      print("\n********** テスト実行：00512_element_check_00488 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.print_word;
      print(searchlog.search76.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.print_word = testData1s;
      print(searchlog.search76.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.print_word = testData2s;
      print(searchlog.search76.print_word);
      expect(searchlog.search76.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.print_word = defalut;
      print(searchlog.search76.print_word);
      expect(searchlog.search76.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00512_element_check_00488 **********\n\n");
    });

    test('00513_element_check_00489', () async {
      print("\n********** テスト実行：00513_element_check_00489 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.words;
      print(searchlog.search76.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.words = testData1;
      print(searchlog.search76.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.words = testData2;
      print(searchlog.search76.words);
      expect(searchlog.search76.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.words = defalut;
      print(searchlog.search76.words);
      expect(searchlog.search76.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00513_element_check_00489 **********\n\n");
    });

    test('00514_element_check_00490', () async {
      print("\n********** テスト実行：00514_element_check_00490 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.search_word1;
      print(searchlog.search76.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.search_word1 = testData1s;
      print(searchlog.search76.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.search_word1 = testData2s;
      print(searchlog.search76.search_word1);
      expect(searchlog.search76.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.search_word1 = defalut;
      print(searchlog.search76.search_word1);
      expect(searchlog.search76.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00514_element_check_00490 **********\n\n");
    });

    test('00515_element_check_00491', () async {
      print("\n********** テスト実行：00515_element_check_00491 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.search_word1_sata;
      print(searchlog.search76.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.search_word1_sata = testData1s;
      print(searchlog.search76.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.search_word1_sata = testData2s;
      print(searchlog.search76.search_word1_sata);
      expect(searchlog.search76.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.search_word1_sata = defalut;
      print(searchlog.search76.search_word1_sata);
      expect(searchlog.search76.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00515_element_check_00491 **********\n\n");
    });

    test('00516_element_check_00492', () async {
      print("\n********** テスト実行：00516_element_check_00492 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search76.description;
      print(searchlog.search76.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search76.description = testData1s;
      print(searchlog.search76.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search76.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search76.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search76.description = testData2s;
      print(searchlog.search76.description);
      expect(searchlog.search76.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search76.description = defalut;
      print(searchlog.search76.description);
      expect(searchlog.search76.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search76.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00516_element_check_00492 **********\n\n");
    });

    test('00517_element_check_00493', () async {
      print("\n********** テスト実行：00517_element_check_00493 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.file_name;
      print(searchlog.search77.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.file_name = testData1s;
      print(searchlog.search77.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.file_name = testData2s;
      print(searchlog.search77.file_name);
      expect(searchlog.search77.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.file_name = defalut;
      print(searchlog.search77.file_name);
      expect(searchlog.search77.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00517_element_check_00493 **********\n\n");
    });

    test('00518_element_check_00494', () async {
      print("\n********** テスト実行：00518_element_check_00494 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.typ;
      print(searchlog.search77.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.typ = testData1;
      print(searchlog.search77.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.typ = testData2;
      print(searchlog.search77.typ);
      expect(searchlog.search77.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.typ = defalut;
      print(searchlog.search77.typ);
      expect(searchlog.search77.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00518_element_check_00494 **********\n\n");
    });

    test('00519_element_check_00495', () async {
      print("\n********** テスト実行：00519_element_check_00495 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.date;
      print(searchlog.search77.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.date = testData1s;
      print(searchlog.search77.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.date = testData2s;
      print(searchlog.search77.date);
      expect(searchlog.search77.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.date = defalut;
      print(searchlog.search77.date);
      expect(searchlog.search77.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00519_element_check_00495 **********\n\n");
    });

    test('00520_element_check_00496', () async {
      print("\n********** テスト実行：00520_element_check_00496 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.term_date;
      print(searchlog.search77.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.term_date = testData1;
      print(searchlog.search77.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.term_date = testData2;
      print(searchlog.search77.term_date);
      expect(searchlog.search77.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.term_date = defalut;
      print(searchlog.search77.term_date);
      expect(searchlog.search77.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00520_element_check_00496 **********\n\n");
    });

    test('00521_element_check_00497', () async {
      print("\n********** テスト実行：00521_element_check_00497 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.out_count;
      print(searchlog.search77.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.out_count = testData1;
      print(searchlog.search77.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.out_count = testData2;
      print(searchlog.search77.out_count);
      expect(searchlog.search77.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.out_count = defalut;
      print(searchlog.search77.out_count);
      expect(searchlog.search77.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00521_element_check_00497 **********\n\n");
    });

    test('00522_element_check_00498', () async {
      print("\n********** テスト実行：00522_element_check_00498 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.print_word;
      print(searchlog.search77.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.print_word = testData1s;
      print(searchlog.search77.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.print_word = testData2s;
      print(searchlog.search77.print_word);
      expect(searchlog.search77.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.print_word = defalut;
      print(searchlog.search77.print_word);
      expect(searchlog.search77.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00522_element_check_00498 **********\n\n");
    });

    test('00523_element_check_00499', () async {
      print("\n********** テスト実行：00523_element_check_00499 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.words;
      print(searchlog.search77.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.words = testData1;
      print(searchlog.search77.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.words = testData2;
      print(searchlog.search77.words);
      expect(searchlog.search77.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.words = defalut;
      print(searchlog.search77.words);
      expect(searchlog.search77.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00523_element_check_00499 **********\n\n");
    });

    test('00524_element_check_00500', () async {
      print("\n********** テスト実行：00524_element_check_00500 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.search_word1;
      print(searchlog.search77.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.search_word1 = testData1s;
      print(searchlog.search77.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.search_word1 = testData2s;
      print(searchlog.search77.search_word1);
      expect(searchlog.search77.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.search_word1 = defalut;
      print(searchlog.search77.search_word1);
      expect(searchlog.search77.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00524_element_check_00500 **********\n\n");
    });

    test('00525_element_check_00501', () async {
      print("\n********** テスト実行：00525_element_check_00501 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.search_word1_sata;
      print(searchlog.search77.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.search_word1_sata = testData1s;
      print(searchlog.search77.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.search_word1_sata = testData2s;
      print(searchlog.search77.search_word1_sata);
      expect(searchlog.search77.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.search_word1_sata = defalut;
      print(searchlog.search77.search_word1_sata);
      expect(searchlog.search77.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00525_element_check_00501 **********\n\n");
    });

    test('00526_element_check_00502', () async {
      print("\n********** テスト実行：00526_element_check_00502 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search77.description;
      print(searchlog.search77.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search77.description = testData1s;
      print(searchlog.search77.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search77.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search77.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search77.description = testData2s;
      print(searchlog.search77.description);
      expect(searchlog.search77.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search77.description = defalut;
      print(searchlog.search77.description);
      expect(searchlog.search77.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search77.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00526_element_check_00502 **********\n\n");
    });

    test('00527_element_check_00503', () async {
      print("\n********** テスト実行：00527_element_check_00503 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.file_name;
      print(searchlog.search78.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.file_name = testData1s;
      print(searchlog.search78.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.file_name = testData2s;
      print(searchlog.search78.file_name);
      expect(searchlog.search78.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.file_name = defalut;
      print(searchlog.search78.file_name);
      expect(searchlog.search78.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00527_element_check_00503 **********\n\n");
    });

    test('00528_element_check_00504', () async {
      print("\n********** テスト実行：00528_element_check_00504 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.typ;
      print(searchlog.search78.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.typ = testData1;
      print(searchlog.search78.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.typ = testData2;
      print(searchlog.search78.typ);
      expect(searchlog.search78.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.typ = defalut;
      print(searchlog.search78.typ);
      expect(searchlog.search78.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00528_element_check_00504 **********\n\n");
    });

    test('00529_element_check_00505', () async {
      print("\n********** テスト実行：00529_element_check_00505 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.date;
      print(searchlog.search78.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.date = testData1s;
      print(searchlog.search78.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.date = testData2s;
      print(searchlog.search78.date);
      expect(searchlog.search78.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.date = defalut;
      print(searchlog.search78.date);
      expect(searchlog.search78.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00529_element_check_00505 **********\n\n");
    });

    test('00530_element_check_00506', () async {
      print("\n********** テスト実行：00530_element_check_00506 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.term_date;
      print(searchlog.search78.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.term_date = testData1;
      print(searchlog.search78.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.term_date = testData2;
      print(searchlog.search78.term_date);
      expect(searchlog.search78.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.term_date = defalut;
      print(searchlog.search78.term_date);
      expect(searchlog.search78.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00530_element_check_00506 **********\n\n");
    });

    test('00531_element_check_00507', () async {
      print("\n********** テスト実行：00531_element_check_00507 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.out_count;
      print(searchlog.search78.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.out_count = testData1;
      print(searchlog.search78.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.out_count = testData2;
      print(searchlog.search78.out_count);
      expect(searchlog.search78.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.out_count = defalut;
      print(searchlog.search78.out_count);
      expect(searchlog.search78.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00531_element_check_00507 **********\n\n");
    });

    test('00532_element_check_00508', () async {
      print("\n********** テスト実行：00532_element_check_00508 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.print_word;
      print(searchlog.search78.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.print_word = testData1s;
      print(searchlog.search78.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.print_word = testData2s;
      print(searchlog.search78.print_word);
      expect(searchlog.search78.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.print_word = defalut;
      print(searchlog.search78.print_word);
      expect(searchlog.search78.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00532_element_check_00508 **********\n\n");
    });

    test('00533_element_check_00509', () async {
      print("\n********** テスト実行：00533_element_check_00509 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.words;
      print(searchlog.search78.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.words = testData1;
      print(searchlog.search78.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.words = testData2;
      print(searchlog.search78.words);
      expect(searchlog.search78.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.words = defalut;
      print(searchlog.search78.words);
      expect(searchlog.search78.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00533_element_check_00509 **********\n\n");
    });

    test('00534_element_check_00510', () async {
      print("\n********** テスト実行：00534_element_check_00510 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.search_word1;
      print(searchlog.search78.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.search_word1 = testData1s;
      print(searchlog.search78.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.search_word1 = testData2s;
      print(searchlog.search78.search_word1);
      expect(searchlog.search78.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.search_word1 = defalut;
      print(searchlog.search78.search_word1);
      expect(searchlog.search78.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00534_element_check_00510 **********\n\n");
    });

    test('00535_element_check_00511', () async {
      print("\n********** テスト実行：00535_element_check_00511 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.search_word1_sata;
      print(searchlog.search78.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.search_word1_sata = testData1s;
      print(searchlog.search78.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.search_word1_sata = testData2s;
      print(searchlog.search78.search_word1_sata);
      expect(searchlog.search78.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.search_word1_sata = defalut;
      print(searchlog.search78.search_word1_sata);
      expect(searchlog.search78.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00535_element_check_00511 **********\n\n");
    });

    test('00536_element_check_00512', () async {
      print("\n********** テスト実行：00536_element_check_00512 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search78.description;
      print(searchlog.search78.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search78.description = testData1s;
      print(searchlog.search78.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search78.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search78.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search78.description = testData2s;
      print(searchlog.search78.description);
      expect(searchlog.search78.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search78.description = defalut;
      print(searchlog.search78.description);
      expect(searchlog.search78.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search78.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00536_element_check_00512 **********\n\n");
    });

    test('00537_element_check_00513', () async {
      print("\n********** テスト実行：00537_element_check_00513 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.file_name;
      print(searchlog.search79.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.file_name = testData1s;
      print(searchlog.search79.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.file_name = testData2s;
      print(searchlog.search79.file_name);
      expect(searchlog.search79.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.file_name = defalut;
      print(searchlog.search79.file_name);
      expect(searchlog.search79.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00537_element_check_00513 **********\n\n");
    });

    test('00538_element_check_00514', () async {
      print("\n********** テスト実行：00538_element_check_00514 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.typ;
      print(searchlog.search79.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.typ = testData1;
      print(searchlog.search79.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.typ = testData2;
      print(searchlog.search79.typ);
      expect(searchlog.search79.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.typ = defalut;
      print(searchlog.search79.typ);
      expect(searchlog.search79.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00538_element_check_00514 **********\n\n");
    });

    test('00539_element_check_00515', () async {
      print("\n********** テスト実行：00539_element_check_00515 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.date;
      print(searchlog.search79.date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.date = testData1s;
      print(searchlog.search79.date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.date == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.date == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.date = testData2s;
      print(searchlog.search79.date);
      expect(searchlog.search79.date == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.date == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.date = defalut;
      print(searchlog.search79.date);
      expect(searchlog.search79.date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00539_element_check_00515 **********\n\n");
    });

    test('00540_element_check_00516', () async {
      print("\n********** テスト実行：00540_element_check_00516 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.term_date;
      print(searchlog.search79.term_date);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.term_date = testData1;
      print(searchlog.search79.term_date);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.term_date == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.term_date == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.term_date = testData2;
      print(searchlog.search79.term_date);
      expect(searchlog.search79.term_date == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.term_date == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.term_date = defalut;
      print(searchlog.search79.term_date);
      expect(searchlog.search79.term_date == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.term_date == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00540_element_check_00516 **********\n\n");
    });

    test('00541_element_check_00517', () async {
      print("\n********** テスト実行：00541_element_check_00517 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.out_count;
      print(searchlog.search79.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.out_count = testData1;
      print(searchlog.search79.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.out_count = testData2;
      print(searchlog.search79.out_count);
      expect(searchlog.search79.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.out_count = defalut;
      print(searchlog.search79.out_count);
      expect(searchlog.search79.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00541_element_check_00517 **********\n\n");
    });

    test('00542_element_check_00518', () async {
      print("\n********** テスト実行：00542_element_check_00518 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.print_word;
      print(searchlog.search79.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.print_word = testData1s;
      print(searchlog.search79.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.print_word = testData2s;
      print(searchlog.search79.print_word);
      expect(searchlog.search79.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.print_word = defalut;
      print(searchlog.search79.print_word);
      expect(searchlog.search79.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00542_element_check_00518 **********\n\n");
    });

    test('00543_element_check_00519', () async {
      print("\n********** テスト実行：00543_element_check_00519 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.words;
      print(searchlog.search79.words);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.words = testData1;
      print(searchlog.search79.words);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.words == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.words == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.words = testData2;
      print(searchlog.search79.words);
      expect(searchlog.search79.words == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.words == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.words = defalut;
      print(searchlog.search79.words);
      expect(searchlog.search79.words == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.words == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00543_element_check_00519 **********\n\n");
    });

    test('00544_element_check_00520', () async {
      print("\n********** テスト実行：00544_element_check_00520 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.search_word1;
      print(searchlog.search79.search_word1);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.search_word1 = testData1s;
      print(searchlog.search79.search_word1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.search_word1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.search_word1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.search_word1 = testData2s;
      print(searchlog.search79.search_word1);
      expect(searchlog.search79.search_word1 == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.search_word1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.search_word1 = defalut;
      print(searchlog.search79.search_word1);
      expect(searchlog.search79.search_word1 == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.search_word1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00544_element_check_00520 **********\n\n");
    });

    test('00545_element_check_00521', () async {
      print("\n********** テスト実行：00545_element_check_00521 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.search_word1_sata;
      print(searchlog.search79.search_word1_sata);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.search_word1_sata = testData1s;
      print(searchlog.search79.search_word1_sata);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.search_word1_sata == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.search_word1_sata == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.search_word1_sata = testData2s;
      print(searchlog.search79.search_word1_sata);
      expect(searchlog.search79.search_word1_sata == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.search_word1_sata == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.search_word1_sata = defalut;
      print(searchlog.search79.search_word1_sata);
      expect(searchlog.search79.search_word1_sata == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.search_word1_sata == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00545_element_check_00521 **********\n\n");
    });

    test('00546_element_check_00522', () async {
      print("\n********** テスト実行：00546_element_check_00522 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search79.description;
      print(searchlog.search79.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search79.description = testData1s;
      print(searchlog.search79.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search79.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search79.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search79.description = testData2s;
      print(searchlog.search79.description);
      expect(searchlog.search79.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search79.description = defalut;
      print(searchlog.search79.description);
      expect(searchlog.search79.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search79.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00546_element_check_00522 **********\n\n");
    });

    test('00547_element_check_00523', () async {
      print("\n********** テスト実行：00547_element_check_00523 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search80.typ;
      print(searchlog.search80.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search80.typ = testData1;
      print(searchlog.search80.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search80.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search80.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search80.typ = testData2;
      print(searchlog.search80.typ);
      expect(searchlog.search80.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search80.typ = defalut;
      print(searchlog.search80.typ);
      expect(searchlog.search80.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00547_element_check_00523 **********\n\n");
    });

    test('00548_element_check_00524', () async {
      print("\n********** テスト実行：00548_element_check_00524 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search80.file_name;
      print(searchlog.search80.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search80.file_name = testData1s;
      print(searchlog.search80.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search80.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search80.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search80.file_name = testData2s;
      print(searchlog.search80.file_name);
      expect(searchlog.search80.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search80.file_name = defalut;
      print(searchlog.search80.file_name);
      expect(searchlog.search80.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00548_element_check_00524 **********\n\n");
    });

    test('00549_element_check_00525', () async {
      print("\n********** テスト実行：00549_element_check_00525 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search80.out_count;
      print(searchlog.search80.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search80.out_count = testData1;
      print(searchlog.search80.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search80.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search80.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search80.out_count = testData2;
      print(searchlog.search80.out_count);
      expect(searchlog.search80.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search80.out_count = defalut;
      print(searchlog.search80.out_count);
      expect(searchlog.search80.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00549_element_check_00525 **********\n\n");
    });

    test('00550_element_check_00526', () async {
      print("\n********** テスト実行：00550_element_check_00526 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search80.print_word;
      print(searchlog.search80.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search80.print_word = testData1s;
      print(searchlog.search80.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search80.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search80.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search80.print_word = testData2s;
      print(searchlog.search80.print_word);
      expect(searchlog.search80.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search80.print_word = defalut;
      print(searchlog.search80.print_word);
      expect(searchlog.search80.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00550_element_check_00526 **********\n\n");
    });

    test('00551_element_check_00527', () async {
      print("\n********** テスト実行：00551_element_check_00527 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search80.print_value_ok;
      print(searchlog.search80.print_value_ok);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search80.print_value_ok = testData1s;
      print(searchlog.search80.print_value_ok);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search80.print_value_ok == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search80.print_value_ok == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search80.print_value_ok = testData2s;
      print(searchlog.search80.print_value_ok);
      expect(searchlog.search80.print_value_ok == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.print_value_ok == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search80.print_value_ok = defalut;
      print(searchlog.search80.print_value_ok);
      expect(searchlog.search80.print_value_ok == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.print_value_ok == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00551_element_check_00527 **********\n\n");
    });

    test('00552_element_check_00528', () async {
      print("\n********** テスト実行：00552_element_check_00528 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search80.print_value_ng;
      print(searchlog.search80.print_value_ng);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search80.print_value_ng = testData1s;
      print(searchlog.search80.print_value_ng);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search80.print_value_ng == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search80.print_value_ng == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search80.print_value_ng = testData2s;
      print(searchlog.search80.print_value_ng);
      expect(searchlog.search80.print_value_ng == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.print_value_ng == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search80.print_value_ng = defalut;
      print(searchlog.search80.print_value_ng);
      expect(searchlog.search80.print_value_ng == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.print_value_ng == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00552_element_check_00528 **********\n\n");
    });

    test('00553_element_check_00529', () async {
      print("\n********** テスト実行：00553_element_check_00529 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search80.description;
      print(searchlog.search80.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search80.description = testData1s;
      print(searchlog.search80.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search80.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search80.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search80.description = testData2s;
      print(searchlog.search80.description);
      expect(searchlog.search80.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search80.description = defalut;
      print(searchlog.search80.description);
      expect(searchlog.search80.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search80.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00553_element_check_00529 **********\n\n");
    });

    test('00554_element_check_00530', () async {
      print("\n********** テスト実行：00554_element_check_00530 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search91.file_name;
      print(searchlog.search91.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search91.file_name = testData1s;
      print(searchlog.search91.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search91.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search91.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search91.file_name = testData2s;
      print(searchlog.search91.file_name);
      expect(searchlog.search91.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search91.file_name = defalut;
      print(searchlog.search91.file_name);
      expect(searchlog.search91.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00554_element_check_00530 **********\n\n");
    });

    test('00555_element_check_00531', () async {
      print("\n********** テスト実行：00555_element_check_00531 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search91.typ;
      print(searchlog.search91.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search91.typ = testData1;
      print(searchlog.search91.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search91.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search91.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search91.typ = testData2;
      print(searchlog.search91.typ);
      expect(searchlog.search91.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search91.typ = defalut;
      print(searchlog.search91.typ);
      expect(searchlog.search91.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00555_element_check_00531 **********\n\n");
    });

    test('00556_element_check_00532', () async {
      print("\n********** テスト実行：00556_element_check_00532 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search91.out_count;
      print(searchlog.search91.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search91.out_count = testData1;
      print(searchlog.search91.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search91.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search91.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search91.out_count = testData2;
      print(searchlog.search91.out_count);
      expect(searchlog.search91.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search91.out_count = defalut;
      print(searchlog.search91.out_count);
      expect(searchlog.search91.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00556_element_check_00532 **********\n\n");
    });

    test('00557_element_check_00533', () async {
      print("\n********** テスト実行：00557_element_check_00533 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search91.section;
      print(searchlog.search91.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search91.section = testData1s;
      print(searchlog.search91.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search91.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search91.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search91.section = testData2s;
      print(searchlog.search91.section);
      expect(searchlog.search91.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search91.section = defalut;
      print(searchlog.search91.section);
      expect(searchlog.search91.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00557_element_check_00533 **********\n\n");
    });

    test('00558_element_check_00534', () async {
      print("\n********** テスト実行：00558_element_check_00534 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search91.keyword;
      print(searchlog.search91.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search91.keyword = testData1s;
      print(searchlog.search91.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search91.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search91.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search91.keyword = testData2s;
      print(searchlog.search91.keyword);
      expect(searchlog.search91.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search91.keyword = defalut;
      print(searchlog.search91.keyword);
      expect(searchlog.search91.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00558_element_check_00534 **********\n\n");
    });

    test('00559_element_check_00535', () async {
      print("\n********** テスト実行：00559_element_check_00535 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search91.print_word;
      print(searchlog.search91.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search91.print_word = testData1s;
      print(searchlog.search91.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search91.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search91.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search91.print_word = testData2s;
      print(searchlog.search91.print_word);
      expect(searchlog.search91.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search91.print_word = defalut;
      print(searchlog.search91.print_word);
      expect(searchlog.search91.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00559_element_check_00535 **********\n\n");
    });

    test('00560_element_check_00536', () async {
      print("\n********** テスト実行：00560_element_check_00536 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search91.description;
      print(searchlog.search91.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search91.description = testData1s;
      print(searchlog.search91.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search91.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search91.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search91.description = testData2s;
      print(searchlog.search91.description);
      expect(searchlog.search91.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search91.description = defalut;
      print(searchlog.search91.description);
      expect(searchlog.search91.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search91.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00560_element_check_00536 **********\n\n");
    });

    test('00561_element_check_00537', () async {
      print("\n********** テスト実行：00561_element_check_00537 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search92.file_name;
      print(searchlog.search92.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search92.file_name = testData1s;
      print(searchlog.search92.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search92.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search92.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search92.file_name = testData2s;
      print(searchlog.search92.file_name);
      expect(searchlog.search92.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search92.file_name = defalut;
      print(searchlog.search92.file_name);
      expect(searchlog.search92.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00561_element_check_00537 **********\n\n");
    });

    test('00562_element_check_00538', () async {
      print("\n********** テスト実行：00562_element_check_00538 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search92.typ;
      print(searchlog.search92.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search92.typ = testData1;
      print(searchlog.search92.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search92.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search92.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search92.typ = testData2;
      print(searchlog.search92.typ);
      expect(searchlog.search92.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search92.typ = defalut;
      print(searchlog.search92.typ);
      expect(searchlog.search92.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00562_element_check_00538 **********\n\n");
    });

    test('00563_element_check_00539', () async {
      print("\n********** テスト実行：00563_element_check_00539 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search92.out_count;
      print(searchlog.search92.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search92.out_count = testData1;
      print(searchlog.search92.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search92.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search92.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search92.out_count = testData2;
      print(searchlog.search92.out_count);
      expect(searchlog.search92.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search92.out_count = defalut;
      print(searchlog.search92.out_count);
      expect(searchlog.search92.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00563_element_check_00539 **********\n\n");
    });

    test('00564_element_check_00540', () async {
      print("\n********** テスト実行：00564_element_check_00540 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search92.section;
      print(searchlog.search92.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search92.section = testData1s;
      print(searchlog.search92.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search92.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search92.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search92.section = testData2s;
      print(searchlog.search92.section);
      expect(searchlog.search92.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search92.section = defalut;
      print(searchlog.search92.section);
      expect(searchlog.search92.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00564_element_check_00540 **********\n\n");
    });

    test('00565_element_check_00541', () async {
      print("\n********** テスト実行：00565_element_check_00541 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search92.keyword;
      print(searchlog.search92.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search92.keyword = testData1s;
      print(searchlog.search92.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search92.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search92.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search92.keyword = testData2s;
      print(searchlog.search92.keyword);
      expect(searchlog.search92.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search92.keyword = defalut;
      print(searchlog.search92.keyword);
      expect(searchlog.search92.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00565_element_check_00541 **********\n\n");
    });

    test('00566_element_check_00542', () async {
      print("\n********** テスト実行：00566_element_check_00542 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search92.print_word;
      print(searchlog.search92.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search92.print_word = testData1s;
      print(searchlog.search92.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search92.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search92.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search92.print_word = testData2s;
      print(searchlog.search92.print_word);
      expect(searchlog.search92.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search92.print_word = defalut;
      print(searchlog.search92.print_word);
      expect(searchlog.search92.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00566_element_check_00542 **********\n\n");
    });

    test('00567_element_check_00543', () async {
      print("\n********** テスト実行：00567_element_check_00543 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search92.description;
      print(searchlog.search92.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search92.description = testData1s;
      print(searchlog.search92.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search92.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search92.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search92.description = testData2s;
      print(searchlog.search92.description);
      expect(searchlog.search92.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search92.description = defalut;
      print(searchlog.search92.description);
      expect(searchlog.search92.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search92.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00567_element_check_00543 **********\n\n");
    });

    test('00568_element_check_00544', () async {
      print("\n********** テスト実行：00568_element_check_00544 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search93.file_name;
      print(searchlog.search93.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search93.file_name = testData1s;
      print(searchlog.search93.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search93.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search93.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search93.file_name = testData2s;
      print(searchlog.search93.file_name);
      expect(searchlog.search93.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search93.file_name = defalut;
      print(searchlog.search93.file_name);
      expect(searchlog.search93.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00568_element_check_00544 **********\n\n");
    });

    test('00569_element_check_00545', () async {
      print("\n********** テスト実行：00569_element_check_00545 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search93.typ;
      print(searchlog.search93.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search93.typ = testData1;
      print(searchlog.search93.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search93.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search93.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search93.typ = testData2;
      print(searchlog.search93.typ);
      expect(searchlog.search93.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search93.typ = defalut;
      print(searchlog.search93.typ);
      expect(searchlog.search93.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00569_element_check_00545 **********\n\n");
    });

    test('00570_element_check_00546', () async {
      print("\n********** テスト実行：00570_element_check_00546 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search93.out_count;
      print(searchlog.search93.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search93.out_count = testData1;
      print(searchlog.search93.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search93.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search93.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search93.out_count = testData2;
      print(searchlog.search93.out_count);
      expect(searchlog.search93.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search93.out_count = defalut;
      print(searchlog.search93.out_count);
      expect(searchlog.search93.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00570_element_check_00546 **********\n\n");
    });

    test('00571_element_check_00547', () async {
      print("\n********** テスト実行：00571_element_check_00547 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search93.section;
      print(searchlog.search93.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search93.section = testData1s;
      print(searchlog.search93.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search93.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search93.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search93.section = testData2s;
      print(searchlog.search93.section);
      expect(searchlog.search93.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search93.section = defalut;
      print(searchlog.search93.section);
      expect(searchlog.search93.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00571_element_check_00547 **********\n\n");
    });

    test('00572_element_check_00548', () async {
      print("\n********** テスト実行：00572_element_check_00548 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search93.keyword;
      print(searchlog.search93.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search93.keyword = testData1s;
      print(searchlog.search93.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search93.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search93.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search93.keyword = testData2s;
      print(searchlog.search93.keyword);
      expect(searchlog.search93.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search93.keyword = defalut;
      print(searchlog.search93.keyword);
      expect(searchlog.search93.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00572_element_check_00548 **********\n\n");
    });

    test('00573_element_check_00549', () async {
      print("\n********** テスト実行：00573_element_check_00549 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search93.print_word;
      print(searchlog.search93.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search93.print_word = testData1s;
      print(searchlog.search93.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search93.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search93.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search93.print_word = testData2s;
      print(searchlog.search93.print_word);
      expect(searchlog.search93.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search93.print_word = defalut;
      print(searchlog.search93.print_word);
      expect(searchlog.search93.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00573_element_check_00549 **********\n\n");
    });

    test('00574_element_check_00550', () async {
      print("\n********** テスト実行：00574_element_check_00550 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search93.description;
      print(searchlog.search93.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search93.description = testData1s;
      print(searchlog.search93.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search93.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search93.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search93.description = testData2s;
      print(searchlog.search93.description);
      expect(searchlog.search93.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search93.description = defalut;
      print(searchlog.search93.description);
      expect(searchlog.search93.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search93.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00574_element_check_00550 **********\n\n");
    });

    test('00575_element_check_00551', () async {
      print("\n********** テスト実行：00575_element_check_00551 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search94.file_name;
      print(searchlog.search94.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search94.file_name = testData1s;
      print(searchlog.search94.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search94.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search94.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search94.file_name = testData2s;
      print(searchlog.search94.file_name);
      expect(searchlog.search94.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search94.file_name = defalut;
      print(searchlog.search94.file_name);
      expect(searchlog.search94.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00575_element_check_00551 **********\n\n");
    });

    test('00576_element_check_00552', () async {
      print("\n********** テスト実行：00576_element_check_00552 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search94.typ;
      print(searchlog.search94.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search94.typ = testData1;
      print(searchlog.search94.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search94.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search94.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search94.typ = testData2;
      print(searchlog.search94.typ);
      expect(searchlog.search94.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search94.typ = defalut;
      print(searchlog.search94.typ);
      expect(searchlog.search94.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00576_element_check_00552 **********\n\n");
    });

    test('00577_element_check_00553', () async {
      print("\n********** テスト実行：00577_element_check_00553 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search94.out_count;
      print(searchlog.search94.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search94.out_count = testData1;
      print(searchlog.search94.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search94.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search94.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search94.out_count = testData2;
      print(searchlog.search94.out_count);
      expect(searchlog.search94.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search94.out_count = defalut;
      print(searchlog.search94.out_count);
      expect(searchlog.search94.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00577_element_check_00553 **********\n\n");
    });

    test('00578_element_check_00554', () async {
      print("\n********** テスト実行：00578_element_check_00554 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search94.section;
      print(searchlog.search94.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search94.section = testData1s;
      print(searchlog.search94.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search94.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search94.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search94.section = testData2s;
      print(searchlog.search94.section);
      expect(searchlog.search94.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search94.section = defalut;
      print(searchlog.search94.section);
      expect(searchlog.search94.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00578_element_check_00554 **********\n\n");
    });

    test('00579_element_check_00555', () async {
      print("\n********** テスト実行：00579_element_check_00555 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search94.keyword;
      print(searchlog.search94.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search94.keyword = testData1s;
      print(searchlog.search94.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search94.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search94.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search94.keyword = testData2s;
      print(searchlog.search94.keyword);
      expect(searchlog.search94.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search94.keyword = defalut;
      print(searchlog.search94.keyword);
      expect(searchlog.search94.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00579_element_check_00555 **********\n\n");
    });

    test('00580_element_check_00556', () async {
      print("\n********** テスト実行：00580_element_check_00556 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search94.print_word;
      print(searchlog.search94.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search94.print_word = testData1s;
      print(searchlog.search94.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search94.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search94.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search94.print_word = testData2s;
      print(searchlog.search94.print_word);
      expect(searchlog.search94.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search94.print_word = defalut;
      print(searchlog.search94.print_word);
      expect(searchlog.search94.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00580_element_check_00556 **********\n\n");
    });

    test('00581_element_check_00557', () async {
      print("\n********** テスト実行：00581_element_check_00557 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search94.description;
      print(searchlog.search94.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search94.description = testData1s;
      print(searchlog.search94.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search94.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search94.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search94.description = testData2s;
      print(searchlog.search94.description);
      expect(searchlog.search94.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search94.description = defalut;
      print(searchlog.search94.description);
      expect(searchlog.search94.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search94.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00581_element_check_00557 **********\n\n");
    });

    test('00582_element_check_00558', () async {
      print("\n********** テスト実行：00582_element_check_00558 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search95.file_name;
      print(searchlog.search95.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search95.file_name = testData1s;
      print(searchlog.search95.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search95.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search95.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search95.file_name = testData2s;
      print(searchlog.search95.file_name);
      expect(searchlog.search95.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search95.file_name = defalut;
      print(searchlog.search95.file_name);
      expect(searchlog.search95.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00582_element_check_00558 **********\n\n");
    });

    test('00583_element_check_00559', () async {
      print("\n********** テスト実行：00583_element_check_00559 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search95.typ;
      print(searchlog.search95.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search95.typ = testData1;
      print(searchlog.search95.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search95.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search95.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search95.typ = testData2;
      print(searchlog.search95.typ);
      expect(searchlog.search95.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search95.typ = defalut;
      print(searchlog.search95.typ);
      expect(searchlog.search95.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00583_element_check_00559 **********\n\n");
    });

    test('00584_element_check_00560', () async {
      print("\n********** テスト実行：00584_element_check_00560 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search95.out_count;
      print(searchlog.search95.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search95.out_count = testData1;
      print(searchlog.search95.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search95.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search95.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search95.out_count = testData2;
      print(searchlog.search95.out_count);
      expect(searchlog.search95.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search95.out_count = defalut;
      print(searchlog.search95.out_count);
      expect(searchlog.search95.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00584_element_check_00560 **********\n\n");
    });

    test('00585_element_check_00561', () async {
      print("\n********** テスト実行：00585_element_check_00561 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search95.section;
      print(searchlog.search95.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search95.section = testData1s;
      print(searchlog.search95.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search95.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search95.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search95.section = testData2s;
      print(searchlog.search95.section);
      expect(searchlog.search95.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search95.section = defalut;
      print(searchlog.search95.section);
      expect(searchlog.search95.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00585_element_check_00561 **********\n\n");
    });

    test('00586_element_check_00562', () async {
      print("\n********** テスト実行：00586_element_check_00562 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search95.keyword;
      print(searchlog.search95.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search95.keyword = testData1s;
      print(searchlog.search95.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search95.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search95.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search95.keyword = testData2s;
      print(searchlog.search95.keyword);
      expect(searchlog.search95.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search95.keyword = defalut;
      print(searchlog.search95.keyword);
      expect(searchlog.search95.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00586_element_check_00562 **********\n\n");
    });

    test('00587_element_check_00563', () async {
      print("\n********** テスト実行：00587_element_check_00563 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search95.print_word;
      print(searchlog.search95.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search95.print_word = testData1s;
      print(searchlog.search95.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search95.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search95.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search95.print_word = testData2s;
      print(searchlog.search95.print_word);
      expect(searchlog.search95.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search95.print_word = defalut;
      print(searchlog.search95.print_word);
      expect(searchlog.search95.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00587_element_check_00563 **********\n\n");
    });

    test('00588_element_check_00564', () async {
      print("\n********** テスト実行：00588_element_check_00564 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search95.description;
      print(searchlog.search95.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search95.description = testData1s;
      print(searchlog.search95.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search95.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search95.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search95.description = testData2s;
      print(searchlog.search95.description);
      expect(searchlog.search95.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search95.description = defalut;
      print(searchlog.search95.description);
      expect(searchlog.search95.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search95.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00588_element_check_00564 **********\n\n");
    });

    test('00589_element_check_00565', () async {
      print("\n********** テスト実行：00589_element_check_00565 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search96.file_name;
      print(searchlog.search96.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search96.file_name = testData1s;
      print(searchlog.search96.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search96.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search96.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search96.file_name = testData2s;
      print(searchlog.search96.file_name);
      expect(searchlog.search96.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search96.file_name = defalut;
      print(searchlog.search96.file_name);
      expect(searchlog.search96.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00589_element_check_00565 **********\n\n");
    });

    test('00590_element_check_00566', () async {
      print("\n********** テスト実行：00590_element_check_00566 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search96.typ;
      print(searchlog.search96.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search96.typ = testData1;
      print(searchlog.search96.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search96.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search96.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search96.typ = testData2;
      print(searchlog.search96.typ);
      expect(searchlog.search96.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search96.typ = defalut;
      print(searchlog.search96.typ);
      expect(searchlog.search96.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00590_element_check_00566 **********\n\n");
    });

    test('00591_element_check_00567', () async {
      print("\n********** テスト実行：00591_element_check_00567 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search96.out_count;
      print(searchlog.search96.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search96.out_count = testData1;
      print(searchlog.search96.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search96.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search96.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search96.out_count = testData2;
      print(searchlog.search96.out_count);
      expect(searchlog.search96.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search96.out_count = defalut;
      print(searchlog.search96.out_count);
      expect(searchlog.search96.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00591_element_check_00567 **********\n\n");
    });

    test('00592_element_check_00568', () async {
      print("\n********** テスト実行：00592_element_check_00568 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search96.section;
      print(searchlog.search96.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search96.section = testData1s;
      print(searchlog.search96.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search96.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search96.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search96.section = testData2s;
      print(searchlog.search96.section);
      expect(searchlog.search96.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search96.section = defalut;
      print(searchlog.search96.section);
      expect(searchlog.search96.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00592_element_check_00568 **********\n\n");
    });

    test('00593_element_check_00569', () async {
      print("\n********** テスト実行：00593_element_check_00569 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search96.keyword;
      print(searchlog.search96.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search96.keyword = testData1s;
      print(searchlog.search96.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search96.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search96.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search96.keyword = testData2s;
      print(searchlog.search96.keyword);
      expect(searchlog.search96.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search96.keyword = defalut;
      print(searchlog.search96.keyword);
      expect(searchlog.search96.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00593_element_check_00569 **********\n\n");
    });

    test('00594_element_check_00570', () async {
      print("\n********** テスト実行：00594_element_check_00570 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search96.print_word;
      print(searchlog.search96.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search96.print_word = testData1s;
      print(searchlog.search96.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search96.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search96.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search96.print_word = testData2s;
      print(searchlog.search96.print_word);
      expect(searchlog.search96.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search96.print_word = defalut;
      print(searchlog.search96.print_word);
      expect(searchlog.search96.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00594_element_check_00570 **********\n\n");
    });

    test('00595_element_check_00571', () async {
      print("\n********** テスト実行：00595_element_check_00571 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search96.description;
      print(searchlog.search96.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search96.description = testData1s;
      print(searchlog.search96.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search96.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search96.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search96.description = testData2s;
      print(searchlog.search96.description);
      expect(searchlog.search96.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search96.description = defalut;
      print(searchlog.search96.description);
      expect(searchlog.search96.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search96.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00595_element_check_00571 **********\n\n");
    });

    test('00596_element_check_00572', () async {
      print("\n********** テスト実行：00596_element_check_00572 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search97.file_name;
      print(searchlog.search97.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search97.file_name = testData1s;
      print(searchlog.search97.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search97.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search97.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search97.file_name = testData2s;
      print(searchlog.search97.file_name);
      expect(searchlog.search97.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search97.file_name = defalut;
      print(searchlog.search97.file_name);
      expect(searchlog.search97.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00596_element_check_00572 **********\n\n");
    });

    test('00597_element_check_00573', () async {
      print("\n********** テスト実行：00597_element_check_00573 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search97.typ;
      print(searchlog.search97.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search97.typ = testData1;
      print(searchlog.search97.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search97.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search97.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search97.typ = testData2;
      print(searchlog.search97.typ);
      expect(searchlog.search97.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search97.typ = defalut;
      print(searchlog.search97.typ);
      expect(searchlog.search97.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00597_element_check_00573 **********\n\n");
    });

    test('00598_element_check_00574', () async {
      print("\n********** テスト実行：00598_element_check_00574 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search97.out_count;
      print(searchlog.search97.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search97.out_count = testData1;
      print(searchlog.search97.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search97.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search97.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search97.out_count = testData2;
      print(searchlog.search97.out_count);
      expect(searchlog.search97.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search97.out_count = defalut;
      print(searchlog.search97.out_count);
      expect(searchlog.search97.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00598_element_check_00574 **********\n\n");
    });

    test('00599_element_check_00575', () async {
      print("\n********** テスト実行：00599_element_check_00575 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search97.section;
      print(searchlog.search97.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search97.section = testData1s;
      print(searchlog.search97.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search97.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search97.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search97.section = testData2s;
      print(searchlog.search97.section);
      expect(searchlog.search97.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search97.section = defalut;
      print(searchlog.search97.section);
      expect(searchlog.search97.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00599_element_check_00575 **********\n\n");
    });

    test('00600_element_check_00576', () async {
      print("\n********** テスト実行：00600_element_check_00576 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search97.keyword;
      print(searchlog.search97.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search97.keyword = testData1s;
      print(searchlog.search97.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search97.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search97.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search97.keyword = testData2s;
      print(searchlog.search97.keyword);
      expect(searchlog.search97.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search97.keyword = defalut;
      print(searchlog.search97.keyword);
      expect(searchlog.search97.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00600_element_check_00576 **********\n\n");
    });

    test('00601_element_check_00577', () async {
      print("\n********** テスト実行：00601_element_check_00577 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search97.print_word;
      print(searchlog.search97.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search97.print_word = testData1s;
      print(searchlog.search97.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search97.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search97.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search97.print_word = testData2s;
      print(searchlog.search97.print_word);
      expect(searchlog.search97.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search97.print_word = defalut;
      print(searchlog.search97.print_word);
      expect(searchlog.search97.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00601_element_check_00577 **********\n\n");
    });

    test('00602_element_check_00578', () async {
      print("\n********** テスト実行：00602_element_check_00578 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search97.description;
      print(searchlog.search97.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search97.description = testData1s;
      print(searchlog.search97.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search97.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search97.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search97.description = testData2s;
      print(searchlog.search97.description);
      expect(searchlog.search97.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search97.description = defalut;
      print(searchlog.search97.description);
      expect(searchlog.search97.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search97.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00602_element_check_00578 **********\n\n");
    });

    test('00603_element_check_00579', () async {
      print("\n********** テスト実行：00603_element_check_00579 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search98.file_name;
      print(searchlog.search98.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search98.file_name = testData1s;
      print(searchlog.search98.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search98.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search98.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search98.file_name = testData2s;
      print(searchlog.search98.file_name);
      expect(searchlog.search98.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search98.file_name = defalut;
      print(searchlog.search98.file_name);
      expect(searchlog.search98.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00603_element_check_00579 **********\n\n");
    });

    test('00604_element_check_00580', () async {
      print("\n********** テスト実行：00604_element_check_00580 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search98.typ;
      print(searchlog.search98.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search98.typ = testData1;
      print(searchlog.search98.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search98.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search98.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search98.typ = testData2;
      print(searchlog.search98.typ);
      expect(searchlog.search98.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search98.typ = defalut;
      print(searchlog.search98.typ);
      expect(searchlog.search98.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00604_element_check_00580 **********\n\n");
    });

    test('00605_element_check_00581', () async {
      print("\n********** テスト実行：00605_element_check_00581 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search98.out_count;
      print(searchlog.search98.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search98.out_count = testData1;
      print(searchlog.search98.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search98.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search98.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search98.out_count = testData2;
      print(searchlog.search98.out_count);
      expect(searchlog.search98.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search98.out_count = defalut;
      print(searchlog.search98.out_count);
      expect(searchlog.search98.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00605_element_check_00581 **********\n\n");
    });

    test('00606_element_check_00582', () async {
      print("\n********** テスト実行：00606_element_check_00582 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search98.print_word;
      print(searchlog.search98.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search98.print_word = testData1s;
      print(searchlog.search98.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search98.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search98.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search98.print_word = testData2s;
      print(searchlog.search98.print_word);
      expect(searchlog.search98.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search98.print_word = defalut;
      print(searchlog.search98.print_word);
      expect(searchlog.search98.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00606_element_check_00582 **********\n\n");
    });

    test('00607_element_check_00583', () async {
      print("\n********** テスト実行：00607_element_check_00583 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search98.description;
      print(searchlog.search98.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search98.description = testData1s;
      print(searchlog.search98.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search98.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search98.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search98.description = testData2s;
      print(searchlog.search98.description);
      expect(searchlog.search98.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search98.description = defalut;
      print(searchlog.search98.description);
      expect(searchlog.search98.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search98.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00607_element_check_00583 **********\n\n");
    });

    test('00608_element_check_00584', () async {
      print("\n********** テスト実行：00608_element_check_00584 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search99.file_name;
      print(searchlog.search99.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search99.file_name = testData1s;
      print(searchlog.search99.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search99.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search99.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search99.file_name = testData2s;
      print(searchlog.search99.file_name);
      expect(searchlog.search99.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search99.file_name = defalut;
      print(searchlog.search99.file_name);
      expect(searchlog.search99.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00608_element_check_00584 **********\n\n");
    });

    test('00609_element_check_00585', () async {
      print("\n********** テスト実行：00609_element_check_00585 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search99.typ;
      print(searchlog.search99.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search99.typ = testData1;
      print(searchlog.search99.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search99.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search99.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search99.typ = testData2;
      print(searchlog.search99.typ);
      expect(searchlog.search99.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search99.typ = defalut;
      print(searchlog.search99.typ);
      expect(searchlog.search99.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00609_element_check_00585 **********\n\n");
    });

    test('00610_element_check_00586', () async {
      print("\n********** テスト実行：00610_element_check_00586 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search99.out_count;
      print(searchlog.search99.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search99.out_count = testData1;
      print(searchlog.search99.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search99.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search99.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search99.out_count = testData2;
      print(searchlog.search99.out_count);
      expect(searchlog.search99.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search99.out_count = defalut;
      print(searchlog.search99.out_count);
      expect(searchlog.search99.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00610_element_check_00586 **********\n\n");
    });

    test('00611_element_check_00587', () async {
      print("\n********** テスト実行：00611_element_check_00587 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search99.section;
      print(searchlog.search99.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search99.section = testData1s;
      print(searchlog.search99.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search99.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search99.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search99.section = testData2s;
      print(searchlog.search99.section);
      expect(searchlog.search99.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search99.section = defalut;
      print(searchlog.search99.section);
      expect(searchlog.search99.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00611_element_check_00587 **********\n\n");
    });

    test('00612_element_check_00588', () async {
      print("\n********** テスト実行：00612_element_check_00588 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search99.keyword;
      print(searchlog.search99.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search99.keyword = testData1s;
      print(searchlog.search99.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search99.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search99.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search99.keyword = testData2s;
      print(searchlog.search99.keyword);
      expect(searchlog.search99.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search99.keyword = defalut;
      print(searchlog.search99.keyword);
      expect(searchlog.search99.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00612_element_check_00588 **********\n\n");
    });

    test('00613_element_check_00589', () async {
      print("\n********** テスト実行：00613_element_check_00589 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search99.print_word;
      print(searchlog.search99.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search99.print_word = testData1s;
      print(searchlog.search99.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search99.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search99.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search99.print_word = testData2s;
      print(searchlog.search99.print_word);
      expect(searchlog.search99.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search99.print_word = defalut;
      print(searchlog.search99.print_word);
      expect(searchlog.search99.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00613_element_check_00589 **********\n\n");
    });

    test('00614_element_check_00590', () async {
      print("\n********** テスト実行：00614_element_check_00590 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search99.description;
      print(searchlog.search99.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search99.description = testData1s;
      print(searchlog.search99.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search99.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search99.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search99.description = testData2s;
      print(searchlog.search99.description);
      expect(searchlog.search99.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search99.description = defalut;
      print(searchlog.search99.description);
      expect(searchlog.search99.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search99.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00614_element_check_00590 **********\n\n");
    });

    test('00615_element_check_00591', () async {
      print("\n********** テスト実行：00615_element_check_00591 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search100.file_name;
      print(searchlog.search100.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search100.file_name = testData1s;
      print(searchlog.search100.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search100.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search100.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search100.file_name = testData2s;
      print(searchlog.search100.file_name);
      expect(searchlog.search100.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search100.file_name = defalut;
      print(searchlog.search100.file_name);
      expect(searchlog.search100.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00615_element_check_00591 **********\n\n");
    });

    test('00616_element_check_00592', () async {
      print("\n********** テスト実行：00616_element_check_00592 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search100.typ;
      print(searchlog.search100.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search100.typ = testData1;
      print(searchlog.search100.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search100.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search100.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search100.typ = testData2;
      print(searchlog.search100.typ);
      expect(searchlog.search100.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search100.typ = defalut;
      print(searchlog.search100.typ);
      expect(searchlog.search100.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00616_element_check_00592 **********\n\n");
    });

    test('00617_element_check_00593', () async {
      print("\n********** テスト実行：00617_element_check_00593 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search100.out_count;
      print(searchlog.search100.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search100.out_count = testData1;
      print(searchlog.search100.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search100.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search100.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search100.out_count = testData2;
      print(searchlog.search100.out_count);
      expect(searchlog.search100.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search100.out_count = defalut;
      print(searchlog.search100.out_count);
      expect(searchlog.search100.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00617_element_check_00593 **********\n\n");
    });

    test('00618_element_check_00594', () async {
      print("\n********** テスト実行：00618_element_check_00594 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search100.section;
      print(searchlog.search100.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search100.section = testData1s;
      print(searchlog.search100.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search100.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search100.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search100.section = testData2s;
      print(searchlog.search100.section);
      expect(searchlog.search100.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search100.section = defalut;
      print(searchlog.search100.section);
      expect(searchlog.search100.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00618_element_check_00594 **********\n\n");
    });

    test('00619_element_check_00595', () async {
      print("\n********** テスト実行：00619_element_check_00595 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search100.keyword;
      print(searchlog.search100.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search100.keyword = testData1s;
      print(searchlog.search100.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search100.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search100.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search100.keyword = testData2s;
      print(searchlog.search100.keyword);
      expect(searchlog.search100.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search100.keyword = defalut;
      print(searchlog.search100.keyword);
      expect(searchlog.search100.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00619_element_check_00595 **********\n\n");
    });

    test('00620_element_check_00596', () async {
      print("\n********** テスト実行：00620_element_check_00596 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search100.print_word;
      print(searchlog.search100.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search100.print_word = testData1s;
      print(searchlog.search100.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search100.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search100.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search100.print_word = testData2s;
      print(searchlog.search100.print_word);
      expect(searchlog.search100.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search100.print_word = defalut;
      print(searchlog.search100.print_word);
      expect(searchlog.search100.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00620_element_check_00596 **********\n\n");
    });

    test('00621_element_check_00597', () async {
      print("\n********** テスト実行：00621_element_check_00597 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search100.description;
      print(searchlog.search100.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search100.description = testData1s;
      print(searchlog.search100.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search100.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search100.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search100.description = testData2s;
      print(searchlog.search100.description);
      expect(searchlog.search100.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search100.description = defalut;
      print(searchlog.search100.description);
      expect(searchlog.search100.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search100.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00621_element_check_00597 **********\n\n");
    });

    test('00622_element_check_00598', () async {
      print("\n********** テスト実行：00622_element_check_00598 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search101.file_name;
      print(searchlog.search101.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search101.file_name = testData1s;
      print(searchlog.search101.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search101.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search101.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search101.file_name = testData2s;
      print(searchlog.search101.file_name);
      expect(searchlog.search101.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search101.file_name = defalut;
      print(searchlog.search101.file_name);
      expect(searchlog.search101.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00622_element_check_00598 **********\n\n");
    });

    test('00623_element_check_00599', () async {
      print("\n********** テスト実行：00623_element_check_00599 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search101.typ;
      print(searchlog.search101.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search101.typ = testData1;
      print(searchlog.search101.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search101.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search101.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search101.typ = testData2;
      print(searchlog.search101.typ);
      expect(searchlog.search101.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search101.typ = defalut;
      print(searchlog.search101.typ);
      expect(searchlog.search101.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00623_element_check_00599 **********\n\n");
    });

    test('00624_element_check_00600', () async {
      print("\n********** テスト実行：00624_element_check_00600 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search101.out_count;
      print(searchlog.search101.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search101.out_count = testData1;
      print(searchlog.search101.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search101.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search101.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search101.out_count = testData2;
      print(searchlog.search101.out_count);
      expect(searchlog.search101.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search101.out_count = defalut;
      print(searchlog.search101.out_count);
      expect(searchlog.search101.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00624_element_check_00600 **********\n\n");
    });

    test('00625_element_check_00601', () async {
      print("\n********** テスト実行：00625_element_check_00601 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search101.section;
      print(searchlog.search101.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search101.section = testData1s;
      print(searchlog.search101.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search101.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search101.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search101.section = testData2s;
      print(searchlog.search101.section);
      expect(searchlog.search101.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search101.section = defalut;
      print(searchlog.search101.section);
      expect(searchlog.search101.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00625_element_check_00601 **********\n\n");
    });

    test('00626_element_check_00602', () async {
      print("\n********** テスト実行：00626_element_check_00602 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search101.keyword;
      print(searchlog.search101.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search101.keyword = testData1s;
      print(searchlog.search101.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search101.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search101.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search101.keyword = testData2s;
      print(searchlog.search101.keyword);
      expect(searchlog.search101.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search101.keyword = defalut;
      print(searchlog.search101.keyword);
      expect(searchlog.search101.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00626_element_check_00602 **********\n\n");
    });

    test('00627_element_check_00603', () async {
      print("\n********** テスト実行：00627_element_check_00603 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search101.print_word;
      print(searchlog.search101.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search101.print_word = testData1s;
      print(searchlog.search101.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search101.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search101.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search101.print_word = testData2s;
      print(searchlog.search101.print_word);
      expect(searchlog.search101.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search101.print_word = defalut;
      print(searchlog.search101.print_word);
      expect(searchlog.search101.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00627_element_check_00603 **********\n\n");
    });

    test('00628_element_check_00604', () async {
      print("\n********** テスト実行：00628_element_check_00604 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search101.description;
      print(searchlog.search101.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search101.description = testData1s;
      print(searchlog.search101.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search101.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search101.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search101.description = testData2s;
      print(searchlog.search101.description);
      expect(searchlog.search101.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search101.description = defalut;
      print(searchlog.search101.description);
      expect(searchlog.search101.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search101.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00628_element_check_00604 **********\n\n");
    });

    test('00629_element_check_00605', () async {
      print("\n********** テスト実行：00629_element_check_00605 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search102.file_name;
      print(searchlog.search102.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search102.file_name = testData1s;
      print(searchlog.search102.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search102.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search102.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search102.file_name = testData2s;
      print(searchlog.search102.file_name);
      expect(searchlog.search102.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search102.file_name = defalut;
      print(searchlog.search102.file_name);
      expect(searchlog.search102.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00629_element_check_00605 **********\n\n");
    });

    test('00630_element_check_00606', () async {
      print("\n********** テスト実行：00630_element_check_00606 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search102.typ;
      print(searchlog.search102.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search102.typ = testData1;
      print(searchlog.search102.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search102.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search102.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search102.typ = testData2;
      print(searchlog.search102.typ);
      expect(searchlog.search102.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search102.typ = defalut;
      print(searchlog.search102.typ);
      expect(searchlog.search102.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00630_element_check_00606 **********\n\n");
    });

    test('00631_element_check_00607', () async {
      print("\n********** テスト実行：00631_element_check_00607 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search102.out_count;
      print(searchlog.search102.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search102.out_count = testData1;
      print(searchlog.search102.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search102.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search102.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search102.out_count = testData2;
      print(searchlog.search102.out_count);
      expect(searchlog.search102.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search102.out_count = defalut;
      print(searchlog.search102.out_count);
      expect(searchlog.search102.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00631_element_check_00607 **********\n\n");
    });

    test('00632_element_check_00608', () async {
      print("\n********** テスト実行：00632_element_check_00608 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search102.section;
      print(searchlog.search102.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search102.section = testData1s;
      print(searchlog.search102.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search102.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search102.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search102.section = testData2s;
      print(searchlog.search102.section);
      expect(searchlog.search102.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search102.section = defalut;
      print(searchlog.search102.section);
      expect(searchlog.search102.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00632_element_check_00608 **********\n\n");
    });

    test('00633_element_check_00609', () async {
      print("\n********** テスト実行：00633_element_check_00609 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search102.keyword;
      print(searchlog.search102.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search102.keyword = testData1s;
      print(searchlog.search102.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search102.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search102.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search102.keyword = testData2s;
      print(searchlog.search102.keyword);
      expect(searchlog.search102.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search102.keyword = defalut;
      print(searchlog.search102.keyword);
      expect(searchlog.search102.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00633_element_check_00609 **********\n\n");
    });

    test('00634_element_check_00610', () async {
      print("\n********** テスト実行：00634_element_check_00610 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search102.print_word;
      print(searchlog.search102.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search102.print_word = testData1s;
      print(searchlog.search102.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search102.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search102.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search102.print_word = testData2s;
      print(searchlog.search102.print_word);
      expect(searchlog.search102.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search102.print_word = defalut;
      print(searchlog.search102.print_word);
      expect(searchlog.search102.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00634_element_check_00610 **********\n\n");
    });

    test('00635_element_check_00611', () async {
      print("\n********** テスト実行：00635_element_check_00611 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search102.description;
      print(searchlog.search102.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search102.description = testData1s;
      print(searchlog.search102.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search102.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search102.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search102.description = testData2s;
      print(searchlog.search102.description);
      expect(searchlog.search102.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search102.description = defalut;
      print(searchlog.search102.description);
      expect(searchlog.search102.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search102.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00635_element_check_00611 **********\n\n");
    });

    test('00636_element_check_00612', () async {
      print("\n********** テスト実行：00636_element_check_00612 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search103.file_name;
      print(searchlog.search103.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search103.file_name = testData1s;
      print(searchlog.search103.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search103.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search103.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search103.file_name = testData2s;
      print(searchlog.search103.file_name);
      expect(searchlog.search103.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search103.file_name = defalut;
      print(searchlog.search103.file_name);
      expect(searchlog.search103.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00636_element_check_00612 **********\n\n");
    });

    test('00637_element_check_00613', () async {
      print("\n********** テスト実行：00637_element_check_00613 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search103.typ;
      print(searchlog.search103.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search103.typ = testData1;
      print(searchlog.search103.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search103.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search103.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search103.typ = testData2;
      print(searchlog.search103.typ);
      expect(searchlog.search103.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search103.typ = defalut;
      print(searchlog.search103.typ);
      expect(searchlog.search103.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00637_element_check_00613 **********\n\n");
    });

    test('00638_element_check_00614', () async {
      print("\n********** テスト実行：00638_element_check_00614 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search103.out_count;
      print(searchlog.search103.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search103.out_count = testData1;
      print(searchlog.search103.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search103.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search103.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search103.out_count = testData2;
      print(searchlog.search103.out_count);
      expect(searchlog.search103.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search103.out_count = defalut;
      print(searchlog.search103.out_count);
      expect(searchlog.search103.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00638_element_check_00614 **********\n\n");
    });

    test('00639_element_check_00615', () async {
      print("\n********** テスト実行：00639_element_check_00615 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search103.section;
      print(searchlog.search103.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search103.section = testData1s;
      print(searchlog.search103.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search103.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search103.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search103.section = testData2s;
      print(searchlog.search103.section);
      expect(searchlog.search103.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search103.section = defalut;
      print(searchlog.search103.section);
      expect(searchlog.search103.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00639_element_check_00615 **********\n\n");
    });

    test('00640_element_check_00616', () async {
      print("\n********** テスト実行：00640_element_check_00616 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search103.keyword;
      print(searchlog.search103.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search103.keyword = testData1s;
      print(searchlog.search103.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search103.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search103.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search103.keyword = testData2s;
      print(searchlog.search103.keyword);
      expect(searchlog.search103.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search103.keyword = defalut;
      print(searchlog.search103.keyword);
      expect(searchlog.search103.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00640_element_check_00616 **********\n\n");
    });

    test('00641_element_check_00617', () async {
      print("\n********** テスト実行：00641_element_check_00617 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search103.print_word;
      print(searchlog.search103.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search103.print_word = testData1s;
      print(searchlog.search103.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search103.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search103.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search103.print_word = testData2s;
      print(searchlog.search103.print_word);
      expect(searchlog.search103.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search103.print_word = defalut;
      print(searchlog.search103.print_word);
      expect(searchlog.search103.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00641_element_check_00617 **********\n\n");
    });

    test('00642_element_check_00618', () async {
      print("\n********** テスト実行：00642_element_check_00618 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search103.description;
      print(searchlog.search103.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search103.description = testData1s;
      print(searchlog.search103.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search103.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search103.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search103.description = testData2s;
      print(searchlog.search103.description);
      expect(searchlog.search103.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search103.description = defalut;
      print(searchlog.search103.description);
      expect(searchlog.search103.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search103.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00642_element_check_00618 **********\n\n");
    });

    test('00643_element_check_00619', () async {
      print("\n********** テスト実行：00643_element_check_00619 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search104.file_name;
      print(searchlog.search104.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search104.file_name = testData1s;
      print(searchlog.search104.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search104.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search104.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search104.file_name = testData2s;
      print(searchlog.search104.file_name);
      expect(searchlog.search104.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search104.file_name = defalut;
      print(searchlog.search104.file_name);
      expect(searchlog.search104.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00643_element_check_00619 **********\n\n");
    });

    test('00644_element_check_00620', () async {
      print("\n********** テスト実行：00644_element_check_00620 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search104.typ;
      print(searchlog.search104.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search104.typ = testData1;
      print(searchlog.search104.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search104.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search104.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search104.typ = testData2;
      print(searchlog.search104.typ);
      expect(searchlog.search104.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search104.typ = defalut;
      print(searchlog.search104.typ);
      expect(searchlog.search104.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00644_element_check_00620 **********\n\n");
    });

    test('00645_element_check_00621', () async {
      print("\n********** テスト実行：00645_element_check_00621 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search104.out_count;
      print(searchlog.search104.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search104.out_count = testData1;
      print(searchlog.search104.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search104.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search104.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search104.out_count = testData2;
      print(searchlog.search104.out_count);
      expect(searchlog.search104.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search104.out_count = defalut;
      print(searchlog.search104.out_count);
      expect(searchlog.search104.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00645_element_check_00621 **********\n\n");
    });

    test('00646_element_check_00622', () async {
      print("\n********** テスト実行：00646_element_check_00622 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search104.section;
      print(searchlog.search104.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search104.section = testData1s;
      print(searchlog.search104.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search104.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search104.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search104.section = testData2s;
      print(searchlog.search104.section);
      expect(searchlog.search104.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search104.section = defalut;
      print(searchlog.search104.section);
      expect(searchlog.search104.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00646_element_check_00622 **********\n\n");
    });

    test('00647_element_check_00623', () async {
      print("\n********** テスト実行：00647_element_check_00623 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search104.keyword;
      print(searchlog.search104.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search104.keyword = testData1s;
      print(searchlog.search104.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search104.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search104.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search104.keyword = testData2s;
      print(searchlog.search104.keyword);
      expect(searchlog.search104.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search104.keyword = defalut;
      print(searchlog.search104.keyword);
      expect(searchlog.search104.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00647_element_check_00623 **********\n\n");
    });

    test('00648_element_check_00624', () async {
      print("\n********** テスト実行：00648_element_check_00624 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search104.print_word;
      print(searchlog.search104.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search104.print_word = testData1s;
      print(searchlog.search104.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search104.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search104.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search104.print_word = testData2s;
      print(searchlog.search104.print_word);
      expect(searchlog.search104.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search104.print_word = defalut;
      print(searchlog.search104.print_word);
      expect(searchlog.search104.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00648_element_check_00624 **********\n\n");
    });

    test('00649_element_check_00625', () async {
      print("\n********** テスト実行：00649_element_check_00625 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search104.description;
      print(searchlog.search104.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search104.description = testData1s;
      print(searchlog.search104.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search104.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search104.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search104.description = testData2s;
      print(searchlog.search104.description);
      expect(searchlog.search104.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search104.description = defalut;
      print(searchlog.search104.description);
      expect(searchlog.search104.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search104.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00649_element_check_00625 **********\n\n");
    });

    test('00650_element_check_00626', () async {
      print("\n********** テスト実行：00650_element_check_00626 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search105.file_name;
      print(searchlog.search105.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search105.file_name = testData1s;
      print(searchlog.search105.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search105.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search105.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search105.file_name = testData2s;
      print(searchlog.search105.file_name);
      expect(searchlog.search105.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search105.file_name = defalut;
      print(searchlog.search105.file_name);
      expect(searchlog.search105.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00650_element_check_00626 **********\n\n");
    });

    test('00651_element_check_00627', () async {
      print("\n********** テスト実行：00651_element_check_00627 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search105.typ;
      print(searchlog.search105.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search105.typ = testData1;
      print(searchlog.search105.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search105.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search105.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search105.typ = testData2;
      print(searchlog.search105.typ);
      expect(searchlog.search105.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search105.typ = defalut;
      print(searchlog.search105.typ);
      expect(searchlog.search105.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00651_element_check_00627 **********\n\n");
    });

    test('00652_element_check_00628', () async {
      print("\n********** テスト実行：00652_element_check_00628 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search105.out_count;
      print(searchlog.search105.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search105.out_count = testData1;
      print(searchlog.search105.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search105.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search105.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search105.out_count = testData2;
      print(searchlog.search105.out_count);
      expect(searchlog.search105.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search105.out_count = defalut;
      print(searchlog.search105.out_count);
      expect(searchlog.search105.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00652_element_check_00628 **********\n\n");
    });

    test('00653_element_check_00629', () async {
      print("\n********** テスト実行：00653_element_check_00629 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search105.section;
      print(searchlog.search105.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search105.section = testData1s;
      print(searchlog.search105.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search105.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search105.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search105.section = testData2s;
      print(searchlog.search105.section);
      expect(searchlog.search105.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search105.section = defalut;
      print(searchlog.search105.section);
      expect(searchlog.search105.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00653_element_check_00629 **********\n\n");
    });

    test('00654_element_check_00630', () async {
      print("\n********** テスト実行：00654_element_check_00630 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search105.keyword;
      print(searchlog.search105.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search105.keyword = testData1s;
      print(searchlog.search105.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search105.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search105.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search105.keyword = testData2s;
      print(searchlog.search105.keyword);
      expect(searchlog.search105.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search105.keyword = defalut;
      print(searchlog.search105.keyword);
      expect(searchlog.search105.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00654_element_check_00630 **********\n\n");
    });

    test('00655_element_check_00631', () async {
      print("\n********** テスト実行：00655_element_check_00631 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search105.print_word;
      print(searchlog.search105.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search105.print_word = testData1s;
      print(searchlog.search105.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search105.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search105.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search105.print_word = testData2s;
      print(searchlog.search105.print_word);
      expect(searchlog.search105.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search105.print_word = defalut;
      print(searchlog.search105.print_word);
      expect(searchlog.search105.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00655_element_check_00631 **********\n\n");
    });

    test('00656_element_check_00632', () async {
      print("\n********** テスト実行：00656_element_check_00632 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search105.description;
      print(searchlog.search105.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search105.description = testData1s;
      print(searchlog.search105.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search105.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search105.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search105.description = testData2s;
      print(searchlog.search105.description);
      expect(searchlog.search105.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search105.description = defalut;
      print(searchlog.search105.description);
      expect(searchlog.search105.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search105.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00656_element_check_00632 **********\n\n");
    });

    test('00657_element_check_00633', () async {
      print("\n********** テスト実行：00657_element_check_00633 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search106.file_name;
      print(searchlog.search106.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search106.file_name = testData1s;
      print(searchlog.search106.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search106.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search106.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search106.file_name = testData2s;
      print(searchlog.search106.file_name);
      expect(searchlog.search106.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search106.file_name = defalut;
      print(searchlog.search106.file_name);
      expect(searchlog.search106.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00657_element_check_00633 **********\n\n");
    });

    test('00658_element_check_00634', () async {
      print("\n********** テスト実行：00658_element_check_00634 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search106.typ;
      print(searchlog.search106.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search106.typ = testData1;
      print(searchlog.search106.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search106.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search106.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search106.typ = testData2;
      print(searchlog.search106.typ);
      expect(searchlog.search106.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search106.typ = defalut;
      print(searchlog.search106.typ);
      expect(searchlog.search106.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00658_element_check_00634 **********\n\n");
    });

    test('00659_element_check_00635', () async {
      print("\n********** テスト実行：00659_element_check_00635 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search106.out_count;
      print(searchlog.search106.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search106.out_count = testData1;
      print(searchlog.search106.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search106.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search106.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search106.out_count = testData2;
      print(searchlog.search106.out_count);
      expect(searchlog.search106.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search106.out_count = defalut;
      print(searchlog.search106.out_count);
      expect(searchlog.search106.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00659_element_check_00635 **********\n\n");
    });

    test('00660_element_check_00636', () async {
      print("\n********** テスト実行：00660_element_check_00636 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search106.section;
      print(searchlog.search106.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search106.section = testData1s;
      print(searchlog.search106.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search106.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search106.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search106.section = testData2s;
      print(searchlog.search106.section);
      expect(searchlog.search106.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search106.section = defalut;
      print(searchlog.search106.section);
      expect(searchlog.search106.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00660_element_check_00636 **********\n\n");
    });

    test('00661_element_check_00637', () async {
      print("\n********** テスト実行：00661_element_check_00637 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search106.keyword;
      print(searchlog.search106.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search106.keyword = testData1s;
      print(searchlog.search106.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search106.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search106.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search106.keyword = testData2s;
      print(searchlog.search106.keyword);
      expect(searchlog.search106.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search106.keyword = defalut;
      print(searchlog.search106.keyword);
      expect(searchlog.search106.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00661_element_check_00637 **********\n\n");
    });

    test('00662_element_check_00638', () async {
      print("\n********** テスト実行：00662_element_check_00638 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search106.print_word;
      print(searchlog.search106.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search106.print_word = testData1s;
      print(searchlog.search106.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search106.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search106.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search106.print_word = testData2s;
      print(searchlog.search106.print_word);
      expect(searchlog.search106.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search106.print_word = defalut;
      print(searchlog.search106.print_word);
      expect(searchlog.search106.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00662_element_check_00638 **********\n\n");
    });

    test('00663_element_check_00639', () async {
      print("\n********** テスト実行：00663_element_check_00639 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search106.description;
      print(searchlog.search106.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search106.description = testData1s;
      print(searchlog.search106.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search106.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search106.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search106.description = testData2s;
      print(searchlog.search106.description);
      expect(searchlog.search106.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search106.description = defalut;
      print(searchlog.search106.description);
      expect(searchlog.search106.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search106.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00663_element_check_00639 **********\n\n");
    });

    test('00664_element_check_00640', () async {
      print("\n********** テスト実行：00664_element_check_00640 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search107.file_name;
      print(searchlog.search107.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search107.file_name = testData1s;
      print(searchlog.search107.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search107.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search107.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search107.file_name = testData2s;
      print(searchlog.search107.file_name);
      expect(searchlog.search107.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search107.file_name = defalut;
      print(searchlog.search107.file_name);
      expect(searchlog.search107.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00664_element_check_00640 **********\n\n");
    });

    test('00665_element_check_00641', () async {
      print("\n********** テスト実行：00665_element_check_00641 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search107.typ;
      print(searchlog.search107.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search107.typ = testData1;
      print(searchlog.search107.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search107.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search107.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search107.typ = testData2;
      print(searchlog.search107.typ);
      expect(searchlog.search107.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search107.typ = defalut;
      print(searchlog.search107.typ);
      expect(searchlog.search107.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00665_element_check_00641 **********\n\n");
    });

    test('00666_element_check_00642', () async {
      print("\n********** テスト実行：00666_element_check_00642 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search107.out_count;
      print(searchlog.search107.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search107.out_count = testData1;
      print(searchlog.search107.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search107.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search107.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search107.out_count = testData2;
      print(searchlog.search107.out_count);
      expect(searchlog.search107.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search107.out_count = defalut;
      print(searchlog.search107.out_count);
      expect(searchlog.search107.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00666_element_check_00642 **********\n\n");
    });

    test('00667_element_check_00643', () async {
      print("\n********** テスト実行：00667_element_check_00643 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search107.section;
      print(searchlog.search107.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search107.section = testData1s;
      print(searchlog.search107.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search107.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search107.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search107.section = testData2s;
      print(searchlog.search107.section);
      expect(searchlog.search107.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search107.section = defalut;
      print(searchlog.search107.section);
      expect(searchlog.search107.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00667_element_check_00643 **********\n\n");
    });

    test('00668_element_check_00644', () async {
      print("\n********** テスト実行：00668_element_check_00644 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search107.keyword;
      print(searchlog.search107.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search107.keyword = testData1s;
      print(searchlog.search107.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search107.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search107.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search107.keyword = testData2s;
      print(searchlog.search107.keyword);
      expect(searchlog.search107.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search107.keyword = defalut;
      print(searchlog.search107.keyword);
      expect(searchlog.search107.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00668_element_check_00644 **********\n\n");
    });

    test('00669_element_check_00645', () async {
      print("\n********** テスト実行：00669_element_check_00645 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search107.print_word;
      print(searchlog.search107.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search107.print_word = testData1s;
      print(searchlog.search107.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search107.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search107.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search107.print_word = testData2s;
      print(searchlog.search107.print_word);
      expect(searchlog.search107.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search107.print_word = defalut;
      print(searchlog.search107.print_word);
      expect(searchlog.search107.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00669_element_check_00645 **********\n\n");
    });

    test('00670_element_check_00646', () async {
      print("\n********** テスト実行：00670_element_check_00646 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search107.description;
      print(searchlog.search107.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search107.description = testData1s;
      print(searchlog.search107.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search107.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search107.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search107.description = testData2s;
      print(searchlog.search107.description);
      expect(searchlog.search107.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search107.description = defalut;
      print(searchlog.search107.description);
      expect(searchlog.search107.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search107.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00670_element_check_00646 **********\n\n");
    });

    test('00671_element_check_00647', () async {
      print("\n********** テスト実行：00671_element_check_00647 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search108.file_name;
      print(searchlog.search108.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search108.file_name = testData1s;
      print(searchlog.search108.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search108.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search108.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search108.file_name = testData2s;
      print(searchlog.search108.file_name);
      expect(searchlog.search108.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search108.file_name = defalut;
      print(searchlog.search108.file_name);
      expect(searchlog.search108.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00671_element_check_00647 **********\n\n");
    });

    test('00672_element_check_00648', () async {
      print("\n********** テスト実行：00672_element_check_00648 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search108.typ;
      print(searchlog.search108.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search108.typ = testData1;
      print(searchlog.search108.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search108.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search108.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search108.typ = testData2;
      print(searchlog.search108.typ);
      expect(searchlog.search108.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search108.typ = defalut;
      print(searchlog.search108.typ);
      expect(searchlog.search108.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00672_element_check_00648 **********\n\n");
    });

    test('00673_element_check_00649', () async {
      print("\n********** テスト実行：00673_element_check_00649 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search108.out_count;
      print(searchlog.search108.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search108.out_count = testData1;
      print(searchlog.search108.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search108.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search108.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search108.out_count = testData2;
      print(searchlog.search108.out_count);
      expect(searchlog.search108.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search108.out_count = defalut;
      print(searchlog.search108.out_count);
      expect(searchlog.search108.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00673_element_check_00649 **********\n\n");
    });

    test('00674_element_check_00650', () async {
      print("\n********** テスト実行：00674_element_check_00650 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search108.section;
      print(searchlog.search108.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search108.section = testData1s;
      print(searchlog.search108.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search108.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search108.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search108.section = testData2s;
      print(searchlog.search108.section);
      expect(searchlog.search108.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search108.section = defalut;
      print(searchlog.search108.section);
      expect(searchlog.search108.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00674_element_check_00650 **********\n\n");
    });

    test('00675_element_check_00651', () async {
      print("\n********** テスト実行：00675_element_check_00651 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search108.keyword;
      print(searchlog.search108.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search108.keyword = testData1s;
      print(searchlog.search108.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search108.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search108.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search108.keyword = testData2s;
      print(searchlog.search108.keyword);
      expect(searchlog.search108.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search108.keyword = defalut;
      print(searchlog.search108.keyword);
      expect(searchlog.search108.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00675_element_check_00651 **********\n\n");
    });

    test('00676_element_check_00652', () async {
      print("\n********** テスト実行：00676_element_check_00652 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search108.print_word;
      print(searchlog.search108.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search108.print_word = testData1s;
      print(searchlog.search108.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search108.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search108.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search108.print_word = testData2s;
      print(searchlog.search108.print_word);
      expect(searchlog.search108.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search108.print_word = defalut;
      print(searchlog.search108.print_word);
      expect(searchlog.search108.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00676_element_check_00652 **********\n\n");
    });

    test('00677_element_check_00653', () async {
      print("\n********** テスト実行：00677_element_check_00653 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search108.description;
      print(searchlog.search108.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search108.description = testData1s;
      print(searchlog.search108.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search108.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search108.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search108.description = testData2s;
      print(searchlog.search108.description);
      expect(searchlog.search108.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search108.description = defalut;
      print(searchlog.search108.description);
      expect(searchlog.search108.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search108.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00677_element_check_00653 **********\n\n");
    });

    test('00678_element_check_00654', () async {
      print("\n********** テスト実行：00678_element_check_00654 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search109.file_name;
      print(searchlog.search109.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search109.file_name = testData1s;
      print(searchlog.search109.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search109.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search109.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search109.file_name = testData2s;
      print(searchlog.search109.file_name);
      expect(searchlog.search109.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search109.file_name = defalut;
      print(searchlog.search109.file_name);
      expect(searchlog.search109.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00678_element_check_00654 **********\n\n");
    });

    test('00679_element_check_00655', () async {
      print("\n********** テスト実行：00679_element_check_00655 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search109.typ;
      print(searchlog.search109.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search109.typ = testData1;
      print(searchlog.search109.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search109.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search109.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search109.typ = testData2;
      print(searchlog.search109.typ);
      expect(searchlog.search109.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search109.typ = defalut;
      print(searchlog.search109.typ);
      expect(searchlog.search109.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00679_element_check_00655 **********\n\n");
    });

    test('00680_element_check_00656', () async {
      print("\n********** テスト実行：00680_element_check_00656 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search109.out_count;
      print(searchlog.search109.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search109.out_count = testData1;
      print(searchlog.search109.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search109.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search109.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search109.out_count = testData2;
      print(searchlog.search109.out_count);
      expect(searchlog.search109.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search109.out_count = defalut;
      print(searchlog.search109.out_count);
      expect(searchlog.search109.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00680_element_check_00656 **********\n\n");
    });

    test('00681_element_check_00657', () async {
      print("\n********** テスト実行：00681_element_check_00657 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search109.section;
      print(searchlog.search109.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search109.section = testData1s;
      print(searchlog.search109.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search109.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search109.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search109.section = testData2s;
      print(searchlog.search109.section);
      expect(searchlog.search109.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search109.section = defalut;
      print(searchlog.search109.section);
      expect(searchlog.search109.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00681_element_check_00657 **********\n\n");
    });

    test('00682_element_check_00658', () async {
      print("\n********** テスト実行：00682_element_check_00658 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search109.keyword;
      print(searchlog.search109.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search109.keyword = testData1s;
      print(searchlog.search109.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search109.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search109.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search109.keyword = testData2s;
      print(searchlog.search109.keyword);
      expect(searchlog.search109.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search109.keyword = defalut;
      print(searchlog.search109.keyword);
      expect(searchlog.search109.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00682_element_check_00658 **********\n\n");
    });

    test('00683_element_check_00659', () async {
      print("\n********** テスト実行：00683_element_check_00659 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search109.print_word;
      print(searchlog.search109.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search109.print_word = testData1s;
      print(searchlog.search109.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search109.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search109.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search109.print_word = testData2s;
      print(searchlog.search109.print_word);
      expect(searchlog.search109.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search109.print_word = defalut;
      print(searchlog.search109.print_word);
      expect(searchlog.search109.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00683_element_check_00659 **********\n\n");
    });

    test('00684_element_check_00660', () async {
      print("\n********** テスト実行：00684_element_check_00660 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search109.description;
      print(searchlog.search109.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search109.description = testData1s;
      print(searchlog.search109.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search109.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search109.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search109.description = testData2s;
      print(searchlog.search109.description);
      expect(searchlog.search109.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search109.description = defalut;
      print(searchlog.search109.description);
      expect(searchlog.search109.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search109.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00684_element_check_00660 **********\n\n");
    });

    test('00685_element_check_00661', () async {
      print("\n********** テスト実行：00685_element_check_00661 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search110.file_name;
      print(searchlog.search110.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search110.file_name = testData1s;
      print(searchlog.search110.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search110.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search110.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search110.file_name = testData2s;
      print(searchlog.search110.file_name);
      expect(searchlog.search110.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search110.file_name = defalut;
      print(searchlog.search110.file_name);
      expect(searchlog.search110.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00685_element_check_00661 **********\n\n");
    });

    test('00686_element_check_00662', () async {
      print("\n********** テスト実行：00686_element_check_00662 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search110.typ;
      print(searchlog.search110.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search110.typ = testData1;
      print(searchlog.search110.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search110.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search110.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search110.typ = testData2;
      print(searchlog.search110.typ);
      expect(searchlog.search110.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search110.typ = defalut;
      print(searchlog.search110.typ);
      expect(searchlog.search110.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00686_element_check_00662 **********\n\n");
    });

    test('00687_element_check_00663', () async {
      print("\n********** テスト実行：00687_element_check_00663 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search110.out_count;
      print(searchlog.search110.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search110.out_count = testData1;
      print(searchlog.search110.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search110.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search110.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search110.out_count = testData2;
      print(searchlog.search110.out_count);
      expect(searchlog.search110.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search110.out_count = defalut;
      print(searchlog.search110.out_count);
      expect(searchlog.search110.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00687_element_check_00663 **********\n\n");
    });

    test('00688_element_check_00664', () async {
      print("\n********** テスト実行：00688_element_check_00664 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search110.section;
      print(searchlog.search110.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search110.section = testData1s;
      print(searchlog.search110.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search110.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search110.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search110.section = testData2s;
      print(searchlog.search110.section);
      expect(searchlog.search110.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search110.section = defalut;
      print(searchlog.search110.section);
      expect(searchlog.search110.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00688_element_check_00664 **********\n\n");
    });

    test('00689_element_check_00665', () async {
      print("\n********** テスト実行：00689_element_check_00665 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search110.keyword;
      print(searchlog.search110.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search110.keyword = testData1s;
      print(searchlog.search110.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search110.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search110.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search110.keyword = testData2s;
      print(searchlog.search110.keyword);
      expect(searchlog.search110.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search110.keyword = defalut;
      print(searchlog.search110.keyword);
      expect(searchlog.search110.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00689_element_check_00665 **********\n\n");
    });

    test('00690_element_check_00666', () async {
      print("\n********** テスト実行：00690_element_check_00666 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search110.print_word;
      print(searchlog.search110.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search110.print_word = testData1s;
      print(searchlog.search110.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search110.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search110.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search110.print_word = testData2s;
      print(searchlog.search110.print_word);
      expect(searchlog.search110.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search110.print_word = defalut;
      print(searchlog.search110.print_word);
      expect(searchlog.search110.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00690_element_check_00666 **********\n\n");
    });

    test('00691_element_check_00667', () async {
      print("\n********** テスト実行：00691_element_check_00667 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search110.description;
      print(searchlog.search110.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search110.description = testData1s;
      print(searchlog.search110.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search110.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search110.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search110.description = testData2s;
      print(searchlog.search110.description);
      expect(searchlog.search110.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search110.description = defalut;
      print(searchlog.search110.description);
      expect(searchlog.search110.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search110.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00691_element_check_00667 **********\n\n");
    });

    test('00692_element_check_00668', () async {
      print("\n********** テスト実行：00692_element_check_00668 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search111.file_name;
      print(searchlog.search111.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search111.file_name = testData1s;
      print(searchlog.search111.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search111.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search111.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search111.file_name = testData2s;
      print(searchlog.search111.file_name);
      expect(searchlog.search111.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search111.file_name = defalut;
      print(searchlog.search111.file_name);
      expect(searchlog.search111.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00692_element_check_00668 **********\n\n");
    });

    test('00693_element_check_00669', () async {
      print("\n********** テスト実行：00693_element_check_00669 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search111.typ;
      print(searchlog.search111.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search111.typ = testData1;
      print(searchlog.search111.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search111.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search111.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search111.typ = testData2;
      print(searchlog.search111.typ);
      expect(searchlog.search111.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search111.typ = defalut;
      print(searchlog.search111.typ);
      expect(searchlog.search111.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00693_element_check_00669 **********\n\n");
    });

    test('00694_element_check_00670', () async {
      print("\n********** テスト実行：00694_element_check_00670 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search111.out_count;
      print(searchlog.search111.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search111.out_count = testData1;
      print(searchlog.search111.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search111.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search111.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search111.out_count = testData2;
      print(searchlog.search111.out_count);
      expect(searchlog.search111.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search111.out_count = defalut;
      print(searchlog.search111.out_count);
      expect(searchlog.search111.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00694_element_check_00670 **********\n\n");
    });

    test('00695_element_check_00671', () async {
      print("\n********** テスト実行：00695_element_check_00671 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search111.section;
      print(searchlog.search111.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search111.section = testData1s;
      print(searchlog.search111.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search111.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search111.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search111.section = testData2s;
      print(searchlog.search111.section);
      expect(searchlog.search111.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search111.section = defalut;
      print(searchlog.search111.section);
      expect(searchlog.search111.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00695_element_check_00671 **********\n\n");
    });

    test('00696_element_check_00672', () async {
      print("\n********** テスト実行：00696_element_check_00672 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search111.keyword;
      print(searchlog.search111.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search111.keyword = testData1s;
      print(searchlog.search111.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search111.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search111.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search111.keyword = testData2s;
      print(searchlog.search111.keyword);
      expect(searchlog.search111.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search111.keyword = defalut;
      print(searchlog.search111.keyword);
      expect(searchlog.search111.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00696_element_check_00672 **********\n\n");
    });

    test('00697_element_check_00673', () async {
      print("\n********** テスト実行：00697_element_check_00673 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search111.print_word;
      print(searchlog.search111.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search111.print_word = testData1s;
      print(searchlog.search111.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search111.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search111.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search111.print_word = testData2s;
      print(searchlog.search111.print_word);
      expect(searchlog.search111.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search111.print_word = defalut;
      print(searchlog.search111.print_word);
      expect(searchlog.search111.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00697_element_check_00673 **********\n\n");
    });

    test('00698_element_check_00674', () async {
      print("\n********** テスト実行：00698_element_check_00674 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search111.description;
      print(searchlog.search111.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search111.description = testData1s;
      print(searchlog.search111.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search111.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search111.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search111.description = testData2s;
      print(searchlog.search111.description);
      expect(searchlog.search111.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search111.description = defalut;
      print(searchlog.search111.description);
      expect(searchlog.search111.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search111.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00698_element_check_00674 **********\n\n");
    });

    test('00699_element_check_00675', () async {
      print("\n********** テスト実行：00699_element_check_00675 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search112.file_name;
      print(searchlog.search112.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search112.file_name = testData1s;
      print(searchlog.search112.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search112.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search112.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search112.file_name = testData2s;
      print(searchlog.search112.file_name);
      expect(searchlog.search112.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search112.file_name = defalut;
      print(searchlog.search112.file_name);
      expect(searchlog.search112.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00699_element_check_00675 **********\n\n");
    });

    test('00700_element_check_00676', () async {
      print("\n********** テスト実行：00700_element_check_00676 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search112.typ;
      print(searchlog.search112.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search112.typ = testData1;
      print(searchlog.search112.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search112.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search112.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search112.typ = testData2;
      print(searchlog.search112.typ);
      expect(searchlog.search112.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search112.typ = defalut;
      print(searchlog.search112.typ);
      expect(searchlog.search112.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00700_element_check_00676 **********\n\n");
    });

    test('00701_element_check_00677', () async {
      print("\n********** テスト実行：00701_element_check_00677 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search112.out_count;
      print(searchlog.search112.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search112.out_count = testData1;
      print(searchlog.search112.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search112.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search112.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search112.out_count = testData2;
      print(searchlog.search112.out_count);
      expect(searchlog.search112.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search112.out_count = defalut;
      print(searchlog.search112.out_count);
      expect(searchlog.search112.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00701_element_check_00677 **********\n\n");
    });

    test('00702_element_check_00678', () async {
      print("\n********** テスト実行：00702_element_check_00678 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search112.section;
      print(searchlog.search112.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search112.section = testData1s;
      print(searchlog.search112.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search112.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search112.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search112.section = testData2s;
      print(searchlog.search112.section);
      expect(searchlog.search112.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search112.section = defalut;
      print(searchlog.search112.section);
      expect(searchlog.search112.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00702_element_check_00678 **********\n\n");
    });

    test('00703_element_check_00679', () async {
      print("\n********** テスト実行：00703_element_check_00679 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search112.keyword;
      print(searchlog.search112.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search112.keyword = testData1s;
      print(searchlog.search112.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search112.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search112.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search112.keyword = testData2s;
      print(searchlog.search112.keyword);
      expect(searchlog.search112.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search112.keyword = defalut;
      print(searchlog.search112.keyword);
      expect(searchlog.search112.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00703_element_check_00679 **********\n\n");
    });

    test('00704_element_check_00680', () async {
      print("\n********** テスト実行：00704_element_check_00680 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search112.print_word;
      print(searchlog.search112.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search112.print_word = testData1s;
      print(searchlog.search112.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search112.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search112.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search112.print_word = testData2s;
      print(searchlog.search112.print_word);
      expect(searchlog.search112.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search112.print_word = defalut;
      print(searchlog.search112.print_word);
      expect(searchlog.search112.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00704_element_check_00680 **********\n\n");
    });

    test('00705_element_check_00681', () async {
      print("\n********** テスト実行：00705_element_check_00681 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search112.description;
      print(searchlog.search112.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search112.description = testData1s;
      print(searchlog.search112.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search112.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search112.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search112.description = testData2s;
      print(searchlog.search112.description);
      expect(searchlog.search112.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search112.description = defalut;
      print(searchlog.search112.description);
      expect(searchlog.search112.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search112.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00705_element_check_00681 **********\n\n");
    });

    test('00706_element_check_00682', () async {
      print("\n********** テスト実行：00706_element_check_00682 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search113.file_name;
      print(searchlog.search113.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search113.file_name = testData1s;
      print(searchlog.search113.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search113.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search113.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search113.file_name = testData2s;
      print(searchlog.search113.file_name);
      expect(searchlog.search113.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search113.file_name = defalut;
      print(searchlog.search113.file_name);
      expect(searchlog.search113.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00706_element_check_00682 **********\n\n");
    });

    test('00707_element_check_00683', () async {
      print("\n********** テスト実行：00707_element_check_00683 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search113.typ;
      print(searchlog.search113.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search113.typ = testData1;
      print(searchlog.search113.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search113.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search113.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search113.typ = testData2;
      print(searchlog.search113.typ);
      expect(searchlog.search113.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search113.typ = defalut;
      print(searchlog.search113.typ);
      expect(searchlog.search113.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00707_element_check_00683 **********\n\n");
    });

    test('00708_element_check_00684', () async {
      print("\n********** テスト実行：00708_element_check_00684 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search113.out_count;
      print(searchlog.search113.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search113.out_count = testData1;
      print(searchlog.search113.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search113.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search113.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search113.out_count = testData2;
      print(searchlog.search113.out_count);
      expect(searchlog.search113.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search113.out_count = defalut;
      print(searchlog.search113.out_count);
      expect(searchlog.search113.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00708_element_check_00684 **********\n\n");
    });

    test('00709_element_check_00685', () async {
      print("\n********** テスト実行：00709_element_check_00685 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search113.section;
      print(searchlog.search113.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search113.section = testData1s;
      print(searchlog.search113.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search113.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search113.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search113.section = testData2s;
      print(searchlog.search113.section);
      expect(searchlog.search113.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search113.section = defalut;
      print(searchlog.search113.section);
      expect(searchlog.search113.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00709_element_check_00685 **********\n\n");
    });

    test('00710_element_check_00686', () async {
      print("\n********** テスト実行：00710_element_check_00686 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search113.keyword;
      print(searchlog.search113.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search113.keyword = testData1s;
      print(searchlog.search113.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search113.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search113.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search113.keyword = testData2s;
      print(searchlog.search113.keyword);
      expect(searchlog.search113.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search113.keyword = defalut;
      print(searchlog.search113.keyword);
      expect(searchlog.search113.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00710_element_check_00686 **********\n\n");
    });

    test('00711_element_check_00687', () async {
      print("\n********** テスト実行：00711_element_check_00687 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search113.print_word;
      print(searchlog.search113.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search113.print_word = testData1s;
      print(searchlog.search113.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search113.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search113.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search113.print_word = testData2s;
      print(searchlog.search113.print_word);
      expect(searchlog.search113.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search113.print_word = defalut;
      print(searchlog.search113.print_word);
      expect(searchlog.search113.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00711_element_check_00687 **********\n\n");
    });

    test('00712_element_check_00688', () async {
      print("\n********** テスト実行：00712_element_check_00688 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search113.description;
      print(searchlog.search113.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search113.description = testData1s;
      print(searchlog.search113.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search113.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search113.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search113.description = testData2s;
      print(searchlog.search113.description);
      expect(searchlog.search113.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search113.description = defalut;
      print(searchlog.search113.description);
      expect(searchlog.search113.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search113.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00712_element_check_00688 **********\n\n");
    });

    test('00713_element_check_00689', () async {
      print("\n********** テスト実行：00713_element_check_00689 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search114.file_name;
      print(searchlog.search114.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search114.file_name = testData1s;
      print(searchlog.search114.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search114.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search114.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search114.file_name = testData2s;
      print(searchlog.search114.file_name);
      expect(searchlog.search114.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search114.file_name = defalut;
      print(searchlog.search114.file_name);
      expect(searchlog.search114.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00713_element_check_00689 **********\n\n");
    });

    test('00714_element_check_00690', () async {
      print("\n********** テスト実行：00714_element_check_00690 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search114.typ;
      print(searchlog.search114.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search114.typ = testData1;
      print(searchlog.search114.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search114.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search114.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search114.typ = testData2;
      print(searchlog.search114.typ);
      expect(searchlog.search114.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search114.typ = defalut;
      print(searchlog.search114.typ);
      expect(searchlog.search114.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00714_element_check_00690 **********\n\n");
    });

    test('00715_element_check_00691', () async {
      print("\n********** テスト実行：00715_element_check_00691 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search114.out_count;
      print(searchlog.search114.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search114.out_count = testData1;
      print(searchlog.search114.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search114.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search114.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search114.out_count = testData2;
      print(searchlog.search114.out_count);
      expect(searchlog.search114.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search114.out_count = defalut;
      print(searchlog.search114.out_count);
      expect(searchlog.search114.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00715_element_check_00691 **********\n\n");
    });

    test('00716_element_check_00692', () async {
      print("\n********** テスト実行：00716_element_check_00692 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search114.section;
      print(searchlog.search114.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search114.section = testData1s;
      print(searchlog.search114.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search114.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search114.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search114.section = testData2s;
      print(searchlog.search114.section);
      expect(searchlog.search114.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search114.section = defalut;
      print(searchlog.search114.section);
      expect(searchlog.search114.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00716_element_check_00692 **********\n\n");
    });

    test('00717_element_check_00693', () async {
      print("\n********** テスト実行：00717_element_check_00693 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search114.keyword;
      print(searchlog.search114.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search114.keyword = testData1;
      print(searchlog.search114.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search114.keyword == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search114.keyword == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search114.keyword = testData2;
      print(searchlog.search114.keyword);
      expect(searchlog.search114.keyword == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.keyword == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search114.keyword = defalut;
      print(searchlog.search114.keyword);
      expect(searchlog.search114.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00717_element_check_00693 **********\n\n");
    });

    test('00718_element_check_00694', () async {
      print("\n********** テスト実行：00718_element_check_00694 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search114.print_word;
      print(searchlog.search114.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search114.print_word = testData1s;
      print(searchlog.search114.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search114.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search114.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search114.print_word = testData2s;
      print(searchlog.search114.print_word);
      expect(searchlog.search114.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search114.print_word = defalut;
      print(searchlog.search114.print_word);
      expect(searchlog.search114.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00718_element_check_00694 **********\n\n");
    });

    test('00719_element_check_00695', () async {
      print("\n********** テスト実行：00719_element_check_00695 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search114.description;
      print(searchlog.search114.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search114.description = testData1s;
      print(searchlog.search114.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search114.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search114.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search114.description = testData2s;
      print(searchlog.search114.description);
      expect(searchlog.search114.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search114.description = defalut;
      print(searchlog.search114.description);
      expect(searchlog.search114.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search114.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00719_element_check_00695 **********\n\n");
    });

    test('00720_element_check_00696', () async {
      print("\n********** テスト実行：00720_element_check_00696 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search115.file_name;
      print(searchlog.search115.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search115.file_name = testData1s;
      print(searchlog.search115.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search115.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search115.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search115.file_name = testData2s;
      print(searchlog.search115.file_name);
      expect(searchlog.search115.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search115.file_name = defalut;
      print(searchlog.search115.file_name);
      expect(searchlog.search115.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00720_element_check_00696 **********\n\n");
    });

    test('00721_element_check_00697', () async {
      print("\n********** テスト実行：00721_element_check_00697 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search115.typ;
      print(searchlog.search115.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search115.typ = testData1;
      print(searchlog.search115.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search115.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search115.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search115.typ = testData2;
      print(searchlog.search115.typ);
      expect(searchlog.search115.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search115.typ = defalut;
      print(searchlog.search115.typ);
      expect(searchlog.search115.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00721_element_check_00697 **********\n\n");
    });

    test('00722_element_check_00698', () async {
      print("\n********** テスト実行：00722_element_check_00698 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search115.out_count;
      print(searchlog.search115.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search115.out_count = testData1;
      print(searchlog.search115.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search115.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search115.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search115.out_count = testData2;
      print(searchlog.search115.out_count);
      expect(searchlog.search115.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search115.out_count = defalut;
      print(searchlog.search115.out_count);
      expect(searchlog.search115.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00722_element_check_00698 **********\n\n");
    });

    test('00723_element_check_00699', () async {
      print("\n********** テスト実行：00723_element_check_00699 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search115.section;
      print(searchlog.search115.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search115.section = testData1s;
      print(searchlog.search115.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search115.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search115.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search115.section = testData2s;
      print(searchlog.search115.section);
      expect(searchlog.search115.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search115.section = defalut;
      print(searchlog.search115.section);
      expect(searchlog.search115.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00723_element_check_00699 **********\n\n");
    });

    test('00724_element_check_00700', () async {
      print("\n********** テスト実行：00724_element_check_00700 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search115.keyword;
      print(searchlog.search115.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search115.keyword = testData1;
      print(searchlog.search115.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search115.keyword == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search115.keyword == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search115.keyword = testData2;
      print(searchlog.search115.keyword);
      expect(searchlog.search115.keyword == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.keyword == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search115.keyword = defalut;
      print(searchlog.search115.keyword);
      expect(searchlog.search115.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00724_element_check_00700 **********\n\n");
    });

    test('00725_element_check_00701', () async {
      print("\n********** テスト実行：00725_element_check_00701 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search115.print_word;
      print(searchlog.search115.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search115.print_word = testData1s;
      print(searchlog.search115.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search115.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search115.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search115.print_word = testData2s;
      print(searchlog.search115.print_word);
      expect(searchlog.search115.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search115.print_word = defalut;
      print(searchlog.search115.print_word);
      expect(searchlog.search115.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00725_element_check_00701 **********\n\n");
    });

    test('00726_element_check_00702', () async {
      print("\n********** テスト実行：00726_element_check_00702 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search115.description;
      print(searchlog.search115.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search115.description = testData1s;
      print(searchlog.search115.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search115.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search115.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search115.description = testData2s;
      print(searchlog.search115.description);
      expect(searchlog.search115.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search115.description = defalut;
      print(searchlog.search115.description);
      expect(searchlog.search115.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search115.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00726_element_check_00702 **********\n\n");
    });

    test('00727_element_check_00703', () async {
      print("\n********** テスト実行：00727_element_check_00703 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search116.file_name;
      print(searchlog.search116.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search116.file_name = testData1s;
      print(searchlog.search116.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search116.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search116.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search116.file_name = testData2s;
      print(searchlog.search116.file_name);
      expect(searchlog.search116.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search116.file_name = defalut;
      print(searchlog.search116.file_name);
      expect(searchlog.search116.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00727_element_check_00703 **********\n\n");
    });

    test('00728_element_check_00704', () async {
      print("\n********** テスト実行：00728_element_check_00704 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search116.typ;
      print(searchlog.search116.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search116.typ = testData1;
      print(searchlog.search116.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search116.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search116.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search116.typ = testData2;
      print(searchlog.search116.typ);
      expect(searchlog.search116.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search116.typ = defalut;
      print(searchlog.search116.typ);
      expect(searchlog.search116.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00728_element_check_00704 **********\n\n");
    });

    test('00729_element_check_00705', () async {
      print("\n********** テスト実行：00729_element_check_00705 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search116.out_count;
      print(searchlog.search116.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search116.out_count = testData1;
      print(searchlog.search116.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search116.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search116.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search116.out_count = testData2;
      print(searchlog.search116.out_count);
      expect(searchlog.search116.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search116.out_count = defalut;
      print(searchlog.search116.out_count);
      expect(searchlog.search116.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00729_element_check_00705 **********\n\n");
    });

    test('00730_element_check_00706', () async {
      print("\n********** テスト実行：00730_element_check_00706 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search116.section;
      print(searchlog.search116.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search116.section = testData1s;
      print(searchlog.search116.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search116.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search116.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search116.section = testData2s;
      print(searchlog.search116.section);
      expect(searchlog.search116.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search116.section = defalut;
      print(searchlog.search116.section);
      expect(searchlog.search116.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00730_element_check_00706 **********\n\n");
    });

    test('00731_element_check_00707', () async {
      print("\n********** テスト実行：00731_element_check_00707 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search116.keyword;
      print(searchlog.search116.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search116.keyword = testData1s;
      print(searchlog.search116.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search116.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search116.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search116.keyword = testData2s;
      print(searchlog.search116.keyword);
      expect(searchlog.search116.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search116.keyword = defalut;
      print(searchlog.search116.keyword);
      expect(searchlog.search116.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00731_element_check_00707 **********\n\n");
    });

    test('00732_element_check_00708', () async {
      print("\n********** テスト実行：00732_element_check_00708 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search116.print_word;
      print(searchlog.search116.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search116.print_word = testData1s;
      print(searchlog.search116.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search116.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search116.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search116.print_word = testData2s;
      print(searchlog.search116.print_word);
      expect(searchlog.search116.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search116.print_word = defalut;
      print(searchlog.search116.print_word);
      expect(searchlog.search116.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00732_element_check_00708 **********\n\n");
    });

    test('00733_element_check_00709', () async {
      print("\n********** テスト実行：00733_element_check_00709 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search116.description;
      print(searchlog.search116.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search116.description = testData1s;
      print(searchlog.search116.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search116.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search116.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search116.description = testData2s;
      print(searchlog.search116.description);
      expect(searchlog.search116.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search116.description = defalut;
      print(searchlog.search116.description);
      expect(searchlog.search116.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search116.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00733_element_check_00709 **********\n\n");
    });

    test('00734_element_check_00710', () async {
      print("\n********** テスト実行：00734_element_check_00710 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search117.file_name;
      print(searchlog.search117.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search117.file_name = testData1s;
      print(searchlog.search117.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search117.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search117.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search117.file_name = testData2s;
      print(searchlog.search117.file_name);
      expect(searchlog.search117.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search117.file_name = defalut;
      print(searchlog.search117.file_name);
      expect(searchlog.search117.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00734_element_check_00710 **********\n\n");
    });

    test('00735_element_check_00711', () async {
      print("\n********** テスト実行：00735_element_check_00711 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search117.typ;
      print(searchlog.search117.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search117.typ = testData1;
      print(searchlog.search117.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search117.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search117.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search117.typ = testData2;
      print(searchlog.search117.typ);
      expect(searchlog.search117.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search117.typ = defalut;
      print(searchlog.search117.typ);
      expect(searchlog.search117.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00735_element_check_00711 **********\n\n");
    });

    test('00736_element_check_00712', () async {
      print("\n********** テスト実行：00736_element_check_00712 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search117.out_count;
      print(searchlog.search117.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search117.out_count = testData1;
      print(searchlog.search117.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search117.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search117.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search117.out_count = testData2;
      print(searchlog.search117.out_count);
      expect(searchlog.search117.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search117.out_count = defalut;
      print(searchlog.search117.out_count);
      expect(searchlog.search117.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00736_element_check_00712 **********\n\n");
    });

    test('00737_element_check_00713', () async {
      print("\n********** テスト実行：00737_element_check_00713 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search117.section;
      print(searchlog.search117.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search117.section = testData1s;
      print(searchlog.search117.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search117.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search117.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search117.section = testData2s;
      print(searchlog.search117.section);
      expect(searchlog.search117.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search117.section = defalut;
      print(searchlog.search117.section);
      expect(searchlog.search117.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00737_element_check_00713 **********\n\n");
    });

    test('00738_element_check_00714', () async {
      print("\n********** テスト実行：00738_element_check_00714 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search117.keyword;
      print(searchlog.search117.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search117.keyword = testData1s;
      print(searchlog.search117.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search117.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search117.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search117.keyword = testData2s;
      print(searchlog.search117.keyword);
      expect(searchlog.search117.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search117.keyword = defalut;
      print(searchlog.search117.keyword);
      expect(searchlog.search117.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00738_element_check_00714 **********\n\n");
    });

    test('00739_element_check_00715', () async {
      print("\n********** テスト実行：00739_element_check_00715 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search117.print_word;
      print(searchlog.search117.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search117.print_word = testData1s;
      print(searchlog.search117.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search117.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search117.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search117.print_word = testData2s;
      print(searchlog.search117.print_word);
      expect(searchlog.search117.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search117.print_word = defalut;
      print(searchlog.search117.print_word);
      expect(searchlog.search117.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00739_element_check_00715 **********\n\n");
    });

    test('00740_element_check_00716', () async {
      print("\n********** テスト実行：00740_element_check_00716 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search117.description;
      print(searchlog.search117.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search117.description = testData1s;
      print(searchlog.search117.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search117.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search117.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search117.description = testData2s;
      print(searchlog.search117.description);
      expect(searchlog.search117.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search117.description = defalut;
      print(searchlog.search117.description);
      expect(searchlog.search117.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search117.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00740_element_check_00716 **********\n\n");
    });

    test('00741_element_check_00717', () async {
      print("\n********** テスト実行：00741_element_check_00717 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search118.file_name;
      print(searchlog.search118.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search118.file_name = testData1s;
      print(searchlog.search118.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search118.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search118.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search118.file_name = testData2s;
      print(searchlog.search118.file_name);
      expect(searchlog.search118.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search118.file_name = defalut;
      print(searchlog.search118.file_name);
      expect(searchlog.search118.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00741_element_check_00717 **********\n\n");
    });

    test('00742_element_check_00718', () async {
      print("\n********** テスト実行：00742_element_check_00718 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search118.typ;
      print(searchlog.search118.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search118.typ = testData1;
      print(searchlog.search118.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search118.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search118.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search118.typ = testData2;
      print(searchlog.search118.typ);
      expect(searchlog.search118.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search118.typ = defalut;
      print(searchlog.search118.typ);
      expect(searchlog.search118.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00742_element_check_00718 **********\n\n");
    });

    test('00743_element_check_00719', () async {
      print("\n********** テスト実行：00743_element_check_00719 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search118.out_count;
      print(searchlog.search118.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search118.out_count = testData1;
      print(searchlog.search118.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search118.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search118.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search118.out_count = testData2;
      print(searchlog.search118.out_count);
      expect(searchlog.search118.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search118.out_count = defalut;
      print(searchlog.search118.out_count);
      expect(searchlog.search118.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00743_element_check_00719 **********\n\n");
    });

    test('00744_element_check_00720', () async {
      print("\n********** テスト実行：00744_element_check_00720 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search118.section;
      print(searchlog.search118.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search118.section = testData1s;
      print(searchlog.search118.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search118.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search118.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search118.section = testData2s;
      print(searchlog.search118.section);
      expect(searchlog.search118.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search118.section = defalut;
      print(searchlog.search118.section);
      expect(searchlog.search118.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00744_element_check_00720 **********\n\n");
    });

    test('00745_element_check_00721', () async {
      print("\n********** テスト実行：00745_element_check_00721 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search118.keyword;
      print(searchlog.search118.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search118.keyword = testData1s;
      print(searchlog.search118.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search118.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search118.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search118.keyword = testData2s;
      print(searchlog.search118.keyword);
      expect(searchlog.search118.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search118.keyword = defalut;
      print(searchlog.search118.keyword);
      expect(searchlog.search118.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00745_element_check_00721 **********\n\n");
    });

    test('00746_element_check_00722', () async {
      print("\n********** テスト実行：00746_element_check_00722 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search118.print_word;
      print(searchlog.search118.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search118.print_word = testData1s;
      print(searchlog.search118.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search118.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search118.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search118.print_word = testData2s;
      print(searchlog.search118.print_word);
      expect(searchlog.search118.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search118.print_word = defalut;
      print(searchlog.search118.print_word);
      expect(searchlog.search118.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00746_element_check_00722 **********\n\n");
    });

    test('00747_element_check_00723', () async {
      print("\n********** テスト実行：00747_element_check_00723 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search118.description;
      print(searchlog.search118.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search118.description = testData1s;
      print(searchlog.search118.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search118.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search118.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search118.description = testData2s;
      print(searchlog.search118.description);
      expect(searchlog.search118.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search118.description = defalut;
      print(searchlog.search118.description);
      expect(searchlog.search118.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search118.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00747_element_check_00723 **********\n\n");
    });

    test('00748_element_check_00724', () async {
      print("\n********** テスト実行：00748_element_check_00724 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search119.file_name;
      print(searchlog.search119.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search119.file_name = testData1s;
      print(searchlog.search119.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search119.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search119.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search119.file_name = testData2s;
      print(searchlog.search119.file_name);
      expect(searchlog.search119.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search119.file_name = defalut;
      print(searchlog.search119.file_name);
      expect(searchlog.search119.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00748_element_check_00724 **********\n\n");
    });

    test('00749_element_check_00725', () async {
      print("\n********** テスト実行：00749_element_check_00725 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search119.typ;
      print(searchlog.search119.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search119.typ = testData1;
      print(searchlog.search119.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search119.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search119.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search119.typ = testData2;
      print(searchlog.search119.typ);
      expect(searchlog.search119.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search119.typ = defalut;
      print(searchlog.search119.typ);
      expect(searchlog.search119.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00749_element_check_00725 **********\n\n");
    });

    test('00750_element_check_00726', () async {
      print("\n********** テスト実行：00750_element_check_00726 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search119.out_count;
      print(searchlog.search119.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search119.out_count = testData1;
      print(searchlog.search119.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search119.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search119.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search119.out_count = testData2;
      print(searchlog.search119.out_count);
      expect(searchlog.search119.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search119.out_count = defalut;
      print(searchlog.search119.out_count);
      expect(searchlog.search119.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00750_element_check_00726 **********\n\n");
    });

    test('00751_element_check_00727', () async {
      print("\n********** テスト実行：00751_element_check_00727 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search119.section;
      print(searchlog.search119.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search119.section = testData1s;
      print(searchlog.search119.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search119.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search119.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search119.section = testData2s;
      print(searchlog.search119.section);
      expect(searchlog.search119.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search119.section = defalut;
      print(searchlog.search119.section);
      expect(searchlog.search119.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00751_element_check_00727 **********\n\n");
    });

    test('00752_element_check_00728', () async {
      print("\n********** テスト実行：00752_element_check_00728 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search119.keyword;
      print(searchlog.search119.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search119.keyword = testData1s;
      print(searchlog.search119.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search119.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search119.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search119.keyword = testData2s;
      print(searchlog.search119.keyword);
      expect(searchlog.search119.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search119.keyword = defalut;
      print(searchlog.search119.keyword);
      expect(searchlog.search119.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00752_element_check_00728 **********\n\n");
    });

    test('00753_element_check_00729', () async {
      print("\n********** テスト実行：00753_element_check_00729 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search119.print_word;
      print(searchlog.search119.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search119.print_word = testData1s;
      print(searchlog.search119.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search119.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search119.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search119.print_word = testData2s;
      print(searchlog.search119.print_word);
      expect(searchlog.search119.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search119.print_word = defalut;
      print(searchlog.search119.print_word);
      expect(searchlog.search119.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00753_element_check_00729 **********\n\n");
    });

    test('00754_element_check_00730', () async {
      print("\n********** テスト実行：00754_element_check_00730 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search119.description;
      print(searchlog.search119.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search119.description = testData1s;
      print(searchlog.search119.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search119.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search119.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search119.description = testData2s;
      print(searchlog.search119.description);
      expect(searchlog.search119.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search119.description = defalut;
      print(searchlog.search119.description);
      expect(searchlog.search119.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search119.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00754_element_check_00730 **********\n\n");
    });

    test('00755_element_check_00731', () async {
      print("\n********** テスト実行：00755_element_check_00731 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search120.file_name;
      print(searchlog.search120.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search120.file_name = testData1s;
      print(searchlog.search120.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search120.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search120.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search120.file_name = testData2s;
      print(searchlog.search120.file_name);
      expect(searchlog.search120.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search120.file_name = defalut;
      print(searchlog.search120.file_name);
      expect(searchlog.search120.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00755_element_check_00731 **********\n\n");
    });

    test('00756_element_check_00732', () async {
      print("\n********** テスト実行：00756_element_check_00732 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search120.typ;
      print(searchlog.search120.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search120.typ = testData1;
      print(searchlog.search120.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search120.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search120.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search120.typ = testData2;
      print(searchlog.search120.typ);
      expect(searchlog.search120.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search120.typ = defalut;
      print(searchlog.search120.typ);
      expect(searchlog.search120.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00756_element_check_00732 **********\n\n");
    });

    test('00757_element_check_00733', () async {
      print("\n********** テスト実行：00757_element_check_00733 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search120.out_count;
      print(searchlog.search120.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search120.out_count = testData1;
      print(searchlog.search120.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search120.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search120.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search120.out_count = testData2;
      print(searchlog.search120.out_count);
      expect(searchlog.search120.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search120.out_count = defalut;
      print(searchlog.search120.out_count);
      expect(searchlog.search120.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00757_element_check_00733 **********\n\n");
    });

    test('00758_element_check_00734', () async {
      print("\n********** テスト実行：00758_element_check_00734 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search120.section;
      print(searchlog.search120.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search120.section = testData1s;
      print(searchlog.search120.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search120.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search120.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search120.section = testData2s;
      print(searchlog.search120.section);
      expect(searchlog.search120.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search120.section = defalut;
      print(searchlog.search120.section);
      expect(searchlog.search120.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00758_element_check_00734 **********\n\n");
    });

    test('00759_element_check_00735', () async {
      print("\n********** テスト実行：00759_element_check_00735 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search120.keyword;
      print(searchlog.search120.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search120.keyword = testData1s;
      print(searchlog.search120.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search120.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search120.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search120.keyword = testData2s;
      print(searchlog.search120.keyword);
      expect(searchlog.search120.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search120.keyword = defalut;
      print(searchlog.search120.keyword);
      expect(searchlog.search120.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00759_element_check_00735 **********\n\n");
    });

    test('00760_element_check_00736', () async {
      print("\n********** テスト実行：00760_element_check_00736 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search120.print_word;
      print(searchlog.search120.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search120.print_word = testData1s;
      print(searchlog.search120.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search120.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search120.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search120.print_word = testData2s;
      print(searchlog.search120.print_word);
      expect(searchlog.search120.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search120.print_word = defalut;
      print(searchlog.search120.print_word);
      expect(searchlog.search120.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00760_element_check_00736 **********\n\n");
    });

    test('00761_element_check_00737', () async {
      print("\n********** テスト実行：00761_element_check_00737 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search120.description;
      print(searchlog.search120.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search120.description = testData1s;
      print(searchlog.search120.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search120.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search120.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search120.description = testData2s;
      print(searchlog.search120.description);
      expect(searchlog.search120.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search120.description = defalut;
      print(searchlog.search120.description);
      expect(searchlog.search120.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search120.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00761_element_check_00737 **********\n\n");
    });

    test('00762_element_check_00738', () async {
      print("\n********** テスト実行：00762_element_check_00738 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search121.file_name;
      print(searchlog.search121.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search121.file_name = testData1s;
      print(searchlog.search121.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search121.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search121.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search121.file_name = testData2s;
      print(searchlog.search121.file_name);
      expect(searchlog.search121.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search121.file_name = defalut;
      print(searchlog.search121.file_name);
      expect(searchlog.search121.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00762_element_check_00738 **********\n\n");
    });

    test('00763_element_check_00739', () async {
      print("\n********** テスト実行：00763_element_check_00739 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search121.typ;
      print(searchlog.search121.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search121.typ = testData1;
      print(searchlog.search121.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search121.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search121.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search121.typ = testData2;
      print(searchlog.search121.typ);
      expect(searchlog.search121.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search121.typ = defalut;
      print(searchlog.search121.typ);
      expect(searchlog.search121.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00763_element_check_00739 **********\n\n");
    });

    test('00764_element_check_00740', () async {
      print("\n********** テスト実行：00764_element_check_00740 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search121.out_count;
      print(searchlog.search121.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search121.out_count = testData1;
      print(searchlog.search121.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search121.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search121.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search121.out_count = testData2;
      print(searchlog.search121.out_count);
      expect(searchlog.search121.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search121.out_count = defalut;
      print(searchlog.search121.out_count);
      expect(searchlog.search121.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00764_element_check_00740 **********\n\n");
    });

    test('00765_element_check_00741', () async {
      print("\n********** テスト実行：00765_element_check_00741 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search121.section;
      print(searchlog.search121.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search121.section = testData1s;
      print(searchlog.search121.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search121.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search121.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search121.section = testData2s;
      print(searchlog.search121.section);
      expect(searchlog.search121.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search121.section = defalut;
      print(searchlog.search121.section);
      expect(searchlog.search121.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00765_element_check_00741 **********\n\n");
    });

    test('00766_element_check_00742', () async {
      print("\n********** テスト実行：00766_element_check_00742 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search121.keyword;
      print(searchlog.search121.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search121.keyword = testData1s;
      print(searchlog.search121.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search121.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search121.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search121.keyword = testData2s;
      print(searchlog.search121.keyword);
      expect(searchlog.search121.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search121.keyword = defalut;
      print(searchlog.search121.keyword);
      expect(searchlog.search121.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00766_element_check_00742 **********\n\n");
    });

    test('00767_element_check_00743', () async {
      print("\n********** テスト実行：00767_element_check_00743 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search121.print_word;
      print(searchlog.search121.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search121.print_word = testData1s;
      print(searchlog.search121.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search121.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search121.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search121.print_word = testData2s;
      print(searchlog.search121.print_word);
      expect(searchlog.search121.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search121.print_word = defalut;
      print(searchlog.search121.print_word);
      expect(searchlog.search121.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00767_element_check_00743 **********\n\n");
    });

    test('00768_element_check_00744', () async {
      print("\n********** テスト実行：00768_element_check_00744 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search121.description;
      print(searchlog.search121.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search121.description = testData1s;
      print(searchlog.search121.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search121.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search121.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search121.description = testData2s;
      print(searchlog.search121.description);
      expect(searchlog.search121.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search121.description = defalut;
      print(searchlog.search121.description);
      expect(searchlog.search121.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search121.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00768_element_check_00744 **********\n\n");
    });

    test('00769_element_check_00745', () async {
      print("\n********** テスト実行：00769_element_check_00745 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search122.file_name;
      print(searchlog.search122.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search122.file_name = testData1s;
      print(searchlog.search122.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search122.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search122.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search122.file_name = testData2s;
      print(searchlog.search122.file_name);
      expect(searchlog.search122.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search122.file_name = defalut;
      print(searchlog.search122.file_name);
      expect(searchlog.search122.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00769_element_check_00745 **********\n\n");
    });

    test('00770_element_check_00746', () async {
      print("\n********** テスト実行：00770_element_check_00746 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search122.typ;
      print(searchlog.search122.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search122.typ = testData1;
      print(searchlog.search122.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search122.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search122.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search122.typ = testData2;
      print(searchlog.search122.typ);
      expect(searchlog.search122.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search122.typ = defalut;
      print(searchlog.search122.typ);
      expect(searchlog.search122.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00770_element_check_00746 **********\n\n");
    });

    test('00771_element_check_00747', () async {
      print("\n********** テスト実行：00771_element_check_00747 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search122.out_count;
      print(searchlog.search122.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search122.out_count = testData1;
      print(searchlog.search122.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search122.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search122.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search122.out_count = testData2;
      print(searchlog.search122.out_count);
      expect(searchlog.search122.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search122.out_count = defalut;
      print(searchlog.search122.out_count);
      expect(searchlog.search122.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00771_element_check_00747 **********\n\n");
    });

    test('00772_element_check_00748', () async {
      print("\n********** テスト実行：00772_element_check_00748 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search122.section;
      print(searchlog.search122.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search122.section = testData1s;
      print(searchlog.search122.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search122.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search122.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search122.section = testData2s;
      print(searchlog.search122.section);
      expect(searchlog.search122.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search122.section = defalut;
      print(searchlog.search122.section);
      expect(searchlog.search122.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00772_element_check_00748 **********\n\n");
    });

    test('00773_element_check_00749', () async {
      print("\n********** テスト実行：00773_element_check_00749 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search122.keyword;
      print(searchlog.search122.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search122.keyword = testData1s;
      print(searchlog.search122.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search122.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search122.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search122.keyword = testData2s;
      print(searchlog.search122.keyword);
      expect(searchlog.search122.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search122.keyword = defalut;
      print(searchlog.search122.keyword);
      expect(searchlog.search122.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00773_element_check_00749 **********\n\n");
    });

    test('00774_element_check_00750', () async {
      print("\n********** テスト実行：00774_element_check_00750 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search122.print_word;
      print(searchlog.search122.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search122.print_word = testData1s;
      print(searchlog.search122.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search122.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search122.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search122.print_word = testData2s;
      print(searchlog.search122.print_word);
      expect(searchlog.search122.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search122.print_word = defalut;
      print(searchlog.search122.print_word);
      expect(searchlog.search122.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00774_element_check_00750 **********\n\n");
    });

    test('00775_element_check_00751', () async {
      print("\n********** テスト実行：00775_element_check_00751 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search122.description;
      print(searchlog.search122.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search122.description = testData1s;
      print(searchlog.search122.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search122.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search122.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search122.description = testData2s;
      print(searchlog.search122.description);
      expect(searchlog.search122.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search122.description = defalut;
      print(searchlog.search122.description);
      expect(searchlog.search122.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search122.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00775_element_check_00751 **********\n\n");
    });

    test('00776_element_check_00752', () async {
      print("\n********** テスト実行：00776_element_check_00752 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search123.file_name;
      print(searchlog.search123.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search123.file_name = testData1s;
      print(searchlog.search123.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search123.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search123.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search123.file_name = testData2s;
      print(searchlog.search123.file_name);
      expect(searchlog.search123.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search123.file_name = defalut;
      print(searchlog.search123.file_name);
      expect(searchlog.search123.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00776_element_check_00752 **********\n\n");
    });

    test('00777_element_check_00753', () async {
      print("\n********** テスト実行：00777_element_check_00753 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search123.typ;
      print(searchlog.search123.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search123.typ = testData1;
      print(searchlog.search123.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search123.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search123.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search123.typ = testData2;
      print(searchlog.search123.typ);
      expect(searchlog.search123.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search123.typ = defalut;
      print(searchlog.search123.typ);
      expect(searchlog.search123.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00777_element_check_00753 **********\n\n");
    });

    test('00778_element_check_00754', () async {
      print("\n********** テスト実行：00778_element_check_00754 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search123.out_count;
      print(searchlog.search123.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search123.out_count = testData1;
      print(searchlog.search123.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search123.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search123.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search123.out_count = testData2;
      print(searchlog.search123.out_count);
      expect(searchlog.search123.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search123.out_count = defalut;
      print(searchlog.search123.out_count);
      expect(searchlog.search123.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00778_element_check_00754 **********\n\n");
    });

    test('00779_element_check_00755', () async {
      print("\n********** テスト実行：00779_element_check_00755 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search123.section;
      print(searchlog.search123.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search123.section = testData1s;
      print(searchlog.search123.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search123.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search123.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search123.section = testData2s;
      print(searchlog.search123.section);
      expect(searchlog.search123.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search123.section = defalut;
      print(searchlog.search123.section);
      expect(searchlog.search123.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00779_element_check_00755 **********\n\n");
    });

    test('00780_element_check_00756', () async {
      print("\n********** テスト実行：00780_element_check_00756 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search123.keyword;
      print(searchlog.search123.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search123.keyword = testData1s;
      print(searchlog.search123.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search123.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search123.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search123.keyword = testData2s;
      print(searchlog.search123.keyword);
      expect(searchlog.search123.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search123.keyword = defalut;
      print(searchlog.search123.keyword);
      expect(searchlog.search123.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00780_element_check_00756 **********\n\n");
    });

    test('00781_element_check_00757', () async {
      print("\n********** テスト実行：00781_element_check_00757 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search123.print_word;
      print(searchlog.search123.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search123.print_word = testData1s;
      print(searchlog.search123.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search123.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search123.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search123.print_word = testData2s;
      print(searchlog.search123.print_word);
      expect(searchlog.search123.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search123.print_word = defalut;
      print(searchlog.search123.print_word);
      expect(searchlog.search123.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00781_element_check_00757 **********\n\n");
    });

    test('00782_element_check_00758', () async {
      print("\n********** テスト実行：00782_element_check_00758 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search123.description;
      print(searchlog.search123.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search123.description = testData1s;
      print(searchlog.search123.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search123.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search123.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search123.description = testData2s;
      print(searchlog.search123.description);
      expect(searchlog.search123.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search123.description = defalut;
      print(searchlog.search123.description);
      expect(searchlog.search123.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search123.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00782_element_check_00758 **********\n\n");
    });

    test('00783_element_check_00759', () async {
      print("\n********** テスト実行：00783_element_check_00759 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search124.file_name;
      print(searchlog.search124.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search124.file_name = testData1s;
      print(searchlog.search124.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search124.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search124.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search124.file_name = testData2s;
      print(searchlog.search124.file_name);
      expect(searchlog.search124.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search124.file_name = defalut;
      print(searchlog.search124.file_name);
      expect(searchlog.search124.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00783_element_check_00759 **********\n\n");
    });

    test('00784_element_check_00760', () async {
      print("\n********** テスト実行：00784_element_check_00760 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search124.typ;
      print(searchlog.search124.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search124.typ = testData1;
      print(searchlog.search124.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search124.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search124.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search124.typ = testData2;
      print(searchlog.search124.typ);
      expect(searchlog.search124.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search124.typ = defalut;
      print(searchlog.search124.typ);
      expect(searchlog.search124.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00784_element_check_00760 **********\n\n");
    });

    test('00785_element_check_00761', () async {
      print("\n********** テスト実行：00785_element_check_00761 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search124.out_count;
      print(searchlog.search124.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search124.out_count = testData1;
      print(searchlog.search124.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search124.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search124.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search124.out_count = testData2;
      print(searchlog.search124.out_count);
      expect(searchlog.search124.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search124.out_count = defalut;
      print(searchlog.search124.out_count);
      expect(searchlog.search124.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00785_element_check_00761 **********\n\n");
    });

    test('00786_element_check_00762', () async {
      print("\n********** テスト実行：00786_element_check_00762 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search124.section;
      print(searchlog.search124.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search124.section = testData1s;
      print(searchlog.search124.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search124.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search124.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search124.section = testData2s;
      print(searchlog.search124.section);
      expect(searchlog.search124.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search124.section = defalut;
      print(searchlog.search124.section);
      expect(searchlog.search124.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00786_element_check_00762 **********\n\n");
    });

    test('00787_element_check_00763', () async {
      print("\n********** テスト実行：00787_element_check_00763 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search124.keyword;
      print(searchlog.search124.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search124.keyword = testData1s;
      print(searchlog.search124.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search124.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search124.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search124.keyword = testData2s;
      print(searchlog.search124.keyword);
      expect(searchlog.search124.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search124.keyword = defalut;
      print(searchlog.search124.keyword);
      expect(searchlog.search124.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00787_element_check_00763 **********\n\n");
    });

    test('00788_element_check_00764', () async {
      print("\n********** テスト実行：00788_element_check_00764 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search124.print_word;
      print(searchlog.search124.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search124.print_word = testData1s;
      print(searchlog.search124.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search124.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search124.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search124.print_word = testData2s;
      print(searchlog.search124.print_word);
      expect(searchlog.search124.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search124.print_word = defalut;
      print(searchlog.search124.print_word);
      expect(searchlog.search124.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00788_element_check_00764 **********\n\n");
    });

    test('00789_element_check_00765', () async {
      print("\n********** テスト実行：00789_element_check_00765 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search124.description;
      print(searchlog.search124.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search124.description = testData1s;
      print(searchlog.search124.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search124.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search124.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search124.description = testData2s;
      print(searchlog.search124.description);
      expect(searchlog.search124.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search124.description = defalut;
      print(searchlog.search124.description);
      expect(searchlog.search124.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search124.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00789_element_check_00765 **********\n\n");
    });

    test('00790_element_check_00766', () async {
      print("\n********** テスト実行：00790_element_check_00766 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search125.file_name;
      print(searchlog.search125.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search125.file_name = testData1s;
      print(searchlog.search125.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search125.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search125.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search125.file_name = testData2s;
      print(searchlog.search125.file_name);
      expect(searchlog.search125.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search125.file_name = defalut;
      print(searchlog.search125.file_name);
      expect(searchlog.search125.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00790_element_check_00766 **********\n\n");
    });

    test('00791_element_check_00767', () async {
      print("\n********** テスト実行：00791_element_check_00767 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search125.typ;
      print(searchlog.search125.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search125.typ = testData1;
      print(searchlog.search125.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search125.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search125.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search125.typ = testData2;
      print(searchlog.search125.typ);
      expect(searchlog.search125.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search125.typ = defalut;
      print(searchlog.search125.typ);
      expect(searchlog.search125.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00791_element_check_00767 **********\n\n");
    });

    test('00792_element_check_00768', () async {
      print("\n********** テスト実行：00792_element_check_00768 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search125.out_count;
      print(searchlog.search125.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search125.out_count = testData1;
      print(searchlog.search125.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search125.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search125.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search125.out_count = testData2;
      print(searchlog.search125.out_count);
      expect(searchlog.search125.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search125.out_count = defalut;
      print(searchlog.search125.out_count);
      expect(searchlog.search125.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00792_element_check_00768 **********\n\n");
    });

    test('00793_element_check_00769', () async {
      print("\n********** テスト実行：00793_element_check_00769 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search125.section;
      print(searchlog.search125.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search125.section = testData1s;
      print(searchlog.search125.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search125.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search125.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search125.section = testData2s;
      print(searchlog.search125.section);
      expect(searchlog.search125.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search125.section = defalut;
      print(searchlog.search125.section);
      expect(searchlog.search125.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00793_element_check_00769 **********\n\n");
    });

    test('00794_element_check_00770', () async {
      print("\n********** テスト実行：00794_element_check_00770 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search125.keyword;
      print(searchlog.search125.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search125.keyword = testData1s;
      print(searchlog.search125.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search125.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search125.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search125.keyword = testData2s;
      print(searchlog.search125.keyword);
      expect(searchlog.search125.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search125.keyword = defalut;
      print(searchlog.search125.keyword);
      expect(searchlog.search125.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00794_element_check_00770 **********\n\n");
    });

    test('00795_element_check_00771', () async {
      print("\n********** テスト実行：00795_element_check_00771 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search125.print_word;
      print(searchlog.search125.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search125.print_word = testData1s;
      print(searchlog.search125.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search125.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search125.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search125.print_word = testData2s;
      print(searchlog.search125.print_word);
      expect(searchlog.search125.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search125.print_word = defalut;
      print(searchlog.search125.print_word);
      expect(searchlog.search125.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00795_element_check_00771 **********\n\n");
    });

    test('00796_element_check_00772', () async {
      print("\n********** テスト実行：00796_element_check_00772 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search125.description;
      print(searchlog.search125.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search125.description = testData1s;
      print(searchlog.search125.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search125.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search125.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search125.description = testData2s;
      print(searchlog.search125.description);
      expect(searchlog.search125.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search125.description = defalut;
      print(searchlog.search125.description);
      expect(searchlog.search125.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search125.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00796_element_check_00772 **********\n\n");
    });

    test('00797_element_check_00773', () async {
      print("\n********** テスト実行：00797_element_check_00773 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search126.file_name;
      print(searchlog.search126.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search126.file_name = testData1s;
      print(searchlog.search126.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search126.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search126.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search126.file_name = testData2s;
      print(searchlog.search126.file_name);
      expect(searchlog.search126.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search126.file_name = defalut;
      print(searchlog.search126.file_name);
      expect(searchlog.search126.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00797_element_check_00773 **********\n\n");
    });

    test('00798_element_check_00774', () async {
      print("\n********** テスト実行：00798_element_check_00774 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search126.typ;
      print(searchlog.search126.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search126.typ = testData1;
      print(searchlog.search126.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search126.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search126.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search126.typ = testData2;
      print(searchlog.search126.typ);
      expect(searchlog.search126.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search126.typ = defalut;
      print(searchlog.search126.typ);
      expect(searchlog.search126.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00798_element_check_00774 **********\n\n");
    });

    test('00799_element_check_00775', () async {
      print("\n********** テスト実行：00799_element_check_00775 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search126.out_count;
      print(searchlog.search126.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search126.out_count = testData1;
      print(searchlog.search126.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search126.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search126.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search126.out_count = testData2;
      print(searchlog.search126.out_count);
      expect(searchlog.search126.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search126.out_count = defalut;
      print(searchlog.search126.out_count);
      expect(searchlog.search126.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00799_element_check_00775 **********\n\n");
    });

    test('00800_element_check_00776', () async {
      print("\n********** テスト実行：00800_element_check_00776 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search126.section;
      print(searchlog.search126.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search126.section = testData1s;
      print(searchlog.search126.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search126.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search126.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search126.section = testData2s;
      print(searchlog.search126.section);
      expect(searchlog.search126.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search126.section = defalut;
      print(searchlog.search126.section);
      expect(searchlog.search126.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00800_element_check_00776 **********\n\n");
    });

    test('00801_element_check_00777', () async {
      print("\n********** テスト実行：00801_element_check_00777 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search126.keyword;
      print(searchlog.search126.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search126.keyword = testData1s;
      print(searchlog.search126.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search126.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search126.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search126.keyword = testData2s;
      print(searchlog.search126.keyword);
      expect(searchlog.search126.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search126.keyword = defalut;
      print(searchlog.search126.keyword);
      expect(searchlog.search126.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00801_element_check_00777 **********\n\n");
    });

    test('00802_element_check_00778', () async {
      print("\n********** テスト実行：00802_element_check_00778 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search126.print_word;
      print(searchlog.search126.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search126.print_word = testData1s;
      print(searchlog.search126.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search126.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search126.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search126.print_word = testData2s;
      print(searchlog.search126.print_word);
      expect(searchlog.search126.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search126.print_word = defalut;
      print(searchlog.search126.print_word);
      expect(searchlog.search126.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00802_element_check_00778 **********\n\n");
    });

    test('00803_element_check_00779', () async {
      print("\n********** テスト実行：00803_element_check_00779 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search126.description;
      print(searchlog.search126.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search126.description = testData1s;
      print(searchlog.search126.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search126.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search126.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search126.description = testData2s;
      print(searchlog.search126.description);
      expect(searchlog.search126.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search126.description = defalut;
      print(searchlog.search126.description);
      expect(searchlog.search126.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search126.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00803_element_check_00779 **********\n\n");
    });

    test('00804_element_check_00780', () async {
      print("\n********** テスト実行：00804_element_check_00780 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search127.file_name;
      print(searchlog.search127.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search127.file_name = testData1s;
      print(searchlog.search127.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search127.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search127.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search127.file_name = testData2s;
      print(searchlog.search127.file_name);
      expect(searchlog.search127.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search127.file_name = defalut;
      print(searchlog.search127.file_name);
      expect(searchlog.search127.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00804_element_check_00780 **********\n\n");
    });

    test('00805_element_check_00781', () async {
      print("\n********** テスト実行：00805_element_check_00781 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search127.typ;
      print(searchlog.search127.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search127.typ = testData1;
      print(searchlog.search127.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search127.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search127.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search127.typ = testData2;
      print(searchlog.search127.typ);
      expect(searchlog.search127.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search127.typ = defalut;
      print(searchlog.search127.typ);
      expect(searchlog.search127.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00805_element_check_00781 **********\n\n");
    });

    test('00806_element_check_00782', () async {
      print("\n********** テスト実行：00806_element_check_00782 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search127.out_count;
      print(searchlog.search127.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search127.out_count = testData1;
      print(searchlog.search127.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search127.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search127.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search127.out_count = testData2;
      print(searchlog.search127.out_count);
      expect(searchlog.search127.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search127.out_count = defalut;
      print(searchlog.search127.out_count);
      expect(searchlog.search127.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00806_element_check_00782 **********\n\n");
    });

    test('00807_element_check_00783', () async {
      print("\n********** テスト実行：00807_element_check_00783 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search127.section;
      print(searchlog.search127.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search127.section = testData1s;
      print(searchlog.search127.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search127.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search127.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search127.section = testData2s;
      print(searchlog.search127.section);
      expect(searchlog.search127.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search127.section = defalut;
      print(searchlog.search127.section);
      expect(searchlog.search127.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00807_element_check_00783 **********\n\n");
    });

    test('00808_element_check_00784', () async {
      print("\n********** テスト実行：00808_element_check_00784 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search127.keyword;
      print(searchlog.search127.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search127.keyword = testData1s;
      print(searchlog.search127.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search127.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search127.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search127.keyword = testData2s;
      print(searchlog.search127.keyword);
      expect(searchlog.search127.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search127.keyword = defalut;
      print(searchlog.search127.keyword);
      expect(searchlog.search127.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00808_element_check_00784 **********\n\n");
    });

    test('00809_element_check_00785', () async {
      print("\n********** テスト実行：00809_element_check_00785 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search127.print_word;
      print(searchlog.search127.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search127.print_word = testData1s;
      print(searchlog.search127.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search127.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search127.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search127.print_word = testData2s;
      print(searchlog.search127.print_word);
      expect(searchlog.search127.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search127.print_word = defalut;
      print(searchlog.search127.print_word);
      expect(searchlog.search127.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00809_element_check_00785 **********\n\n");
    });

    test('00810_element_check_00786', () async {
      print("\n********** テスト実行：00810_element_check_00786 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search127.description;
      print(searchlog.search127.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search127.description = testData1s;
      print(searchlog.search127.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search127.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search127.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search127.description = testData2s;
      print(searchlog.search127.description);
      expect(searchlog.search127.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search127.description = defalut;
      print(searchlog.search127.description);
      expect(searchlog.search127.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search127.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00810_element_check_00786 **********\n\n");
    });

    test('00811_element_check_00787', () async {
      print("\n********** テスト実行：00811_element_check_00787 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search128.file_name;
      print(searchlog.search128.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search128.file_name = testData1s;
      print(searchlog.search128.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search128.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search128.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search128.file_name = testData2s;
      print(searchlog.search128.file_name);
      expect(searchlog.search128.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search128.file_name = defalut;
      print(searchlog.search128.file_name);
      expect(searchlog.search128.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00811_element_check_00787 **********\n\n");
    });

    test('00812_element_check_00788', () async {
      print("\n********** テスト実行：00812_element_check_00788 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search128.typ;
      print(searchlog.search128.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search128.typ = testData1;
      print(searchlog.search128.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search128.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search128.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search128.typ = testData2;
      print(searchlog.search128.typ);
      expect(searchlog.search128.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search128.typ = defalut;
      print(searchlog.search128.typ);
      expect(searchlog.search128.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00812_element_check_00788 **********\n\n");
    });

    test('00813_element_check_00789', () async {
      print("\n********** テスト実行：00813_element_check_00789 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search128.out_count;
      print(searchlog.search128.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search128.out_count = testData1;
      print(searchlog.search128.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search128.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search128.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search128.out_count = testData2;
      print(searchlog.search128.out_count);
      expect(searchlog.search128.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search128.out_count = defalut;
      print(searchlog.search128.out_count);
      expect(searchlog.search128.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00813_element_check_00789 **********\n\n");
    });

    test('00814_element_check_00790', () async {
      print("\n********** テスト実行：00814_element_check_00790 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search128.section;
      print(searchlog.search128.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search128.section = testData1s;
      print(searchlog.search128.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search128.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search128.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search128.section = testData2s;
      print(searchlog.search128.section);
      expect(searchlog.search128.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search128.section = defalut;
      print(searchlog.search128.section);
      expect(searchlog.search128.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00814_element_check_00790 **********\n\n");
    });

    test('00815_element_check_00791', () async {
      print("\n********** テスト実行：00815_element_check_00791 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search128.keyword;
      print(searchlog.search128.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search128.keyword = testData1s;
      print(searchlog.search128.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search128.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search128.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search128.keyword = testData2s;
      print(searchlog.search128.keyword);
      expect(searchlog.search128.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search128.keyword = defalut;
      print(searchlog.search128.keyword);
      expect(searchlog.search128.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00815_element_check_00791 **********\n\n");
    });

    test('00816_element_check_00792', () async {
      print("\n********** テスト実行：00816_element_check_00792 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search128.print_word;
      print(searchlog.search128.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search128.print_word = testData1s;
      print(searchlog.search128.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search128.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search128.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search128.print_word = testData2s;
      print(searchlog.search128.print_word);
      expect(searchlog.search128.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search128.print_word = defalut;
      print(searchlog.search128.print_word);
      expect(searchlog.search128.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00816_element_check_00792 **********\n\n");
    });

    test('00817_element_check_00793', () async {
      print("\n********** テスト実行：00817_element_check_00793 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search128.description;
      print(searchlog.search128.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search128.description = testData1s;
      print(searchlog.search128.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search128.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search128.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search128.description = testData2s;
      print(searchlog.search128.description);
      expect(searchlog.search128.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search128.description = defalut;
      print(searchlog.search128.description);
      expect(searchlog.search128.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search128.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00817_element_check_00793 **********\n\n");
    });

    test('00818_element_check_00794', () async {
      print("\n********** テスト実行：00818_element_check_00794 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search129.file_name;
      print(searchlog.search129.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search129.file_name = testData1s;
      print(searchlog.search129.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search129.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search129.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search129.file_name = testData2s;
      print(searchlog.search129.file_name);
      expect(searchlog.search129.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search129.file_name = defalut;
      print(searchlog.search129.file_name);
      expect(searchlog.search129.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00818_element_check_00794 **********\n\n");
    });

    test('00819_element_check_00795', () async {
      print("\n********** テスト実行：00819_element_check_00795 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search129.typ;
      print(searchlog.search129.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search129.typ = testData1;
      print(searchlog.search129.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search129.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search129.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search129.typ = testData2;
      print(searchlog.search129.typ);
      expect(searchlog.search129.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search129.typ = defalut;
      print(searchlog.search129.typ);
      expect(searchlog.search129.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00819_element_check_00795 **********\n\n");
    });

    test('00820_element_check_00796', () async {
      print("\n********** テスト実行：00820_element_check_00796 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search129.out_count;
      print(searchlog.search129.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search129.out_count = testData1;
      print(searchlog.search129.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search129.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search129.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search129.out_count = testData2;
      print(searchlog.search129.out_count);
      expect(searchlog.search129.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search129.out_count = defalut;
      print(searchlog.search129.out_count);
      expect(searchlog.search129.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00820_element_check_00796 **********\n\n");
    });

    test('00821_element_check_00797', () async {
      print("\n********** テスト実行：00821_element_check_00797 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search129.section;
      print(searchlog.search129.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search129.section = testData1s;
      print(searchlog.search129.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search129.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search129.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search129.section = testData2s;
      print(searchlog.search129.section);
      expect(searchlog.search129.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search129.section = defalut;
      print(searchlog.search129.section);
      expect(searchlog.search129.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00821_element_check_00797 **********\n\n");
    });

    test('00822_element_check_00798', () async {
      print("\n********** テスト実行：00822_element_check_00798 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search129.keyword;
      print(searchlog.search129.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search129.keyword = testData1s;
      print(searchlog.search129.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search129.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search129.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search129.keyword = testData2s;
      print(searchlog.search129.keyword);
      expect(searchlog.search129.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search129.keyword = defalut;
      print(searchlog.search129.keyword);
      expect(searchlog.search129.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00822_element_check_00798 **********\n\n");
    });

    test('00823_element_check_00799', () async {
      print("\n********** テスト実行：00823_element_check_00799 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search129.print_word;
      print(searchlog.search129.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search129.print_word = testData1s;
      print(searchlog.search129.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search129.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search129.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search129.print_word = testData2s;
      print(searchlog.search129.print_word);
      expect(searchlog.search129.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search129.print_word = defalut;
      print(searchlog.search129.print_word);
      expect(searchlog.search129.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00823_element_check_00799 **********\n\n");
    });

    test('00824_element_check_00800', () async {
      print("\n********** テスト実行：00824_element_check_00800 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search129.description;
      print(searchlog.search129.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search129.description = testData1s;
      print(searchlog.search129.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search129.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search129.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search129.description = testData2s;
      print(searchlog.search129.description);
      expect(searchlog.search129.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search129.description = defalut;
      print(searchlog.search129.description);
      expect(searchlog.search129.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search129.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00824_element_check_00800 **********\n\n");
    });

    test('00825_element_check_00801', () async {
      print("\n********** テスト実行：00825_element_check_00801 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search130.file_name;
      print(searchlog.search130.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search130.file_name = testData1s;
      print(searchlog.search130.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search130.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search130.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search130.file_name = testData2s;
      print(searchlog.search130.file_name);
      expect(searchlog.search130.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search130.file_name = defalut;
      print(searchlog.search130.file_name);
      expect(searchlog.search130.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00825_element_check_00801 **********\n\n");
    });

    test('00826_element_check_00802', () async {
      print("\n********** テスト実行：00826_element_check_00802 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search130.typ;
      print(searchlog.search130.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search130.typ = testData1;
      print(searchlog.search130.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search130.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search130.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search130.typ = testData2;
      print(searchlog.search130.typ);
      expect(searchlog.search130.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search130.typ = defalut;
      print(searchlog.search130.typ);
      expect(searchlog.search130.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00826_element_check_00802 **********\n\n");
    });

    test('00827_element_check_00803', () async {
      print("\n********** テスト実行：00827_element_check_00803 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search130.out_count;
      print(searchlog.search130.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search130.out_count = testData1;
      print(searchlog.search130.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search130.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search130.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search130.out_count = testData2;
      print(searchlog.search130.out_count);
      expect(searchlog.search130.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search130.out_count = defalut;
      print(searchlog.search130.out_count);
      expect(searchlog.search130.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00827_element_check_00803 **********\n\n");
    });

    test('00828_element_check_00804', () async {
      print("\n********** テスト実行：00828_element_check_00804 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search130.section;
      print(searchlog.search130.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search130.section = testData1s;
      print(searchlog.search130.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search130.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search130.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search130.section = testData2s;
      print(searchlog.search130.section);
      expect(searchlog.search130.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search130.section = defalut;
      print(searchlog.search130.section);
      expect(searchlog.search130.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00828_element_check_00804 **********\n\n");
    });

    test('00829_element_check_00805', () async {
      print("\n********** テスト実行：00829_element_check_00805 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search130.keyword;
      print(searchlog.search130.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search130.keyword = testData1s;
      print(searchlog.search130.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search130.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search130.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search130.keyword = testData2s;
      print(searchlog.search130.keyword);
      expect(searchlog.search130.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search130.keyword = defalut;
      print(searchlog.search130.keyword);
      expect(searchlog.search130.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00829_element_check_00805 **********\n\n");
    });

    test('00830_element_check_00806', () async {
      print("\n********** テスト実行：00830_element_check_00806 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search130.print_word;
      print(searchlog.search130.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search130.print_word = testData1s;
      print(searchlog.search130.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search130.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search130.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search130.print_word = testData2s;
      print(searchlog.search130.print_word);
      expect(searchlog.search130.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search130.print_word = defalut;
      print(searchlog.search130.print_word);
      expect(searchlog.search130.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00830_element_check_00806 **********\n\n");
    });

    test('00831_element_check_00807', () async {
      print("\n********** テスト実行：00831_element_check_00807 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search130.description;
      print(searchlog.search130.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search130.description = testData1s;
      print(searchlog.search130.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search130.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search130.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search130.description = testData2s;
      print(searchlog.search130.description);
      expect(searchlog.search130.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search130.description = defalut;
      print(searchlog.search130.description);
      expect(searchlog.search130.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search130.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00831_element_check_00807 **********\n\n");
    });

    test('00832_element_check_00808', () async {
      print("\n********** テスト実行：00832_element_check_00808 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search131.file_name;
      print(searchlog.search131.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search131.file_name = testData1s;
      print(searchlog.search131.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search131.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search131.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search131.file_name = testData2s;
      print(searchlog.search131.file_name);
      expect(searchlog.search131.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search131.file_name = defalut;
      print(searchlog.search131.file_name);
      expect(searchlog.search131.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00832_element_check_00808 **********\n\n");
    });

    test('00833_element_check_00809', () async {
      print("\n********** テスト実行：00833_element_check_00809 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search131.typ;
      print(searchlog.search131.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search131.typ = testData1;
      print(searchlog.search131.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search131.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search131.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search131.typ = testData2;
      print(searchlog.search131.typ);
      expect(searchlog.search131.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search131.typ = defalut;
      print(searchlog.search131.typ);
      expect(searchlog.search131.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00833_element_check_00809 **********\n\n");
    });

    test('00834_element_check_00810', () async {
      print("\n********** テスト実行：00834_element_check_00810 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search131.out_count;
      print(searchlog.search131.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search131.out_count = testData1;
      print(searchlog.search131.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search131.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search131.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search131.out_count = testData2;
      print(searchlog.search131.out_count);
      expect(searchlog.search131.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search131.out_count = defalut;
      print(searchlog.search131.out_count);
      expect(searchlog.search131.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00834_element_check_00810 **********\n\n");
    });

    test('00835_element_check_00811', () async {
      print("\n********** テスト実行：00835_element_check_00811 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search131.section;
      print(searchlog.search131.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search131.section = testData1s;
      print(searchlog.search131.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search131.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search131.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search131.section = testData2s;
      print(searchlog.search131.section);
      expect(searchlog.search131.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search131.section = defalut;
      print(searchlog.search131.section);
      expect(searchlog.search131.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00835_element_check_00811 **********\n\n");
    });

    test('00836_element_check_00812', () async {
      print("\n********** テスト実行：00836_element_check_00812 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search131.keyword;
      print(searchlog.search131.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search131.keyword = testData1s;
      print(searchlog.search131.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search131.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search131.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search131.keyword = testData2s;
      print(searchlog.search131.keyword);
      expect(searchlog.search131.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search131.keyword = defalut;
      print(searchlog.search131.keyword);
      expect(searchlog.search131.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00836_element_check_00812 **********\n\n");
    });

    test('00837_element_check_00813', () async {
      print("\n********** テスト実行：00837_element_check_00813 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search131.print_word;
      print(searchlog.search131.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search131.print_word = testData1s;
      print(searchlog.search131.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search131.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search131.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search131.print_word = testData2s;
      print(searchlog.search131.print_word);
      expect(searchlog.search131.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search131.print_word = defalut;
      print(searchlog.search131.print_word);
      expect(searchlog.search131.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00837_element_check_00813 **********\n\n");
    });

    test('00838_element_check_00814', () async {
      print("\n********** テスト実行：00838_element_check_00814 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search131.description;
      print(searchlog.search131.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search131.description = testData1s;
      print(searchlog.search131.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search131.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search131.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search131.description = testData2s;
      print(searchlog.search131.description);
      expect(searchlog.search131.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search131.description = defalut;
      print(searchlog.search131.description);
      expect(searchlog.search131.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search131.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00838_element_check_00814 **********\n\n");
    });

    test('00839_element_check_00815', () async {
      print("\n********** テスト実行：00839_element_check_00815 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search132.file_name;
      print(searchlog.search132.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search132.file_name = testData1s;
      print(searchlog.search132.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search132.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search132.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search132.file_name = testData2s;
      print(searchlog.search132.file_name);
      expect(searchlog.search132.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search132.file_name = defalut;
      print(searchlog.search132.file_name);
      expect(searchlog.search132.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00839_element_check_00815 **********\n\n");
    });

    test('00840_element_check_00816', () async {
      print("\n********** テスト実行：00840_element_check_00816 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search132.typ;
      print(searchlog.search132.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search132.typ = testData1;
      print(searchlog.search132.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search132.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search132.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search132.typ = testData2;
      print(searchlog.search132.typ);
      expect(searchlog.search132.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search132.typ = defalut;
      print(searchlog.search132.typ);
      expect(searchlog.search132.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00840_element_check_00816 **********\n\n");
    });

    test('00841_element_check_00817', () async {
      print("\n********** テスト実行：00841_element_check_00817 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search132.out_count;
      print(searchlog.search132.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search132.out_count = testData1;
      print(searchlog.search132.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search132.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search132.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search132.out_count = testData2;
      print(searchlog.search132.out_count);
      expect(searchlog.search132.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search132.out_count = defalut;
      print(searchlog.search132.out_count);
      expect(searchlog.search132.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00841_element_check_00817 **********\n\n");
    });

    test('00842_element_check_00818', () async {
      print("\n********** テスト実行：00842_element_check_00818 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search132.section;
      print(searchlog.search132.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search132.section = testData1s;
      print(searchlog.search132.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search132.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search132.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search132.section = testData2s;
      print(searchlog.search132.section);
      expect(searchlog.search132.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search132.section = defalut;
      print(searchlog.search132.section);
      expect(searchlog.search132.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00842_element_check_00818 **********\n\n");
    });

    test('00843_element_check_00819', () async {
      print("\n********** テスト実行：00843_element_check_00819 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search132.keyword;
      print(searchlog.search132.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search132.keyword = testData1s;
      print(searchlog.search132.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search132.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search132.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search132.keyword = testData2s;
      print(searchlog.search132.keyword);
      expect(searchlog.search132.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search132.keyword = defalut;
      print(searchlog.search132.keyword);
      expect(searchlog.search132.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00843_element_check_00819 **********\n\n");
    });

    test('00844_element_check_00820', () async {
      print("\n********** テスト実行：00844_element_check_00820 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search132.print_word;
      print(searchlog.search132.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search132.print_word = testData1s;
      print(searchlog.search132.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search132.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search132.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search132.print_word = testData2s;
      print(searchlog.search132.print_word);
      expect(searchlog.search132.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search132.print_word = defalut;
      print(searchlog.search132.print_word);
      expect(searchlog.search132.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00844_element_check_00820 **********\n\n");
    });

    test('00845_element_check_00821', () async {
      print("\n********** テスト実行：00845_element_check_00821 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search132.description;
      print(searchlog.search132.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search132.description = testData1s;
      print(searchlog.search132.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search132.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search132.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search132.description = testData2s;
      print(searchlog.search132.description);
      expect(searchlog.search132.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search132.description = defalut;
      print(searchlog.search132.description);
      expect(searchlog.search132.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search132.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00845_element_check_00821 **********\n\n");
    });

    test('00846_element_check_00822', () async {
      print("\n********** テスト実行：00846_element_check_00822 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search133.file_name;
      print(searchlog.search133.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search133.file_name = testData1s;
      print(searchlog.search133.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search133.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search133.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search133.file_name = testData2s;
      print(searchlog.search133.file_name);
      expect(searchlog.search133.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search133.file_name = defalut;
      print(searchlog.search133.file_name);
      expect(searchlog.search133.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00846_element_check_00822 **********\n\n");
    });

    test('00847_element_check_00823', () async {
      print("\n********** テスト実行：00847_element_check_00823 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search133.typ;
      print(searchlog.search133.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search133.typ = testData1;
      print(searchlog.search133.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search133.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search133.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search133.typ = testData2;
      print(searchlog.search133.typ);
      expect(searchlog.search133.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search133.typ = defalut;
      print(searchlog.search133.typ);
      expect(searchlog.search133.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00847_element_check_00823 **********\n\n");
    });

    test('00848_element_check_00824', () async {
      print("\n********** テスト実行：00848_element_check_00824 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search133.out_count;
      print(searchlog.search133.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search133.out_count = testData1;
      print(searchlog.search133.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search133.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search133.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search133.out_count = testData2;
      print(searchlog.search133.out_count);
      expect(searchlog.search133.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search133.out_count = defalut;
      print(searchlog.search133.out_count);
      expect(searchlog.search133.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00848_element_check_00824 **********\n\n");
    });

    test('00849_element_check_00825', () async {
      print("\n********** テスト実行：00849_element_check_00825 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search133.section;
      print(searchlog.search133.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search133.section = testData1s;
      print(searchlog.search133.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search133.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search133.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search133.section = testData2s;
      print(searchlog.search133.section);
      expect(searchlog.search133.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search133.section = defalut;
      print(searchlog.search133.section);
      expect(searchlog.search133.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00849_element_check_00825 **********\n\n");
    });

    test('00850_element_check_00826', () async {
      print("\n********** テスト実行：00850_element_check_00826 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search133.keyword;
      print(searchlog.search133.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search133.keyword = testData1s;
      print(searchlog.search133.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search133.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search133.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search133.keyword = testData2s;
      print(searchlog.search133.keyword);
      expect(searchlog.search133.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search133.keyword = defalut;
      print(searchlog.search133.keyword);
      expect(searchlog.search133.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00850_element_check_00826 **********\n\n");
    });

    test('00851_element_check_00827', () async {
      print("\n********** テスト実行：00851_element_check_00827 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search133.print_word;
      print(searchlog.search133.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search133.print_word = testData1s;
      print(searchlog.search133.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search133.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search133.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search133.print_word = testData2s;
      print(searchlog.search133.print_word);
      expect(searchlog.search133.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search133.print_word = defalut;
      print(searchlog.search133.print_word);
      expect(searchlog.search133.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00851_element_check_00827 **********\n\n");
    });

    test('00852_element_check_00828', () async {
      print("\n********** テスト実行：00852_element_check_00828 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search133.description;
      print(searchlog.search133.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search133.description = testData1s;
      print(searchlog.search133.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search133.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search133.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search133.description = testData2s;
      print(searchlog.search133.description);
      expect(searchlog.search133.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search133.description = defalut;
      print(searchlog.search133.description);
      expect(searchlog.search133.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search133.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00852_element_check_00828 **********\n\n");
    });

    test('00853_element_check_00829', () async {
      print("\n********** テスト実行：00853_element_check_00829 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search134.file_name;
      print(searchlog.search134.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search134.file_name = testData1s;
      print(searchlog.search134.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search134.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search134.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search134.file_name = testData2s;
      print(searchlog.search134.file_name);
      expect(searchlog.search134.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search134.file_name = defalut;
      print(searchlog.search134.file_name);
      expect(searchlog.search134.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00853_element_check_00829 **********\n\n");
    });

    test('00854_element_check_00830', () async {
      print("\n********** テスト実行：00854_element_check_00830 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search134.typ;
      print(searchlog.search134.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search134.typ = testData1;
      print(searchlog.search134.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search134.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search134.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search134.typ = testData2;
      print(searchlog.search134.typ);
      expect(searchlog.search134.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search134.typ = defalut;
      print(searchlog.search134.typ);
      expect(searchlog.search134.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00854_element_check_00830 **********\n\n");
    });

    test('00855_element_check_00831', () async {
      print("\n********** テスト実行：00855_element_check_00831 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search134.out_count;
      print(searchlog.search134.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search134.out_count = testData1;
      print(searchlog.search134.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search134.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search134.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search134.out_count = testData2;
      print(searchlog.search134.out_count);
      expect(searchlog.search134.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search134.out_count = defalut;
      print(searchlog.search134.out_count);
      expect(searchlog.search134.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00855_element_check_00831 **********\n\n");
    });

    test('00856_element_check_00832', () async {
      print("\n********** テスト実行：00856_element_check_00832 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search134.section;
      print(searchlog.search134.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search134.section = testData1s;
      print(searchlog.search134.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search134.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search134.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search134.section = testData2s;
      print(searchlog.search134.section);
      expect(searchlog.search134.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search134.section = defalut;
      print(searchlog.search134.section);
      expect(searchlog.search134.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00856_element_check_00832 **********\n\n");
    });

    test('00857_element_check_00833', () async {
      print("\n********** テスト実行：00857_element_check_00833 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search134.keyword;
      print(searchlog.search134.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search134.keyword = testData1s;
      print(searchlog.search134.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search134.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search134.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search134.keyword = testData2s;
      print(searchlog.search134.keyword);
      expect(searchlog.search134.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search134.keyword = defalut;
      print(searchlog.search134.keyword);
      expect(searchlog.search134.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00857_element_check_00833 **********\n\n");
    });

    test('00858_element_check_00834', () async {
      print("\n********** テスト実行：00858_element_check_00834 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search134.print_word;
      print(searchlog.search134.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search134.print_word = testData1s;
      print(searchlog.search134.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search134.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search134.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search134.print_word = testData2s;
      print(searchlog.search134.print_word);
      expect(searchlog.search134.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search134.print_word = defalut;
      print(searchlog.search134.print_word);
      expect(searchlog.search134.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00858_element_check_00834 **********\n\n");
    });

    test('00859_element_check_00835', () async {
      print("\n********** テスト実行：00859_element_check_00835 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search134.description;
      print(searchlog.search134.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search134.description = testData1s;
      print(searchlog.search134.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search134.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search134.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search134.description = testData2s;
      print(searchlog.search134.description);
      expect(searchlog.search134.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search134.description = defalut;
      print(searchlog.search134.description);
      expect(searchlog.search134.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search134.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00859_element_check_00835 **********\n\n");
    });

    test('00860_element_check_00836', () async {
      print("\n********** テスト実行：00860_element_check_00836 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search135.file_name;
      print(searchlog.search135.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search135.file_name = testData1s;
      print(searchlog.search135.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search135.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search135.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search135.file_name = testData2s;
      print(searchlog.search135.file_name);
      expect(searchlog.search135.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search135.file_name = defalut;
      print(searchlog.search135.file_name);
      expect(searchlog.search135.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00860_element_check_00836 **********\n\n");
    });

    test('00861_element_check_00837', () async {
      print("\n********** テスト実行：00861_element_check_00837 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search135.typ;
      print(searchlog.search135.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search135.typ = testData1;
      print(searchlog.search135.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search135.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search135.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search135.typ = testData2;
      print(searchlog.search135.typ);
      expect(searchlog.search135.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search135.typ = defalut;
      print(searchlog.search135.typ);
      expect(searchlog.search135.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00861_element_check_00837 **********\n\n");
    });

    test('00862_element_check_00838', () async {
      print("\n********** テスト実行：00862_element_check_00838 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search135.out_count;
      print(searchlog.search135.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search135.out_count = testData1;
      print(searchlog.search135.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search135.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search135.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search135.out_count = testData2;
      print(searchlog.search135.out_count);
      expect(searchlog.search135.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search135.out_count = defalut;
      print(searchlog.search135.out_count);
      expect(searchlog.search135.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00862_element_check_00838 **********\n\n");
    });

    test('00863_element_check_00839', () async {
      print("\n********** テスト実行：00863_element_check_00839 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search135.section;
      print(searchlog.search135.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search135.section = testData1s;
      print(searchlog.search135.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search135.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search135.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search135.section = testData2s;
      print(searchlog.search135.section);
      expect(searchlog.search135.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search135.section = defalut;
      print(searchlog.search135.section);
      expect(searchlog.search135.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00863_element_check_00839 **********\n\n");
    });

    test('00864_element_check_00840', () async {
      print("\n********** テスト実行：00864_element_check_00840 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search135.keyword;
      print(searchlog.search135.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search135.keyword = testData1s;
      print(searchlog.search135.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search135.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search135.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search135.keyword = testData2s;
      print(searchlog.search135.keyword);
      expect(searchlog.search135.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search135.keyword = defalut;
      print(searchlog.search135.keyword);
      expect(searchlog.search135.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00864_element_check_00840 **********\n\n");
    });

    test('00865_element_check_00841', () async {
      print("\n********** テスト実行：00865_element_check_00841 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search135.print_word;
      print(searchlog.search135.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search135.print_word = testData1s;
      print(searchlog.search135.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search135.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search135.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search135.print_word = testData2s;
      print(searchlog.search135.print_word);
      expect(searchlog.search135.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search135.print_word = defalut;
      print(searchlog.search135.print_word);
      expect(searchlog.search135.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00865_element_check_00841 **********\n\n");
    });

    test('00866_element_check_00842', () async {
      print("\n********** テスト実行：00866_element_check_00842 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search135.description;
      print(searchlog.search135.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search135.description = testData1s;
      print(searchlog.search135.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search135.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search135.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search135.description = testData2s;
      print(searchlog.search135.description);
      expect(searchlog.search135.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search135.description = defalut;
      print(searchlog.search135.description);
      expect(searchlog.search135.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search135.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00866_element_check_00842 **********\n\n");
    });

    test('00867_element_check_00843', () async {
      print("\n********** テスト実行：00867_element_check_00843 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search136.file_name;
      print(searchlog.search136.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search136.file_name = testData1s;
      print(searchlog.search136.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search136.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search136.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search136.file_name = testData2s;
      print(searchlog.search136.file_name);
      expect(searchlog.search136.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search136.file_name = defalut;
      print(searchlog.search136.file_name);
      expect(searchlog.search136.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00867_element_check_00843 **********\n\n");
    });

    test('00868_element_check_00844', () async {
      print("\n********** テスト実行：00868_element_check_00844 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search136.typ;
      print(searchlog.search136.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search136.typ = testData1;
      print(searchlog.search136.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search136.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search136.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search136.typ = testData2;
      print(searchlog.search136.typ);
      expect(searchlog.search136.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search136.typ = defalut;
      print(searchlog.search136.typ);
      expect(searchlog.search136.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00868_element_check_00844 **********\n\n");
    });

    test('00869_element_check_00845', () async {
      print("\n********** テスト実行：00869_element_check_00845 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search136.out_count;
      print(searchlog.search136.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search136.out_count = testData1;
      print(searchlog.search136.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search136.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search136.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search136.out_count = testData2;
      print(searchlog.search136.out_count);
      expect(searchlog.search136.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search136.out_count = defalut;
      print(searchlog.search136.out_count);
      expect(searchlog.search136.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00869_element_check_00845 **********\n\n");
    });

    test('00870_element_check_00846', () async {
      print("\n********** テスト実行：00870_element_check_00846 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search136.section;
      print(searchlog.search136.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search136.section = testData1s;
      print(searchlog.search136.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search136.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search136.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search136.section = testData2s;
      print(searchlog.search136.section);
      expect(searchlog.search136.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search136.section = defalut;
      print(searchlog.search136.section);
      expect(searchlog.search136.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00870_element_check_00846 **********\n\n");
    });

    test('00871_element_check_00847', () async {
      print("\n********** テスト実行：00871_element_check_00847 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search136.keyword;
      print(searchlog.search136.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search136.keyword = testData1s;
      print(searchlog.search136.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search136.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search136.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search136.keyword = testData2s;
      print(searchlog.search136.keyword);
      expect(searchlog.search136.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search136.keyword = defalut;
      print(searchlog.search136.keyword);
      expect(searchlog.search136.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00871_element_check_00847 **********\n\n");
    });

    test('00872_element_check_00848', () async {
      print("\n********** テスト実行：00872_element_check_00848 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search136.print_word;
      print(searchlog.search136.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search136.print_word = testData1s;
      print(searchlog.search136.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search136.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search136.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search136.print_word = testData2s;
      print(searchlog.search136.print_word);
      expect(searchlog.search136.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search136.print_word = defalut;
      print(searchlog.search136.print_word);
      expect(searchlog.search136.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00872_element_check_00848 **********\n\n");
    });

    test('00873_element_check_00849', () async {
      print("\n********** テスト実行：00873_element_check_00849 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search136.description;
      print(searchlog.search136.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search136.description = testData1s;
      print(searchlog.search136.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search136.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search136.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search136.description = testData2s;
      print(searchlog.search136.description);
      expect(searchlog.search136.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search136.description = defalut;
      print(searchlog.search136.description);
      expect(searchlog.search136.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search136.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00873_element_check_00849 **********\n\n");
    });

    test('00874_element_check_00850', () async {
      print("\n********** テスト実行：00874_element_check_00850 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search137.file_name;
      print(searchlog.search137.file_name);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search137.file_name = testData1s;
      print(searchlog.search137.file_name);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search137.file_name == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search137.file_name == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search137.file_name = testData2s;
      print(searchlog.search137.file_name);
      expect(searchlog.search137.file_name == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.file_name == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search137.file_name = defalut;
      print(searchlog.search137.file_name);
      expect(searchlog.search137.file_name == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.file_name == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00874_element_check_00850 **********\n\n");
    });

    test('00875_element_check_00851', () async {
      print("\n********** テスト実行：00875_element_check_00851 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search137.typ;
      print(searchlog.search137.typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search137.typ = testData1;
      print(searchlog.search137.typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search137.typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search137.typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search137.typ = testData2;
      print(searchlog.search137.typ);
      expect(searchlog.search137.typ == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search137.typ = defalut;
      print(searchlog.search137.typ);
      expect(searchlog.search137.typ == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00875_element_check_00851 **********\n\n");
    });

    test('00876_element_check_00852', () async {
      print("\n********** テスト実行：00876_element_check_00852 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search137.out_count;
      print(searchlog.search137.out_count);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search137.out_count = testData1;
      print(searchlog.search137.out_count);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search137.out_count == testData1, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search137.out_count == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search137.out_count = testData2;
      print(searchlog.search137.out_count);
      expect(searchlog.search137.out_count == testData2, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.out_count == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search137.out_count = defalut;
      print(searchlog.search137.out_count);
      expect(searchlog.search137.out_count == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.out_count == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00876_element_check_00852 **********\n\n");
    });

    test('00877_element_check_00853', () async {
      print("\n********** テスト実行：00877_element_check_00853 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search137.section;
      print(searchlog.search137.section);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search137.section = testData1s;
      print(searchlog.search137.section);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search137.section == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search137.section == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search137.section = testData2s;
      print(searchlog.search137.section);
      expect(searchlog.search137.section == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.section == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search137.section = defalut;
      print(searchlog.search137.section);
      expect(searchlog.search137.section == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.section == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00877_element_check_00853 **********\n\n");
    });

    test('00878_element_check_00854', () async {
      print("\n********** テスト実行：00878_element_check_00854 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search137.keyword;
      print(searchlog.search137.keyword);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search137.keyword = testData1s;
      print(searchlog.search137.keyword);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search137.keyword == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search137.keyword == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search137.keyword = testData2s;
      print(searchlog.search137.keyword);
      expect(searchlog.search137.keyword == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.keyword == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search137.keyword = defalut;
      print(searchlog.search137.keyword);
      expect(searchlog.search137.keyword == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.keyword == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00878_element_check_00854 **********\n\n");
    });

    test('00879_element_check_00855', () async {
      print("\n********** テスト実行：00879_element_check_00855 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search137.print_word;
      print(searchlog.search137.print_word);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search137.print_word = testData1s;
      print(searchlog.search137.print_word);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search137.print_word == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search137.print_word == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search137.print_word = testData2s;
      print(searchlog.search137.print_word);
      expect(searchlog.search137.print_word == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.print_word == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search137.print_word = defalut;
      print(searchlog.search137.print_word);
      expect(searchlog.search137.print_word == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.print_word == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00879_element_check_00855 **********\n\n");
    });

    test('00880_element_check_00856', () async {
      print("\n********** テスト実行：00880_element_check_00856 **********");

      searchlog = SearchlogJsonFile();
      allPropatyCheckInit(searchlog);

      // ①loadを実行する。
      await searchlog.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = searchlog.search137.description;
      print(searchlog.search137.description);

      // ②指定したプロパティにテストデータ1を書き込む。
      searchlog.search137.description = testData1s;
      print(searchlog.search137.description);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(searchlog.search137.description == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await searchlog.save();
      await searchlog.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(searchlog.search137.description == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      searchlog.search137.description = testData2s;
      print(searchlog.search137.description);
      expect(searchlog.search137.description == testData2s, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.description == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      searchlog.search137.description = defalut;
      print(searchlog.search137.description);
      expect(searchlog.search137.description == defalut, true);
      await searchlog.save();
      await searchlog.load();
      expect(searchlog.search137.description == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(searchlog, true);

      print("********** テスト終了：00880_element_check_00856 **********\n\n");
    });

  });
}

void allPropatyCheckInit(SearchlogJsonFile test)
{
  expect(test.display.display, "");
  expect(test.config.title, "");
  expect(test.config.command_number, 0);
  expect(test.config.search_number, 0);
  expect(test.command1.command, "");
  expect(test.command1.command_sata, "");
  expect(test.command1.command_ssd, "");
  expect(test.command1.command_sata2, "");
  expect(test.command1.command_ssd2, "");
  expect(test.command1.file_name, "");
  expect(test.search1.typ, 0);
  expect(test.search1.title, "");
  expect(test.search1.description_cd, 0);
  expect(test.search2.file_name, "");
  expect(test.search2.typ, 0);
  expect(test.search2.date, "");
  expect(test.search2.term_date, 0);
  expect(test.search2.out_count, 0);
  expect(test.search2.print_word, "");
  expect(test.search2.words, 0);
  expect(test.search2.search_word1, "");
  expect(test.search2.search_word2, "");
  expect(test.search2.search_word1_sata, "");
  expect(test.search2.search_word2_sata, "");
  expect(test.search2.description, "");
  expect(test.search3.file_name, "");
  expect(test.search3.typ, 0);
  expect(test.search3.date, "");
  expect(test.search3.term_date, 0);
  expect(test.search3.out_count, 0);
  expect(test.search3.print_word, "");
  expect(test.search3.words, 0);
  expect(test.search3.search_word1, "");
  expect(test.search3.search_word1_sata, "");
  expect(test.search3.description, "");
  expect(test.search4.file_name, "");
  expect(test.search4.typ, 0);
  expect(test.search4.date, "");
  expect(test.search4.term_date, 0);
  expect(test.search4.out_count, 0);
  expect(test.search4.print_word, "");
  expect(test.search4.words, 0);
  expect(test.search4.search_word1, "");
  expect(test.search4.search_word1_sata, "");
  expect(test.search4.description, "");
  expect(test.search5.file_name, "");
  expect(test.search5.typ, 0);
  expect(test.search5.date, "");
  expect(test.search5.term_date, 0);
  expect(test.search5.out_count, 0);
  expect(test.search5.print_word, "");
  expect(test.search5.sensor_word, "");
  expect(test.search5.description, "");
  expect(test.search6.file_name, "");
  expect(test.search6.typ, 0);
  expect(test.search6.date, "");
  expect(test.search6.term_date, 0);
  expect(test.search6.out_count, 0);
  expect(test.search6.print_word, "");
  expect(test.search6.sensor_word, "");
  expect(test.search6.description, "");
  expect(test.search7.file_name, "");
  expect(test.search7.typ, 0);
  expect(test.search7.date, "");
  expect(test.search7.term_date, 0);
  expect(test.search7.out_count, 0);
  expect(test.search7.print_word, "");
  expect(test.search7.partition, "");
  expect(test.search7.description, "");
  expect(test.search8.file_name, "");
  expect(test.search8.typ, 0);
  expect(test.search8.date, "");
  expect(test.search8.term_date, 0);
  expect(test.search8.out_count, 0);
  expect(test.search8.print_word, "");
  expect(test.search8.words, 0);
  expect(test.search8.search_word1, "");
  expect(test.search8.search_word2, "");
  expect(test.search8.search_word1_sata, "");
  expect(test.search8.search_word2_sata, "");
  expect(test.search8.description, "");
  expect(test.search9.file_name, "");
  expect(test.search9.file_name2, "");
  expect(test.search9.typ, 0);
  expect(test.search9.date, "");
  expect(test.search9.term_date, 0);
  expect(test.search9.out_count, 0);
  expect(test.search9.print_word, "");
  expect(test.search9.sensor_word, "");
  expect(test.search9.description, "");
  expect(test.search10.file_name, "");
  expect(test.search10.file_name2, "");
  expect(test.search10.typ, 0);
  expect(test.search10.date, "");
  expect(test.search10.term_date, 0);
  expect(test.search10.out_count, 0);
  expect(test.search10.print_word, "");
  expect(test.search10.sensor_word, "");
  expect(test.search10.description, "");
  expect(test.search11.file_name, "");
  expect(test.search11.file_name2, "");
  expect(test.search11.typ, 0);
  expect(test.search11.date, "");
  expect(test.search11.term_date, 0);
  expect(test.search11.out_count, 0);
  expect(test.search11.print_word, "");
  expect(test.search11.sensor_word, "");
  expect(test.search11.description, "");
  expect(test.search12.file_name, "");
  expect(test.search12.typ, 0);
  expect(test.search12.date, "");
  expect(test.search12.term_date, 0);
  expect(test.search12.out_count, 0);
  expect(test.search12.print_word, "");
  expect(test.search12.words, 0);
  expect(test.search12.search_word1, "");
  expect(test.search12.search_word1_sata, "");
  expect(test.search12.description, "");
  expect(test.search13.file_name, "");
  expect(test.search13.typ, 0);
  expect(test.search13.out_count, 0);
  expect(test.search13.print_word, "");
  expect(test.search13.description, "");
  expect(test.search15.file_name, "");
  expect(test.search15.typ, 0);
  expect(test.search15.out_count, 0);
  expect(test.search15.section, "");
  expect(test.search15.keyword, "");
  expect(test.search15.print_word, "");
  expect(test.search15.description, "");
  expect(test.search16.file_name, "");
  expect(test.search16.typ, 0);
  expect(test.search16.out_count, 0);
  expect(test.search16.section, "");
  expect(test.search16.keyword, "");
  expect(test.search16.print_word, "");
  expect(test.search16.description, "");
  expect(test.search21.typ, 0);
  expect(test.search21.ssd, 0);
  expect(test.search21.title, "");
  expect(test.search21.description_cd, 0);
  expect(test.search22.file_name, "");
  expect(test.search22.file_name2, "");
  expect(test.search22.typ, 0);
  expect(test.search22.ssd, 0);
  expect(test.search22.date, "");
  expect(test.search22.term_date, 0);
  expect(test.search22.out_count, 0);
  expect(test.search22.print_word, "");
  expect(test.search22.ssd_word, "");
  expect(test.search22.description, "");
  expect(test.search23.file_name, "");
  expect(test.search23.file_name2, "");
  expect(test.search23.typ, 0);
  expect(test.search23.ssd, 0);
  expect(test.search23.date, "");
  expect(test.search23.term_date, 0);
  expect(test.search23.out_count, 0);
  expect(test.search23.print_word, "");
  expect(test.search23.ssd_word, "");
  expect(test.search23.description, "");
  expect(test.search24.file_name, "");
  expect(test.search24.file_name2, "");
  expect(test.search24.typ, 0);
  expect(test.search24.ssd, 0);
  expect(test.search24.date, "");
  expect(test.search24.term_date, 0);
  expect(test.search24.out_count, 0);
  expect(test.search24.print_word, "");
  expect(test.search24.ssd_word, "");
  expect(test.search24.description, "");
  expect(test.search25.file_name, "");
  expect(test.search25.typ, 0);
  expect(test.search25.ssd, 0);
  expect(test.search25.out_count, 0);
  expect(test.search25.print_word, "");
  expect(test.search25.description, "");
  expect(test.search26.file_name, "");
  expect(test.search26.typ, 0);
  expect(test.search26.ssd, 0);
  expect(test.search26.out_count, 0);
  expect(test.search26.print_word, "");
  expect(test.search26.description, "");
  expect(test.search27.file_name, "");
  expect(test.search27.typ, 0);
  expect(test.search27.ssd, 0);
  expect(test.search27.out_count, 0);
  expect(test.search27.print_word, "");
  expect(test.search27.description, "");
  expect(test.search28.file_name, "");
  expect(test.search28.typ, 0);
  expect(test.search28.ssd, 0);
  expect(test.search28.out_count, 0);
  expect(test.search28.print_word, "");
  expect(test.search28.description, "");
  expect(test.search31.typ, 0);
  expect(test.search31.ssd, 0);
  expect(test.search31.title, "");
  expect(test.search31.description_cd, 0);
  expect(test.search32.typ, 0);
  expect(test.search32.ssd, 0);
  expect(test.search32.title, "");
  expect(test.search32.description_cd, 0);
  expect(test.search33.file_name, "");
  expect(test.search33.typ, 0);
  expect(test.search33.ssd, 0);
  expect(test.search33.out_count, 0);
  expect(test.search33.print_word, "");
  expect(test.search33.print_value_ok, "");
  expect(test.search33.print_value_ng, "");
  expect(test.search33.smart_word, "");
  expect(test.search33.smart_word_sata, "");
  expect(test.search33.description, "");
  expect(test.search34.file_name, "");
  expect(test.search34.typ, 0);
  expect(test.search34.ssd, 0);
  expect(test.search34.out_count, 0);
  expect(test.search34.print_word, "");
  expect(test.search34.print_value_ok, "");
  expect(test.search34.print_value_ng, "");
  expect(test.search34.smart_word, "");
  expect(test.search34.smart_word_sata, "");
  expect(test.search34.description, "");
  expect(test.search35.file_name, "");
  expect(test.search35.typ, 0);
  expect(test.search35.ssd, 0);
  expect(test.search35.out_count, 0);
  expect(test.search35.print_word, "");
  expect(test.search35.print_value_ok, "");
  expect(test.search35.print_value_ng, "");
  expect(test.search35.smart_word, "");
  expect(test.search35.smart_word_sata, "");
  expect(test.search35.description, "");
  expect(test.search36.file_name, "");
  expect(test.search36.typ, 0);
  expect(test.search36.ssd, 0);
  expect(test.search36.out_count, 0);
  expect(test.search36.print_word, "");
  expect(test.search36.smart_word, "");
  expect(test.search36.smart_word_sata, "");
  expect(test.search36.description, "");
  expect(test.search37.file_name, "");
  expect(test.search37.typ, 0);
  expect(test.search37.ssd, 0);
  expect(test.search37.out_count, 0);
  expect(test.search37.print_word, "");
  expect(test.search37.print_value_ok, "");
  expect(test.search37.print_value_ng, "");
  expect(test.search37.smart_word, "");
  expect(test.search37.smart_word_sata, "");
  expect(test.search37.description, "");
  expect(test.search38.file_name, "");
  expect(test.search38.typ, 0);
  expect(test.search38.ssd, 0);
  expect(test.search38.out_count, 0);
  expect(test.search38.print_word, "");
  expect(test.search38.smart_word, "");
  expect(test.search38.smart_word_sata, "");
  expect(test.search38.description, "");
  expect(test.search39.file_name, "");
  expect(test.search39.typ, 0);
  expect(test.search39.ssd, 0);
  expect(test.search39.out_count, 0);
  expect(test.search39.print_word, "");
  expect(test.search39.print_value_ok, "");
  expect(test.search39.print_value_ng, "");
  expect(test.search39.smart_word, "");
  expect(test.search39.smart_word_sata, "");
  expect(test.search39.description, "");
  expect(test.search40.file_name, "");
  expect(test.search40.typ, 0);
  expect(test.search40.ssd, 0);
  expect(test.search40.out_count, 0);
  expect(test.search40.print_word, "");
  expect(test.search40.print_value_ok, "");
  expect(test.search40.print_value_ng, "");
  expect(test.search40.smart_word, "");
  expect(test.search40.smart_word_sata, "");
  expect(test.search40.description, "");
  expect(test.search41.file_name, "");
  expect(test.search41.typ, 0);
  expect(test.search41.ssd, 0);
  expect(test.search41.out_count, 0);
  expect(test.search41.print_word, "");
  expect(test.search41.print_value_ok, "");
  expect(test.search41.print_value_ng, "");
  expect(test.search41.smart_word, "");
  expect(test.search41.smart_word_sata, "");
  expect(test.search41.description, "");
  expect(test.search42.file_name, "");
  expect(test.search42.file_name2, "");
  expect(test.search42.typ, 0);
  expect(test.search42.ssd, 0);
  expect(test.search42.out_count, 0);
  expect(test.search42.print_word, "");
  expect(test.search42.print_word2, "");
  expect(test.search42.sensor_word, "");
  expect(test.search42.description, "");
  expect(test.search42.description_cd, 0);
  expect(test.search51.typ, 0);
  expect(test.search51.ssd, 0);
  expect(test.search51.title, "");
  expect(test.search51.description_cd, 0);
  expect(test.search52.file_name, "");
  expect(test.search52.file_name2, "");
  expect(test.search52.typ, 0);
  expect(test.search52.ssd, 0);
  expect(test.search52.date, "");
  expect(test.search52.term_date, 0);
  expect(test.search52.out_count, 0);
  expect(test.search52.print_word, "");
  expect(test.search52.ssd_word, "");
  expect(test.search52.description, "");
  expect(test.search53.file_name, "");
  expect(test.search53.file_name2, "");
  expect(test.search53.typ, 0);
  expect(test.search53.ssd, 0);
  expect(test.search53.date, "");
  expect(test.search53.term_date, 0);
  expect(test.search53.out_count, 0);
  expect(test.search53.print_word, "");
  expect(test.search53.ssd_word, "");
  expect(test.search53.description, "");
  expect(test.search54.file_name, "");
  expect(test.search54.file_name2, "");
  expect(test.search54.typ, 0);
  expect(test.search54.ssd, 0);
  expect(test.search54.date, "");
  expect(test.search54.term_date, 0);
  expect(test.search54.out_count, 0);
  expect(test.search54.print_word, "");
  expect(test.search54.ssd_word, "");
  expect(test.search54.description, "");
  expect(test.search56.file_name, "");
  expect(test.search56.typ, 0);
  expect(test.search56.ssd, 0);
  expect(test.search56.out_count, 0);
  expect(test.search56.print_word, "");
  expect(test.search56.description, "");
  expect(test.search61.typ, 0);
  expect(test.search61.title, "");
  expect(test.search61.description_cd, 0);
  expect(test.search62.file_name, "");
  expect(test.search62.typ, 0);
  expect(test.search62.date, "");
  expect(test.search62.term_date, 0);
  expect(test.search62.out_count, 0);
  expect(test.search62.print_word, "");
  expect(test.search62.words, 0);
  expect(test.search62.search_word1, "");
  expect(test.search62.search_word1_sata, "");
  expect(test.search62.description, "");
  expect(test.search63.file_name, "");
  expect(test.search63.typ, 0);
  expect(test.search63.date, "");
  expect(test.search63.term_date, 0);
  expect(test.search63.out_count, 0);
  expect(test.search63.print_word, "");
  expect(test.search63.words, 0);
  expect(test.search63.search_word1, "");
  expect(test.search63.search_word1_sata, "");
  expect(test.search63.description, "");
  expect(test.search64.file_name, "");
  expect(test.search64.typ, 0);
  expect(test.search64.date, "");
  expect(test.search64.term_date, 0);
  expect(test.search64.out_count, 0);
  expect(test.search64.print_word, "");
  expect(test.search64.words, 0);
  expect(test.search64.search_word1, "");
  expect(test.search64.search_word1_sata, "");
  expect(test.search64.description, "");
  expect(test.search65.file_name, "");
  expect(test.search65.typ, 0);
  expect(test.search65.date, "");
  expect(test.search65.term_date, 0);
  expect(test.search65.out_count, 0);
  expect(test.search65.print_word, "");
  expect(test.search65.words, 0);
  expect(test.search65.search_word1, "");
  expect(test.search65.search_word1_sata, "");
  expect(test.search65.description, "");
  expect(test.search66.file_name, "");
  expect(test.search66.typ, 0);
  expect(test.search66.date, "");
  expect(test.search66.term_date, 0);
  expect(test.search66.out_count, 0);
  expect(test.search66.print_word, "");
  expect(test.search66.words, 0);
  expect(test.search66.search_word1, "");
  expect(test.search66.search_word1_sata, "");
  expect(test.search66.description, "");
  expect(test.search67.file_name, "");
  expect(test.search67.typ, 0);
  expect(test.search67.date, "");
  expect(test.search67.term_date, 0);
  expect(test.search67.out_count, 0);
  expect(test.search67.print_word, "");
  expect(test.search67.words, 0);
  expect(test.search67.search_word1, "");
  expect(test.search67.search_word1_sata, "");
  expect(test.search67.description, "");
  expect(test.search68.file_name, "");
  expect(test.search68.typ, 0);
  expect(test.search68.date, "");
  expect(test.search68.term_date, 0);
  expect(test.search68.out_count, 0);
  expect(test.search68.print_word, "");
  expect(test.search68.words, 0);
  expect(test.search68.search_word1, "");
  expect(test.search68.search_word1_sata, "");
  expect(test.search68.description, "");
  expect(test.search69.file_name, "");
  expect(test.search69.typ, 0);
  expect(test.search69.date, "");
  expect(test.search69.term_date, 0);
  expect(test.search69.out_count, 0);
  expect(test.search69.print_word, "");
  expect(test.search69.words, 0);
  expect(test.search69.search_word1, "");
  expect(test.search69.search_word1_sata, "");
  expect(test.search69.description, "");
  expect(test.search70.file_name, "");
  expect(test.search70.typ, 0);
  expect(test.search70.date, "");
  expect(test.search70.term_date, 0);
  expect(test.search70.out_count, 0);
  expect(test.search70.print_word, "");
  expect(test.search70.words, 0);
  expect(test.search70.search_word1, "");
  expect(test.search70.search_word1_sata, "");
  expect(test.search70.description, "");
  expect(test.search71.file_name, "");
  expect(test.search71.typ, 0);
  expect(test.search71.date, "");
  expect(test.search71.term_date, 0);
  expect(test.search71.out_count, 0);
  expect(test.search71.print_word, "");
  expect(test.search71.words, 0);
  expect(test.search71.search_word1, "");
  expect(test.search71.search_word1_sata, "");
  expect(test.search71.description, "");
  expect(test.search72.file_name, "");
  expect(test.search72.typ, 0);
  expect(test.search72.date, "");
  expect(test.search72.term_date, 0);
  expect(test.search72.out_count, 0);
  expect(test.search72.print_word, "");
  expect(test.search72.words, 0);
  expect(test.search72.search_word1, "");
  expect(test.search72.search_word1_sata, "");
  expect(test.search72.description, "");
  expect(test.search73.file_name, "");
  expect(test.search73.typ, 0);
  expect(test.search73.date, "");
  expect(test.search73.term_date, 0);
  expect(test.search73.out_count, 0);
  expect(test.search73.print_word, "");
  expect(test.search73.words, 0);
  expect(test.search73.search_word1, "");
  expect(test.search73.search_word1_sata, "");
  expect(test.search73.description, "");
  expect(test.search74.file_name, "");
  expect(test.search74.typ, 0);
  expect(test.search74.date, "");
  expect(test.search74.term_date, 0);
  expect(test.search74.out_count, 0);
  expect(test.search74.print_word, "");
  expect(test.search74.words, 0);
  expect(test.search74.search_word1, "");
  expect(test.search74.search_word1_sata, "");
  expect(test.search74.description, "");
  expect(test.search75.file_name, "");
  expect(test.search75.typ, 0);
  expect(test.search75.date, "");
  expect(test.search75.term_date, 0);
  expect(test.search75.out_count, 0);
  expect(test.search75.print_word, "");
  expect(test.search75.words, 0);
  expect(test.search75.search_word1, "");
  expect(test.search75.search_word1_sata, "");
  expect(test.search75.description, "");
  expect(test.search76.file_name, "");
  expect(test.search76.typ, 0);
  expect(test.search76.date, "");
  expect(test.search76.term_date, 0);
  expect(test.search76.out_count, 0);
  expect(test.search76.print_word, "");
  expect(test.search76.words, 0);
  expect(test.search76.search_word1, "");
  expect(test.search76.search_word1_sata, "");
  expect(test.search76.description, "");
  expect(test.search77.file_name, "");
  expect(test.search77.typ, 0);
  expect(test.search77.date, "");
  expect(test.search77.term_date, 0);
  expect(test.search77.out_count, 0);
  expect(test.search77.print_word, "");
  expect(test.search77.words, 0);
  expect(test.search77.search_word1, "");
  expect(test.search77.search_word1_sata, "");
  expect(test.search77.description, "");
  expect(test.search78.file_name, "");
  expect(test.search78.typ, 0);
  expect(test.search78.date, "");
  expect(test.search78.term_date, 0);
  expect(test.search78.out_count, 0);
  expect(test.search78.print_word, "");
  expect(test.search78.words, 0);
  expect(test.search78.search_word1, "");
  expect(test.search78.search_word1_sata, "");
  expect(test.search78.description, "");
  expect(test.search79.file_name, "");
  expect(test.search79.typ, 0);
  expect(test.search79.date, "");
  expect(test.search79.term_date, 0);
  expect(test.search79.out_count, 0);
  expect(test.search79.print_word, "");
  expect(test.search79.words, 0);
  expect(test.search79.search_word1, "");
  expect(test.search79.search_word1_sata, "");
  expect(test.search79.description, "");
  expect(test.search80.typ, 0);
  expect(test.search80.file_name, "");
  expect(test.search80.out_count, 0);
  expect(test.search80.print_word, "");
  expect(test.search80.print_value_ok, "");
  expect(test.search80.print_value_ng, "");
  expect(test.search80.description, "");
  expect(test.search91.file_name, "");
  expect(test.search91.typ, 0);
  expect(test.search91.out_count, 0);
  expect(test.search91.section, "");
  expect(test.search91.keyword, "");
  expect(test.search91.print_word, "");
  expect(test.search91.description, "");
  expect(test.search92.file_name, "");
  expect(test.search92.typ, 0);
  expect(test.search92.out_count, 0);
  expect(test.search92.section, "");
  expect(test.search92.keyword, "");
  expect(test.search92.print_word, "");
  expect(test.search92.description, "");
  expect(test.search93.file_name, "");
  expect(test.search93.typ, 0);
  expect(test.search93.out_count, 0);
  expect(test.search93.section, "");
  expect(test.search93.keyword, "");
  expect(test.search93.print_word, "");
  expect(test.search93.description, "");
  expect(test.search94.file_name, "");
  expect(test.search94.typ, 0);
  expect(test.search94.out_count, 0);
  expect(test.search94.section, "");
  expect(test.search94.keyword, "");
  expect(test.search94.print_word, "");
  expect(test.search94.description, "");
  expect(test.search95.file_name, "");
  expect(test.search95.typ, 0);
  expect(test.search95.out_count, 0);
  expect(test.search95.section, "");
  expect(test.search95.keyword, "");
  expect(test.search95.print_word, "");
  expect(test.search95.description, "");
  expect(test.search96.file_name, "");
  expect(test.search96.typ, 0);
  expect(test.search96.out_count, 0);
  expect(test.search96.section, "");
  expect(test.search96.keyword, "");
  expect(test.search96.print_word, "");
  expect(test.search96.description, "");
  expect(test.search97.file_name, "");
  expect(test.search97.typ, 0);
  expect(test.search97.out_count, 0);
  expect(test.search97.section, "");
  expect(test.search97.keyword, "");
  expect(test.search97.print_word, "");
  expect(test.search97.description, "");
  expect(test.search98.file_name, "");
  expect(test.search98.typ, 0);
  expect(test.search98.out_count, 0);
  expect(test.search98.print_word, "");
  expect(test.search98.description, "");
  expect(test.search99.file_name, "");
  expect(test.search99.typ, 0);
  expect(test.search99.out_count, 0);
  expect(test.search99.section, "");
  expect(test.search99.keyword, "");
  expect(test.search99.print_word, "");
  expect(test.search99.description, "");
  expect(test.search100.file_name, "");
  expect(test.search100.typ, 0);
  expect(test.search100.out_count, 0);
  expect(test.search100.section, "");
  expect(test.search100.keyword, "");
  expect(test.search100.print_word, "");
  expect(test.search100.description, "");
  expect(test.search101.file_name, "");
  expect(test.search101.typ, 0);
  expect(test.search101.out_count, 0);
  expect(test.search101.section, "");
  expect(test.search101.keyword, "");
  expect(test.search101.print_word, "");
  expect(test.search101.description, "");
  expect(test.search102.file_name, "");
  expect(test.search102.typ, 0);
  expect(test.search102.out_count, 0);
  expect(test.search102.section, "");
  expect(test.search102.keyword, "");
  expect(test.search102.print_word, "");
  expect(test.search102.description, "");
  expect(test.search103.file_name, "");
  expect(test.search103.typ, 0);
  expect(test.search103.out_count, 0);
  expect(test.search103.section, "");
  expect(test.search103.keyword, "");
  expect(test.search103.print_word, "");
  expect(test.search103.description, "");
  expect(test.search104.file_name, "");
  expect(test.search104.typ, 0);
  expect(test.search104.out_count, 0);
  expect(test.search104.section, "");
  expect(test.search104.keyword, "");
  expect(test.search104.print_word, "");
  expect(test.search104.description, "");
  expect(test.search105.file_name, "");
  expect(test.search105.typ, 0);
  expect(test.search105.out_count, 0);
  expect(test.search105.section, "");
  expect(test.search105.keyword, "");
  expect(test.search105.print_word, "");
  expect(test.search105.description, "");
  expect(test.search106.file_name, "");
  expect(test.search106.typ, 0);
  expect(test.search106.out_count, 0);
  expect(test.search106.section, "");
  expect(test.search106.keyword, "");
  expect(test.search106.print_word, "");
  expect(test.search106.description, "");
  expect(test.search107.file_name, "");
  expect(test.search107.typ, 0);
  expect(test.search107.out_count, 0);
  expect(test.search107.section, "");
  expect(test.search107.keyword, "");
  expect(test.search107.print_word, "");
  expect(test.search107.description, "");
  expect(test.search108.file_name, "");
  expect(test.search108.typ, 0);
  expect(test.search108.out_count, 0);
  expect(test.search108.section, "");
  expect(test.search108.keyword, "");
  expect(test.search108.print_word, "");
  expect(test.search108.description, "");
  expect(test.search109.file_name, "");
  expect(test.search109.typ, 0);
  expect(test.search109.out_count, 0);
  expect(test.search109.section, "");
  expect(test.search109.keyword, "");
  expect(test.search109.print_word, "");
  expect(test.search109.description, "");
  expect(test.search110.file_name, "");
  expect(test.search110.typ, 0);
  expect(test.search110.out_count, 0);
  expect(test.search110.section, "");
  expect(test.search110.keyword, "");
  expect(test.search110.print_word, "");
  expect(test.search110.description, "");
  expect(test.search111.file_name, "");
  expect(test.search111.typ, 0);
  expect(test.search111.out_count, 0);
  expect(test.search111.section, "");
  expect(test.search111.keyword, "");
  expect(test.search111.print_word, "");
  expect(test.search111.description, "");
  expect(test.search112.file_name, "");
  expect(test.search112.typ, 0);
  expect(test.search112.out_count, 0);
  expect(test.search112.section, "");
  expect(test.search112.keyword, "");
  expect(test.search112.print_word, "");
  expect(test.search112.description, "");
  expect(test.search113.file_name, "");
  expect(test.search113.typ, 0);
  expect(test.search113.out_count, 0);
  expect(test.search113.section, "");
  expect(test.search113.keyword, "");
  expect(test.search113.print_word, "");
  expect(test.search113.description, "");
  expect(test.search114.file_name, "");
  expect(test.search114.typ, 0);
  expect(test.search114.out_count, 0);
  expect(test.search114.section, "");
  expect(test.search114.keyword, 0);
  expect(test.search114.print_word, "");
  expect(test.search114.description, "");
  expect(test.search115.file_name, "");
  expect(test.search115.typ, 0);
  expect(test.search115.out_count, 0);
  expect(test.search115.section, "");
  expect(test.search115.keyword, 0);
  expect(test.search115.print_word, "");
  expect(test.search115.description, "");
  expect(test.search116.file_name, "");
  expect(test.search116.typ, 0);
  expect(test.search116.out_count, 0);
  expect(test.search116.section, "");
  expect(test.search116.keyword, "");
  expect(test.search116.print_word, "");
  expect(test.search116.description, "");
  expect(test.search117.file_name, "");
  expect(test.search117.typ, 0);
  expect(test.search117.out_count, 0);
  expect(test.search117.section, "");
  expect(test.search117.keyword, "");
  expect(test.search117.print_word, "");
  expect(test.search117.description, "");
  expect(test.search118.file_name, "");
  expect(test.search118.typ, 0);
  expect(test.search118.out_count, 0);
  expect(test.search118.section, "");
  expect(test.search118.keyword, "");
  expect(test.search118.print_word, "");
  expect(test.search118.description, "");
  expect(test.search119.file_name, "");
  expect(test.search119.typ, 0);
  expect(test.search119.out_count, 0);
  expect(test.search119.section, "");
  expect(test.search119.keyword, "");
  expect(test.search119.print_word, "");
  expect(test.search119.description, "");
  expect(test.search120.file_name, "");
  expect(test.search120.typ, 0);
  expect(test.search120.out_count, 0);
  expect(test.search120.section, "");
  expect(test.search120.keyword, "");
  expect(test.search120.print_word, "");
  expect(test.search120.description, "");
  expect(test.search121.file_name, "");
  expect(test.search121.typ, 0);
  expect(test.search121.out_count, 0);
  expect(test.search121.section, "");
  expect(test.search121.keyword, "");
  expect(test.search121.print_word, "");
  expect(test.search121.description, "");
  expect(test.search122.file_name, "");
  expect(test.search122.typ, 0);
  expect(test.search122.out_count, 0);
  expect(test.search122.section, "");
  expect(test.search122.keyword, "");
  expect(test.search122.print_word, "");
  expect(test.search122.description, "");
  expect(test.search123.file_name, "");
  expect(test.search123.typ, 0);
  expect(test.search123.out_count, 0);
  expect(test.search123.section, "");
  expect(test.search123.keyword, "");
  expect(test.search123.print_word, "");
  expect(test.search123.description, "");
  expect(test.search124.file_name, "");
  expect(test.search124.typ, 0);
  expect(test.search124.out_count, 0);
  expect(test.search124.section, "");
  expect(test.search124.keyword, "");
  expect(test.search124.print_word, "");
  expect(test.search124.description, "");
  expect(test.search125.file_name, "");
  expect(test.search125.typ, 0);
  expect(test.search125.out_count, 0);
  expect(test.search125.section, "");
  expect(test.search125.keyword, "");
  expect(test.search125.print_word, "");
  expect(test.search125.description, "");
  expect(test.search126.file_name, "");
  expect(test.search126.typ, 0);
  expect(test.search126.out_count, 0);
  expect(test.search126.section, "");
  expect(test.search126.keyword, "");
  expect(test.search126.print_word, "");
  expect(test.search126.description, "");
  expect(test.search127.file_name, "");
  expect(test.search127.typ, 0);
  expect(test.search127.out_count, 0);
  expect(test.search127.section, "");
  expect(test.search127.keyword, "");
  expect(test.search127.print_word, "");
  expect(test.search127.description, "");
  expect(test.search128.file_name, "");
  expect(test.search128.typ, 0);
  expect(test.search128.out_count, 0);
  expect(test.search128.section, "");
  expect(test.search128.keyword, "");
  expect(test.search128.print_word, "");
  expect(test.search128.description, "");
  expect(test.search129.file_name, "");
  expect(test.search129.typ, 0);
  expect(test.search129.out_count, 0);
  expect(test.search129.section, "");
  expect(test.search129.keyword, "");
  expect(test.search129.print_word, "");
  expect(test.search129.description, "");
  expect(test.search130.file_name, "");
  expect(test.search130.typ, 0);
  expect(test.search130.out_count, 0);
  expect(test.search130.section, "");
  expect(test.search130.keyword, "");
  expect(test.search130.print_word, "");
  expect(test.search130.description, "");
  expect(test.search131.file_name, "");
  expect(test.search131.typ, 0);
  expect(test.search131.out_count, 0);
  expect(test.search131.section, "");
  expect(test.search131.keyword, "");
  expect(test.search131.print_word, "");
  expect(test.search131.description, "");
  expect(test.search132.file_name, "");
  expect(test.search132.typ, 0);
  expect(test.search132.out_count, 0);
  expect(test.search132.section, "");
  expect(test.search132.keyword, "");
  expect(test.search132.print_word, "");
  expect(test.search132.description, "");
  expect(test.search133.file_name, "");
  expect(test.search133.typ, 0);
  expect(test.search133.out_count, 0);
  expect(test.search133.section, "");
  expect(test.search133.keyword, "");
  expect(test.search133.print_word, "");
  expect(test.search133.description, "");
  expect(test.search134.file_name, "");
  expect(test.search134.typ, 0);
  expect(test.search134.out_count, 0);
  expect(test.search134.section, "");
  expect(test.search134.keyword, "");
  expect(test.search134.print_word, "");
  expect(test.search134.description, "");
  expect(test.search135.file_name, "");
  expect(test.search135.typ, 0);
  expect(test.search135.out_count, 0);
  expect(test.search135.section, "");
  expect(test.search135.keyword, "");
  expect(test.search135.print_word, "");
  expect(test.search135.description, "");
  expect(test.search136.file_name, "");
  expect(test.search136.typ, 0);
  expect(test.search136.out_count, 0);
  expect(test.search136.section, "");
  expect(test.search136.keyword, "");
  expect(test.search136.print_word, "");
  expect(test.search136.description, "");
  expect(test.search137.file_name, "");
  expect(test.search137.typ, 0);
  expect(test.search137.out_count, 0);
  expect(test.search137.section, "");
  expect(test.search137.keyword, "");
  expect(test.search137.print_word, "");
  expect(test.search137.description, "");
}

void allPropatyCheck(SearchlogJsonFile test, bool firstItemCheck)
{
  if(firstItemCheck == true) {
    expect(test.display.display, "yes");
  }
  expect(test.config.title, "<H/W情報>");
  expect(test.config.command_number, 1);
  expect(test.config.search_number, 137);
  expect(test.command1.command, "\"/usr/sbin/smartctl /dev/hda -a\"");
  expect(test.command1.command_sata, "\"/usr/sbin/smartctl /dev/sda -a -d ata\"");
  expect(test.command1.command_ssd, "\"/usr/sbin/smartctl /dev/sda -i -d ata\"");
  expect(test.command1.command_sata2, "\"/usr/sbin/smartctl /dev/sdb -a -d ata\"");
  expect(test.command1.command_ssd2, "\"/usr/sbin/smartctl /dev/sdb -i -d ata\"");
  expect(test.command1.file_name, "smart.log");
  expect(test.search1.typ, 0);
  expect(test.search1.title, "\"HDD/Memory/CPU\"");
  expect(test.search1.description_cd, 0);
  expect(test.search2.file_name, "/var/log/messages*");
  expect(test.search2.typ, 1);
  expect(test.search2.date, "yes");
  expect(test.search2.term_date, 7);
  expect(test.search2.out_count, 100);
  expect(test.search2.print_word, "\"SeekComplete\"");
  expect(test.search2.words, 2);
  expect(test.search2.search_word1, "SeekComplete");
  expect(test.search2.search_word2, "hda");
  expect(test.search2.search_word1_sata, "SeekComplete");
  expect(test.search2.search_word2_sata, "sda");
  expect(test.search2.description, "001-010");
  expect(test.search3.file_name, "/var/log/messages*");
  expect(test.search3.typ, 1);
  expect(test.search3.date, "yes");
  expect(test.search3.term_date, 7);
  expect(test.search3.out_count, 0);
  expect(test.search3.print_word, "\"cut here\"");
  expect(test.search3.words, 1);
  expect(test.search3.search_word1, "\"cut here\"");
  expect(test.search3.search_word1_sata, "\"cut here\"");
  expect(test.search3.description, "001-020");
  expect(test.search4.file_name, "/var/log/messages*");
  expect(test.search4.typ, 1);
  expect(test.search4.date, "yes");
  expect(test.search4.term_date, 7);
  expect(test.search4.out_count, 0);
  expect(test.search4.print_word, "\"Oops\"");
  expect(test.search4.words, 1);
  expect(test.search4.search_word1, "Oops");
  expect(test.search4.search_word1_sata, "Oops");
  expect(test.search4.description, "001-030");
  expect(test.search5.file_name, "sensor.log");
  expect(test.search5.typ, 5);
  expect(test.search5.date, "no");
  expect(test.search5.term_date, 0);
  expect(test.search5.out_count, 0);
  expect(test.search5.print_word, "\"CPU温度(℃)\"");
  expect(test.search5.sensor_word, "\"CPU Temp\"");
  expect(test.search5.description, "005-010");
  expect(test.search6.file_name, "sensor.log");
  expect(test.search6.typ, 5);
  expect(test.search6.date, "no");
  expect(test.search6.term_date, 0);
  expect(test.search6.out_count, 0);
  expect(test.search6.print_word, "\"CPUファン回転数(rpm)\"");
  expect(test.search6.sensor_word, "\"CPU Fan\"");
  expect(test.search6.description, "005-020");
  expect(test.search7.file_name, "dsk_used.log");
  expect(test.search7.typ, 6);
  expect(test.search7.date, "no");
  expect(test.search7.term_date, 0);
  expect(test.search7.out_count, 0);
  expect(test.search7.print_word, "\"システム領域使用率(%/GB)\"");
  expect(test.search7.partition, "\"/\"");
  expect(test.search7.description, "005-030");
  expect(test.search8.file_name, "/var/log/messages*");
  expect(test.search8.typ, 1);
  expect(test.search8.date, "no");
  expect(test.search8.term_date, 0);
  expect(test.search8.out_count, 0);
  expect(test.search8.print_word, "\"HDD接続不良\"");
  expect(test.search8.words, 2);
  expect(test.search8.search_word1, "\"resetting link\"");
  expect(test.search8.search_word2, "hda");
  expect(test.search8.search_word1_sata, "\"resetting link\"");
  expect(test.search8.search_word2_sata, "ata1");
  expect(test.search8.description, "015-010");
  expect(test.search9.file_name, "segf_cnt");
  expect(test.search9.file_name2, "segf_down");
  expect(test.search9.typ, 7);
  expect(test.search9.date, "no");
  expect(test.search9.term_date, 0);
  expect(test.search9.out_count, 0);
  expect(test.search9.print_word, "segfault");
  expect(test.search9.sensor_word, "segfault");
  expect(test.search9.description, "010-010");
  expect(test.search10.file_name, "ill_cnt");
  expect(test.search10.file_name2, "ill_down");
  expect(test.search10.typ, 7);
  expect(test.search10.date, "no");
  expect(test.search10.term_date, 0);
  expect(test.search10.out_count, 0);
  expect(test.search10.print_word, "\"不正な電源OFF\"");
  expect(test.search10.sensor_word, "shutdown");
  expect(test.search10.description, "010-020");
  expect(test.search11.file_name, "nodb_cnt");
  expect(test.search11.file_name2, "nodb_down");
  expect(test.search11.typ, 7);
  expect(test.search11.date, "no");
  expect(test.search11.term_date, 0);
  expect(test.search11.out_count, 0);
  expect(test.search11.print_word, "\"DB起動復旧\"");
  expect(test.search11.sensor_word, "database");
  expect(test.search11.description, "010-030");
  expect(test.search12.file_name, "/var/log/messages*");
  expect(test.search12.typ, 1);
  expect(test.search12.date, "no");
  expect(test.search12.term_date, 0);
  expect(test.search12.out_count, 0);
  expect(test.search12.print_word, "\"転送エラー回数\"");
  expect(test.search12.words, 1);
  expect(test.search12.search_word1, "\"ata1.00: failed command\"");
  expect(test.search12.search_word1_sata, "\"ata1.00: failed command\"");
  expect(test.search12.description, "015-020");
  expect(test.search13.file_name, "/var/log/fsckdate.log");
  expect(test.search13.typ, 11);
  expect(test.search13.out_count, 0);
  expect(test.search13.print_word, "\"ファイルシステム修復\"");
  expect(test.search13.description, "015-030");
  expect(test.search15.file_name, "/pj/tprx/tmp/rmstcls_stat.json");
  expect(test.search15.typ, 16);
  expect(test.search15.out_count, 0);
  expect(test.search15.section, "store_close");
  expect(test.search15.keyword, "file_sort");
  expect(test.search15.print_word, "\"ファイル整理処理\"");
  expect(test.search15.description, "700-010");
  expect(test.search16.file_name, "/pj/tprx/tmp/rmstcls_stat.json");
  expect(test.search16.typ, 16);
  expect(test.search16.out_count, 0);
  expect(test.search16.section, "store_close");
  expect(test.search16.keyword, "usb_ng_cnt");
  expect(test.search16.print_word, "\"USBバックアップエラー回数\"");
  expect(test.search16.description, "015-050");
  expect(test.search21.typ, 0);
  expect(test.search21.ssd, 1);
  expect(test.search21.title, "\"SSD (Lifetime)\"");
  expect(test.search21.description_cd, 0);
  expect(test.search22.file_name, "/etc/ssd_smhd.json");
  expect(test.search22.file_name2, "/pj/tprx/log/smartinfo.txt");
  expect(test.search22.typ, 8);
  expect(test.search22.ssd, 1);
  expect(test.search22.date, "no");
  expect(test.search22.term_date, 0);
  expect(test.search22.out_count, 0);
  expect(test.search22.print_word, "\"稼働開始\"");
  expect(test.search22.ssd_word, "SetDateTime");
  expect(test.search22.description, "025-010");
  expect(test.search23.file_name, "/etc/ssd_smhd.json");
  expect(test.search23.file_name2, "/pj/tprx/log/smartinfo.txt");
  expect(test.search23.typ, 8);
  expect(test.search23.ssd, 1);
  expect(test.search23.date, "no");
  expect(test.search23.term_date, 0);
  expect(test.search23.out_count, 0);
  expect(test.search23.print_word, "\"書換回数\"");
  expect(test.search23.ssd_word, "RewriteCount");
  expect(test.search23.description, "025-020");
  expect(test.search24.file_name, "/etc/ssd_smhd.json");
  expect(test.search24.file_name2, "/pj/tprx/log/smartinfo.txt");
  expect(test.search24.typ, 8);
  expect(test.search24.ssd, 1);
  expect(test.search24.date, "no");
  expect(test.search24.term_date, 0);
  expect(test.search24.out_count, 0);
  expect(test.search24.print_word, "\"寿命予測\"");
  expect(test.search24.ssd_word, "LifetimeForecast");
  expect(test.search24.description, "025-030");
  expect(test.search25.file_name, "/pj/tprx/log/smartinfo.txt");
  expect(test.search25.typ, 13);
  expect(test.search25.ssd, 1);
  expect(test.search25.out_count, 0);
  expect(test.search25.print_word, "\"ファームウェア Ver.\"");
  expect(test.search25.description, "025-040");
  expect(test.search26.file_name, "/pj/tprx/log/smartinfo.txt");
  expect(test.search26.typ, 12);
  expect(test.search26.ssd, 1);
  expect(test.search26.out_count, 0);
  expect(test.search26.print_word, "\"バッドブロック\"");
  expect(test.search26.description, "025-050");
  expect(test.search27.file_name, "/pj/tprx/log/smartinfo.txt");
  expect(test.search27.typ, 14);
  expect(test.search27.ssd, 1);
  expect(test.search27.out_count, 0);
  expect(test.search27.print_word, "\"スペアブロック\"");
  expect(test.search27.description, "025-060");
  expect(test.search28.file_name, "/pj/tprx/log/smartinfo.txt");
  expect(test.search28.typ, 15);
  expect(test.search28.ssd, 1);
  expect(test.search28.out_count, 0);
  expect(test.search28.print_word, "\"SSDID\"");
  expect(test.search28.description, "400-010");
  expect(test.search31.typ, 0);
  expect(test.search31.ssd, 10);
  expect(test.search31.title, "\"HDD (S.M.A.R.T.)\"");
  expect(test.search31.description_cd, 0);
  expect(test.search32.typ, 0);
  expect(test.search32.ssd, 11);
  expect(test.search32.title, "\"2nd HDD (S.M.A.R.T.)\"");
  expect(test.search32.description_cd, 1);
  expect(test.search33.file_name, "smart.log");
  expect(test.search33.typ, 4);
  expect(test.search33.ssd, 0);
  expect(test.search33.out_count, 0);
  expect(test.search33.print_word, "\"読み込みエラー率\"");
  expect(test.search33.print_value_ok, "\"正常\"");
  expect(test.search33.print_value_ng, "\"異常\"");
  expect(test.search33.smart_word, "Raw_Read_Error_Rate");
  expect(test.search33.smart_word_sata, "Raw_Read_Error_Rate");
  expect(test.search33.description, "02?-010");
  expect(test.search34.file_name, "smart.log");
  expect(test.search34.typ, 4);
  expect(test.search34.ssd, 0);
  expect(test.search34.out_count, 0);
  expect(test.search34.print_word, "\"代替処理済の不良セクタ数\"");
  expect(test.search34.print_value_ok, "\"正常\"");
  expect(test.search34.print_value_ng, "\"異常\"");
  expect(test.search34.smart_word, "Reallocated_Sector_Ct");
  expect(test.search34.smart_word_sata, "Reallocated_Sector_Ct");
  expect(test.search34.description, "02?-020");
  expect(test.search35.file_name, "smart.log");
  expect(test.search35.typ, 4);
  expect(test.search35.ssd, 0);
  expect(test.search35.out_count, 0);
  expect(test.search35.print_word, "\"磁気ヘッドシークエラー率\"");
  expect(test.search35.print_value_ok, "\"正常\"");
  expect(test.search35.print_value_ng, "\"異常\"");
  expect(test.search35.smart_word, "Seek_Error_Rate");
  expect(test.search35.smart_word_sata, "Seek_Error_Rate");
  expect(test.search35.description, "02?-030");
  expect(test.search36.file_name, "smart.log");
  expect(test.search36.typ, 2);
  expect(test.search36.ssd, 0);
  expect(test.search36.out_count, 0);
  expect(test.search36.print_word, "\"使用時間\"");
  expect(test.search36.smart_word, "Power_On_Hours");
  expect(test.search36.smart_word_sata, "Power_On_Hours");
  expect(test.search36.description, "02?-040");
  expect(test.search37.file_name, "smart.log");
  expect(test.search37.typ, 4);
  expect(test.search37.ssd, 0);
  expect(test.search37.out_count, 0);
  expect(test.search37.print_word, "\"スピンアップ再試行回数\"");
  expect(test.search37.print_value_ok, "\"正常\"");
  expect(test.search37.print_value_ng, "\"異常\"");
  expect(test.search37.smart_word, "Spin_Retry_Count");
  expect(test.search37.smart_word_sata, "Spin_Retry_Count");
  expect(test.search37.description, "02?-050");
  expect(test.search38.file_name, "smart.log");
  expect(test.search38.typ, 2);
  expect(test.search38.ssd, 0);
  expect(test.search38.out_count, 0);
  expect(test.search38.print_word, "\"温度\"");
  expect(test.search38.smart_word, "Temperature_Celsius");
  expect(test.search38.smart_word_sata, "Temperature_Celsius");
  expect(test.search38.description, "02?-060");
  expect(test.search39.file_name, "smart.log");
  expect(test.search39.typ, 4);
  expect(test.search39.ssd, 0);
  expect(test.search39.out_count, 0);
  expect(test.search39.print_word, "\"セクタ代替処理発生回数\"");
  expect(test.search39.print_value_ok, "\"正常\"");
  expect(test.search39.print_value_ng, "\"異常\"");
  expect(test.search39.smart_word, "Reallocated_Event_Count");
  expect(test.search39.smart_word_sata, "Reallocated_Event_Count");
  expect(test.search39.description, "02?-070");
  expect(test.search40.file_name, "smart.log");
  expect(test.search40.typ, 4);
  expect(test.search40.ssd, 0);
  expect(test.search40.out_count, 0);
  expect(test.search40.print_word, "\"代替処理待ちセクタ数\"");
  expect(test.search40.print_value_ok, "\"正常\"");
  expect(test.search40.print_value_ng, "\"異常\"");
  expect(test.search40.smart_word, "Current_Pending_Sector");
  expect(test.search40.smart_word_sata, "Current_Pending_Sector");
  expect(test.search40.description, "02?-080");
  expect(test.search41.file_name, "smart.log");
  expect(test.search41.typ, 4);
  expect(test.search41.ssd, 0);
  expect(test.search41.out_count, 0);
  expect(test.search41.print_word, "\"回復不可能なセクタ数\"");
  expect(test.search41.print_value_ok, "\"正常\"");
  expect(test.search41.print_value_ng, "\"異常\"");
  expect(test.search41.smart_word, "Offline_Uncorrectable");
  expect(test.search41.smart_word_sata, "Offline_Uncorrectable");
  expect(test.search41.description, "02?-090");
  expect(test.search42.file_name, "ATA_cnt");
  expect(test.search42.file_name2, "ATA_down");
  expect(test.search42.typ, 9);
  expect(test.search42.ssd, 0);
  expect(test.search42.out_count, 0);
  expect(test.search42.print_word, "\"HDDエラーログ数\"");
  expect(test.search42.print_word2, "\" 最終発生時間:\"");
  expect(test.search42.sensor_word, "errcount");
  expect(test.search42.description, "02?-100");
  expect(test.search42.description_cd, 5);
  expect(test.search51.typ, 0);
  expect(test.search51.ssd, 2);
  expect(test.search51.title, "\"2nd SSD (Lifetime)\"");
  expect(test.search51.description_cd, 0);
  expect(test.search52.file_name, "/etc/ssd2_smhd.json");
  expect(test.search52.file_name2, "/pj/tprx/log/smartinfo2.txt");
  expect(test.search52.typ, 8);
  expect(test.search52.ssd, 2);
  expect(test.search52.date, "no");
  expect(test.search52.term_date, 0);
  expect(test.search52.out_count, 0);
  expect(test.search52.print_word, "\"稼働開始\"");
  expect(test.search52.ssd_word, "SetDateTime");
  expect(test.search52.description, "026-010");
  expect(test.search53.file_name, "/etc/ssd2_smhd.json");
  expect(test.search53.file_name2, "/pj/tprx/log/smartinfo2.txt");
  expect(test.search53.typ, 8);
  expect(test.search53.ssd, 2);
  expect(test.search53.date, "no");
  expect(test.search53.term_date, 0);
  expect(test.search53.out_count, 0);
  expect(test.search53.print_word, "\"書換回数\"");
  expect(test.search53.ssd_word, "RewriteCount");
  expect(test.search53.description, "026-020");
  expect(test.search54.file_name, "/etc/ssd2_smhd.json");
  expect(test.search54.file_name2, "/pj/tprx/log/smartinfo2.txt");
  expect(test.search54.typ, 8);
  expect(test.search54.ssd, 2);
  expect(test.search54.date, "no");
  expect(test.search54.term_date, 0);
  expect(test.search54.out_count, 0);
  expect(test.search54.print_word, "\"寿命予測\"");
  expect(test.search54.ssd_word, "LifetimeForecast");
  expect(test.search54.description, "026-030");
  expect(test.search56.file_name, "/pj/tprx/log/smartinfo2.txt");
  expect(test.search56.typ, 12);
  expect(test.search56.ssd, 2);
  expect(test.search56.out_count, 0);
  expect(test.search56.print_word, "\"バッドブロック\"");
  expect(test.search56.description, "026-050");
  expect(test.search61.typ, 0);
  expect(test.search61.title, "\"USBデバイス活線挿抜\"");
  expect(test.search61.description_cd, 0);
  expect(test.search62.file_name, "/var/log/web21_boot.log*");
  expect(test.search62.typ, 1);
  expect(test.search62.date, "yes");
  expect(test.search62.term_date, 7);
  expect(test.search62.out_count, 0);
  expect(test.search62.print_word, "\"スキャナ(卓上)\"");
  expect(test.search62.words, 1);
  expect(test.search62.search_word1, "\"USB_CLOSE_INFORMATION\\[0\\]\"");
  expect(test.search62.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[0\\]\"");
  expect(test.search62.description, "030-010");
  expect(test.search63.file_name, "/var/log/web21_boot.log*");
  expect(test.search63.typ, 1);
  expect(test.search63.date, "yes");
  expect(test.search63.term_date, 7);
  expect(test.search63.out_count, 0);
  expect(test.search63.print_word, "\"スキャナ(タワー)\"");
  expect(test.search63.words, 1);
  expect(test.search63.search_word1, "\"USB_CLOSE_INFORMATION\\[1\\]\"");
  expect(test.search63.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[1\\]\"");
  expect(test.search63.description, "030-020");
  expect(test.search64.file_name, "/var/log/web21_boot.log*");
  expect(test.search64.typ, 1);
  expect(test.search64.date, "yes");
  expect(test.search64.term_date, 7);
  expect(test.search64.out_count, 0);
  expect(test.search64.print_word, "\"客側表示器(A)\"");
  expect(test.search64.words, 1);
  expect(test.search64.search_word1, "\"USB_CLOSE_INFORMATION\\[2\\]\"");
  expect(test.search64.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[2\\]\"");
  expect(test.search64.description, "030-030");
  expect(test.search65.file_name, "/var/log/web21_boot.log*");
  expect(test.search65.typ, 1);
  expect(test.search65.date, "yes");
  expect(test.search65.term_date, 7);
  expect(test.search65.out_count, 0);
  expect(test.search65.print_word, "\"客側表示器(B)\"");
  expect(test.search65.words, 1);
  expect(test.search65.search_word1, "\"USB_CLOSE_INFORMATION\\[3\\]\"");
  expect(test.search65.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[3\\]\"");
  expect(test.search65.description, "030-040");
  expect(test.search66.file_name, "/var/log/web21_boot.log*");
  expect(test.search66.typ, 1);
  expect(test.search66.date, "yes");
  expect(test.search66.term_date, 7);
  expect(test.search66.out_count, 0);
  expect(test.search66.print_word, "\"客側表示器(C)\"");
  expect(test.search66.words, 1);
  expect(test.search66.search_word1, "\"USB_CLOSE_INFORMATION\\[13\\]\"");
  expect(test.search66.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[13\\]\"");
  expect(test.search66.description, "030-050");
  expect(test.search67.file_name, "/var/log/web21_boot.log*");
  expect(test.search67.typ, 1);
  expect(test.search67.date, "yes");
  expect(test.search67.term_date, 7);
  expect(test.search67.out_count, 0);
  expect(test.search67.print_word, "\"タッチパネル(卓上)\"");
  expect(test.search67.words, 1);
  expect(test.search67.search_word1, "\"USB_CLOSE_INFORMATION\\[4\\]\"");
  expect(test.search67.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[4\\]\"");
  expect(test.search67.description, "030-060");
  expect(test.search68.file_name, "/var/log/web21_boot.log*");
  expect(test.search68.typ, 1);
  expect(test.search68.date, "yes");
  expect(test.search68.term_date, 7);
  expect(test.search68.out_count, 0);
  expect(test.search68.print_word, "\"タッチパネル(タワー)\"");
  expect(test.search68.words, 1);
  expect(test.search68.search_word1, "\"USB_CLOSE_INFORMATION\\[5\\]\"");
  expect(test.search68.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[5\\]\"");
  expect(test.search68.description, "030-070");
  expect(test.search69.file_name, "/var/log/web21_boot.log*");
  expect(test.search69.typ, 1);
  expect(test.search69.date, "yes");
  expect(test.search69.term_date, 7);
  expect(test.search69.out_count, 0);
  expect(test.search69.print_word, "\"メカキー(卓上)\"");
  expect(test.search69.words, 1);
  expect(test.search69.search_word1, "\"USB_CLOSE_INFORMATION\\[6\\]\"");
  expect(test.search69.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[6\\]\"");
  expect(test.search69.description, "030-080");
  expect(test.search70.file_name, "/var/log/web21_boot.log*");
  expect(test.search70.typ, 1);
  expect(test.search70.date, "yes");
  expect(test.search70.term_date, 7);
  expect(test.search70.out_count, 0);
  expect(test.search70.print_word, "\"メカキー(タワー)\"");
  expect(test.search70.words, 1);
  expect(test.search70.search_word1, "\"USB_CLOSE_INFORMATION\\[7\\]\"");
  expect(test.search70.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[7\\]\"");
  expect(test.search70.description, "030-090");
  expect(test.search71.file_name, "/var/log/web21_boot.log*");
  expect(test.search71.typ, 1);
  expect(test.search71.date, "yes");
  expect(test.search71.term_date, 7);
  expect(test.search71.out_count, 0);
  expect(test.search71.print_word, "\"磁気リーダー(卓上)\"");
  expect(test.search71.words, 1);
  expect(test.search71.search_word1, "\"USB_CLOSE_INFORMATION\\[8\\]\"");
  expect(test.search71.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[8\\]\"");
  expect(test.search71.description, "030-100");
  expect(test.search72.file_name, "/var/log/web21_boot.log*");
  expect(test.search72.typ, 1);
  expect(test.search72.date, "yes");
  expect(test.search72.term_date, 7);
  expect(test.search72.out_count, 0);
  expect(test.search72.print_word, "\"磁気リーダー(タワー)\"");
  expect(test.search72.words, 1);
  expect(test.search72.search_word1, "\"USB_CLOSE_INFORMATION\\[9\\]\"");
  expect(test.search72.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[9\\]\"");
  expect(test.search72.description, "030-110");
  expect(test.search73.file_name, "/var/log/web21_boot.log*");
  expect(test.search73.typ, 1);
  expect(test.search73.date, "yes");
  expect(test.search73.term_date, 7);
  expect(test.search73.out_count, 0);
  expect(test.search73.print_word, "\"プリンター(卓上)\"");
  expect(test.search73.words, 1);
  expect(test.search73.search_word1, "\"USB_CLOSE_INFORMATION\\[10\\]\"");
  expect(test.search73.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[10\\]\"");
  expect(test.search73.description, "030-120");
  expect(test.search74.file_name, "/var/log/web21_boot.log*");
  expect(test.search74.typ, 1);
  expect(test.search74.date, "yes");
  expect(test.search74.term_date, 7);
  expect(test.search74.out_count, 0);
  expect(test.search74.print_word, "\"プリンター(タワー)\"");
  expect(test.search74.words, 1);
  expect(test.search74.search_word1, "\"USB_CLOSE_INFORMATION\\[14\\]\"");
  expect(test.search74.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[14\\]\"");
  expect(test.search74.description, "030-130");
  expect(test.search75.file_name, "/var/log/web21_boot.log*");
  expect(test.search75.typ, 1);
  expect(test.search75.date, "yes");
  expect(test.search75.term_date, 7);
  expect(test.search75.out_count, 0);
  expect(test.search75.print_word, "\"秤\"");
  expect(test.search75.words, 1);
  expect(test.search75.search_word1, "\"USB_CLOSE_INFORMATION\\[11\\]\"");
  expect(test.search75.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[11\\]\"");
  expect(test.search75.description, "030-140");
  expect(test.search76.file_name, "/var/log/web21_boot.log*");
  expect(test.search76.typ, 1);
  expect(test.search76.date, "yes");
  expect(test.search76.term_date, 7);
  expect(test.search76.out_count, 0);
  expect(test.search76.print_word, "\"サインポール\"");
  expect(test.search76.words, 1);
  expect(test.search76.search_word1, "\"USB_CLOSE_INFORMATION\\[12\\]\"");
  expect(test.search76.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[12\\]\"");
  expect(test.search76.description, "030-150");
  expect(test.search77.file_name, "/var/log/web21_boot.log*");
  expect(test.search77.typ, 1);
  expect(test.search77.date, "yes");
  expect(test.search77.term_date, 7);
  expect(test.search77.out_count, 0);
  expect(test.search77.print_word, "\"追加タッチパネル\"");
  expect(test.search77.words, 1);
  expect(test.search77.search_word1, "\"USB_CLOSE_INFORMATION\\[15\\]\"");
  expect(test.search77.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[15\\]\"");
  expect(test.search77.description, "030-160");
  expect(test.search78.file_name, "/var/log/web21_boot.log*");
  expect(test.search78.typ, 1);
  expect(test.search78.date, "yes");
  expect(test.search78.term_date, 7);
  expect(test.search78.out_count, 0);
  expect(test.search78.print_word, "\"ＩＣリーダー\"");
  expect(test.search78.words, 1);
  expect(test.search78.search_word1, "\"USB_CLOSE_INFORMATION\\[16\\]\"");
  expect(test.search78.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[16\\]\"");
  expect(test.search78.description, "030-170");
  expect(test.search79.file_name, "/var/log/web21_boot.log*");
  expect(test.search79.typ, 1);
  expect(test.search79.date, "yes");
  expect(test.search79.term_date, 7);
  expect(test.search79.out_count, 0);
  expect(test.search79.print_word, "\"外付けＵＰＳ\"");
  expect(test.search79.words, 1);
  expect(test.search79.search_word1, "\"USB_CLOSE_INFORMATION\\[17\\]\"");
  expect(test.search79.search_word1_sata, "\"USB_CLOSE_INFORMATION\\[17\\]\"");
  expect(test.search79.description, "030-180");
  expect(test.search80.typ, 10);
  expect(test.search80.file_name, "/var/log/web21_boot.log*");
  expect(test.search80.out_count, 0);
  expect(test.search80.print_word, "\"USBカメラ\"");
  expect(test.search80.print_value_ok, "\"正常\"");
  expect(test.search80.print_value_ng, "\"異常\"");
  expect(test.search80.description, "030-190");
  expect(test.search91.file_name, "/pj/tprx/conf/version.json");
  expect(test.search91.typ, 53);
  expect(test.search91.out_count, 0);
  expect(test.search91.section, "apl");
  expect(test.search91.keyword, "ver");
  expect(test.search91.print_word, "\"APL Ver\"");
  expect(test.search91.description, "100-001");
  expect(test.search92.file_name, "/pj/tprx/conf/version.json");
  expect(test.search92.typ, 50);
  expect(test.search92.out_count, 0);
  expect(test.search92.section, "base_db");
  expect(test.search92.keyword, "ver");
  expect(test.search92.print_word, "\"DB Ver\"");
  expect(test.search92.description, "100-002");
  expect(test.search93.file_name, "/etc/version_smhd.json");
  expect(test.search93.typ, 53);
  expect(test.search93.out_count, 0);
  expect(test.search93.section, "submasterhd");
  expect(test.search93.keyword, "ver");
  expect(test.search93.print_word, "\"SMHD Ver\"");
  expect(test.search93.description, "100-003");
  expect(test.search94.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search94.typ, 50);
  expect(test.search94.out_count, 0);
  expect(test.search94.section, "fcon_version");
  expect(test.search94.keyword, "printer");
  expect(test.search94.print_word, "\"Printer Ver\"");
  expect(test.search94.description, "100-005");
  expect(test.search95.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search95.typ, 50);
  expect(test.search95.out_count, 0);
  expect(test.search95.section, "fcon_version");
  expect(test.search95.keyword, "printer2");
  expect(test.search95.print_word, "\"Printer(WebSpeezaC)\"");
  expect(test.search95.description, "100-006");
  expect(test.search96.file_name, "/pj/tprx/conf/version_ssps.json");
  expect(test.search96.typ, 50);
  expect(test.search96.out_count, 0);
  expect(test.search96.section, "self_data");
  expect(test.search96.keyword, "ver");
  expect(test.search96.print_word, "\"SELF Ver\"");
  expect(test.search96.description, "100-010");
  expect(test.search97.file_name, "/pj/tprx/conf/counter.json");
  expect(test.search97.typ, 51);
  expect(test.search97.out_count, 0);
  expect(test.search97.section, "tran");
  expect(test.search97.keyword, "sale_date");
  expect(test.search97.print_word, "\"本日営業日\"");
  expect(test.search97.description, "200-001");
  expect(test.search98.file_name, "ifconfig");
  expect(test.search98.typ, 52);
  expect(test.search98.out_count, 0);
  expect(test.search98.print_word, "\"MACアドレス\"");
  expect(test.search98.description, "400-001");
  expect(test.search99.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search99.typ, 51);
  expect(test.search99.out_count, 0);
  expect(test.search99.section, "system");
  expect(test.search99.keyword, "shpno");
  expect(test.search99.print_word, "\"店舗番号\"");
  expect(test.search99.description, "210-001");
  expect(test.search100.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search100.typ, 51);
  expect(test.search100.out_count, 0);
  expect(test.search100.section, "system");
  expect(test.search100.keyword, "macno");
  expect(test.search100.print_word, "\"レジ番号\"");
  expect(test.search100.description, "210-002");
  expect(test.search101.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search101.typ, 51);
  expect(test.search101.out_count, 0);
  expect(test.search101.section, "mm_system");
  expect(test.search101.keyword, "mm_onoff");
  expect(test.search101.print_word, "\"M/S仕様\"");
  expect(test.search101.description, "210-003");
  expect(test.search102.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search102.typ, 51);
  expect(test.search102.out_count, 0);
  expect(test.search102.section, "mm_system");
  expect(test.search102.keyword, "mm_type");
  expect(test.search102.print_word, "\"マシンタイプ\"");
  expect(test.search102.description, "210-004");
  expect(test.search103.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search103.typ, 51);
  expect(test.search103.out_count, 0);
  expect(test.search103.section, "timeserver");
  expect(test.search103.keyword, "timeserver");
  expect(test.search103.print_word, "\"時刻問い合わせ先\"");
  expect(test.search103.description, "210-011");
  expect(test.search104.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search104.typ, 51);
  expect(test.search104.out_count, 0);
  expect(test.search104.section, "mm_system");
  expect(test.search104.keyword, "sgt_cf_wt");
  expect(test.search104.print_word, "\"バックアップメモリ\"");
  expect(test.search104.description, "210-012");
  expect(test.search105.file_name, "/pj/tprx/conf/mac_info_JC_C.json");
  expect(test.search105.typ, 54);
  expect(test.search105.out_count, 0);
  expect(test.search105.section, "system");
  expect(test.search105.keyword, "macno");
  expect(test.search105.print_word, "\"レジ番号(JC)\"");
  expect(test.search105.description, "210-005");
  expect(test.search106.file_name, "/etc/hosts");
  expect(test.search106.typ, 55);
  expect(test.search106.out_count, 0);
  expect(test.search106.section, "");
  expect(test.search106.keyword, "web000001");
  expect(test.search106.print_word, "\"IPアドレス\"");
  expect(test.search106.description, "500-001");
  expect(test.search107.file_name, "/etc/sysconfig/network-scripts/ifcfg-eth0");
  expect(test.search107.typ, 56);
  expect(test.search107.out_count, 0);
  expect(test.search107.section, "");
  expect(test.search107.keyword, "NETMASK");
  expect(test.search107.print_word, "\"サブネットマスク\"");
  expect(test.search107.description, "500-002");
  expect(test.search108.file_name, "/etc/sysconfig/network-scripts/ifcfg-eth0");
  expect(test.search108.typ, 56);
  expect(test.search108.out_count, 0);
  expect(test.search108.section, "");
  expect(test.search108.keyword, "GATEWAY");
  expect(test.search108.print_word, "\"ゲートウェイアドレス\"");
  expect(test.search108.description, "500-003");
  expect(test.search109.file_name, "/etc/hosts");
  expect(test.search109.typ, 55);
  expect(test.search109.out_count, 0);
  expect(test.search109.section, "");
  expect(test.search109.keyword, "ts2100");
  expect(test.search109.print_word, "\"サーバー IPアドレス\"");
  expect(test.search109.description, "500-004");
  expect(test.search110.file_name, "/etc/hosts");
  expect(test.search110.typ, 55);
  expect(test.search110.out_count, 0);
  expect(test.search110.section, "");
  expect(test.search110.keyword, "subsrx");
  expect(test.search110.print_word, "\"サブサーバー IPアドレス\"");
  expect(test.search110.description, "500-005");
  expect(test.search111.file_name, "/etc/hosts");
  expect(test.search111.typ, 55);
  expect(test.search111.out_count, 0);
  expect(test.search111.section, "");
  expect(test.search111.keyword, "sims2100");
  expect(test.search111.print_word, "\"SIMS2100 IPアドレス\"");
  expect(test.search111.description, "500-006");
  expect(test.search112.file_name, "/etc/hosts");
  expect(test.search112.typ, 55);
  expect(test.search112.out_count, 0);
  expect(test.search112.section, "");
  expect(test.search112.keyword, "hqserver");
  expect(test.search112.print_word, "\"テキストデータ保存 IPアドレス\"");
  expect(test.search112.description, "500-007");
  expect(test.search113.file_name, "/etc/hosts");
  expect(test.search113.typ, 55);
  expect(test.search113.out_count, 0);
  expect(test.search113.section, "");
  expect(test.search113.keyword, "custserver");
  expect(test.search113.print_word, "\"顧客サーバー IPアドレス\"");
  expect(test.search113.description, "500-009");
  expect(test.search114.file_name, "/etc/resolv.conf");
  expect(test.search114.typ, 57);
  expect(test.search114.out_count, 0);
  expect(test.search114.section, "");
  expect(test.search114.keyword, 1);
  expect(test.search114.print_word, "\"DNS(1)\"");
  expect(test.search114.description, "500-010");
  expect(test.search115.file_name, "/etc/resolv.conf");
  expect(test.search115.typ, 57);
  expect(test.search115.out_count, 0);
  expect(test.search115.section, "");
  expect(test.search115.keyword, 2);
  expect(test.search115.print_word, "\"DNS(2)\"");
  expect(test.search115.description, "500-011");
  expect(test.search116.file_name, "/etc/hosts");
  expect(test.search116.typ, 55);
  expect(test.search116.out_count, 0);
  expect(test.search116.section, "");
  expect(test.search116.keyword, "timeserver");
  expect(test.search116.print_word, "\"タイムサーバー IPアドレス\"");
  expect(test.search116.description, "500-012");
  expect(test.search117.file_name, "/etc/hosts");
  expect(test.search117.typ, 55);
  expect(test.search117.out_count, 0);
  expect(test.search117.section, "");
  expect(test.search117.keyword, "centerserver_mst");
  expect(test.search117.print_word, "\"センターサーバー(マスタ) IPアドレス\"");
  expect(test.search117.description, "500-013");
  expect(test.search118.file_name, "/etc/hosts");
  expect(test.search118.typ, 55);
  expect(test.search118.out_count, 0);
  expect(test.search118.section, "");
  expect(test.search118.keyword, "centerserver_trn");
  expect(test.search118.print_word, "\"センターサーバー(実績) IPアドレス\"");
  expect(test.search118.description, "500-014");
  expect(test.search119.file_name, "/etc/hosts");
  expect(test.search119.typ, 55);
  expect(test.search119.out_count, 0);
  expect(test.search119.section, "");
  expect(test.search119.keyword, "pbchg1");
  expect(test.search119.print_word, "\"収納サーバー(Primary) IPアドレス\"");
  expect(test.search119.description, "500-016");
  expect(test.search120.file_name, "/etc/hosts");
  expect(test.search120.typ, 55);
  expect(test.search120.out_count, 0);
  expect(test.search120.section, "");
  expect(test.search120.keyword, "pbchg2");
  expect(test.search120.print_word, "\"収納サーバー(Secondary) IPアドレス\"");
  expect(test.search120.description, "500-017");
  expect(test.search121.file_name, "/etc/hosts");
  expect(test.search121.typ, 55);
  expect(test.search121.out_count, 0);
  expect(test.search121.section, "");
  expect(test.search121.keyword, "spqc");
  expect(test.search121.print_word, "\"お会計券管理 IPアドレス\"");
  expect(test.search121.description, "500-018");
  expect(test.search122.file_name, "/etc/hosts");
  expect(test.search122.typ, 55);
  expect(test.search122.out_count, 0);
  expect(test.search122.section, "");
  expect(test.search122.keyword, "spqc_subsvr");
  expect(test.search122.print_word, "\"お会計券管理サブサーバー IPアドレス\"");
  expect(test.search122.description, "500-019");
  expect(test.search123.file_name, "/etc/hosts");
  expect(test.search123.typ, 55);
  expect(test.search123.out_count, 0);
  expect(test.search123.section, "");
  expect(test.search123.keyword, "hq_2nd_server");
  expect(test.search123.print_word, "\"上位第2接続先 IPアドレス\"");
  expect(test.search123.description, "500-022");
  expect(test.search124.file_name, "/etc/hosts");
  expect(test.search124.typ, 55);
  expect(test.search124.out_count, 0);
  expect(test.search124.section, "");
  expect(test.search124.keyword, "verup_cnct");
  expect(test.search124.print_word, "\"バージョンアップファイル取得先 IPアドレス\"");
  expect(test.search124.description, "500-023");
  expect(test.search125.file_name, "/etc/hosts");
  expect(test.search125.typ, 55);
  expect(test.search125.out_count, 0);
  expect(test.search125.section, "");
  expect(test.search125.keyword, "kitchen_print1");
  expect(test.search125.print_word, "\"キッチンプリンタ1 IPアドレス\"");
  expect(test.search125.description, "500-024");
  expect(test.search126.file_name, "/etc/hosts");
  expect(test.search126.typ, 55);
  expect(test.search126.out_count, 0);
  expect(test.search126.section, "");
  expect(test.search126.keyword, "kitchen_print2");
  expect(test.search126.print_word, "\"キッチンプリンタ2 IPアドレス\"");
  expect(test.search126.description, "500-025");
  expect(test.search127.file_name, "/etc/hosts");
  expect(test.search127.typ, 55);
  expect(test.search127.out_count, 0);
  expect(test.search127.section, "");
  expect(test.search127.keyword, "bkup_save");
  expect(test.search127.print_word, "\"spec_bkup保存先 IPアドレス\"");
  expect(test.search127.description, "500-026");
  expect(test.search128.file_name, "/etc/hosts");
  expect(test.search128.typ, 55);
  expect(test.search128.out_count, 0);
  expect(test.search128.section, "");
  expect(test.search128.keyword, "histlog_server");
  expect(test.search128.print_word, "\"履歴(COPY文)マスター取込み先 IPアドレス\"");
  expect(test.search128.description, "500-027");
  expect(test.search129.file_name, "/etc/hosts");
  expect(test.search129.typ, 55);
  expect(test.search129.out_count, 0);
  expect(test.search129.section, "");
  expect(test.search129.keyword, "manage");
  expect(test.search129.print_word, "\"モニタPC IPアドレス\"");
  expect(test.search129.description, "500-029");
  expect(test.search130.file_name, "/etc/hosts");
  expect(test.search130.typ, 55);
  expect(test.search130.out_count, 0);
  expect(test.search130.section, "");
  expect(test.search130.keyword, "histlog_sub_server");
  expect(test.search130.print_word, "\"履歴(COPY文)マスター取込み先 IPアドレス(サブ)\"");
  expect(test.search130.description, "500-028");
  expect(test.search131.file_name, "/pj/tprx/conf/mac_info.json");
  expect(test.search131.typ, 51);
  expect(test.search131.out_count, 0);
  expect(test.search131.section, "system");
  expect(test.search131.keyword, "crpno");
  expect(test.search131.print_word, "\"企業番号\"");
  expect(test.search131.description, "210-100");
  expect(test.search132.file_name, "/etc/hosts");
  expect(test.search132.typ, 55);
  expect(test.search132.out_count, 0);
  expect(test.search132.section, "");
  expect(test.search132.keyword, "ts21db");
  expect(test.search132.print_word, "\"DBサーバー\"");
  expect(test.search132.description, "500-100");
  expect(test.search133.file_name, "/etc/hosts");
  expect(test.search133.typ, 55);
  expect(test.search133.out_count, 0);
  expect(test.search133.section, "");
  expect(test.search133.keyword, "tswebsvr");
  expect(test.search133.print_word, "\"TS仕様シェル実行\"");
  expect(test.search133.description, "500-101");
  expect(test.search134.file_name, "/etc/hosts");
  expect(test.search134.typ, 55);
  expect(test.search134.out_count, 0);
  expect(test.search134.section, "");
  expect(test.search134.keyword, "cust_reserve_svr");
  expect(test.search134.print_word, "\"顧客(予約)DBサーバー\"");
  expect(test.search134.description, "500-102");
  expect(test.search135.file_name, "/pj/tprx/conf/barcode_pay.json");
  expect(test.search135.typ, 51);
  expect(test.search135.out_count, 0);
  expect(test.search135.section, "barcodepay");
  expect(test.search135.keyword, "validFlg");
  expect(test.search135.print_word, "\"JPQR決済利用\"");
  expect(test.search135.description, "600-001");
  expect(test.search136.file_name, "/pj/tprx/conf/repica.json");
  expect(test.search136.typ, 51);
  expect(test.search136.out_count, 0);
  expect(test.search136.section, "normal");
  expect(test.search136.keyword, "validFlg");
  expect(test.search136.print_word, "\"レピカ利用\"");
  expect(test.search136.description, "600-002");
  expect(test.search137.file_name, "/pj/tprx/conf/repica.json");
  expect(test.search137.typ, 51);
  expect(test.search137.out_count, 0);
  expect(test.search137.section, "cocona");
  expect(test.search137.keyword, "validFlg_cocona");
  expect(test.search137.print_word, "\"cocona利用\"");
  expect(test.search137.description, "600-003");
}

