/*
 * (C)2023 TERAOKA SEIKO Co., Ltd./株式会社寺岡精工
 * CONFIDENTIAL/社外秘
 * 無断開示・無断複製禁止
 */
 
import 'package:flutter_pos/app/common/environment.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:flutter/services.dart' show rootBundle;
import 'package:flutter/cupertino.dart';
import 'package:path_provider/path_provider.dart';
import 'package:path_provider_platform_interface/path_provider_platform_interface.dart';
import 'package:path/path.dart';
import 'dart:io';
import 'unitTestParts.dart';

import '../../../../lib/app/common/cls_conf/configJsonFile.dart';
import '../../../../lib/app/common/cls_conf/qcashierJsonFile.dart';

late QcashierJsonFile qcashier;

void main(){
  qcashierJsonFile_test3();
}

void qcashierJsonFile_test3()
{
  TestWidgetsFlutterBinding.ensureInitialized();
  const String confPath = "conf/";
  const String testDir = "test_assets";
  const String fileName = "qcashier.json";
  const String section = "common";
  const String key = "item_disp";
  const defaultData = 1;
  const testData1  =  987654321;    // テストデータ1
  const testData1s = "987654321";
  const testData2  =  192834675;    // テストデータ2
  const testData2s = "192834675";
  const testData3  =  129834765;    // テストデータ3
  const testData3s = "129834765";

  group('QcashierJsonFile',()
  {
    setUp(() async{
      PathProviderPlatform.instance = MockPathProviderPlatform();
      // 当該JSONファイルをデフォルトに戻す。
      await QcashierJsonFile().setDefault();
    });

    // 各テストの事後処理
    tearDown(() async{
      // 当該JSONファイルをデフォルトに戻す。
      await QcashierJsonFile().setDefault();
    });

    test('02007_element_check_01984', () async {
      print("\n********** テスト実行：02007_element_check_01984 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.sound3;
      print(qcashier.screen56.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.sound3 = testData1;
      print(qcashier.screen56.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.sound3 = testData2;
      print(qcashier.screen56.sound3);
      expect(qcashier.screen56.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.sound3 = defalut;
      print(qcashier.screen56.sound3);
      expect(qcashier.screen56.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02007_element_check_01984 **********\n\n");
    });

    test('02008_element_check_01985', () async {
      print("\n********** テスト実行：02008_element_check_01985 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.snd_timer;
      print(qcashier.screen56.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.snd_timer = testData1;
      print(qcashier.screen56.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.snd_timer = testData2;
      print(qcashier.screen56.snd_timer);
      expect(qcashier.screen56.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.snd_timer = defalut;
      print(qcashier.screen56.snd_timer);
      expect(qcashier.screen56.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02008_element_check_01985 **********\n\n");
    });

    test('02009_element_check_01986', () async {
      print("\n********** テスト実行：02009_element_check_01986 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.timer1;
      print(qcashier.screen56.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.timer1 = testData1;
      print(qcashier.screen56.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.timer1 = testData2;
      print(qcashier.screen56.timer1);
      expect(qcashier.screen56.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.timer1 = defalut;
      print(qcashier.screen56.timer1);
      expect(qcashier.screen56.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02009_element_check_01986 **********\n\n");
    });

    test('02010_element_check_01987', () async {
      print("\n********** テスト実行：02010_element_check_01987 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.timer2;
      print(qcashier.screen56.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.timer2 = testData1;
      print(qcashier.screen56.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.timer2 = testData2;
      print(qcashier.screen56.timer2);
      expect(qcashier.screen56.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.timer2 = defalut;
      print(qcashier.screen56.timer2);
      expect(qcashier.screen56.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02010_element_check_01987 **********\n\n");
    });

    test('02011_element_check_01988', () async {
      print("\n********** テスト実行：02011_element_check_01988 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.timer3;
      print(qcashier.screen56.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.timer3 = testData1;
      print(qcashier.screen56.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.timer3 = testData2;
      print(qcashier.screen56.timer3);
      expect(qcashier.screen56.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.timer3 = defalut;
      print(qcashier.screen56.timer3);
      expect(qcashier.screen56.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02011_element_check_01988 **********\n\n");
    });

    test('02012_element_check_01989', () async {
      print("\n********** テスト実行：02012_element_check_01989 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.dsp_flg1;
      print(qcashier.screen56.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.dsp_flg1 = testData1;
      print(qcashier.screen56.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.dsp_flg1 = testData2;
      print(qcashier.screen56.dsp_flg1);
      expect(qcashier.screen56.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.dsp_flg1 = defalut;
      print(qcashier.screen56.dsp_flg1);
      expect(qcashier.screen56.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02012_element_check_01989 **********\n\n");
    });

    test('02013_element_check_01990', () async {
      print("\n********** テスト実行：02013_element_check_01990 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.dsp_flg2;
      print(qcashier.screen56.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.dsp_flg2 = testData1;
      print(qcashier.screen56.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.dsp_flg2 = testData2;
      print(qcashier.screen56.dsp_flg2);
      expect(qcashier.screen56.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.dsp_flg2 = defalut;
      print(qcashier.screen56.dsp_flg2);
      expect(qcashier.screen56.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02013_element_check_01990 **********\n\n");
    });

    test('02014_element_check_01991', () async {
      print("\n********** テスト実行：02014_element_check_01991 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.movie01_ext;
      print(qcashier.screen56.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.movie01_ext = testData1;
      print(qcashier.screen56.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.movie01_ext = testData2;
      print(qcashier.screen56.movie01_ext);
      expect(qcashier.screen56.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.movie01_ext = defalut;
      print(qcashier.screen56.movie01_ext);
      expect(qcashier.screen56.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02014_element_check_01991 **********\n\n");
    });

    test('02015_element_check_01992', () async {
      print("\n********** テスト実行：02015_element_check_01992 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.movie02_ext;
      print(qcashier.screen56.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.movie02_ext = testData1;
      print(qcashier.screen56.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.movie02_ext = testData2;
      print(qcashier.screen56.movie02_ext);
      expect(qcashier.screen56.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.movie02_ext = defalut;
      print(qcashier.screen56.movie02_ext);
      expect(qcashier.screen56.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02015_element_check_01992 **********\n\n");
    });

    test('02016_element_check_01993', () async {
      print("\n********** テスト実行：02016_element_check_01993 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.movie03_ext;
      print(qcashier.screen56.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.movie03_ext = testData1;
      print(qcashier.screen56.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.movie03_ext = testData2;
      print(qcashier.screen56.movie03_ext);
      expect(qcashier.screen56.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.movie03_ext = defalut;
      print(qcashier.screen56.movie03_ext);
      expect(qcashier.screen56.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02016_element_check_01993 **********\n\n");
    });

    test('02017_element_check_01994', () async {
      print("\n********** テスト実行：02017_element_check_01994 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.movie04_ext;
      print(qcashier.screen56.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.movie04_ext = testData1;
      print(qcashier.screen56.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.movie04_ext = testData2;
      print(qcashier.screen56.movie04_ext);
      expect(qcashier.screen56.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.movie04_ext = defalut;
      print(qcashier.screen56.movie04_ext);
      expect(qcashier.screen56.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02017_element_check_01994 **********\n\n");
    });

    test('02018_element_check_01995', () async {
      print("\n********** テスト実行：02018_element_check_01995 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line_title;
      print(qcashier.screen56.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line_title = testData1s;
      print(qcashier.screen56.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line_title = testData2s;
      print(qcashier.screen56.line_title);
      expect(qcashier.screen56.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line_title = defalut;
      print(qcashier.screen56.line_title);
      expect(qcashier.screen56.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02018_element_check_01995 **********\n\n");
    });

    test('02019_element_check_01996', () async {
      print("\n********** テスト実行：02019_element_check_01996 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line_title_ex;
      print(qcashier.screen56.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line_title_ex = testData1s;
      print(qcashier.screen56.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line_title_ex = testData2s;
      print(qcashier.screen56.line_title_ex);
      expect(qcashier.screen56.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line_title_ex = defalut;
      print(qcashier.screen56.line_title_ex);
      expect(qcashier.screen56.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02019_element_check_01996 **********\n\n");
    });

    test('02020_element_check_01997', () async {
      print("\n********** テスト実行：02020_element_check_01997 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line1;
      print(qcashier.screen56.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line1 = testData1s;
      print(qcashier.screen56.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line1 = testData2s;
      print(qcashier.screen56.line1);
      expect(qcashier.screen56.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line1 = defalut;
      print(qcashier.screen56.line1);
      expect(qcashier.screen56.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02020_element_check_01997 **********\n\n");
    });

    test('02021_element_check_01998', () async {
      print("\n********** テスト実行：02021_element_check_01998 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line2;
      print(qcashier.screen56.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line2 = testData1s;
      print(qcashier.screen56.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line2 = testData2s;
      print(qcashier.screen56.line2);
      expect(qcashier.screen56.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line2 = defalut;
      print(qcashier.screen56.line2);
      expect(qcashier.screen56.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02021_element_check_01998 **********\n\n");
    });

    test('02022_element_check_01999', () async {
      print("\n********** テスト実行：02022_element_check_01999 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line3;
      print(qcashier.screen56.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line3 = testData1s;
      print(qcashier.screen56.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line3 = testData2s;
      print(qcashier.screen56.line3);
      expect(qcashier.screen56.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line3 = defalut;
      print(qcashier.screen56.line3);
      expect(qcashier.screen56.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02022_element_check_01999 **********\n\n");
    });

    test('02023_element_check_02000', () async {
      print("\n********** テスト実行：02023_element_check_02000 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line4;
      print(qcashier.screen56.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line4 = testData1s;
      print(qcashier.screen56.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line4 = testData2s;
      print(qcashier.screen56.line4);
      expect(qcashier.screen56.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line4 = defalut;
      print(qcashier.screen56.line4);
      expect(qcashier.screen56.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02023_element_check_02000 **********\n\n");
    });

    test('02024_element_check_02001', () async {
      print("\n********** テスト実行：02024_element_check_02001 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line1_ex;
      print(qcashier.screen56.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line1_ex = testData1s;
      print(qcashier.screen56.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line1_ex = testData2s;
      print(qcashier.screen56.line1_ex);
      expect(qcashier.screen56.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line1_ex = defalut;
      print(qcashier.screen56.line1_ex);
      expect(qcashier.screen56.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02024_element_check_02001 **********\n\n");
    });

    test('02025_element_check_02002', () async {
      print("\n********** テスト実行：02025_element_check_02002 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line2_ex;
      print(qcashier.screen56.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line2_ex = testData1s;
      print(qcashier.screen56.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line2_ex = testData2s;
      print(qcashier.screen56.line2_ex);
      expect(qcashier.screen56.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line2_ex = defalut;
      print(qcashier.screen56.line2_ex);
      expect(qcashier.screen56.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02025_element_check_02002 **********\n\n");
    });

    test('02026_element_check_02003', () async {
      print("\n********** テスト実行：02026_element_check_02003 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line3_ex;
      print(qcashier.screen56.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line3_ex = testData1s;
      print(qcashier.screen56.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line3_ex = testData2s;
      print(qcashier.screen56.line3_ex);
      expect(qcashier.screen56.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line3_ex = defalut;
      print(qcashier.screen56.line3_ex);
      expect(qcashier.screen56.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02026_element_check_02003 **********\n\n");
    });

    test('02027_element_check_02004', () async {
      print("\n********** テスト実行：02027_element_check_02004 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.line4_ex;
      print(qcashier.screen56.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.line4_ex = testData1s;
      print(qcashier.screen56.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.line4_ex = testData2s;
      print(qcashier.screen56.line4_ex);
      expect(qcashier.screen56.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.line4_ex = defalut;
      print(qcashier.screen56.line4_ex);
      expect(qcashier.screen56.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02027_element_check_02004 **********\n\n");
    });

    test('02028_element_check_02005', () async {
      print("\n********** テスト実行：02028_element_check_02005 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.sound_led1;
      print(qcashier.screen56.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.sound_led1 = testData1;
      print(qcashier.screen56.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.sound_led1 = testData2;
      print(qcashier.screen56.sound_led1);
      expect(qcashier.screen56.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.sound_led1 = defalut;
      print(qcashier.screen56.sound_led1);
      expect(qcashier.screen56.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02028_element_check_02005 **********\n\n");
    });

    test('02029_element_check_02006', () async {
      print("\n********** テスト実行：02029_element_check_02006 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.sound_led2;
      print(qcashier.screen56.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.sound_led2 = testData1;
      print(qcashier.screen56.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.sound_led2 = testData2;
      print(qcashier.screen56.sound_led2);
      expect(qcashier.screen56.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.sound_led2 = defalut;
      print(qcashier.screen56.sound_led2);
      expect(qcashier.screen56.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02029_element_check_02006 **********\n\n");
    });

    test('02030_element_check_02007', () async {
      print("\n********** テスト実行：02030_element_check_02007 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen56.sound_led3;
      print(qcashier.screen56.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen56.sound_led3 = testData1;
      print(qcashier.screen56.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen56.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen56.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen56.sound_led3 = testData2;
      print(qcashier.screen56.sound_led3);
      expect(qcashier.screen56.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen56.sound_led3 = defalut;
      print(qcashier.screen56.sound_led3);
      expect(qcashier.screen56.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen56.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02030_element_check_02007 **********\n\n");
    });

    test('02031_element_check_02008', () async {
      print("\n********** テスト実行：02031_element_check_02008 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.title;
      print(qcashier.screen57.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.title = testData1s;
      print(qcashier.screen57.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.title = testData2s;
      print(qcashier.screen57.title);
      expect(qcashier.screen57.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.title = defalut;
      print(qcashier.screen57.title);
      expect(qcashier.screen57.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02031_element_check_02008 **********\n\n");
    });

    test('02032_element_check_02009', () async {
      print("\n********** テスト実行：02032_element_check_02009 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.msg1;
      print(qcashier.screen57.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.msg1 = testData1s;
      print(qcashier.screen57.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.msg1 = testData2s;
      print(qcashier.screen57.msg1);
      expect(qcashier.screen57.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.msg1 = defalut;
      print(qcashier.screen57.msg1);
      expect(qcashier.screen57.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02032_element_check_02009 **********\n\n");
    });

    test('02033_element_check_02010', () async {
      print("\n********** テスト実行：02033_element_check_02010 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.msg2;
      print(qcashier.screen57.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.msg2 = testData1s;
      print(qcashier.screen57.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.msg2 = testData2s;
      print(qcashier.screen57.msg2);
      expect(qcashier.screen57.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.msg2 = defalut;
      print(qcashier.screen57.msg2);
      expect(qcashier.screen57.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02033_element_check_02010 **********\n\n");
    });

    test('02034_element_check_02011', () async {
      print("\n********** テスト実行：02034_element_check_02011 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.msg1_size;
      print(qcashier.screen57.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.msg1_size = testData1;
      print(qcashier.screen57.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.msg1_size = testData2;
      print(qcashier.screen57.msg1_size);
      expect(qcashier.screen57.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.msg1_size = defalut;
      print(qcashier.screen57.msg1_size);
      expect(qcashier.screen57.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02034_element_check_02011 **********\n\n");
    });

    test('02035_element_check_02012', () async {
      print("\n********** テスト実行：02035_element_check_02012 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.msg2_size;
      print(qcashier.screen57.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.msg2_size = testData1;
      print(qcashier.screen57.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.msg2_size = testData2;
      print(qcashier.screen57.msg2_size);
      expect(qcashier.screen57.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.msg2_size = defalut;
      print(qcashier.screen57.msg2_size);
      expect(qcashier.screen57.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02035_element_check_02012 **********\n\n");
    });

    test('02036_element_check_02013', () async {
      print("\n********** テスト実行：02036_element_check_02013 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.sound1;
      print(qcashier.screen57.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.sound1 = testData1;
      print(qcashier.screen57.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.sound1 = testData2;
      print(qcashier.screen57.sound1);
      expect(qcashier.screen57.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.sound1 = defalut;
      print(qcashier.screen57.sound1);
      expect(qcashier.screen57.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02036_element_check_02013 **********\n\n");
    });

    test('02037_element_check_02014', () async {
      print("\n********** テスト実行：02037_element_check_02014 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.sound2;
      print(qcashier.screen57.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.sound2 = testData1;
      print(qcashier.screen57.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.sound2 = testData2;
      print(qcashier.screen57.sound2);
      expect(qcashier.screen57.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.sound2 = defalut;
      print(qcashier.screen57.sound2);
      expect(qcashier.screen57.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02037_element_check_02014 **********\n\n");
    });

    test('02038_element_check_02015', () async {
      print("\n********** テスト実行：02038_element_check_02015 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.sound3;
      print(qcashier.screen57.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.sound3 = testData1s;
      print(qcashier.screen57.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.sound3 = testData2s;
      print(qcashier.screen57.sound3);
      expect(qcashier.screen57.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.sound3 = defalut;
      print(qcashier.screen57.sound3);
      expect(qcashier.screen57.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02038_element_check_02015 **********\n\n");
    });

    test('02039_element_check_02016', () async {
      print("\n********** テスト実行：02039_element_check_02016 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.snd_timer;
      print(qcashier.screen57.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.snd_timer = testData1;
      print(qcashier.screen57.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.snd_timer = testData2;
      print(qcashier.screen57.snd_timer);
      expect(qcashier.screen57.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.snd_timer = defalut;
      print(qcashier.screen57.snd_timer);
      expect(qcashier.screen57.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02039_element_check_02016 **********\n\n");
    });

    test('02040_element_check_02017', () async {
      print("\n********** テスト実行：02040_element_check_02017 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.timer1;
      print(qcashier.screen57.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.timer1 = testData1;
      print(qcashier.screen57.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.timer1 = testData2;
      print(qcashier.screen57.timer1);
      expect(qcashier.screen57.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.timer1 = defalut;
      print(qcashier.screen57.timer1);
      expect(qcashier.screen57.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02040_element_check_02017 **********\n\n");
    });

    test('02041_element_check_02018', () async {
      print("\n********** テスト実行：02041_element_check_02018 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.timer2;
      print(qcashier.screen57.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.timer2 = testData1;
      print(qcashier.screen57.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.timer2 = testData2;
      print(qcashier.screen57.timer2);
      expect(qcashier.screen57.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.timer2 = defalut;
      print(qcashier.screen57.timer2);
      expect(qcashier.screen57.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02041_element_check_02018 **********\n\n");
    });

    test('02042_element_check_02019', () async {
      print("\n********** テスト実行：02042_element_check_02019 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.timer3;
      print(qcashier.screen57.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.timer3 = testData1;
      print(qcashier.screen57.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.timer3 = testData2;
      print(qcashier.screen57.timer3);
      expect(qcashier.screen57.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.timer3 = defalut;
      print(qcashier.screen57.timer3);
      expect(qcashier.screen57.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02042_element_check_02019 **********\n\n");
    });

    test('02043_element_check_02020', () async {
      print("\n********** テスト実行：02043_element_check_02020 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.dsp_flg1;
      print(qcashier.screen57.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.dsp_flg1 = testData1;
      print(qcashier.screen57.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.dsp_flg1 = testData2;
      print(qcashier.screen57.dsp_flg1);
      expect(qcashier.screen57.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.dsp_flg1 = defalut;
      print(qcashier.screen57.dsp_flg1);
      expect(qcashier.screen57.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02043_element_check_02020 **********\n\n");
    });

    test('02044_element_check_02021', () async {
      print("\n********** テスト実行：02044_element_check_02021 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.dsp_flg2;
      print(qcashier.screen57.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.dsp_flg2 = testData1;
      print(qcashier.screen57.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.dsp_flg2 = testData2;
      print(qcashier.screen57.dsp_flg2);
      expect(qcashier.screen57.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.dsp_flg2 = defalut;
      print(qcashier.screen57.dsp_flg2);
      expect(qcashier.screen57.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02044_element_check_02021 **********\n\n");
    });

    test('02045_element_check_02022', () async {
      print("\n********** テスト実行：02045_element_check_02022 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.movie01_ext;
      print(qcashier.screen57.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.movie01_ext = testData1;
      print(qcashier.screen57.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.movie01_ext = testData2;
      print(qcashier.screen57.movie01_ext);
      expect(qcashier.screen57.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.movie01_ext = defalut;
      print(qcashier.screen57.movie01_ext);
      expect(qcashier.screen57.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02045_element_check_02022 **********\n\n");
    });

    test('02046_element_check_02023', () async {
      print("\n********** テスト実行：02046_element_check_02023 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.movie02_ext;
      print(qcashier.screen57.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.movie02_ext = testData1;
      print(qcashier.screen57.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.movie02_ext = testData2;
      print(qcashier.screen57.movie02_ext);
      expect(qcashier.screen57.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.movie02_ext = defalut;
      print(qcashier.screen57.movie02_ext);
      expect(qcashier.screen57.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02046_element_check_02023 **********\n\n");
    });

    test('02047_element_check_02024', () async {
      print("\n********** テスト実行：02047_element_check_02024 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.movie03_ext;
      print(qcashier.screen57.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.movie03_ext = testData1;
      print(qcashier.screen57.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.movie03_ext = testData2;
      print(qcashier.screen57.movie03_ext);
      expect(qcashier.screen57.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.movie03_ext = defalut;
      print(qcashier.screen57.movie03_ext);
      expect(qcashier.screen57.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02047_element_check_02024 **********\n\n");
    });

    test('02048_element_check_02025', () async {
      print("\n********** テスト実行：02048_element_check_02025 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.movie04_ext;
      print(qcashier.screen57.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.movie04_ext = testData1;
      print(qcashier.screen57.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.movie04_ext = testData2;
      print(qcashier.screen57.movie04_ext);
      expect(qcashier.screen57.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.movie04_ext = defalut;
      print(qcashier.screen57.movie04_ext);
      expect(qcashier.screen57.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02048_element_check_02025 **********\n\n");
    });

    test('02049_element_check_02026', () async {
      print("\n********** テスト実行：02049_element_check_02026 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line_title;
      print(qcashier.screen57.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line_title = testData1s;
      print(qcashier.screen57.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line_title = testData2s;
      print(qcashier.screen57.line_title);
      expect(qcashier.screen57.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line_title = defalut;
      print(qcashier.screen57.line_title);
      expect(qcashier.screen57.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02049_element_check_02026 **********\n\n");
    });

    test('02050_element_check_02027', () async {
      print("\n********** テスト実行：02050_element_check_02027 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line_title_ex;
      print(qcashier.screen57.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line_title_ex = testData1s;
      print(qcashier.screen57.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line_title_ex = testData2s;
      print(qcashier.screen57.line_title_ex);
      expect(qcashier.screen57.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line_title_ex = defalut;
      print(qcashier.screen57.line_title_ex);
      expect(qcashier.screen57.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02050_element_check_02027 **********\n\n");
    });

    test('02051_element_check_02028', () async {
      print("\n********** テスト実行：02051_element_check_02028 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line1;
      print(qcashier.screen57.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line1 = testData1s;
      print(qcashier.screen57.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line1 = testData2s;
      print(qcashier.screen57.line1);
      expect(qcashier.screen57.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line1 = defalut;
      print(qcashier.screen57.line1);
      expect(qcashier.screen57.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02051_element_check_02028 **********\n\n");
    });

    test('02052_element_check_02029', () async {
      print("\n********** テスト実行：02052_element_check_02029 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line2;
      print(qcashier.screen57.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line2 = testData1s;
      print(qcashier.screen57.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line2 = testData2s;
      print(qcashier.screen57.line2);
      expect(qcashier.screen57.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line2 = defalut;
      print(qcashier.screen57.line2);
      expect(qcashier.screen57.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02052_element_check_02029 **********\n\n");
    });

    test('02053_element_check_02030', () async {
      print("\n********** テスト実行：02053_element_check_02030 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line3;
      print(qcashier.screen57.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line3 = testData1s;
      print(qcashier.screen57.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line3 = testData2s;
      print(qcashier.screen57.line3);
      expect(qcashier.screen57.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line3 = defalut;
      print(qcashier.screen57.line3);
      expect(qcashier.screen57.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02053_element_check_02030 **********\n\n");
    });

    test('02054_element_check_02031', () async {
      print("\n********** テスト実行：02054_element_check_02031 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line4;
      print(qcashier.screen57.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line4 = testData1s;
      print(qcashier.screen57.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line4 = testData2s;
      print(qcashier.screen57.line4);
      expect(qcashier.screen57.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line4 = defalut;
      print(qcashier.screen57.line4);
      expect(qcashier.screen57.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02054_element_check_02031 **********\n\n");
    });

    test('02055_element_check_02032', () async {
      print("\n********** テスト実行：02055_element_check_02032 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line1_ex;
      print(qcashier.screen57.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line1_ex = testData1s;
      print(qcashier.screen57.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line1_ex = testData2s;
      print(qcashier.screen57.line1_ex);
      expect(qcashier.screen57.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line1_ex = defalut;
      print(qcashier.screen57.line1_ex);
      expect(qcashier.screen57.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02055_element_check_02032 **********\n\n");
    });

    test('02056_element_check_02033', () async {
      print("\n********** テスト実行：02056_element_check_02033 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line2_ex;
      print(qcashier.screen57.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line2_ex = testData1s;
      print(qcashier.screen57.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line2_ex = testData2s;
      print(qcashier.screen57.line2_ex);
      expect(qcashier.screen57.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line2_ex = defalut;
      print(qcashier.screen57.line2_ex);
      expect(qcashier.screen57.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02056_element_check_02033 **********\n\n");
    });

    test('02057_element_check_02034', () async {
      print("\n********** テスト実行：02057_element_check_02034 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line3_ex;
      print(qcashier.screen57.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line3_ex = testData1s;
      print(qcashier.screen57.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line3_ex = testData2s;
      print(qcashier.screen57.line3_ex);
      expect(qcashier.screen57.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line3_ex = defalut;
      print(qcashier.screen57.line3_ex);
      expect(qcashier.screen57.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02057_element_check_02034 **********\n\n");
    });

    test('02058_element_check_02035', () async {
      print("\n********** テスト実行：02058_element_check_02035 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.line4_ex;
      print(qcashier.screen57.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.line4_ex = testData1s;
      print(qcashier.screen57.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.line4_ex = testData2s;
      print(qcashier.screen57.line4_ex);
      expect(qcashier.screen57.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.line4_ex = defalut;
      print(qcashier.screen57.line4_ex);
      expect(qcashier.screen57.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02058_element_check_02035 **********\n\n");
    });

    test('02059_element_check_02036', () async {
      print("\n********** テスト実行：02059_element_check_02036 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.sound_led1;
      print(qcashier.screen57.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.sound_led1 = testData1;
      print(qcashier.screen57.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.sound_led1 = testData2;
      print(qcashier.screen57.sound_led1);
      expect(qcashier.screen57.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.sound_led1 = defalut;
      print(qcashier.screen57.sound_led1);
      expect(qcashier.screen57.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02059_element_check_02036 **********\n\n");
    });

    test('02060_element_check_02037', () async {
      print("\n********** テスト実行：02060_element_check_02037 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.sound_led2;
      print(qcashier.screen57.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.sound_led2 = testData1;
      print(qcashier.screen57.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.sound_led2 = testData2;
      print(qcashier.screen57.sound_led2);
      expect(qcashier.screen57.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.sound_led2 = defalut;
      print(qcashier.screen57.sound_led2);
      expect(qcashier.screen57.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02060_element_check_02037 **********\n\n");
    });

    test('02061_element_check_02038', () async {
      print("\n********** テスト実行：02061_element_check_02038 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen57.sound_led3;
      print(qcashier.screen57.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen57.sound_led3 = testData1s;
      print(qcashier.screen57.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen57.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen57.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen57.sound_led3 = testData2s;
      print(qcashier.screen57.sound_led3);
      expect(qcashier.screen57.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen57.sound_led3 = defalut;
      print(qcashier.screen57.sound_led3);
      expect(qcashier.screen57.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen57.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02061_element_check_02038 **********\n\n");
    });

    test('02062_element_check_02039', () async {
      print("\n********** テスト実行：02062_element_check_02039 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.title;
      print(qcashier.screen58.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.title = testData1s;
      print(qcashier.screen58.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.title = testData2s;
      print(qcashier.screen58.title);
      expect(qcashier.screen58.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.title = defalut;
      print(qcashier.screen58.title);
      expect(qcashier.screen58.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02062_element_check_02039 **********\n\n");
    });

    test('02063_element_check_02040', () async {
      print("\n********** テスト実行：02063_element_check_02040 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.msg1;
      print(qcashier.screen58.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.msg1 = testData1s;
      print(qcashier.screen58.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.msg1 = testData2s;
      print(qcashier.screen58.msg1);
      expect(qcashier.screen58.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.msg1 = defalut;
      print(qcashier.screen58.msg1);
      expect(qcashier.screen58.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02063_element_check_02040 **********\n\n");
    });

    test('02064_element_check_02041', () async {
      print("\n********** テスト実行：02064_element_check_02041 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.msg2;
      print(qcashier.screen58.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.msg2 = testData1s;
      print(qcashier.screen58.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.msg2 = testData2s;
      print(qcashier.screen58.msg2);
      expect(qcashier.screen58.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.msg2 = defalut;
      print(qcashier.screen58.msg2);
      expect(qcashier.screen58.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02064_element_check_02041 **********\n\n");
    });

    test('02065_element_check_02042', () async {
      print("\n********** テスト実行：02065_element_check_02042 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.msg1_size;
      print(qcashier.screen58.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.msg1_size = testData1;
      print(qcashier.screen58.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.msg1_size = testData2;
      print(qcashier.screen58.msg1_size);
      expect(qcashier.screen58.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.msg1_size = defalut;
      print(qcashier.screen58.msg1_size);
      expect(qcashier.screen58.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02065_element_check_02042 **********\n\n");
    });

    test('02066_element_check_02043', () async {
      print("\n********** テスト実行：02066_element_check_02043 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.msg2_size;
      print(qcashier.screen58.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.msg2_size = testData1;
      print(qcashier.screen58.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.msg2_size = testData2;
      print(qcashier.screen58.msg2_size);
      expect(qcashier.screen58.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.msg2_size = defalut;
      print(qcashier.screen58.msg2_size);
      expect(qcashier.screen58.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02066_element_check_02043 **********\n\n");
    });

    test('02067_element_check_02044', () async {
      print("\n********** テスト実行：02067_element_check_02044 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.sound1;
      print(qcashier.screen58.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.sound1 = testData1;
      print(qcashier.screen58.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.sound1 = testData2;
      print(qcashier.screen58.sound1);
      expect(qcashier.screen58.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.sound1 = defalut;
      print(qcashier.screen58.sound1);
      expect(qcashier.screen58.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02067_element_check_02044 **********\n\n");
    });

    test('02068_element_check_02045', () async {
      print("\n********** テスト実行：02068_element_check_02045 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.sound2;
      print(qcashier.screen58.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.sound2 = testData1;
      print(qcashier.screen58.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.sound2 = testData2;
      print(qcashier.screen58.sound2);
      expect(qcashier.screen58.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.sound2 = defalut;
      print(qcashier.screen58.sound2);
      expect(qcashier.screen58.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02068_element_check_02045 **********\n\n");
    });

    test('02069_element_check_02046', () async {
      print("\n********** テスト実行：02069_element_check_02046 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.sound3;
      print(qcashier.screen58.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.sound3 = testData1;
      print(qcashier.screen58.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.sound3 = testData2;
      print(qcashier.screen58.sound3);
      expect(qcashier.screen58.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.sound3 = defalut;
      print(qcashier.screen58.sound3);
      expect(qcashier.screen58.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02069_element_check_02046 **********\n\n");
    });

    test('02070_element_check_02047', () async {
      print("\n********** テスト実行：02070_element_check_02047 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.snd_timer;
      print(qcashier.screen58.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.snd_timer = testData1;
      print(qcashier.screen58.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.snd_timer = testData2;
      print(qcashier.screen58.snd_timer);
      expect(qcashier.screen58.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.snd_timer = defalut;
      print(qcashier.screen58.snd_timer);
      expect(qcashier.screen58.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02070_element_check_02047 **********\n\n");
    });

    test('02071_element_check_02048', () async {
      print("\n********** テスト実行：02071_element_check_02048 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.timer1;
      print(qcashier.screen58.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.timer1 = testData1;
      print(qcashier.screen58.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.timer1 = testData2;
      print(qcashier.screen58.timer1);
      expect(qcashier.screen58.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.timer1 = defalut;
      print(qcashier.screen58.timer1);
      expect(qcashier.screen58.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02071_element_check_02048 **********\n\n");
    });

    test('02072_element_check_02049', () async {
      print("\n********** テスト実行：02072_element_check_02049 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.timer2;
      print(qcashier.screen58.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.timer2 = testData1;
      print(qcashier.screen58.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.timer2 = testData2;
      print(qcashier.screen58.timer2);
      expect(qcashier.screen58.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.timer2 = defalut;
      print(qcashier.screen58.timer2);
      expect(qcashier.screen58.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02072_element_check_02049 **********\n\n");
    });

    test('02073_element_check_02050', () async {
      print("\n********** テスト実行：02073_element_check_02050 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.timer3;
      print(qcashier.screen58.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.timer3 = testData1;
      print(qcashier.screen58.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.timer3 = testData2;
      print(qcashier.screen58.timer3);
      expect(qcashier.screen58.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.timer3 = defalut;
      print(qcashier.screen58.timer3);
      expect(qcashier.screen58.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02073_element_check_02050 **********\n\n");
    });

    test('02074_element_check_02051', () async {
      print("\n********** テスト実行：02074_element_check_02051 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.dsp_flg1;
      print(qcashier.screen58.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.dsp_flg1 = testData1;
      print(qcashier.screen58.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.dsp_flg1 = testData2;
      print(qcashier.screen58.dsp_flg1);
      expect(qcashier.screen58.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.dsp_flg1 = defalut;
      print(qcashier.screen58.dsp_flg1);
      expect(qcashier.screen58.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02074_element_check_02051 **********\n\n");
    });

    test('02075_element_check_02052', () async {
      print("\n********** テスト実行：02075_element_check_02052 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.dsp_flg2;
      print(qcashier.screen58.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.dsp_flg2 = testData1;
      print(qcashier.screen58.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.dsp_flg2 = testData2;
      print(qcashier.screen58.dsp_flg2);
      expect(qcashier.screen58.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.dsp_flg2 = defalut;
      print(qcashier.screen58.dsp_flg2);
      expect(qcashier.screen58.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02075_element_check_02052 **********\n\n");
    });

    test('02076_element_check_02053', () async {
      print("\n********** テスト実行：02076_element_check_02053 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.movie01_ext;
      print(qcashier.screen58.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.movie01_ext = testData1;
      print(qcashier.screen58.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.movie01_ext = testData2;
      print(qcashier.screen58.movie01_ext);
      expect(qcashier.screen58.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.movie01_ext = defalut;
      print(qcashier.screen58.movie01_ext);
      expect(qcashier.screen58.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02076_element_check_02053 **********\n\n");
    });

    test('02077_element_check_02054', () async {
      print("\n********** テスト実行：02077_element_check_02054 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.movie02_ext;
      print(qcashier.screen58.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.movie02_ext = testData1;
      print(qcashier.screen58.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.movie02_ext = testData2;
      print(qcashier.screen58.movie02_ext);
      expect(qcashier.screen58.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.movie02_ext = defalut;
      print(qcashier.screen58.movie02_ext);
      expect(qcashier.screen58.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02077_element_check_02054 **********\n\n");
    });

    test('02078_element_check_02055', () async {
      print("\n********** テスト実行：02078_element_check_02055 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.movie03_ext;
      print(qcashier.screen58.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.movie03_ext = testData1;
      print(qcashier.screen58.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.movie03_ext = testData2;
      print(qcashier.screen58.movie03_ext);
      expect(qcashier.screen58.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.movie03_ext = defalut;
      print(qcashier.screen58.movie03_ext);
      expect(qcashier.screen58.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02078_element_check_02055 **********\n\n");
    });

    test('02079_element_check_02056', () async {
      print("\n********** テスト実行：02079_element_check_02056 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.movie04_ext;
      print(qcashier.screen58.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.movie04_ext = testData1;
      print(qcashier.screen58.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.movie04_ext = testData2;
      print(qcashier.screen58.movie04_ext);
      expect(qcashier.screen58.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.movie04_ext = defalut;
      print(qcashier.screen58.movie04_ext);
      expect(qcashier.screen58.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02079_element_check_02056 **********\n\n");
    });

    test('02080_element_check_02057', () async {
      print("\n********** テスト実行：02080_element_check_02057 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line_title;
      print(qcashier.screen58.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line_title = testData1s;
      print(qcashier.screen58.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line_title = testData2s;
      print(qcashier.screen58.line_title);
      expect(qcashier.screen58.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line_title = defalut;
      print(qcashier.screen58.line_title);
      expect(qcashier.screen58.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02080_element_check_02057 **********\n\n");
    });

    test('02081_element_check_02058', () async {
      print("\n********** テスト実行：02081_element_check_02058 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line_title_ex;
      print(qcashier.screen58.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line_title_ex = testData1s;
      print(qcashier.screen58.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line_title_ex = testData2s;
      print(qcashier.screen58.line_title_ex);
      expect(qcashier.screen58.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line_title_ex = defalut;
      print(qcashier.screen58.line_title_ex);
      expect(qcashier.screen58.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02081_element_check_02058 **********\n\n");
    });

    test('02082_element_check_02059', () async {
      print("\n********** テスト実行：02082_element_check_02059 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line1;
      print(qcashier.screen58.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line1 = testData1s;
      print(qcashier.screen58.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line1 = testData2s;
      print(qcashier.screen58.line1);
      expect(qcashier.screen58.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line1 = defalut;
      print(qcashier.screen58.line1);
      expect(qcashier.screen58.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02082_element_check_02059 **********\n\n");
    });

    test('02083_element_check_02060', () async {
      print("\n********** テスト実行：02083_element_check_02060 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line2;
      print(qcashier.screen58.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line2 = testData1s;
      print(qcashier.screen58.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line2 = testData2s;
      print(qcashier.screen58.line2);
      expect(qcashier.screen58.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line2 = defalut;
      print(qcashier.screen58.line2);
      expect(qcashier.screen58.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02083_element_check_02060 **********\n\n");
    });

    test('02084_element_check_02061', () async {
      print("\n********** テスト実行：02084_element_check_02061 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line3;
      print(qcashier.screen58.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line3 = testData1s;
      print(qcashier.screen58.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line3 = testData2s;
      print(qcashier.screen58.line3);
      expect(qcashier.screen58.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line3 = defalut;
      print(qcashier.screen58.line3);
      expect(qcashier.screen58.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02084_element_check_02061 **********\n\n");
    });

    test('02085_element_check_02062', () async {
      print("\n********** テスト実行：02085_element_check_02062 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line4;
      print(qcashier.screen58.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line4 = testData1s;
      print(qcashier.screen58.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line4 = testData2s;
      print(qcashier.screen58.line4);
      expect(qcashier.screen58.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line4 = defalut;
      print(qcashier.screen58.line4);
      expect(qcashier.screen58.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02085_element_check_02062 **********\n\n");
    });

    test('02086_element_check_02063', () async {
      print("\n********** テスト実行：02086_element_check_02063 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line1_ex;
      print(qcashier.screen58.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line1_ex = testData1s;
      print(qcashier.screen58.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line1_ex = testData2s;
      print(qcashier.screen58.line1_ex);
      expect(qcashier.screen58.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line1_ex = defalut;
      print(qcashier.screen58.line1_ex);
      expect(qcashier.screen58.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02086_element_check_02063 **********\n\n");
    });

    test('02087_element_check_02064', () async {
      print("\n********** テスト実行：02087_element_check_02064 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line2_ex;
      print(qcashier.screen58.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line2_ex = testData1s;
      print(qcashier.screen58.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line2_ex = testData2s;
      print(qcashier.screen58.line2_ex);
      expect(qcashier.screen58.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line2_ex = defalut;
      print(qcashier.screen58.line2_ex);
      expect(qcashier.screen58.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02087_element_check_02064 **********\n\n");
    });

    test('02088_element_check_02065', () async {
      print("\n********** テスト実行：02088_element_check_02065 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line3_ex;
      print(qcashier.screen58.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line3_ex = testData1s;
      print(qcashier.screen58.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line3_ex = testData2s;
      print(qcashier.screen58.line3_ex);
      expect(qcashier.screen58.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line3_ex = defalut;
      print(qcashier.screen58.line3_ex);
      expect(qcashier.screen58.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02088_element_check_02065 **********\n\n");
    });

    test('02089_element_check_02066', () async {
      print("\n********** テスト実行：02089_element_check_02066 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.line4_ex;
      print(qcashier.screen58.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.line4_ex = testData1s;
      print(qcashier.screen58.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.line4_ex = testData2s;
      print(qcashier.screen58.line4_ex);
      expect(qcashier.screen58.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.line4_ex = defalut;
      print(qcashier.screen58.line4_ex);
      expect(qcashier.screen58.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02089_element_check_02066 **********\n\n");
    });

    test('02090_element_check_02067', () async {
      print("\n********** テスト実行：02090_element_check_02067 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.sound_led1;
      print(qcashier.screen58.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.sound_led1 = testData1;
      print(qcashier.screen58.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.sound_led1 = testData2;
      print(qcashier.screen58.sound_led1);
      expect(qcashier.screen58.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.sound_led1 = defalut;
      print(qcashier.screen58.sound_led1);
      expect(qcashier.screen58.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02090_element_check_02067 **********\n\n");
    });

    test('02091_element_check_02068', () async {
      print("\n********** テスト実行：02091_element_check_02068 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.sound_led2;
      print(qcashier.screen58.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.sound_led2 = testData1;
      print(qcashier.screen58.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.sound_led2 = testData2;
      print(qcashier.screen58.sound_led2);
      expect(qcashier.screen58.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.sound_led2 = defalut;
      print(qcashier.screen58.sound_led2);
      expect(qcashier.screen58.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02091_element_check_02068 **********\n\n");
    });

    test('02092_element_check_02069', () async {
      print("\n********** テスト実行：02092_element_check_02069 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen58.sound_led3;
      print(qcashier.screen58.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen58.sound_led3 = testData1;
      print(qcashier.screen58.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen58.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen58.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen58.sound_led3 = testData2;
      print(qcashier.screen58.sound_led3);
      expect(qcashier.screen58.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen58.sound_led3 = defalut;
      print(qcashier.screen58.sound_led3);
      expect(qcashier.screen58.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen58.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02092_element_check_02069 **********\n\n");
    });

    test('02093_element_check_02070', () async {
      print("\n********** テスト実行：02093_element_check_02070 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.title;
      print(qcashier.screen59.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.title = testData1s;
      print(qcashier.screen59.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.title = testData2s;
      print(qcashier.screen59.title);
      expect(qcashier.screen59.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.title = defalut;
      print(qcashier.screen59.title);
      expect(qcashier.screen59.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02093_element_check_02070 **********\n\n");
    });

    test('02094_element_check_02071', () async {
      print("\n********** テスト実行：02094_element_check_02071 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.msg1;
      print(qcashier.screen59.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.msg1 = testData1s;
      print(qcashier.screen59.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.msg1 = testData2s;
      print(qcashier.screen59.msg1);
      expect(qcashier.screen59.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.msg1 = defalut;
      print(qcashier.screen59.msg1);
      expect(qcashier.screen59.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02094_element_check_02071 **********\n\n");
    });

    test('02095_element_check_02072', () async {
      print("\n********** テスト実行：02095_element_check_02072 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.msg2;
      print(qcashier.screen59.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.msg2 = testData1s;
      print(qcashier.screen59.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.msg2 = testData2s;
      print(qcashier.screen59.msg2);
      expect(qcashier.screen59.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.msg2 = defalut;
      print(qcashier.screen59.msg2);
      expect(qcashier.screen59.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02095_element_check_02072 **********\n\n");
    });

    test('02096_element_check_02073', () async {
      print("\n********** テスト実行：02096_element_check_02073 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.msg1_size;
      print(qcashier.screen59.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.msg1_size = testData1;
      print(qcashier.screen59.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.msg1_size = testData2;
      print(qcashier.screen59.msg1_size);
      expect(qcashier.screen59.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.msg1_size = defalut;
      print(qcashier.screen59.msg1_size);
      expect(qcashier.screen59.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02096_element_check_02073 **********\n\n");
    });

    test('02097_element_check_02074', () async {
      print("\n********** テスト実行：02097_element_check_02074 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.msg2_size;
      print(qcashier.screen59.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.msg2_size = testData1;
      print(qcashier.screen59.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.msg2_size = testData2;
      print(qcashier.screen59.msg2_size);
      expect(qcashier.screen59.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.msg2_size = defalut;
      print(qcashier.screen59.msg2_size);
      expect(qcashier.screen59.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02097_element_check_02074 **********\n\n");
    });

    test('02098_element_check_02075', () async {
      print("\n********** テスト実行：02098_element_check_02075 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.sound1;
      print(qcashier.screen59.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.sound1 = testData1;
      print(qcashier.screen59.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.sound1 = testData2;
      print(qcashier.screen59.sound1);
      expect(qcashier.screen59.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.sound1 = defalut;
      print(qcashier.screen59.sound1);
      expect(qcashier.screen59.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02098_element_check_02075 **********\n\n");
    });

    test('02099_element_check_02076', () async {
      print("\n********** テスト実行：02099_element_check_02076 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.sound2;
      print(qcashier.screen59.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.sound2 = testData1;
      print(qcashier.screen59.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.sound2 = testData2;
      print(qcashier.screen59.sound2);
      expect(qcashier.screen59.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.sound2 = defalut;
      print(qcashier.screen59.sound2);
      expect(qcashier.screen59.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02099_element_check_02076 **********\n\n");
    });

    test('02100_element_check_02077', () async {
      print("\n********** テスト実行：02100_element_check_02077 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.sound3;
      print(qcashier.screen59.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.sound3 = testData1;
      print(qcashier.screen59.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.sound3 = testData2;
      print(qcashier.screen59.sound3);
      expect(qcashier.screen59.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.sound3 = defalut;
      print(qcashier.screen59.sound3);
      expect(qcashier.screen59.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02100_element_check_02077 **********\n\n");
    });

    test('02101_element_check_02078', () async {
      print("\n********** テスト実行：02101_element_check_02078 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.snd_timer;
      print(qcashier.screen59.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.snd_timer = testData1;
      print(qcashier.screen59.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.snd_timer = testData2;
      print(qcashier.screen59.snd_timer);
      expect(qcashier.screen59.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.snd_timer = defalut;
      print(qcashier.screen59.snd_timer);
      expect(qcashier.screen59.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02101_element_check_02078 **********\n\n");
    });

    test('02102_element_check_02079', () async {
      print("\n********** テスト実行：02102_element_check_02079 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.timer1;
      print(qcashier.screen59.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.timer1 = testData1;
      print(qcashier.screen59.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.timer1 = testData2;
      print(qcashier.screen59.timer1);
      expect(qcashier.screen59.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.timer1 = defalut;
      print(qcashier.screen59.timer1);
      expect(qcashier.screen59.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02102_element_check_02079 **********\n\n");
    });

    test('02103_element_check_02080', () async {
      print("\n********** テスト実行：02103_element_check_02080 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.timer2;
      print(qcashier.screen59.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.timer2 = testData1;
      print(qcashier.screen59.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.timer2 = testData2;
      print(qcashier.screen59.timer2);
      expect(qcashier.screen59.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.timer2 = defalut;
      print(qcashier.screen59.timer2);
      expect(qcashier.screen59.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02103_element_check_02080 **********\n\n");
    });

    test('02104_element_check_02081', () async {
      print("\n********** テスト実行：02104_element_check_02081 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.timer3;
      print(qcashier.screen59.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.timer3 = testData1;
      print(qcashier.screen59.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.timer3 = testData2;
      print(qcashier.screen59.timer3);
      expect(qcashier.screen59.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.timer3 = defalut;
      print(qcashier.screen59.timer3);
      expect(qcashier.screen59.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02104_element_check_02081 **********\n\n");
    });

    test('02105_element_check_02082', () async {
      print("\n********** テスト実行：02105_element_check_02082 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.dsp_flg1;
      print(qcashier.screen59.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.dsp_flg1 = testData1;
      print(qcashier.screen59.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.dsp_flg1 = testData2;
      print(qcashier.screen59.dsp_flg1);
      expect(qcashier.screen59.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.dsp_flg1 = defalut;
      print(qcashier.screen59.dsp_flg1);
      expect(qcashier.screen59.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02105_element_check_02082 **********\n\n");
    });

    test('02106_element_check_02083', () async {
      print("\n********** テスト実行：02106_element_check_02083 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.dsp_flg2;
      print(qcashier.screen59.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.dsp_flg2 = testData1;
      print(qcashier.screen59.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.dsp_flg2 = testData2;
      print(qcashier.screen59.dsp_flg2);
      expect(qcashier.screen59.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.dsp_flg2 = defalut;
      print(qcashier.screen59.dsp_flg2);
      expect(qcashier.screen59.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02106_element_check_02083 **********\n\n");
    });

    test('02107_element_check_02084', () async {
      print("\n********** テスト実行：02107_element_check_02084 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.movie01_ext;
      print(qcashier.screen59.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.movie01_ext = testData1;
      print(qcashier.screen59.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.movie01_ext = testData2;
      print(qcashier.screen59.movie01_ext);
      expect(qcashier.screen59.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.movie01_ext = defalut;
      print(qcashier.screen59.movie01_ext);
      expect(qcashier.screen59.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02107_element_check_02084 **********\n\n");
    });

    test('02108_element_check_02085', () async {
      print("\n********** テスト実行：02108_element_check_02085 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.movie02_ext;
      print(qcashier.screen59.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.movie02_ext = testData1;
      print(qcashier.screen59.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.movie02_ext = testData2;
      print(qcashier.screen59.movie02_ext);
      expect(qcashier.screen59.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.movie02_ext = defalut;
      print(qcashier.screen59.movie02_ext);
      expect(qcashier.screen59.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02108_element_check_02085 **********\n\n");
    });

    test('02109_element_check_02086', () async {
      print("\n********** テスト実行：02109_element_check_02086 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.movie03_ext;
      print(qcashier.screen59.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.movie03_ext = testData1;
      print(qcashier.screen59.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.movie03_ext = testData2;
      print(qcashier.screen59.movie03_ext);
      expect(qcashier.screen59.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.movie03_ext = defalut;
      print(qcashier.screen59.movie03_ext);
      expect(qcashier.screen59.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02109_element_check_02086 **********\n\n");
    });

    test('02110_element_check_02087', () async {
      print("\n********** テスト実行：02110_element_check_02087 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.movie04_ext;
      print(qcashier.screen59.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.movie04_ext = testData1;
      print(qcashier.screen59.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.movie04_ext = testData2;
      print(qcashier.screen59.movie04_ext);
      expect(qcashier.screen59.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.movie04_ext = defalut;
      print(qcashier.screen59.movie04_ext);
      expect(qcashier.screen59.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02110_element_check_02087 **********\n\n");
    });

    test('02111_element_check_02088', () async {
      print("\n********** テスト実行：02111_element_check_02088 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line_title;
      print(qcashier.screen59.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line_title = testData1s;
      print(qcashier.screen59.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line_title = testData2s;
      print(qcashier.screen59.line_title);
      expect(qcashier.screen59.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line_title = defalut;
      print(qcashier.screen59.line_title);
      expect(qcashier.screen59.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02111_element_check_02088 **********\n\n");
    });

    test('02112_element_check_02089', () async {
      print("\n********** テスト実行：02112_element_check_02089 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line_title_ex;
      print(qcashier.screen59.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line_title_ex = testData1s;
      print(qcashier.screen59.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line_title_ex = testData2s;
      print(qcashier.screen59.line_title_ex);
      expect(qcashier.screen59.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line_title_ex = defalut;
      print(qcashier.screen59.line_title_ex);
      expect(qcashier.screen59.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02112_element_check_02089 **********\n\n");
    });

    test('02113_element_check_02090', () async {
      print("\n********** テスト実行：02113_element_check_02090 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line1;
      print(qcashier.screen59.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line1 = testData1s;
      print(qcashier.screen59.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line1 = testData2s;
      print(qcashier.screen59.line1);
      expect(qcashier.screen59.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line1 = defalut;
      print(qcashier.screen59.line1);
      expect(qcashier.screen59.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02113_element_check_02090 **********\n\n");
    });

    test('02114_element_check_02091', () async {
      print("\n********** テスト実行：02114_element_check_02091 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line2;
      print(qcashier.screen59.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line2 = testData1s;
      print(qcashier.screen59.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line2 = testData2s;
      print(qcashier.screen59.line2);
      expect(qcashier.screen59.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line2 = defalut;
      print(qcashier.screen59.line2);
      expect(qcashier.screen59.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02114_element_check_02091 **********\n\n");
    });

    test('02115_element_check_02092', () async {
      print("\n********** テスト実行：02115_element_check_02092 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line3;
      print(qcashier.screen59.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line3 = testData1s;
      print(qcashier.screen59.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line3 = testData2s;
      print(qcashier.screen59.line3);
      expect(qcashier.screen59.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line3 = defalut;
      print(qcashier.screen59.line3);
      expect(qcashier.screen59.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02115_element_check_02092 **********\n\n");
    });

    test('02116_element_check_02093', () async {
      print("\n********** テスト実行：02116_element_check_02093 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line4;
      print(qcashier.screen59.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line4 = testData1s;
      print(qcashier.screen59.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line4 = testData2s;
      print(qcashier.screen59.line4);
      expect(qcashier.screen59.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line4 = defalut;
      print(qcashier.screen59.line4);
      expect(qcashier.screen59.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02116_element_check_02093 **********\n\n");
    });

    test('02117_element_check_02094', () async {
      print("\n********** テスト実行：02117_element_check_02094 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line1_ex;
      print(qcashier.screen59.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line1_ex = testData1s;
      print(qcashier.screen59.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line1_ex = testData2s;
      print(qcashier.screen59.line1_ex);
      expect(qcashier.screen59.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line1_ex = defalut;
      print(qcashier.screen59.line1_ex);
      expect(qcashier.screen59.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02117_element_check_02094 **********\n\n");
    });

    test('02118_element_check_02095', () async {
      print("\n********** テスト実行：02118_element_check_02095 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line2_ex;
      print(qcashier.screen59.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line2_ex = testData1s;
      print(qcashier.screen59.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line2_ex = testData2s;
      print(qcashier.screen59.line2_ex);
      expect(qcashier.screen59.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line2_ex = defalut;
      print(qcashier.screen59.line2_ex);
      expect(qcashier.screen59.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02118_element_check_02095 **********\n\n");
    });

    test('02119_element_check_02096', () async {
      print("\n********** テスト実行：02119_element_check_02096 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line3_ex;
      print(qcashier.screen59.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line3_ex = testData1s;
      print(qcashier.screen59.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line3_ex = testData2s;
      print(qcashier.screen59.line3_ex);
      expect(qcashier.screen59.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line3_ex = defalut;
      print(qcashier.screen59.line3_ex);
      expect(qcashier.screen59.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02119_element_check_02096 **********\n\n");
    });

    test('02120_element_check_02097', () async {
      print("\n********** テスト実行：02120_element_check_02097 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.line4_ex;
      print(qcashier.screen59.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.line4_ex = testData1s;
      print(qcashier.screen59.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.line4_ex = testData2s;
      print(qcashier.screen59.line4_ex);
      expect(qcashier.screen59.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.line4_ex = defalut;
      print(qcashier.screen59.line4_ex);
      expect(qcashier.screen59.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02120_element_check_02097 **********\n\n");
    });

    test('02121_element_check_02098', () async {
      print("\n********** テスト実行：02121_element_check_02098 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.sound_led1;
      print(qcashier.screen59.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.sound_led1 = testData1;
      print(qcashier.screen59.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.sound_led1 = testData2;
      print(qcashier.screen59.sound_led1);
      expect(qcashier.screen59.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.sound_led1 = defalut;
      print(qcashier.screen59.sound_led1);
      expect(qcashier.screen59.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02121_element_check_02098 **********\n\n");
    });

    test('02122_element_check_02099', () async {
      print("\n********** テスト実行：02122_element_check_02099 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.sound_led2;
      print(qcashier.screen59.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.sound_led2 = testData1;
      print(qcashier.screen59.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.sound_led2 = testData2;
      print(qcashier.screen59.sound_led2);
      expect(qcashier.screen59.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.sound_led2 = defalut;
      print(qcashier.screen59.sound_led2);
      expect(qcashier.screen59.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02122_element_check_02099 **********\n\n");
    });

    test('02123_element_check_02100', () async {
      print("\n********** テスト実行：02123_element_check_02100 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen59.sound_led3;
      print(qcashier.screen59.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen59.sound_led3 = testData1;
      print(qcashier.screen59.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen59.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen59.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen59.sound_led3 = testData2;
      print(qcashier.screen59.sound_led3);
      expect(qcashier.screen59.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen59.sound_led3 = defalut;
      print(qcashier.screen59.sound_led3);
      expect(qcashier.screen59.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen59.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02123_element_check_02100 **********\n\n");
    });

    test('02124_element_check_02101', () async {
      print("\n********** テスト実行：02124_element_check_02101 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.title;
      print(qcashier.screen60.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.title = testData1s;
      print(qcashier.screen60.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.title = testData2s;
      print(qcashier.screen60.title);
      expect(qcashier.screen60.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.title = defalut;
      print(qcashier.screen60.title);
      expect(qcashier.screen60.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02124_element_check_02101 **********\n\n");
    });

    test('02125_element_check_02102', () async {
      print("\n********** テスト実行：02125_element_check_02102 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.msg1;
      print(qcashier.screen60.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.msg1 = testData1s;
      print(qcashier.screen60.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.msg1 = testData2s;
      print(qcashier.screen60.msg1);
      expect(qcashier.screen60.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.msg1 = defalut;
      print(qcashier.screen60.msg1);
      expect(qcashier.screen60.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02125_element_check_02102 **********\n\n");
    });

    test('02126_element_check_02103', () async {
      print("\n********** テスト実行：02126_element_check_02103 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.msg2;
      print(qcashier.screen60.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.msg2 = testData1s;
      print(qcashier.screen60.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.msg2 = testData2s;
      print(qcashier.screen60.msg2);
      expect(qcashier.screen60.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.msg2 = defalut;
      print(qcashier.screen60.msg2);
      expect(qcashier.screen60.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02126_element_check_02103 **********\n\n");
    });

    test('02127_element_check_02104', () async {
      print("\n********** テスト実行：02127_element_check_02104 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.msg1_size;
      print(qcashier.screen60.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.msg1_size = testData1;
      print(qcashier.screen60.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.msg1_size = testData2;
      print(qcashier.screen60.msg1_size);
      expect(qcashier.screen60.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.msg1_size = defalut;
      print(qcashier.screen60.msg1_size);
      expect(qcashier.screen60.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02127_element_check_02104 **********\n\n");
    });

    test('02128_element_check_02105', () async {
      print("\n********** テスト実行：02128_element_check_02105 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.msg2_size;
      print(qcashier.screen60.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.msg2_size = testData1;
      print(qcashier.screen60.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.msg2_size = testData2;
      print(qcashier.screen60.msg2_size);
      expect(qcashier.screen60.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.msg2_size = defalut;
      print(qcashier.screen60.msg2_size);
      expect(qcashier.screen60.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02128_element_check_02105 **********\n\n");
    });

    test('02129_element_check_02106', () async {
      print("\n********** テスト実行：02129_element_check_02106 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.sound1;
      print(qcashier.screen60.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.sound1 = testData1;
      print(qcashier.screen60.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.sound1 = testData2;
      print(qcashier.screen60.sound1);
      expect(qcashier.screen60.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.sound1 = defalut;
      print(qcashier.screen60.sound1);
      expect(qcashier.screen60.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02129_element_check_02106 **********\n\n");
    });

    test('02130_element_check_02107', () async {
      print("\n********** テスト実行：02130_element_check_02107 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.sound2;
      print(qcashier.screen60.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.sound2 = testData1;
      print(qcashier.screen60.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.sound2 = testData2;
      print(qcashier.screen60.sound2);
      expect(qcashier.screen60.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.sound2 = defalut;
      print(qcashier.screen60.sound2);
      expect(qcashier.screen60.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02130_element_check_02107 **********\n\n");
    });

    test('02131_element_check_02108', () async {
      print("\n********** テスト実行：02131_element_check_02108 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.sound3;
      print(qcashier.screen60.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.sound3 = testData1s;
      print(qcashier.screen60.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.sound3 = testData2s;
      print(qcashier.screen60.sound3);
      expect(qcashier.screen60.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.sound3 = defalut;
      print(qcashier.screen60.sound3);
      expect(qcashier.screen60.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02131_element_check_02108 **********\n\n");
    });

    test('02132_element_check_02109', () async {
      print("\n********** テスト実行：02132_element_check_02109 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.snd_timer;
      print(qcashier.screen60.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.snd_timer = testData1;
      print(qcashier.screen60.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.snd_timer = testData2;
      print(qcashier.screen60.snd_timer);
      expect(qcashier.screen60.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.snd_timer = defalut;
      print(qcashier.screen60.snd_timer);
      expect(qcashier.screen60.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02132_element_check_02109 **********\n\n");
    });

    test('02133_element_check_02110', () async {
      print("\n********** テスト実行：02133_element_check_02110 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.timer1;
      print(qcashier.screen60.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.timer1 = testData1;
      print(qcashier.screen60.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.timer1 = testData2;
      print(qcashier.screen60.timer1);
      expect(qcashier.screen60.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.timer1 = defalut;
      print(qcashier.screen60.timer1);
      expect(qcashier.screen60.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02133_element_check_02110 **********\n\n");
    });

    test('02134_element_check_02111', () async {
      print("\n********** テスト実行：02134_element_check_02111 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.timer2;
      print(qcashier.screen60.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.timer2 = testData1;
      print(qcashier.screen60.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.timer2 = testData2;
      print(qcashier.screen60.timer2);
      expect(qcashier.screen60.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.timer2 = defalut;
      print(qcashier.screen60.timer2);
      expect(qcashier.screen60.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02134_element_check_02111 **********\n\n");
    });

    test('02135_element_check_02112', () async {
      print("\n********** テスト実行：02135_element_check_02112 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.timer3;
      print(qcashier.screen60.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.timer3 = testData1;
      print(qcashier.screen60.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.timer3 = testData2;
      print(qcashier.screen60.timer3);
      expect(qcashier.screen60.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.timer3 = defalut;
      print(qcashier.screen60.timer3);
      expect(qcashier.screen60.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02135_element_check_02112 **********\n\n");
    });

    test('02136_element_check_02113', () async {
      print("\n********** テスト実行：02136_element_check_02113 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.dsp_flg1;
      print(qcashier.screen60.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.dsp_flg1 = testData1;
      print(qcashier.screen60.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.dsp_flg1 = testData2;
      print(qcashier.screen60.dsp_flg1);
      expect(qcashier.screen60.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.dsp_flg1 = defalut;
      print(qcashier.screen60.dsp_flg1);
      expect(qcashier.screen60.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02136_element_check_02113 **********\n\n");
    });

    test('02137_element_check_02114', () async {
      print("\n********** テスト実行：02137_element_check_02114 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.dsp_flg2;
      print(qcashier.screen60.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.dsp_flg2 = testData1;
      print(qcashier.screen60.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.dsp_flg2 = testData2;
      print(qcashier.screen60.dsp_flg2);
      expect(qcashier.screen60.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.dsp_flg2 = defalut;
      print(qcashier.screen60.dsp_flg2);
      expect(qcashier.screen60.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02137_element_check_02114 **********\n\n");
    });

    test('02138_element_check_02115', () async {
      print("\n********** テスト実行：02138_element_check_02115 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.movie01_ext;
      print(qcashier.screen60.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.movie01_ext = testData1;
      print(qcashier.screen60.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.movie01_ext = testData2;
      print(qcashier.screen60.movie01_ext);
      expect(qcashier.screen60.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.movie01_ext = defalut;
      print(qcashier.screen60.movie01_ext);
      expect(qcashier.screen60.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02138_element_check_02115 **********\n\n");
    });

    test('02139_element_check_02116', () async {
      print("\n********** テスト実行：02139_element_check_02116 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.movie02_ext;
      print(qcashier.screen60.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.movie02_ext = testData1;
      print(qcashier.screen60.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.movie02_ext = testData2;
      print(qcashier.screen60.movie02_ext);
      expect(qcashier.screen60.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.movie02_ext = defalut;
      print(qcashier.screen60.movie02_ext);
      expect(qcashier.screen60.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02139_element_check_02116 **********\n\n");
    });

    test('02140_element_check_02117', () async {
      print("\n********** テスト実行：02140_element_check_02117 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.movie03_ext;
      print(qcashier.screen60.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.movie03_ext = testData1;
      print(qcashier.screen60.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.movie03_ext = testData2;
      print(qcashier.screen60.movie03_ext);
      expect(qcashier.screen60.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.movie03_ext = defalut;
      print(qcashier.screen60.movie03_ext);
      expect(qcashier.screen60.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02140_element_check_02117 **********\n\n");
    });

    test('02141_element_check_02118', () async {
      print("\n********** テスト実行：02141_element_check_02118 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.movie04_ext;
      print(qcashier.screen60.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.movie04_ext = testData1;
      print(qcashier.screen60.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.movie04_ext = testData2;
      print(qcashier.screen60.movie04_ext);
      expect(qcashier.screen60.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.movie04_ext = defalut;
      print(qcashier.screen60.movie04_ext);
      expect(qcashier.screen60.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02141_element_check_02118 **********\n\n");
    });

    test('02142_element_check_02119', () async {
      print("\n********** テスト実行：02142_element_check_02119 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line_title;
      print(qcashier.screen60.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line_title = testData1s;
      print(qcashier.screen60.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line_title = testData2s;
      print(qcashier.screen60.line_title);
      expect(qcashier.screen60.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line_title = defalut;
      print(qcashier.screen60.line_title);
      expect(qcashier.screen60.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02142_element_check_02119 **********\n\n");
    });

    test('02143_element_check_02120', () async {
      print("\n********** テスト実行：02143_element_check_02120 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line_title_ex;
      print(qcashier.screen60.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line_title_ex = testData1s;
      print(qcashier.screen60.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line_title_ex = testData2s;
      print(qcashier.screen60.line_title_ex);
      expect(qcashier.screen60.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line_title_ex = defalut;
      print(qcashier.screen60.line_title_ex);
      expect(qcashier.screen60.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02143_element_check_02120 **********\n\n");
    });

    test('02144_element_check_02121', () async {
      print("\n********** テスト実行：02144_element_check_02121 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line1;
      print(qcashier.screen60.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line1 = testData1s;
      print(qcashier.screen60.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line1 = testData2s;
      print(qcashier.screen60.line1);
      expect(qcashier.screen60.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line1 = defalut;
      print(qcashier.screen60.line1);
      expect(qcashier.screen60.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02144_element_check_02121 **********\n\n");
    });

    test('02145_element_check_02122', () async {
      print("\n********** テスト実行：02145_element_check_02122 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line2;
      print(qcashier.screen60.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line2 = testData1s;
      print(qcashier.screen60.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line2 = testData2s;
      print(qcashier.screen60.line2);
      expect(qcashier.screen60.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line2 = defalut;
      print(qcashier.screen60.line2);
      expect(qcashier.screen60.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02145_element_check_02122 **********\n\n");
    });

    test('02146_element_check_02123', () async {
      print("\n********** テスト実行：02146_element_check_02123 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line3;
      print(qcashier.screen60.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line3 = testData1s;
      print(qcashier.screen60.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line3 = testData2s;
      print(qcashier.screen60.line3);
      expect(qcashier.screen60.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line3 = defalut;
      print(qcashier.screen60.line3);
      expect(qcashier.screen60.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02146_element_check_02123 **********\n\n");
    });

    test('02147_element_check_02124', () async {
      print("\n********** テスト実行：02147_element_check_02124 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line4;
      print(qcashier.screen60.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line4 = testData1s;
      print(qcashier.screen60.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line4 = testData2s;
      print(qcashier.screen60.line4);
      expect(qcashier.screen60.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line4 = defalut;
      print(qcashier.screen60.line4);
      expect(qcashier.screen60.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02147_element_check_02124 **********\n\n");
    });

    test('02148_element_check_02125', () async {
      print("\n********** テスト実行：02148_element_check_02125 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line1_ex;
      print(qcashier.screen60.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line1_ex = testData1s;
      print(qcashier.screen60.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line1_ex = testData2s;
      print(qcashier.screen60.line1_ex);
      expect(qcashier.screen60.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line1_ex = defalut;
      print(qcashier.screen60.line1_ex);
      expect(qcashier.screen60.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02148_element_check_02125 **********\n\n");
    });

    test('02149_element_check_02126', () async {
      print("\n********** テスト実行：02149_element_check_02126 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line2_ex;
      print(qcashier.screen60.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line2_ex = testData1s;
      print(qcashier.screen60.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line2_ex = testData2s;
      print(qcashier.screen60.line2_ex);
      expect(qcashier.screen60.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line2_ex = defalut;
      print(qcashier.screen60.line2_ex);
      expect(qcashier.screen60.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02149_element_check_02126 **********\n\n");
    });

    test('02150_element_check_02127', () async {
      print("\n********** テスト実行：02150_element_check_02127 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line3_ex;
      print(qcashier.screen60.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line3_ex = testData1s;
      print(qcashier.screen60.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line3_ex = testData2s;
      print(qcashier.screen60.line3_ex);
      expect(qcashier.screen60.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line3_ex = defalut;
      print(qcashier.screen60.line3_ex);
      expect(qcashier.screen60.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02150_element_check_02127 **********\n\n");
    });

    test('02151_element_check_02128', () async {
      print("\n********** テスト実行：02151_element_check_02128 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.line4_ex;
      print(qcashier.screen60.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.line4_ex = testData1s;
      print(qcashier.screen60.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.line4_ex = testData2s;
      print(qcashier.screen60.line4_ex);
      expect(qcashier.screen60.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.line4_ex = defalut;
      print(qcashier.screen60.line4_ex);
      expect(qcashier.screen60.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02151_element_check_02128 **********\n\n");
    });

    test('02152_element_check_02129', () async {
      print("\n********** テスト実行：02152_element_check_02129 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.sound_led1;
      print(qcashier.screen60.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.sound_led1 = testData1;
      print(qcashier.screen60.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.sound_led1 = testData2;
      print(qcashier.screen60.sound_led1);
      expect(qcashier.screen60.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.sound_led1 = defalut;
      print(qcashier.screen60.sound_led1);
      expect(qcashier.screen60.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02152_element_check_02129 **********\n\n");
    });

    test('02153_element_check_02130', () async {
      print("\n********** テスト実行：02153_element_check_02130 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.sound_led2;
      print(qcashier.screen60.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.sound_led2 = testData1;
      print(qcashier.screen60.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.sound_led2 = testData2;
      print(qcashier.screen60.sound_led2);
      expect(qcashier.screen60.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.sound_led2 = defalut;
      print(qcashier.screen60.sound_led2);
      expect(qcashier.screen60.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02153_element_check_02130 **********\n\n");
    });

    test('02154_element_check_02131', () async {
      print("\n********** テスト実行：02154_element_check_02131 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen60.sound_led3;
      print(qcashier.screen60.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen60.sound_led3 = testData1s;
      print(qcashier.screen60.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen60.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen60.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen60.sound_led3 = testData2s;
      print(qcashier.screen60.sound_led3);
      expect(qcashier.screen60.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen60.sound_led3 = defalut;
      print(qcashier.screen60.sound_led3);
      expect(qcashier.screen60.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen60.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02154_element_check_02131 **********\n\n");
    });

    test('02155_element_check_02132', () async {
      print("\n********** テスト実行：02155_element_check_02132 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.title;
      print(qcashier.screen61.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.title = testData1s;
      print(qcashier.screen61.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.title = testData2s;
      print(qcashier.screen61.title);
      expect(qcashier.screen61.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.title = defalut;
      print(qcashier.screen61.title);
      expect(qcashier.screen61.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02155_element_check_02132 **********\n\n");
    });

    test('02156_element_check_02133', () async {
      print("\n********** テスト実行：02156_element_check_02133 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.msg1;
      print(qcashier.screen61.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.msg1 = testData1s;
      print(qcashier.screen61.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.msg1 = testData2s;
      print(qcashier.screen61.msg1);
      expect(qcashier.screen61.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.msg1 = defalut;
      print(qcashier.screen61.msg1);
      expect(qcashier.screen61.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02156_element_check_02133 **********\n\n");
    });

    test('02157_element_check_02134', () async {
      print("\n********** テスト実行：02157_element_check_02134 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.msg2;
      print(qcashier.screen61.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.msg2 = testData1s;
      print(qcashier.screen61.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.msg2 = testData2s;
      print(qcashier.screen61.msg2);
      expect(qcashier.screen61.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.msg2 = defalut;
      print(qcashier.screen61.msg2);
      expect(qcashier.screen61.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02157_element_check_02134 **********\n\n");
    });

    test('02158_element_check_02135', () async {
      print("\n********** テスト実行：02158_element_check_02135 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.msg1_size;
      print(qcashier.screen61.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.msg1_size = testData1;
      print(qcashier.screen61.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.msg1_size = testData2;
      print(qcashier.screen61.msg1_size);
      expect(qcashier.screen61.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.msg1_size = defalut;
      print(qcashier.screen61.msg1_size);
      expect(qcashier.screen61.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02158_element_check_02135 **********\n\n");
    });

    test('02159_element_check_02136', () async {
      print("\n********** テスト実行：02159_element_check_02136 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.msg2_size;
      print(qcashier.screen61.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.msg2_size = testData1;
      print(qcashier.screen61.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.msg2_size = testData2;
      print(qcashier.screen61.msg2_size);
      expect(qcashier.screen61.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.msg2_size = defalut;
      print(qcashier.screen61.msg2_size);
      expect(qcashier.screen61.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02159_element_check_02136 **********\n\n");
    });

    test('02160_element_check_02137', () async {
      print("\n********** テスト実行：02160_element_check_02137 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.sound1;
      print(qcashier.screen61.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.sound1 = testData1;
      print(qcashier.screen61.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.sound1 = testData2;
      print(qcashier.screen61.sound1);
      expect(qcashier.screen61.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.sound1 = defalut;
      print(qcashier.screen61.sound1);
      expect(qcashier.screen61.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02160_element_check_02137 **********\n\n");
    });

    test('02161_element_check_02138', () async {
      print("\n********** テスト実行：02161_element_check_02138 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.sound2;
      print(qcashier.screen61.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.sound2 = testData1;
      print(qcashier.screen61.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.sound2 = testData2;
      print(qcashier.screen61.sound2);
      expect(qcashier.screen61.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.sound2 = defalut;
      print(qcashier.screen61.sound2);
      expect(qcashier.screen61.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02161_element_check_02138 **********\n\n");
    });

    test('02162_element_check_02139', () async {
      print("\n********** テスト実行：02162_element_check_02139 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.sound3;
      print(qcashier.screen61.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.sound3 = testData1;
      print(qcashier.screen61.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.sound3 = testData2;
      print(qcashier.screen61.sound3);
      expect(qcashier.screen61.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.sound3 = defalut;
      print(qcashier.screen61.sound3);
      expect(qcashier.screen61.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02162_element_check_02139 **********\n\n");
    });

    test('02163_element_check_02140', () async {
      print("\n********** テスト実行：02163_element_check_02140 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.snd_timer;
      print(qcashier.screen61.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.snd_timer = testData1;
      print(qcashier.screen61.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.snd_timer = testData2;
      print(qcashier.screen61.snd_timer);
      expect(qcashier.screen61.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.snd_timer = defalut;
      print(qcashier.screen61.snd_timer);
      expect(qcashier.screen61.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02163_element_check_02140 **********\n\n");
    });

    test('02164_element_check_02141', () async {
      print("\n********** テスト実行：02164_element_check_02141 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.timer1;
      print(qcashier.screen61.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.timer1 = testData1;
      print(qcashier.screen61.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.timer1 = testData2;
      print(qcashier.screen61.timer1);
      expect(qcashier.screen61.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.timer1 = defalut;
      print(qcashier.screen61.timer1);
      expect(qcashier.screen61.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02164_element_check_02141 **********\n\n");
    });

    test('02165_element_check_02142', () async {
      print("\n********** テスト実行：02165_element_check_02142 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.timer2;
      print(qcashier.screen61.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.timer2 = testData1;
      print(qcashier.screen61.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.timer2 = testData2;
      print(qcashier.screen61.timer2);
      expect(qcashier.screen61.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.timer2 = defalut;
      print(qcashier.screen61.timer2);
      expect(qcashier.screen61.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02165_element_check_02142 **********\n\n");
    });

    test('02166_element_check_02143', () async {
      print("\n********** テスト実行：02166_element_check_02143 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.timer3;
      print(qcashier.screen61.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.timer3 = testData1;
      print(qcashier.screen61.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.timer3 = testData2;
      print(qcashier.screen61.timer3);
      expect(qcashier.screen61.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.timer3 = defalut;
      print(qcashier.screen61.timer3);
      expect(qcashier.screen61.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02166_element_check_02143 **********\n\n");
    });

    test('02167_element_check_02144', () async {
      print("\n********** テスト実行：02167_element_check_02144 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.dsp_flg1;
      print(qcashier.screen61.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.dsp_flg1 = testData1;
      print(qcashier.screen61.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.dsp_flg1 = testData2;
      print(qcashier.screen61.dsp_flg1);
      expect(qcashier.screen61.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.dsp_flg1 = defalut;
      print(qcashier.screen61.dsp_flg1);
      expect(qcashier.screen61.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02167_element_check_02144 **********\n\n");
    });

    test('02168_element_check_02145', () async {
      print("\n********** テスト実行：02168_element_check_02145 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.dsp_flg2;
      print(qcashier.screen61.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.dsp_flg2 = testData1;
      print(qcashier.screen61.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.dsp_flg2 = testData2;
      print(qcashier.screen61.dsp_flg2);
      expect(qcashier.screen61.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.dsp_flg2 = defalut;
      print(qcashier.screen61.dsp_flg2);
      expect(qcashier.screen61.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02168_element_check_02145 **********\n\n");
    });

    test('02169_element_check_02146', () async {
      print("\n********** テスト実行：02169_element_check_02146 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.movie01_ext;
      print(qcashier.screen61.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.movie01_ext = testData1;
      print(qcashier.screen61.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.movie01_ext = testData2;
      print(qcashier.screen61.movie01_ext);
      expect(qcashier.screen61.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.movie01_ext = defalut;
      print(qcashier.screen61.movie01_ext);
      expect(qcashier.screen61.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02169_element_check_02146 **********\n\n");
    });

    test('02170_element_check_02147', () async {
      print("\n********** テスト実行：02170_element_check_02147 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.movie02_ext;
      print(qcashier.screen61.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.movie02_ext = testData1;
      print(qcashier.screen61.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.movie02_ext = testData2;
      print(qcashier.screen61.movie02_ext);
      expect(qcashier.screen61.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.movie02_ext = defalut;
      print(qcashier.screen61.movie02_ext);
      expect(qcashier.screen61.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02170_element_check_02147 **********\n\n");
    });

    test('02171_element_check_02148', () async {
      print("\n********** テスト実行：02171_element_check_02148 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.movie03_ext;
      print(qcashier.screen61.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.movie03_ext = testData1;
      print(qcashier.screen61.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.movie03_ext = testData2;
      print(qcashier.screen61.movie03_ext);
      expect(qcashier.screen61.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.movie03_ext = defalut;
      print(qcashier.screen61.movie03_ext);
      expect(qcashier.screen61.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02171_element_check_02148 **********\n\n");
    });

    test('02172_element_check_02149', () async {
      print("\n********** テスト実行：02172_element_check_02149 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.movie04_ext;
      print(qcashier.screen61.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.movie04_ext = testData1;
      print(qcashier.screen61.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.movie04_ext = testData2;
      print(qcashier.screen61.movie04_ext);
      expect(qcashier.screen61.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.movie04_ext = defalut;
      print(qcashier.screen61.movie04_ext);
      expect(qcashier.screen61.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02172_element_check_02149 **********\n\n");
    });

    test('02173_element_check_02150', () async {
      print("\n********** テスト実行：02173_element_check_02150 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line_title;
      print(qcashier.screen61.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line_title = testData1s;
      print(qcashier.screen61.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line_title = testData2s;
      print(qcashier.screen61.line_title);
      expect(qcashier.screen61.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line_title = defalut;
      print(qcashier.screen61.line_title);
      expect(qcashier.screen61.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02173_element_check_02150 **********\n\n");
    });

    test('02174_element_check_02151', () async {
      print("\n********** テスト実行：02174_element_check_02151 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line_title_ex;
      print(qcashier.screen61.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line_title_ex = testData1s;
      print(qcashier.screen61.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line_title_ex = testData2s;
      print(qcashier.screen61.line_title_ex);
      expect(qcashier.screen61.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line_title_ex = defalut;
      print(qcashier.screen61.line_title_ex);
      expect(qcashier.screen61.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02174_element_check_02151 **********\n\n");
    });

    test('02175_element_check_02152', () async {
      print("\n********** テスト実行：02175_element_check_02152 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line1;
      print(qcashier.screen61.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line1 = testData1s;
      print(qcashier.screen61.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line1 = testData2s;
      print(qcashier.screen61.line1);
      expect(qcashier.screen61.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line1 = defalut;
      print(qcashier.screen61.line1);
      expect(qcashier.screen61.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02175_element_check_02152 **********\n\n");
    });

    test('02176_element_check_02153', () async {
      print("\n********** テスト実行：02176_element_check_02153 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line2;
      print(qcashier.screen61.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line2 = testData1s;
      print(qcashier.screen61.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line2 = testData2s;
      print(qcashier.screen61.line2);
      expect(qcashier.screen61.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line2 = defalut;
      print(qcashier.screen61.line2);
      expect(qcashier.screen61.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02176_element_check_02153 **********\n\n");
    });

    test('02177_element_check_02154', () async {
      print("\n********** テスト実行：02177_element_check_02154 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line3;
      print(qcashier.screen61.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line3 = testData1s;
      print(qcashier.screen61.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line3 = testData2s;
      print(qcashier.screen61.line3);
      expect(qcashier.screen61.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line3 = defalut;
      print(qcashier.screen61.line3);
      expect(qcashier.screen61.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02177_element_check_02154 **********\n\n");
    });

    test('02178_element_check_02155', () async {
      print("\n********** テスト実行：02178_element_check_02155 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line4;
      print(qcashier.screen61.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line4 = testData1s;
      print(qcashier.screen61.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line4 = testData2s;
      print(qcashier.screen61.line4);
      expect(qcashier.screen61.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line4 = defalut;
      print(qcashier.screen61.line4);
      expect(qcashier.screen61.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02178_element_check_02155 **********\n\n");
    });

    test('02179_element_check_02156', () async {
      print("\n********** テスト実行：02179_element_check_02156 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line1_ex;
      print(qcashier.screen61.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line1_ex = testData1s;
      print(qcashier.screen61.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line1_ex = testData2s;
      print(qcashier.screen61.line1_ex);
      expect(qcashier.screen61.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line1_ex = defalut;
      print(qcashier.screen61.line1_ex);
      expect(qcashier.screen61.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02179_element_check_02156 **********\n\n");
    });

    test('02180_element_check_02157', () async {
      print("\n********** テスト実行：02180_element_check_02157 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line2_ex;
      print(qcashier.screen61.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line2_ex = testData1s;
      print(qcashier.screen61.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line2_ex = testData2s;
      print(qcashier.screen61.line2_ex);
      expect(qcashier.screen61.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line2_ex = defalut;
      print(qcashier.screen61.line2_ex);
      expect(qcashier.screen61.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02180_element_check_02157 **********\n\n");
    });

    test('02181_element_check_02158', () async {
      print("\n********** テスト実行：02181_element_check_02158 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line3_ex;
      print(qcashier.screen61.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line3_ex = testData1s;
      print(qcashier.screen61.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line3_ex = testData2s;
      print(qcashier.screen61.line3_ex);
      expect(qcashier.screen61.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line3_ex = defalut;
      print(qcashier.screen61.line3_ex);
      expect(qcashier.screen61.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02181_element_check_02158 **********\n\n");
    });

    test('02182_element_check_02159', () async {
      print("\n********** テスト実行：02182_element_check_02159 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.line4_ex;
      print(qcashier.screen61.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.line4_ex = testData1s;
      print(qcashier.screen61.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.line4_ex = testData2s;
      print(qcashier.screen61.line4_ex);
      expect(qcashier.screen61.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.line4_ex = defalut;
      print(qcashier.screen61.line4_ex);
      expect(qcashier.screen61.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02182_element_check_02159 **********\n\n");
    });

    test('02183_element_check_02160', () async {
      print("\n********** テスト実行：02183_element_check_02160 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.sound_led1;
      print(qcashier.screen61.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.sound_led1 = testData1;
      print(qcashier.screen61.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.sound_led1 = testData2;
      print(qcashier.screen61.sound_led1);
      expect(qcashier.screen61.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.sound_led1 = defalut;
      print(qcashier.screen61.sound_led1);
      expect(qcashier.screen61.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02183_element_check_02160 **********\n\n");
    });

    test('02184_element_check_02161', () async {
      print("\n********** テスト実行：02184_element_check_02161 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.sound_led2;
      print(qcashier.screen61.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.sound_led2 = testData1;
      print(qcashier.screen61.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.sound_led2 = testData2;
      print(qcashier.screen61.sound_led2);
      expect(qcashier.screen61.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.sound_led2 = defalut;
      print(qcashier.screen61.sound_led2);
      expect(qcashier.screen61.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02184_element_check_02161 **********\n\n");
    });

    test('02185_element_check_02162', () async {
      print("\n********** テスト実行：02185_element_check_02162 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen61.sound_led3;
      print(qcashier.screen61.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen61.sound_led3 = testData1;
      print(qcashier.screen61.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen61.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen61.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen61.sound_led3 = testData2;
      print(qcashier.screen61.sound_led3);
      expect(qcashier.screen61.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen61.sound_led3 = defalut;
      print(qcashier.screen61.sound_led3);
      expect(qcashier.screen61.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen61.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02185_element_check_02162 **********\n\n");
    });

    test('02186_element_check_02163', () async {
      print("\n********** テスト実行：02186_element_check_02163 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.title;
      print(qcashier.screen62.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.title = testData1s;
      print(qcashier.screen62.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.title = testData2s;
      print(qcashier.screen62.title);
      expect(qcashier.screen62.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.title = defalut;
      print(qcashier.screen62.title);
      expect(qcashier.screen62.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02186_element_check_02163 **********\n\n");
    });

    test('02187_element_check_02164', () async {
      print("\n********** テスト実行：02187_element_check_02164 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.msg1;
      print(qcashier.screen62.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.msg1 = testData1s;
      print(qcashier.screen62.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.msg1 = testData2s;
      print(qcashier.screen62.msg1);
      expect(qcashier.screen62.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.msg1 = defalut;
      print(qcashier.screen62.msg1);
      expect(qcashier.screen62.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02187_element_check_02164 **********\n\n");
    });

    test('02188_element_check_02165', () async {
      print("\n********** テスト実行：02188_element_check_02165 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.msg2;
      print(qcashier.screen62.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.msg2 = testData1s;
      print(qcashier.screen62.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.msg2 = testData2s;
      print(qcashier.screen62.msg2);
      expect(qcashier.screen62.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.msg2 = defalut;
      print(qcashier.screen62.msg2);
      expect(qcashier.screen62.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02188_element_check_02165 **********\n\n");
    });

    test('02189_element_check_02166', () async {
      print("\n********** テスト実行：02189_element_check_02166 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.msg1_size;
      print(qcashier.screen62.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.msg1_size = testData1;
      print(qcashier.screen62.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.msg1_size = testData2;
      print(qcashier.screen62.msg1_size);
      expect(qcashier.screen62.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.msg1_size = defalut;
      print(qcashier.screen62.msg1_size);
      expect(qcashier.screen62.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02189_element_check_02166 **********\n\n");
    });

    test('02190_element_check_02167', () async {
      print("\n********** テスト実行：02190_element_check_02167 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.msg2_size;
      print(qcashier.screen62.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.msg2_size = testData1;
      print(qcashier.screen62.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.msg2_size = testData2;
      print(qcashier.screen62.msg2_size);
      expect(qcashier.screen62.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.msg2_size = defalut;
      print(qcashier.screen62.msg2_size);
      expect(qcashier.screen62.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02190_element_check_02167 **********\n\n");
    });

    test('02191_element_check_02168', () async {
      print("\n********** テスト実行：02191_element_check_02168 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.sound1;
      print(qcashier.screen62.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.sound1 = testData1;
      print(qcashier.screen62.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.sound1 = testData2;
      print(qcashier.screen62.sound1);
      expect(qcashier.screen62.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.sound1 = defalut;
      print(qcashier.screen62.sound1);
      expect(qcashier.screen62.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02191_element_check_02168 **********\n\n");
    });

    test('02192_element_check_02169', () async {
      print("\n********** テスト実行：02192_element_check_02169 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.sound2;
      print(qcashier.screen62.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.sound2 = testData1;
      print(qcashier.screen62.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.sound2 = testData2;
      print(qcashier.screen62.sound2);
      expect(qcashier.screen62.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.sound2 = defalut;
      print(qcashier.screen62.sound2);
      expect(qcashier.screen62.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02192_element_check_02169 **********\n\n");
    });

    test('02193_element_check_02170', () async {
      print("\n********** テスト実行：02193_element_check_02170 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.sound3;
      print(qcashier.screen62.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.sound3 = testData1;
      print(qcashier.screen62.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.sound3 = testData2;
      print(qcashier.screen62.sound3);
      expect(qcashier.screen62.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.sound3 = defalut;
      print(qcashier.screen62.sound3);
      expect(qcashier.screen62.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02193_element_check_02170 **********\n\n");
    });

    test('02194_element_check_02171', () async {
      print("\n********** テスト実行：02194_element_check_02171 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.snd_timer;
      print(qcashier.screen62.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.snd_timer = testData1;
      print(qcashier.screen62.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.snd_timer = testData2;
      print(qcashier.screen62.snd_timer);
      expect(qcashier.screen62.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.snd_timer = defalut;
      print(qcashier.screen62.snd_timer);
      expect(qcashier.screen62.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02194_element_check_02171 **********\n\n");
    });

    test('02195_element_check_02172', () async {
      print("\n********** テスト実行：02195_element_check_02172 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.timer1;
      print(qcashier.screen62.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.timer1 = testData1;
      print(qcashier.screen62.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.timer1 = testData2;
      print(qcashier.screen62.timer1);
      expect(qcashier.screen62.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.timer1 = defalut;
      print(qcashier.screen62.timer1);
      expect(qcashier.screen62.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02195_element_check_02172 **********\n\n");
    });

    test('02196_element_check_02173', () async {
      print("\n********** テスト実行：02196_element_check_02173 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.timer2;
      print(qcashier.screen62.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.timer2 = testData1;
      print(qcashier.screen62.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.timer2 = testData2;
      print(qcashier.screen62.timer2);
      expect(qcashier.screen62.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.timer2 = defalut;
      print(qcashier.screen62.timer2);
      expect(qcashier.screen62.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02196_element_check_02173 **********\n\n");
    });

    test('02197_element_check_02174', () async {
      print("\n********** テスト実行：02197_element_check_02174 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.timer3;
      print(qcashier.screen62.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.timer3 = testData1;
      print(qcashier.screen62.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.timer3 = testData2;
      print(qcashier.screen62.timer3);
      expect(qcashier.screen62.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.timer3 = defalut;
      print(qcashier.screen62.timer3);
      expect(qcashier.screen62.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02197_element_check_02174 **********\n\n");
    });

    test('02198_element_check_02175', () async {
      print("\n********** テスト実行：02198_element_check_02175 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.dsp_flg1;
      print(qcashier.screen62.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.dsp_flg1 = testData1;
      print(qcashier.screen62.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.dsp_flg1 = testData2;
      print(qcashier.screen62.dsp_flg1);
      expect(qcashier.screen62.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.dsp_flg1 = defalut;
      print(qcashier.screen62.dsp_flg1);
      expect(qcashier.screen62.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02198_element_check_02175 **********\n\n");
    });

    test('02199_element_check_02176', () async {
      print("\n********** テスト実行：02199_element_check_02176 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.dsp_flg2;
      print(qcashier.screen62.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.dsp_flg2 = testData1;
      print(qcashier.screen62.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.dsp_flg2 = testData2;
      print(qcashier.screen62.dsp_flg2);
      expect(qcashier.screen62.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.dsp_flg2 = defalut;
      print(qcashier.screen62.dsp_flg2);
      expect(qcashier.screen62.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02199_element_check_02176 **********\n\n");
    });

    test('02200_element_check_02177', () async {
      print("\n********** テスト実行：02200_element_check_02177 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.movie01_ext;
      print(qcashier.screen62.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.movie01_ext = testData1;
      print(qcashier.screen62.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.movie01_ext = testData2;
      print(qcashier.screen62.movie01_ext);
      expect(qcashier.screen62.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.movie01_ext = defalut;
      print(qcashier.screen62.movie01_ext);
      expect(qcashier.screen62.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02200_element_check_02177 **********\n\n");
    });

    test('02201_element_check_02178', () async {
      print("\n********** テスト実行：02201_element_check_02178 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.movie02_ext;
      print(qcashier.screen62.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.movie02_ext = testData1;
      print(qcashier.screen62.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.movie02_ext = testData2;
      print(qcashier.screen62.movie02_ext);
      expect(qcashier.screen62.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.movie02_ext = defalut;
      print(qcashier.screen62.movie02_ext);
      expect(qcashier.screen62.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02201_element_check_02178 **********\n\n");
    });

    test('02202_element_check_02179', () async {
      print("\n********** テスト実行：02202_element_check_02179 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.movie03_ext;
      print(qcashier.screen62.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.movie03_ext = testData1;
      print(qcashier.screen62.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.movie03_ext = testData2;
      print(qcashier.screen62.movie03_ext);
      expect(qcashier.screen62.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.movie03_ext = defalut;
      print(qcashier.screen62.movie03_ext);
      expect(qcashier.screen62.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02202_element_check_02179 **********\n\n");
    });

    test('02203_element_check_02180', () async {
      print("\n********** テスト実行：02203_element_check_02180 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.movie04_ext;
      print(qcashier.screen62.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.movie04_ext = testData1;
      print(qcashier.screen62.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.movie04_ext = testData2;
      print(qcashier.screen62.movie04_ext);
      expect(qcashier.screen62.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.movie04_ext = defalut;
      print(qcashier.screen62.movie04_ext);
      expect(qcashier.screen62.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02203_element_check_02180 **********\n\n");
    });

    test('02204_element_check_02181', () async {
      print("\n********** テスト実行：02204_element_check_02181 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line_title;
      print(qcashier.screen62.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line_title = testData1s;
      print(qcashier.screen62.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line_title = testData2s;
      print(qcashier.screen62.line_title);
      expect(qcashier.screen62.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line_title = defalut;
      print(qcashier.screen62.line_title);
      expect(qcashier.screen62.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02204_element_check_02181 **********\n\n");
    });

    test('02205_element_check_02182', () async {
      print("\n********** テスト実行：02205_element_check_02182 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line_title_ex;
      print(qcashier.screen62.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line_title_ex = testData1s;
      print(qcashier.screen62.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line_title_ex = testData2s;
      print(qcashier.screen62.line_title_ex);
      expect(qcashier.screen62.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line_title_ex = defalut;
      print(qcashier.screen62.line_title_ex);
      expect(qcashier.screen62.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02205_element_check_02182 **********\n\n");
    });

    test('02206_element_check_02183', () async {
      print("\n********** テスト実行：02206_element_check_02183 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line1;
      print(qcashier.screen62.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line1 = testData1s;
      print(qcashier.screen62.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line1 = testData2s;
      print(qcashier.screen62.line1);
      expect(qcashier.screen62.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line1 = defalut;
      print(qcashier.screen62.line1);
      expect(qcashier.screen62.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02206_element_check_02183 **********\n\n");
    });

    test('02207_element_check_02184', () async {
      print("\n********** テスト実行：02207_element_check_02184 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line2;
      print(qcashier.screen62.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line2 = testData1s;
      print(qcashier.screen62.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line2 = testData2s;
      print(qcashier.screen62.line2);
      expect(qcashier.screen62.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line2 = defalut;
      print(qcashier.screen62.line2);
      expect(qcashier.screen62.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02207_element_check_02184 **********\n\n");
    });

    test('02208_element_check_02185', () async {
      print("\n********** テスト実行：02208_element_check_02185 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line3;
      print(qcashier.screen62.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line3 = testData1s;
      print(qcashier.screen62.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line3 = testData2s;
      print(qcashier.screen62.line3);
      expect(qcashier.screen62.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line3 = defalut;
      print(qcashier.screen62.line3);
      expect(qcashier.screen62.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02208_element_check_02185 **********\n\n");
    });

    test('02209_element_check_02186', () async {
      print("\n********** テスト実行：02209_element_check_02186 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line4;
      print(qcashier.screen62.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line4 = testData1s;
      print(qcashier.screen62.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line4 = testData2s;
      print(qcashier.screen62.line4);
      expect(qcashier.screen62.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line4 = defalut;
      print(qcashier.screen62.line4);
      expect(qcashier.screen62.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02209_element_check_02186 **********\n\n");
    });

    test('02210_element_check_02187', () async {
      print("\n********** テスト実行：02210_element_check_02187 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line1_ex;
      print(qcashier.screen62.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line1_ex = testData1s;
      print(qcashier.screen62.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line1_ex = testData2s;
      print(qcashier.screen62.line1_ex);
      expect(qcashier.screen62.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line1_ex = defalut;
      print(qcashier.screen62.line1_ex);
      expect(qcashier.screen62.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02210_element_check_02187 **********\n\n");
    });

    test('02211_element_check_02188', () async {
      print("\n********** テスト実行：02211_element_check_02188 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line2_ex;
      print(qcashier.screen62.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line2_ex = testData1s;
      print(qcashier.screen62.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line2_ex = testData2s;
      print(qcashier.screen62.line2_ex);
      expect(qcashier.screen62.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line2_ex = defalut;
      print(qcashier.screen62.line2_ex);
      expect(qcashier.screen62.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02211_element_check_02188 **********\n\n");
    });

    test('02212_element_check_02189', () async {
      print("\n********** テスト実行：02212_element_check_02189 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line3_ex;
      print(qcashier.screen62.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line3_ex = testData1s;
      print(qcashier.screen62.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line3_ex = testData2s;
      print(qcashier.screen62.line3_ex);
      expect(qcashier.screen62.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line3_ex = defalut;
      print(qcashier.screen62.line3_ex);
      expect(qcashier.screen62.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02212_element_check_02189 **********\n\n");
    });

    test('02213_element_check_02190', () async {
      print("\n********** テスト実行：02213_element_check_02190 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.line4_ex;
      print(qcashier.screen62.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.line4_ex = testData1s;
      print(qcashier.screen62.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.line4_ex = testData2s;
      print(qcashier.screen62.line4_ex);
      expect(qcashier.screen62.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.line4_ex = defalut;
      print(qcashier.screen62.line4_ex);
      expect(qcashier.screen62.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02213_element_check_02190 **********\n\n");
    });

    test('02214_element_check_02191', () async {
      print("\n********** テスト実行：02214_element_check_02191 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.sound_led1;
      print(qcashier.screen62.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.sound_led1 = testData1;
      print(qcashier.screen62.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.sound_led1 = testData2;
      print(qcashier.screen62.sound_led1);
      expect(qcashier.screen62.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.sound_led1 = defalut;
      print(qcashier.screen62.sound_led1);
      expect(qcashier.screen62.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02214_element_check_02191 **********\n\n");
    });

    test('02215_element_check_02192', () async {
      print("\n********** テスト実行：02215_element_check_02192 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.sound_led2;
      print(qcashier.screen62.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.sound_led2 = testData1;
      print(qcashier.screen62.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.sound_led2 = testData2;
      print(qcashier.screen62.sound_led2);
      expect(qcashier.screen62.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.sound_led2 = defalut;
      print(qcashier.screen62.sound_led2);
      expect(qcashier.screen62.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02215_element_check_02192 **********\n\n");
    });

    test('02216_element_check_02193', () async {
      print("\n********** テスト実行：02216_element_check_02193 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen62.sound_led3;
      print(qcashier.screen62.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen62.sound_led3 = testData1;
      print(qcashier.screen62.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen62.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen62.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen62.sound_led3 = testData2;
      print(qcashier.screen62.sound_led3);
      expect(qcashier.screen62.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen62.sound_led3 = defalut;
      print(qcashier.screen62.sound_led3);
      expect(qcashier.screen62.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen62.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02216_element_check_02193 **********\n\n");
    });

    test('02217_element_check_02194', () async {
      print("\n********** テスト実行：02217_element_check_02194 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.title;
      print(qcashier.screen63.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.title = testData1s;
      print(qcashier.screen63.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.title = testData2s;
      print(qcashier.screen63.title);
      expect(qcashier.screen63.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.title = defalut;
      print(qcashier.screen63.title);
      expect(qcashier.screen63.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02217_element_check_02194 **********\n\n");
    });

    test('02218_element_check_02195', () async {
      print("\n********** テスト実行：02218_element_check_02195 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.msg1;
      print(qcashier.screen63.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.msg1 = testData1s;
      print(qcashier.screen63.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.msg1 = testData2s;
      print(qcashier.screen63.msg1);
      expect(qcashier.screen63.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.msg1 = defalut;
      print(qcashier.screen63.msg1);
      expect(qcashier.screen63.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02218_element_check_02195 **********\n\n");
    });

    test('02219_element_check_02196', () async {
      print("\n********** テスト実行：02219_element_check_02196 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.msg2;
      print(qcashier.screen63.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.msg2 = testData1s;
      print(qcashier.screen63.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.msg2 = testData2s;
      print(qcashier.screen63.msg2);
      expect(qcashier.screen63.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.msg2 = defalut;
      print(qcashier.screen63.msg2);
      expect(qcashier.screen63.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02219_element_check_02196 **********\n\n");
    });

    test('02220_element_check_02197', () async {
      print("\n********** テスト実行：02220_element_check_02197 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.msg1_size;
      print(qcashier.screen63.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.msg1_size = testData1;
      print(qcashier.screen63.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.msg1_size = testData2;
      print(qcashier.screen63.msg1_size);
      expect(qcashier.screen63.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.msg1_size = defalut;
      print(qcashier.screen63.msg1_size);
      expect(qcashier.screen63.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02220_element_check_02197 **********\n\n");
    });

    test('02221_element_check_02198', () async {
      print("\n********** テスト実行：02221_element_check_02198 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.msg2_size;
      print(qcashier.screen63.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.msg2_size = testData1;
      print(qcashier.screen63.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.msg2_size = testData2;
      print(qcashier.screen63.msg2_size);
      expect(qcashier.screen63.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.msg2_size = defalut;
      print(qcashier.screen63.msg2_size);
      expect(qcashier.screen63.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02221_element_check_02198 **********\n\n");
    });

    test('02222_element_check_02199', () async {
      print("\n********** テスト実行：02222_element_check_02199 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.sound1;
      print(qcashier.screen63.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.sound1 = testData1;
      print(qcashier.screen63.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.sound1 = testData2;
      print(qcashier.screen63.sound1);
      expect(qcashier.screen63.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.sound1 = defalut;
      print(qcashier.screen63.sound1);
      expect(qcashier.screen63.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02222_element_check_02199 **********\n\n");
    });

    test('02223_element_check_02200', () async {
      print("\n********** テスト実行：02223_element_check_02200 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.sound2;
      print(qcashier.screen63.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.sound2 = testData1;
      print(qcashier.screen63.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.sound2 = testData2;
      print(qcashier.screen63.sound2);
      expect(qcashier.screen63.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.sound2 = defalut;
      print(qcashier.screen63.sound2);
      expect(qcashier.screen63.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02223_element_check_02200 **********\n\n");
    });

    test('02224_element_check_02201', () async {
      print("\n********** テスト実行：02224_element_check_02201 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.sound3;
      print(qcashier.screen63.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.sound3 = testData1s;
      print(qcashier.screen63.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.sound3 = testData2s;
      print(qcashier.screen63.sound3);
      expect(qcashier.screen63.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.sound3 = defalut;
      print(qcashier.screen63.sound3);
      expect(qcashier.screen63.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02224_element_check_02201 **********\n\n");
    });

    test('02225_element_check_02202', () async {
      print("\n********** テスト実行：02225_element_check_02202 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.snd_timer;
      print(qcashier.screen63.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.snd_timer = testData1;
      print(qcashier.screen63.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.snd_timer = testData2;
      print(qcashier.screen63.snd_timer);
      expect(qcashier.screen63.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.snd_timer = defalut;
      print(qcashier.screen63.snd_timer);
      expect(qcashier.screen63.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02225_element_check_02202 **********\n\n");
    });

    test('02226_element_check_02203', () async {
      print("\n********** テスト実行：02226_element_check_02203 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.timer1;
      print(qcashier.screen63.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.timer1 = testData1;
      print(qcashier.screen63.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.timer1 = testData2;
      print(qcashier.screen63.timer1);
      expect(qcashier.screen63.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.timer1 = defalut;
      print(qcashier.screen63.timer1);
      expect(qcashier.screen63.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02226_element_check_02203 **********\n\n");
    });

    test('02227_element_check_02204', () async {
      print("\n********** テスト実行：02227_element_check_02204 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.timer2;
      print(qcashier.screen63.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.timer2 = testData1;
      print(qcashier.screen63.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.timer2 = testData2;
      print(qcashier.screen63.timer2);
      expect(qcashier.screen63.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.timer2 = defalut;
      print(qcashier.screen63.timer2);
      expect(qcashier.screen63.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02227_element_check_02204 **********\n\n");
    });

    test('02228_element_check_02205', () async {
      print("\n********** テスト実行：02228_element_check_02205 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.timer3;
      print(qcashier.screen63.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.timer3 = testData1;
      print(qcashier.screen63.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.timer3 = testData2;
      print(qcashier.screen63.timer3);
      expect(qcashier.screen63.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.timer3 = defalut;
      print(qcashier.screen63.timer3);
      expect(qcashier.screen63.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02228_element_check_02205 **********\n\n");
    });

    test('02229_element_check_02206', () async {
      print("\n********** テスト実行：02229_element_check_02206 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.dsp_flg1;
      print(qcashier.screen63.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.dsp_flg1 = testData1;
      print(qcashier.screen63.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.dsp_flg1 = testData2;
      print(qcashier.screen63.dsp_flg1);
      expect(qcashier.screen63.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.dsp_flg1 = defalut;
      print(qcashier.screen63.dsp_flg1);
      expect(qcashier.screen63.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02229_element_check_02206 **********\n\n");
    });

    test('02230_element_check_02207', () async {
      print("\n********** テスト実行：02230_element_check_02207 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.dsp_flg2;
      print(qcashier.screen63.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.dsp_flg2 = testData1;
      print(qcashier.screen63.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.dsp_flg2 = testData2;
      print(qcashier.screen63.dsp_flg2);
      expect(qcashier.screen63.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.dsp_flg2 = defalut;
      print(qcashier.screen63.dsp_flg2);
      expect(qcashier.screen63.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02230_element_check_02207 **********\n\n");
    });

    test('02231_element_check_02208', () async {
      print("\n********** テスト実行：02231_element_check_02208 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.movie01_ext;
      print(qcashier.screen63.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.movie01_ext = testData1;
      print(qcashier.screen63.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.movie01_ext = testData2;
      print(qcashier.screen63.movie01_ext);
      expect(qcashier.screen63.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.movie01_ext = defalut;
      print(qcashier.screen63.movie01_ext);
      expect(qcashier.screen63.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02231_element_check_02208 **********\n\n");
    });

    test('02232_element_check_02209', () async {
      print("\n********** テスト実行：02232_element_check_02209 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.movie02_ext;
      print(qcashier.screen63.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.movie02_ext = testData1;
      print(qcashier.screen63.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.movie02_ext = testData2;
      print(qcashier.screen63.movie02_ext);
      expect(qcashier.screen63.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.movie02_ext = defalut;
      print(qcashier.screen63.movie02_ext);
      expect(qcashier.screen63.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02232_element_check_02209 **********\n\n");
    });

    test('02233_element_check_02210', () async {
      print("\n********** テスト実行：02233_element_check_02210 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.movie03_ext;
      print(qcashier.screen63.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.movie03_ext = testData1;
      print(qcashier.screen63.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.movie03_ext = testData2;
      print(qcashier.screen63.movie03_ext);
      expect(qcashier.screen63.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.movie03_ext = defalut;
      print(qcashier.screen63.movie03_ext);
      expect(qcashier.screen63.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02233_element_check_02210 **********\n\n");
    });

    test('02234_element_check_02211', () async {
      print("\n********** テスト実行：02234_element_check_02211 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.movie04_ext;
      print(qcashier.screen63.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.movie04_ext = testData1;
      print(qcashier.screen63.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.movie04_ext = testData2;
      print(qcashier.screen63.movie04_ext);
      expect(qcashier.screen63.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.movie04_ext = defalut;
      print(qcashier.screen63.movie04_ext);
      expect(qcashier.screen63.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02234_element_check_02211 **********\n\n");
    });

    test('02235_element_check_02212', () async {
      print("\n********** テスト実行：02235_element_check_02212 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line_title;
      print(qcashier.screen63.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line_title = testData1s;
      print(qcashier.screen63.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line_title = testData2s;
      print(qcashier.screen63.line_title);
      expect(qcashier.screen63.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line_title = defalut;
      print(qcashier.screen63.line_title);
      expect(qcashier.screen63.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02235_element_check_02212 **********\n\n");
    });

    test('02236_element_check_02213', () async {
      print("\n********** テスト実行：02236_element_check_02213 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line_title_ex;
      print(qcashier.screen63.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line_title_ex = testData1s;
      print(qcashier.screen63.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line_title_ex = testData2s;
      print(qcashier.screen63.line_title_ex);
      expect(qcashier.screen63.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line_title_ex = defalut;
      print(qcashier.screen63.line_title_ex);
      expect(qcashier.screen63.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02236_element_check_02213 **********\n\n");
    });

    test('02237_element_check_02214', () async {
      print("\n********** テスト実行：02237_element_check_02214 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line1;
      print(qcashier.screen63.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line1 = testData1s;
      print(qcashier.screen63.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line1 = testData2s;
      print(qcashier.screen63.line1);
      expect(qcashier.screen63.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line1 = defalut;
      print(qcashier.screen63.line1);
      expect(qcashier.screen63.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02237_element_check_02214 **********\n\n");
    });

    test('02238_element_check_02215', () async {
      print("\n********** テスト実行：02238_element_check_02215 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line2;
      print(qcashier.screen63.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line2 = testData1s;
      print(qcashier.screen63.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line2 = testData2s;
      print(qcashier.screen63.line2);
      expect(qcashier.screen63.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line2 = defalut;
      print(qcashier.screen63.line2);
      expect(qcashier.screen63.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02238_element_check_02215 **********\n\n");
    });

    test('02239_element_check_02216', () async {
      print("\n********** テスト実行：02239_element_check_02216 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line3;
      print(qcashier.screen63.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line3 = testData1s;
      print(qcashier.screen63.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line3 = testData2s;
      print(qcashier.screen63.line3);
      expect(qcashier.screen63.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line3 = defalut;
      print(qcashier.screen63.line3);
      expect(qcashier.screen63.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02239_element_check_02216 **********\n\n");
    });

    test('02240_element_check_02217', () async {
      print("\n********** テスト実行：02240_element_check_02217 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line4;
      print(qcashier.screen63.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line4 = testData1s;
      print(qcashier.screen63.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line4 = testData2s;
      print(qcashier.screen63.line4);
      expect(qcashier.screen63.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line4 = defalut;
      print(qcashier.screen63.line4);
      expect(qcashier.screen63.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02240_element_check_02217 **********\n\n");
    });

    test('02241_element_check_02218', () async {
      print("\n********** テスト実行：02241_element_check_02218 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line1_ex;
      print(qcashier.screen63.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line1_ex = testData1s;
      print(qcashier.screen63.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line1_ex = testData2s;
      print(qcashier.screen63.line1_ex);
      expect(qcashier.screen63.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line1_ex = defalut;
      print(qcashier.screen63.line1_ex);
      expect(qcashier.screen63.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02241_element_check_02218 **********\n\n");
    });

    test('02242_element_check_02219', () async {
      print("\n********** テスト実行：02242_element_check_02219 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line2_ex;
      print(qcashier.screen63.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line2_ex = testData1s;
      print(qcashier.screen63.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line2_ex = testData2s;
      print(qcashier.screen63.line2_ex);
      expect(qcashier.screen63.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line2_ex = defalut;
      print(qcashier.screen63.line2_ex);
      expect(qcashier.screen63.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02242_element_check_02219 **********\n\n");
    });

    test('02243_element_check_02220', () async {
      print("\n********** テスト実行：02243_element_check_02220 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line3_ex;
      print(qcashier.screen63.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line3_ex = testData1s;
      print(qcashier.screen63.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line3_ex = testData2s;
      print(qcashier.screen63.line3_ex);
      expect(qcashier.screen63.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line3_ex = defalut;
      print(qcashier.screen63.line3_ex);
      expect(qcashier.screen63.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02243_element_check_02220 **********\n\n");
    });

    test('02244_element_check_02221', () async {
      print("\n********** テスト実行：02244_element_check_02221 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.line4_ex;
      print(qcashier.screen63.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.line4_ex = testData1s;
      print(qcashier.screen63.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.line4_ex = testData2s;
      print(qcashier.screen63.line4_ex);
      expect(qcashier.screen63.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.line4_ex = defalut;
      print(qcashier.screen63.line4_ex);
      expect(qcashier.screen63.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02244_element_check_02221 **********\n\n");
    });

    test('02245_element_check_02222', () async {
      print("\n********** テスト実行：02245_element_check_02222 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.sound_led1;
      print(qcashier.screen63.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.sound_led1 = testData1;
      print(qcashier.screen63.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.sound_led1 = testData2;
      print(qcashier.screen63.sound_led1);
      expect(qcashier.screen63.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.sound_led1 = defalut;
      print(qcashier.screen63.sound_led1);
      expect(qcashier.screen63.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02245_element_check_02222 **********\n\n");
    });

    test('02246_element_check_02223', () async {
      print("\n********** テスト実行：02246_element_check_02223 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.sound_led2;
      print(qcashier.screen63.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.sound_led2 = testData1;
      print(qcashier.screen63.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.sound_led2 = testData2;
      print(qcashier.screen63.sound_led2);
      expect(qcashier.screen63.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.sound_led2 = defalut;
      print(qcashier.screen63.sound_led2);
      expect(qcashier.screen63.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02246_element_check_02223 **********\n\n");
    });

    test('02247_element_check_02224', () async {
      print("\n********** テスト実行：02247_element_check_02224 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen63.sound_led3;
      print(qcashier.screen63.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen63.sound_led3 = testData1s;
      print(qcashier.screen63.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen63.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen63.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen63.sound_led3 = testData2s;
      print(qcashier.screen63.sound_led3);
      expect(qcashier.screen63.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen63.sound_led3 = defalut;
      print(qcashier.screen63.sound_led3);
      expect(qcashier.screen63.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen63.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02247_element_check_02224 **********\n\n");
    });

    test('02248_element_check_02225', () async {
      print("\n********** テスト実行：02248_element_check_02225 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.title;
      print(qcashier.screen64.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.title = testData1s;
      print(qcashier.screen64.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.title = testData2s;
      print(qcashier.screen64.title);
      expect(qcashier.screen64.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.title = defalut;
      print(qcashier.screen64.title);
      expect(qcashier.screen64.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02248_element_check_02225 **********\n\n");
    });

    test('02249_element_check_02226', () async {
      print("\n********** テスト実行：02249_element_check_02226 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.msg1;
      print(qcashier.screen64.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.msg1 = testData1s;
      print(qcashier.screen64.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.msg1 = testData2s;
      print(qcashier.screen64.msg1);
      expect(qcashier.screen64.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.msg1 = defalut;
      print(qcashier.screen64.msg1);
      expect(qcashier.screen64.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02249_element_check_02226 **********\n\n");
    });

    test('02250_element_check_02227', () async {
      print("\n********** テスト実行：02250_element_check_02227 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.msg2;
      print(qcashier.screen64.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.msg2 = testData1s;
      print(qcashier.screen64.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.msg2 = testData2s;
      print(qcashier.screen64.msg2);
      expect(qcashier.screen64.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.msg2 = defalut;
      print(qcashier.screen64.msg2);
      expect(qcashier.screen64.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02250_element_check_02227 **********\n\n");
    });

    test('02251_element_check_02228', () async {
      print("\n********** テスト実行：02251_element_check_02228 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.msg1_size;
      print(qcashier.screen64.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.msg1_size = testData1;
      print(qcashier.screen64.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.msg1_size = testData2;
      print(qcashier.screen64.msg1_size);
      expect(qcashier.screen64.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.msg1_size = defalut;
      print(qcashier.screen64.msg1_size);
      expect(qcashier.screen64.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02251_element_check_02228 **********\n\n");
    });

    test('02252_element_check_02229', () async {
      print("\n********** テスト実行：02252_element_check_02229 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.msg2_size;
      print(qcashier.screen64.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.msg2_size = testData1;
      print(qcashier.screen64.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.msg2_size = testData2;
      print(qcashier.screen64.msg2_size);
      expect(qcashier.screen64.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.msg2_size = defalut;
      print(qcashier.screen64.msg2_size);
      expect(qcashier.screen64.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02252_element_check_02229 **********\n\n");
    });

    test('02253_element_check_02230', () async {
      print("\n********** テスト実行：02253_element_check_02230 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.sound1;
      print(qcashier.screen64.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.sound1 = testData1;
      print(qcashier.screen64.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.sound1 = testData2;
      print(qcashier.screen64.sound1);
      expect(qcashier.screen64.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.sound1 = defalut;
      print(qcashier.screen64.sound1);
      expect(qcashier.screen64.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02253_element_check_02230 **********\n\n");
    });

    test('02254_element_check_02231', () async {
      print("\n********** テスト実行：02254_element_check_02231 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.sound2;
      print(qcashier.screen64.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.sound2 = testData1;
      print(qcashier.screen64.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.sound2 = testData2;
      print(qcashier.screen64.sound2);
      expect(qcashier.screen64.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.sound2 = defalut;
      print(qcashier.screen64.sound2);
      expect(qcashier.screen64.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02254_element_check_02231 **********\n\n");
    });

    test('02255_element_check_02232', () async {
      print("\n********** テスト実行：02255_element_check_02232 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.sound3;
      print(qcashier.screen64.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.sound3 = testData1;
      print(qcashier.screen64.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.sound3 = testData2;
      print(qcashier.screen64.sound3);
      expect(qcashier.screen64.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.sound3 = defalut;
      print(qcashier.screen64.sound3);
      expect(qcashier.screen64.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02255_element_check_02232 **********\n\n");
    });

    test('02256_element_check_02233', () async {
      print("\n********** テスト実行：02256_element_check_02233 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.snd_timer;
      print(qcashier.screen64.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.snd_timer = testData1;
      print(qcashier.screen64.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.snd_timer = testData2;
      print(qcashier.screen64.snd_timer);
      expect(qcashier.screen64.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.snd_timer = defalut;
      print(qcashier.screen64.snd_timer);
      expect(qcashier.screen64.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02256_element_check_02233 **********\n\n");
    });

    test('02257_element_check_02234', () async {
      print("\n********** テスト実行：02257_element_check_02234 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.timer1;
      print(qcashier.screen64.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.timer1 = testData1;
      print(qcashier.screen64.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.timer1 = testData2;
      print(qcashier.screen64.timer1);
      expect(qcashier.screen64.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.timer1 = defalut;
      print(qcashier.screen64.timer1);
      expect(qcashier.screen64.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02257_element_check_02234 **********\n\n");
    });

    test('02258_element_check_02235', () async {
      print("\n********** テスト実行：02258_element_check_02235 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.timer2;
      print(qcashier.screen64.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.timer2 = testData1;
      print(qcashier.screen64.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.timer2 = testData2;
      print(qcashier.screen64.timer2);
      expect(qcashier.screen64.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.timer2 = defalut;
      print(qcashier.screen64.timer2);
      expect(qcashier.screen64.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02258_element_check_02235 **********\n\n");
    });

    test('02259_element_check_02236', () async {
      print("\n********** テスト実行：02259_element_check_02236 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.timer3;
      print(qcashier.screen64.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.timer3 = testData1;
      print(qcashier.screen64.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.timer3 = testData2;
      print(qcashier.screen64.timer3);
      expect(qcashier.screen64.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.timer3 = defalut;
      print(qcashier.screen64.timer3);
      expect(qcashier.screen64.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02259_element_check_02236 **********\n\n");
    });

    test('02260_element_check_02237', () async {
      print("\n********** テスト実行：02260_element_check_02237 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.dsp_flg1;
      print(qcashier.screen64.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.dsp_flg1 = testData1;
      print(qcashier.screen64.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.dsp_flg1 = testData2;
      print(qcashier.screen64.dsp_flg1);
      expect(qcashier.screen64.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.dsp_flg1 = defalut;
      print(qcashier.screen64.dsp_flg1);
      expect(qcashier.screen64.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02260_element_check_02237 **********\n\n");
    });

    test('02261_element_check_02238', () async {
      print("\n********** テスト実行：02261_element_check_02238 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.dsp_flg2;
      print(qcashier.screen64.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.dsp_flg2 = testData1;
      print(qcashier.screen64.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.dsp_flg2 = testData2;
      print(qcashier.screen64.dsp_flg2);
      expect(qcashier.screen64.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.dsp_flg2 = defalut;
      print(qcashier.screen64.dsp_flg2);
      expect(qcashier.screen64.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02261_element_check_02238 **********\n\n");
    });

    test('02262_element_check_02239', () async {
      print("\n********** テスト実行：02262_element_check_02239 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.movie01_ext;
      print(qcashier.screen64.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.movie01_ext = testData1;
      print(qcashier.screen64.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.movie01_ext = testData2;
      print(qcashier.screen64.movie01_ext);
      expect(qcashier.screen64.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.movie01_ext = defalut;
      print(qcashier.screen64.movie01_ext);
      expect(qcashier.screen64.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02262_element_check_02239 **********\n\n");
    });

    test('02263_element_check_02240', () async {
      print("\n********** テスト実行：02263_element_check_02240 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.movie02_ext;
      print(qcashier.screen64.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.movie02_ext = testData1;
      print(qcashier.screen64.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.movie02_ext = testData2;
      print(qcashier.screen64.movie02_ext);
      expect(qcashier.screen64.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.movie02_ext = defalut;
      print(qcashier.screen64.movie02_ext);
      expect(qcashier.screen64.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02263_element_check_02240 **********\n\n");
    });

    test('02264_element_check_02241', () async {
      print("\n********** テスト実行：02264_element_check_02241 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.movie03_ext;
      print(qcashier.screen64.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.movie03_ext = testData1;
      print(qcashier.screen64.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.movie03_ext = testData2;
      print(qcashier.screen64.movie03_ext);
      expect(qcashier.screen64.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.movie03_ext = defalut;
      print(qcashier.screen64.movie03_ext);
      expect(qcashier.screen64.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02264_element_check_02241 **********\n\n");
    });

    test('02265_element_check_02242', () async {
      print("\n********** テスト実行：02265_element_check_02242 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.movie04_ext;
      print(qcashier.screen64.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.movie04_ext = testData1;
      print(qcashier.screen64.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.movie04_ext = testData2;
      print(qcashier.screen64.movie04_ext);
      expect(qcashier.screen64.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.movie04_ext = defalut;
      print(qcashier.screen64.movie04_ext);
      expect(qcashier.screen64.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02265_element_check_02242 **********\n\n");
    });

    test('02266_element_check_02243', () async {
      print("\n********** テスト実行：02266_element_check_02243 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line_title;
      print(qcashier.screen64.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line_title = testData1s;
      print(qcashier.screen64.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line_title = testData2s;
      print(qcashier.screen64.line_title);
      expect(qcashier.screen64.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line_title = defalut;
      print(qcashier.screen64.line_title);
      expect(qcashier.screen64.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02266_element_check_02243 **********\n\n");
    });

    test('02267_element_check_02244', () async {
      print("\n********** テスト実行：02267_element_check_02244 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line_title_ex;
      print(qcashier.screen64.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line_title_ex = testData1s;
      print(qcashier.screen64.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line_title_ex = testData2s;
      print(qcashier.screen64.line_title_ex);
      expect(qcashier.screen64.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line_title_ex = defalut;
      print(qcashier.screen64.line_title_ex);
      expect(qcashier.screen64.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02267_element_check_02244 **********\n\n");
    });

    test('02268_element_check_02245', () async {
      print("\n********** テスト実行：02268_element_check_02245 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line1;
      print(qcashier.screen64.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line1 = testData1s;
      print(qcashier.screen64.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line1 = testData2s;
      print(qcashier.screen64.line1);
      expect(qcashier.screen64.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line1 = defalut;
      print(qcashier.screen64.line1);
      expect(qcashier.screen64.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02268_element_check_02245 **********\n\n");
    });

    test('02269_element_check_02246', () async {
      print("\n********** テスト実行：02269_element_check_02246 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line2;
      print(qcashier.screen64.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line2 = testData1s;
      print(qcashier.screen64.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line2 = testData2s;
      print(qcashier.screen64.line2);
      expect(qcashier.screen64.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line2 = defalut;
      print(qcashier.screen64.line2);
      expect(qcashier.screen64.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02269_element_check_02246 **********\n\n");
    });

    test('02270_element_check_02247', () async {
      print("\n********** テスト実行：02270_element_check_02247 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line3;
      print(qcashier.screen64.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line3 = testData1s;
      print(qcashier.screen64.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line3 = testData2s;
      print(qcashier.screen64.line3);
      expect(qcashier.screen64.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line3 = defalut;
      print(qcashier.screen64.line3);
      expect(qcashier.screen64.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02270_element_check_02247 **********\n\n");
    });

    test('02271_element_check_02248', () async {
      print("\n********** テスト実行：02271_element_check_02248 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line4;
      print(qcashier.screen64.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line4 = testData1s;
      print(qcashier.screen64.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line4 = testData2s;
      print(qcashier.screen64.line4);
      expect(qcashier.screen64.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line4 = defalut;
      print(qcashier.screen64.line4);
      expect(qcashier.screen64.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02271_element_check_02248 **********\n\n");
    });

    test('02272_element_check_02249', () async {
      print("\n********** テスト実行：02272_element_check_02249 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line1_ex;
      print(qcashier.screen64.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line1_ex = testData1s;
      print(qcashier.screen64.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line1_ex = testData2s;
      print(qcashier.screen64.line1_ex);
      expect(qcashier.screen64.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line1_ex = defalut;
      print(qcashier.screen64.line1_ex);
      expect(qcashier.screen64.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02272_element_check_02249 **********\n\n");
    });

    test('02273_element_check_02250', () async {
      print("\n********** テスト実行：02273_element_check_02250 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line2_ex;
      print(qcashier.screen64.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line2_ex = testData1s;
      print(qcashier.screen64.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line2_ex = testData2s;
      print(qcashier.screen64.line2_ex);
      expect(qcashier.screen64.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line2_ex = defalut;
      print(qcashier.screen64.line2_ex);
      expect(qcashier.screen64.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02273_element_check_02250 **********\n\n");
    });

    test('02274_element_check_02251', () async {
      print("\n********** テスト実行：02274_element_check_02251 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line3_ex;
      print(qcashier.screen64.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line3_ex = testData1s;
      print(qcashier.screen64.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line3_ex = testData2s;
      print(qcashier.screen64.line3_ex);
      expect(qcashier.screen64.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line3_ex = defalut;
      print(qcashier.screen64.line3_ex);
      expect(qcashier.screen64.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02274_element_check_02251 **********\n\n");
    });

    test('02275_element_check_02252', () async {
      print("\n********** テスト実行：02275_element_check_02252 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.line4_ex;
      print(qcashier.screen64.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.line4_ex = testData1s;
      print(qcashier.screen64.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.line4_ex = testData2s;
      print(qcashier.screen64.line4_ex);
      expect(qcashier.screen64.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.line4_ex = defalut;
      print(qcashier.screen64.line4_ex);
      expect(qcashier.screen64.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02275_element_check_02252 **********\n\n");
    });

    test('02276_element_check_02253', () async {
      print("\n********** テスト実行：02276_element_check_02253 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.sound_led1;
      print(qcashier.screen64.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.sound_led1 = testData1;
      print(qcashier.screen64.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.sound_led1 = testData2;
      print(qcashier.screen64.sound_led1);
      expect(qcashier.screen64.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.sound_led1 = defalut;
      print(qcashier.screen64.sound_led1);
      expect(qcashier.screen64.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02276_element_check_02253 **********\n\n");
    });

    test('02277_element_check_02254', () async {
      print("\n********** テスト実行：02277_element_check_02254 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.sound_led2;
      print(qcashier.screen64.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.sound_led2 = testData1;
      print(qcashier.screen64.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.sound_led2 = testData2;
      print(qcashier.screen64.sound_led2);
      expect(qcashier.screen64.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.sound_led2 = defalut;
      print(qcashier.screen64.sound_led2);
      expect(qcashier.screen64.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02277_element_check_02254 **********\n\n");
    });

    test('02278_element_check_02255', () async {
      print("\n********** テスト実行：02278_element_check_02255 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen64.sound_led3;
      print(qcashier.screen64.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen64.sound_led3 = testData1;
      print(qcashier.screen64.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen64.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen64.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen64.sound_led3 = testData2;
      print(qcashier.screen64.sound_led3);
      expect(qcashier.screen64.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen64.sound_led3 = defalut;
      print(qcashier.screen64.sound_led3);
      expect(qcashier.screen64.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen64.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02278_element_check_02255 **********\n\n");
    });

    test('02279_element_check_02256', () async {
      print("\n********** テスト実行：02279_element_check_02256 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.title;
      print(qcashier.screen65.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.title = testData1s;
      print(qcashier.screen65.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.title = testData2s;
      print(qcashier.screen65.title);
      expect(qcashier.screen65.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.title = defalut;
      print(qcashier.screen65.title);
      expect(qcashier.screen65.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02279_element_check_02256 **********\n\n");
    });

    test('02280_element_check_02257', () async {
      print("\n********** テスト実行：02280_element_check_02257 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.msg1;
      print(qcashier.screen65.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.msg1 = testData1s;
      print(qcashier.screen65.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.msg1 = testData2s;
      print(qcashier.screen65.msg1);
      expect(qcashier.screen65.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.msg1 = defalut;
      print(qcashier.screen65.msg1);
      expect(qcashier.screen65.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02280_element_check_02257 **********\n\n");
    });

    test('02281_element_check_02258', () async {
      print("\n********** テスト実行：02281_element_check_02258 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.msg2;
      print(qcashier.screen65.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.msg2 = testData1s;
      print(qcashier.screen65.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.msg2 = testData2s;
      print(qcashier.screen65.msg2);
      expect(qcashier.screen65.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.msg2 = defalut;
      print(qcashier.screen65.msg2);
      expect(qcashier.screen65.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02281_element_check_02258 **********\n\n");
    });

    test('02282_element_check_02259', () async {
      print("\n********** テスト実行：02282_element_check_02259 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.msg1_size;
      print(qcashier.screen65.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.msg1_size = testData1;
      print(qcashier.screen65.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.msg1_size = testData2;
      print(qcashier.screen65.msg1_size);
      expect(qcashier.screen65.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.msg1_size = defalut;
      print(qcashier.screen65.msg1_size);
      expect(qcashier.screen65.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02282_element_check_02259 **********\n\n");
    });

    test('02283_element_check_02260', () async {
      print("\n********** テスト実行：02283_element_check_02260 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.msg2_size;
      print(qcashier.screen65.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.msg2_size = testData1;
      print(qcashier.screen65.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.msg2_size = testData2;
      print(qcashier.screen65.msg2_size);
      expect(qcashier.screen65.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.msg2_size = defalut;
      print(qcashier.screen65.msg2_size);
      expect(qcashier.screen65.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02283_element_check_02260 **********\n\n");
    });

    test('02284_element_check_02261', () async {
      print("\n********** テスト実行：02284_element_check_02261 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.sound1;
      print(qcashier.screen65.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.sound1 = testData1;
      print(qcashier.screen65.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.sound1 = testData2;
      print(qcashier.screen65.sound1);
      expect(qcashier.screen65.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.sound1 = defalut;
      print(qcashier.screen65.sound1);
      expect(qcashier.screen65.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02284_element_check_02261 **********\n\n");
    });

    test('02285_element_check_02262', () async {
      print("\n********** テスト実行：02285_element_check_02262 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.sound2;
      print(qcashier.screen65.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.sound2 = testData1;
      print(qcashier.screen65.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.sound2 = testData2;
      print(qcashier.screen65.sound2);
      expect(qcashier.screen65.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.sound2 = defalut;
      print(qcashier.screen65.sound2);
      expect(qcashier.screen65.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02285_element_check_02262 **********\n\n");
    });

    test('02286_element_check_02263', () async {
      print("\n********** テスト実行：02286_element_check_02263 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.sound3;
      print(qcashier.screen65.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.sound3 = testData1;
      print(qcashier.screen65.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.sound3 = testData2;
      print(qcashier.screen65.sound3);
      expect(qcashier.screen65.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.sound3 = defalut;
      print(qcashier.screen65.sound3);
      expect(qcashier.screen65.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02286_element_check_02263 **********\n\n");
    });

    test('02287_element_check_02264', () async {
      print("\n********** テスト実行：02287_element_check_02264 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.snd_timer;
      print(qcashier.screen65.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.snd_timer = testData1;
      print(qcashier.screen65.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.snd_timer = testData2;
      print(qcashier.screen65.snd_timer);
      expect(qcashier.screen65.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.snd_timer = defalut;
      print(qcashier.screen65.snd_timer);
      expect(qcashier.screen65.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02287_element_check_02264 **********\n\n");
    });

    test('02288_element_check_02265', () async {
      print("\n********** テスト実行：02288_element_check_02265 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.timer1;
      print(qcashier.screen65.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.timer1 = testData1;
      print(qcashier.screen65.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.timer1 = testData2;
      print(qcashier.screen65.timer1);
      expect(qcashier.screen65.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.timer1 = defalut;
      print(qcashier.screen65.timer1);
      expect(qcashier.screen65.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02288_element_check_02265 **********\n\n");
    });

    test('02289_element_check_02266', () async {
      print("\n********** テスト実行：02289_element_check_02266 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.timer2;
      print(qcashier.screen65.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.timer2 = testData1;
      print(qcashier.screen65.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.timer2 = testData2;
      print(qcashier.screen65.timer2);
      expect(qcashier.screen65.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.timer2 = defalut;
      print(qcashier.screen65.timer2);
      expect(qcashier.screen65.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02289_element_check_02266 **********\n\n");
    });

    test('02290_element_check_02267', () async {
      print("\n********** テスト実行：02290_element_check_02267 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.timer3;
      print(qcashier.screen65.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.timer3 = testData1;
      print(qcashier.screen65.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.timer3 = testData2;
      print(qcashier.screen65.timer3);
      expect(qcashier.screen65.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.timer3 = defalut;
      print(qcashier.screen65.timer3);
      expect(qcashier.screen65.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02290_element_check_02267 **********\n\n");
    });

    test('02291_element_check_02268', () async {
      print("\n********** テスト実行：02291_element_check_02268 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.dsp_flg1;
      print(qcashier.screen65.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.dsp_flg1 = testData1;
      print(qcashier.screen65.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.dsp_flg1 = testData2;
      print(qcashier.screen65.dsp_flg1);
      expect(qcashier.screen65.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.dsp_flg1 = defalut;
      print(qcashier.screen65.dsp_flg1);
      expect(qcashier.screen65.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02291_element_check_02268 **********\n\n");
    });

    test('02292_element_check_02269', () async {
      print("\n********** テスト実行：02292_element_check_02269 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.dsp_flg2;
      print(qcashier.screen65.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.dsp_flg2 = testData1;
      print(qcashier.screen65.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.dsp_flg2 = testData2;
      print(qcashier.screen65.dsp_flg2);
      expect(qcashier.screen65.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.dsp_flg2 = defalut;
      print(qcashier.screen65.dsp_flg2);
      expect(qcashier.screen65.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02292_element_check_02269 **********\n\n");
    });

    test('02293_element_check_02270', () async {
      print("\n********** テスト実行：02293_element_check_02270 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.movie01_ext;
      print(qcashier.screen65.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.movie01_ext = testData1;
      print(qcashier.screen65.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.movie01_ext = testData2;
      print(qcashier.screen65.movie01_ext);
      expect(qcashier.screen65.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.movie01_ext = defalut;
      print(qcashier.screen65.movie01_ext);
      expect(qcashier.screen65.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02293_element_check_02270 **********\n\n");
    });

    test('02294_element_check_02271', () async {
      print("\n********** テスト実行：02294_element_check_02271 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.movie02_ext;
      print(qcashier.screen65.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.movie02_ext = testData1;
      print(qcashier.screen65.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.movie02_ext = testData2;
      print(qcashier.screen65.movie02_ext);
      expect(qcashier.screen65.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.movie02_ext = defalut;
      print(qcashier.screen65.movie02_ext);
      expect(qcashier.screen65.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02294_element_check_02271 **********\n\n");
    });

    test('02295_element_check_02272', () async {
      print("\n********** テスト実行：02295_element_check_02272 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.movie03_ext;
      print(qcashier.screen65.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.movie03_ext = testData1;
      print(qcashier.screen65.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.movie03_ext = testData2;
      print(qcashier.screen65.movie03_ext);
      expect(qcashier.screen65.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.movie03_ext = defalut;
      print(qcashier.screen65.movie03_ext);
      expect(qcashier.screen65.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02295_element_check_02272 **********\n\n");
    });

    test('02296_element_check_02273', () async {
      print("\n********** テスト実行：02296_element_check_02273 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.movie04_ext;
      print(qcashier.screen65.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.movie04_ext = testData1;
      print(qcashier.screen65.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.movie04_ext = testData2;
      print(qcashier.screen65.movie04_ext);
      expect(qcashier.screen65.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.movie04_ext = defalut;
      print(qcashier.screen65.movie04_ext);
      expect(qcashier.screen65.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02296_element_check_02273 **********\n\n");
    });

    test('02297_element_check_02274', () async {
      print("\n********** テスト実行：02297_element_check_02274 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line_title;
      print(qcashier.screen65.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line_title = testData1s;
      print(qcashier.screen65.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line_title = testData2s;
      print(qcashier.screen65.line_title);
      expect(qcashier.screen65.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line_title = defalut;
      print(qcashier.screen65.line_title);
      expect(qcashier.screen65.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02297_element_check_02274 **********\n\n");
    });

    test('02298_element_check_02275', () async {
      print("\n********** テスト実行：02298_element_check_02275 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line_title_ex;
      print(qcashier.screen65.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line_title_ex = testData1s;
      print(qcashier.screen65.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line_title_ex = testData2s;
      print(qcashier.screen65.line_title_ex);
      expect(qcashier.screen65.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line_title_ex = defalut;
      print(qcashier.screen65.line_title_ex);
      expect(qcashier.screen65.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02298_element_check_02275 **********\n\n");
    });

    test('02299_element_check_02276', () async {
      print("\n********** テスト実行：02299_element_check_02276 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line1;
      print(qcashier.screen65.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line1 = testData1s;
      print(qcashier.screen65.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line1 = testData2s;
      print(qcashier.screen65.line1);
      expect(qcashier.screen65.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line1 = defalut;
      print(qcashier.screen65.line1);
      expect(qcashier.screen65.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02299_element_check_02276 **********\n\n");
    });

    test('02300_element_check_02277', () async {
      print("\n********** テスト実行：02300_element_check_02277 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line2;
      print(qcashier.screen65.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line2 = testData1s;
      print(qcashier.screen65.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line2 = testData2s;
      print(qcashier.screen65.line2);
      expect(qcashier.screen65.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line2 = defalut;
      print(qcashier.screen65.line2);
      expect(qcashier.screen65.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02300_element_check_02277 **********\n\n");
    });

    test('02301_element_check_02278', () async {
      print("\n********** テスト実行：02301_element_check_02278 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line3;
      print(qcashier.screen65.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line3 = testData1s;
      print(qcashier.screen65.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line3 = testData2s;
      print(qcashier.screen65.line3);
      expect(qcashier.screen65.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line3 = defalut;
      print(qcashier.screen65.line3);
      expect(qcashier.screen65.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02301_element_check_02278 **********\n\n");
    });

    test('02302_element_check_02279', () async {
      print("\n********** テスト実行：02302_element_check_02279 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line4;
      print(qcashier.screen65.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line4 = testData1s;
      print(qcashier.screen65.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line4 = testData2s;
      print(qcashier.screen65.line4);
      expect(qcashier.screen65.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line4 = defalut;
      print(qcashier.screen65.line4);
      expect(qcashier.screen65.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02302_element_check_02279 **********\n\n");
    });

    test('02303_element_check_02280', () async {
      print("\n********** テスト実行：02303_element_check_02280 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line1_ex;
      print(qcashier.screen65.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line1_ex = testData1s;
      print(qcashier.screen65.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line1_ex = testData2s;
      print(qcashier.screen65.line1_ex);
      expect(qcashier.screen65.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line1_ex = defalut;
      print(qcashier.screen65.line1_ex);
      expect(qcashier.screen65.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02303_element_check_02280 **********\n\n");
    });

    test('02304_element_check_02281', () async {
      print("\n********** テスト実行：02304_element_check_02281 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line2_ex;
      print(qcashier.screen65.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line2_ex = testData1s;
      print(qcashier.screen65.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line2_ex = testData2s;
      print(qcashier.screen65.line2_ex);
      expect(qcashier.screen65.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line2_ex = defalut;
      print(qcashier.screen65.line2_ex);
      expect(qcashier.screen65.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02304_element_check_02281 **********\n\n");
    });

    test('02305_element_check_02282', () async {
      print("\n********** テスト実行：02305_element_check_02282 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line3_ex;
      print(qcashier.screen65.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line3_ex = testData1s;
      print(qcashier.screen65.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line3_ex = testData2s;
      print(qcashier.screen65.line3_ex);
      expect(qcashier.screen65.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line3_ex = defalut;
      print(qcashier.screen65.line3_ex);
      expect(qcashier.screen65.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02305_element_check_02282 **********\n\n");
    });

    test('02306_element_check_02283', () async {
      print("\n********** テスト実行：02306_element_check_02283 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.line4_ex;
      print(qcashier.screen65.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.line4_ex = testData1s;
      print(qcashier.screen65.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.line4_ex = testData2s;
      print(qcashier.screen65.line4_ex);
      expect(qcashier.screen65.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.line4_ex = defalut;
      print(qcashier.screen65.line4_ex);
      expect(qcashier.screen65.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02306_element_check_02283 **********\n\n");
    });

    test('02307_element_check_02284', () async {
      print("\n********** テスト実行：02307_element_check_02284 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.sound_led1;
      print(qcashier.screen65.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.sound_led1 = testData1;
      print(qcashier.screen65.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.sound_led1 = testData2;
      print(qcashier.screen65.sound_led1);
      expect(qcashier.screen65.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.sound_led1 = defalut;
      print(qcashier.screen65.sound_led1);
      expect(qcashier.screen65.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02307_element_check_02284 **********\n\n");
    });

    test('02308_element_check_02285', () async {
      print("\n********** テスト実行：02308_element_check_02285 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.sound_led2;
      print(qcashier.screen65.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.sound_led2 = testData1;
      print(qcashier.screen65.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.sound_led2 = testData2;
      print(qcashier.screen65.sound_led2);
      expect(qcashier.screen65.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.sound_led2 = defalut;
      print(qcashier.screen65.sound_led2);
      expect(qcashier.screen65.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02308_element_check_02285 **********\n\n");
    });

    test('02309_element_check_02286', () async {
      print("\n********** テスト実行：02309_element_check_02286 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen65.sound_led3;
      print(qcashier.screen65.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen65.sound_led3 = testData1;
      print(qcashier.screen65.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen65.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen65.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen65.sound_led3 = testData2;
      print(qcashier.screen65.sound_led3);
      expect(qcashier.screen65.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen65.sound_led3 = defalut;
      print(qcashier.screen65.sound_led3);
      expect(qcashier.screen65.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen65.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02309_element_check_02286 **********\n\n");
    });

    test('02310_element_check_02287', () async {
      print("\n********** テスト実行：02310_element_check_02287 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.title;
      print(qcashier.screen67.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.title = testData1s;
      print(qcashier.screen67.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.title = testData2s;
      print(qcashier.screen67.title);
      expect(qcashier.screen67.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.title = defalut;
      print(qcashier.screen67.title);
      expect(qcashier.screen67.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02310_element_check_02287 **********\n\n");
    });

    test('02311_element_check_02288', () async {
      print("\n********** テスト実行：02311_element_check_02288 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.msg1;
      print(qcashier.screen67.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.msg1 = testData1s;
      print(qcashier.screen67.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.msg1 = testData2s;
      print(qcashier.screen67.msg1);
      expect(qcashier.screen67.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.msg1 = defalut;
      print(qcashier.screen67.msg1);
      expect(qcashier.screen67.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02311_element_check_02288 **********\n\n");
    });

    test('02312_element_check_02289', () async {
      print("\n********** テスト実行：02312_element_check_02289 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.msg2;
      print(qcashier.screen67.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.msg2 = testData1s;
      print(qcashier.screen67.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.msg2 = testData2s;
      print(qcashier.screen67.msg2);
      expect(qcashier.screen67.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.msg2 = defalut;
      print(qcashier.screen67.msg2);
      expect(qcashier.screen67.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02312_element_check_02289 **********\n\n");
    });

    test('02313_element_check_02290', () async {
      print("\n********** テスト実行：02313_element_check_02290 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.msg1_size;
      print(qcashier.screen67.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.msg1_size = testData1;
      print(qcashier.screen67.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.msg1_size = testData2;
      print(qcashier.screen67.msg1_size);
      expect(qcashier.screen67.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.msg1_size = defalut;
      print(qcashier.screen67.msg1_size);
      expect(qcashier.screen67.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02313_element_check_02290 **********\n\n");
    });

    test('02314_element_check_02291', () async {
      print("\n********** テスト実行：02314_element_check_02291 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.msg2_size;
      print(qcashier.screen67.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.msg2_size = testData1;
      print(qcashier.screen67.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.msg2_size = testData2;
      print(qcashier.screen67.msg2_size);
      expect(qcashier.screen67.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.msg2_size = defalut;
      print(qcashier.screen67.msg2_size);
      expect(qcashier.screen67.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02314_element_check_02291 **********\n\n");
    });

    test('02315_element_check_02292', () async {
      print("\n********** テスト実行：02315_element_check_02292 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.sound1;
      print(qcashier.screen67.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.sound1 = testData1;
      print(qcashier.screen67.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.sound1 = testData2;
      print(qcashier.screen67.sound1);
      expect(qcashier.screen67.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.sound1 = defalut;
      print(qcashier.screen67.sound1);
      expect(qcashier.screen67.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02315_element_check_02292 **********\n\n");
    });

    test('02316_element_check_02293', () async {
      print("\n********** テスト実行：02316_element_check_02293 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.sound2;
      print(qcashier.screen67.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.sound2 = testData1;
      print(qcashier.screen67.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.sound2 = testData2;
      print(qcashier.screen67.sound2);
      expect(qcashier.screen67.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.sound2 = defalut;
      print(qcashier.screen67.sound2);
      expect(qcashier.screen67.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02316_element_check_02293 **********\n\n");
    });

    test('02317_element_check_02294', () async {
      print("\n********** テスト実行：02317_element_check_02294 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.sound3;
      print(qcashier.screen67.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.sound3 = testData1;
      print(qcashier.screen67.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.sound3 = testData2;
      print(qcashier.screen67.sound3);
      expect(qcashier.screen67.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.sound3 = defalut;
      print(qcashier.screen67.sound3);
      expect(qcashier.screen67.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02317_element_check_02294 **********\n\n");
    });

    test('02318_element_check_02295', () async {
      print("\n********** テスト実行：02318_element_check_02295 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.snd_timer;
      print(qcashier.screen67.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.snd_timer = testData1;
      print(qcashier.screen67.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.snd_timer = testData2;
      print(qcashier.screen67.snd_timer);
      expect(qcashier.screen67.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.snd_timer = defalut;
      print(qcashier.screen67.snd_timer);
      expect(qcashier.screen67.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02318_element_check_02295 **********\n\n");
    });

    test('02319_element_check_02296', () async {
      print("\n********** テスト実行：02319_element_check_02296 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.timer1;
      print(qcashier.screen67.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.timer1 = testData1;
      print(qcashier.screen67.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.timer1 = testData2;
      print(qcashier.screen67.timer1);
      expect(qcashier.screen67.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.timer1 = defalut;
      print(qcashier.screen67.timer1);
      expect(qcashier.screen67.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02319_element_check_02296 **********\n\n");
    });

    test('02320_element_check_02297', () async {
      print("\n********** テスト実行：02320_element_check_02297 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.timer2;
      print(qcashier.screen67.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.timer2 = testData1;
      print(qcashier.screen67.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.timer2 = testData2;
      print(qcashier.screen67.timer2);
      expect(qcashier.screen67.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.timer2 = defalut;
      print(qcashier.screen67.timer2);
      expect(qcashier.screen67.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02320_element_check_02297 **********\n\n");
    });

    test('02321_element_check_02298', () async {
      print("\n********** テスト実行：02321_element_check_02298 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.timer3;
      print(qcashier.screen67.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.timer3 = testData1;
      print(qcashier.screen67.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.timer3 = testData2;
      print(qcashier.screen67.timer3);
      expect(qcashier.screen67.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.timer3 = defalut;
      print(qcashier.screen67.timer3);
      expect(qcashier.screen67.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02321_element_check_02298 **********\n\n");
    });

    test('02322_element_check_02299', () async {
      print("\n********** テスト実行：02322_element_check_02299 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.dsp_flg1;
      print(qcashier.screen67.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.dsp_flg1 = testData1;
      print(qcashier.screen67.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.dsp_flg1 = testData2;
      print(qcashier.screen67.dsp_flg1);
      expect(qcashier.screen67.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.dsp_flg1 = defalut;
      print(qcashier.screen67.dsp_flg1);
      expect(qcashier.screen67.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02322_element_check_02299 **********\n\n");
    });

    test('02323_element_check_02300', () async {
      print("\n********** テスト実行：02323_element_check_02300 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.dsp_flg2;
      print(qcashier.screen67.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.dsp_flg2 = testData1;
      print(qcashier.screen67.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.dsp_flg2 = testData2;
      print(qcashier.screen67.dsp_flg2);
      expect(qcashier.screen67.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.dsp_flg2 = defalut;
      print(qcashier.screen67.dsp_flg2);
      expect(qcashier.screen67.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02323_element_check_02300 **********\n\n");
    });

    test('02324_element_check_02301', () async {
      print("\n********** テスト実行：02324_element_check_02301 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.movie01_ext;
      print(qcashier.screen67.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.movie01_ext = testData1;
      print(qcashier.screen67.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.movie01_ext = testData2;
      print(qcashier.screen67.movie01_ext);
      expect(qcashier.screen67.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.movie01_ext = defalut;
      print(qcashier.screen67.movie01_ext);
      expect(qcashier.screen67.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02324_element_check_02301 **********\n\n");
    });

    test('02325_element_check_02302', () async {
      print("\n********** テスト実行：02325_element_check_02302 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.movie02_ext;
      print(qcashier.screen67.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.movie02_ext = testData1;
      print(qcashier.screen67.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.movie02_ext = testData2;
      print(qcashier.screen67.movie02_ext);
      expect(qcashier.screen67.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.movie02_ext = defalut;
      print(qcashier.screen67.movie02_ext);
      expect(qcashier.screen67.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02325_element_check_02302 **********\n\n");
    });

    test('02326_element_check_02303', () async {
      print("\n********** テスト実行：02326_element_check_02303 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.movie03_ext;
      print(qcashier.screen67.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.movie03_ext = testData1;
      print(qcashier.screen67.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.movie03_ext = testData2;
      print(qcashier.screen67.movie03_ext);
      expect(qcashier.screen67.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.movie03_ext = defalut;
      print(qcashier.screen67.movie03_ext);
      expect(qcashier.screen67.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02326_element_check_02303 **********\n\n");
    });

    test('02327_element_check_02304', () async {
      print("\n********** テスト実行：02327_element_check_02304 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.movie04_ext;
      print(qcashier.screen67.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.movie04_ext = testData1;
      print(qcashier.screen67.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.movie04_ext = testData2;
      print(qcashier.screen67.movie04_ext);
      expect(qcashier.screen67.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.movie04_ext = defalut;
      print(qcashier.screen67.movie04_ext);
      expect(qcashier.screen67.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02327_element_check_02304 **********\n\n");
    });

    test('02328_element_check_02305', () async {
      print("\n********** テスト実行：02328_element_check_02305 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line_title;
      print(qcashier.screen67.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line_title = testData1s;
      print(qcashier.screen67.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line_title = testData2s;
      print(qcashier.screen67.line_title);
      expect(qcashier.screen67.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line_title = defalut;
      print(qcashier.screen67.line_title);
      expect(qcashier.screen67.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02328_element_check_02305 **********\n\n");
    });

    test('02329_element_check_02306', () async {
      print("\n********** テスト実行：02329_element_check_02306 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line_title_ex;
      print(qcashier.screen67.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line_title_ex = testData1s;
      print(qcashier.screen67.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line_title_ex = testData2s;
      print(qcashier.screen67.line_title_ex);
      expect(qcashier.screen67.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line_title_ex = defalut;
      print(qcashier.screen67.line_title_ex);
      expect(qcashier.screen67.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02329_element_check_02306 **********\n\n");
    });

    test('02330_element_check_02307', () async {
      print("\n********** テスト実行：02330_element_check_02307 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line1;
      print(qcashier.screen67.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line1 = testData1s;
      print(qcashier.screen67.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line1 = testData2s;
      print(qcashier.screen67.line1);
      expect(qcashier.screen67.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line1 = defalut;
      print(qcashier.screen67.line1);
      expect(qcashier.screen67.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02330_element_check_02307 **********\n\n");
    });

    test('02331_element_check_02308', () async {
      print("\n********** テスト実行：02331_element_check_02308 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line2;
      print(qcashier.screen67.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line2 = testData1s;
      print(qcashier.screen67.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line2 = testData2s;
      print(qcashier.screen67.line2);
      expect(qcashier.screen67.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line2 = defalut;
      print(qcashier.screen67.line2);
      expect(qcashier.screen67.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02331_element_check_02308 **********\n\n");
    });

    test('02332_element_check_02309', () async {
      print("\n********** テスト実行：02332_element_check_02309 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line3;
      print(qcashier.screen67.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line3 = testData1s;
      print(qcashier.screen67.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line3 = testData2s;
      print(qcashier.screen67.line3);
      expect(qcashier.screen67.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line3 = defalut;
      print(qcashier.screen67.line3);
      expect(qcashier.screen67.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02332_element_check_02309 **********\n\n");
    });

    test('02333_element_check_02310', () async {
      print("\n********** テスト実行：02333_element_check_02310 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line4;
      print(qcashier.screen67.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line4 = testData1s;
      print(qcashier.screen67.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line4 = testData2s;
      print(qcashier.screen67.line4);
      expect(qcashier.screen67.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line4 = defalut;
      print(qcashier.screen67.line4);
      expect(qcashier.screen67.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02333_element_check_02310 **********\n\n");
    });

    test('02334_element_check_02311', () async {
      print("\n********** テスト実行：02334_element_check_02311 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line1_ex;
      print(qcashier.screen67.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line1_ex = testData1s;
      print(qcashier.screen67.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line1_ex = testData2s;
      print(qcashier.screen67.line1_ex);
      expect(qcashier.screen67.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line1_ex = defalut;
      print(qcashier.screen67.line1_ex);
      expect(qcashier.screen67.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02334_element_check_02311 **********\n\n");
    });

    test('02335_element_check_02312', () async {
      print("\n********** テスト実行：02335_element_check_02312 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line2_ex;
      print(qcashier.screen67.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line2_ex = testData1s;
      print(qcashier.screen67.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line2_ex = testData2s;
      print(qcashier.screen67.line2_ex);
      expect(qcashier.screen67.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line2_ex = defalut;
      print(qcashier.screen67.line2_ex);
      expect(qcashier.screen67.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02335_element_check_02312 **********\n\n");
    });

    test('02336_element_check_02313', () async {
      print("\n********** テスト実行：02336_element_check_02313 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line3_ex;
      print(qcashier.screen67.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line3_ex = testData1s;
      print(qcashier.screen67.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line3_ex = testData2s;
      print(qcashier.screen67.line3_ex);
      expect(qcashier.screen67.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line3_ex = defalut;
      print(qcashier.screen67.line3_ex);
      expect(qcashier.screen67.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02336_element_check_02313 **********\n\n");
    });

    test('02337_element_check_02314', () async {
      print("\n********** テスト実行：02337_element_check_02314 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.line4_ex;
      print(qcashier.screen67.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.line4_ex = testData1s;
      print(qcashier.screen67.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.line4_ex = testData2s;
      print(qcashier.screen67.line4_ex);
      expect(qcashier.screen67.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.line4_ex = defalut;
      print(qcashier.screen67.line4_ex);
      expect(qcashier.screen67.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02337_element_check_02314 **********\n\n");
    });

    test('02338_element_check_02315', () async {
      print("\n********** テスト実行：02338_element_check_02315 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.sound_led1;
      print(qcashier.screen67.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.sound_led1 = testData1;
      print(qcashier.screen67.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.sound_led1 = testData2;
      print(qcashier.screen67.sound_led1);
      expect(qcashier.screen67.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.sound_led1 = defalut;
      print(qcashier.screen67.sound_led1);
      expect(qcashier.screen67.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02338_element_check_02315 **********\n\n");
    });

    test('02339_element_check_02316', () async {
      print("\n********** テスト実行：02339_element_check_02316 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.sound_led2;
      print(qcashier.screen67.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.sound_led2 = testData1;
      print(qcashier.screen67.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.sound_led2 = testData2;
      print(qcashier.screen67.sound_led2);
      expect(qcashier.screen67.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.sound_led2 = defalut;
      print(qcashier.screen67.sound_led2);
      expect(qcashier.screen67.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02339_element_check_02316 **********\n\n");
    });

    test('02340_element_check_02317', () async {
      print("\n********** テスト実行：02340_element_check_02317 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen67.sound_led3;
      print(qcashier.screen67.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen67.sound_led3 = testData1;
      print(qcashier.screen67.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen67.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen67.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen67.sound_led3 = testData2;
      print(qcashier.screen67.sound_led3);
      expect(qcashier.screen67.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen67.sound_led3 = defalut;
      print(qcashier.screen67.sound_led3);
      expect(qcashier.screen67.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen67.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02340_element_check_02317 **********\n\n");
    });

    test('02341_element_check_02318', () async {
      print("\n********** テスト実行：02341_element_check_02318 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.title;
      print(qcashier.screen68.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.title = testData1s;
      print(qcashier.screen68.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.title = testData2s;
      print(qcashier.screen68.title);
      expect(qcashier.screen68.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.title = defalut;
      print(qcashier.screen68.title);
      expect(qcashier.screen68.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02341_element_check_02318 **********\n\n");
    });

    test('02342_element_check_02319', () async {
      print("\n********** テスト実行：02342_element_check_02319 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.msg1;
      print(qcashier.screen68.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.msg1 = testData1s;
      print(qcashier.screen68.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.msg1 = testData2s;
      print(qcashier.screen68.msg1);
      expect(qcashier.screen68.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.msg1 = defalut;
      print(qcashier.screen68.msg1);
      expect(qcashier.screen68.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02342_element_check_02319 **********\n\n");
    });

    test('02343_element_check_02320', () async {
      print("\n********** テスト実行：02343_element_check_02320 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.msg2;
      print(qcashier.screen68.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.msg2 = testData1s;
      print(qcashier.screen68.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.msg2 = testData2s;
      print(qcashier.screen68.msg2);
      expect(qcashier.screen68.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.msg2 = defalut;
      print(qcashier.screen68.msg2);
      expect(qcashier.screen68.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02343_element_check_02320 **********\n\n");
    });

    test('02344_element_check_02321', () async {
      print("\n********** テスト実行：02344_element_check_02321 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.msg1_size;
      print(qcashier.screen68.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.msg1_size = testData1;
      print(qcashier.screen68.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.msg1_size = testData2;
      print(qcashier.screen68.msg1_size);
      expect(qcashier.screen68.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.msg1_size = defalut;
      print(qcashier.screen68.msg1_size);
      expect(qcashier.screen68.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02344_element_check_02321 **********\n\n");
    });

    test('02345_element_check_02322', () async {
      print("\n********** テスト実行：02345_element_check_02322 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.msg2_size;
      print(qcashier.screen68.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.msg2_size = testData1;
      print(qcashier.screen68.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.msg2_size = testData2;
      print(qcashier.screen68.msg2_size);
      expect(qcashier.screen68.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.msg2_size = defalut;
      print(qcashier.screen68.msg2_size);
      expect(qcashier.screen68.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02345_element_check_02322 **********\n\n");
    });

    test('02346_element_check_02323', () async {
      print("\n********** テスト実行：02346_element_check_02323 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.sound1;
      print(qcashier.screen68.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.sound1 = testData1;
      print(qcashier.screen68.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.sound1 = testData2;
      print(qcashier.screen68.sound1);
      expect(qcashier.screen68.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.sound1 = defalut;
      print(qcashier.screen68.sound1);
      expect(qcashier.screen68.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02346_element_check_02323 **********\n\n");
    });

    test('02347_element_check_02324', () async {
      print("\n********** テスト実行：02347_element_check_02324 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.sound2;
      print(qcashier.screen68.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.sound2 = testData1;
      print(qcashier.screen68.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.sound2 = testData2;
      print(qcashier.screen68.sound2);
      expect(qcashier.screen68.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.sound2 = defalut;
      print(qcashier.screen68.sound2);
      expect(qcashier.screen68.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02347_element_check_02324 **********\n\n");
    });

    test('02348_element_check_02325', () async {
      print("\n********** テスト実行：02348_element_check_02325 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.sound3;
      print(qcashier.screen68.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.sound3 = testData1;
      print(qcashier.screen68.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.sound3 = testData2;
      print(qcashier.screen68.sound3);
      expect(qcashier.screen68.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.sound3 = defalut;
      print(qcashier.screen68.sound3);
      expect(qcashier.screen68.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02348_element_check_02325 **********\n\n");
    });

    test('02349_element_check_02326', () async {
      print("\n********** テスト実行：02349_element_check_02326 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.snd_timer;
      print(qcashier.screen68.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.snd_timer = testData1;
      print(qcashier.screen68.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.snd_timer = testData2;
      print(qcashier.screen68.snd_timer);
      expect(qcashier.screen68.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.snd_timer = defalut;
      print(qcashier.screen68.snd_timer);
      expect(qcashier.screen68.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02349_element_check_02326 **********\n\n");
    });

    test('02350_element_check_02327', () async {
      print("\n********** テスト実行：02350_element_check_02327 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.timer1;
      print(qcashier.screen68.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.timer1 = testData1;
      print(qcashier.screen68.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.timer1 = testData2;
      print(qcashier.screen68.timer1);
      expect(qcashier.screen68.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.timer1 = defalut;
      print(qcashier.screen68.timer1);
      expect(qcashier.screen68.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02350_element_check_02327 **********\n\n");
    });

    test('02351_element_check_02328', () async {
      print("\n********** テスト実行：02351_element_check_02328 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.timer2;
      print(qcashier.screen68.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.timer2 = testData1;
      print(qcashier.screen68.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.timer2 = testData2;
      print(qcashier.screen68.timer2);
      expect(qcashier.screen68.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.timer2 = defalut;
      print(qcashier.screen68.timer2);
      expect(qcashier.screen68.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02351_element_check_02328 **********\n\n");
    });

    test('02352_element_check_02329', () async {
      print("\n********** テスト実行：02352_element_check_02329 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.timer3;
      print(qcashier.screen68.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.timer3 = testData1;
      print(qcashier.screen68.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.timer3 = testData2;
      print(qcashier.screen68.timer3);
      expect(qcashier.screen68.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.timer3 = defalut;
      print(qcashier.screen68.timer3);
      expect(qcashier.screen68.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02352_element_check_02329 **********\n\n");
    });

    test('02353_element_check_02330', () async {
      print("\n********** テスト実行：02353_element_check_02330 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.dsp_flg1;
      print(qcashier.screen68.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.dsp_flg1 = testData1;
      print(qcashier.screen68.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.dsp_flg1 = testData2;
      print(qcashier.screen68.dsp_flg1);
      expect(qcashier.screen68.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.dsp_flg1 = defalut;
      print(qcashier.screen68.dsp_flg1);
      expect(qcashier.screen68.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02353_element_check_02330 **********\n\n");
    });

    test('02354_element_check_02331', () async {
      print("\n********** テスト実行：02354_element_check_02331 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.dsp_flg2;
      print(qcashier.screen68.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.dsp_flg2 = testData1;
      print(qcashier.screen68.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.dsp_flg2 = testData2;
      print(qcashier.screen68.dsp_flg2);
      expect(qcashier.screen68.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.dsp_flg2 = defalut;
      print(qcashier.screen68.dsp_flg2);
      expect(qcashier.screen68.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02354_element_check_02331 **********\n\n");
    });

    test('02355_element_check_02332', () async {
      print("\n********** テスト実行：02355_element_check_02332 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.movie01_ext;
      print(qcashier.screen68.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.movie01_ext = testData1;
      print(qcashier.screen68.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.movie01_ext = testData2;
      print(qcashier.screen68.movie01_ext);
      expect(qcashier.screen68.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.movie01_ext = defalut;
      print(qcashier.screen68.movie01_ext);
      expect(qcashier.screen68.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02355_element_check_02332 **********\n\n");
    });

    test('02356_element_check_02333', () async {
      print("\n********** テスト実行：02356_element_check_02333 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.movie02_ext;
      print(qcashier.screen68.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.movie02_ext = testData1;
      print(qcashier.screen68.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.movie02_ext = testData2;
      print(qcashier.screen68.movie02_ext);
      expect(qcashier.screen68.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.movie02_ext = defalut;
      print(qcashier.screen68.movie02_ext);
      expect(qcashier.screen68.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02356_element_check_02333 **********\n\n");
    });

    test('02357_element_check_02334', () async {
      print("\n********** テスト実行：02357_element_check_02334 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.movie03_ext;
      print(qcashier.screen68.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.movie03_ext = testData1;
      print(qcashier.screen68.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.movie03_ext = testData2;
      print(qcashier.screen68.movie03_ext);
      expect(qcashier.screen68.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.movie03_ext = defalut;
      print(qcashier.screen68.movie03_ext);
      expect(qcashier.screen68.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02357_element_check_02334 **********\n\n");
    });

    test('02358_element_check_02335', () async {
      print("\n********** テスト実行：02358_element_check_02335 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.movie04_ext;
      print(qcashier.screen68.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.movie04_ext = testData1;
      print(qcashier.screen68.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.movie04_ext = testData2;
      print(qcashier.screen68.movie04_ext);
      expect(qcashier.screen68.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.movie04_ext = defalut;
      print(qcashier.screen68.movie04_ext);
      expect(qcashier.screen68.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02358_element_check_02335 **********\n\n");
    });

    test('02359_element_check_02336', () async {
      print("\n********** テスト実行：02359_element_check_02336 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line_title;
      print(qcashier.screen68.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line_title = testData1s;
      print(qcashier.screen68.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line_title = testData2s;
      print(qcashier.screen68.line_title);
      expect(qcashier.screen68.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line_title = defalut;
      print(qcashier.screen68.line_title);
      expect(qcashier.screen68.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02359_element_check_02336 **********\n\n");
    });

    test('02360_element_check_02337', () async {
      print("\n********** テスト実行：02360_element_check_02337 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line_title_ex;
      print(qcashier.screen68.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line_title_ex = testData1s;
      print(qcashier.screen68.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line_title_ex = testData2s;
      print(qcashier.screen68.line_title_ex);
      expect(qcashier.screen68.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line_title_ex = defalut;
      print(qcashier.screen68.line_title_ex);
      expect(qcashier.screen68.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02360_element_check_02337 **********\n\n");
    });

    test('02361_element_check_02338', () async {
      print("\n********** テスト実行：02361_element_check_02338 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line1;
      print(qcashier.screen68.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line1 = testData1s;
      print(qcashier.screen68.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line1 = testData2s;
      print(qcashier.screen68.line1);
      expect(qcashier.screen68.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line1 = defalut;
      print(qcashier.screen68.line1);
      expect(qcashier.screen68.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02361_element_check_02338 **********\n\n");
    });

    test('02362_element_check_02339', () async {
      print("\n********** テスト実行：02362_element_check_02339 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line2;
      print(qcashier.screen68.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line2 = testData1s;
      print(qcashier.screen68.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line2 = testData2s;
      print(qcashier.screen68.line2);
      expect(qcashier.screen68.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line2 = defalut;
      print(qcashier.screen68.line2);
      expect(qcashier.screen68.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02362_element_check_02339 **********\n\n");
    });

    test('02363_element_check_02340', () async {
      print("\n********** テスト実行：02363_element_check_02340 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line3;
      print(qcashier.screen68.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line3 = testData1s;
      print(qcashier.screen68.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line3 = testData2s;
      print(qcashier.screen68.line3);
      expect(qcashier.screen68.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line3 = defalut;
      print(qcashier.screen68.line3);
      expect(qcashier.screen68.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02363_element_check_02340 **********\n\n");
    });

    test('02364_element_check_02341', () async {
      print("\n********** テスト実行：02364_element_check_02341 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line4;
      print(qcashier.screen68.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line4 = testData1s;
      print(qcashier.screen68.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line4 = testData2s;
      print(qcashier.screen68.line4);
      expect(qcashier.screen68.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line4 = defalut;
      print(qcashier.screen68.line4);
      expect(qcashier.screen68.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02364_element_check_02341 **********\n\n");
    });

    test('02365_element_check_02342', () async {
      print("\n********** テスト実行：02365_element_check_02342 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line1_ex;
      print(qcashier.screen68.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line1_ex = testData1s;
      print(qcashier.screen68.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line1_ex = testData2s;
      print(qcashier.screen68.line1_ex);
      expect(qcashier.screen68.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line1_ex = defalut;
      print(qcashier.screen68.line1_ex);
      expect(qcashier.screen68.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02365_element_check_02342 **********\n\n");
    });

    test('02366_element_check_02343', () async {
      print("\n********** テスト実行：02366_element_check_02343 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line2_ex;
      print(qcashier.screen68.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line2_ex = testData1s;
      print(qcashier.screen68.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line2_ex = testData2s;
      print(qcashier.screen68.line2_ex);
      expect(qcashier.screen68.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line2_ex = defalut;
      print(qcashier.screen68.line2_ex);
      expect(qcashier.screen68.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02366_element_check_02343 **********\n\n");
    });

    test('02367_element_check_02344', () async {
      print("\n********** テスト実行：02367_element_check_02344 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line3_ex;
      print(qcashier.screen68.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line3_ex = testData1s;
      print(qcashier.screen68.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line3_ex = testData2s;
      print(qcashier.screen68.line3_ex);
      expect(qcashier.screen68.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line3_ex = defalut;
      print(qcashier.screen68.line3_ex);
      expect(qcashier.screen68.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02367_element_check_02344 **********\n\n");
    });

    test('02368_element_check_02345', () async {
      print("\n********** テスト実行：02368_element_check_02345 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.line4_ex;
      print(qcashier.screen68.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.line4_ex = testData1s;
      print(qcashier.screen68.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.line4_ex = testData2s;
      print(qcashier.screen68.line4_ex);
      expect(qcashier.screen68.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.line4_ex = defalut;
      print(qcashier.screen68.line4_ex);
      expect(qcashier.screen68.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02368_element_check_02345 **********\n\n");
    });

    test('02369_element_check_02346', () async {
      print("\n********** テスト実行：02369_element_check_02346 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.sound_led1;
      print(qcashier.screen68.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.sound_led1 = testData1;
      print(qcashier.screen68.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.sound_led1 = testData2;
      print(qcashier.screen68.sound_led1);
      expect(qcashier.screen68.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.sound_led1 = defalut;
      print(qcashier.screen68.sound_led1);
      expect(qcashier.screen68.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02369_element_check_02346 **********\n\n");
    });

    test('02370_element_check_02347', () async {
      print("\n********** テスト実行：02370_element_check_02347 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.sound_led2;
      print(qcashier.screen68.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.sound_led2 = testData1;
      print(qcashier.screen68.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.sound_led2 = testData2;
      print(qcashier.screen68.sound_led2);
      expect(qcashier.screen68.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.sound_led2 = defalut;
      print(qcashier.screen68.sound_led2);
      expect(qcashier.screen68.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02370_element_check_02347 **********\n\n");
    });

    test('02371_element_check_02348', () async {
      print("\n********** テスト実行：02371_element_check_02348 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen68.sound_led3;
      print(qcashier.screen68.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen68.sound_led3 = testData1;
      print(qcashier.screen68.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen68.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen68.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen68.sound_led3 = testData2;
      print(qcashier.screen68.sound_led3);
      expect(qcashier.screen68.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen68.sound_led3 = defalut;
      print(qcashier.screen68.sound_led3);
      expect(qcashier.screen68.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen68.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02371_element_check_02348 **********\n\n");
    });

    test('02372_element_check_02349', () async {
      print("\n********** テスト実行：02372_element_check_02349 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.title;
      print(qcashier.screen69.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.title = testData1s;
      print(qcashier.screen69.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.title = testData2s;
      print(qcashier.screen69.title);
      expect(qcashier.screen69.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.title = defalut;
      print(qcashier.screen69.title);
      expect(qcashier.screen69.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02372_element_check_02349 **********\n\n");
    });

    test('02373_element_check_02350', () async {
      print("\n********** テスト実行：02373_element_check_02350 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.msg1;
      print(qcashier.screen69.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.msg1 = testData1s;
      print(qcashier.screen69.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.msg1 = testData2s;
      print(qcashier.screen69.msg1);
      expect(qcashier.screen69.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.msg1 = defalut;
      print(qcashier.screen69.msg1);
      expect(qcashier.screen69.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02373_element_check_02350 **********\n\n");
    });

    test('02374_element_check_02351', () async {
      print("\n********** テスト実行：02374_element_check_02351 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.msg2;
      print(qcashier.screen69.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.msg2 = testData1s;
      print(qcashier.screen69.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.msg2 = testData2s;
      print(qcashier.screen69.msg2);
      expect(qcashier.screen69.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.msg2 = defalut;
      print(qcashier.screen69.msg2);
      expect(qcashier.screen69.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02374_element_check_02351 **********\n\n");
    });

    test('02375_element_check_02352', () async {
      print("\n********** テスト実行：02375_element_check_02352 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.msg1_size;
      print(qcashier.screen69.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.msg1_size = testData1;
      print(qcashier.screen69.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.msg1_size = testData2;
      print(qcashier.screen69.msg1_size);
      expect(qcashier.screen69.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.msg1_size = defalut;
      print(qcashier.screen69.msg1_size);
      expect(qcashier.screen69.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02375_element_check_02352 **********\n\n");
    });

    test('02376_element_check_02353', () async {
      print("\n********** テスト実行：02376_element_check_02353 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.msg2_size;
      print(qcashier.screen69.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.msg2_size = testData1;
      print(qcashier.screen69.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.msg2_size = testData2;
      print(qcashier.screen69.msg2_size);
      expect(qcashier.screen69.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.msg2_size = defalut;
      print(qcashier.screen69.msg2_size);
      expect(qcashier.screen69.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02376_element_check_02353 **********\n\n");
    });

    test('02377_element_check_02354', () async {
      print("\n********** テスト実行：02377_element_check_02354 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.sound1;
      print(qcashier.screen69.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.sound1 = testData1;
      print(qcashier.screen69.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.sound1 = testData2;
      print(qcashier.screen69.sound1);
      expect(qcashier.screen69.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.sound1 = defalut;
      print(qcashier.screen69.sound1);
      expect(qcashier.screen69.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02377_element_check_02354 **********\n\n");
    });

    test('02378_element_check_02355', () async {
      print("\n********** テスト実行：02378_element_check_02355 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.sound2;
      print(qcashier.screen69.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.sound2 = testData1;
      print(qcashier.screen69.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.sound2 = testData2;
      print(qcashier.screen69.sound2);
      expect(qcashier.screen69.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.sound2 = defalut;
      print(qcashier.screen69.sound2);
      expect(qcashier.screen69.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02378_element_check_02355 **********\n\n");
    });

    test('02379_element_check_02356', () async {
      print("\n********** テスト実行：02379_element_check_02356 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.sound3;
      print(qcashier.screen69.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.sound3 = testData1;
      print(qcashier.screen69.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.sound3 = testData2;
      print(qcashier.screen69.sound3);
      expect(qcashier.screen69.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.sound3 = defalut;
      print(qcashier.screen69.sound3);
      expect(qcashier.screen69.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02379_element_check_02356 **********\n\n");
    });

    test('02380_element_check_02357', () async {
      print("\n********** テスト実行：02380_element_check_02357 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.snd_timer;
      print(qcashier.screen69.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.snd_timer = testData1;
      print(qcashier.screen69.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.snd_timer = testData2;
      print(qcashier.screen69.snd_timer);
      expect(qcashier.screen69.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.snd_timer = defalut;
      print(qcashier.screen69.snd_timer);
      expect(qcashier.screen69.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02380_element_check_02357 **********\n\n");
    });

    test('02381_element_check_02358', () async {
      print("\n********** テスト実行：02381_element_check_02358 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.timer1;
      print(qcashier.screen69.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.timer1 = testData1;
      print(qcashier.screen69.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.timer1 = testData2;
      print(qcashier.screen69.timer1);
      expect(qcashier.screen69.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.timer1 = defalut;
      print(qcashier.screen69.timer1);
      expect(qcashier.screen69.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02381_element_check_02358 **********\n\n");
    });

    test('02382_element_check_02359', () async {
      print("\n********** テスト実行：02382_element_check_02359 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.timer2;
      print(qcashier.screen69.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.timer2 = testData1;
      print(qcashier.screen69.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.timer2 = testData2;
      print(qcashier.screen69.timer2);
      expect(qcashier.screen69.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.timer2 = defalut;
      print(qcashier.screen69.timer2);
      expect(qcashier.screen69.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02382_element_check_02359 **********\n\n");
    });

    test('02383_element_check_02360', () async {
      print("\n********** テスト実行：02383_element_check_02360 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.timer3;
      print(qcashier.screen69.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.timer3 = testData1;
      print(qcashier.screen69.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.timer3 = testData2;
      print(qcashier.screen69.timer3);
      expect(qcashier.screen69.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.timer3 = defalut;
      print(qcashier.screen69.timer3);
      expect(qcashier.screen69.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02383_element_check_02360 **********\n\n");
    });

    test('02384_element_check_02361', () async {
      print("\n********** テスト実行：02384_element_check_02361 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.dsp_flg1;
      print(qcashier.screen69.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.dsp_flg1 = testData1;
      print(qcashier.screen69.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.dsp_flg1 = testData2;
      print(qcashier.screen69.dsp_flg1);
      expect(qcashier.screen69.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.dsp_flg1 = defalut;
      print(qcashier.screen69.dsp_flg1);
      expect(qcashier.screen69.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02384_element_check_02361 **********\n\n");
    });

    test('02385_element_check_02362', () async {
      print("\n********** テスト実行：02385_element_check_02362 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.dsp_flg2;
      print(qcashier.screen69.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.dsp_flg2 = testData1;
      print(qcashier.screen69.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.dsp_flg2 = testData2;
      print(qcashier.screen69.dsp_flg2);
      expect(qcashier.screen69.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.dsp_flg2 = defalut;
      print(qcashier.screen69.dsp_flg2);
      expect(qcashier.screen69.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02385_element_check_02362 **********\n\n");
    });

    test('02386_element_check_02363', () async {
      print("\n********** テスト実行：02386_element_check_02363 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.movie01_ext;
      print(qcashier.screen69.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.movie01_ext = testData1;
      print(qcashier.screen69.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.movie01_ext = testData2;
      print(qcashier.screen69.movie01_ext);
      expect(qcashier.screen69.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.movie01_ext = defalut;
      print(qcashier.screen69.movie01_ext);
      expect(qcashier.screen69.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02386_element_check_02363 **********\n\n");
    });

    test('02387_element_check_02364', () async {
      print("\n********** テスト実行：02387_element_check_02364 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.movie02_ext;
      print(qcashier.screen69.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.movie02_ext = testData1;
      print(qcashier.screen69.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.movie02_ext = testData2;
      print(qcashier.screen69.movie02_ext);
      expect(qcashier.screen69.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.movie02_ext = defalut;
      print(qcashier.screen69.movie02_ext);
      expect(qcashier.screen69.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02387_element_check_02364 **********\n\n");
    });

    test('02388_element_check_02365', () async {
      print("\n********** テスト実行：02388_element_check_02365 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.movie03_ext;
      print(qcashier.screen69.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.movie03_ext = testData1;
      print(qcashier.screen69.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.movie03_ext = testData2;
      print(qcashier.screen69.movie03_ext);
      expect(qcashier.screen69.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.movie03_ext = defalut;
      print(qcashier.screen69.movie03_ext);
      expect(qcashier.screen69.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02388_element_check_02365 **********\n\n");
    });

    test('02389_element_check_02366', () async {
      print("\n********** テスト実行：02389_element_check_02366 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.movie04_ext;
      print(qcashier.screen69.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.movie04_ext = testData1;
      print(qcashier.screen69.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.movie04_ext = testData2;
      print(qcashier.screen69.movie04_ext);
      expect(qcashier.screen69.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.movie04_ext = defalut;
      print(qcashier.screen69.movie04_ext);
      expect(qcashier.screen69.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02389_element_check_02366 **********\n\n");
    });

    test('02390_element_check_02367', () async {
      print("\n********** テスト実行：02390_element_check_02367 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line_title;
      print(qcashier.screen69.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line_title = testData1s;
      print(qcashier.screen69.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line_title = testData2s;
      print(qcashier.screen69.line_title);
      expect(qcashier.screen69.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line_title = defalut;
      print(qcashier.screen69.line_title);
      expect(qcashier.screen69.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02390_element_check_02367 **********\n\n");
    });

    test('02391_element_check_02368', () async {
      print("\n********** テスト実行：02391_element_check_02368 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line_title_ex;
      print(qcashier.screen69.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line_title_ex = testData1s;
      print(qcashier.screen69.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line_title_ex = testData2s;
      print(qcashier.screen69.line_title_ex);
      expect(qcashier.screen69.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line_title_ex = defalut;
      print(qcashier.screen69.line_title_ex);
      expect(qcashier.screen69.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02391_element_check_02368 **********\n\n");
    });

    test('02392_element_check_02369', () async {
      print("\n********** テスト実行：02392_element_check_02369 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line1;
      print(qcashier.screen69.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line1 = testData1s;
      print(qcashier.screen69.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line1 = testData2s;
      print(qcashier.screen69.line1);
      expect(qcashier.screen69.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line1 = defalut;
      print(qcashier.screen69.line1);
      expect(qcashier.screen69.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02392_element_check_02369 **********\n\n");
    });

    test('02393_element_check_02370', () async {
      print("\n********** テスト実行：02393_element_check_02370 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line2;
      print(qcashier.screen69.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line2 = testData1s;
      print(qcashier.screen69.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line2 = testData2s;
      print(qcashier.screen69.line2);
      expect(qcashier.screen69.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line2 = defalut;
      print(qcashier.screen69.line2);
      expect(qcashier.screen69.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02393_element_check_02370 **********\n\n");
    });

    test('02394_element_check_02371', () async {
      print("\n********** テスト実行：02394_element_check_02371 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line3;
      print(qcashier.screen69.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line3 = testData1s;
      print(qcashier.screen69.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line3 = testData2s;
      print(qcashier.screen69.line3);
      expect(qcashier.screen69.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line3 = defalut;
      print(qcashier.screen69.line3);
      expect(qcashier.screen69.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02394_element_check_02371 **********\n\n");
    });

    test('02395_element_check_02372', () async {
      print("\n********** テスト実行：02395_element_check_02372 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line4;
      print(qcashier.screen69.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line4 = testData1s;
      print(qcashier.screen69.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line4 = testData2s;
      print(qcashier.screen69.line4);
      expect(qcashier.screen69.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line4 = defalut;
      print(qcashier.screen69.line4);
      expect(qcashier.screen69.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02395_element_check_02372 **********\n\n");
    });

    test('02396_element_check_02373', () async {
      print("\n********** テスト実行：02396_element_check_02373 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line1_ex;
      print(qcashier.screen69.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line1_ex = testData1s;
      print(qcashier.screen69.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line1_ex = testData2s;
      print(qcashier.screen69.line1_ex);
      expect(qcashier.screen69.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line1_ex = defalut;
      print(qcashier.screen69.line1_ex);
      expect(qcashier.screen69.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02396_element_check_02373 **********\n\n");
    });

    test('02397_element_check_02374', () async {
      print("\n********** テスト実行：02397_element_check_02374 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line2_ex;
      print(qcashier.screen69.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line2_ex = testData1s;
      print(qcashier.screen69.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line2_ex = testData2s;
      print(qcashier.screen69.line2_ex);
      expect(qcashier.screen69.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line2_ex = defalut;
      print(qcashier.screen69.line2_ex);
      expect(qcashier.screen69.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02397_element_check_02374 **********\n\n");
    });

    test('02398_element_check_02375', () async {
      print("\n********** テスト実行：02398_element_check_02375 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line3_ex;
      print(qcashier.screen69.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line3_ex = testData1s;
      print(qcashier.screen69.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line3_ex = testData2s;
      print(qcashier.screen69.line3_ex);
      expect(qcashier.screen69.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line3_ex = defalut;
      print(qcashier.screen69.line3_ex);
      expect(qcashier.screen69.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02398_element_check_02375 **********\n\n");
    });

    test('02399_element_check_02376', () async {
      print("\n********** テスト実行：02399_element_check_02376 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.line4_ex;
      print(qcashier.screen69.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.line4_ex = testData1s;
      print(qcashier.screen69.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.line4_ex = testData2s;
      print(qcashier.screen69.line4_ex);
      expect(qcashier.screen69.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.line4_ex = defalut;
      print(qcashier.screen69.line4_ex);
      expect(qcashier.screen69.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02399_element_check_02376 **********\n\n");
    });

    test('02400_element_check_02377', () async {
      print("\n********** テスト実行：02400_element_check_02377 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.sound_led1;
      print(qcashier.screen69.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.sound_led1 = testData1;
      print(qcashier.screen69.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.sound_led1 = testData2;
      print(qcashier.screen69.sound_led1);
      expect(qcashier.screen69.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.sound_led1 = defalut;
      print(qcashier.screen69.sound_led1);
      expect(qcashier.screen69.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02400_element_check_02377 **********\n\n");
    });

    test('02401_element_check_02378', () async {
      print("\n********** テスト実行：02401_element_check_02378 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.sound_led2;
      print(qcashier.screen69.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.sound_led2 = testData1;
      print(qcashier.screen69.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.sound_led2 = testData2;
      print(qcashier.screen69.sound_led2);
      expect(qcashier.screen69.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.sound_led2 = defalut;
      print(qcashier.screen69.sound_led2);
      expect(qcashier.screen69.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02401_element_check_02378 **********\n\n");
    });

    test('02402_element_check_02379', () async {
      print("\n********** テスト実行：02402_element_check_02379 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen69.sound_led3;
      print(qcashier.screen69.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen69.sound_led3 = testData1;
      print(qcashier.screen69.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen69.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen69.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen69.sound_led3 = testData2;
      print(qcashier.screen69.sound_led3);
      expect(qcashier.screen69.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen69.sound_led3 = defalut;
      print(qcashier.screen69.sound_led3);
      expect(qcashier.screen69.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen69.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02402_element_check_02379 **********\n\n");
    });

    test('02403_element_check_02380', () async {
      print("\n********** テスト実行：02403_element_check_02380 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.title;
      print(qcashier.screen70.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.title = testData1s;
      print(qcashier.screen70.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.title = testData2s;
      print(qcashier.screen70.title);
      expect(qcashier.screen70.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.title = defalut;
      print(qcashier.screen70.title);
      expect(qcashier.screen70.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02403_element_check_02380 **********\n\n");
    });

    test('02404_element_check_02381', () async {
      print("\n********** テスト実行：02404_element_check_02381 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.msg1;
      print(qcashier.screen70.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.msg1 = testData1s;
      print(qcashier.screen70.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.msg1 = testData2s;
      print(qcashier.screen70.msg1);
      expect(qcashier.screen70.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.msg1 = defalut;
      print(qcashier.screen70.msg1);
      expect(qcashier.screen70.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02404_element_check_02381 **********\n\n");
    });

    test('02405_element_check_02382', () async {
      print("\n********** テスト実行：02405_element_check_02382 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.msg2;
      print(qcashier.screen70.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.msg2 = testData1s;
      print(qcashier.screen70.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.msg2 = testData2s;
      print(qcashier.screen70.msg2);
      expect(qcashier.screen70.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.msg2 = defalut;
      print(qcashier.screen70.msg2);
      expect(qcashier.screen70.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02405_element_check_02382 **********\n\n");
    });

    test('02406_element_check_02383', () async {
      print("\n********** テスト実行：02406_element_check_02383 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.msg1_size;
      print(qcashier.screen70.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.msg1_size = testData1;
      print(qcashier.screen70.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.msg1_size = testData2;
      print(qcashier.screen70.msg1_size);
      expect(qcashier.screen70.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.msg1_size = defalut;
      print(qcashier.screen70.msg1_size);
      expect(qcashier.screen70.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02406_element_check_02383 **********\n\n");
    });

    test('02407_element_check_02384', () async {
      print("\n********** テスト実行：02407_element_check_02384 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.msg2_size;
      print(qcashier.screen70.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.msg2_size = testData1;
      print(qcashier.screen70.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.msg2_size = testData2;
      print(qcashier.screen70.msg2_size);
      expect(qcashier.screen70.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.msg2_size = defalut;
      print(qcashier.screen70.msg2_size);
      expect(qcashier.screen70.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02407_element_check_02384 **********\n\n");
    });

    test('02408_element_check_02385', () async {
      print("\n********** テスト実行：02408_element_check_02385 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.sound1;
      print(qcashier.screen70.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.sound1 = testData1;
      print(qcashier.screen70.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.sound1 = testData2;
      print(qcashier.screen70.sound1);
      expect(qcashier.screen70.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.sound1 = defalut;
      print(qcashier.screen70.sound1);
      expect(qcashier.screen70.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02408_element_check_02385 **********\n\n");
    });

    test('02409_element_check_02386', () async {
      print("\n********** テスト実行：02409_element_check_02386 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.sound2;
      print(qcashier.screen70.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.sound2 = testData1;
      print(qcashier.screen70.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.sound2 = testData2;
      print(qcashier.screen70.sound2);
      expect(qcashier.screen70.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.sound2 = defalut;
      print(qcashier.screen70.sound2);
      expect(qcashier.screen70.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02409_element_check_02386 **********\n\n");
    });

    test('02410_element_check_02387', () async {
      print("\n********** テスト実行：02410_element_check_02387 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.sound3;
      print(qcashier.screen70.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.sound3 = testData1;
      print(qcashier.screen70.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.sound3 = testData2;
      print(qcashier.screen70.sound3);
      expect(qcashier.screen70.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.sound3 = defalut;
      print(qcashier.screen70.sound3);
      expect(qcashier.screen70.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02410_element_check_02387 **********\n\n");
    });

    test('02411_element_check_02388', () async {
      print("\n********** テスト実行：02411_element_check_02388 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.snd_timer;
      print(qcashier.screen70.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.snd_timer = testData1;
      print(qcashier.screen70.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.snd_timer = testData2;
      print(qcashier.screen70.snd_timer);
      expect(qcashier.screen70.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.snd_timer = defalut;
      print(qcashier.screen70.snd_timer);
      expect(qcashier.screen70.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02411_element_check_02388 **********\n\n");
    });

    test('02412_element_check_02389', () async {
      print("\n********** テスト実行：02412_element_check_02389 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.timer1;
      print(qcashier.screen70.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.timer1 = testData1;
      print(qcashier.screen70.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.timer1 = testData2;
      print(qcashier.screen70.timer1);
      expect(qcashier.screen70.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.timer1 = defalut;
      print(qcashier.screen70.timer1);
      expect(qcashier.screen70.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02412_element_check_02389 **********\n\n");
    });

    test('02413_element_check_02390', () async {
      print("\n********** テスト実行：02413_element_check_02390 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.timer2;
      print(qcashier.screen70.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.timer2 = testData1;
      print(qcashier.screen70.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.timer2 = testData2;
      print(qcashier.screen70.timer2);
      expect(qcashier.screen70.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.timer2 = defalut;
      print(qcashier.screen70.timer2);
      expect(qcashier.screen70.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02413_element_check_02390 **********\n\n");
    });

    test('02414_element_check_02391', () async {
      print("\n********** テスト実行：02414_element_check_02391 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.timer3;
      print(qcashier.screen70.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.timer3 = testData1;
      print(qcashier.screen70.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.timer3 = testData2;
      print(qcashier.screen70.timer3);
      expect(qcashier.screen70.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.timer3 = defalut;
      print(qcashier.screen70.timer3);
      expect(qcashier.screen70.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02414_element_check_02391 **********\n\n");
    });

    test('02415_element_check_02392', () async {
      print("\n********** テスト実行：02415_element_check_02392 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.dsp_flg1;
      print(qcashier.screen70.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.dsp_flg1 = testData1;
      print(qcashier.screen70.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.dsp_flg1 = testData2;
      print(qcashier.screen70.dsp_flg1);
      expect(qcashier.screen70.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.dsp_flg1 = defalut;
      print(qcashier.screen70.dsp_flg1);
      expect(qcashier.screen70.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02415_element_check_02392 **********\n\n");
    });

    test('02416_element_check_02393', () async {
      print("\n********** テスト実行：02416_element_check_02393 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.dsp_flg2;
      print(qcashier.screen70.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.dsp_flg2 = testData1;
      print(qcashier.screen70.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.dsp_flg2 = testData2;
      print(qcashier.screen70.dsp_flg2);
      expect(qcashier.screen70.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.dsp_flg2 = defalut;
      print(qcashier.screen70.dsp_flg2);
      expect(qcashier.screen70.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02416_element_check_02393 **********\n\n");
    });

    test('02417_element_check_02394', () async {
      print("\n********** テスト実行：02417_element_check_02394 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.movie01_ext;
      print(qcashier.screen70.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.movie01_ext = testData1;
      print(qcashier.screen70.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.movie01_ext = testData2;
      print(qcashier.screen70.movie01_ext);
      expect(qcashier.screen70.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.movie01_ext = defalut;
      print(qcashier.screen70.movie01_ext);
      expect(qcashier.screen70.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02417_element_check_02394 **********\n\n");
    });

    test('02418_element_check_02395', () async {
      print("\n********** テスト実行：02418_element_check_02395 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.movie02_ext;
      print(qcashier.screen70.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.movie02_ext = testData1;
      print(qcashier.screen70.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.movie02_ext = testData2;
      print(qcashier.screen70.movie02_ext);
      expect(qcashier.screen70.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.movie02_ext = defalut;
      print(qcashier.screen70.movie02_ext);
      expect(qcashier.screen70.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02418_element_check_02395 **********\n\n");
    });

    test('02419_element_check_02396', () async {
      print("\n********** テスト実行：02419_element_check_02396 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.movie03_ext;
      print(qcashier.screen70.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.movie03_ext = testData1;
      print(qcashier.screen70.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.movie03_ext = testData2;
      print(qcashier.screen70.movie03_ext);
      expect(qcashier.screen70.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.movie03_ext = defalut;
      print(qcashier.screen70.movie03_ext);
      expect(qcashier.screen70.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02419_element_check_02396 **********\n\n");
    });

    test('02420_element_check_02397', () async {
      print("\n********** テスト実行：02420_element_check_02397 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.movie04_ext;
      print(qcashier.screen70.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.movie04_ext = testData1;
      print(qcashier.screen70.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.movie04_ext = testData2;
      print(qcashier.screen70.movie04_ext);
      expect(qcashier.screen70.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.movie04_ext = defalut;
      print(qcashier.screen70.movie04_ext);
      expect(qcashier.screen70.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02420_element_check_02397 **********\n\n");
    });

    test('02421_element_check_02398', () async {
      print("\n********** テスト実行：02421_element_check_02398 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line_title;
      print(qcashier.screen70.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line_title = testData1s;
      print(qcashier.screen70.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line_title = testData2s;
      print(qcashier.screen70.line_title);
      expect(qcashier.screen70.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line_title = defalut;
      print(qcashier.screen70.line_title);
      expect(qcashier.screen70.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02421_element_check_02398 **********\n\n");
    });

    test('02422_element_check_02399', () async {
      print("\n********** テスト実行：02422_element_check_02399 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line_title_ex;
      print(qcashier.screen70.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line_title_ex = testData1s;
      print(qcashier.screen70.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line_title_ex = testData2s;
      print(qcashier.screen70.line_title_ex);
      expect(qcashier.screen70.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line_title_ex = defalut;
      print(qcashier.screen70.line_title_ex);
      expect(qcashier.screen70.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02422_element_check_02399 **********\n\n");
    });

    test('02423_element_check_02400', () async {
      print("\n********** テスト実行：02423_element_check_02400 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line1;
      print(qcashier.screen70.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line1 = testData1s;
      print(qcashier.screen70.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line1 = testData2s;
      print(qcashier.screen70.line1);
      expect(qcashier.screen70.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line1 = defalut;
      print(qcashier.screen70.line1);
      expect(qcashier.screen70.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02423_element_check_02400 **********\n\n");
    });

    test('02424_element_check_02401', () async {
      print("\n********** テスト実行：02424_element_check_02401 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line2;
      print(qcashier.screen70.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line2 = testData1s;
      print(qcashier.screen70.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line2 = testData2s;
      print(qcashier.screen70.line2);
      expect(qcashier.screen70.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line2 = defalut;
      print(qcashier.screen70.line2);
      expect(qcashier.screen70.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02424_element_check_02401 **********\n\n");
    });

    test('02425_element_check_02402', () async {
      print("\n********** テスト実行：02425_element_check_02402 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line3;
      print(qcashier.screen70.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line3 = testData1s;
      print(qcashier.screen70.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line3 = testData2s;
      print(qcashier.screen70.line3);
      expect(qcashier.screen70.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line3 = defalut;
      print(qcashier.screen70.line3);
      expect(qcashier.screen70.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02425_element_check_02402 **********\n\n");
    });

    test('02426_element_check_02403', () async {
      print("\n********** テスト実行：02426_element_check_02403 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line4;
      print(qcashier.screen70.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line4 = testData1s;
      print(qcashier.screen70.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line4 = testData2s;
      print(qcashier.screen70.line4);
      expect(qcashier.screen70.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line4 = defalut;
      print(qcashier.screen70.line4);
      expect(qcashier.screen70.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02426_element_check_02403 **********\n\n");
    });

    test('02427_element_check_02404', () async {
      print("\n********** テスト実行：02427_element_check_02404 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line1_ex;
      print(qcashier.screen70.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line1_ex = testData1s;
      print(qcashier.screen70.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line1_ex = testData2s;
      print(qcashier.screen70.line1_ex);
      expect(qcashier.screen70.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line1_ex = defalut;
      print(qcashier.screen70.line1_ex);
      expect(qcashier.screen70.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02427_element_check_02404 **********\n\n");
    });

    test('02428_element_check_02405', () async {
      print("\n********** テスト実行：02428_element_check_02405 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line2_ex;
      print(qcashier.screen70.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line2_ex = testData1s;
      print(qcashier.screen70.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line2_ex = testData2s;
      print(qcashier.screen70.line2_ex);
      expect(qcashier.screen70.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line2_ex = defalut;
      print(qcashier.screen70.line2_ex);
      expect(qcashier.screen70.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02428_element_check_02405 **********\n\n");
    });

    test('02429_element_check_02406', () async {
      print("\n********** テスト実行：02429_element_check_02406 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line3_ex;
      print(qcashier.screen70.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line3_ex = testData1s;
      print(qcashier.screen70.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line3_ex = testData2s;
      print(qcashier.screen70.line3_ex);
      expect(qcashier.screen70.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line3_ex = defalut;
      print(qcashier.screen70.line3_ex);
      expect(qcashier.screen70.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02429_element_check_02406 **********\n\n");
    });

    test('02430_element_check_02407', () async {
      print("\n********** テスト実行：02430_element_check_02407 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.line4_ex;
      print(qcashier.screen70.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.line4_ex = testData1s;
      print(qcashier.screen70.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.line4_ex = testData2s;
      print(qcashier.screen70.line4_ex);
      expect(qcashier.screen70.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.line4_ex = defalut;
      print(qcashier.screen70.line4_ex);
      expect(qcashier.screen70.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02430_element_check_02407 **********\n\n");
    });

    test('02431_element_check_02408', () async {
      print("\n********** テスト実行：02431_element_check_02408 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.sound_led1;
      print(qcashier.screen70.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.sound_led1 = testData1;
      print(qcashier.screen70.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.sound_led1 = testData2;
      print(qcashier.screen70.sound_led1);
      expect(qcashier.screen70.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.sound_led1 = defalut;
      print(qcashier.screen70.sound_led1);
      expect(qcashier.screen70.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02431_element_check_02408 **********\n\n");
    });

    test('02432_element_check_02409', () async {
      print("\n********** テスト実行：02432_element_check_02409 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.sound_led2;
      print(qcashier.screen70.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.sound_led2 = testData1;
      print(qcashier.screen70.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.sound_led2 = testData2;
      print(qcashier.screen70.sound_led2);
      expect(qcashier.screen70.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.sound_led2 = defalut;
      print(qcashier.screen70.sound_led2);
      expect(qcashier.screen70.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02432_element_check_02409 **********\n\n");
    });

    test('02433_element_check_02410', () async {
      print("\n********** テスト実行：02433_element_check_02410 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen70.sound_led3;
      print(qcashier.screen70.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen70.sound_led3 = testData1;
      print(qcashier.screen70.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen70.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen70.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen70.sound_led3 = testData2;
      print(qcashier.screen70.sound_led3);
      expect(qcashier.screen70.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen70.sound_led3 = defalut;
      print(qcashier.screen70.sound_led3);
      expect(qcashier.screen70.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen70.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02433_element_check_02410 **********\n\n");
    });

    test('02434_element_check_02411', () async {
      print("\n********** テスト実行：02434_element_check_02411 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.title;
      print(qcashier.screen71.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.title = testData1s;
      print(qcashier.screen71.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.title = testData2s;
      print(qcashier.screen71.title);
      expect(qcashier.screen71.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.title = defalut;
      print(qcashier.screen71.title);
      expect(qcashier.screen71.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02434_element_check_02411 **********\n\n");
    });

    test('02435_element_check_02412', () async {
      print("\n********** テスト実行：02435_element_check_02412 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.msg1;
      print(qcashier.screen71.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.msg1 = testData1s;
      print(qcashier.screen71.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.msg1 = testData2s;
      print(qcashier.screen71.msg1);
      expect(qcashier.screen71.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.msg1 = defalut;
      print(qcashier.screen71.msg1);
      expect(qcashier.screen71.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02435_element_check_02412 **********\n\n");
    });

    test('02436_element_check_02413', () async {
      print("\n********** テスト実行：02436_element_check_02413 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.msg2;
      print(qcashier.screen71.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.msg2 = testData1s;
      print(qcashier.screen71.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.msg2 = testData2s;
      print(qcashier.screen71.msg2);
      expect(qcashier.screen71.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.msg2 = defalut;
      print(qcashier.screen71.msg2);
      expect(qcashier.screen71.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02436_element_check_02413 **********\n\n");
    });

    test('02437_element_check_02414', () async {
      print("\n********** テスト実行：02437_element_check_02414 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.msg1_size;
      print(qcashier.screen71.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.msg1_size = testData1;
      print(qcashier.screen71.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.msg1_size = testData2;
      print(qcashier.screen71.msg1_size);
      expect(qcashier.screen71.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.msg1_size = defalut;
      print(qcashier.screen71.msg1_size);
      expect(qcashier.screen71.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02437_element_check_02414 **********\n\n");
    });

    test('02438_element_check_02415', () async {
      print("\n********** テスト実行：02438_element_check_02415 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.msg2_size;
      print(qcashier.screen71.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.msg2_size = testData1;
      print(qcashier.screen71.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.msg2_size = testData2;
      print(qcashier.screen71.msg2_size);
      expect(qcashier.screen71.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.msg2_size = defalut;
      print(qcashier.screen71.msg2_size);
      expect(qcashier.screen71.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02438_element_check_02415 **********\n\n");
    });

    test('02439_element_check_02416', () async {
      print("\n********** テスト実行：02439_element_check_02416 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.sound1;
      print(qcashier.screen71.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.sound1 = testData1;
      print(qcashier.screen71.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.sound1 = testData2;
      print(qcashier.screen71.sound1);
      expect(qcashier.screen71.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.sound1 = defalut;
      print(qcashier.screen71.sound1);
      expect(qcashier.screen71.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02439_element_check_02416 **********\n\n");
    });

    test('02440_element_check_02417', () async {
      print("\n********** テスト実行：02440_element_check_02417 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.sound2;
      print(qcashier.screen71.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.sound2 = testData1;
      print(qcashier.screen71.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.sound2 = testData2;
      print(qcashier.screen71.sound2);
      expect(qcashier.screen71.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.sound2 = defalut;
      print(qcashier.screen71.sound2);
      expect(qcashier.screen71.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02440_element_check_02417 **********\n\n");
    });

    test('02441_element_check_02418', () async {
      print("\n********** テスト実行：02441_element_check_02418 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.sound3;
      print(qcashier.screen71.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.sound3 = testData1;
      print(qcashier.screen71.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.sound3 = testData2;
      print(qcashier.screen71.sound3);
      expect(qcashier.screen71.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.sound3 = defalut;
      print(qcashier.screen71.sound3);
      expect(qcashier.screen71.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02441_element_check_02418 **********\n\n");
    });

    test('02442_element_check_02419', () async {
      print("\n********** テスト実行：02442_element_check_02419 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.snd_timer;
      print(qcashier.screen71.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.snd_timer = testData1;
      print(qcashier.screen71.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.snd_timer = testData2;
      print(qcashier.screen71.snd_timer);
      expect(qcashier.screen71.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.snd_timer = defalut;
      print(qcashier.screen71.snd_timer);
      expect(qcashier.screen71.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02442_element_check_02419 **********\n\n");
    });

    test('02443_element_check_02420', () async {
      print("\n********** テスト実行：02443_element_check_02420 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.timer1;
      print(qcashier.screen71.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.timer1 = testData1;
      print(qcashier.screen71.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.timer1 = testData2;
      print(qcashier.screen71.timer1);
      expect(qcashier.screen71.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.timer1 = defalut;
      print(qcashier.screen71.timer1);
      expect(qcashier.screen71.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02443_element_check_02420 **********\n\n");
    });

    test('02444_element_check_02421', () async {
      print("\n********** テスト実行：02444_element_check_02421 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.timer2;
      print(qcashier.screen71.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.timer2 = testData1;
      print(qcashier.screen71.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.timer2 = testData2;
      print(qcashier.screen71.timer2);
      expect(qcashier.screen71.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.timer2 = defalut;
      print(qcashier.screen71.timer2);
      expect(qcashier.screen71.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02444_element_check_02421 **********\n\n");
    });

    test('02445_element_check_02422', () async {
      print("\n********** テスト実行：02445_element_check_02422 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.timer3;
      print(qcashier.screen71.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.timer3 = testData1;
      print(qcashier.screen71.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.timer3 = testData2;
      print(qcashier.screen71.timer3);
      expect(qcashier.screen71.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.timer3 = defalut;
      print(qcashier.screen71.timer3);
      expect(qcashier.screen71.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02445_element_check_02422 **********\n\n");
    });

    test('02446_element_check_02423', () async {
      print("\n********** テスト実行：02446_element_check_02423 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.dsp_flg1;
      print(qcashier.screen71.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.dsp_flg1 = testData1;
      print(qcashier.screen71.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.dsp_flg1 = testData2;
      print(qcashier.screen71.dsp_flg1);
      expect(qcashier.screen71.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.dsp_flg1 = defalut;
      print(qcashier.screen71.dsp_flg1);
      expect(qcashier.screen71.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02446_element_check_02423 **********\n\n");
    });

    test('02447_element_check_02424', () async {
      print("\n********** テスト実行：02447_element_check_02424 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.dsp_flg2;
      print(qcashier.screen71.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.dsp_flg2 = testData1;
      print(qcashier.screen71.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.dsp_flg2 = testData2;
      print(qcashier.screen71.dsp_flg2);
      expect(qcashier.screen71.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.dsp_flg2 = defalut;
      print(qcashier.screen71.dsp_flg2);
      expect(qcashier.screen71.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02447_element_check_02424 **********\n\n");
    });

    test('02448_element_check_02425', () async {
      print("\n********** テスト実行：02448_element_check_02425 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.movie01_ext;
      print(qcashier.screen71.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.movie01_ext = testData1;
      print(qcashier.screen71.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.movie01_ext = testData2;
      print(qcashier.screen71.movie01_ext);
      expect(qcashier.screen71.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.movie01_ext = defalut;
      print(qcashier.screen71.movie01_ext);
      expect(qcashier.screen71.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02448_element_check_02425 **********\n\n");
    });

    test('02449_element_check_02426', () async {
      print("\n********** テスト実行：02449_element_check_02426 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.movie02_ext;
      print(qcashier.screen71.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.movie02_ext = testData1;
      print(qcashier.screen71.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.movie02_ext = testData2;
      print(qcashier.screen71.movie02_ext);
      expect(qcashier.screen71.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.movie02_ext = defalut;
      print(qcashier.screen71.movie02_ext);
      expect(qcashier.screen71.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02449_element_check_02426 **********\n\n");
    });

    test('02450_element_check_02427', () async {
      print("\n********** テスト実行：02450_element_check_02427 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.movie03_ext;
      print(qcashier.screen71.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.movie03_ext = testData1;
      print(qcashier.screen71.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.movie03_ext = testData2;
      print(qcashier.screen71.movie03_ext);
      expect(qcashier.screen71.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.movie03_ext = defalut;
      print(qcashier.screen71.movie03_ext);
      expect(qcashier.screen71.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02450_element_check_02427 **********\n\n");
    });

    test('02451_element_check_02428', () async {
      print("\n********** テスト実行：02451_element_check_02428 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.movie04_ext;
      print(qcashier.screen71.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.movie04_ext = testData1;
      print(qcashier.screen71.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.movie04_ext = testData2;
      print(qcashier.screen71.movie04_ext);
      expect(qcashier.screen71.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.movie04_ext = defalut;
      print(qcashier.screen71.movie04_ext);
      expect(qcashier.screen71.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02451_element_check_02428 **********\n\n");
    });

    test('02452_element_check_02429', () async {
      print("\n********** テスト実行：02452_element_check_02429 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line_title;
      print(qcashier.screen71.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line_title = testData1s;
      print(qcashier.screen71.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line_title = testData2s;
      print(qcashier.screen71.line_title);
      expect(qcashier.screen71.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line_title = defalut;
      print(qcashier.screen71.line_title);
      expect(qcashier.screen71.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02452_element_check_02429 **********\n\n");
    });

    test('02453_element_check_02430', () async {
      print("\n********** テスト実行：02453_element_check_02430 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line_title_ex;
      print(qcashier.screen71.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line_title_ex = testData1s;
      print(qcashier.screen71.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line_title_ex = testData2s;
      print(qcashier.screen71.line_title_ex);
      expect(qcashier.screen71.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line_title_ex = defalut;
      print(qcashier.screen71.line_title_ex);
      expect(qcashier.screen71.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02453_element_check_02430 **********\n\n");
    });

    test('02454_element_check_02431', () async {
      print("\n********** テスト実行：02454_element_check_02431 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line1;
      print(qcashier.screen71.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line1 = testData1s;
      print(qcashier.screen71.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line1 = testData2s;
      print(qcashier.screen71.line1);
      expect(qcashier.screen71.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line1 = defalut;
      print(qcashier.screen71.line1);
      expect(qcashier.screen71.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02454_element_check_02431 **********\n\n");
    });

    test('02455_element_check_02432', () async {
      print("\n********** テスト実行：02455_element_check_02432 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line2;
      print(qcashier.screen71.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line2 = testData1s;
      print(qcashier.screen71.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line2 = testData2s;
      print(qcashier.screen71.line2);
      expect(qcashier.screen71.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line2 = defalut;
      print(qcashier.screen71.line2);
      expect(qcashier.screen71.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02455_element_check_02432 **********\n\n");
    });

    test('02456_element_check_02433', () async {
      print("\n********** テスト実行：02456_element_check_02433 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line3;
      print(qcashier.screen71.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line3 = testData1s;
      print(qcashier.screen71.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line3 = testData2s;
      print(qcashier.screen71.line3);
      expect(qcashier.screen71.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line3 = defalut;
      print(qcashier.screen71.line3);
      expect(qcashier.screen71.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02456_element_check_02433 **********\n\n");
    });

    test('02457_element_check_02434', () async {
      print("\n********** テスト実行：02457_element_check_02434 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line4;
      print(qcashier.screen71.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line4 = testData1s;
      print(qcashier.screen71.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line4 = testData2s;
      print(qcashier.screen71.line4);
      expect(qcashier.screen71.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line4 = defalut;
      print(qcashier.screen71.line4);
      expect(qcashier.screen71.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02457_element_check_02434 **********\n\n");
    });

    test('02458_element_check_02435', () async {
      print("\n********** テスト実行：02458_element_check_02435 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line1_ex;
      print(qcashier.screen71.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line1_ex = testData1s;
      print(qcashier.screen71.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line1_ex = testData2s;
      print(qcashier.screen71.line1_ex);
      expect(qcashier.screen71.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line1_ex = defalut;
      print(qcashier.screen71.line1_ex);
      expect(qcashier.screen71.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02458_element_check_02435 **********\n\n");
    });

    test('02459_element_check_02436', () async {
      print("\n********** テスト実行：02459_element_check_02436 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line2_ex;
      print(qcashier.screen71.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line2_ex = testData1s;
      print(qcashier.screen71.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line2_ex = testData2s;
      print(qcashier.screen71.line2_ex);
      expect(qcashier.screen71.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line2_ex = defalut;
      print(qcashier.screen71.line2_ex);
      expect(qcashier.screen71.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02459_element_check_02436 **********\n\n");
    });

    test('02460_element_check_02437', () async {
      print("\n********** テスト実行：02460_element_check_02437 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line3_ex;
      print(qcashier.screen71.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line3_ex = testData1s;
      print(qcashier.screen71.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line3_ex = testData2s;
      print(qcashier.screen71.line3_ex);
      expect(qcashier.screen71.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line3_ex = defalut;
      print(qcashier.screen71.line3_ex);
      expect(qcashier.screen71.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02460_element_check_02437 **********\n\n");
    });

    test('02461_element_check_02438', () async {
      print("\n********** テスト実行：02461_element_check_02438 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.line4_ex;
      print(qcashier.screen71.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.line4_ex = testData1s;
      print(qcashier.screen71.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.line4_ex = testData2s;
      print(qcashier.screen71.line4_ex);
      expect(qcashier.screen71.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.line4_ex = defalut;
      print(qcashier.screen71.line4_ex);
      expect(qcashier.screen71.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02461_element_check_02438 **********\n\n");
    });

    test('02462_element_check_02439', () async {
      print("\n********** テスト実行：02462_element_check_02439 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.sound_led1;
      print(qcashier.screen71.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.sound_led1 = testData1;
      print(qcashier.screen71.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.sound_led1 = testData2;
      print(qcashier.screen71.sound_led1);
      expect(qcashier.screen71.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.sound_led1 = defalut;
      print(qcashier.screen71.sound_led1);
      expect(qcashier.screen71.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02462_element_check_02439 **********\n\n");
    });

    test('02463_element_check_02440', () async {
      print("\n********** テスト実行：02463_element_check_02440 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.sound_led2;
      print(qcashier.screen71.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.sound_led2 = testData1;
      print(qcashier.screen71.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.sound_led2 = testData2;
      print(qcashier.screen71.sound_led2);
      expect(qcashier.screen71.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.sound_led2 = defalut;
      print(qcashier.screen71.sound_led2);
      expect(qcashier.screen71.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02463_element_check_02440 **********\n\n");
    });

    test('02464_element_check_02441', () async {
      print("\n********** テスト実行：02464_element_check_02441 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen71.sound_led3;
      print(qcashier.screen71.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen71.sound_led3 = testData1;
      print(qcashier.screen71.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen71.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen71.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen71.sound_led3 = testData2;
      print(qcashier.screen71.sound_led3);
      expect(qcashier.screen71.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen71.sound_led3 = defalut;
      print(qcashier.screen71.sound_led3);
      expect(qcashier.screen71.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen71.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02464_element_check_02441 **********\n\n");
    });

    test('02465_element_check_02442', () async {
      print("\n********** テスト実行：02465_element_check_02442 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.title;
      print(qcashier.screen72.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.title = testData1s;
      print(qcashier.screen72.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.title = testData2s;
      print(qcashier.screen72.title);
      expect(qcashier.screen72.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.title = defalut;
      print(qcashier.screen72.title);
      expect(qcashier.screen72.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02465_element_check_02442 **********\n\n");
    });

    test('02466_element_check_02443', () async {
      print("\n********** テスト実行：02466_element_check_02443 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.msg1;
      print(qcashier.screen72.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.msg1 = testData1s;
      print(qcashier.screen72.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.msg1 = testData2s;
      print(qcashier.screen72.msg1);
      expect(qcashier.screen72.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.msg1 = defalut;
      print(qcashier.screen72.msg1);
      expect(qcashier.screen72.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02466_element_check_02443 **********\n\n");
    });

    test('02467_element_check_02444', () async {
      print("\n********** テスト実行：02467_element_check_02444 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.msg2;
      print(qcashier.screen72.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.msg2 = testData1s;
      print(qcashier.screen72.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.msg2 = testData2s;
      print(qcashier.screen72.msg2);
      expect(qcashier.screen72.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.msg2 = defalut;
      print(qcashier.screen72.msg2);
      expect(qcashier.screen72.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02467_element_check_02444 **********\n\n");
    });

    test('02468_element_check_02445', () async {
      print("\n********** テスト実行：02468_element_check_02445 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.msg1_size;
      print(qcashier.screen72.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.msg1_size = testData1;
      print(qcashier.screen72.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.msg1_size = testData2;
      print(qcashier.screen72.msg1_size);
      expect(qcashier.screen72.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.msg1_size = defalut;
      print(qcashier.screen72.msg1_size);
      expect(qcashier.screen72.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02468_element_check_02445 **********\n\n");
    });

    test('02469_element_check_02446', () async {
      print("\n********** テスト実行：02469_element_check_02446 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.msg2_size;
      print(qcashier.screen72.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.msg2_size = testData1;
      print(qcashier.screen72.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.msg2_size = testData2;
      print(qcashier.screen72.msg2_size);
      expect(qcashier.screen72.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.msg2_size = defalut;
      print(qcashier.screen72.msg2_size);
      expect(qcashier.screen72.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02469_element_check_02446 **********\n\n");
    });

    test('02470_element_check_02447', () async {
      print("\n********** テスト実行：02470_element_check_02447 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.sound1;
      print(qcashier.screen72.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.sound1 = testData1;
      print(qcashier.screen72.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.sound1 = testData2;
      print(qcashier.screen72.sound1);
      expect(qcashier.screen72.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.sound1 = defalut;
      print(qcashier.screen72.sound1);
      expect(qcashier.screen72.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02470_element_check_02447 **********\n\n");
    });

    test('02471_element_check_02448', () async {
      print("\n********** テスト実行：02471_element_check_02448 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.sound2;
      print(qcashier.screen72.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.sound2 = testData1;
      print(qcashier.screen72.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.sound2 = testData2;
      print(qcashier.screen72.sound2);
      expect(qcashier.screen72.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.sound2 = defalut;
      print(qcashier.screen72.sound2);
      expect(qcashier.screen72.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02471_element_check_02448 **********\n\n");
    });

    test('02472_element_check_02449', () async {
      print("\n********** テスト実行：02472_element_check_02449 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.sound3;
      print(qcashier.screen72.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.sound3 = testData1;
      print(qcashier.screen72.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.sound3 = testData2;
      print(qcashier.screen72.sound3);
      expect(qcashier.screen72.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.sound3 = defalut;
      print(qcashier.screen72.sound3);
      expect(qcashier.screen72.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02472_element_check_02449 **********\n\n");
    });

    test('02473_element_check_02450', () async {
      print("\n********** テスト実行：02473_element_check_02450 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.snd_timer;
      print(qcashier.screen72.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.snd_timer = testData1;
      print(qcashier.screen72.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.snd_timer = testData2;
      print(qcashier.screen72.snd_timer);
      expect(qcashier.screen72.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.snd_timer = defalut;
      print(qcashier.screen72.snd_timer);
      expect(qcashier.screen72.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02473_element_check_02450 **********\n\n");
    });

    test('02474_element_check_02451', () async {
      print("\n********** テスト実行：02474_element_check_02451 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.timer1;
      print(qcashier.screen72.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.timer1 = testData1;
      print(qcashier.screen72.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.timer1 = testData2;
      print(qcashier.screen72.timer1);
      expect(qcashier.screen72.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.timer1 = defalut;
      print(qcashier.screen72.timer1);
      expect(qcashier.screen72.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02474_element_check_02451 **********\n\n");
    });

    test('02475_element_check_02452', () async {
      print("\n********** テスト実行：02475_element_check_02452 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.timer2;
      print(qcashier.screen72.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.timer2 = testData1;
      print(qcashier.screen72.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.timer2 = testData2;
      print(qcashier.screen72.timer2);
      expect(qcashier.screen72.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.timer2 = defalut;
      print(qcashier.screen72.timer2);
      expect(qcashier.screen72.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02475_element_check_02452 **********\n\n");
    });

    test('02476_element_check_02453', () async {
      print("\n********** テスト実行：02476_element_check_02453 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.timer3;
      print(qcashier.screen72.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.timer3 = testData1;
      print(qcashier.screen72.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.timer3 = testData2;
      print(qcashier.screen72.timer3);
      expect(qcashier.screen72.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.timer3 = defalut;
      print(qcashier.screen72.timer3);
      expect(qcashier.screen72.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02476_element_check_02453 **********\n\n");
    });

    test('02477_element_check_02454', () async {
      print("\n********** テスト実行：02477_element_check_02454 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.dsp_flg1;
      print(qcashier.screen72.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.dsp_flg1 = testData1;
      print(qcashier.screen72.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.dsp_flg1 = testData2;
      print(qcashier.screen72.dsp_flg1);
      expect(qcashier.screen72.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.dsp_flg1 = defalut;
      print(qcashier.screen72.dsp_flg1);
      expect(qcashier.screen72.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02477_element_check_02454 **********\n\n");
    });

    test('02478_element_check_02455', () async {
      print("\n********** テスト実行：02478_element_check_02455 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.dsp_flg2;
      print(qcashier.screen72.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.dsp_flg2 = testData1;
      print(qcashier.screen72.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.dsp_flg2 = testData2;
      print(qcashier.screen72.dsp_flg2);
      expect(qcashier.screen72.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.dsp_flg2 = defalut;
      print(qcashier.screen72.dsp_flg2);
      expect(qcashier.screen72.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02478_element_check_02455 **********\n\n");
    });

    test('02479_element_check_02456', () async {
      print("\n********** テスト実行：02479_element_check_02456 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.movie01_ext;
      print(qcashier.screen72.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.movie01_ext = testData1;
      print(qcashier.screen72.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.movie01_ext = testData2;
      print(qcashier.screen72.movie01_ext);
      expect(qcashier.screen72.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.movie01_ext = defalut;
      print(qcashier.screen72.movie01_ext);
      expect(qcashier.screen72.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02479_element_check_02456 **********\n\n");
    });

    test('02480_element_check_02457', () async {
      print("\n********** テスト実行：02480_element_check_02457 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.movie02_ext;
      print(qcashier.screen72.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.movie02_ext = testData1;
      print(qcashier.screen72.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.movie02_ext = testData2;
      print(qcashier.screen72.movie02_ext);
      expect(qcashier.screen72.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.movie02_ext = defalut;
      print(qcashier.screen72.movie02_ext);
      expect(qcashier.screen72.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02480_element_check_02457 **********\n\n");
    });

    test('02481_element_check_02458', () async {
      print("\n********** テスト実行：02481_element_check_02458 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.movie03_ext;
      print(qcashier.screen72.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.movie03_ext = testData1;
      print(qcashier.screen72.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.movie03_ext = testData2;
      print(qcashier.screen72.movie03_ext);
      expect(qcashier.screen72.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.movie03_ext = defalut;
      print(qcashier.screen72.movie03_ext);
      expect(qcashier.screen72.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02481_element_check_02458 **********\n\n");
    });

    test('02482_element_check_02459', () async {
      print("\n********** テスト実行：02482_element_check_02459 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.movie04_ext;
      print(qcashier.screen72.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.movie04_ext = testData1;
      print(qcashier.screen72.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.movie04_ext = testData2;
      print(qcashier.screen72.movie04_ext);
      expect(qcashier.screen72.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.movie04_ext = defalut;
      print(qcashier.screen72.movie04_ext);
      expect(qcashier.screen72.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02482_element_check_02459 **********\n\n");
    });

    test('02483_element_check_02460', () async {
      print("\n********** テスト実行：02483_element_check_02460 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line_title;
      print(qcashier.screen72.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line_title = testData1s;
      print(qcashier.screen72.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line_title = testData2s;
      print(qcashier.screen72.line_title);
      expect(qcashier.screen72.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line_title = defalut;
      print(qcashier.screen72.line_title);
      expect(qcashier.screen72.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02483_element_check_02460 **********\n\n");
    });

    test('02484_element_check_02461', () async {
      print("\n********** テスト実行：02484_element_check_02461 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line_title_ex;
      print(qcashier.screen72.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line_title_ex = testData1s;
      print(qcashier.screen72.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line_title_ex = testData2s;
      print(qcashier.screen72.line_title_ex);
      expect(qcashier.screen72.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line_title_ex = defalut;
      print(qcashier.screen72.line_title_ex);
      expect(qcashier.screen72.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02484_element_check_02461 **********\n\n");
    });

    test('02485_element_check_02462', () async {
      print("\n********** テスト実行：02485_element_check_02462 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line1;
      print(qcashier.screen72.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line1 = testData1s;
      print(qcashier.screen72.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line1 = testData2s;
      print(qcashier.screen72.line1);
      expect(qcashier.screen72.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line1 = defalut;
      print(qcashier.screen72.line1);
      expect(qcashier.screen72.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02485_element_check_02462 **********\n\n");
    });

    test('02486_element_check_02463', () async {
      print("\n********** テスト実行：02486_element_check_02463 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line2;
      print(qcashier.screen72.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line2 = testData1s;
      print(qcashier.screen72.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line2 = testData2s;
      print(qcashier.screen72.line2);
      expect(qcashier.screen72.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line2 = defalut;
      print(qcashier.screen72.line2);
      expect(qcashier.screen72.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02486_element_check_02463 **********\n\n");
    });

    test('02487_element_check_02464', () async {
      print("\n********** テスト実行：02487_element_check_02464 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line3;
      print(qcashier.screen72.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line3 = testData1s;
      print(qcashier.screen72.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line3 = testData2s;
      print(qcashier.screen72.line3);
      expect(qcashier.screen72.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line3 = defalut;
      print(qcashier.screen72.line3);
      expect(qcashier.screen72.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02487_element_check_02464 **********\n\n");
    });

    test('02488_element_check_02465', () async {
      print("\n********** テスト実行：02488_element_check_02465 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line4;
      print(qcashier.screen72.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line4 = testData1s;
      print(qcashier.screen72.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line4 = testData2s;
      print(qcashier.screen72.line4);
      expect(qcashier.screen72.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line4 = defalut;
      print(qcashier.screen72.line4);
      expect(qcashier.screen72.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02488_element_check_02465 **********\n\n");
    });

    test('02489_element_check_02466', () async {
      print("\n********** テスト実行：02489_element_check_02466 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line1_ex;
      print(qcashier.screen72.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line1_ex = testData1s;
      print(qcashier.screen72.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line1_ex = testData2s;
      print(qcashier.screen72.line1_ex);
      expect(qcashier.screen72.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line1_ex = defalut;
      print(qcashier.screen72.line1_ex);
      expect(qcashier.screen72.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02489_element_check_02466 **********\n\n");
    });

    test('02490_element_check_02467', () async {
      print("\n********** テスト実行：02490_element_check_02467 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line2_ex;
      print(qcashier.screen72.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line2_ex = testData1s;
      print(qcashier.screen72.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line2_ex = testData2s;
      print(qcashier.screen72.line2_ex);
      expect(qcashier.screen72.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line2_ex = defalut;
      print(qcashier.screen72.line2_ex);
      expect(qcashier.screen72.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02490_element_check_02467 **********\n\n");
    });

    test('02491_element_check_02468', () async {
      print("\n********** テスト実行：02491_element_check_02468 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line3_ex;
      print(qcashier.screen72.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line3_ex = testData1s;
      print(qcashier.screen72.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line3_ex = testData2s;
      print(qcashier.screen72.line3_ex);
      expect(qcashier.screen72.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line3_ex = defalut;
      print(qcashier.screen72.line3_ex);
      expect(qcashier.screen72.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02491_element_check_02468 **********\n\n");
    });

    test('02492_element_check_02469', () async {
      print("\n********** テスト実行：02492_element_check_02469 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.line4_ex;
      print(qcashier.screen72.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.line4_ex = testData1s;
      print(qcashier.screen72.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.line4_ex = testData2s;
      print(qcashier.screen72.line4_ex);
      expect(qcashier.screen72.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.line4_ex = defalut;
      print(qcashier.screen72.line4_ex);
      expect(qcashier.screen72.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02492_element_check_02469 **********\n\n");
    });

    test('02493_element_check_02470', () async {
      print("\n********** テスト実行：02493_element_check_02470 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.sound_led1;
      print(qcashier.screen72.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.sound_led1 = testData1;
      print(qcashier.screen72.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.sound_led1 = testData2;
      print(qcashier.screen72.sound_led1);
      expect(qcashier.screen72.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.sound_led1 = defalut;
      print(qcashier.screen72.sound_led1);
      expect(qcashier.screen72.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02493_element_check_02470 **********\n\n");
    });

    test('02494_element_check_02471', () async {
      print("\n********** テスト実行：02494_element_check_02471 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.sound_led2;
      print(qcashier.screen72.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.sound_led2 = testData1;
      print(qcashier.screen72.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.sound_led2 = testData2;
      print(qcashier.screen72.sound_led2);
      expect(qcashier.screen72.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.sound_led2 = defalut;
      print(qcashier.screen72.sound_led2);
      expect(qcashier.screen72.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02494_element_check_02471 **********\n\n");
    });

    test('02495_element_check_02472', () async {
      print("\n********** テスト実行：02495_element_check_02472 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen72.sound_led3;
      print(qcashier.screen72.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen72.sound_led3 = testData1;
      print(qcashier.screen72.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen72.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen72.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen72.sound_led3 = testData2;
      print(qcashier.screen72.sound_led3);
      expect(qcashier.screen72.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen72.sound_led3 = defalut;
      print(qcashier.screen72.sound_led3);
      expect(qcashier.screen72.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen72.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02495_element_check_02472 **********\n\n");
    });

    test('02496_element_check_02473', () async {
      print("\n********** テスト実行：02496_element_check_02473 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.title;
      print(qcashier.screen73.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.title = testData1s;
      print(qcashier.screen73.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.title = testData2s;
      print(qcashier.screen73.title);
      expect(qcashier.screen73.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.title = defalut;
      print(qcashier.screen73.title);
      expect(qcashier.screen73.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02496_element_check_02473 **********\n\n");
    });

    test('02497_element_check_02474', () async {
      print("\n********** テスト実行：02497_element_check_02474 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.msg1;
      print(qcashier.screen73.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.msg1 = testData1s;
      print(qcashier.screen73.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.msg1 = testData2s;
      print(qcashier.screen73.msg1);
      expect(qcashier.screen73.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.msg1 = defalut;
      print(qcashier.screen73.msg1);
      expect(qcashier.screen73.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02497_element_check_02474 **********\n\n");
    });

    test('02498_element_check_02475', () async {
      print("\n********** テスト実行：02498_element_check_02475 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.msg2;
      print(qcashier.screen73.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.msg2 = testData1s;
      print(qcashier.screen73.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.msg2 = testData2s;
      print(qcashier.screen73.msg2);
      expect(qcashier.screen73.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.msg2 = defalut;
      print(qcashier.screen73.msg2);
      expect(qcashier.screen73.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02498_element_check_02475 **********\n\n");
    });

    test('02499_element_check_02476', () async {
      print("\n********** テスト実行：02499_element_check_02476 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.msg1_size;
      print(qcashier.screen73.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.msg1_size = testData1;
      print(qcashier.screen73.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.msg1_size = testData2;
      print(qcashier.screen73.msg1_size);
      expect(qcashier.screen73.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.msg1_size = defalut;
      print(qcashier.screen73.msg1_size);
      expect(qcashier.screen73.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02499_element_check_02476 **********\n\n");
    });

    test('02500_element_check_02477', () async {
      print("\n********** テスト実行：02500_element_check_02477 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.msg2_size;
      print(qcashier.screen73.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.msg2_size = testData1;
      print(qcashier.screen73.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.msg2_size = testData2;
      print(qcashier.screen73.msg2_size);
      expect(qcashier.screen73.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.msg2_size = defalut;
      print(qcashier.screen73.msg2_size);
      expect(qcashier.screen73.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02500_element_check_02477 **********\n\n");
    });

    test('02501_element_check_02478', () async {
      print("\n********** テスト実行：02501_element_check_02478 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.sound1;
      print(qcashier.screen73.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.sound1 = testData1;
      print(qcashier.screen73.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.sound1 = testData2;
      print(qcashier.screen73.sound1);
      expect(qcashier.screen73.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.sound1 = defalut;
      print(qcashier.screen73.sound1);
      expect(qcashier.screen73.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02501_element_check_02478 **********\n\n");
    });

    test('02502_element_check_02479', () async {
      print("\n********** テスト実行：02502_element_check_02479 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.sound2;
      print(qcashier.screen73.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.sound2 = testData1;
      print(qcashier.screen73.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.sound2 = testData2;
      print(qcashier.screen73.sound2);
      expect(qcashier.screen73.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.sound2 = defalut;
      print(qcashier.screen73.sound2);
      expect(qcashier.screen73.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02502_element_check_02479 **********\n\n");
    });

    test('02503_element_check_02480', () async {
      print("\n********** テスト実行：02503_element_check_02480 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.sound3;
      print(qcashier.screen73.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.sound3 = testData1;
      print(qcashier.screen73.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.sound3 = testData2;
      print(qcashier.screen73.sound3);
      expect(qcashier.screen73.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.sound3 = defalut;
      print(qcashier.screen73.sound3);
      expect(qcashier.screen73.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02503_element_check_02480 **********\n\n");
    });

    test('02504_element_check_02481', () async {
      print("\n********** テスト実行：02504_element_check_02481 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.snd_timer;
      print(qcashier.screen73.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.snd_timer = testData1;
      print(qcashier.screen73.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.snd_timer = testData2;
      print(qcashier.screen73.snd_timer);
      expect(qcashier.screen73.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.snd_timer = defalut;
      print(qcashier.screen73.snd_timer);
      expect(qcashier.screen73.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02504_element_check_02481 **********\n\n");
    });

    test('02505_element_check_02482', () async {
      print("\n********** テスト実行：02505_element_check_02482 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.timer1;
      print(qcashier.screen73.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.timer1 = testData1;
      print(qcashier.screen73.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.timer1 = testData2;
      print(qcashier.screen73.timer1);
      expect(qcashier.screen73.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.timer1 = defalut;
      print(qcashier.screen73.timer1);
      expect(qcashier.screen73.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02505_element_check_02482 **********\n\n");
    });

    test('02506_element_check_02483', () async {
      print("\n********** テスト実行：02506_element_check_02483 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.timer2;
      print(qcashier.screen73.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.timer2 = testData1;
      print(qcashier.screen73.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.timer2 = testData2;
      print(qcashier.screen73.timer2);
      expect(qcashier.screen73.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.timer2 = defalut;
      print(qcashier.screen73.timer2);
      expect(qcashier.screen73.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02506_element_check_02483 **********\n\n");
    });

    test('02507_element_check_02484', () async {
      print("\n********** テスト実行：02507_element_check_02484 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.timer3;
      print(qcashier.screen73.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.timer3 = testData1;
      print(qcashier.screen73.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.timer3 = testData2;
      print(qcashier.screen73.timer3);
      expect(qcashier.screen73.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.timer3 = defalut;
      print(qcashier.screen73.timer3);
      expect(qcashier.screen73.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02507_element_check_02484 **********\n\n");
    });

    test('02508_element_check_02485', () async {
      print("\n********** テスト実行：02508_element_check_02485 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.dsp_flg1;
      print(qcashier.screen73.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.dsp_flg1 = testData1;
      print(qcashier.screen73.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.dsp_flg1 = testData2;
      print(qcashier.screen73.dsp_flg1);
      expect(qcashier.screen73.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.dsp_flg1 = defalut;
      print(qcashier.screen73.dsp_flg1);
      expect(qcashier.screen73.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02508_element_check_02485 **********\n\n");
    });

    test('02509_element_check_02486', () async {
      print("\n********** テスト実行：02509_element_check_02486 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.dsp_flg2;
      print(qcashier.screen73.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.dsp_flg2 = testData1;
      print(qcashier.screen73.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.dsp_flg2 = testData2;
      print(qcashier.screen73.dsp_flg2);
      expect(qcashier.screen73.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.dsp_flg2 = defalut;
      print(qcashier.screen73.dsp_flg2);
      expect(qcashier.screen73.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02509_element_check_02486 **********\n\n");
    });

    test('02510_element_check_02487', () async {
      print("\n********** テスト実行：02510_element_check_02487 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.movie01_ext;
      print(qcashier.screen73.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.movie01_ext = testData1;
      print(qcashier.screen73.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.movie01_ext = testData2;
      print(qcashier.screen73.movie01_ext);
      expect(qcashier.screen73.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.movie01_ext = defalut;
      print(qcashier.screen73.movie01_ext);
      expect(qcashier.screen73.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02510_element_check_02487 **********\n\n");
    });

    test('02511_element_check_02488', () async {
      print("\n********** テスト実行：02511_element_check_02488 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.movie02_ext;
      print(qcashier.screen73.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.movie02_ext = testData1;
      print(qcashier.screen73.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.movie02_ext = testData2;
      print(qcashier.screen73.movie02_ext);
      expect(qcashier.screen73.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.movie02_ext = defalut;
      print(qcashier.screen73.movie02_ext);
      expect(qcashier.screen73.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02511_element_check_02488 **********\n\n");
    });

    test('02512_element_check_02489', () async {
      print("\n********** テスト実行：02512_element_check_02489 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.movie03_ext;
      print(qcashier.screen73.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.movie03_ext = testData1;
      print(qcashier.screen73.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.movie03_ext = testData2;
      print(qcashier.screen73.movie03_ext);
      expect(qcashier.screen73.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.movie03_ext = defalut;
      print(qcashier.screen73.movie03_ext);
      expect(qcashier.screen73.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02512_element_check_02489 **********\n\n");
    });

    test('02513_element_check_02490', () async {
      print("\n********** テスト実行：02513_element_check_02490 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.movie04_ext;
      print(qcashier.screen73.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.movie04_ext = testData1;
      print(qcashier.screen73.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.movie04_ext = testData2;
      print(qcashier.screen73.movie04_ext);
      expect(qcashier.screen73.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.movie04_ext = defalut;
      print(qcashier.screen73.movie04_ext);
      expect(qcashier.screen73.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02513_element_check_02490 **********\n\n");
    });

    test('02514_element_check_02491', () async {
      print("\n********** テスト実行：02514_element_check_02491 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line_title;
      print(qcashier.screen73.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line_title = testData1s;
      print(qcashier.screen73.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line_title = testData2s;
      print(qcashier.screen73.line_title);
      expect(qcashier.screen73.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line_title = defalut;
      print(qcashier.screen73.line_title);
      expect(qcashier.screen73.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02514_element_check_02491 **********\n\n");
    });

    test('02515_element_check_02492', () async {
      print("\n********** テスト実行：02515_element_check_02492 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line_title_ex;
      print(qcashier.screen73.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line_title_ex = testData1s;
      print(qcashier.screen73.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line_title_ex = testData2s;
      print(qcashier.screen73.line_title_ex);
      expect(qcashier.screen73.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line_title_ex = defalut;
      print(qcashier.screen73.line_title_ex);
      expect(qcashier.screen73.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02515_element_check_02492 **********\n\n");
    });

    test('02516_element_check_02493', () async {
      print("\n********** テスト実行：02516_element_check_02493 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line1;
      print(qcashier.screen73.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line1 = testData1s;
      print(qcashier.screen73.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line1 = testData2s;
      print(qcashier.screen73.line1);
      expect(qcashier.screen73.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line1 = defalut;
      print(qcashier.screen73.line1);
      expect(qcashier.screen73.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02516_element_check_02493 **********\n\n");
    });

    test('02517_element_check_02494', () async {
      print("\n********** テスト実行：02517_element_check_02494 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line2;
      print(qcashier.screen73.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line2 = testData1s;
      print(qcashier.screen73.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line2 = testData2s;
      print(qcashier.screen73.line2);
      expect(qcashier.screen73.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line2 = defalut;
      print(qcashier.screen73.line2);
      expect(qcashier.screen73.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02517_element_check_02494 **********\n\n");
    });

    test('02518_element_check_02495', () async {
      print("\n********** テスト実行：02518_element_check_02495 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line3;
      print(qcashier.screen73.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line3 = testData1s;
      print(qcashier.screen73.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line3 = testData2s;
      print(qcashier.screen73.line3);
      expect(qcashier.screen73.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line3 = defalut;
      print(qcashier.screen73.line3);
      expect(qcashier.screen73.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02518_element_check_02495 **********\n\n");
    });

    test('02519_element_check_02496', () async {
      print("\n********** テスト実行：02519_element_check_02496 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line4;
      print(qcashier.screen73.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line4 = testData1s;
      print(qcashier.screen73.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line4 = testData2s;
      print(qcashier.screen73.line4);
      expect(qcashier.screen73.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line4 = defalut;
      print(qcashier.screen73.line4);
      expect(qcashier.screen73.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02519_element_check_02496 **********\n\n");
    });

    test('02520_element_check_02497', () async {
      print("\n********** テスト実行：02520_element_check_02497 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line1_ex;
      print(qcashier.screen73.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line1_ex = testData1s;
      print(qcashier.screen73.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line1_ex = testData2s;
      print(qcashier.screen73.line1_ex);
      expect(qcashier.screen73.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line1_ex = defalut;
      print(qcashier.screen73.line1_ex);
      expect(qcashier.screen73.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02520_element_check_02497 **********\n\n");
    });

    test('02521_element_check_02498', () async {
      print("\n********** テスト実行：02521_element_check_02498 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line2_ex;
      print(qcashier.screen73.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line2_ex = testData1s;
      print(qcashier.screen73.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line2_ex = testData2s;
      print(qcashier.screen73.line2_ex);
      expect(qcashier.screen73.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line2_ex = defalut;
      print(qcashier.screen73.line2_ex);
      expect(qcashier.screen73.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02521_element_check_02498 **********\n\n");
    });

    test('02522_element_check_02499', () async {
      print("\n********** テスト実行：02522_element_check_02499 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line3_ex;
      print(qcashier.screen73.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line3_ex = testData1s;
      print(qcashier.screen73.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line3_ex = testData2s;
      print(qcashier.screen73.line3_ex);
      expect(qcashier.screen73.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line3_ex = defalut;
      print(qcashier.screen73.line3_ex);
      expect(qcashier.screen73.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02522_element_check_02499 **********\n\n");
    });

    test('02523_element_check_02500', () async {
      print("\n********** テスト実行：02523_element_check_02500 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.line4_ex;
      print(qcashier.screen73.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.line4_ex = testData1s;
      print(qcashier.screen73.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.line4_ex = testData2s;
      print(qcashier.screen73.line4_ex);
      expect(qcashier.screen73.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.line4_ex = defalut;
      print(qcashier.screen73.line4_ex);
      expect(qcashier.screen73.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02523_element_check_02500 **********\n\n");
    });

    test('02524_element_check_02501', () async {
      print("\n********** テスト実行：02524_element_check_02501 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.sound_led1;
      print(qcashier.screen73.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.sound_led1 = testData1;
      print(qcashier.screen73.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.sound_led1 = testData2;
      print(qcashier.screen73.sound_led1);
      expect(qcashier.screen73.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.sound_led1 = defalut;
      print(qcashier.screen73.sound_led1);
      expect(qcashier.screen73.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02524_element_check_02501 **********\n\n");
    });

    test('02525_element_check_02502', () async {
      print("\n********** テスト実行：02525_element_check_02502 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.sound_led2;
      print(qcashier.screen73.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.sound_led2 = testData1;
      print(qcashier.screen73.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.sound_led2 = testData2;
      print(qcashier.screen73.sound_led2);
      expect(qcashier.screen73.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.sound_led2 = defalut;
      print(qcashier.screen73.sound_led2);
      expect(qcashier.screen73.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02525_element_check_02502 **********\n\n");
    });

    test('02526_element_check_02503', () async {
      print("\n********** テスト実行：02526_element_check_02503 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen73.sound_led3;
      print(qcashier.screen73.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen73.sound_led3 = testData1;
      print(qcashier.screen73.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen73.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen73.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen73.sound_led3 = testData2;
      print(qcashier.screen73.sound_led3);
      expect(qcashier.screen73.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen73.sound_led3 = defalut;
      print(qcashier.screen73.sound_led3);
      expect(qcashier.screen73.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen73.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02526_element_check_02503 **********\n\n");
    });

    test('02527_element_check_02504', () async {
      print("\n********** テスト実行：02527_element_check_02504 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.title;
      print(qcashier.screen74.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.title = testData1s;
      print(qcashier.screen74.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.title = testData2s;
      print(qcashier.screen74.title);
      expect(qcashier.screen74.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.title = defalut;
      print(qcashier.screen74.title);
      expect(qcashier.screen74.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02527_element_check_02504 **********\n\n");
    });

    test('02528_element_check_02505', () async {
      print("\n********** テスト実行：02528_element_check_02505 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.msg1;
      print(qcashier.screen74.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.msg1 = testData1s;
      print(qcashier.screen74.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.msg1 = testData2s;
      print(qcashier.screen74.msg1);
      expect(qcashier.screen74.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.msg1 = defalut;
      print(qcashier.screen74.msg1);
      expect(qcashier.screen74.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02528_element_check_02505 **********\n\n");
    });

    test('02529_element_check_02506', () async {
      print("\n********** テスト実行：02529_element_check_02506 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.msg2;
      print(qcashier.screen74.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.msg2 = testData1s;
      print(qcashier.screen74.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.msg2 = testData2s;
      print(qcashier.screen74.msg2);
      expect(qcashier.screen74.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.msg2 = defalut;
      print(qcashier.screen74.msg2);
      expect(qcashier.screen74.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02529_element_check_02506 **********\n\n");
    });

    test('02530_element_check_02507', () async {
      print("\n********** テスト実行：02530_element_check_02507 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.msg1_size;
      print(qcashier.screen74.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.msg1_size = testData1;
      print(qcashier.screen74.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.msg1_size = testData2;
      print(qcashier.screen74.msg1_size);
      expect(qcashier.screen74.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.msg1_size = defalut;
      print(qcashier.screen74.msg1_size);
      expect(qcashier.screen74.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02530_element_check_02507 **********\n\n");
    });

    test('02531_element_check_02508', () async {
      print("\n********** テスト実行：02531_element_check_02508 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.msg2_size;
      print(qcashier.screen74.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.msg2_size = testData1;
      print(qcashier.screen74.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.msg2_size = testData2;
      print(qcashier.screen74.msg2_size);
      expect(qcashier.screen74.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.msg2_size = defalut;
      print(qcashier.screen74.msg2_size);
      expect(qcashier.screen74.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02531_element_check_02508 **********\n\n");
    });

    test('02532_element_check_02509', () async {
      print("\n********** テスト実行：02532_element_check_02509 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.sound1;
      print(qcashier.screen74.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.sound1 = testData1;
      print(qcashier.screen74.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.sound1 = testData2;
      print(qcashier.screen74.sound1);
      expect(qcashier.screen74.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.sound1 = defalut;
      print(qcashier.screen74.sound1);
      expect(qcashier.screen74.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02532_element_check_02509 **********\n\n");
    });

    test('02533_element_check_02510', () async {
      print("\n********** テスト実行：02533_element_check_02510 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.sound2;
      print(qcashier.screen74.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.sound2 = testData1;
      print(qcashier.screen74.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.sound2 = testData2;
      print(qcashier.screen74.sound2);
      expect(qcashier.screen74.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.sound2 = defalut;
      print(qcashier.screen74.sound2);
      expect(qcashier.screen74.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02533_element_check_02510 **********\n\n");
    });

    test('02534_element_check_02511', () async {
      print("\n********** テスト実行：02534_element_check_02511 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.sound3;
      print(qcashier.screen74.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.sound3 = testData1;
      print(qcashier.screen74.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.sound3 = testData2;
      print(qcashier.screen74.sound3);
      expect(qcashier.screen74.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.sound3 = defalut;
      print(qcashier.screen74.sound3);
      expect(qcashier.screen74.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02534_element_check_02511 **********\n\n");
    });

    test('02535_element_check_02512', () async {
      print("\n********** テスト実行：02535_element_check_02512 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.snd_timer;
      print(qcashier.screen74.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.snd_timer = testData1;
      print(qcashier.screen74.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.snd_timer = testData2;
      print(qcashier.screen74.snd_timer);
      expect(qcashier.screen74.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.snd_timer = defalut;
      print(qcashier.screen74.snd_timer);
      expect(qcashier.screen74.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02535_element_check_02512 **********\n\n");
    });

    test('02536_element_check_02513', () async {
      print("\n********** テスト実行：02536_element_check_02513 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.timer1;
      print(qcashier.screen74.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.timer1 = testData1;
      print(qcashier.screen74.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.timer1 = testData2;
      print(qcashier.screen74.timer1);
      expect(qcashier.screen74.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.timer1 = defalut;
      print(qcashier.screen74.timer1);
      expect(qcashier.screen74.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02536_element_check_02513 **********\n\n");
    });

    test('02537_element_check_02514', () async {
      print("\n********** テスト実行：02537_element_check_02514 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.timer2;
      print(qcashier.screen74.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.timer2 = testData1;
      print(qcashier.screen74.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.timer2 = testData2;
      print(qcashier.screen74.timer2);
      expect(qcashier.screen74.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.timer2 = defalut;
      print(qcashier.screen74.timer2);
      expect(qcashier.screen74.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02537_element_check_02514 **********\n\n");
    });

    test('02538_element_check_02515', () async {
      print("\n********** テスト実行：02538_element_check_02515 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.timer3;
      print(qcashier.screen74.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.timer3 = testData1;
      print(qcashier.screen74.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.timer3 = testData2;
      print(qcashier.screen74.timer3);
      expect(qcashier.screen74.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.timer3 = defalut;
      print(qcashier.screen74.timer3);
      expect(qcashier.screen74.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02538_element_check_02515 **********\n\n");
    });

    test('02539_element_check_02516', () async {
      print("\n********** テスト実行：02539_element_check_02516 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.dsp_flg1;
      print(qcashier.screen74.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.dsp_flg1 = testData1;
      print(qcashier.screen74.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.dsp_flg1 = testData2;
      print(qcashier.screen74.dsp_flg1);
      expect(qcashier.screen74.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.dsp_flg1 = defalut;
      print(qcashier.screen74.dsp_flg1);
      expect(qcashier.screen74.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02539_element_check_02516 **********\n\n");
    });

    test('02540_element_check_02517', () async {
      print("\n********** テスト実行：02540_element_check_02517 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.dsp_flg2;
      print(qcashier.screen74.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.dsp_flg2 = testData1;
      print(qcashier.screen74.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.dsp_flg2 = testData2;
      print(qcashier.screen74.dsp_flg2);
      expect(qcashier.screen74.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.dsp_flg2 = defalut;
      print(qcashier.screen74.dsp_flg2);
      expect(qcashier.screen74.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02540_element_check_02517 **********\n\n");
    });

    test('02541_element_check_02518', () async {
      print("\n********** テスト実行：02541_element_check_02518 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.movie01_ext;
      print(qcashier.screen74.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.movie01_ext = testData1;
      print(qcashier.screen74.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.movie01_ext = testData2;
      print(qcashier.screen74.movie01_ext);
      expect(qcashier.screen74.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.movie01_ext = defalut;
      print(qcashier.screen74.movie01_ext);
      expect(qcashier.screen74.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02541_element_check_02518 **********\n\n");
    });

    test('02542_element_check_02519', () async {
      print("\n********** テスト実行：02542_element_check_02519 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.movie02_ext;
      print(qcashier.screen74.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.movie02_ext = testData1;
      print(qcashier.screen74.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.movie02_ext = testData2;
      print(qcashier.screen74.movie02_ext);
      expect(qcashier.screen74.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.movie02_ext = defalut;
      print(qcashier.screen74.movie02_ext);
      expect(qcashier.screen74.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02542_element_check_02519 **********\n\n");
    });

    test('02543_element_check_02520', () async {
      print("\n********** テスト実行：02543_element_check_02520 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.movie03_ext;
      print(qcashier.screen74.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.movie03_ext = testData1;
      print(qcashier.screen74.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.movie03_ext = testData2;
      print(qcashier.screen74.movie03_ext);
      expect(qcashier.screen74.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.movie03_ext = defalut;
      print(qcashier.screen74.movie03_ext);
      expect(qcashier.screen74.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02543_element_check_02520 **********\n\n");
    });

    test('02544_element_check_02521', () async {
      print("\n********** テスト実行：02544_element_check_02521 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.movie04_ext;
      print(qcashier.screen74.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.movie04_ext = testData1;
      print(qcashier.screen74.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.movie04_ext = testData2;
      print(qcashier.screen74.movie04_ext);
      expect(qcashier.screen74.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.movie04_ext = defalut;
      print(qcashier.screen74.movie04_ext);
      expect(qcashier.screen74.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02544_element_check_02521 **********\n\n");
    });

    test('02545_element_check_02522', () async {
      print("\n********** テスト実行：02545_element_check_02522 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line_title;
      print(qcashier.screen74.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line_title = testData1s;
      print(qcashier.screen74.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line_title = testData2s;
      print(qcashier.screen74.line_title);
      expect(qcashier.screen74.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line_title = defalut;
      print(qcashier.screen74.line_title);
      expect(qcashier.screen74.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02545_element_check_02522 **********\n\n");
    });

    test('02546_element_check_02523', () async {
      print("\n********** テスト実行：02546_element_check_02523 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line_title_ex;
      print(qcashier.screen74.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line_title_ex = testData1s;
      print(qcashier.screen74.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line_title_ex = testData2s;
      print(qcashier.screen74.line_title_ex);
      expect(qcashier.screen74.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line_title_ex = defalut;
      print(qcashier.screen74.line_title_ex);
      expect(qcashier.screen74.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02546_element_check_02523 **********\n\n");
    });

    test('02547_element_check_02524', () async {
      print("\n********** テスト実行：02547_element_check_02524 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line1;
      print(qcashier.screen74.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line1 = testData1s;
      print(qcashier.screen74.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line1 = testData2s;
      print(qcashier.screen74.line1);
      expect(qcashier.screen74.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line1 = defalut;
      print(qcashier.screen74.line1);
      expect(qcashier.screen74.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02547_element_check_02524 **********\n\n");
    });

    test('02548_element_check_02525', () async {
      print("\n********** テスト実行：02548_element_check_02525 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line2;
      print(qcashier.screen74.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line2 = testData1s;
      print(qcashier.screen74.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line2 = testData2s;
      print(qcashier.screen74.line2);
      expect(qcashier.screen74.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line2 = defalut;
      print(qcashier.screen74.line2);
      expect(qcashier.screen74.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02548_element_check_02525 **********\n\n");
    });

    test('02549_element_check_02526', () async {
      print("\n********** テスト実行：02549_element_check_02526 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line3;
      print(qcashier.screen74.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line3 = testData1s;
      print(qcashier.screen74.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line3 = testData2s;
      print(qcashier.screen74.line3);
      expect(qcashier.screen74.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line3 = defalut;
      print(qcashier.screen74.line3);
      expect(qcashier.screen74.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02549_element_check_02526 **********\n\n");
    });

    test('02550_element_check_02527', () async {
      print("\n********** テスト実行：02550_element_check_02527 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line4;
      print(qcashier.screen74.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line4 = testData1s;
      print(qcashier.screen74.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line4 = testData2s;
      print(qcashier.screen74.line4);
      expect(qcashier.screen74.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line4 = defalut;
      print(qcashier.screen74.line4);
      expect(qcashier.screen74.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02550_element_check_02527 **********\n\n");
    });

    test('02551_element_check_02528', () async {
      print("\n********** テスト実行：02551_element_check_02528 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line1_ex;
      print(qcashier.screen74.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line1_ex = testData1s;
      print(qcashier.screen74.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line1_ex = testData2s;
      print(qcashier.screen74.line1_ex);
      expect(qcashier.screen74.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line1_ex = defalut;
      print(qcashier.screen74.line1_ex);
      expect(qcashier.screen74.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02551_element_check_02528 **********\n\n");
    });

    test('02552_element_check_02529', () async {
      print("\n********** テスト実行：02552_element_check_02529 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line2_ex;
      print(qcashier.screen74.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line2_ex = testData1s;
      print(qcashier.screen74.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line2_ex = testData2s;
      print(qcashier.screen74.line2_ex);
      expect(qcashier.screen74.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line2_ex = defalut;
      print(qcashier.screen74.line2_ex);
      expect(qcashier.screen74.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02552_element_check_02529 **********\n\n");
    });

    test('02553_element_check_02530', () async {
      print("\n********** テスト実行：02553_element_check_02530 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line3_ex;
      print(qcashier.screen74.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line3_ex = testData1s;
      print(qcashier.screen74.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line3_ex = testData2s;
      print(qcashier.screen74.line3_ex);
      expect(qcashier.screen74.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line3_ex = defalut;
      print(qcashier.screen74.line3_ex);
      expect(qcashier.screen74.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02553_element_check_02530 **********\n\n");
    });

    test('02554_element_check_02531', () async {
      print("\n********** テスト実行：02554_element_check_02531 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.line4_ex;
      print(qcashier.screen74.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.line4_ex = testData1s;
      print(qcashier.screen74.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.line4_ex = testData2s;
      print(qcashier.screen74.line4_ex);
      expect(qcashier.screen74.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.line4_ex = defalut;
      print(qcashier.screen74.line4_ex);
      expect(qcashier.screen74.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02554_element_check_02531 **********\n\n");
    });

    test('02555_element_check_02532', () async {
      print("\n********** テスト実行：02555_element_check_02532 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.sound_led1;
      print(qcashier.screen74.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.sound_led1 = testData1;
      print(qcashier.screen74.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.sound_led1 = testData2;
      print(qcashier.screen74.sound_led1);
      expect(qcashier.screen74.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.sound_led1 = defalut;
      print(qcashier.screen74.sound_led1);
      expect(qcashier.screen74.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02555_element_check_02532 **********\n\n");
    });

    test('02556_element_check_02533', () async {
      print("\n********** テスト実行：02556_element_check_02533 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.sound_led2;
      print(qcashier.screen74.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.sound_led2 = testData1;
      print(qcashier.screen74.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.sound_led2 = testData2;
      print(qcashier.screen74.sound_led2);
      expect(qcashier.screen74.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.sound_led2 = defalut;
      print(qcashier.screen74.sound_led2);
      expect(qcashier.screen74.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02556_element_check_02533 **********\n\n");
    });

    test('02557_element_check_02534', () async {
      print("\n********** テスト実行：02557_element_check_02534 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen74.sound_led3;
      print(qcashier.screen74.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen74.sound_led3 = testData1;
      print(qcashier.screen74.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen74.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen74.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen74.sound_led3 = testData2;
      print(qcashier.screen74.sound_led3);
      expect(qcashier.screen74.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen74.sound_led3 = defalut;
      print(qcashier.screen74.sound_led3);
      expect(qcashier.screen74.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen74.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02557_element_check_02534 **********\n\n");
    });

    test('02558_element_check_02535', () async {
      print("\n********** テスト実行：02558_element_check_02535 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.title;
      print(qcashier.screen75.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.title = testData1s;
      print(qcashier.screen75.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.title = testData2s;
      print(qcashier.screen75.title);
      expect(qcashier.screen75.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.title = defalut;
      print(qcashier.screen75.title);
      expect(qcashier.screen75.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02558_element_check_02535 **********\n\n");
    });

    test('02559_element_check_02536', () async {
      print("\n********** テスト実行：02559_element_check_02536 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.msg1;
      print(qcashier.screen75.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.msg1 = testData1s;
      print(qcashier.screen75.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.msg1 = testData2s;
      print(qcashier.screen75.msg1);
      expect(qcashier.screen75.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.msg1 = defalut;
      print(qcashier.screen75.msg1);
      expect(qcashier.screen75.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02559_element_check_02536 **********\n\n");
    });

    test('02560_element_check_02537', () async {
      print("\n********** テスト実行：02560_element_check_02537 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.msg2;
      print(qcashier.screen75.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.msg2 = testData1s;
      print(qcashier.screen75.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.msg2 = testData2s;
      print(qcashier.screen75.msg2);
      expect(qcashier.screen75.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.msg2 = defalut;
      print(qcashier.screen75.msg2);
      expect(qcashier.screen75.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02560_element_check_02537 **********\n\n");
    });

    test('02561_element_check_02538', () async {
      print("\n********** テスト実行：02561_element_check_02538 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.msg1_size;
      print(qcashier.screen75.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.msg1_size = testData1;
      print(qcashier.screen75.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.msg1_size = testData2;
      print(qcashier.screen75.msg1_size);
      expect(qcashier.screen75.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.msg1_size = defalut;
      print(qcashier.screen75.msg1_size);
      expect(qcashier.screen75.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02561_element_check_02538 **********\n\n");
    });

    test('02562_element_check_02539', () async {
      print("\n********** テスト実行：02562_element_check_02539 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.msg2_size;
      print(qcashier.screen75.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.msg2_size = testData1;
      print(qcashier.screen75.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.msg2_size = testData2;
      print(qcashier.screen75.msg2_size);
      expect(qcashier.screen75.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.msg2_size = defalut;
      print(qcashier.screen75.msg2_size);
      expect(qcashier.screen75.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02562_element_check_02539 **********\n\n");
    });

    test('02563_element_check_02540', () async {
      print("\n********** テスト実行：02563_element_check_02540 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.sound1;
      print(qcashier.screen75.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.sound1 = testData1;
      print(qcashier.screen75.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.sound1 = testData2;
      print(qcashier.screen75.sound1);
      expect(qcashier.screen75.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.sound1 = defalut;
      print(qcashier.screen75.sound1);
      expect(qcashier.screen75.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02563_element_check_02540 **********\n\n");
    });

    test('02564_element_check_02541', () async {
      print("\n********** テスト実行：02564_element_check_02541 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.sound2;
      print(qcashier.screen75.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.sound2 = testData1;
      print(qcashier.screen75.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.sound2 = testData2;
      print(qcashier.screen75.sound2);
      expect(qcashier.screen75.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.sound2 = defalut;
      print(qcashier.screen75.sound2);
      expect(qcashier.screen75.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02564_element_check_02541 **********\n\n");
    });

    test('02565_element_check_02542', () async {
      print("\n********** テスト実行：02565_element_check_02542 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.sound3;
      print(qcashier.screen75.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.sound3 = testData1;
      print(qcashier.screen75.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.sound3 = testData2;
      print(qcashier.screen75.sound3);
      expect(qcashier.screen75.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.sound3 = defalut;
      print(qcashier.screen75.sound3);
      expect(qcashier.screen75.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02565_element_check_02542 **********\n\n");
    });

    test('02566_element_check_02543', () async {
      print("\n********** テスト実行：02566_element_check_02543 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.snd_timer;
      print(qcashier.screen75.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.snd_timer = testData1;
      print(qcashier.screen75.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.snd_timer = testData2;
      print(qcashier.screen75.snd_timer);
      expect(qcashier.screen75.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.snd_timer = defalut;
      print(qcashier.screen75.snd_timer);
      expect(qcashier.screen75.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02566_element_check_02543 **********\n\n");
    });

    test('02567_element_check_02544', () async {
      print("\n********** テスト実行：02567_element_check_02544 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.timer1;
      print(qcashier.screen75.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.timer1 = testData1;
      print(qcashier.screen75.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.timer1 = testData2;
      print(qcashier.screen75.timer1);
      expect(qcashier.screen75.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.timer1 = defalut;
      print(qcashier.screen75.timer1);
      expect(qcashier.screen75.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02567_element_check_02544 **********\n\n");
    });

    test('02568_element_check_02545', () async {
      print("\n********** テスト実行：02568_element_check_02545 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.timer2;
      print(qcashier.screen75.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.timer2 = testData1;
      print(qcashier.screen75.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.timer2 = testData2;
      print(qcashier.screen75.timer2);
      expect(qcashier.screen75.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.timer2 = defalut;
      print(qcashier.screen75.timer2);
      expect(qcashier.screen75.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02568_element_check_02545 **********\n\n");
    });

    test('02569_element_check_02546', () async {
      print("\n********** テスト実行：02569_element_check_02546 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.timer3;
      print(qcashier.screen75.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.timer3 = testData1;
      print(qcashier.screen75.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.timer3 = testData2;
      print(qcashier.screen75.timer3);
      expect(qcashier.screen75.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.timer3 = defalut;
      print(qcashier.screen75.timer3);
      expect(qcashier.screen75.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02569_element_check_02546 **********\n\n");
    });

    test('02570_element_check_02547', () async {
      print("\n********** テスト実行：02570_element_check_02547 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.dsp_flg1;
      print(qcashier.screen75.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.dsp_flg1 = testData1;
      print(qcashier.screen75.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.dsp_flg1 = testData2;
      print(qcashier.screen75.dsp_flg1);
      expect(qcashier.screen75.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.dsp_flg1 = defalut;
      print(qcashier.screen75.dsp_flg1);
      expect(qcashier.screen75.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02570_element_check_02547 **********\n\n");
    });

    test('02571_element_check_02548', () async {
      print("\n********** テスト実行：02571_element_check_02548 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.dsp_flg2;
      print(qcashier.screen75.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.dsp_flg2 = testData1;
      print(qcashier.screen75.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.dsp_flg2 = testData2;
      print(qcashier.screen75.dsp_flg2);
      expect(qcashier.screen75.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.dsp_flg2 = defalut;
      print(qcashier.screen75.dsp_flg2);
      expect(qcashier.screen75.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02571_element_check_02548 **********\n\n");
    });

    test('02572_element_check_02549', () async {
      print("\n********** テスト実行：02572_element_check_02549 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.movie01_ext;
      print(qcashier.screen75.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.movie01_ext = testData1;
      print(qcashier.screen75.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.movie01_ext = testData2;
      print(qcashier.screen75.movie01_ext);
      expect(qcashier.screen75.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.movie01_ext = defalut;
      print(qcashier.screen75.movie01_ext);
      expect(qcashier.screen75.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02572_element_check_02549 **********\n\n");
    });

    test('02573_element_check_02550', () async {
      print("\n********** テスト実行：02573_element_check_02550 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.movie02_ext;
      print(qcashier.screen75.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.movie02_ext = testData1;
      print(qcashier.screen75.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.movie02_ext = testData2;
      print(qcashier.screen75.movie02_ext);
      expect(qcashier.screen75.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.movie02_ext = defalut;
      print(qcashier.screen75.movie02_ext);
      expect(qcashier.screen75.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02573_element_check_02550 **********\n\n");
    });

    test('02574_element_check_02551', () async {
      print("\n********** テスト実行：02574_element_check_02551 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.movie03_ext;
      print(qcashier.screen75.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.movie03_ext = testData1;
      print(qcashier.screen75.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.movie03_ext = testData2;
      print(qcashier.screen75.movie03_ext);
      expect(qcashier.screen75.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.movie03_ext = defalut;
      print(qcashier.screen75.movie03_ext);
      expect(qcashier.screen75.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02574_element_check_02551 **********\n\n");
    });

    test('02575_element_check_02552', () async {
      print("\n********** テスト実行：02575_element_check_02552 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.movie04_ext;
      print(qcashier.screen75.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.movie04_ext = testData1;
      print(qcashier.screen75.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.movie04_ext = testData2;
      print(qcashier.screen75.movie04_ext);
      expect(qcashier.screen75.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.movie04_ext = defalut;
      print(qcashier.screen75.movie04_ext);
      expect(qcashier.screen75.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02575_element_check_02552 **********\n\n");
    });

    test('02576_element_check_02553', () async {
      print("\n********** テスト実行：02576_element_check_02553 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line_title;
      print(qcashier.screen75.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line_title = testData1s;
      print(qcashier.screen75.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line_title = testData2s;
      print(qcashier.screen75.line_title);
      expect(qcashier.screen75.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line_title = defalut;
      print(qcashier.screen75.line_title);
      expect(qcashier.screen75.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02576_element_check_02553 **********\n\n");
    });

    test('02577_element_check_02554', () async {
      print("\n********** テスト実行：02577_element_check_02554 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line_title_ex;
      print(qcashier.screen75.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line_title_ex = testData1s;
      print(qcashier.screen75.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line_title_ex = testData2s;
      print(qcashier.screen75.line_title_ex);
      expect(qcashier.screen75.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line_title_ex = defalut;
      print(qcashier.screen75.line_title_ex);
      expect(qcashier.screen75.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02577_element_check_02554 **********\n\n");
    });

    test('02578_element_check_02555', () async {
      print("\n********** テスト実行：02578_element_check_02555 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line1;
      print(qcashier.screen75.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line1 = testData1s;
      print(qcashier.screen75.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line1 = testData2s;
      print(qcashier.screen75.line1);
      expect(qcashier.screen75.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line1 = defalut;
      print(qcashier.screen75.line1);
      expect(qcashier.screen75.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02578_element_check_02555 **********\n\n");
    });

    test('02579_element_check_02556', () async {
      print("\n********** テスト実行：02579_element_check_02556 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line2;
      print(qcashier.screen75.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line2 = testData1s;
      print(qcashier.screen75.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line2 = testData2s;
      print(qcashier.screen75.line2);
      expect(qcashier.screen75.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line2 = defalut;
      print(qcashier.screen75.line2);
      expect(qcashier.screen75.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02579_element_check_02556 **********\n\n");
    });

    test('02580_element_check_02557', () async {
      print("\n********** テスト実行：02580_element_check_02557 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line3;
      print(qcashier.screen75.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line3 = testData1s;
      print(qcashier.screen75.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line3 = testData2s;
      print(qcashier.screen75.line3);
      expect(qcashier.screen75.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line3 = defalut;
      print(qcashier.screen75.line3);
      expect(qcashier.screen75.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02580_element_check_02557 **********\n\n");
    });

    test('02581_element_check_02558', () async {
      print("\n********** テスト実行：02581_element_check_02558 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line4;
      print(qcashier.screen75.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line4 = testData1s;
      print(qcashier.screen75.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line4 = testData2s;
      print(qcashier.screen75.line4);
      expect(qcashier.screen75.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line4 = defalut;
      print(qcashier.screen75.line4);
      expect(qcashier.screen75.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02581_element_check_02558 **********\n\n");
    });

    test('02582_element_check_02559', () async {
      print("\n********** テスト実行：02582_element_check_02559 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line1_ex;
      print(qcashier.screen75.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line1_ex = testData1s;
      print(qcashier.screen75.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line1_ex = testData2s;
      print(qcashier.screen75.line1_ex);
      expect(qcashier.screen75.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line1_ex = defalut;
      print(qcashier.screen75.line1_ex);
      expect(qcashier.screen75.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02582_element_check_02559 **********\n\n");
    });

    test('02583_element_check_02560', () async {
      print("\n********** テスト実行：02583_element_check_02560 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line2_ex;
      print(qcashier.screen75.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line2_ex = testData1s;
      print(qcashier.screen75.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line2_ex = testData2s;
      print(qcashier.screen75.line2_ex);
      expect(qcashier.screen75.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line2_ex = defalut;
      print(qcashier.screen75.line2_ex);
      expect(qcashier.screen75.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02583_element_check_02560 **********\n\n");
    });

    test('02584_element_check_02561', () async {
      print("\n********** テスト実行：02584_element_check_02561 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line3_ex;
      print(qcashier.screen75.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line3_ex = testData1s;
      print(qcashier.screen75.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line3_ex = testData2s;
      print(qcashier.screen75.line3_ex);
      expect(qcashier.screen75.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line3_ex = defalut;
      print(qcashier.screen75.line3_ex);
      expect(qcashier.screen75.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02584_element_check_02561 **********\n\n");
    });

    test('02585_element_check_02562', () async {
      print("\n********** テスト実行：02585_element_check_02562 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.line4_ex;
      print(qcashier.screen75.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.line4_ex = testData1s;
      print(qcashier.screen75.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.line4_ex = testData2s;
      print(qcashier.screen75.line4_ex);
      expect(qcashier.screen75.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.line4_ex = defalut;
      print(qcashier.screen75.line4_ex);
      expect(qcashier.screen75.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02585_element_check_02562 **********\n\n");
    });

    test('02586_element_check_02563', () async {
      print("\n********** テスト実行：02586_element_check_02563 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.sound_led1;
      print(qcashier.screen75.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.sound_led1 = testData1;
      print(qcashier.screen75.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.sound_led1 = testData2;
      print(qcashier.screen75.sound_led1);
      expect(qcashier.screen75.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.sound_led1 = defalut;
      print(qcashier.screen75.sound_led1);
      expect(qcashier.screen75.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02586_element_check_02563 **********\n\n");
    });

    test('02587_element_check_02564', () async {
      print("\n********** テスト実行：02587_element_check_02564 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.sound_led2;
      print(qcashier.screen75.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.sound_led2 = testData1;
      print(qcashier.screen75.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.sound_led2 = testData2;
      print(qcashier.screen75.sound_led2);
      expect(qcashier.screen75.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.sound_led2 = defalut;
      print(qcashier.screen75.sound_led2);
      expect(qcashier.screen75.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02587_element_check_02564 **********\n\n");
    });

    test('02588_element_check_02565', () async {
      print("\n********** テスト実行：02588_element_check_02565 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen75.sound_led3;
      print(qcashier.screen75.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen75.sound_led3 = testData1;
      print(qcashier.screen75.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen75.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen75.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen75.sound_led3 = testData2;
      print(qcashier.screen75.sound_led3);
      expect(qcashier.screen75.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen75.sound_led3 = defalut;
      print(qcashier.screen75.sound_led3);
      expect(qcashier.screen75.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen75.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02588_element_check_02565 **********\n\n");
    });

    test('02589_element_check_02566', () async {
      print("\n********** テスト実行：02589_element_check_02566 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.title;
      print(qcashier.screen76.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.title = testData1s;
      print(qcashier.screen76.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.title = testData2s;
      print(qcashier.screen76.title);
      expect(qcashier.screen76.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.title = defalut;
      print(qcashier.screen76.title);
      expect(qcashier.screen76.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02589_element_check_02566 **********\n\n");
    });

    test('02590_element_check_02567', () async {
      print("\n********** テスト実行：02590_element_check_02567 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.msg1;
      print(qcashier.screen76.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.msg1 = testData1s;
      print(qcashier.screen76.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.msg1 = testData2s;
      print(qcashier.screen76.msg1);
      expect(qcashier.screen76.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.msg1 = defalut;
      print(qcashier.screen76.msg1);
      expect(qcashier.screen76.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02590_element_check_02567 **********\n\n");
    });

    test('02591_element_check_02568', () async {
      print("\n********** テスト実行：02591_element_check_02568 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.msg2;
      print(qcashier.screen76.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.msg2 = testData1s;
      print(qcashier.screen76.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.msg2 = testData2s;
      print(qcashier.screen76.msg2);
      expect(qcashier.screen76.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.msg2 = defalut;
      print(qcashier.screen76.msg2);
      expect(qcashier.screen76.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02591_element_check_02568 **********\n\n");
    });

    test('02592_element_check_02569', () async {
      print("\n********** テスト実行：02592_element_check_02569 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.msg1_size;
      print(qcashier.screen76.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.msg1_size = testData1;
      print(qcashier.screen76.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.msg1_size = testData2;
      print(qcashier.screen76.msg1_size);
      expect(qcashier.screen76.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.msg1_size = defalut;
      print(qcashier.screen76.msg1_size);
      expect(qcashier.screen76.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02592_element_check_02569 **********\n\n");
    });

    test('02593_element_check_02570', () async {
      print("\n********** テスト実行：02593_element_check_02570 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.msg2_size;
      print(qcashier.screen76.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.msg2_size = testData1;
      print(qcashier.screen76.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.msg2_size = testData2;
      print(qcashier.screen76.msg2_size);
      expect(qcashier.screen76.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.msg2_size = defalut;
      print(qcashier.screen76.msg2_size);
      expect(qcashier.screen76.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02593_element_check_02570 **********\n\n");
    });

    test('02594_element_check_02571', () async {
      print("\n********** テスト実行：02594_element_check_02571 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.sound1;
      print(qcashier.screen76.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.sound1 = testData1;
      print(qcashier.screen76.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.sound1 = testData2;
      print(qcashier.screen76.sound1);
      expect(qcashier.screen76.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.sound1 = defalut;
      print(qcashier.screen76.sound1);
      expect(qcashier.screen76.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02594_element_check_02571 **********\n\n");
    });

    test('02595_element_check_02572', () async {
      print("\n********** テスト実行：02595_element_check_02572 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.sound2;
      print(qcashier.screen76.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.sound2 = testData1;
      print(qcashier.screen76.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.sound2 = testData2;
      print(qcashier.screen76.sound2);
      expect(qcashier.screen76.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.sound2 = defalut;
      print(qcashier.screen76.sound2);
      expect(qcashier.screen76.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02595_element_check_02572 **********\n\n");
    });

    test('02596_element_check_02573', () async {
      print("\n********** テスト実行：02596_element_check_02573 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.sound3;
      print(qcashier.screen76.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.sound3 = testData1;
      print(qcashier.screen76.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.sound3 = testData2;
      print(qcashier.screen76.sound3);
      expect(qcashier.screen76.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.sound3 = defalut;
      print(qcashier.screen76.sound3);
      expect(qcashier.screen76.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02596_element_check_02573 **********\n\n");
    });

    test('02597_element_check_02574', () async {
      print("\n********** テスト実行：02597_element_check_02574 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.snd_timer;
      print(qcashier.screen76.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.snd_timer = testData1;
      print(qcashier.screen76.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.snd_timer = testData2;
      print(qcashier.screen76.snd_timer);
      expect(qcashier.screen76.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.snd_timer = defalut;
      print(qcashier.screen76.snd_timer);
      expect(qcashier.screen76.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02597_element_check_02574 **********\n\n");
    });

    test('02598_element_check_02575', () async {
      print("\n********** テスト実行：02598_element_check_02575 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.timer1;
      print(qcashier.screen76.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.timer1 = testData1;
      print(qcashier.screen76.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.timer1 = testData2;
      print(qcashier.screen76.timer1);
      expect(qcashier.screen76.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.timer1 = defalut;
      print(qcashier.screen76.timer1);
      expect(qcashier.screen76.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02598_element_check_02575 **********\n\n");
    });

    test('02599_element_check_02576', () async {
      print("\n********** テスト実行：02599_element_check_02576 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.timer2;
      print(qcashier.screen76.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.timer2 = testData1;
      print(qcashier.screen76.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.timer2 = testData2;
      print(qcashier.screen76.timer2);
      expect(qcashier.screen76.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.timer2 = defalut;
      print(qcashier.screen76.timer2);
      expect(qcashier.screen76.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02599_element_check_02576 **********\n\n");
    });

    test('02600_element_check_02577', () async {
      print("\n********** テスト実行：02600_element_check_02577 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.timer3;
      print(qcashier.screen76.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.timer3 = testData1;
      print(qcashier.screen76.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.timer3 = testData2;
      print(qcashier.screen76.timer3);
      expect(qcashier.screen76.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.timer3 = defalut;
      print(qcashier.screen76.timer3);
      expect(qcashier.screen76.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02600_element_check_02577 **********\n\n");
    });

    test('02601_element_check_02578', () async {
      print("\n********** テスト実行：02601_element_check_02578 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.dsp_flg1;
      print(qcashier.screen76.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.dsp_flg1 = testData1;
      print(qcashier.screen76.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.dsp_flg1 = testData2;
      print(qcashier.screen76.dsp_flg1);
      expect(qcashier.screen76.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.dsp_flg1 = defalut;
      print(qcashier.screen76.dsp_flg1);
      expect(qcashier.screen76.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02601_element_check_02578 **********\n\n");
    });

    test('02602_element_check_02579', () async {
      print("\n********** テスト実行：02602_element_check_02579 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.dsp_flg2;
      print(qcashier.screen76.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.dsp_flg2 = testData1;
      print(qcashier.screen76.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.dsp_flg2 = testData2;
      print(qcashier.screen76.dsp_flg2);
      expect(qcashier.screen76.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.dsp_flg2 = defalut;
      print(qcashier.screen76.dsp_flg2);
      expect(qcashier.screen76.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02602_element_check_02579 **********\n\n");
    });

    test('02603_element_check_02580', () async {
      print("\n********** テスト実行：02603_element_check_02580 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.movie01_ext;
      print(qcashier.screen76.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.movie01_ext = testData1;
      print(qcashier.screen76.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.movie01_ext = testData2;
      print(qcashier.screen76.movie01_ext);
      expect(qcashier.screen76.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.movie01_ext = defalut;
      print(qcashier.screen76.movie01_ext);
      expect(qcashier.screen76.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02603_element_check_02580 **********\n\n");
    });

    test('02604_element_check_02581', () async {
      print("\n********** テスト実行：02604_element_check_02581 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.movie02_ext;
      print(qcashier.screen76.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.movie02_ext = testData1;
      print(qcashier.screen76.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.movie02_ext = testData2;
      print(qcashier.screen76.movie02_ext);
      expect(qcashier.screen76.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.movie02_ext = defalut;
      print(qcashier.screen76.movie02_ext);
      expect(qcashier.screen76.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02604_element_check_02581 **********\n\n");
    });

    test('02605_element_check_02582', () async {
      print("\n********** テスト実行：02605_element_check_02582 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.movie03_ext;
      print(qcashier.screen76.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.movie03_ext = testData1;
      print(qcashier.screen76.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.movie03_ext = testData2;
      print(qcashier.screen76.movie03_ext);
      expect(qcashier.screen76.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.movie03_ext = defalut;
      print(qcashier.screen76.movie03_ext);
      expect(qcashier.screen76.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02605_element_check_02582 **********\n\n");
    });

    test('02606_element_check_02583', () async {
      print("\n********** テスト実行：02606_element_check_02583 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.movie04_ext;
      print(qcashier.screen76.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.movie04_ext = testData1;
      print(qcashier.screen76.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.movie04_ext = testData2;
      print(qcashier.screen76.movie04_ext);
      expect(qcashier.screen76.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.movie04_ext = defalut;
      print(qcashier.screen76.movie04_ext);
      expect(qcashier.screen76.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02606_element_check_02583 **********\n\n");
    });

    test('02607_element_check_02584', () async {
      print("\n********** テスト実行：02607_element_check_02584 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line_title;
      print(qcashier.screen76.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line_title = testData1s;
      print(qcashier.screen76.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line_title = testData2s;
      print(qcashier.screen76.line_title);
      expect(qcashier.screen76.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line_title = defalut;
      print(qcashier.screen76.line_title);
      expect(qcashier.screen76.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02607_element_check_02584 **********\n\n");
    });

    test('02608_element_check_02585', () async {
      print("\n********** テスト実行：02608_element_check_02585 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line_title_ex;
      print(qcashier.screen76.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line_title_ex = testData1s;
      print(qcashier.screen76.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line_title_ex = testData2s;
      print(qcashier.screen76.line_title_ex);
      expect(qcashier.screen76.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line_title_ex = defalut;
      print(qcashier.screen76.line_title_ex);
      expect(qcashier.screen76.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02608_element_check_02585 **********\n\n");
    });

    test('02609_element_check_02586', () async {
      print("\n********** テスト実行：02609_element_check_02586 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line1;
      print(qcashier.screen76.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line1 = testData1s;
      print(qcashier.screen76.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line1 = testData2s;
      print(qcashier.screen76.line1);
      expect(qcashier.screen76.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line1 = defalut;
      print(qcashier.screen76.line1);
      expect(qcashier.screen76.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02609_element_check_02586 **********\n\n");
    });

    test('02610_element_check_02587', () async {
      print("\n********** テスト実行：02610_element_check_02587 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line2;
      print(qcashier.screen76.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line2 = testData1s;
      print(qcashier.screen76.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line2 = testData2s;
      print(qcashier.screen76.line2);
      expect(qcashier.screen76.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line2 = defalut;
      print(qcashier.screen76.line2);
      expect(qcashier.screen76.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02610_element_check_02587 **********\n\n");
    });

    test('02611_element_check_02588', () async {
      print("\n********** テスト実行：02611_element_check_02588 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line3;
      print(qcashier.screen76.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line3 = testData1s;
      print(qcashier.screen76.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line3 = testData2s;
      print(qcashier.screen76.line3);
      expect(qcashier.screen76.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line3 = defalut;
      print(qcashier.screen76.line3);
      expect(qcashier.screen76.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02611_element_check_02588 **********\n\n");
    });

    test('02612_element_check_02589', () async {
      print("\n********** テスト実行：02612_element_check_02589 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line4;
      print(qcashier.screen76.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line4 = testData1s;
      print(qcashier.screen76.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line4 = testData2s;
      print(qcashier.screen76.line4);
      expect(qcashier.screen76.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line4 = defalut;
      print(qcashier.screen76.line4);
      expect(qcashier.screen76.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02612_element_check_02589 **********\n\n");
    });

    test('02613_element_check_02590', () async {
      print("\n********** テスト実行：02613_element_check_02590 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line1_ex;
      print(qcashier.screen76.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line1_ex = testData1s;
      print(qcashier.screen76.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line1_ex = testData2s;
      print(qcashier.screen76.line1_ex);
      expect(qcashier.screen76.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line1_ex = defalut;
      print(qcashier.screen76.line1_ex);
      expect(qcashier.screen76.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02613_element_check_02590 **********\n\n");
    });

    test('02614_element_check_02591', () async {
      print("\n********** テスト実行：02614_element_check_02591 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line2_ex;
      print(qcashier.screen76.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line2_ex = testData1s;
      print(qcashier.screen76.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line2_ex = testData2s;
      print(qcashier.screen76.line2_ex);
      expect(qcashier.screen76.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line2_ex = defalut;
      print(qcashier.screen76.line2_ex);
      expect(qcashier.screen76.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02614_element_check_02591 **********\n\n");
    });

    test('02615_element_check_02592', () async {
      print("\n********** テスト実行：02615_element_check_02592 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line3_ex;
      print(qcashier.screen76.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line3_ex = testData1s;
      print(qcashier.screen76.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line3_ex = testData2s;
      print(qcashier.screen76.line3_ex);
      expect(qcashier.screen76.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line3_ex = defalut;
      print(qcashier.screen76.line3_ex);
      expect(qcashier.screen76.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02615_element_check_02592 **********\n\n");
    });

    test('02616_element_check_02593', () async {
      print("\n********** テスト実行：02616_element_check_02593 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.line4_ex;
      print(qcashier.screen76.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.line4_ex = testData1s;
      print(qcashier.screen76.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.line4_ex = testData2s;
      print(qcashier.screen76.line4_ex);
      expect(qcashier.screen76.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.line4_ex = defalut;
      print(qcashier.screen76.line4_ex);
      expect(qcashier.screen76.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02616_element_check_02593 **********\n\n");
    });

    test('02617_element_check_02594', () async {
      print("\n********** テスト実行：02617_element_check_02594 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.sound_led1;
      print(qcashier.screen76.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.sound_led1 = testData1;
      print(qcashier.screen76.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.sound_led1 = testData2;
      print(qcashier.screen76.sound_led1);
      expect(qcashier.screen76.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.sound_led1 = defalut;
      print(qcashier.screen76.sound_led1);
      expect(qcashier.screen76.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02617_element_check_02594 **********\n\n");
    });

    test('02618_element_check_02595', () async {
      print("\n********** テスト実行：02618_element_check_02595 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.sound_led2;
      print(qcashier.screen76.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.sound_led2 = testData1;
      print(qcashier.screen76.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.sound_led2 = testData2;
      print(qcashier.screen76.sound_led2);
      expect(qcashier.screen76.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.sound_led2 = defalut;
      print(qcashier.screen76.sound_led2);
      expect(qcashier.screen76.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02618_element_check_02595 **********\n\n");
    });

    test('02619_element_check_02596', () async {
      print("\n********** テスト実行：02619_element_check_02596 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen76.sound_led3;
      print(qcashier.screen76.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen76.sound_led3 = testData1;
      print(qcashier.screen76.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen76.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen76.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen76.sound_led3 = testData2;
      print(qcashier.screen76.sound_led3);
      expect(qcashier.screen76.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen76.sound_led3 = defalut;
      print(qcashier.screen76.sound_led3);
      expect(qcashier.screen76.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen76.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02619_element_check_02596 **********\n\n");
    });

    test('02620_element_check_02597', () async {
      print("\n********** テスト実行：02620_element_check_02597 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.title;
      print(qcashier.screen77.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.title = testData1s;
      print(qcashier.screen77.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.title = testData2s;
      print(qcashier.screen77.title);
      expect(qcashier.screen77.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.title = defalut;
      print(qcashier.screen77.title);
      expect(qcashier.screen77.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02620_element_check_02597 **********\n\n");
    });

    test('02621_element_check_02598', () async {
      print("\n********** テスト実行：02621_element_check_02598 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.msg1;
      print(qcashier.screen77.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.msg1 = testData1s;
      print(qcashier.screen77.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.msg1 = testData2s;
      print(qcashier.screen77.msg1);
      expect(qcashier.screen77.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.msg1 = defalut;
      print(qcashier.screen77.msg1);
      expect(qcashier.screen77.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02621_element_check_02598 **********\n\n");
    });

    test('02622_element_check_02599', () async {
      print("\n********** テスト実行：02622_element_check_02599 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.msg2;
      print(qcashier.screen77.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.msg2 = testData1s;
      print(qcashier.screen77.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.msg2 = testData2s;
      print(qcashier.screen77.msg2);
      expect(qcashier.screen77.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.msg2 = defalut;
      print(qcashier.screen77.msg2);
      expect(qcashier.screen77.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02622_element_check_02599 **********\n\n");
    });

    test('02623_element_check_02600', () async {
      print("\n********** テスト実行：02623_element_check_02600 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.msg1_size;
      print(qcashier.screen77.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.msg1_size = testData1;
      print(qcashier.screen77.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.msg1_size = testData2;
      print(qcashier.screen77.msg1_size);
      expect(qcashier.screen77.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.msg1_size = defalut;
      print(qcashier.screen77.msg1_size);
      expect(qcashier.screen77.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02623_element_check_02600 **********\n\n");
    });

    test('02624_element_check_02601', () async {
      print("\n********** テスト実行：02624_element_check_02601 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.msg2_size;
      print(qcashier.screen77.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.msg2_size = testData1;
      print(qcashier.screen77.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.msg2_size = testData2;
      print(qcashier.screen77.msg2_size);
      expect(qcashier.screen77.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.msg2_size = defalut;
      print(qcashier.screen77.msg2_size);
      expect(qcashier.screen77.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02624_element_check_02601 **********\n\n");
    });

    test('02625_element_check_02602', () async {
      print("\n********** テスト実行：02625_element_check_02602 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.sound1;
      print(qcashier.screen77.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.sound1 = testData1;
      print(qcashier.screen77.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.sound1 = testData2;
      print(qcashier.screen77.sound1);
      expect(qcashier.screen77.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.sound1 = defalut;
      print(qcashier.screen77.sound1);
      expect(qcashier.screen77.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02625_element_check_02602 **********\n\n");
    });

    test('02626_element_check_02603', () async {
      print("\n********** テスト実行：02626_element_check_02603 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.sound2;
      print(qcashier.screen77.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.sound2 = testData1;
      print(qcashier.screen77.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.sound2 = testData2;
      print(qcashier.screen77.sound2);
      expect(qcashier.screen77.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.sound2 = defalut;
      print(qcashier.screen77.sound2);
      expect(qcashier.screen77.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02626_element_check_02603 **********\n\n");
    });

    test('02627_element_check_02604', () async {
      print("\n********** テスト実行：02627_element_check_02604 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.sound3;
      print(qcashier.screen77.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.sound3 = testData1;
      print(qcashier.screen77.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.sound3 = testData2;
      print(qcashier.screen77.sound3);
      expect(qcashier.screen77.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.sound3 = defalut;
      print(qcashier.screen77.sound3);
      expect(qcashier.screen77.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02627_element_check_02604 **********\n\n");
    });

    test('02628_element_check_02605', () async {
      print("\n********** テスト実行：02628_element_check_02605 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.snd_timer;
      print(qcashier.screen77.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.snd_timer = testData1;
      print(qcashier.screen77.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.snd_timer = testData2;
      print(qcashier.screen77.snd_timer);
      expect(qcashier.screen77.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.snd_timer = defalut;
      print(qcashier.screen77.snd_timer);
      expect(qcashier.screen77.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02628_element_check_02605 **********\n\n");
    });

    test('02629_element_check_02606', () async {
      print("\n********** テスト実行：02629_element_check_02606 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.timer1;
      print(qcashier.screen77.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.timer1 = testData1;
      print(qcashier.screen77.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.timer1 = testData2;
      print(qcashier.screen77.timer1);
      expect(qcashier.screen77.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.timer1 = defalut;
      print(qcashier.screen77.timer1);
      expect(qcashier.screen77.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02629_element_check_02606 **********\n\n");
    });

    test('02630_element_check_02607', () async {
      print("\n********** テスト実行：02630_element_check_02607 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.timer2;
      print(qcashier.screen77.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.timer2 = testData1;
      print(qcashier.screen77.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.timer2 = testData2;
      print(qcashier.screen77.timer2);
      expect(qcashier.screen77.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.timer2 = defalut;
      print(qcashier.screen77.timer2);
      expect(qcashier.screen77.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02630_element_check_02607 **********\n\n");
    });

    test('02631_element_check_02608', () async {
      print("\n********** テスト実行：02631_element_check_02608 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.timer3;
      print(qcashier.screen77.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.timer3 = testData1;
      print(qcashier.screen77.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.timer3 = testData2;
      print(qcashier.screen77.timer3);
      expect(qcashier.screen77.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.timer3 = defalut;
      print(qcashier.screen77.timer3);
      expect(qcashier.screen77.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02631_element_check_02608 **********\n\n");
    });

    test('02632_element_check_02609', () async {
      print("\n********** テスト実行：02632_element_check_02609 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.dsp_flg1;
      print(qcashier.screen77.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.dsp_flg1 = testData1;
      print(qcashier.screen77.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.dsp_flg1 = testData2;
      print(qcashier.screen77.dsp_flg1);
      expect(qcashier.screen77.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.dsp_flg1 = defalut;
      print(qcashier.screen77.dsp_flg1);
      expect(qcashier.screen77.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02632_element_check_02609 **********\n\n");
    });

    test('02633_element_check_02610', () async {
      print("\n********** テスト実行：02633_element_check_02610 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.dsp_flg2;
      print(qcashier.screen77.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.dsp_flg2 = testData1;
      print(qcashier.screen77.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.dsp_flg2 = testData2;
      print(qcashier.screen77.dsp_flg2);
      expect(qcashier.screen77.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.dsp_flg2 = defalut;
      print(qcashier.screen77.dsp_flg2);
      expect(qcashier.screen77.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02633_element_check_02610 **********\n\n");
    });

    test('02634_element_check_02611', () async {
      print("\n********** テスト実行：02634_element_check_02611 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.movie01_ext;
      print(qcashier.screen77.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.movie01_ext = testData1;
      print(qcashier.screen77.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.movie01_ext = testData2;
      print(qcashier.screen77.movie01_ext);
      expect(qcashier.screen77.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.movie01_ext = defalut;
      print(qcashier.screen77.movie01_ext);
      expect(qcashier.screen77.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02634_element_check_02611 **********\n\n");
    });

    test('02635_element_check_02612', () async {
      print("\n********** テスト実行：02635_element_check_02612 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.movie02_ext;
      print(qcashier.screen77.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.movie02_ext = testData1;
      print(qcashier.screen77.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.movie02_ext = testData2;
      print(qcashier.screen77.movie02_ext);
      expect(qcashier.screen77.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.movie02_ext = defalut;
      print(qcashier.screen77.movie02_ext);
      expect(qcashier.screen77.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02635_element_check_02612 **********\n\n");
    });

    test('02636_element_check_02613', () async {
      print("\n********** テスト実行：02636_element_check_02613 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.movie03_ext;
      print(qcashier.screen77.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.movie03_ext = testData1;
      print(qcashier.screen77.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.movie03_ext = testData2;
      print(qcashier.screen77.movie03_ext);
      expect(qcashier.screen77.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.movie03_ext = defalut;
      print(qcashier.screen77.movie03_ext);
      expect(qcashier.screen77.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02636_element_check_02613 **********\n\n");
    });

    test('02637_element_check_02614', () async {
      print("\n********** テスト実行：02637_element_check_02614 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.movie04_ext;
      print(qcashier.screen77.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.movie04_ext = testData1;
      print(qcashier.screen77.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.movie04_ext = testData2;
      print(qcashier.screen77.movie04_ext);
      expect(qcashier.screen77.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.movie04_ext = defalut;
      print(qcashier.screen77.movie04_ext);
      expect(qcashier.screen77.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02637_element_check_02614 **********\n\n");
    });

    test('02638_element_check_02615', () async {
      print("\n********** テスト実行：02638_element_check_02615 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line_title;
      print(qcashier.screen77.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line_title = testData1s;
      print(qcashier.screen77.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line_title = testData2s;
      print(qcashier.screen77.line_title);
      expect(qcashier.screen77.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line_title = defalut;
      print(qcashier.screen77.line_title);
      expect(qcashier.screen77.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02638_element_check_02615 **********\n\n");
    });

    test('02639_element_check_02616', () async {
      print("\n********** テスト実行：02639_element_check_02616 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line_title_ex;
      print(qcashier.screen77.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line_title_ex = testData1s;
      print(qcashier.screen77.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line_title_ex = testData2s;
      print(qcashier.screen77.line_title_ex);
      expect(qcashier.screen77.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line_title_ex = defalut;
      print(qcashier.screen77.line_title_ex);
      expect(qcashier.screen77.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02639_element_check_02616 **********\n\n");
    });

    test('02640_element_check_02617', () async {
      print("\n********** テスト実行：02640_element_check_02617 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line1;
      print(qcashier.screen77.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line1 = testData1s;
      print(qcashier.screen77.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line1 = testData2s;
      print(qcashier.screen77.line1);
      expect(qcashier.screen77.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line1 = defalut;
      print(qcashier.screen77.line1);
      expect(qcashier.screen77.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02640_element_check_02617 **********\n\n");
    });

    test('02641_element_check_02618', () async {
      print("\n********** テスト実行：02641_element_check_02618 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line2;
      print(qcashier.screen77.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line2 = testData1s;
      print(qcashier.screen77.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line2 = testData2s;
      print(qcashier.screen77.line2);
      expect(qcashier.screen77.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line2 = defalut;
      print(qcashier.screen77.line2);
      expect(qcashier.screen77.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02641_element_check_02618 **********\n\n");
    });

    test('02642_element_check_02619', () async {
      print("\n********** テスト実行：02642_element_check_02619 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line3;
      print(qcashier.screen77.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line3 = testData1s;
      print(qcashier.screen77.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line3 = testData2s;
      print(qcashier.screen77.line3);
      expect(qcashier.screen77.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line3 = defalut;
      print(qcashier.screen77.line3);
      expect(qcashier.screen77.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02642_element_check_02619 **********\n\n");
    });

    test('02643_element_check_02620', () async {
      print("\n********** テスト実行：02643_element_check_02620 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line4;
      print(qcashier.screen77.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line4 = testData1s;
      print(qcashier.screen77.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line4 = testData2s;
      print(qcashier.screen77.line4);
      expect(qcashier.screen77.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line4 = defalut;
      print(qcashier.screen77.line4);
      expect(qcashier.screen77.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02643_element_check_02620 **********\n\n");
    });

    test('02644_element_check_02621', () async {
      print("\n********** テスト実行：02644_element_check_02621 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line1_ex;
      print(qcashier.screen77.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line1_ex = testData1s;
      print(qcashier.screen77.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line1_ex = testData2s;
      print(qcashier.screen77.line1_ex);
      expect(qcashier.screen77.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line1_ex = defalut;
      print(qcashier.screen77.line1_ex);
      expect(qcashier.screen77.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02644_element_check_02621 **********\n\n");
    });

    test('02645_element_check_02622', () async {
      print("\n********** テスト実行：02645_element_check_02622 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line2_ex;
      print(qcashier.screen77.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line2_ex = testData1s;
      print(qcashier.screen77.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line2_ex = testData2s;
      print(qcashier.screen77.line2_ex);
      expect(qcashier.screen77.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line2_ex = defalut;
      print(qcashier.screen77.line2_ex);
      expect(qcashier.screen77.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02645_element_check_02622 **********\n\n");
    });

    test('02646_element_check_02623', () async {
      print("\n********** テスト実行：02646_element_check_02623 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line3_ex;
      print(qcashier.screen77.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line3_ex = testData1s;
      print(qcashier.screen77.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line3_ex = testData2s;
      print(qcashier.screen77.line3_ex);
      expect(qcashier.screen77.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line3_ex = defalut;
      print(qcashier.screen77.line3_ex);
      expect(qcashier.screen77.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02646_element_check_02623 **********\n\n");
    });

    test('02647_element_check_02624', () async {
      print("\n********** テスト実行：02647_element_check_02624 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.line4_ex;
      print(qcashier.screen77.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.line4_ex = testData1s;
      print(qcashier.screen77.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.line4_ex = testData2s;
      print(qcashier.screen77.line4_ex);
      expect(qcashier.screen77.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.line4_ex = defalut;
      print(qcashier.screen77.line4_ex);
      expect(qcashier.screen77.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02647_element_check_02624 **********\n\n");
    });

    test('02648_element_check_02625', () async {
      print("\n********** テスト実行：02648_element_check_02625 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.sound_led1;
      print(qcashier.screen77.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.sound_led1 = testData1;
      print(qcashier.screen77.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.sound_led1 = testData2;
      print(qcashier.screen77.sound_led1);
      expect(qcashier.screen77.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.sound_led1 = defalut;
      print(qcashier.screen77.sound_led1);
      expect(qcashier.screen77.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02648_element_check_02625 **********\n\n");
    });

    test('02649_element_check_02626', () async {
      print("\n********** テスト実行：02649_element_check_02626 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.sound_led2;
      print(qcashier.screen77.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.sound_led2 = testData1;
      print(qcashier.screen77.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.sound_led2 = testData2;
      print(qcashier.screen77.sound_led2);
      expect(qcashier.screen77.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.sound_led2 = defalut;
      print(qcashier.screen77.sound_led2);
      expect(qcashier.screen77.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02649_element_check_02626 **********\n\n");
    });

    test('02650_element_check_02627', () async {
      print("\n********** テスト実行：02650_element_check_02627 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen77.sound_led3;
      print(qcashier.screen77.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen77.sound_led3 = testData1;
      print(qcashier.screen77.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen77.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen77.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen77.sound_led3 = testData2;
      print(qcashier.screen77.sound_led3);
      expect(qcashier.screen77.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen77.sound_led3 = defalut;
      print(qcashier.screen77.sound_led3);
      expect(qcashier.screen77.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen77.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02650_element_check_02627 **********\n\n");
    });

    test('02651_element_check_02628', () async {
      print("\n********** テスト実行：02651_element_check_02628 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.title;
      print(qcashier.screen78.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.title = testData1s;
      print(qcashier.screen78.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.title = testData2s;
      print(qcashier.screen78.title);
      expect(qcashier.screen78.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.title = defalut;
      print(qcashier.screen78.title);
      expect(qcashier.screen78.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02651_element_check_02628 **********\n\n");
    });

    test('02652_element_check_02629', () async {
      print("\n********** テスト実行：02652_element_check_02629 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.msg1;
      print(qcashier.screen78.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.msg1 = testData1s;
      print(qcashier.screen78.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.msg1 = testData2s;
      print(qcashier.screen78.msg1);
      expect(qcashier.screen78.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.msg1 = defalut;
      print(qcashier.screen78.msg1);
      expect(qcashier.screen78.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02652_element_check_02629 **********\n\n");
    });

    test('02653_element_check_02630', () async {
      print("\n********** テスト実行：02653_element_check_02630 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.msg2;
      print(qcashier.screen78.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.msg2 = testData1s;
      print(qcashier.screen78.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.msg2 = testData2s;
      print(qcashier.screen78.msg2);
      expect(qcashier.screen78.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.msg2 = defalut;
      print(qcashier.screen78.msg2);
      expect(qcashier.screen78.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02653_element_check_02630 **********\n\n");
    });

    test('02654_element_check_02631', () async {
      print("\n********** テスト実行：02654_element_check_02631 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.msg1_size;
      print(qcashier.screen78.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.msg1_size = testData1;
      print(qcashier.screen78.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.msg1_size = testData2;
      print(qcashier.screen78.msg1_size);
      expect(qcashier.screen78.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.msg1_size = defalut;
      print(qcashier.screen78.msg1_size);
      expect(qcashier.screen78.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02654_element_check_02631 **********\n\n");
    });

    test('02655_element_check_02632', () async {
      print("\n********** テスト実行：02655_element_check_02632 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.msg2_size;
      print(qcashier.screen78.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.msg2_size = testData1;
      print(qcashier.screen78.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.msg2_size = testData2;
      print(qcashier.screen78.msg2_size);
      expect(qcashier.screen78.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.msg2_size = defalut;
      print(qcashier.screen78.msg2_size);
      expect(qcashier.screen78.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02655_element_check_02632 **********\n\n");
    });

    test('02656_element_check_02633', () async {
      print("\n********** テスト実行：02656_element_check_02633 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.sound1;
      print(qcashier.screen78.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.sound1 = testData1;
      print(qcashier.screen78.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.sound1 = testData2;
      print(qcashier.screen78.sound1);
      expect(qcashier.screen78.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.sound1 = defalut;
      print(qcashier.screen78.sound1);
      expect(qcashier.screen78.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02656_element_check_02633 **********\n\n");
    });

    test('02657_element_check_02634', () async {
      print("\n********** テスト実行：02657_element_check_02634 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.sound2;
      print(qcashier.screen78.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.sound2 = testData1;
      print(qcashier.screen78.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.sound2 = testData2;
      print(qcashier.screen78.sound2);
      expect(qcashier.screen78.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.sound2 = defalut;
      print(qcashier.screen78.sound2);
      expect(qcashier.screen78.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02657_element_check_02634 **********\n\n");
    });

    test('02658_element_check_02635', () async {
      print("\n********** テスト実行：02658_element_check_02635 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.sound3;
      print(qcashier.screen78.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.sound3 = testData1;
      print(qcashier.screen78.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.sound3 = testData2;
      print(qcashier.screen78.sound3);
      expect(qcashier.screen78.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.sound3 = defalut;
      print(qcashier.screen78.sound3);
      expect(qcashier.screen78.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02658_element_check_02635 **********\n\n");
    });

    test('02659_element_check_02636', () async {
      print("\n********** テスト実行：02659_element_check_02636 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.snd_timer;
      print(qcashier.screen78.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.snd_timer = testData1;
      print(qcashier.screen78.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.snd_timer = testData2;
      print(qcashier.screen78.snd_timer);
      expect(qcashier.screen78.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.snd_timer = defalut;
      print(qcashier.screen78.snd_timer);
      expect(qcashier.screen78.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02659_element_check_02636 **********\n\n");
    });

    test('02660_element_check_02637', () async {
      print("\n********** テスト実行：02660_element_check_02637 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.timer1;
      print(qcashier.screen78.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.timer1 = testData1;
      print(qcashier.screen78.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.timer1 = testData2;
      print(qcashier.screen78.timer1);
      expect(qcashier.screen78.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.timer1 = defalut;
      print(qcashier.screen78.timer1);
      expect(qcashier.screen78.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02660_element_check_02637 **********\n\n");
    });

    test('02661_element_check_02638', () async {
      print("\n********** テスト実行：02661_element_check_02638 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.timer2;
      print(qcashier.screen78.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.timer2 = testData1;
      print(qcashier.screen78.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.timer2 = testData2;
      print(qcashier.screen78.timer2);
      expect(qcashier.screen78.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.timer2 = defalut;
      print(qcashier.screen78.timer2);
      expect(qcashier.screen78.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02661_element_check_02638 **********\n\n");
    });

    test('02662_element_check_02639', () async {
      print("\n********** テスト実行：02662_element_check_02639 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.timer3;
      print(qcashier.screen78.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.timer3 = testData1;
      print(qcashier.screen78.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.timer3 = testData2;
      print(qcashier.screen78.timer3);
      expect(qcashier.screen78.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.timer3 = defalut;
      print(qcashier.screen78.timer3);
      expect(qcashier.screen78.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02662_element_check_02639 **********\n\n");
    });

    test('02663_element_check_02640', () async {
      print("\n********** テスト実行：02663_element_check_02640 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.dsp_flg1;
      print(qcashier.screen78.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.dsp_flg1 = testData1;
      print(qcashier.screen78.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.dsp_flg1 = testData2;
      print(qcashier.screen78.dsp_flg1);
      expect(qcashier.screen78.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.dsp_flg1 = defalut;
      print(qcashier.screen78.dsp_flg1);
      expect(qcashier.screen78.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02663_element_check_02640 **********\n\n");
    });

    test('02664_element_check_02641', () async {
      print("\n********** テスト実行：02664_element_check_02641 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.dsp_flg2;
      print(qcashier.screen78.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.dsp_flg2 = testData1;
      print(qcashier.screen78.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.dsp_flg2 = testData2;
      print(qcashier.screen78.dsp_flg2);
      expect(qcashier.screen78.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.dsp_flg2 = defalut;
      print(qcashier.screen78.dsp_flg2);
      expect(qcashier.screen78.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02664_element_check_02641 **********\n\n");
    });

    test('02665_element_check_02642', () async {
      print("\n********** テスト実行：02665_element_check_02642 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.movie01_ext;
      print(qcashier.screen78.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.movie01_ext = testData1;
      print(qcashier.screen78.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.movie01_ext = testData2;
      print(qcashier.screen78.movie01_ext);
      expect(qcashier.screen78.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.movie01_ext = defalut;
      print(qcashier.screen78.movie01_ext);
      expect(qcashier.screen78.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02665_element_check_02642 **********\n\n");
    });

    test('02666_element_check_02643', () async {
      print("\n********** テスト実行：02666_element_check_02643 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.movie02_ext;
      print(qcashier.screen78.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.movie02_ext = testData1;
      print(qcashier.screen78.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.movie02_ext = testData2;
      print(qcashier.screen78.movie02_ext);
      expect(qcashier.screen78.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.movie02_ext = defalut;
      print(qcashier.screen78.movie02_ext);
      expect(qcashier.screen78.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02666_element_check_02643 **********\n\n");
    });

    test('02667_element_check_02644', () async {
      print("\n********** テスト実行：02667_element_check_02644 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.movie03_ext;
      print(qcashier.screen78.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.movie03_ext = testData1;
      print(qcashier.screen78.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.movie03_ext = testData2;
      print(qcashier.screen78.movie03_ext);
      expect(qcashier.screen78.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.movie03_ext = defalut;
      print(qcashier.screen78.movie03_ext);
      expect(qcashier.screen78.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02667_element_check_02644 **********\n\n");
    });

    test('02668_element_check_02645', () async {
      print("\n********** テスト実行：02668_element_check_02645 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.movie04_ext;
      print(qcashier.screen78.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.movie04_ext = testData1;
      print(qcashier.screen78.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.movie04_ext = testData2;
      print(qcashier.screen78.movie04_ext);
      expect(qcashier.screen78.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.movie04_ext = defalut;
      print(qcashier.screen78.movie04_ext);
      expect(qcashier.screen78.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02668_element_check_02645 **********\n\n");
    });

    test('02669_element_check_02646', () async {
      print("\n********** テスト実行：02669_element_check_02646 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line_title;
      print(qcashier.screen78.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line_title = testData1s;
      print(qcashier.screen78.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line_title = testData2s;
      print(qcashier.screen78.line_title);
      expect(qcashier.screen78.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line_title = defalut;
      print(qcashier.screen78.line_title);
      expect(qcashier.screen78.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02669_element_check_02646 **********\n\n");
    });

    test('02670_element_check_02647', () async {
      print("\n********** テスト実行：02670_element_check_02647 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line_title_ex;
      print(qcashier.screen78.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line_title_ex = testData1s;
      print(qcashier.screen78.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line_title_ex = testData2s;
      print(qcashier.screen78.line_title_ex);
      expect(qcashier.screen78.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line_title_ex = defalut;
      print(qcashier.screen78.line_title_ex);
      expect(qcashier.screen78.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02670_element_check_02647 **********\n\n");
    });

    test('02671_element_check_02648', () async {
      print("\n********** テスト実行：02671_element_check_02648 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line1;
      print(qcashier.screen78.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line1 = testData1s;
      print(qcashier.screen78.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line1 = testData2s;
      print(qcashier.screen78.line1);
      expect(qcashier.screen78.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line1 = defalut;
      print(qcashier.screen78.line1);
      expect(qcashier.screen78.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02671_element_check_02648 **********\n\n");
    });

    test('02672_element_check_02649', () async {
      print("\n********** テスト実行：02672_element_check_02649 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line2;
      print(qcashier.screen78.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line2 = testData1s;
      print(qcashier.screen78.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line2 = testData2s;
      print(qcashier.screen78.line2);
      expect(qcashier.screen78.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line2 = defalut;
      print(qcashier.screen78.line2);
      expect(qcashier.screen78.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02672_element_check_02649 **********\n\n");
    });

    test('02673_element_check_02650', () async {
      print("\n********** テスト実行：02673_element_check_02650 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line3;
      print(qcashier.screen78.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line3 = testData1s;
      print(qcashier.screen78.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line3 = testData2s;
      print(qcashier.screen78.line3);
      expect(qcashier.screen78.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line3 = defalut;
      print(qcashier.screen78.line3);
      expect(qcashier.screen78.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02673_element_check_02650 **********\n\n");
    });

    test('02674_element_check_02651', () async {
      print("\n********** テスト実行：02674_element_check_02651 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line4;
      print(qcashier.screen78.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line4 = testData1s;
      print(qcashier.screen78.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line4 = testData2s;
      print(qcashier.screen78.line4);
      expect(qcashier.screen78.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line4 = defalut;
      print(qcashier.screen78.line4);
      expect(qcashier.screen78.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02674_element_check_02651 **********\n\n");
    });

    test('02675_element_check_02652', () async {
      print("\n********** テスト実行：02675_element_check_02652 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line1_ex;
      print(qcashier.screen78.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line1_ex = testData1s;
      print(qcashier.screen78.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line1_ex = testData2s;
      print(qcashier.screen78.line1_ex);
      expect(qcashier.screen78.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line1_ex = defalut;
      print(qcashier.screen78.line1_ex);
      expect(qcashier.screen78.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02675_element_check_02652 **********\n\n");
    });

    test('02676_element_check_02653', () async {
      print("\n********** テスト実行：02676_element_check_02653 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line2_ex;
      print(qcashier.screen78.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line2_ex = testData1s;
      print(qcashier.screen78.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line2_ex = testData2s;
      print(qcashier.screen78.line2_ex);
      expect(qcashier.screen78.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line2_ex = defalut;
      print(qcashier.screen78.line2_ex);
      expect(qcashier.screen78.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02676_element_check_02653 **********\n\n");
    });

    test('02677_element_check_02654', () async {
      print("\n********** テスト実行：02677_element_check_02654 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line3_ex;
      print(qcashier.screen78.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line3_ex = testData1s;
      print(qcashier.screen78.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line3_ex = testData2s;
      print(qcashier.screen78.line3_ex);
      expect(qcashier.screen78.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line3_ex = defalut;
      print(qcashier.screen78.line3_ex);
      expect(qcashier.screen78.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02677_element_check_02654 **********\n\n");
    });

    test('02678_element_check_02655', () async {
      print("\n********** テスト実行：02678_element_check_02655 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.line4_ex;
      print(qcashier.screen78.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.line4_ex = testData1s;
      print(qcashier.screen78.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.line4_ex = testData2s;
      print(qcashier.screen78.line4_ex);
      expect(qcashier.screen78.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.line4_ex = defalut;
      print(qcashier.screen78.line4_ex);
      expect(qcashier.screen78.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02678_element_check_02655 **********\n\n");
    });

    test('02679_element_check_02656', () async {
      print("\n********** テスト実行：02679_element_check_02656 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.sound_led1;
      print(qcashier.screen78.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.sound_led1 = testData1;
      print(qcashier.screen78.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.sound_led1 = testData2;
      print(qcashier.screen78.sound_led1);
      expect(qcashier.screen78.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.sound_led1 = defalut;
      print(qcashier.screen78.sound_led1);
      expect(qcashier.screen78.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02679_element_check_02656 **********\n\n");
    });

    test('02680_element_check_02657', () async {
      print("\n********** テスト実行：02680_element_check_02657 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.sound_led2;
      print(qcashier.screen78.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.sound_led2 = testData1;
      print(qcashier.screen78.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.sound_led2 = testData2;
      print(qcashier.screen78.sound_led2);
      expect(qcashier.screen78.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.sound_led2 = defalut;
      print(qcashier.screen78.sound_led2);
      expect(qcashier.screen78.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02680_element_check_02657 **********\n\n");
    });

    test('02681_element_check_02658', () async {
      print("\n********** テスト実行：02681_element_check_02658 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen78.sound_led3;
      print(qcashier.screen78.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen78.sound_led3 = testData1;
      print(qcashier.screen78.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen78.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen78.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen78.sound_led3 = testData2;
      print(qcashier.screen78.sound_led3);
      expect(qcashier.screen78.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen78.sound_led3 = defalut;
      print(qcashier.screen78.sound_led3);
      expect(qcashier.screen78.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen78.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02681_element_check_02658 **********\n\n");
    });

    test('02682_element_check_02659', () async {
      print("\n********** テスト実行：02682_element_check_02659 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.title;
      print(qcashier.screen79.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.title = testData1s;
      print(qcashier.screen79.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.title = testData2s;
      print(qcashier.screen79.title);
      expect(qcashier.screen79.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.title = defalut;
      print(qcashier.screen79.title);
      expect(qcashier.screen79.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02682_element_check_02659 **********\n\n");
    });

    test('02683_element_check_02660', () async {
      print("\n********** テスト実行：02683_element_check_02660 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.msg1;
      print(qcashier.screen79.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.msg1 = testData1s;
      print(qcashier.screen79.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.msg1 = testData2s;
      print(qcashier.screen79.msg1);
      expect(qcashier.screen79.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.msg1 = defalut;
      print(qcashier.screen79.msg1);
      expect(qcashier.screen79.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02683_element_check_02660 **********\n\n");
    });

    test('02684_element_check_02661', () async {
      print("\n********** テスト実行：02684_element_check_02661 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.msg2;
      print(qcashier.screen79.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.msg2 = testData1s;
      print(qcashier.screen79.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.msg2 = testData2s;
      print(qcashier.screen79.msg2);
      expect(qcashier.screen79.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.msg2 = defalut;
      print(qcashier.screen79.msg2);
      expect(qcashier.screen79.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02684_element_check_02661 **********\n\n");
    });

    test('02685_element_check_02662', () async {
      print("\n********** テスト実行：02685_element_check_02662 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.msg1_size;
      print(qcashier.screen79.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.msg1_size = testData1;
      print(qcashier.screen79.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.msg1_size = testData2;
      print(qcashier.screen79.msg1_size);
      expect(qcashier.screen79.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.msg1_size = defalut;
      print(qcashier.screen79.msg1_size);
      expect(qcashier.screen79.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02685_element_check_02662 **********\n\n");
    });

    test('02686_element_check_02663', () async {
      print("\n********** テスト実行：02686_element_check_02663 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.msg2_size;
      print(qcashier.screen79.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.msg2_size = testData1;
      print(qcashier.screen79.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.msg2_size = testData2;
      print(qcashier.screen79.msg2_size);
      expect(qcashier.screen79.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.msg2_size = defalut;
      print(qcashier.screen79.msg2_size);
      expect(qcashier.screen79.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02686_element_check_02663 **********\n\n");
    });

    test('02687_element_check_02664', () async {
      print("\n********** テスト実行：02687_element_check_02664 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.sound1;
      print(qcashier.screen79.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.sound1 = testData1;
      print(qcashier.screen79.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.sound1 = testData2;
      print(qcashier.screen79.sound1);
      expect(qcashier.screen79.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.sound1 = defalut;
      print(qcashier.screen79.sound1);
      expect(qcashier.screen79.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02687_element_check_02664 **********\n\n");
    });

    test('02688_element_check_02665', () async {
      print("\n********** テスト実行：02688_element_check_02665 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.sound2;
      print(qcashier.screen79.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.sound2 = testData1;
      print(qcashier.screen79.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.sound2 = testData2;
      print(qcashier.screen79.sound2);
      expect(qcashier.screen79.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.sound2 = defalut;
      print(qcashier.screen79.sound2);
      expect(qcashier.screen79.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02688_element_check_02665 **********\n\n");
    });

    test('02689_element_check_02666', () async {
      print("\n********** テスト実行：02689_element_check_02666 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.sound3;
      print(qcashier.screen79.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.sound3 = testData1;
      print(qcashier.screen79.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.sound3 = testData2;
      print(qcashier.screen79.sound3);
      expect(qcashier.screen79.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.sound3 = defalut;
      print(qcashier.screen79.sound3);
      expect(qcashier.screen79.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02689_element_check_02666 **********\n\n");
    });

    test('02690_element_check_02667', () async {
      print("\n********** テスト実行：02690_element_check_02667 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.snd_timer;
      print(qcashier.screen79.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.snd_timer = testData1;
      print(qcashier.screen79.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.snd_timer = testData2;
      print(qcashier.screen79.snd_timer);
      expect(qcashier.screen79.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.snd_timer = defalut;
      print(qcashier.screen79.snd_timer);
      expect(qcashier.screen79.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02690_element_check_02667 **********\n\n");
    });

    test('02691_element_check_02668', () async {
      print("\n********** テスト実行：02691_element_check_02668 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.timer1;
      print(qcashier.screen79.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.timer1 = testData1;
      print(qcashier.screen79.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.timer1 = testData2;
      print(qcashier.screen79.timer1);
      expect(qcashier.screen79.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.timer1 = defalut;
      print(qcashier.screen79.timer1);
      expect(qcashier.screen79.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02691_element_check_02668 **********\n\n");
    });

    test('02692_element_check_02669', () async {
      print("\n********** テスト実行：02692_element_check_02669 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.timer2;
      print(qcashier.screen79.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.timer2 = testData1;
      print(qcashier.screen79.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.timer2 = testData2;
      print(qcashier.screen79.timer2);
      expect(qcashier.screen79.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.timer2 = defalut;
      print(qcashier.screen79.timer2);
      expect(qcashier.screen79.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02692_element_check_02669 **********\n\n");
    });

    test('02693_element_check_02670', () async {
      print("\n********** テスト実行：02693_element_check_02670 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.timer3;
      print(qcashier.screen79.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.timer3 = testData1;
      print(qcashier.screen79.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.timer3 = testData2;
      print(qcashier.screen79.timer3);
      expect(qcashier.screen79.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.timer3 = defalut;
      print(qcashier.screen79.timer3);
      expect(qcashier.screen79.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02693_element_check_02670 **********\n\n");
    });

    test('02694_element_check_02671', () async {
      print("\n********** テスト実行：02694_element_check_02671 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.dsp_flg1;
      print(qcashier.screen79.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.dsp_flg1 = testData1;
      print(qcashier.screen79.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.dsp_flg1 = testData2;
      print(qcashier.screen79.dsp_flg1);
      expect(qcashier.screen79.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.dsp_flg1 = defalut;
      print(qcashier.screen79.dsp_flg1);
      expect(qcashier.screen79.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02694_element_check_02671 **********\n\n");
    });

    test('02695_element_check_02672', () async {
      print("\n********** テスト実行：02695_element_check_02672 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.dsp_flg2;
      print(qcashier.screen79.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.dsp_flg2 = testData1;
      print(qcashier.screen79.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.dsp_flg2 = testData2;
      print(qcashier.screen79.dsp_flg2);
      expect(qcashier.screen79.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.dsp_flg2 = defalut;
      print(qcashier.screen79.dsp_flg2);
      expect(qcashier.screen79.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02695_element_check_02672 **********\n\n");
    });

    test('02696_element_check_02673', () async {
      print("\n********** テスト実行：02696_element_check_02673 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.movie01_ext;
      print(qcashier.screen79.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.movie01_ext = testData1;
      print(qcashier.screen79.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.movie01_ext = testData2;
      print(qcashier.screen79.movie01_ext);
      expect(qcashier.screen79.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.movie01_ext = defalut;
      print(qcashier.screen79.movie01_ext);
      expect(qcashier.screen79.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02696_element_check_02673 **********\n\n");
    });

    test('02697_element_check_02674', () async {
      print("\n********** テスト実行：02697_element_check_02674 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.movie02_ext;
      print(qcashier.screen79.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.movie02_ext = testData1;
      print(qcashier.screen79.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.movie02_ext = testData2;
      print(qcashier.screen79.movie02_ext);
      expect(qcashier.screen79.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.movie02_ext = defalut;
      print(qcashier.screen79.movie02_ext);
      expect(qcashier.screen79.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02697_element_check_02674 **********\n\n");
    });

    test('02698_element_check_02675', () async {
      print("\n********** テスト実行：02698_element_check_02675 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.movie03_ext;
      print(qcashier.screen79.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.movie03_ext = testData1;
      print(qcashier.screen79.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.movie03_ext = testData2;
      print(qcashier.screen79.movie03_ext);
      expect(qcashier.screen79.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.movie03_ext = defalut;
      print(qcashier.screen79.movie03_ext);
      expect(qcashier.screen79.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02698_element_check_02675 **********\n\n");
    });

    test('02699_element_check_02676', () async {
      print("\n********** テスト実行：02699_element_check_02676 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.movie04_ext;
      print(qcashier.screen79.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.movie04_ext = testData1;
      print(qcashier.screen79.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.movie04_ext = testData2;
      print(qcashier.screen79.movie04_ext);
      expect(qcashier.screen79.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.movie04_ext = defalut;
      print(qcashier.screen79.movie04_ext);
      expect(qcashier.screen79.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02699_element_check_02676 **********\n\n");
    });

    test('02700_element_check_02677', () async {
      print("\n********** テスト実行：02700_element_check_02677 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line_title;
      print(qcashier.screen79.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line_title = testData1s;
      print(qcashier.screen79.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line_title = testData2s;
      print(qcashier.screen79.line_title);
      expect(qcashier.screen79.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line_title = defalut;
      print(qcashier.screen79.line_title);
      expect(qcashier.screen79.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02700_element_check_02677 **********\n\n");
    });

    test('02701_element_check_02678', () async {
      print("\n********** テスト実行：02701_element_check_02678 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line_title_ex;
      print(qcashier.screen79.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line_title_ex = testData1s;
      print(qcashier.screen79.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line_title_ex = testData2s;
      print(qcashier.screen79.line_title_ex);
      expect(qcashier.screen79.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line_title_ex = defalut;
      print(qcashier.screen79.line_title_ex);
      expect(qcashier.screen79.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02701_element_check_02678 **********\n\n");
    });

    test('02702_element_check_02679', () async {
      print("\n********** テスト実行：02702_element_check_02679 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line1;
      print(qcashier.screen79.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line1 = testData1s;
      print(qcashier.screen79.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line1 = testData2s;
      print(qcashier.screen79.line1);
      expect(qcashier.screen79.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line1 = defalut;
      print(qcashier.screen79.line1);
      expect(qcashier.screen79.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02702_element_check_02679 **********\n\n");
    });

    test('02703_element_check_02680', () async {
      print("\n********** テスト実行：02703_element_check_02680 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line2;
      print(qcashier.screen79.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line2 = testData1s;
      print(qcashier.screen79.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line2 = testData2s;
      print(qcashier.screen79.line2);
      expect(qcashier.screen79.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line2 = defalut;
      print(qcashier.screen79.line2);
      expect(qcashier.screen79.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02703_element_check_02680 **********\n\n");
    });

    test('02704_element_check_02681', () async {
      print("\n********** テスト実行：02704_element_check_02681 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line3;
      print(qcashier.screen79.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line3 = testData1s;
      print(qcashier.screen79.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line3 = testData2s;
      print(qcashier.screen79.line3);
      expect(qcashier.screen79.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line3 = defalut;
      print(qcashier.screen79.line3);
      expect(qcashier.screen79.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02704_element_check_02681 **********\n\n");
    });

    test('02705_element_check_02682', () async {
      print("\n********** テスト実行：02705_element_check_02682 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line4;
      print(qcashier.screen79.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line4 = testData1s;
      print(qcashier.screen79.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line4 = testData2s;
      print(qcashier.screen79.line4);
      expect(qcashier.screen79.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line4 = defalut;
      print(qcashier.screen79.line4);
      expect(qcashier.screen79.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02705_element_check_02682 **********\n\n");
    });

    test('02706_element_check_02683', () async {
      print("\n********** テスト実行：02706_element_check_02683 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line1_ex;
      print(qcashier.screen79.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line1_ex = testData1s;
      print(qcashier.screen79.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line1_ex = testData2s;
      print(qcashier.screen79.line1_ex);
      expect(qcashier.screen79.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line1_ex = defalut;
      print(qcashier.screen79.line1_ex);
      expect(qcashier.screen79.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02706_element_check_02683 **********\n\n");
    });

    test('02707_element_check_02684', () async {
      print("\n********** テスト実行：02707_element_check_02684 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line2_ex;
      print(qcashier.screen79.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line2_ex = testData1s;
      print(qcashier.screen79.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line2_ex = testData2s;
      print(qcashier.screen79.line2_ex);
      expect(qcashier.screen79.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line2_ex = defalut;
      print(qcashier.screen79.line2_ex);
      expect(qcashier.screen79.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02707_element_check_02684 **********\n\n");
    });

    test('02708_element_check_02685', () async {
      print("\n********** テスト実行：02708_element_check_02685 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line3_ex;
      print(qcashier.screen79.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line3_ex = testData1s;
      print(qcashier.screen79.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line3_ex = testData2s;
      print(qcashier.screen79.line3_ex);
      expect(qcashier.screen79.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line3_ex = defalut;
      print(qcashier.screen79.line3_ex);
      expect(qcashier.screen79.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02708_element_check_02685 **********\n\n");
    });

    test('02709_element_check_02686', () async {
      print("\n********** テスト実行：02709_element_check_02686 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.line4_ex;
      print(qcashier.screen79.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.line4_ex = testData1s;
      print(qcashier.screen79.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.line4_ex = testData2s;
      print(qcashier.screen79.line4_ex);
      expect(qcashier.screen79.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.line4_ex = defalut;
      print(qcashier.screen79.line4_ex);
      expect(qcashier.screen79.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02709_element_check_02686 **********\n\n");
    });

    test('02710_element_check_02687', () async {
      print("\n********** テスト実行：02710_element_check_02687 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.sound_led1;
      print(qcashier.screen79.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.sound_led1 = testData1;
      print(qcashier.screen79.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.sound_led1 = testData2;
      print(qcashier.screen79.sound_led1);
      expect(qcashier.screen79.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.sound_led1 = defalut;
      print(qcashier.screen79.sound_led1);
      expect(qcashier.screen79.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02710_element_check_02687 **********\n\n");
    });

    test('02711_element_check_02688', () async {
      print("\n********** テスト実行：02711_element_check_02688 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.sound_led2;
      print(qcashier.screen79.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.sound_led2 = testData1;
      print(qcashier.screen79.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.sound_led2 = testData2;
      print(qcashier.screen79.sound_led2);
      expect(qcashier.screen79.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.sound_led2 = defalut;
      print(qcashier.screen79.sound_led2);
      expect(qcashier.screen79.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02711_element_check_02688 **********\n\n");
    });

    test('02712_element_check_02689', () async {
      print("\n********** テスト実行：02712_element_check_02689 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen79.sound_led3;
      print(qcashier.screen79.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen79.sound_led3 = testData1;
      print(qcashier.screen79.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen79.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen79.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen79.sound_led3 = testData2;
      print(qcashier.screen79.sound_led3);
      expect(qcashier.screen79.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen79.sound_led3 = defalut;
      print(qcashier.screen79.sound_led3);
      expect(qcashier.screen79.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen79.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02712_element_check_02689 **********\n\n");
    });

    test('02713_element_check_02690', () async {
      print("\n********** テスト実行：02713_element_check_02690 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.title;
      print(qcashier.screen81.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.title = testData1s;
      print(qcashier.screen81.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.title = testData2s;
      print(qcashier.screen81.title);
      expect(qcashier.screen81.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.title = defalut;
      print(qcashier.screen81.title);
      expect(qcashier.screen81.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02713_element_check_02690 **********\n\n");
    });

    test('02714_element_check_02691', () async {
      print("\n********** テスト実行：02714_element_check_02691 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.msg1;
      print(qcashier.screen81.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.msg1 = testData1s;
      print(qcashier.screen81.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.msg1 = testData2s;
      print(qcashier.screen81.msg1);
      expect(qcashier.screen81.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.msg1 = defalut;
      print(qcashier.screen81.msg1);
      expect(qcashier.screen81.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02714_element_check_02691 **********\n\n");
    });

    test('02715_element_check_02692', () async {
      print("\n********** テスト実行：02715_element_check_02692 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.msg2;
      print(qcashier.screen81.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.msg2 = testData1s;
      print(qcashier.screen81.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.msg2 = testData2s;
      print(qcashier.screen81.msg2);
      expect(qcashier.screen81.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.msg2 = defalut;
      print(qcashier.screen81.msg2);
      expect(qcashier.screen81.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02715_element_check_02692 **********\n\n");
    });

    test('02716_element_check_02693', () async {
      print("\n********** テスト実行：02716_element_check_02693 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.msg1_size;
      print(qcashier.screen81.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.msg1_size = testData1;
      print(qcashier.screen81.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.msg1_size = testData2;
      print(qcashier.screen81.msg1_size);
      expect(qcashier.screen81.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.msg1_size = defalut;
      print(qcashier.screen81.msg1_size);
      expect(qcashier.screen81.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02716_element_check_02693 **********\n\n");
    });

    test('02717_element_check_02694', () async {
      print("\n********** テスト実行：02717_element_check_02694 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.msg2_size;
      print(qcashier.screen81.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.msg2_size = testData1;
      print(qcashier.screen81.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.msg2_size = testData2;
      print(qcashier.screen81.msg2_size);
      expect(qcashier.screen81.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.msg2_size = defalut;
      print(qcashier.screen81.msg2_size);
      expect(qcashier.screen81.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02717_element_check_02694 **********\n\n");
    });

    test('02718_element_check_02695', () async {
      print("\n********** テスト実行：02718_element_check_02695 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.sound1;
      print(qcashier.screen81.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.sound1 = testData1;
      print(qcashier.screen81.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.sound1 = testData2;
      print(qcashier.screen81.sound1);
      expect(qcashier.screen81.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.sound1 = defalut;
      print(qcashier.screen81.sound1);
      expect(qcashier.screen81.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02718_element_check_02695 **********\n\n");
    });

    test('02719_element_check_02696', () async {
      print("\n********** テスト実行：02719_element_check_02696 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.sound2;
      print(qcashier.screen81.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.sound2 = testData1;
      print(qcashier.screen81.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.sound2 = testData2;
      print(qcashier.screen81.sound2);
      expect(qcashier.screen81.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.sound2 = defalut;
      print(qcashier.screen81.sound2);
      expect(qcashier.screen81.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02719_element_check_02696 **********\n\n");
    });

    test('02720_element_check_02697', () async {
      print("\n********** テスト実行：02720_element_check_02697 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.sound3;
      print(qcashier.screen81.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.sound3 = testData1;
      print(qcashier.screen81.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.sound3 = testData2;
      print(qcashier.screen81.sound3);
      expect(qcashier.screen81.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.sound3 = defalut;
      print(qcashier.screen81.sound3);
      expect(qcashier.screen81.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02720_element_check_02697 **********\n\n");
    });

    test('02721_element_check_02698', () async {
      print("\n********** テスト実行：02721_element_check_02698 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.snd_timer;
      print(qcashier.screen81.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.snd_timer = testData1;
      print(qcashier.screen81.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.snd_timer = testData2;
      print(qcashier.screen81.snd_timer);
      expect(qcashier.screen81.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.snd_timer = defalut;
      print(qcashier.screen81.snd_timer);
      expect(qcashier.screen81.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02721_element_check_02698 **********\n\n");
    });

    test('02722_element_check_02699', () async {
      print("\n********** テスト実行：02722_element_check_02699 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.timer1;
      print(qcashier.screen81.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.timer1 = testData1;
      print(qcashier.screen81.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.timer1 = testData2;
      print(qcashier.screen81.timer1);
      expect(qcashier.screen81.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.timer1 = defalut;
      print(qcashier.screen81.timer1);
      expect(qcashier.screen81.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02722_element_check_02699 **********\n\n");
    });

    test('02723_element_check_02700', () async {
      print("\n********** テスト実行：02723_element_check_02700 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.timer2;
      print(qcashier.screen81.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.timer2 = testData1;
      print(qcashier.screen81.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.timer2 = testData2;
      print(qcashier.screen81.timer2);
      expect(qcashier.screen81.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.timer2 = defalut;
      print(qcashier.screen81.timer2);
      expect(qcashier.screen81.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02723_element_check_02700 **********\n\n");
    });

    test('02724_element_check_02701', () async {
      print("\n********** テスト実行：02724_element_check_02701 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.timer3;
      print(qcashier.screen81.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.timer3 = testData1;
      print(qcashier.screen81.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.timer3 = testData2;
      print(qcashier.screen81.timer3);
      expect(qcashier.screen81.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.timer3 = defalut;
      print(qcashier.screen81.timer3);
      expect(qcashier.screen81.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02724_element_check_02701 **********\n\n");
    });

    test('02725_element_check_02702', () async {
      print("\n********** テスト実行：02725_element_check_02702 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.dsp_flg1;
      print(qcashier.screen81.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.dsp_flg1 = testData1;
      print(qcashier.screen81.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.dsp_flg1 = testData2;
      print(qcashier.screen81.dsp_flg1);
      expect(qcashier.screen81.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.dsp_flg1 = defalut;
      print(qcashier.screen81.dsp_flg1);
      expect(qcashier.screen81.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02725_element_check_02702 **********\n\n");
    });

    test('02726_element_check_02703', () async {
      print("\n********** テスト実行：02726_element_check_02703 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.dsp_flg2;
      print(qcashier.screen81.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.dsp_flg2 = testData1;
      print(qcashier.screen81.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.dsp_flg2 = testData2;
      print(qcashier.screen81.dsp_flg2);
      expect(qcashier.screen81.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.dsp_flg2 = defalut;
      print(qcashier.screen81.dsp_flg2);
      expect(qcashier.screen81.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02726_element_check_02703 **********\n\n");
    });

    test('02727_element_check_02704', () async {
      print("\n********** テスト実行：02727_element_check_02704 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.movie01_ext;
      print(qcashier.screen81.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.movie01_ext = testData1;
      print(qcashier.screen81.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.movie01_ext = testData2;
      print(qcashier.screen81.movie01_ext);
      expect(qcashier.screen81.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.movie01_ext = defalut;
      print(qcashier.screen81.movie01_ext);
      expect(qcashier.screen81.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02727_element_check_02704 **********\n\n");
    });

    test('02728_element_check_02705', () async {
      print("\n********** テスト実行：02728_element_check_02705 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.movie02_ext;
      print(qcashier.screen81.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.movie02_ext = testData1;
      print(qcashier.screen81.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.movie02_ext = testData2;
      print(qcashier.screen81.movie02_ext);
      expect(qcashier.screen81.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.movie02_ext = defalut;
      print(qcashier.screen81.movie02_ext);
      expect(qcashier.screen81.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02728_element_check_02705 **********\n\n");
    });

    test('02729_element_check_02706', () async {
      print("\n********** テスト実行：02729_element_check_02706 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.movie03_ext;
      print(qcashier.screen81.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.movie03_ext = testData1;
      print(qcashier.screen81.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.movie03_ext = testData2;
      print(qcashier.screen81.movie03_ext);
      expect(qcashier.screen81.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.movie03_ext = defalut;
      print(qcashier.screen81.movie03_ext);
      expect(qcashier.screen81.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02729_element_check_02706 **********\n\n");
    });

    test('02730_element_check_02707', () async {
      print("\n********** テスト実行：02730_element_check_02707 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.movie04_ext;
      print(qcashier.screen81.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.movie04_ext = testData1;
      print(qcashier.screen81.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.movie04_ext = testData2;
      print(qcashier.screen81.movie04_ext);
      expect(qcashier.screen81.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.movie04_ext = defalut;
      print(qcashier.screen81.movie04_ext);
      expect(qcashier.screen81.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02730_element_check_02707 **********\n\n");
    });

    test('02731_element_check_02708', () async {
      print("\n********** テスト実行：02731_element_check_02708 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line_title;
      print(qcashier.screen81.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line_title = testData1s;
      print(qcashier.screen81.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line_title = testData2s;
      print(qcashier.screen81.line_title);
      expect(qcashier.screen81.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line_title = defalut;
      print(qcashier.screen81.line_title);
      expect(qcashier.screen81.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02731_element_check_02708 **********\n\n");
    });

    test('02732_element_check_02709', () async {
      print("\n********** テスト実行：02732_element_check_02709 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line_title_ex;
      print(qcashier.screen81.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line_title_ex = testData1s;
      print(qcashier.screen81.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line_title_ex = testData2s;
      print(qcashier.screen81.line_title_ex);
      expect(qcashier.screen81.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line_title_ex = defalut;
      print(qcashier.screen81.line_title_ex);
      expect(qcashier.screen81.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02732_element_check_02709 **********\n\n");
    });

    test('02733_element_check_02710', () async {
      print("\n********** テスト実行：02733_element_check_02710 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line1;
      print(qcashier.screen81.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line1 = testData1s;
      print(qcashier.screen81.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line1 = testData2s;
      print(qcashier.screen81.line1);
      expect(qcashier.screen81.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line1 = defalut;
      print(qcashier.screen81.line1);
      expect(qcashier.screen81.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02733_element_check_02710 **********\n\n");
    });

    test('02734_element_check_02711', () async {
      print("\n********** テスト実行：02734_element_check_02711 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line2;
      print(qcashier.screen81.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line2 = testData1s;
      print(qcashier.screen81.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line2 = testData2s;
      print(qcashier.screen81.line2);
      expect(qcashier.screen81.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line2 = defalut;
      print(qcashier.screen81.line2);
      expect(qcashier.screen81.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02734_element_check_02711 **********\n\n");
    });

    test('02735_element_check_02712', () async {
      print("\n********** テスト実行：02735_element_check_02712 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line3;
      print(qcashier.screen81.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line3 = testData1s;
      print(qcashier.screen81.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line3 = testData2s;
      print(qcashier.screen81.line3);
      expect(qcashier.screen81.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line3 = defalut;
      print(qcashier.screen81.line3);
      expect(qcashier.screen81.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02735_element_check_02712 **********\n\n");
    });

    test('02736_element_check_02713', () async {
      print("\n********** テスト実行：02736_element_check_02713 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line4;
      print(qcashier.screen81.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line4 = testData1s;
      print(qcashier.screen81.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line4 = testData2s;
      print(qcashier.screen81.line4);
      expect(qcashier.screen81.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line4 = defalut;
      print(qcashier.screen81.line4);
      expect(qcashier.screen81.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02736_element_check_02713 **********\n\n");
    });

    test('02737_element_check_02714', () async {
      print("\n********** テスト実行：02737_element_check_02714 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line1_ex;
      print(qcashier.screen81.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line1_ex = testData1s;
      print(qcashier.screen81.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line1_ex = testData2s;
      print(qcashier.screen81.line1_ex);
      expect(qcashier.screen81.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line1_ex = defalut;
      print(qcashier.screen81.line1_ex);
      expect(qcashier.screen81.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02737_element_check_02714 **********\n\n");
    });

    test('02738_element_check_02715', () async {
      print("\n********** テスト実行：02738_element_check_02715 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line2_ex;
      print(qcashier.screen81.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line2_ex = testData1s;
      print(qcashier.screen81.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line2_ex = testData2s;
      print(qcashier.screen81.line2_ex);
      expect(qcashier.screen81.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line2_ex = defalut;
      print(qcashier.screen81.line2_ex);
      expect(qcashier.screen81.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02738_element_check_02715 **********\n\n");
    });

    test('02739_element_check_02716', () async {
      print("\n********** テスト実行：02739_element_check_02716 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line3_ex;
      print(qcashier.screen81.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line3_ex = testData1s;
      print(qcashier.screen81.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line3_ex = testData2s;
      print(qcashier.screen81.line3_ex);
      expect(qcashier.screen81.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line3_ex = defalut;
      print(qcashier.screen81.line3_ex);
      expect(qcashier.screen81.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02739_element_check_02716 **********\n\n");
    });

    test('02740_element_check_02717', () async {
      print("\n********** テスト実行：02740_element_check_02717 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.line4_ex;
      print(qcashier.screen81.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.line4_ex = testData1s;
      print(qcashier.screen81.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.line4_ex = testData2s;
      print(qcashier.screen81.line4_ex);
      expect(qcashier.screen81.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.line4_ex = defalut;
      print(qcashier.screen81.line4_ex);
      expect(qcashier.screen81.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02740_element_check_02717 **********\n\n");
    });

    test('02741_element_check_02718', () async {
      print("\n********** テスト実行：02741_element_check_02718 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.sound_led1;
      print(qcashier.screen81.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.sound_led1 = testData1;
      print(qcashier.screen81.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.sound_led1 = testData2;
      print(qcashier.screen81.sound_led1);
      expect(qcashier.screen81.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.sound_led1 = defalut;
      print(qcashier.screen81.sound_led1);
      expect(qcashier.screen81.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02741_element_check_02718 **********\n\n");
    });

    test('02742_element_check_02719', () async {
      print("\n********** テスト実行：02742_element_check_02719 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.sound_led2;
      print(qcashier.screen81.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.sound_led2 = testData1;
      print(qcashier.screen81.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.sound_led2 = testData2;
      print(qcashier.screen81.sound_led2);
      expect(qcashier.screen81.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.sound_led2 = defalut;
      print(qcashier.screen81.sound_led2);
      expect(qcashier.screen81.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02742_element_check_02719 **********\n\n");
    });

    test('02743_element_check_02720', () async {
      print("\n********** テスト実行：02743_element_check_02720 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen81.sound_led3;
      print(qcashier.screen81.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen81.sound_led3 = testData1;
      print(qcashier.screen81.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen81.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen81.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen81.sound_led3 = testData2;
      print(qcashier.screen81.sound_led3);
      expect(qcashier.screen81.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen81.sound_led3 = defalut;
      print(qcashier.screen81.sound_led3);
      expect(qcashier.screen81.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen81.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02743_element_check_02720 **********\n\n");
    });

    test('02744_element_check_02721', () async {
      print("\n********** テスト実行：02744_element_check_02721 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.title;
      print(qcashier.screen82.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.title = testData1s;
      print(qcashier.screen82.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.title = testData2s;
      print(qcashier.screen82.title);
      expect(qcashier.screen82.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.title = defalut;
      print(qcashier.screen82.title);
      expect(qcashier.screen82.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02744_element_check_02721 **********\n\n");
    });

    test('02745_element_check_02722', () async {
      print("\n********** テスト実行：02745_element_check_02722 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.msg1;
      print(qcashier.screen82.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.msg1 = testData1s;
      print(qcashier.screen82.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.msg1 = testData2s;
      print(qcashier.screen82.msg1);
      expect(qcashier.screen82.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.msg1 = defalut;
      print(qcashier.screen82.msg1);
      expect(qcashier.screen82.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02745_element_check_02722 **********\n\n");
    });

    test('02746_element_check_02723', () async {
      print("\n********** テスト実行：02746_element_check_02723 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.msg2;
      print(qcashier.screen82.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.msg2 = testData1s;
      print(qcashier.screen82.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.msg2 = testData2s;
      print(qcashier.screen82.msg2);
      expect(qcashier.screen82.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.msg2 = defalut;
      print(qcashier.screen82.msg2);
      expect(qcashier.screen82.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02746_element_check_02723 **********\n\n");
    });

    test('02747_element_check_02724', () async {
      print("\n********** テスト実行：02747_element_check_02724 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.msg1_size;
      print(qcashier.screen82.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.msg1_size = testData1;
      print(qcashier.screen82.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.msg1_size = testData2;
      print(qcashier.screen82.msg1_size);
      expect(qcashier.screen82.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.msg1_size = defalut;
      print(qcashier.screen82.msg1_size);
      expect(qcashier.screen82.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02747_element_check_02724 **********\n\n");
    });

    test('02748_element_check_02725', () async {
      print("\n********** テスト実行：02748_element_check_02725 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.msg2_size;
      print(qcashier.screen82.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.msg2_size = testData1;
      print(qcashier.screen82.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.msg2_size = testData2;
      print(qcashier.screen82.msg2_size);
      expect(qcashier.screen82.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.msg2_size = defalut;
      print(qcashier.screen82.msg2_size);
      expect(qcashier.screen82.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02748_element_check_02725 **********\n\n");
    });

    test('02749_element_check_02726', () async {
      print("\n********** テスト実行：02749_element_check_02726 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.sound1;
      print(qcashier.screen82.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.sound1 = testData1;
      print(qcashier.screen82.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.sound1 = testData2;
      print(qcashier.screen82.sound1);
      expect(qcashier.screen82.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.sound1 = defalut;
      print(qcashier.screen82.sound1);
      expect(qcashier.screen82.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02749_element_check_02726 **********\n\n");
    });

    test('02750_element_check_02727', () async {
      print("\n********** テスト実行：02750_element_check_02727 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.sound2;
      print(qcashier.screen82.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.sound2 = testData1;
      print(qcashier.screen82.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.sound2 = testData2;
      print(qcashier.screen82.sound2);
      expect(qcashier.screen82.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.sound2 = defalut;
      print(qcashier.screen82.sound2);
      expect(qcashier.screen82.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02750_element_check_02727 **********\n\n");
    });

    test('02751_element_check_02728', () async {
      print("\n********** テスト実行：02751_element_check_02728 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.sound3;
      print(qcashier.screen82.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.sound3 = testData1;
      print(qcashier.screen82.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.sound3 = testData2;
      print(qcashier.screen82.sound3);
      expect(qcashier.screen82.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.sound3 = defalut;
      print(qcashier.screen82.sound3);
      expect(qcashier.screen82.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02751_element_check_02728 **********\n\n");
    });

    test('02752_element_check_02729', () async {
      print("\n********** テスト実行：02752_element_check_02729 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.snd_timer;
      print(qcashier.screen82.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.snd_timer = testData1;
      print(qcashier.screen82.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.snd_timer = testData2;
      print(qcashier.screen82.snd_timer);
      expect(qcashier.screen82.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.snd_timer = defalut;
      print(qcashier.screen82.snd_timer);
      expect(qcashier.screen82.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02752_element_check_02729 **********\n\n");
    });

    test('02753_element_check_02730', () async {
      print("\n********** テスト実行：02753_element_check_02730 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.timer1;
      print(qcashier.screen82.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.timer1 = testData1;
      print(qcashier.screen82.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.timer1 = testData2;
      print(qcashier.screen82.timer1);
      expect(qcashier.screen82.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.timer1 = defalut;
      print(qcashier.screen82.timer1);
      expect(qcashier.screen82.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02753_element_check_02730 **********\n\n");
    });

    test('02754_element_check_02731', () async {
      print("\n********** テスト実行：02754_element_check_02731 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.timer2;
      print(qcashier.screen82.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.timer2 = testData1;
      print(qcashier.screen82.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.timer2 = testData2;
      print(qcashier.screen82.timer2);
      expect(qcashier.screen82.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.timer2 = defalut;
      print(qcashier.screen82.timer2);
      expect(qcashier.screen82.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02754_element_check_02731 **********\n\n");
    });

    test('02755_element_check_02732', () async {
      print("\n********** テスト実行：02755_element_check_02732 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.timer3;
      print(qcashier.screen82.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.timer3 = testData1;
      print(qcashier.screen82.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.timer3 = testData2;
      print(qcashier.screen82.timer3);
      expect(qcashier.screen82.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.timer3 = defalut;
      print(qcashier.screen82.timer3);
      expect(qcashier.screen82.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02755_element_check_02732 **********\n\n");
    });

    test('02756_element_check_02733', () async {
      print("\n********** テスト実行：02756_element_check_02733 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.dsp_flg1;
      print(qcashier.screen82.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.dsp_flg1 = testData1;
      print(qcashier.screen82.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.dsp_flg1 = testData2;
      print(qcashier.screen82.dsp_flg1);
      expect(qcashier.screen82.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.dsp_flg1 = defalut;
      print(qcashier.screen82.dsp_flg1);
      expect(qcashier.screen82.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02756_element_check_02733 **********\n\n");
    });

    test('02757_element_check_02734', () async {
      print("\n********** テスト実行：02757_element_check_02734 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.dsp_flg2;
      print(qcashier.screen82.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.dsp_flg2 = testData1;
      print(qcashier.screen82.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.dsp_flg2 = testData2;
      print(qcashier.screen82.dsp_flg2);
      expect(qcashier.screen82.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.dsp_flg2 = defalut;
      print(qcashier.screen82.dsp_flg2);
      expect(qcashier.screen82.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02757_element_check_02734 **********\n\n");
    });

    test('02758_element_check_02735', () async {
      print("\n********** テスト実行：02758_element_check_02735 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.movie01_ext;
      print(qcashier.screen82.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.movie01_ext = testData1;
      print(qcashier.screen82.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.movie01_ext = testData2;
      print(qcashier.screen82.movie01_ext);
      expect(qcashier.screen82.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.movie01_ext = defalut;
      print(qcashier.screen82.movie01_ext);
      expect(qcashier.screen82.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02758_element_check_02735 **********\n\n");
    });

    test('02759_element_check_02736', () async {
      print("\n********** テスト実行：02759_element_check_02736 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.movie02_ext;
      print(qcashier.screen82.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.movie02_ext = testData1;
      print(qcashier.screen82.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.movie02_ext = testData2;
      print(qcashier.screen82.movie02_ext);
      expect(qcashier.screen82.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.movie02_ext = defalut;
      print(qcashier.screen82.movie02_ext);
      expect(qcashier.screen82.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02759_element_check_02736 **********\n\n");
    });

    test('02760_element_check_02737', () async {
      print("\n********** テスト実行：02760_element_check_02737 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.movie03_ext;
      print(qcashier.screen82.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.movie03_ext = testData1;
      print(qcashier.screen82.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.movie03_ext = testData2;
      print(qcashier.screen82.movie03_ext);
      expect(qcashier.screen82.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.movie03_ext = defalut;
      print(qcashier.screen82.movie03_ext);
      expect(qcashier.screen82.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02760_element_check_02737 **********\n\n");
    });

    test('02761_element_check_02738', () async {
      print("\n********** テスト実行：02761_element_check_02738 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.movie04_ext;
      print(qcashier.screen82.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.movie04_ext = testData1;
      print(qcashier.screen82.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.movie04_ext = testData2;
      print(qcashier.screen82.movie04_ext);
      expect(qcashier.screen82.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.movie04_ext = defalut;
      print(qcashier.screen82.movie04_ext);
      expect(qcashier.screen82.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02761_element_check_02738 **********\n\n");
    });

    test('02762_element_check_02739', () async {
      print("\n********** テスト実行：02762_element_check_02739 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line_title;
      print(qcashier.screen82.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line_title = testData1s;
      print(qcashier.screen82.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line_title = testData2s;
      print(qcashier.screen82.line_title);
      expect(qcashier.screen82.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line_title = defalut;
      print(qcashier.screen82.line_title);
      expect(qcashier.screen82.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02762_element_check_02739 **********\n\n");
    });

    test('02763_element_check_02740', () async {
      print("\n********** テスト実行：02763_element_check_02740 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line_title_ex;
      print(qcashier.screen82.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line_title_ex = testData1s;
      print(qcashier.screen82.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line_title_ex = testData2s;
      print(qcashier.screen82.line_title_ex);
      expect(qcashier.screen82.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line_title_ex = defalut;
      print(qcashier.screen82.line_title_ex);
      expect(qcashier.screen82.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02763_element_check_02740 **********\n\n");
    });

    test('02764_element_check_02741', () async {
      print("\n********** テスト実行：02764_element_check_02741 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line1;
      print(qcashier.screen82.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line1 = testData1s;
      print(qcashier.screen82.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line1 = testData2s;
      print(qcashier.screen82.line1);
      expect(qcashier.screen82.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line1 = defalut;
      print(qcashier.screen82.line1);
      expect(qcashier.screen82.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02764_element_check_02741 **********\n\n");
    });

    test('02765_element_check_02742', () async {
      print("\n********** テスト実行：02765_element_check_02742 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line2;
      print(qcashier.screen82.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line2 = testData1s;
      print(qcashier.screen82.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line2 = testData2s;
      print(qcashier.screen82.line2);
      expect(qcashier.screen82.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line2 = defalut;
      print(qcashier.screen82.line2);
      expect(qcashier.screen82.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02765_element_check_02742 **********\n\n");
    });

    test('02766_element_check_02743', () async {
      print("\n********** テスト実行：02766_element_check_02743 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line3;
      print(qcashier.screen82.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line3 = testData1s;
      print(qcashier.screen82.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line3 = testData2s;
      print(qcashier.screen82.line3);
      expect(qcashier.screen82.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line3 = defalut;
      print(qcashier.screen82.line3);
      expect(qcashier.screen82.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02766_element_check_02743 **********\n\n");
    });

    test('02767_element_check_02744', () async {
      print("\n********** テスト実行：02767_element_check_02744 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line4;
      print(qcashier.screen82.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line4 = testData1s;
      print(qcashier.screen82.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line4 = testData2s;
      print(qcashier.screen82.line4);
      expect(qcashier.screen82.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line4 = defalut;
      print(qcashier.screen82.line4);
      expect(qcashier.screen82.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02767_element_check_02744 **********\n\n");
    });

    test('02768_element_check_02745', () async {
      print("\n********** テスト実行：02768_element_check_02745 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line1_ex;
      print(qcashier.screen82.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line1_ex = testData1s;
      print(qcashier.screen82.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line1_ex = testData2s;
      print(qcashier.screen82.line1_ex);
      expect(qcashier.screen82.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line1_ex = defalut;
      print(qcashier.screen82.line1_ex);
      expect(qcashier.screen82.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02768_element_check_02745 **********\n\n");
    });

    test('02769_element_check_02746', () async {
      print("\n********** テスト実行：02769_element_check_02746 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line2_ex;
      print(qcashier.screen82.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line2_ex = testData1s;
      print(qcashier.screen82.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line2_ex = testData2s;
      print(qcashier.screen82.line2_ex);
      expect(qcashier.screen82.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line2_ex = defalut;
      print(qcashier.screen82.line2_ex);
      expect(qcashier.screen82.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02769_element_check_02746 **********\n\n");
    });

    test('02770_element_check_02747', () async {
      print("\n********** テスト実行：02770_element_check_02747 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line3_ex;
      print(qcashier.screen82.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line3_ex = testData1s;
      print(qcashier.screen82.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line3_ex = testData2s;
      print(qcashier.screen82.line3_ex);
      expect(qcashier.screen82.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line3_ex = defalut;
      print(qcashier.screen82.line3_ex);
      expect(qcashier.screen82.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02770_element_check_02747 **********\n\n");
    });

    test('02771_element_check_02748', () async {
      print("\n********** テスト実行：02771_element_check_02748 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.line4_ex;
      print(qcashier.screen82.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.line4_ex = testData1s;
      print(qcashier.screen82.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.line4_ex = testData2s;
      print(qcashier.screen82.line4_ex);
      expect(qcashier.screen82.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.line4_ex = defalut;
      print(qcashier.screen82.line4_ex);
      expect(qcashier.screen82.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02771_element_check_02748 **********\n\n");
    });

    test('02772_element_check_02749', () async {
      print("\n********** テスト実行：02772_element_check_02749 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.sound_led1;
      print(qcashier.screen82.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.sound_led1 = testData1;
      print(qcashier.screen82.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.sound_led1 = testData2;
      print(qcashier.screen82.sound_led1);
      expect(qcashier.screen82.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.sound_led1 = defalut;
      print(qcashier.screen82.sound_led1);
      expect(qcashier.screen82.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02772_element_check_02749 **********\n\n");
    });

    test('02773_element_check_02750', () async {
      print("\n********** テスト実行：02773_element_check_02750 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.sound_led2;
      print(qcashier.screen82.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.sound_led2 = testData1;
      print(qcashier.screen82.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.sound_led2 = testData2;
      print(qcashier.screen82.sound_led2);
      expect(qcashier.screen82.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.sound_led2 = defalut;
      print(qcashier.screen82.sound_led2);
      expect(qcashier.screen82.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02773_element_check_02750 **********\n\n");
    });

    test('02774_element_check_02751', () async {
      print("\n********** テスト実行：02774_element_check_02751 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen82.sound_led3;
      print(qcashier.screen82.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen82.sound_led3 = testData1;
      print(qcashier.screen82.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen82.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen82.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen82.sound_led3 = testData2;
      print(qcashier.screen82.sound_led3);
      expect(qcashier.screen82.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen82.sound_led3 = defalut;
      print(qcashier.screen82.sound_led3);
      expect(qcashier.screen82.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen82.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02774_element_check_02751 **********\n\n");
    });

    test('02775_element_check_02752', () async {
      print("\n********** テスト実行：02775_element_check_02752 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.title;
      print(qcashier.screen83.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.title = testData1s;
      print(qcashier.screen83.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.title = testData2s;
      print(qcashier.screen83.title);
      expect(qcashier.screen83.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.title = defalut;
      print(qcashier.screen83.title);
      expect(qcashier.screen83.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02775_element_check_02752 **********\n\n");
    });

    test('02776_element_check_02753', () async {
      print("\n********** テスト実行：02776_element_check_02753 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.msg1;
      print(qcashier.screen83.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.msg1 = testData1s;
      print(qcashier.screen83.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.msg1 = testData2s;
      print(qcashier.screen83.msg1);
      expect(qcashier.screen83.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.msg1 = defalut;
      print(qcashier.screen83.msg1);
      expect(qcashier.screen83.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02776_element_check_02753 **********\n\n");
    });

    test('02777_element_check_02754', () async {
      print("\n********** テスト実行：02777_element_check_02754 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.msg2;
      print(qcashier.screen83.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.msg2 = testData1s;
      print(qcashier.screen83.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.msg2 = testData2s;
      print(qcashier.screen83.msg2);
      expect(qcashier.screen83.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.msg2 = defalut;
      print(qcashier.screen83.msg2);
      expect(qcashier.screen83.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02777_element_check_02754 **********\n\n");
    });

    test('02778_element_check_02755', () async {
      print("\n********** テスト実行：02778_element_check_02755 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.msg1_size;
      print(qcashier.screen83.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.msg1_size = testData1;
      print(qcashier.screen83.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.msg1_size = testData2;
      print(qcashier.screen83.msg1_size);
      expect(qcashier.screen83.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.msg1_size = defalut;
      print(qcashier.screen83.msg1_size);
      expect(qcashier.screen83.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02778_element_check_02755 **********\n\n");
    });

    test('02779_element_check_02756', () async {
      print("\n********** テスト実行：02779_element_check_02756 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.msg2_size;
      print(qcashier.screen83.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.msg2_size = testData1;
      print(qcashier.screen83.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.msg2_size = testData2;
      print(qcashier.screen83.msg2_size);
      expect(qcashier.screen83.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.msg2_size = defalut;
      print(qcashier.screen83.msg2_size);
      expect(qcashier.screen83.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02779_element_check_02756 **********\n\n");
    });

    test('02780_element_check_02757', () async {
      print("\n********** テスト実行：02780_element_check_02757 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.sound1;
      print(qcashier.screen83.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.sound1 = testData1;
      print(qcashier.screen83.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.sound1 = testData2;
      print(qcashier.screen83.sound1);
      expect(qcashier.screen83.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.sound1 = defalut;
      print(qcashier.screen83.sound1);
      expect(qcashier.screen83.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02780_element_check_02757 **********\n\n");
    });

    test('02781_element_check_02758', () async {
      print("\n********** テスト実行：02781_element_check_02758 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.sound2;
      print(qcashier.screen83.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.sound2 = testData1;
      print(qcashier.screen83.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.sound2 = testData2;
      print(qcashier.screen83.sound2);
      expect(qcashier.screen83.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.sound2 = defalut;
      print(qcashier.screen83.sound2);
      expect(qcashier.screen83.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02781_element_check_02758 **********\n\n");
    });

    test('02782_element_check_02759', () async {
      print("\n********** テスト実行：02782_element_check_02759 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.sound3;
      print(qcashier.screen83.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.sound3 = testData1;
      print(qcashier.screen83.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.sound3 = testData2;
      print(qcashier.screen83.sound3);
      expect(qcashier.screen83.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.sound3 = defalut;
      print(qcashier.screen83.sound3);
      expect(qcashier.screen83.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02782_element_check_02759 **********\n\n");
    });

    test('02783_element_check_02760', () async {
      print("\n********** テスト実行：02783_element_check_02760 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.snd_timer;
      print(qcashier.screen83.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.snd_timer = testData1;
      print(qcashier.screen83.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.snd_timer = testData2;
      print(qcashier.screen83.snd_timer);
      expect(qcashier.screen83.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.snd_timer = defalut;
      print(qcashier.screen83.snd_timer);
      expect(qcashier.screen83.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02783_element_check_02760 **********\n\n");
    });

    test('02784_element_check_02761', () async {
      print("\n********** テスト実行：02784_element_check_02761 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.timer1;
      print(qcashier.screen83.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.timer1 = testData1;
      print(qcashier.screen83.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.timer1 = testData2;
      print(qcashier.screen83.timer1);
      expect(qcashier.screen83.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.timer1 = defalut;
      print(qcashier.screen83.timer1);
      expect(qcashier.screen83.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02784_element_check_02761 **********\n\n");
    });

    test('02785_element_check_02762', () async {
      print("\n********** テスト実行：02785_element_check_02762 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.timer2;
      print(qcashier.screen83.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.timer2 = testData1;
      print(qcashier.screen83.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.timer2 = testData2;
      print(qcashier.screen83.timer2);
      expect(qcashier.screen83.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.timer2 = defalut;
      print(qcashier.screen83.timer2);
      expect(qcashier.screen83.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02785_element_check_02762 **********\n\n");
    });

    test('02786_element_check_02763', () async {
      print("\n********** テスト実行：02786_element_check_02763 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.timer3;
      print(qcashier.screen83.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.timer3 = testData1;
      print(qcashier.screen83.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.timer3 = testData2;
      print(qcashier.screen83.timer3);
      expect(qcashier.screen83.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.timer3 = defalut;
      print(qcashier.screen83.timer3);
      expect(qcashier.screen83.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02786_element_check_02763 **********\n\n");
    });

    test('02787_element_check_02764', () async {
      print("\n********** テスト実行：02787_element_check_02764 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.dsp_flg1;
      print(qcashier.screen83.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.dsp_flg1 = testData1;
      print(qcashier.screen83.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.dsp_flg1 = testData2;
      print(qcashier.screen83.dsp_flg1);
      expect(qcashier.screen83.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.dsp_flg1 = defalut;
      print(qcashier.screen83.dsp_flg1);
      expect(qcashier.screen83.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02787_element_check_02764 **********\n\n");
    });

    test('02788_element_check_02765', () async {
      print("\n********** テスト実行：02788_element_check_02765 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.dsp_flg2;
      print(qcashier.screen83.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.dsp_flg2 = testData1;
      print(qcashier.screen83.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.dsp_flg2 = testData2;
      print(qcashier.screen83.dsp_flg2);
      expect(qcashier.screen83.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.dsp_flg2 = defalut;
      print(qcashier.screen83.dsp_flg2);
      expect(qcashier.screen83.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02788_element_check_02765 **********\n\n");
    });

    test('02789_element_check_02766', () async {
      print("\n********** テスト実行：02789_element_check_02766 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.movie01_ext;
      print(qcashier.screen83.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.movie01_ext = testData1;
      print(qcashier.screen83.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.movie01_ext = testData2;
      print(qcashier.screen83.movie01_ext);
      expect(qcashier.screen83.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.movie01_ext = defalut;
      print(qcashier.screen83.movie01_ext);
      expect(qcashier.screen83.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02789_element_check_02766 **********\n\n");
    });

    test('02790_element_check_02767', () async {
      print("\n********** テスト実行：02790_element_check_02767 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.movie02_ext;
      print(qcashier.screen83.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.movie02_ext = testData1;
      print(qcashier.screen83.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.movie02_ext = testData2;
      print(qcashier.screen83.movie02_ext);
      expect(qcashier.screen83.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.movie02_ext = defalut;
      print(qcashier.screen83.movie02_ext);
      expect(qcashier.screen83.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02790_element_check_02767 **********\n\n");
    });

    test('02791_element_check_02768', () async {
      print("\n********** テスト実行：02791_element_check_02768 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.movie03_ext;
      print(qcashier.screen83.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.movie03_ext = testData1;
      print(qcashier.screen83.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.movie03_ext = testData2;
      print(qcashier.screen83.movie03_ext);
      expect(qcashier.screen83.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.movie03_ext = defalut;
      print(qcashier.screen83.movie03_ext);
      expect(qcashier.screen83.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02791_element_check_02768 **********\n\n");
    });

    test('02792_element_check_02769', () async {
      print("\n********** テスト実行：02792_element_check_02769 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.movie04_ext;
      print(qcashier.screen83.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.movie04_ext = testData1;
      print(qcashier.screen83.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.movie04_ext = testData2;
      print(qcashier.screen83.movie04_ext);
      expect(qcashier.screen83.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.movie04_ext = defalut;
      print(qcashier.screen83.movie04_ext);
      expect(qcashier.screen83.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02792_element_check_02769 **********\n\n");
    });

    test('02793_element_check_02770', () async {
      print("\n********** テスト実行：02793_element_check_02770 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line_title;
      print(qcashier.screen83.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line_title = testData1s;
      print(qcashier.screen83.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line_title = testData2s;
      print(qcashier.screen83.line_title);
      expect(qcashier.screen83.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line_title = defalut;
      print(qcashier.screen83.line_title);
      expect(qcashier.screen83.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02793_element_check_02770 **********\n\n");
    });

    test('02794_element_check_02771', () async {
      print("\n********** テスト実行：02794_element_check_02771 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line_title_ex;
      print(qcashier.screen83.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line_title_ex = testData1s;
      print(qcashier.screen83.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line_title_ex = testData2s;
      print(qcashier.screen83.line_title_ex);
      expect(qcashier.screen83.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line_title_ex = defalut;
      print(qcashier.screen83.line_title_ex);
      expect(qcashier.screen83.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02794_element_check_02771 **********\n\n");
    });

    test('02795_element_check_02772', () async {
      print("\n********** テスト実行：02795_element_check_02772 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line1;
      print(qcashier.screen83.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line1 = testData1s;
      print(qcashier.screen83.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line1 = testData2s;
      print(qcashier.screen83.line1);
      expect(qcashier.screen83.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line1 = defalut;
      print(qcashier.screen83.line1);
      expect(qcashier.screen83.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02795_element_check_02772 **********\n\n");
    });

    test('02796_element_check_02773', () async {
      print("\n********** テスト実行：02796_element_check_02773 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line2;
      print(qcashier.screen83.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line2 = testData1s;
      print(qcashier.screen83.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line2 = testData2s;
      print(qcashier.screen83.line2);
      expect(qcashier.screen83.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line2 = defalut;
      print(qcashier.screen83.line2);
      expect(qcashier.screen83.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02796_element_check_02773 **********\n\n");
    });

    test('02797_element_check_02774', () async {
      print("\n********** テスト実行：02797_element_check_02774 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line3;
      print(qcashier.screen83.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line3 = testData1s;
      print(qcashier.screen83.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line3 = testData2s;
      print(qcashier.screen83.line3);
      expect(qcashier.screen83.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line3 = defalut;
      print(qcashier.screen83.line3);
      expect(qcashier.screen83.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02797_element_check_02774 **********\n\n");
    });

    test('02798_element_check_02775', () async {
      print("\n********** テスト実行：02798_element_check_02775 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line4;
      print(qcashier.screen83.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line4 = testData1s;
      print(qcashier.screen83.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line4 = testData2s;
      print(qcashier.screen83.line4);
      expect(qcashier.screen83.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line4 = defalut;
      print(qcashier.screen83.line4);
      expect(qcashier.screen83.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02798_element_check_02775 **********\n\n");
    });

    test('02799_element_check_02776', () async {
      print("\n********** テスト実行：02799_element_check_02776 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line1_ex;
      print(qcashier.screen83.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line1_ex = testData1s;
      print(qcashier.screen83.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line1_ex = testData2s;
      print(qcashier.screen83.line1_ex);
      expect(qcashier.screen83.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line1_ex = defalut;
      print(qcashier.screen83.line1_ex);
      expect(qcashier.screen83.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02799_element_check_02776 **********\n\n");
    });

    test('02800_element_check_02777', () async {
      print("\n********** テスト実行：02800_element_check_02777 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line2_ex;
      print(qcashier.screen83.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line2_ex = testData1s;
      print(qcashier.screen83.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line2_ex = testData2s;
      print(qcashier.screen83.line2_ex);
      expect(qcashier.screen83.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line2_ex = defalut;
      print(qcashier.screen83.line2_ex);
      expect(qcashier.screen83.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02800_element_check_02777 **********\n\n");
    });

    test('02801_element_check_02778', () async {
      print("\n********** テスト実行：02801_element_check_02778 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line3_ex;
      print(qcashier.screen83.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line3_ex = testData1s;
      print(qcashier.screen83.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line3_ex = testData2s;
      print(qcashier.screen83.line3_ex);
      expect(qcashier.screen83.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line3_ex = defalut;
      print(qcashier.screen83.line3_ex);
      expect(qcashier.screen83.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02801_element_check_02778 **********\n\n");
    });

    test('02802_element_check_02779', () async {
      print("\n********** テスト実行：02802_element_check_02779 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.line4_ex;
      print(qcashier.screen83.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.line4_ex = testData1s;
      print(qcashier.screen83.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.line4_ex = testData2s;
      print(qcashier.screen83.line4_ex);
      expect(qcashier.screen83.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.line4_ex = defalut;
      print(qcashier.screen83.line4_ex);
      expect(qcashier.screen83.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02802_element_check_02779 **********\n\n");
    });

    test('02803_element_check_02780', () async {
      print("\n********** テスト実行：02803_element_check_02780 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.sound_led1;
      print(qcashier.screen83.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.sound_led1 = testData1;
      print(qcashier.screen83.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.sound_led1 = testData2;
      print(qcashier.screen83.sound_led1);
      expect(qcashier.screen83.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.sound_led1 = defalut;
      print(qcashier.screen83.sound_led1);
      expect(qcashier.screen83.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02803_element_check_02780 **********\n\n");
    });

    test('02804_element_check_02781', () async {
      print("\n********** テスト実行：02804_element_check_02781 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.sound_led2;
      print(qcashier.screen83.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.sound_led2 = testData1;
      print(qcashier.screen83.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.sound_led2 = testData2;
      print(qcashier.screen83.sound_led2);
      expect(qcashier.screen83.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.sound_led2 = defalut;
      print(qcashier.screen83.sound_led2);
      expect(qcashier.screen83.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02804_element_check_02781 **********\n\n");
    });

    test('02805_element_check_02782', () async {
      print("\n********** テスト実行：02805_element_check_02782 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen83.sound_led3;
      print(qcashier.screen83.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen83.sound_led3 = testData1;
      print(qcashier.screen83.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen83.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen83.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen83.sound_led3 = testData2;
      print(qcashier.screen83.sound_led3);
      expect(qcashier.screen83.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen83.sound_led3 = defalut;
      print(qcashier.screen83.sound_led3);
      expect(qcashier.screen83.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen83.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02805_element_check_02782 **********\n\n");
    });

    test('02806_element_check_02783', () async {
      print("\n********** テスト実行：02806_element_check_02783 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.title;
      print(qcashier.screen84.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.title = testData1s;
      print(qcashier.screen84.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.title = testData2s;
      print(qcashier.screen84.title);
      expect(qcashier.screen84.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.title = defalut;
      print(qcashier.screen84.title);
      expect(qcashier.screen84.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02806_element_check_02783 **********\n\n");
    });

    test('02807_element_check_02784', () async {
      print("\n********** テスト実行：02807_element_check_02784 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.msg1;
      print(qcashier.screen84.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.msg1 = testData1s;
      print(qcashier.screen84.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.msg1 = testData2s;
      print(qcashier.screen84.msg1);
      expect(qcashier.screen84.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.msg1 = defalut;
      print(qcashier.screen84.msg1);
      expect(qcashier.screen84.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02807_element_check_02784 **********\n\n");
    });

    test('02808_element_check_02785', () async {
      print("\n********** テスト実行：02808_element_check_02785 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.msg2;
      print(qcashier.screen84.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.msg2 = testData1s;
      print(qcashier.screen84.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.msg2 = testData2s;
      print(qcashier.screen84.msg2);
      expect(qcashier.screen84.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.msg2 = defalut;
      print(qcashier.screen84.msg2);
      expect(qcashier.screen84.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02808_element_check_02785 **********\n\n");
    });

    test('02809_element_check_02786', () async {
      print("\n********** テスト実行：02809_element_check_02786 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.msg1_size;
      print(qcashier.screen84.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.msg1_size = testData1;
      print(qcashier.screen84.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.msg1_size = testData2;
      print(qcashier.screen84.msg1_size);
      expect(qcashier.screen84.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.msg1_size = defalut;
      print(qcashier.screen84.msg1_size);
      expect(qcashier.screen84.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02809_element_check_02786 **********\n\n");
    });

    test('02810_element_check_02787', () async {
      print("\n********** テスト実行：02810_element_check_02787 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.msg2_size;
      print(qcashier.screen84.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.msg2_size = testData1;
      print(qcashier.screen84.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.msg2_size = testData2;
      print(qcashier.screen84.msg2_size);
      expect(qcashier.screen84.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.msg2_size = defalut;
      print(qcashier.screen84.msg2_size);
      expect(qcashier.screen84.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02810_element_check_02787 **********\n\n");
    });

    test('02811_element_check_02788', () async {
      print("\n********** テスト実行：02811_element_check_02788 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.sound1;
      print(qcashier.screen84.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.sound1 = testData1;
      print(qcashier.screen84.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.sound1 = testData2;
      print(qcashier.screen84.sound1);
      expect(qcashier.screen84.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.sound1 = defalut;
      print(qcashier.screen84.sound1);
      expect(qcashier.screen84.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02811_element_check_02788 **********\n\n");
    });

    test('02812_element_check_02789', () async {
      print("\n********** テスト実行：02812_element_check_02789 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.sound2;
      print(qcashier.screen84.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.sound2 = testData1;
      print(qcashier.screen84.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.sound2 = testData2;
      print(qcashier.screen84.sound2);
      expect(qcashier.screen84.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.sound2 = defalut;
      print(qcashier.screen84.sound2);
      expect(qcashier.screen84.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02812_element_check_02789 **********\n\n");
    });

    test('02813_element_check_02790', () async {
      print("\n********** テスト実行：02813_element_check_02790 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.sound3;
      print(qcashier.screen84.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.sound3 = testData1;
      print(qcashier.screen84.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.sound3 = testData2;
      print(qcashier.screen84.sound3);
      expect(qcashier.screen84.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.sound3 = defalut;
      print(qcashier.screen84.sound3);
      expect(qcashier.screen84.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02813_element_check_02790 **********\n\n");
    });

    test('02814_element_check_02791', () async {
      print("\n********** テスト実行：02814_element_check_02791 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.snd_timer;
      print(qcashier.screen84.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.snd_timer = testData1;
      print(qcashier.screen84.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.snd_timer = testData2;
      print(qcashier.screen84.snd_timer);
      expect(qcashier.screen84.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.snd_timer = defalut;
      print(qcashier.screen84.snd_timer);
      expect(qcashier.screen84.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02814_element_check_02791 **********\n\n");
    });

    test('02815_element_check_02792', () async {
      print("\n********** テスト実行：02815_element_check_02792 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.timer1;
      print(qcashier.screen84.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.timer1 = testData1;
      print(qcashier.screen84.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.timer1 = testData2;
      print(qcashier.screen84.timer1);
      expect(qcashier.screen84.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.timer1 = defalut;
      print(qcashier.screen84.timer1);
      expect(qcashier.screen84.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02815_element_check_02792 **********\n\n");
    });

    test('02816_element_check_02793', () async {
      print("\n********** テスト実行：02816_element_check_02793 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.timer2;
      print(qcashier.screen84.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.timer2 = testData1;
      print(qcashier.screen84.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.timer2 = testData2;
      print(qcashier.screen84.timer2);
      expect(qcashier.screen84.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.timer2 = defalut;
      print(qcashier.screen84.timer2);
      expect(qcashier.screen84.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02816_element_check_02793 **********\n\n");
    });

    test('02817_element_check_02794', () async {
      print("\n********** テスト実行：02817_element_check_02794 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.timer3;
      print(qcashier.screen84.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.timer3 = testData1;
      print(qcashier.screen84.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.timer3 = testData2;
      print(qcashier.screen84.timer3);
      expect(qcashier.screen84.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.timer3 = defalut;
      print(qcashier.screen84.timer3);
      expect(qcashier.screen84.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02817_element_check_02794 **********\n\n");
    });

    test('02818_element_check_02795', () async {
      print("\n********** テスト実行：02818_element_check_02795 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.dsp_flg1;
      print(qcashier.screen84.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.dsp_flg1 = testData1;
      print(qcashier.screen84.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.dsp_flg1 = testData2;
      print(qcashier.screen84.dsp_flg1);
      expect(qcashier.screen84.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.dsp_flg1 = defalut;
      print(qcashier.screen84.dsp_flg1);
      expect(qcashier.screen84.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02818_element_check_02795 **********\n\n");
    });

    test('02819_element_check_02796', () async {
      print("\n********** テスト実行：02819_element_check_02796 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.dsp_flg2;
      print(qcashier.screen84.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.dsp_flg2 = testData1;
      print(qcashier.screen84.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.dsp_flg2 = testData2;
      print(qcashier.screen84.dsp_flg2);
      expect(qcashier.screen84.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.dsp_flg2 = defalut;
      print(qcashier.screen84.dsp_flg2);
      expect(qcashier.screen84.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02819_element_check_02796 **********\n\n");
    });

    test('02820_element_check_02797', () async {
      print("\n********** テスト実行：02820_element_check_02797 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.movie01_ext;
      print(qcashier.screen84.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.movie01_ext = testData1;
      print(qcashier.screen84.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.movie01_ext = testData2;
      print(qcashier.screen84.movie01_ext);
      expect(qcashier.screen84.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.movie01_ext = defalut;
      print(qcashier.screen84.movie01_ext);
      expect(qcashier.screen84.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02820_element_check_02797 **********\n\n");
    });

    test('02821_element_check_02798', () async {
      print("\n********** テスト実行：02821_element_check_02798 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.movie02_ext;
      print(qcashier.screen84.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.movie02_ext = testData1;
      print(qcashier.screen84.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.movie02_ext = testData2;
      print(qcashier.screen84.movie02_ext);
      expect(qcashier.screen84.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.movie02_ext = defalut;
      print(qcashier.screen84.movie02_ext);
      expect(qcashier.screen84.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02821_element_check_02798 **********\n\n");
    });

    test('02822_element_check_02799', () async {
      print("\n********** テスト実行：02822_element_check_02799 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.movie03_ext;
      print(qcashier.screen84.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.movie03_ext = testData1;
      print(qcashier.screen84.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.movie03_ext = testData2;
      print(qcashier.screen84.movie03_ext);
      expect(qcashier.screen84.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.movie03_ext = defalut;
      print(qcashier.screen84.movie03_ext);
      expect(qcashier.screen84.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02822_element_check_02799 **********\n\n");
    });

    test('02823_element_check_02800', () async {
      print("\n********** テスト実行：02823_element_check_02800 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.movie04_ext;
      print(qcashier.screen84.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.movie04_ext = testData1;
      print(qcashier.screen84.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.movie04_ext = testData2;
      print(qcashier.screen84.movie04_ext);
      expect(qcashier.screen84.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.movie04_ext = defalut;
      print(qcashier.screen84.movie04_ext);
      expect(qcashier.screen84.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02823_element_check_02800 **********\n\n");
    });

    test('02824_element_check_02801', () async {
      print("\n********** テスト実行：02824_element_check_02801 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line_title;
      print(qcashier.screen84.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line_title = testData1s;
      print(qcashier.screen84.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line_title = testData2s;
      print(qcashier.screen84.line_title);
      expect(qcashier.screen84.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line_title = defalut;
      print(qcashier.screen84.line_title);
      expect(qcashier.screen84.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02824_element_check_02801 **********\n\n");
    });

    test('02825_element_check_02802', () async {
      print("\n********** テスト実行：02825_element_check_02802 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line_title_ex;
      print(qcashier.screen84.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line_title_ex = testData1s;
      print(qcashier.screen84.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line_title_ex = testData2s;
      print(qcashier.screen84.line_title_ex);
      expect(qcashier.screen84.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line_title_ex = defalut;
      print(qcashier.screen84.line_title_ex);
      expect(qcashier.screen84.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02825_element_check_02802 **********\n\n");
    });

    test('02826_element_check_02803', () async {
      print("\n********** テスト実行：02826_element_check_02803 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line1;
      print(qcashier.screen84.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line1 = testData1s;
      print(qcashier.screen84.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line1 = testData2s;
      print(qcashier.screen84.line1);
      expect(qcashier.screen84.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line1 = defalut;
      print(qcashier.screen84.line1);
      expect(qcashier.screen84.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02826_element_check_02803 **********\n\n");
    });

    test('02827_element_check_02804', () async {
      print("\n********** テスト実行：02827_element_check_02804 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line2;
      print(qcashier.screen84.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line2 = testData1s;
      print(qcashier.screen84.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line2 = testData2s;
      print(qcashier.screen84.line2);
      expect(qcashier.screen84.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line2 = defalut;
      print(qcashier.screen84.line2);
      expect(qcashier.screen84.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02827_element_check_02804 **********\n\n");
    });

    test('02828_element_check_02805', () async {
      print("\n********** テスト実行：02828_element_check_02805 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line3;
      print(qcashier.screen84.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line3 = testData1s;
      print(qcashier.screen84.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line3 = testData2s;
      print(qcashier.screen84.line3);
      expect(qcashier.screen84.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line3 = defalut;
      print(qcashier.screen84.line3);
      expect(qcashier.screen84.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02828_element_check_02805 **********\n\n");
    });

    test('02829_element_check_02806', () async {
      print("\n********** テスト実行：02829_element_check_02806 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line4;
      print(qcashier.screen84.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line4 = testData1s;
      print(qcashier.screen84.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line4 = testData2s;
      print(qcashier.screen84.line4);
      expect(qcashier.screen84.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line4 = defalut;
      print(qcashier.screen84.line4);
      expect(qcashier.screen84.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02829_element_check_02806 **********\n\n");
    });

    test('02830_element_check_02807', () async {
      print("\n********** テスト実行：02830_element_check_02807 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line1_ex;
      print(qcashier.screen84.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line1_ex = testData1s;
      print(qcashier.screen84.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line1_ex = testData2s;
      print(qcashier.screen84.line1_ex);
      expect(qcashier.screen84.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line1_ex = defalut;
      print(qcashier.screen84.line1_ex);
      expect(qcashier.screen84.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02830_element_check_02807 **********\n\n");
    });

    test('02831_element_check_02808', () async {
      print("\n********** テスト実行：02831_element_check_02808 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line2_ex;
      print(qcashier.screen84.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line2_ex = testData1s;
      print(qcashier.screen84.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line2_ex = testData2s;
      print(qcashier.screen84.line2_ex);
      expect(qcashier.screen84.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line2_ex = defalut;
      print(qcashier.screen84.line2_ex);
      expect(qcashier.screen84.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02831_element_check_02808 **********\n\n");
    });

    test('02832_element_check_02809', () async {
      print("\n********** テスト実行：02832_element_check_02809 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line3_ex;
      print(qcashier.screen84.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line3_ex = testData1s;
      print(qcashier.screen84.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line3_ex = testData2s;
      print(qcashier.screen84.line3_ex);
      expect(qcashier.screen84.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line3_ex = defalut;
      print(qcashier.screen84.line3_ex);
      expect(qcashier.screen84.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02832_element_check_02809 **********\n\n");
    });

    test('02833_element_check_02810', () async {
      print("\n********** テスト実行：02833_element_check_02810 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.line4_ex;
      print(qcashier.screen84.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.line4_ex = testData1s;
      print(qcashier.screen84.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.line4_ex = testData2s;
      print(qcashier.screen84.line4_ex);
      expect(qcashier.screen84.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.line4_ex = defalut;
      print(qcashier.screen84.line4_ex);
      expect(qcashier.screen84.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02833_element_check_02810 **********\n\n");
    });

    test('02834_element_check_02811', () async {
      print("\n********** テスト実行：02834_element_check_02811 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.sound_led1;
      print(qcashier.screen84.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.sound_led1 = testData1;
      print(qcashier.screen84.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.sound_led1 = testData2;
      print(qcashier.screen84.sound_led1);
      expect(qcashier.screen84.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.sound_led1 = defalut;
      print(qcashier.screen84.sound_led1);
      expect(qcashier.screen84.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02834_element_check_02811 **********\n\n");
    });

    test('02835_element_check_02812', () async {
      print("\n********** テスト実行：02835_element_check_02812 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.sound_led2;
      print(qcashier.screen84.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.sound_led2 = testData1;
      print(qcashier.screen84.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.sound_led2 = testData2;
      print(qcashier.screen84.sound_led2);
      expect(qcashier.screen84.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.sound_led2 = defalut;
      print(qcashier.screen84.sound_led2);
      expect(qcashier.screen84.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02835_element_check_02812 **********\n\n");
    });

    test('02836_element_check_02813', () async {
      print("\n********** テスト実行：02836_element_check_02813 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen84.sound_led3;
      print(qcashier.screen84.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen84.sound_led3 = testData1;
      print(qcashier.screen84.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen84.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen84.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen84.sound_led3 = testData2;
      print(qcashier.screen84.sound_led3);
      expect(qcashier.screen84.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen84.sound_led3 = defalut;
      print(qcashier.screen84.sound_led3);
      expect(qcashier.screen84.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen84.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02836_element_check_02813 **********\n\n");
    });

    test('02837_element_check_02814', () async {
      print("\n********** テスト実行：02837_element_check_02814 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.title;
      print(qcashier.screen85.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.title = testData1s;
      print(qcashier.screen85.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.title = testData2s;
      print(qcashier.screen85.title);
      expect(qcashier.screen85.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.title = defalut;
      print(qcashier.screen85.title);
      expect(qcashier.screen85.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02837_element_check_02814 **********\n\n");
    });

    test('02838_element_check_02815', () async {
      print("\n********** テスト実行：02838_element_check_02815 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.msg1;
      print(qcashier.screen85.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.msg1 = testData1s;
      print(qcashier.screen85.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.msg1 = testData2s;
      print(qcashier.screen85.msg1);
      expect(qcashier.screen85.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.msg1 = defalut;
      print(qcashier.screen85.msg1);
      expect(qcashier.screen85.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02838_element_check_02815 **********\n\n");
    });

    test('02839_element_check_02816', () async {
      print("\n********** テスト実行：02839_element_check_02816 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.msg2;
      print(qcashier.screen85.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.msg2 = testData1s;
      print(qcashier.screen85.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.msg2 = testData2s;
      print(qcashier.screen85.msg2);
      expect(qcashier.screen85.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.msg2 = defalut;
      print(qcashier.screen85.msg2);
      expect(qcashier.screen85.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02839_element_check_02816 **********\n\n");
    });

    test('02840_element_check_02817', () async {
      print("\n********** テスト実行：02840_element_check_02817 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.msg1_size;
      print(qcashier.screen85.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.msg1_size = testData1;
      print(qcashier.screen85.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.msg1_size = testData2;
      print(qcashier.screen85.msg1_size);
      expect(qcashier.screen85.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.msg1_size = defalut;
      print(qcashier.screen85.msg1_size);
      expect(qcashier.screen85.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02840_element_check_02817 **********\n\n");
    });

    test('02841_element_check_02818', () async {
      print("\n********** テスト実行：02841_element_check_02818 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.msg2_size;
      print(qcashier.screen85.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.msg2_size = testData1;
      print(qcashier.screen85.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.msg2_size = testData2;
      print(qcashier.screen85.msg2_size);
      expect(qcashier.screen85.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.msg2_size = defalut;
      print(qcashier.screen85.msg2_size);
      expect(qcashier.screen85.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02841_element_check_02818 **********\n\n");
    });

    test('02842_element_check_02819', () async {
      print("\n********** テスト実行：02842_element_check_02819 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.sound1;
      print(qcashier.screen85.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.sound1 = testData1;
      print(qcashier.screen85.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.sound1 = testData2;
      print(qcashier.screen85.sound1);
      expect(qcashier.screen85.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.sound1 = defalut;
      print(qcashier.screen85.sound1);
      expect(qcashier.screen85.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02842_element_check_02819 **********\n\n");
    });

    test('02843_element_check_02820', () async {
      print("\n********** テスト実行：02843_element_check_02820 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.sound2;
      print(qcashier.screen85.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.sound2 = testData1;
      print(qcashier.screen85.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.sound2 = testData2;
      print(qcashier.screen85.sound2);
      expect(qcashier.screen85.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.sound2 = defalut;
      print(qcashier.screen85.sound2);
      expect(qcashier.screen85.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02843_element_check_02820 **********\n\n");
    });

    test('02844_element_check_02821', () async {
      print("\n********** テスト実行：02844_element_check_02821 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.sound3;
      print(qcashier.screen85.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.sound3 = testData1;
      print(qcashier.screen85.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.sound3 = testData2;
      print(qcashier.screen85.sound3);
      expect(qcashier.screen85.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.sound3 = defalut;
      print(qcashier.screen85.sound3);
      expect(qcashier.screen85.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02844_element_check_02821 **********\n\n");
    });

    test('02845_element_check_02822', () async {
      print("\n********** テスト実行：02845_element_check_02822 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.snd_timer;
      print(qcashier.screen85.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.snd_timer = testData1;
      print(qcashier.screen85.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.snd_timer = testData2;
      print(qcashier.screen85.snd_timer);
      expect(qcashier.screen85.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.snd_timer = defalut;
      print(qcashier.screen85.snd_timer);
      expect(qcashier.screen85.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02845_element_check_02822 **********\n\n");
    });

    test('02846_element_check_02823', () async {
      print("\n********** テスト実行：02846_element_check_02823 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.timer1;
      print(qcashier.screen85.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.timer1 = testData1;
      print(qcashier.screen85.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.timer1 = testData2;
      print(qcashier.screen85.timer1);
      expect(qcashier.screen85.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.timer1 = defalut;
      print(qcashier.screen85.timer1);
      expect(qcashier.screen85.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02846_element_check_02823 **********\n\n");
    });

    test('02847_element_check_02824', () async {
      print("\n********** テスト実行：02847_element_check_02824 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.timer2;
      print(qcashier.screen85.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.timer2 = testData1;
      print(qcashier.screen85.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.timer2 = testData2;
      print(qcashier.screen85.timer2);
      expect(qcashier.screen85.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.timer2 = defalut;
      print(qcashier.screen85.timer2);
      expect(qcashier.screen85.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02847_element_check_02824 **********\n\n");
    });

    test('02848_element_check_02825', () async {
      print("\n********** テスト実行：02848_element_check_02825 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.timer3;
      print(qcashier.screen85.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.timer3 = testData1;
      print(qcashier.screen85.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.timer3 = testData2;
      print(qcashier.screen85.timer3);
      expect(qcashier.screen85.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.timer3 = defalut;
      print(qcashier.screen85.timer3);
      expect(qcashier.screen85.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02848_element_check_02825 **********\n\n");
    });

    test('02849_element_check_02826', () async {
      print("\n********** テスト実行：02849_element_check_02826 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.dsp_flg1;
      print(qcashier.screen85.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.dsp_flg1 = testData1;
      print(qcashier.screen85.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.dsp_flg1 = testData2;
      print(qcashier.screen85.dsp_flg1);
      expect(qcashier.screen85.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.dsp_flg1 = defalut;
      print(qcashier.screen85.dsp_flg1);
      expect(qcashier.screen85.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02849_element_check_02826 **********\n\n");
    });

    test('02850_element_check_02827', () async {
      print("\n********** テスト実行：02850_element_check_02827 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.dsp_flg2;
      print(qcashier.screen85.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.dsp_flg2 = testData1;
      print(qcashier.screen85.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.dsp_flg2 = testData2;
      print(qcashier.screen85.dsp_flg2);
      expect(qcashier.screen85.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.dsp_flg2 = defalut;
      print(qcashier.screen85.dsp_flg2);
      expect(qcashier.screen85.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02850_element_check_02827 **********\n\n");
    });

    test('02851_element_check_02828', () async {
      print("\n********** テスト実行：02851_element_check_02828 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.movie01_ext;
      print(qcashier.screen85.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.movie01_ext = testData1;
      print(qcashier.screen85.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.movie01_ext = testData2;
      print(qcashier.screen85.movie01_ext);
      expect(qcashier.screen85.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.movie01_ext = defalut;
      print(qcashier.screen85.movie01_ext);
      expect(qcashier.screen85.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02851_element_check_02828 **********\n\n");
    });

    test('02852_element_check_02829', () async {
      print("\n********** テスト実行：02852_element_check_02829 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.movie02_ext;
      print(qcashier.screen85.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.movie02_ext = testData1;
      print(qcashier.screen85.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.movie02_ext = testData2;
      print(qcashier.screen85.movie02_ext);
      expect(qcashier.screen85.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.movie02_ext = defalut;
      print(qcashier.screen85.movie02_ext);
      expect(qcashier.screen85.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02852_element_check_02829 **********\n\n");
    });

    test('02853_element_check_02830', () async {
      print("\n********** テスト実行：02853_element_check_02830 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.movie03_ext;
      print(qcashier.screen85.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.movie03_ext = testData1;
      print(qcashier.screen85.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.movie03_ext = testData2;
      print(qcashier.screen85.movie03_ext);
      expect(qcashier.screen85.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.movie03_ext = defalut;
      print(qcashier.screen85.movie03_ext);
      expect(qcashier.screen85.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02853_element_check_02830 **********\n\n");
    });

    test('02854_element_check_02831', () async {
      print("\n********** テスト実行：02854_element_check_02831 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.movie04_ext;
      print(qcashier.screen85.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.movie04_ext = testData1;
      print(qcashier.screen85.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.movie04_ext = testData2;
      print(qcashier.screen85.movie04_ext);
      expect(qcashier.screen85.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.movie04_ext = defalut;
      print(qcashier.screen85.movie04_ext);
      expect(qcashier.screen85.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02854_element_check_02831 **********\n\n");
    });

    test('02855_element_check_02832', () async {
      print("\n********** テスト実行：02855_element_check_02832 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line_title;
      print(qcashier.screen85.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line_title = testData1s;
      print(qcashier.screen85.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line_title = testData2s;
      print(qcashier.screen85.line_title);
      expect(qcashier.screen85.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line_title = defalut;
      print(qcashier.screen85.line_title);
      expect(qcashier.screen85.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02855_element_check_02832 **********\n\n");
    });

    test('02856_element_check_02833', () async {
      print("\n********** テスト実行：02856_element_check_02833 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line_title_ex;
      print(qcashier.screen85.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line_title_ex = testData1s;
      print(qcashier.screen85.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line_title_ex = testData2s;
      print(qcashier.screen85.line_title_ex);
      expect(qcashier.screen85.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line_title_ex = defalut;
      print(qcashier.screen85.line_title_ex);
      expect(qcashier.screen85.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02856_element_check_02833 **********\n\n");
    });

    test('02857_element_check_02834', () async {
      print("\n********** テスト実行：02857_element_check_02834 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line1;
      print(qcashier.screen85.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line1 = testData1s;
      print(qcashier.screen85.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line1 = testData2s;
      print(qcashier.screen85.line1);
      expect(qcashier.screen85.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line1 = defalut;
      print(qcashier.screen85.line1);
      expect(qcashier.screen85.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02857_element_check_02834 **********\n\n");
    });

    test('02858_element_check_02835', () async {
      print("\n********** テスト実行：02858_element_check_02835 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line2;
      print(qcashier.screen85.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line2 = testData1s;
      print(qcashier.screen85.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line2 = testData2s;
      print(qcashier.screen85.line2);
      expect(qcashier.screen85.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line2 = defalut;
      print(qcashier.screen85.line2);
      expect(qcashier.screen85.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02858_element_check_02835 **********\n\n");
    });

    test('02859_element_check_02836', () async {
      print("\n********** テスト実行：02859_element_check_02836 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line3;
      print(qcashier.screen85.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line3 = testData1s;
      print(qcashier.screen85.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line3 = testData2s;
      print(qcashier.screen85.line3);
      expect(qcashier.screen85.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line3 = defalut;
      print(qcashier.screen85.line3);
      expect(qcashier.screen85.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02859_element_check_02836 **********\n\n");
    });

    test('02860_element_check_02837', () async {
      print("\n********** テスト実行：02860_element_check_02837 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line4;
      print(qcashier.screen85.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line4 = testData1s;
      print(qcashier.screen85.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line4 = testData2s;
      print(qcashier.screen85.line4);
      expect(qcashier.screen85.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line4 = defalut;
      print(qcashier.screen85.line4);
      expect(qcashier.screen85.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02860_element_check_02837 **********\n\n");
    });

    test('02861_element_check_02838', () async {
      print("\n********** テスト実行：02861_element_check_02838 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line1_ex;
      print(qcashier.screen85.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line1_ex = testData1s;
      print(qcashier.screen85.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line1_ex = testData2s;
      print(qcashier.screen85.line1_ex);
      expect(qcashier.screen85.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line1_ex = defalut;
      print(qcashier.screen85.line1_ex);
      expect(qcashier.screen85.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02861_element_check_02838 **********\n\n");
    });

    test('02862_element_check_02839', () async {
      print("\n********** テスト実行：02862_element_check_02839 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line2_ex;
      print(qcashier.screen85.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line2_ex = testData1s;
      print(qcashier.screen85.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line2_ex = testData2s;
      print(qcashier.screen85.line2_ex);
      expect(qcashier.screen85.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line2_ex = defalut;
      print(qcashier.screen85.line2_ex);
      expect(qcashier.screen85.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02862_element_check_02839 **********\n\n");
    });

    test('02863_element_check_02840', () async {
      print("\n********** テスト実行：02863_element_check_02840 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line3_ex;
      print(qcashier.screen85.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line3_ex = testData1s;
      print(qcashier.screen85.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line3_ex = testData2s;
      print(qcashier.screen85.line3_ex);
      expect(qcashier.screen85.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line3_ex = defalut;
      print(qcashier.screen85.line3_ex);
      expect(qcashier.screen85.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02863_element_check_02840 **********\n\n");
    });

    test('02864_element_check_02841', () async {
      print("\n********** テスト実行：02864_element_check_02841 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.line4_ex;
      print(qcashier.screen85.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.line4_ex = testData1s;
      print(qcashier.screen85.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.line4_ex = testData2s;
      print(qcashier.screen85.line4_ex);
      expect(qcashier.screen85.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.line4_ex = defalut;
      print(qcashier.screen85.line4_ex);
      expect(qcashier.screen85.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02864_element_check_02841 **********\n\n");
    });

    test('02865_element_check_02842', () async {
      print("\n********** テスト実行：02865_element_check_02842 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.sound_led1;
      print(qcashier.screen85.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.sound_led1 = testData1;
      print(qcashier.screen85.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.sound_led1 = testData2;
      print(qcashier.screen85.sound_led1);
      expect(qcashier.screen85.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.sound_led1 = defalut;
      print(qcashier.screen85.sound_led1);
      expect(qcashier.screen85.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02865_element_check_02842 **********\n\n");
    });

    test('02866_element_check_02843', () async {
      print("\n********** テスト実行：02866_element_check_02843 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.sound_led2;
      print(qcashier.screen85.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.sound_led2 = testData1;
      print(qcashier.screen85.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.sound_led2 = testData2;
      print(qcashier.screen85.sound_led2);
      expect(qcashier.screen85.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.sound_led2 = defalut;
      print(qcashier.screen85.sound_led2);
      expect(qcashier.screen85.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02866_element_check_02843 **********\n\n");
    });

    test('02867_element_check_02844', () async {
      print("\n********** テスト実行：02867_element_check_02844 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen85.sound_led3;
      print(qcashier.screen85.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen85.sound_led3 = testData1;
      print(qcashier.screen85.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen85.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen85.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen85.sound_led3 = testData2;
      print(qcashier.screen85.sound_led3);
      expect(qcashier.screen85.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen85.sound_led3 = defalut;
      print(qcashier.screen85.sound_led3);
      expect(qcashier.screen85.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen85.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02867_element_check_02844 **********\n\n");
    });

    test('02868_element_check_02845', () async {
      print("\n********** テスト実行：02868_element_check_02845 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.title;
      print(qcashier.screen86.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.title = testData1s;
      print(qcashier.screen86.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.title = testData2s;
      print(qcashier.screen86.title);
      expect(qcashier.screen86.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.title = defalut;
      print(qcashier.screen86.title);
      expect(qcashier.screen86.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02868_element_check_02845 **********\n\n");
    });

    test('02869_element_check_02846', () async {
      print("\n********** テスト実行：02869_element_check_02846 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.msg1;
      print(qcashier.screen86.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.msg1 = testData1s;
      print(qcashier.screen86.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.msg1 = testData2s;
      print(qcashier.screen86.msg1);
      expect(qcashier.screen86.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.msg1 = defalut;
      print(qcashier.screen86.msg1);
      expect(qcashier.screen86.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02869_element_check_02846 **********\n\n");
    });

    test('02870_element_check_02847', () async {
      print("\n********** テスト実行：02870_element_check_02847 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.msg2;
      print(qcashier.screen86.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.msg2 = testData1s;
      print(qcashier.screen86.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.msg2 = testData2s;
      print(qcashier.screen86.msg2);
      expect(qcashier.screen86.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.msg2 = defalut;
      print(qcashier.screen86.msg2);
      expect(qcashier.screen86.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02870_element_check_02847 **********\n\n");
    });

    test('02871_element_check_02848', () async {
      print("\n********** テスト実行：02871_element_check_02848 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.msg1_size;
      print(qcashier.screen86.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.msg1_size = testData1;
      print(qcashier.screen86.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.msg1_size = testData2;
      print(qcashier.screen86.msg1_size);
      expect(qcashier.screen86.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.msg1_size = defalut;
      print(qcashier.screen86.msg1_size);
      expect(qcashier.screen86.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02871_element_check_02848 **********\n\n");
    });

    test('02872_element_check_02849', () async {
      print("\n********** テスト実行：02872_element_check_02849 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.msg2_size;
      print(qcashier.screen86.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.msg2_size = testData1;
      print(qcashier.screen86.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.msg2_size = testData2;
      print(qcashier.screen86.msg2_size);
      expect(qcashier.screen86.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.msg2_size = defalut;
      print(qcashier.screen86.msg2_size);
      expect(qcashier.screen86.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02872_element_check_02849 **********\n\n");
    });

    test('02873_element_check_02850', () async {
      print("\n********** テスト実行：02873_element_check_02850 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.sound1;
      print(qcashier.screen86.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.sound1 = testData1;
      print(qcashier.screen86.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.sound1 = testData2;
      print(qcashier.screen86.sound1);
      expect(qcashier.screen86.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.sound1 = defalut;
      print(qcashier.screen86.sound1);
      expect(qcashier.screen86.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02873_element_check_02850 **********\n\n");
    });

    test('02874_element_check_02851', () async {
      print("\n********** テスト実行：02874_element_check_02851 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.sound2;
      print(qcashier.screen86.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.sound2 = testData1;
      print(qcashier.screen86.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.sound2 = testData2;
      print(qcashier.screen86.sound2);
      expect(qcashier.screen86.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.sound2 = defalut;
      print(qcashier.screen86.sound2);
      expect(qcashier.screen86.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02874_element_check_02851 **********\n\n");
    });

    test('02875_element_check_02852', () async {
      print("\n********** テスト実行：02875_element_check_02852 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.sound3;
      print(qcashier.screen86.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.sound3 = testData1;
      print(qcashier.screen86.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.sound3 = testData2;
      print(qcashier.screen86.sound3);
      expect(qcashier.screen86.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.sound3 = defalut;
      print(qcashier.screen86.sound3);
      expect(qcashier.screen86.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02875_element_check_02852 **********\n\n");
    });

    test('02876_element_check_02853', () async {
      print("\n********** テスト実行：02876_element_check_02853 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.snd_timer;
      print(qcashier.screen86.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.snd_timer = testData1;
      print(qcashier.screen86.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.snd_timer = testData2;
      print(qcashier.screen86.snd_timer);
      expect(qcashier.screen86.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.snd_timer = defalut;
      print(qcashier.screen86.snd_timer);
      expect(qcashier.screen86.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02876_element_check_02853 **********\n\n");
    });

    test('02877_element_check_02854', () async {
      print("\n********** テスト実行：02877_element_check_02854 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.timer1;
      print(qcashier.screen86.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.timer1 = testData1;
      print(qcashier.screen86.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.timer1 = testData2;
      print(qcashier.screen86.timer1);
      expect(qcashier.screen86.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.timer1 = defalut;
      print(qcashier.screen86.timer1);
      expect(qcashier.screen86.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02877_element_check_02854 **********\n\n");
    });

    test('02878_element_check_02855', () async {
      print("\n********** テスト実行：02878_element_check_02855 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.timer2;
      print(qcashier.screen86.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.timer2 = testData1;
      print(qcashier.screen86.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.timer2 = testData2;
      print(qcashier.screen86.timer2);
      expect(qcashier.screen86.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.timer2 = defalut;
      print(qcashier.screen86.timer2);
      expect(qcashier.screen86.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02878_element_check_02855 **********\n\n");
    });

    test('02879_element_check_02856', () async {
      print("\n********** テスト実行：02879_element_check_02856 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.timer3;
      print(qcashier.screen86.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.timer3 = testData1;
      print(qcashier.screen86.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.timer3 = testData2;
      print(qcashier.screen86.timer3);
      expect(qcashier.screen86.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.timer3 = defalut;
      print(qcashier.screen86.timer3);
      expect(qcashier.screen86.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02879_element_check_02856 **********\n\n");
    });

    test('02880_element_check_02857', () async {
      print("\n********** テスト実行：02880_element_check_02857 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.dsp_flg1;
      print(qcashier.screen86.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.dsp_flg1 = testData1;
      print(qcashier.screen86.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.dsp_flg1 = testData2;
      print(qcashier.screen86.dsp_flg1);
      expect(qcashier.screen86.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.dsp_flg1 = defalut;
      print(qcashier.screen86.dsp_flg1);
      expect(qcashier.screen86.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02880_element_check_02857 **********\n\n");
    });

    test('02881_element_check_02858', () async {
      print("\n********** テスト実行：02881_element_check_02858 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.dsp_flg2;
      print(qcashier.screen86.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.dsp_flg2 = testData1;
      print(qcashier.screen86.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.dsp_flg2 = testData2;
      print(qcashier.screen86.dsp_flg2);
      expect(qcashier.screen86.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.dsp_flg2 = defalut;
      print(qcashier.screen86.dsp_flg2);
      expect(qcashier.screen86.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02881_element_check_02858 **********\n\n");
    });

    test('02882_element_check_02859', () async {
      print("\n********** テスト実行：02882_element_check_02859 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.movie01_ext;
      print(qcashier.screen86.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.movie01_ext = testData1;
      print(qcashier.screen86.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.movie01_ext = testData2;
      print(qcashier.screen86.movie01_ext);
      expect(qcashier.screen86.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.movie01_ext = defalut;
      print(qcashier.screen86.movie01_ext);
      expect(qcashier.screen86.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02882_element_check_02859 **********\n\n");
    });

    test('02883_element_check_02860', () async {
      print("\n********** テスト実行：02883_element_check_02860 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.movie02_ext;
      print(qcashier.screen86.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.movie02_ext = testData1;
      print(qcashier.screen86.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.movie02_ext = testData2;
      print(qcashier.screen86.movie02_ext);
      expect(qcashier.screen86.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.movie02_ext = defalut;
      print(qcashier.screen86.movie02_ext);
      expect(qcashier.screen86.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02883_element_check_02860 **********\n\n");
    });

    test('02884_element_check_02861', () async {
      print("\n********** テスト実行：02884_element_check_02861 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.movie03_ext;
      print(qcashier.screen86.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.movie03_ext = testData1;
      print(qcashier.screen86.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.movie03_ext = testData2;
      print(qcashier.screen86.movie03_ext);
      expect(qcashier.screen86.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.movie03_ext = defalut;
      print(qcashier.screen86.movie03_ext);
      expect(qcashier.screen86.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02884_element_check_02861 **********\n\n");
    });

    test('02885_element_check_02862', () async {
      print("\n********** テスト実行：02885_element_check_02862 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.movie04_ext;
      print(qcashier.screen86.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.movie04_ext = testData1;
      print(qcashier.screen86.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.movie04_ext = testData2;
      print(qcashier.screen86.movie04_ext);
      expect(qcashier.screen86.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.movie04_ext = defalut;
      print(qcashier.screen86.movie04_ext);
      expect(qcashier.screen86.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02885_element_check_02862 **********\n\n");
    });

    test('02886_element_check_02863', () async {
      print("\n********** テスト実行：02886_element_check_02863 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line_title;
      print(qcashier.screen86.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line_title = testData1s;
      print(qcashier.screen86.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line_title = testData2s;
      print(qcashier.screen86.line_title);
      expect(qcashier.screen86.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line_title = defalut;
      print(qcashier.screen86.line_title);
      expect(qcashier.screen86.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02886_element_check_02863 **********\n\n");
    });

    test('02887_element_check_02864', () async {
      print("\n********** テスト実行：02887_element_check_02864 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line_title_ex;
      print(qcashier.screen86.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line_title_ex = testData1s;
      print(qcashier.screen86.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line_title_ex = testData2s;
      print(qcashier.screen86.line_title_ex);
      expect(qcashier.screen86.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line_title_ex = defalut;
      print(qcashier.screen86.line_title_ex);
      expect(qcashier.screen86.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02887_element_check_02864 **********\n\n");
    });

    test('02888_element_check_02865', () async {
      print("\n********** テスト実行：02888_element_check_02865 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line1;
      print(qcashier.screen86.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line1 = testData1s;
      print(qcashier.screen86.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line1 = testData2s;
      print(qcashier.screen86.line1);
      expect(qcashier.screen86.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line1 = defalut;
      print(qcashier.screen86.line1);
      expect(qcashier.screen86.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02888_element_check_02865 **********\n\n");
    });

    test('02889_element_check_02866', () async {
      print("\n********** テスト実行：02889_element_check_02866 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line2;
      print(qcashier.screen86.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line2 = testData1s;
      print(qcashier.screen86.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line2 = testData2s;
      print(qcashier.screen86.line2);
      expect(qcashier.screen86.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line2 = defalut;
      print(qcashier.screen86.line2);
      expect(qcashier.screen86.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02889_element_check_02866 **********\n\n");
    });

    test('02890_element_check_02867', () async {
      print("\n********** テスト実行：02890_element_check_02867 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line3;
      print(qcashier.screen86.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line3 = testData1s;
      print(qcashier.screen86.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line3 = testData2s;
      print(qcashier.screen86.line3);
      expect(qcashier.screen86.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line3 = defalut;
      print(qcashier.screen86.line3);
      expect(qcashier.screen86.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02890_element_check_02867 **********\n\n");
    });

    test('02891_element_check_02868', () async {
      print("\n********** テスト実行：02891_element_check_02868 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line4;
      print(qcashier.screen86.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line4 = testData1s;
      print(qcashier.screen86.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line4 = testData2s;
      print(qcashier.screen86.line4);
      expect(qcashier.screen86.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line4 = defalut;
      print(qcashier.screen86.line4);
      expect(qcashier.screen86.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02891_element_check_02868 **********\n\n");
    });

    test('02892_element_check_02869', () async {
      print("\n********** テスト実行：02892_element_check_02869 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line1_ex;
      print(qcashier.screen86.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line1_ex = testData1s;
      print(qcashier.screen86.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line1_ex = testData2s;
      print(qcashier.screen86.line1_ex);
      expect(qcashier.screen86.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line1_ex = defalut;
      print(qcashier.screen86.line1_ex);
      expect(qcashier.screen86.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02892_element_check_02869 **********\n\n");
    });

    test('02893_element_check_02870', () async {
      print("\n********** テスト実行：02893_element_check_02870 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line2_ex;
      print(qcashier.screen86.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line2_ex = testData1s;
      print(qcashier.screen86.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line2_ex = testData2s;
      print(qcashier.screen86.line2_ex);
      expect(qcashier.screen86.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line2_ex = defalut;
      print(qcashier.screen86.line2_ex);
      expect(qcashier.screen86.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02893_element_check_02870 **********\n\n");
    });

    test('02894_element_check_02871', () async {
      print("\n********** テスト実行：02894_element_check_02871 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line3_ex;
      print(qcashier.screen86.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line3_ex = testData1s;
      print(qcashier.screen86.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line3_ex = testData2s;
      print(qcashier.screen86.line3_ex);
      expect(qcashier.screen86.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line3_ex = defalut;
      print(qcashier.screen86.line3_ex);
      expect(qcashier.screen86.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02894_element_check_02871 **********\n\n");
    });

    test('02895_element_check_02872', () async {
      print("\n********** テスト実行：02895_element_check_02872 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.line4_ex;
      print(qcashier.screen86.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.line4_ex = testData1s;
      print(qcashier.screen86.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.line4_ex = testData2s;
      print(qcashier.screen86.line4_ex);
      expect(qcashier.screen86.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.line4_ex = defalut;
      print(qcashier.screen86.line4_ex);
      expect(qcashier.screen86.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02895_element_check_02872 **********\n\n");
    });

    test('02896_element_check_02873', () async {
      print("\n********** テスト実行：02896_element_check_02873 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.sound_led1;
      print(qcashier.screen86.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.sound_led1 = testData1;
      print(qcashier.screen86.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.sound_led1 = testData2;
      print(qcashier.screen86.sound_led1);
      expect(qcashier.screen86.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.sound_led1 = defalut;
      print(qcashier.screen86.sound_led1);
      expect(qcashier.screen86.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02896_element_check_02873 **********\n\n");
    });

    test('02897_element_check_02874', () async {
      print("\n********** テスト実行：02897_element_check_02874 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.sound_led2;
      print(qcashier.screen86.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.sound_led2 = testData1;
      print(qcashier.screen86.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.sound_led2 = testData2;
      print(qcashier.screen86.sound_led2);
      expect(qcashier.screen86.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.sound_led2 = defalut;
      print(qcashier.screen86.sound_led2);
      expect(qcashier.screen86.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02897_element_check_02874 **********\n\n");
    });

    test('02898_element_check_02875', () async {
      print("\n********** テスト実行：02898_element_check_02875 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen86.sound_led3;
      print(qcashier.screen86.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen86.sound_led3 = testData1;
      print(qcashier.screen86.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen86.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen86.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen86.sound_led3 = testData2;
      print(qcashier.screen86.sound_led3);
      expect(qcashier.screen86.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen86.sound_led3 = defalut;
      print(qcashier.screen86.sound_led3);
      expect(qcashier.screen86.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen86.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02898_element_check_02875 **********\n\n");
    });

    test('02899_element_check_02876', () async {
      print("\n********** テスト実行：02899_element_check_02876 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.title;
      print(qcashier.screen87.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.title = testData1s;
      print(qcashier.screen87.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.title = testData2s;
      print(qcashier.screen87.title);
      expect(qcashier.screen87.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.title = defalut;
      print(qcashier.screen87.title);
      expect(qcashier.screen87.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02899_element_check_02876 **********\n\n");
    });

    test('02900_element_check_02877', () async {
      print("\n********** テスト実行：02900_element_check_02877 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.msg1;
      print(qcashier.screen87.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.msg1 = testData1s;
      print(qcashier.screen87.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.msg1 = testData2s;
      print(qcashier.screen87.msg1);
      expect(qcashier.screen87.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.msg1 = defalut;
      print(qcashier.screen87.msg1);
      expect(qcashier.screen87.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02900_element_check_02877 **********\n\n");
    });

    test('02901_element_check_02878', () async {
      print("\n********** テスト実行：02901_element_check_02878 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.msg2;
      print(qcashier.screen87.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.msg2 = testData1s;
      print(qcashier.screen87.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.msg2 = testData2s;
      print(qcashier.screen87.msg2);
      expect(qcashier.screen87.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.msg2 = defalut;
      print(qcashier.screen87.msg2);
      expect(qcashier.screen87.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02901_element_check_02878 **********\n\n");
    });

    test('02902_element_check_02879', () async {
      print("\n********** テスト実行：02902_element_check_02879 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.msg1_size;
      print(qcashier.screen87.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.msg1_size = testData1;
      print(qcashier.screen87.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.msg1_size = testData2;
      print(qcashier.screen87.msg1_size);
      expect(qcashier.screen87.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.msg1_size = defalut;
      print(qcashier.screen87.msg1_size);
      expect(qcashier.screen87.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02902_element_check_02879 **********\n\n");
    });

    test('02903_element_check_02880', () async {
      print("\n********** テスト実行：02903_element_check_02880 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.msg2_size;
      print(qcashier.screen87.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.msg2_size = testData1;
      print(qcashier.screen87.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.msg2_size = testData2;
      print(qcashier.screen87.msg2_size);
      expect(qcashier.screen87.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.msg2_size = defalut;
      print(qcashier.screen87.msg2_size);
      expect(qcashier.screen87.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02903_element_check_02880 **********\n\n");
    });

    test('02904_element_check_02881', () async {
      print("\n********** テスト実行：02904_element_check_02881 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.sound1;
      print(qcashier.screen87.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.sound1 = testData1;
      print(qcashier.screen87.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.sound1 = testData2;
      print(qcashier.screen87.sound1);
      expect(qcashier.screen87.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.sound1 = defalut;
      print(qcashier.screen87.sound1);
      expect(qcashier.screen87.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02904_element_check_02881 **********\n\n");
    });

    test('02905_element_check_02882', () async {
      print("\n********** テスト実行：02905_element_check_02882 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.sound2;
      print(qcashier.screen87.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.sound2 = testData1;
      print(qcashier.screen87.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.sound2 = testData2;
      print(qcashier.screen87.sound2);
      expect(qcashier.screen87.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.sound2 = defalut;
      print(qcashier.screen87.sound2);
      expect(qcashier.screen87.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02905_element_check_02882 **********\n\n");
    });

    test('02906_element_check_02883', () async {
      print("\n********** テスト実行：02906_element_check_02883 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.sound3;
      print(qcashier.screen87.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.sound3 = testData1;
      print(qcashier.screen87.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.sound3 = testData2;
      print(qcashier.screen87.sound3);
      expect(qcashier.screen87.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.sound3 = defalut;
      print(qcashier.screen87.sound3);
      expect(qcashier.screen87.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02906_element_check_02883 **********\n\n");
    });

    test('02907_element_check_02884', () async {
      print("\n********** テスト実行：02907_element_check_02884 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.snd_timer;
      print(qcashier.screen87.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.snd_timer = testData1;
      print(qcashier.screen87.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.snd_timer = testData2;
      print(qcashier.screen87.snd_timer);
      expect(qcashier.screen87.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.snd_timer = defalut;
      print(qcashier.screen87.snd_timer);
      expect(qcashier.screen87.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02907_element_check_02884 **********\n\n");
    });

    test('02908_element_check_02885', () async {
      print("\n********** テスト実行：02908_element_check_02885 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.timer1;
      print(qcashier.screen87.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.timer1 = testData1;
      print(qcashier.screen87.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.timer1 = testData2;
      print(qcashier.screen87.timer1);
      expect(qcashier.screen87.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.timer1 = defalut;
      print(qcashier.screen87.timer1);
      expect(qcashier.screen87.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02908_element_check_02885 **********\n\n");
    });

    test('02909_element_check_02886', () async {
      print("\n********** テスト実行：02909_element_check_02886 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.timer2;
      print(qcashier.screen87.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.timer2 = testData1;
      print(qcashier.screen87.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.timer2 = testData2;
      print(qcashier.screen87.timer2);
      expect(qcashier.screen87.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.timer2 = defalut;
      print(qcashier.screen87.timer2);
      expect(qcashier.screen87.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02909_element_check_02886 **********\n\n");
    });

    test('02910_element_check_02887', () async {
      print("\n********** テスト実行：02910_element_check_02887 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.timer3;
      print(qcashier.screen87.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.timer3 = testData1;
      print(qcashier.screen87.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.timer3 = testData2;
      print(qcashier.screen87.timer3);
      expect(qcashier.screen87.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.timer3 = defalut;
      print(qcashier.screen87.timer3);
      expect(qcashier.screen87.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02910_element_check_02887 **********\n\n");
    });

    test('02911_element_check_02888', () async {
      print("\n********** テスト実行：02911_element_check_02888 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.dsp_flg1;
      print(qcashier.screen87.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.dsp_flg1 = testData1;
      print(qcashier.screen87.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.dsp_flg1 = testData2;
      print(qcashier.screen87.dsp_flg1);
      expect(qcashier.screen87.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.dsp_flg1 = defalut;
      print(qcashier.screen87.dsp_flg1);
      expect(qcashier.screen87.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02911_element_check_02888 **********\n\n");
    });

    test('02912_element_check_02889', () async {
      print("\n********** テスト実行：02912_element_check_02889 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.dsp_flg2;
      print(qcashier.screen87.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.dsp_flg2 = testData1;
      print(qcashier.screen87.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.dsp_flg2 = testData2;
      print(qcashier.screen87.dsp_flg2);
      expect(qcashier.screen87.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.dsp_flg2 = defalut;
      print(qcashier.screen87.dsp_flg2);
      expect(qcashier.screen87.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02912_element_check_02889 **********\n\n");
    });

    test('02913_element_check_02890', () async {
      print("\n********** テスト実行：02913_element_check_02890 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.movie01_ext;
      print(qcashier.screen87.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.movie01_ext = testData1;
      print(qcashier.screen87.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.movie01_ext = testData2;
      print(qcashier.screen87.movie01_ext);
      expect(qcashier.screen87.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.movie01_ext = defalut;
      print(qcashier.screen87.movie01_ext);
      expect(qcashier.screen87.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02913_element_check_02890 **********\n\n");
    });

    test('02914_element_check_02891', () async {
      print("\n********** テスト実行：02914_element_check_02891 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.movie02_ext;
      print(qcashier.screen87.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.movie02_ext = testData1;
      print(qcashier.screen87.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.movie02_ext = testData2;
      print(qcashier.screen87.movie02_ext);
      expect(qcashier.screen87.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.movie02_ext = defalut;
      print(qcashier.screen87.movie02_ext);
      expect(qcashier.screen87.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02914_element_check_02891 **********\n\n");
    });

    test('02915_element_check_02892', () async {
      print("\n********** テスト実行：02915_element_check_02892 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.movie03_ext;
      print(qcashier.screen87.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.movie03_ext = testData1;
      print(qcashier.screen87.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.movie03_ext = testData2;
      print(qcashier.screen87.movie03_ext);
      expect(qcashier.screen87.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.movie03_ext = defalut;
      print(qcashier.screen87.movie03_ext);
      expect(qcashier.screen87.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02915_element_check_02892 **********\n\n");
    });

    test('02916_element_check_02893', () async {
      print("\n********** テスト実行：02916_element_check_02893 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.movie04_ext;
      print(qcashier.screen87.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.movie04_ext = testData1;
      print(qcashier.screen87.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.movie04_ext = testData2;
      print(qcashier.screen87.movie04_ext);
      expect(qcashier.screen87.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.movie04_ext = defalut;
      print(qcashier.screen87.movie04_ext);
      expect(qcashier.screen87.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02916_element_check_02893 **********\n\n");
    });

    test('02917_element_check_02894', () async {
      print("\n********** テスト実行：02917_element_check_02894 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line_title;
      print(qcashier.screen87.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line_title = testData1s;
      print(qcashier.screen87.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line_title = testData2s;
      print(qcashier.screen87.line_title);
      expect(qcashier.screen87.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line_title = defalut;
      print(qcashier.screen87.line_title);
      expect(qcashier.screen87.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02917_element_check_02894 **********\n\n");
    });

    test('02918_element_check_02895', () async {
      print("\n********** テスト実行：02918_element_check_02895 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line_title_ex;
      print(qcashier.screen87.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line_title_ex = testData1s;
      print(qcashier.screen87.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line_title_ex = testData2s;
      print(qcashier.screen87.line_title_ex);
      expect(qcashier.screen87.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line_title_ex = defalut;
      print(qcashier.screen87.line_title_ex);
      expect(qcashier.screen87.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02918_element_check_02895 **********\n\n");
    });

    test('02919_element_check_02896', () async {
      print("\n********** テスト実行：02919_element_check_02896 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line1;
      print(qcashier.screen87.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line1 = testData1s;
      print(qcashier.screen87.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line1 = testData2s;
      print(qcashier.screen87.line1);
      expect(qcashier.screen87.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line1 = defalut;
      print(qcashier.screen87.line1);
      expect(qcashier.screen87.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02919_element_check_02896 **********\n\n");
    });

    test('02920_element_check_02897', () async {
      print("\n********** テスト実行：02920_element_check_02897 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line2;
      print(qcashier.screen87.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line2 = testData1s;
      print(qcashier.screen87.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line2 = testData2s;
      print(qcashier.screen87.line2);
      expect(qcashier.screen87.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line2 = defalut;
      print(qcashier.screen87.line2);
      expect(qcashier.screen87.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02920_element_check_02897 **********\n\n");
    });

    test('02921_element_check_02898', () async {
      print("\n********** テスト実行：02921_element_check_02898 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line3;
      print(qcashier.screen87.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line3 = testData1s;
      print(qcashier.screen87.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line3 = testData2s;
      print(qcashier.screen87.line3);
      expect(qcashier.screen87.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line3 = defalut;
      print(qcashier.screen87.line3);
      expect(qcashier.screen87.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02921_element_check_02898 **********\n\n");
    });

    test('02922_element_check_02899', () async {
      print("\n********** テスト実行：02922_element_check_02899 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line4;
      print(qcashier.screen87.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line4 = testData1s;
      print(qcashier.screen87.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line4 = testData2s;
      print(qcashier.screen87.line4);
      expect(qcashier.screen87.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line4 = defalut;
      print(qcashier.screen87.line4);
      expect(qcashier.screen87.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02922_element_check_02899 **********\n\n");
    });

    test('02923_element_check_02900', () async {
      print("\n********** テスト実行：02923_element_check_02900 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line1_ex;
      print(qcashier.screen87.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line1_ex = testData1s;
      print(qcashier.screen87.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line1_ex = testData2s;
      print(qcashier.screen87.line1_ex);
      expect(qcashier.screen87.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line1_ex = defalut;
      print(qcashier.screen87.line1_ex);
      expect(qcashier.screen87.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02923_element_check_02900 **********\n\n");
    });

    test('02924_element_check_02901', () async {
      print("\n********** テスト実行：02924_element_check_02901 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line2_ex;
      print(qcashier.screen87.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line2_ex = testData1s;
      print(qcashier.screen87.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line2_ex = testData2s;
      print(qcashier.screen87.line2_ex);
      expect(qcashier.screen87.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line2_ex = defalut;
      print(qcashier.screen87.line2_ex);
      expect(qcashier.screen87.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02924_element_check_02901 **********\n\n");
    });

    test('02925_element_check_02902', () async {
      print("\n********** テスト実行：02925_element_check_02902 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line3_ex;
      print(qcashier.screen87.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line3_ex = testData1s;
      print(qcashier.screen87.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line3_ex = testData2s;
      print(qcashier.screen87.line3_ex);
      expect(qcashier.screen87.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line3_ex = defalut;
      print(qcashier.screen87.line3_ex);
      expect(qcashier.screen87.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02925_element_check_02902 **********\n\n");
    });

    test('02926_element_check_02903', () async {
      print("\n********** テスト実行：02926_element_check_02903 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.line4_ex;
      print(qcashier.screen87.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.line4_ex = testData1s;
      print(qcashier.screen87.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.line4_ex = testData2s;
      print(qcashier.screen87.line4_ex);
      expect(qcashier.screen87.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.line4_ex = defalut;
      print(qcashier.screen87.line4_ex);
      expect(qcashier.screen87.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02926_element_check_02903 **********\n\n");
    });

    test('02927_element_check_02904', () async {
      print("\n********** テスト実行：02927_element_check_02904 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.sound_led1;
      print(qcashier.screen87.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.sound_led1 = testData1;
      print(qcashier.screen87.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.sound_led1 = testData2;
      print(qcashier.screen87.sound_led1);
      expect(qcashier.screen87.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.sound_led1 = defalut;
      print(qcashier.screen87.sound_led1);
      expect(qcashier.screen87.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02927_element_check_02904 **********\n\n");
    });

    test('02928_element_check_02905', () async {
      print("\n********** テスト実行：02928_element_check_02905 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.sound_led2;
      print(qcashier.screen87.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.sound_led2 = testData1;
      print(qcashier.screen87.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.sound_led2 = testData2;
      print(qcashier.screen87.sound_led2);
      expect(qcashier.screen87.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.sound_led2 = defalut;
      print(qcashier.screen87.sound_led2);
      expect(qcashier.screen87.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02928_element_check_02905 **********\n\n");
    });

    test('02929_element_check_02906', () async {
      print("\n********** テスト実行：02929_element_check_02906 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen87.sound_led3;
      print(qcashier.screen87.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen87.sound_led3 = testData1;
      print(qcashier.screen87.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen87.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen87.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen87.sound_led3 = testData2;
      print(qcashier.screen87.sound_led3);
      expect(qcashier.screen87.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen87.sound_led3 = defalut;
      print(qcashier.screen87.sound_led3);
      expect(qcashier.screen87.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen87.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02929_element_check_02906 **********\n\n");
    });

    test('02930_element_check_02907', () async {
      print("\n********** テスト実行：02930_element_check_02907 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.title;
      print(qcashier.screen88.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.title = testData1s;
      print(qcashier.screen88.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.title = testData2s;
      print(qcashier.screen88.title);
      expect(qcashier.screen88.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.title = defalut;
      print(qcashier.screen88.title);
      expect(qcashier.screen88.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02930_element_check_02907 **********\n\n");
    });

    test('02931_element_check_02908', () async {
      print("\n********** テスト実行：02931_element_check_02908 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.msg1;
      print(qcashier.screen88.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.msg1 = testData1s;
      print(qcashier.screen88.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.msg1 = testData2s;
      print(qcashier.screen88.msg1);
      expect(qcashier.screen88.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.msg1 = defalut;
      print(qcashier.screen88.msg1);
      expect(qcashier.screen88.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02931_element_check_02908 **********\n\n");
    });

    test('02932_element_check_02909', () async {
      print("\n********** テスト実行：02932_element_check_02909 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.msg2;
      print(qcashier.screen88.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.msg2 = testData1s;
      print(qcashier.screen88.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.msg2 = testData2s;
      print(qcashier.screen88.msg2);
      expect(qcashier.screen88.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.msg2 = defalut;
      print(qcashier.screen88.msg2);
      expect(qcashier.screen88.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02932_element_check_02909 **********\n\n");
    });

    test('02933_element_check_02910', () async {
      print("\n********** テスト実行：02933_element_check_02910 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.msg1_size;
      print(qcashier.screen88.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.msg1_size = testData1;
      print(qcashier.screen88.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.msg1_size = testData2;
      print(qcashier.screen88.msg1_size);
      expect(qcashier.screen88.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.msg1_size = defalut;
      print(qcashier.screen88.msg1_size);
      expect(qcashier.screen88.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02933_element_check_02910 **********\n\n");
    });

    test('02934_element_check_02911', () async {
      print("\n********** テスト実行：02934_element_check_02911 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.msg2_size;
      print(qcashier.screen88.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.msg2_size = testData1;
      print(qcashier.screen88.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.msg2_size = testData2;
      print(qcashier.screen88.msg2_size);
      expect(qcashier.screen88.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.msg2_size = defalut;
      print(qcashier.screen88.msg2_size);
      expect(qcashier.screen88.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02934_element_check_02911 **********\n\n");
    });

    test('02935_element_check_02912', () async {
      print("\n********** テスト実行：02935_element_check_02912 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.sound1;
      print(qcashier.screen88.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.sound1 = testData1;
      print(qcashier.screen88.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.sound1 = testData2;
      print(qcashier.screen88.sound1);
      expect(qcashier.screen88.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.sound1 = defalut;
      print(qcashier.screen88.sound1);
      expect(qcashier.screen88.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02935_element_check_02912 **********\n\n");
    });

    test('02936_element_check_02913', () async {
      print("\n********** テスト実行：02936_element_check_02913 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.sound2;
      print(qcashier.screen88.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.sound2 = testData1;
      print(qcashier.screen88.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.sound2 = testData2;
      print(qcashier.screen88.sound2);
      expect(qcashier.screen88.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.sound2 = defalut;
      print(qcashier.screen88.sound2);
      expect(qcashier.screen88.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02936_element_check_02913 **********\n\n");
    });

    test('02937_element_check_02914', () async {
      print("\n********** テスト実行：02937_element_check_02914 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.sound3;
      print(qcashier.screen88.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.sound3 = testData1;
      print(qcashier.screen88.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.sound3 = testData2;
      print(qcashier.screen88.sound3);
      expect(qcashier.screen88.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.sound3 = defalut;
      print(qcashier.screen88.sound3);
      expect(qcashier.screen88.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02937_element_check_02914 **********\n\n");
    });

    test('02938_element_check_02915', () async {
      print("\n********** テスト実行：02938_element_check_02915 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.snd_timer;
      print(qcashier.screen88.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.snd_timer = testData1;
      print(qcashier.screen88.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.snd_timer = testData2;
      print(qcashier.screen88.snd_timer);
      expect(qcashier.screen88.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.snd_timer = defalut;
      print(qcashier.screen88.snd_timer);
      expect(qcashier.screen88.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02938_element_check_02915 **********\n\n");
    });

    test('02939_element_check_02916', () async {
      print("\n********** テスト実行：02939_element_check_02916 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.timer1;
      print(qcashier.screen88.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.timer1 = testData1;
      print(qcashier.screen88.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.timer1 = testData2;
      print(qcashier.screen88.timer1);
      expect(qcashier.screen88.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.timer1 = defalut;
      print(qcashier.screen88.timer1);
      expect(qcashier.screen88.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02939_element_check_02916 **********\n\n");
    });

    test('02940_element_check_02917', () async {
      print("\n********** テスト実行：02940_element_check_02917 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.timer2;
      print(qcashier.screen88.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.timer2 = testData1;
      print(qcashier.screen88.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.timer2 = testData2;
      print(qcashier.screen88.timer2);
      expect(qcashier.screen88.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.timer2 = defalut;
      print(qcashier.screen88.timer2);
      expect(qcashier.screen88.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02940_element_check_02917 **********\n\n");
    });

    test('02941_element_check_02918', () async {
      print("\n********** テスト実行：02941_element_check_02918 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.timer3;
      print(qcashier.screen88.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.timer3 = testData1;
      print(qcashier.screen88.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.timer3 = testData2;
      print(qcashier.screen88.timer3);
      expect(qcashier.screen88.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.timer3 = defalut;
      print(qcashier.screen88.timer3);
      expect(qcashier.screen88.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02941_element_check_02918 **********\n\n");
    });

    test('02942_element_check_02919', () async {
      print("\n********** テスト実行：02942_element_check_02919 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.dsp_flg1;
      print(qcashier.screen88.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.dsp_flg1 = testData1;
      print(qcashier.screen88.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.dsp_flg1 = testData2;
      print(qcashier.screen88.dsp_flg1);
      expect(qcashier.screen88.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.dsp_flg1 = defalut;
      print(qcashier.screen88.dsp_flg1);
      expect(qcashier.screen88.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02942_element_check_02919 **********\n\n");
    });

    test('02943_element_check_02920', () async {
      print("\n********** テスト実行：02943_element_check_02920 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.dsp_flg2;
      print(qcashier.screen88.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.dsp_flg2 = testData1;
      print(qcashier.screen88.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.dsp_flg2 = testData2;
      print(qcashier.screen88.dsp_flg2);
      expect(qcashier.screen88.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.dsp_flg2 = defalut;
      print(qcashier.screen88.dsp_flg2);
      expect(qcashier.screen88.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02943_element_check_02920 **********\n\n");
    });

    test('02944_element_check_02921', () async {
      print("\n********** テスト実行：02944_element_check_02921 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.movie01_ext;
      print(qcashier.screen88.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.movie01_ext = testData1;
      print(qcashier.screen88.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.movie01_ext = testData2;
      print(qcashier.screen88.movie01_ext);
      expect(qcashier.screen88.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.movie01_ext = defalut;
      print(qcashier.screen88.movie01_ext);
      expect(qcashier.screen88.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02944_element_check_02921 **********\n\n");
    });

    test('02945_element_check_02922', () async {
      print("\n********** テスト実行：02945_element_check_02922 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.movie02_ext;
      print(qcashier.screen88.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.movie02_ext = testData1;
      print(qcashier.screen88.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.movie02_ext = testData2;
      print(qcashier.screen88.movie02_ext);
      expect(qcashier.screen88.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.movie02_ext = defalut;
      print(qcashier.screen88.movie02_ext);
      expect(qcashier.screen88.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02945_element_check_02922 **********\n\n");
    });

    test('02946_element_check_02923', () async {
      print("\n********** テスト実行：02946_element_check_02923 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.movie03_ext;
      print(qcashier.screen88.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.movie03_ext = testData1;
      print(qcashier.screen88.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.movie03_ext = testData2;
      print(qcashier.screen88.movie03_ext);
      expect(qcashier.screen88.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.movie03_ext = defalut;
      print(qcashier.screen88.movie03_ext);
      expect(qcashier.screen88.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02946_element_check_02923 **********\n\n");
    });

    test('02947_element_check_02924', () async {
      print("\n********** テスト実行：02947_element_check_02924 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.movie04_ext;
      print(qcashier.screen88.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.movie04_ext = testData1;
      print(qcashier.screen88.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.movie04_ext = testData2;
      print(qcashier.screen88.movie04_ext);
      expect(qcashier.screen88.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.movie04_ext = defalut;
      print(qcashier.screen88.movie04_ext);
      expect(qcashier.screen88.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02947_element_check_02924 **********\n\n");
    });

    test('02948_element_check_02925', () async {
      print("\n********** テスト実行：02948_element_check_02925 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line_title;
      print(qcashier.screen88.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line_title = testData1s;
      print(qcashier.screen88.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line_title = testData2s;
      print(qcashier.screen88.line_title);
      expect(qcashier.screen88.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line_title = defalut;
      print(qcashier.screen88.line_title);
      expect(qcashier.screen88.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02948_element_check_02925 **********\n\n");
    });

    test('02949_element_check_02926', () async {
      print("\n********** テスト実行：02949_element_check_02926 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line_title_ex;
      print(qcashier.screen88.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line_title_ex = testData1s;
      print(qcashier.screen88.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line_title_ex = testData2s;
      print(qcashier.screen88.line_title_ex);
      expect(qcashier.screen88.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line_title_ex = defalut;
      print(qcashier.screen88.line_title_ex);
      expect(qcashier.screen88.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02949_element_check_02926 **********\n\n");
    });

    test('02950_element_check_02927', () async {
      print("\n********** テスト実行：02950_element_check_02927 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line1;
      print(qcashier.screen88.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line1 = testData1s;
      print(qcashier.screen88.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line1 = testData2s;
      print(qcashier.screen88.line1);
      expect(qcashier.screen88.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line1 = defalut;
      print(qcashier.screen88.line1);
      expect(qcashier.screen88.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02950_element_check_02927 **********\n\n");
    });

    test('02951_element_check_02928', () async {
      print("\n********** テスト実行：02951_element_check_02928 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line2;
      print(qcashier.screen88.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line2 = testData1s;
      print(qcashier.screen88.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line2 = testData2s;
      print(qcashier.screen88.line2);
      expect(qcashier.screen88.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line2 = defalut;
      print(qcashier.screen88.line2);
      expect(qcashier.screen88.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02951_element_check_02928 **********\n\n");
    });

    test('02952_element_check_02929', () async {
      print("\n********** テスト実行：02952_element_check_02929 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line3;
      print(qcashier.screen88.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line3 = testData1s;
      print(qcashier.screen88.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line3 = testData2s;
      print(qcashier.screen88.line3);
      expect(qcashier.screen88.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line3 = defalut;
      print(qcashier.screen88.line3);
      expect(qcashier.screen88.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02952_element_check_02929 **********\n\n");
    });

    test('02953_element_check_02930', () async {
      print("\n********** テスト実行：02953_element_check_02930 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line4;
      print(qcashier.screen88.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line4 = testData1s;
      print(qcashier.screen88.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line4 = testData2s;
      print(qcashier.screen88.line4);
      expect(qcashier.screen88.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line4 = defalut;
      print(qcashier.screen88.line4);
      expect(qcashier.screen88.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02953_element_check_02930 **********\n\n");
    });

    test('02954_element_check_02931', () async {
      print("\n********** テスト実行：02954_element_check_02931 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line1_ex;
      print(qcashier.screen88.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line1_ex = testData1s;
      print(qcashier.screen88.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line1_ex = testData2s;
      print(qcashier.screen88.line1_ex);
      expect(qcashier.screen88.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line1_ex = defalut;
      print(qcashier.screen88.line1_ex);
      expect(qcashier.screen88.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02954_element_check_02931 **********\n\n");
    });

    test('02955_element_check_02932', () async {
      print("\n********** テスト実行：02955_element_check_02932 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line2_ex;
      print(qcashier.screen88.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line2_ex = testData1s;
      print(qcashier.screen88.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line2_ex = testData2s;
      print(qcashier.screen88.line2_ex);
      expect(qcashier.screen88.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line2_ex = defalut;
      print(qcashier.screen88.line2_ex);
      expect(qcashier.screen88.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02955_element_check_02932 **********\n\n");
    });

    test('02956_element_check_02933', () async {
      print("\n********** テスト実行：02956_element_check_02933 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line3_ex;
      print(qcashier.screen88.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line3_ex = testData1s;
      print(qcashier.screen88.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line3_ex = testData2s;
      print(qcashier.screen88.line3_ex);
      expect(qcashier.screen88.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line3_ex = defalut;
      print(qcashier.screen88.line3_ex);
      expect(qcashier.screen88.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02956_element_check_02933 **********\n\n");
    });

    test('02957_element_check_02934', () async {
      print("\n********** テスト実行：02957_element_check_02934 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.line4_ex;
      print(qcashier.screen88.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.line4_ex = testData1s;
      print(qcashier.screen88.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.line4_ex = testData2s;
      print(qcashier.screen88.line4_ex);
      expect(qcashier.screen88.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.line4_ex = defalut;
      print(qcashier.screen88.line4_ex);
      expect(qcashier.screen88.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02957_element_check_02934 **********\n\n");
    });

    test('02958_element_check_02935', () async {
      print("\n********** テスト実行：02958_element_check_02935 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.sound_led1;
      print(qcashier.screen88.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.sound_led1 = testData1;
      print(qcashier.screen88.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.sound_led1 = testData2;
      print(qcashier.screen88.sound_led1);
      expect(qcashier.screen88.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.sound_led1 = defalut;
      print(qcashier.screen88.sound_led1);
      expect(qcashier.screen88.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02958_element_check_02935 **********\n\n");
    });

    test('02959_element_check_02936', () async {
      print("\n********** テスト実行：02959_element_check_02936 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.sound_led2;
      print(qcashier.screen88.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.sound_led2 = testData1;
      print(qcashier.screen88.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.sound_led2 = testData2;
      print(qcashier.screen88.sound_led2);
      expect(qcashier.screen88.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.sound_led2 = defalut;
      print(qcashier.screen88.sound_led2);
      expect(qcashier.screen88.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02959_element_check_02936 **********\n\n");
    });

    test('02960_element_check_02937', () async {
      print("\n********** テスト実行：02960_element_check_02937 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen88.sound_led3;
      print(qcashier.screen88.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen88.sound_led3 = testData1;
      print(qcashier.screen88.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen88.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen88.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen88.sound_led3 = testData2;
      print(qcashier.screen88.sound_led3);
      expect(qcashier.screen88.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen88.sound_led3 = defalut;
      print(qcashier.screen88.sound_led3);
      expect(qcashier.screen88.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen88.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02960_element_check_02937 **********\n\n");
    });

    test('02961_element_check_02938', () async {
      print("\n********** テスト実行：02961_element_check_02938 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.title;
      print(qcashier.screen89.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.title = testData1s;
      print(qcashier.screen89.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.title = testData2s;
      print(qcashier.screen89.title);
      expect(qcashier.screen89.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.title = defalut;
      print(qcashier.screen89.title);
      expect(qcashier.screen89.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02961_element_check_02938 **********\n\n");
    });

    test('02962_element_check_02939', () async {
      print("\n********** テスト実行：02962_element_check_02939 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.msg1;
      print(qcashier.screen89.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.msg1 = testData1s;
      print(qcashier.screen89.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.msg1 = testData2s;
      print(qcashier.screen89.msg1);
      expect(qcashier.screen89.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.msg1 = defalut;
      print(qcashier.screen89.msg1);
      expect(qcashier.screen89.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02962_element_check_02939 **********\n\n");
    });

    test('02963_element_check_02940', () async {
      print("\n********** テスト実行：02963_element_check_02940 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.msg2;
      print(qcashier.screen89.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.msg2 = testData1s;
      print(qcashier.screen89.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.msg2 = testData2s;
      print(qcashier.screen89.msg2);
      expect(qcashier.screen89.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.msg2 = defalut;
      print(qcashier.screen89.msg2);
      expect(qcashier.screen89.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02963_element_check_02940 **********\n\n");
    });

    test('02964_element_check_02941', () async {
      print("\n********** テスト実行：02964_element_check_02941 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.msg1_size;
      print(qcashier.screen89.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.msg1_size = testData1;
      print(qcashier.screen89.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.msg1_size = testData2;
      print(qcashier.screen89.msg1_size);
      expect(qcashier.screen89.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.msg1_size = defalut;
      print(qcashier.screen89.msg1_size);
      expect(qcashier.screen89.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02964_element_check_02941 **********\n\n");
    });

    test('02965_element_check_02942', () async {
      print("\n********** テスト実行：02965_element_check_02942 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.msg2_size;
      print(qcashier.screen89.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.msg2_size = testData1;
      print(qcashier.screen89.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.msg2_size = testData2;
      print(qcashier.screen89.msg2_size);
      expect(qcashier.screen89.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.msg2_size = defalut;
      print(qcashier.screen89.msg2_size);
      expect(qcashier.screen89.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02965_element_check_02942 **********\n\n");
    });

    test('02966_element_check_02943', () async {
      print("\n********** テスト実行：02966_element_check_02943 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.sound1;
      print(qcashier.screen89.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.sound1 = testData1;
      print(qcashier.screen89.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.sound1 = testData2;
      print(qcashier.screen89.sound1);
      expect(qcashier.screen89.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.sound1 = defalut;
      print(qcashier.screen89.sound1);
      expect(qcashier.screen89.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02966_element_check_02943 **********\n\n");
    });

    test('02967_element_check_02944', () async {
      print("\n********** テスト実行：02967_element_check_02944 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.sound2;
      print(qcashier.screen89.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.sound2 = testData1;
      print(qcashier.screen89.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.sound2 = testData2;
      print(qcashier.screen89.sound2);
      expect(qcashier.screen89.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.sound2 = defalut;
      print(qcashier.screen89.sound2);
      expect(qcashier.screen89.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02967_element_check_02944 **********\n\n");
    });

    test('02968_element_check_02945', () async {
      print("\n********** テスト実行：02968_element_check_02945 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.sound3;
      print(qcashier.screen89.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.sound3 = testData1;
      print(qcashier.screen89.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.sound3 = testData2;
      print(qcashier.screen89.sound3);
      expect(qcashier.screen89.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.sound3 = defalut;
      print(qcashier.screen89.sound3);
      expect(qcashier.screen89.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02968_element_check_02945 **********\n\n");
    });

    test('02969_element_check_02946', () async {
      print("\n********** テスト実行：02969_element_check_02946 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.snd_timer;
      print(qcashier.screen89.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.snd_timer = testData1;
      print(qcashier.screen89.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.snd_timer = testData2;
      print(qcashier.screen89.snd_timer);
      expect(qcashier.screen89.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.snd_timer = defalut;
      print(qcashier.screen89.snd_timer);
      expect(qcashier.screen89.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02969_element_check_02946 **********\n\n");
    });

    test('02970_element_check_02947', () async {
      print("\n********** テスト実行：02970_element_check_02947 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.timer1;
      print(qcashier.screen89.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.timer1 = testData1;
      print(qcashier.screen89.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.timer1 = testData2;
      print(qcashier.screen89.timer1);
      expect(qcashier.screen89.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.timer1 = defalut;
      print(qcashier.screen89.timer1);
      expect(qcashier.screen89.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02970_element_check_02947 **********\n\n");
    });

    test('02971_element_check_02948', () async {
      print("\n********** テスト実行：02971_element_check_02948 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.timer2;
      print(qcashier.screen89.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.timer2 = testData1;
      print(qcashier.screen89.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.timer2 = testData2;
      print(qcashier.screen89.timer2);
      expect(qcashier.screen89.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.timer2 = defalut;
      print(qcashier.screen89.timer2);
      expect(qcashier.screen89.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02971_element_check_02948 **********\n\n");
    });

    test('02972_element_check_02949', () async {
      print("\n********** テスト実行：02972_element_check_02949 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.timer3;
      print(qcashier.screen89.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.timer3 = testData1;
      print(qcashier.screen89.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.timer3 = testData2;
      print(qcashier.screen89.timer3);
      expect(qcashier.screen89.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.timer3 = defalut;
      print(qcashier.screen89.timer3);
      expect(qcashier.screen89.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02972_element_check_02949 **********\n\n");
    });

    test('02973_element_check_02950', () async {
      print("\n********** テスト実行：02973_element_check_02950 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.dsp_flg1;
      print(qcashier.screen89.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.dsp_flg1 = testData1;
      print(qcashier.screen89.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.dsp_flg1 = testData2;
      print(qcashier.screen89.dsp_flg1);
      expect(qcashier.screen89.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.dsp_flg1 = defalut;
      print(qcashier.screen89.dsp_flg1);
      expect(qcashier.screen89.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02973_element_check_02950 **********\n\n");
    });

    test('02974_element_check_02951', () async {
      print("\n********** テスト実行：02974_element_check_02951 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.dsp_flg2;
      print(qcashier.screen89.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.dsp_flg2 = testData1;
      print(qcashier.screen89.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.dsp_flg2 = testData2;
      print(qcashier.screen89.dsp_flg2);
      expect(qcashier.screen89.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.dsp_flg2 = defalut;
      print(qcashier.screen89.dsp_flg2);
      expect(qcashier.screen89.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02974_element_check_02951 **********\n\n");
    });

    test('02975_element_check_02952', () async {
      print("\n********** テスト実行：02975_element_check_02952 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.movie01_ext;
      print(qcashier.screen89.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.movie01_ext = testData1;
      print(qcashier.screen89.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.movie01_ext = testData2;
      print(qcashier.screen89.movie01_ext);
      expect(qcashier.screen89.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.movie01_ext = defalut;
      print(qcashier.screen89.movie01_ext);
      expect(qcashier.screen89.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02975_element_check_02952 **********\n\n");
    });

    test('02976_element_check_02953', () async {
      print("\n********** テスト実行：02976_element_check_02953 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.movie02_ext;
      print(qcashier.screen89.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.movie02_ext = testData1;
      print(qcashier.screen89.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.movie02_ext = testData2;
      print(qcashier.screen89.movie02_ext);
      expect(qcashier.screen89.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.movie02_ext = defalut;
      print(qcashier.screen89.movie02_ext);
      expect(qcashier.screen89.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02976_element_check_02953 **********\n\n");
    });

    test('02977_element_check_02954', () async {
      print("\n********** テスト実行：02977_element_check_02954 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.movie03_ext;
      print(qcashier.screen89.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.movie03_ext = testData1;
      print(qcashier.screen89.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.movie03_ext = testData2;
      print(qcashier.screen89.movie03_ext);
      expect(qcashier.screen89.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.movie03_ext = defalut;
      print(qcashier.screen89.movie03_ext);
      expect(qcashier.screen89.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02977_element_check_02954 **********\n\n");
    });

    test('02978_element_check_02955', () async {
      print("\n********** テスト実行：02978_element_check_02955 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.movie04_ext;
      print(qcashier.screen89.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.movie04_ext = testData1;
      print(qcashier.screen89.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.movie04_ext = testData2;
      print(qcashier.screen89.movie04_ext);
      expect(qcashier.screen89.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.movie04_ext = defalut;
      print(qcashier.screen89.movie04_ext);
      expect(qcashier.screen89.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02978_element_check_02955 **********\n\n");
    });

    test('02979_element_check_02956', () async {
      print("\n********** テスト実行：02979_element_check_02956 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line_title;
      print(qcashier.screen89.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line_title = testData1s;
      print(qcashier.screen89.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line_title = testData2s;
      print(qcashier.screen89.line_title);
      expect(qcashier.screen89.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line_title = defalut;
      print(qcashier.screen89.line_title);
      expect(qcashier.screen89.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02979_element_check_02956 **********\n\n");
    });

    test('02980_element_check_02957', () async {
      print("\n********** テスト実行：02980_element_check_02957 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line_title_ex;
      print(qcashier.screen89.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line_title_ex = testData1s;
      print(qcashier.screen89.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line_title_ex = testData2s;
      print(qcashier.screen89.line_title_ex);
      expect(qcashier.screen89.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line_title_ex = defalut;
      print(qcashier.screen89.line_title_ex);
      expect(qcashier.screen89.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02980_element_check_02957 **********\n\n");
    });

    test('02981_element_check_02958', () async {
      print("\n********** テスト実行：02981_element_check_02958 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line1;
      print(qcashier.screen89.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line1 = testData1s;
      print(qcashier.screen89.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line1 = testData2s;
      print(qcashier.screen89.line1);
      expect(qcashier.screen89.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line1 = defalut;
      print(qcashier.screen89.line1);
      expect(qcashier.screen89.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02981_element_check_02958 **********\n\n");
    });

    test('02982_element_check_02959', () async {
      print("\n********** テスト実行：02982_element_check_02959 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line2;
      print(qcashier.screen89.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line2 = testData1s;
      print(qcashier.screen89.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line2 = testData2s;
      print(qcashier.screen89.line2);
      expect(qcashier.screen89.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line2 = defalut;
      print(qcashier.screen89.line2);
      expect(qcashier.screen89.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02982_element_check_02959 **********\n\n");
    });

    test('02983_element_check_02960', () async {
      print("\n********** テスト実行：02983_element_check_02960 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line3;
      print(qcashier.screen89.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line3 = testData1s;
      print(qcashier.screen89.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line3 = testData2s;
      print(qcashier.screen89.line3);
      expect(qcashier.screen89.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line3 = defalut;
      print(qcashier.screen89.line3);
      expect(qcashier.screen89.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02983_element_check_02960 **********\n\n");
    });

    test('02984_element_check_02961', () async {
      print("\n********** テスト実行：02984_element_check_02961 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line4;
      print(qcashier.screen89.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line4 = testData1s;
      print(qcashier.screen89.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line4 = testData2s;
      print(qcashier.screen89.line4);
      expect(qcashier.screen89.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line4 = defalut;
      print(qcashier.screen89.line4);
      expect(qcashier.screen89.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02984_element_check_02961 **********\n\n");
    });

    test('02985_element_check_02962', () async {
      print("\n********** テスト実行：02985_element_check_02962 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line1_ex;
      print(qcashier.screen89.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line1_ex = testData1s;
      print(qcashier.screen89.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line1_ex = testData2s;
      print(qcashier.screen89.line1_ex);
      expect(qcashier.screen89.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line1_ex = defalut;
      print(qcashier.screen89.line1_ex);
      expect(qcashier.screen89.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02985_element_check_02962 **********\n\n");
    });

    test('02986_element_check_02963', () async {
      print("\n********** テスト実行：02986_element_check_02963 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line2_ex;
      print(qcashier.screen89.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line2_ex = testData1s;
      print(qcashier.screen89.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line2_ex = testData2s;
      print(qcashier.screen89.line2_ex);
      expect(qcashier.screen89.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line2_ex = defalut;
      print(qcashier.screen89.line2_ex);
      expect(qcashier.screen89.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02986_element_check_02963 **********\n\n");
    });

    test('02987_element_check_02964', () async {
      print("\n********** テスト実行：02987_element_check_02964 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line3_ex;
      print(qcashier.screen89.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line3_ex = testData1s;
      print(qcashier.screen89.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line3_ex = testData2s;
      print(qcashier.screen89.line3_ex);
      expect(qcashier.screen89.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line3_ex = defalut;
      print(qcashier.screen89.line3_ex);
      expect(qcashier.screen89.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02987_element_check_02964 **********\n\n");
    });

    test('02988_element_check_02965', () async {
      print("\n********** テスト実行：02988_element_check_02965 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.line4_ex;
      print(qcashier.screen89.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.line4_ex = testData1s;
      print(qcashier.screen89.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.line4_ex = testData2s;
      print(qcashier.screen89.line4_ex);
      expect(qcashier.screen89.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.line4_ex = defalut;
      print(qcashier.screen89.line4_ex);
      expect(qcashier.screen89.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02988_element_check_02965 **********\n\n");
    });

    test('02989_element_check_02966', () async {
      print("\n********** テスト実行：02989_element_check_02966 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.sound_led1;
      print(qcashier.screen89.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.sound_led1 = testData1;
      print(qcashier.screen89.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.sound_led1 = testData2;
      print(qcashier.screen89.sound_led1);
      expect(qcashier.screen89.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.sound_led1 = defalut;
      print(qcashier.screen89.sound_led1);
      expect(qcashier.screen89.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02989_element_check_02966 **********\n\n");
    });

    test('02990_element_check_02967', () async {
      print("\n********** テスト実行：02990_element_check_02967 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.sound_led2;
      print(qcashier.screen89.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.sound_led2 = testData1;
      print(qcashier.screen89.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.sound_led2 = testData2;
      print(qcashier.screen89.sound_led2);
      expect(qcashier.screen89.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.sound_led2 = defalut;
      print(qcashier.screen89.sound_led2);
      expect(qcashier.screen89.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02990_element_check_02967 **********\n\n");
    });

    test('02991_element_check_02968', () async {
      print("\n********** テスト実行：02991_element_check_02968 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen89.sound_led3;
      print(qcashier.screen89.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen89.sound_led3 = testData1;
      print(qcashier.screen89.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen89.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen89.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen89.sound_led3 = testData2;
      print(qcashier.screen89.sound_led3);
      expect(qcashier.screen89.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen89.sound_led3 = defalut;
      print(qcashier.screen89.sound_led3);
      expect(qcashier.screen89.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen89.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02991_element_check_02968 **********\n\n");
    });

    test('02992_element_check_02969', () async {
      print("\n********** テスト実行：02992_element_check_02969 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.title;
      print(qcashier.screen90.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.title = testData1s;
      print(qcashier.screen90.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.title = testData2s;
      print(qcashier.screen90.title);
      expect(qcashier.screen90.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.title = defalut;
      print(qcashier.screen90.title);
      expect(qcashier.screen90.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02992_element_check_02969 **********\n\n");
    });

    test('02993_element_check_02970', () async {
      print("\n********** テスト実行：02993_element_check_02970 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.msg1;
      print(qcashier.screen90.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.msg1 = testData1s;
      print(qcashier.screen90.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.msg1 = testData2s;
      print(qcashier.screen90.msg1);
      expect(qcashier.screen90.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.msg1 = defalut;
      print(qcashier.screen90.msg1);
      expect(qcashier.screen90.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02993_element_check_02970 **********\n\n");
    });

    test('02994_element_check_02971', () async {
      print("\n********** テスト実行：02994_element_check_02971 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.msg2;
      print(qcashier.screen90.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.msg2 = testData1s;
      print(qcashier.screen90.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.msg2 = testData2s;
      print(qcashier.screen90.msg2);
      expect(qcashier.screen90.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.msg2 = defalut;
      print(qcashier.screen90.msg2);
      expect(qcashier.screen90.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02994_element_check_02971 **********\n\n");
    });

    test('02995_element_check_02972', () async {
      print("\n********** テスト実行：02995_element_check_02972 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.msg1_size;
      print(qcashier.screen90.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.msg1_size = testData1;
      print(qcashier.screen90.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.msg1_size = testData2;
      print(qcashier.screen90.msg1_size);
      expect(qcashier.screen90.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.msg1_size = defalut;
      print(qcashier.screen90.msg1_size);
      expect(qcashier.screen90.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02995_element_check_02972 **********\n\n");
    });

    test('02996_element_check_02973', () async {
      print("\n********** テスト実行：02996_element_check_02973 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.msg2_size;
      print(qcashier.screen90.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.msg2_size = testData1;
      print(qcashier.screen90.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.msg2_size = testData2;
      print(qcashier.screen90.msg2_size);
      expect(qcashier.screen90.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.msg2_size = defalut;
      print(qcashier.screen90.msg2_size);
      expect(qcashier.screen90.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02996_element_check_02973 **********\n\n");
    });

    test('02997_element_check_02974', () async {
      print("\n********** テスト実行：02997_element_check_02974 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.sound1;
      print(qcashier.screen90.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.sound1 = testData1;
      print(qcashier.screen90.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.sound1 = testData2;
      print(qcashier.screen90.sound1);
      expect(qcashier.screen90.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.sound1 = defalut;
      print(qcashier.screen90.sound1);
      expect(qcashier.screen90.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02997_element_check_02974 **********\n\n");
    });

    test('02998_element_check_02975', () async {
      print("\n********** テスト実行：02998_element_check_02975 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.sound2;
      print(qcashier.screen90.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.sound2 = testData1;
      print(qcashier.screen90.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.sound2 = testData2;
      print(qcashier.screen90.sound2);
      expect(qcashier.screen90.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.sound2 = defalut;
      print(qcashier.screen90.sound2);
      expect(qcashier.screen90.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02998_element_check_02975 **********\n\n");
    });

    test('02999_element_check_02976', () async {
      print("\n********** テスト実行：02999_element_check_02976 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.sound3;
      print(qcashier.screen90.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.sound3 = testData1;
      print(qcashier.screen90.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.sound3 = testData2;
      print(qcashier.screen90.sound3);
      expect(qcashier.screen90.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.sound3 = defalut;
      print(qcashier.screen90.sound3);
      expect(qcashier.screen90.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：02999_element_check_02976 **********\n\n");
    });

    test('03000_element_check_02977', () async {
      print("\n********** テスト実行：03000_element_check_02977 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.snd_timer;
      print(qcashier.screen90.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.snd_timer = testData1;
      print(qcashier.screen90.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.snd_timer = testData2;
      print(qcashier.screen90.snd_timer);
      expect(qcashier.screen90.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.snd_timer = defalut;
      print(qcashier.screen90.snd_timer);
      expect(qcashier.screen90.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：03000_element_check_02977 **********\n\n");
    });

    test('03001_element_check_02978', () async {
      print("\n********** テスト実行：03001_element_check_02978 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.timer1;
      print(qcashier.screen90.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.timer1 = testData1;
      print(qcashier.screen90.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.timer1 = testData2;
      print(qcashier.screen90.timer1);
      expect(qcashier.screen90.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.timer1 = defalut;
      print(qcashier.screen90.timer1);
      expect(qcashier.screen90.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：03001_element_check_02978 **********\n\n");
    });

    test('03002_element_check_02979', () async {
      print("\n********** テスト実行：03002_element_check_02979 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.timer2;
      print(qcashier.screen90.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.timer2 = testData1;
      print(qcashier.screen90.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.timer2 = testData2;
      print(qcashier.screen90.timer2);
      expect(qcashier.screen90.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.timer2 = defalut;
      print(qcashier.screen90.timer2);
      expect(qcashier.screen90.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：03002_element_check_02979 **********\n\n");
    });

    test('03003_element_check_02980', () async {
      print("\n********** テスト実行：03003_element_check_02980 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.timer3;
      print(qcashier.screen90.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.timer3 = testData1;
      print(qcashier.screen90.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.timer3 = testData2;
      print(qcashier.screen90.timer3);
      expect(qcashier.screen90.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.timer3 = defalut;
      print(qcashier.screen90.timer3);
      expect(qcashier.screen90.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：03003_element_check_02980 **********\n\n");
    });

    test('03004_element_check_02981', () async {
      print("\n********** テスト実行：03004_element_check_02981 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.dsp_flg1;
      print(qcashier.screen90.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.dsp_flg1 = testData1;
      print(qcashier.screen90.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.dsp_flg1 = testData2;
      print(qcashier.screen90.dsp_flg1);
      expect(qcashier.screen90.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.dsp_flg1 = defalut;
      print(qcashier.screen90.dsp_flg1);
      expect(qcashier.screen90.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：03004_element_check_02981 **********\n\n");
    });

    test('03005_element_check_02982', () async {
      print("\n********** テスト実行：03005_element_check_02982 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.dsp_flg2;
      print(qcashier.screen90.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.dsp_flg2 = testData1;
      print(qcashier.screen90.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.dsp_flg2 = testData2;
      print(qcashier.screen90.dsp_flg2);
      expect(qcashier.screen90.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.dsp_flg2 = defalut;
      print(qcashier.screen90.dsp_flg2);
      expect(qcashier.screen90.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：03005_element_check_02982 **********\n\n");
    });

    test('03006_element_check_02983', () async {
      print("\n********** テスト実行：03006_element_check_02983 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen90.movie01_ext;
      print(qcashier.screen90.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen90.movie01_ext = testData1;
      print(qcashier.screen90.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen90.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen90.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen90.movie01_ext = testData2;
      print(qcashier.screen90.movie01_ext);
      expect(qcashier.screen90.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen90.movie01_ext = defalut;
      print(qcashier.screen90.movie01_ext);
      expect(qcashier.screen90.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen90.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：03006_element_check_02983 **********\n\n");
    });
  });
}

void allPropatyCheckInit(QcashierJsonFile test)
{
  expect(test.common.item_disp, 0);
  expect(test.common.logo_typ, 0);
  expect(test.common.disp_typ, 0);
  expect(test.common.spdsp_use, 0);
  expect(test.common.fix_max, 0);
  expect(test.common.fix_typ, 0);
  expect(test.common.ptn_max, 0);
  expect(test.common.ptn_typ, 0);
  expect(test.common.spe_typ, 0);
  expect(test.common.chara_typ, 0);
  expect(test.common.language_typ, 0);
  expect(test.common.page_max, 0);
  expect(test.common.typ_max, 0);
  expect(test.common.pay_typ1, 0);
  expect(test.common.pay_typ2, 0);
  expect(test.common.pay_typ3, 0);
  expect(test.common.pay_typ4, 0);
  expect(test.common.pay_typ5, 0);
  expect(test.common.pay_typ6, 0);
  expect(test.common.pay_typ7, 0);
  expect(test.common.pay_typ8, 0);
  expect(test.common.demo_disp_btn, 0);
  expect(test.common.rcpt_limit_time, 0);
  expect(test.common.next_rcpt_limit, 0);
  expect(test.common.auto_susdsp, 0);
  expect(test.common.susdsp_time, 0);
  expect(test.common.rfm_receipt, 0);
  expect(test.common.signp_typ, 0);
  expect(test.common.select_typ, 0);
  expect(test.common.select_str_msg, 0);
  expect(test.common.regbag1_plucd, 0);
  expect(test.common.regbag2_plucd, 0);
  expect(test.common.regbag3_plucd, 0);
  expect(test.common.autocash_operation, 0);
  expect(test.common.autocash_equaltime, 0);
  expect(test.common.autocash_overtime, 0);
  expect(test.common.fip_disp, 0);
  expect(test.common.crdtcard_gettimer, 0);
  expect(test.common.charge_plucd1, 0);
  expect(test.common.charge_plucd2, 0);
  expect(test.common.charge_plucd3, 0);
  expect(test.common.charge_plucd4, 0);
  expect(test.common.charge_plucd5, 0);
  expect(test.common.charge_plucd6, 0);
  expect(test.common.crdtcard_warntime, 0);
  expect(test.common.acx_recalc_btn, 0);
  expect(test.common.lang_chg_max, 0);
  expect(test.common.lang_select1, 0);
  expect(test.common.lang_select2, 0);
  expect(test.common.lang_select3, 0);
  expect(test.common.lang_select4, 0);
  expect(test.common.lang_select5, 0);
  expect(test.common.lang_select6, 0);
  expect(test.common.lang_select7, 0);
  expect(test.common.lang_select8, 0);
  expect(test.common.autocrdt_operation, 0);
  expect(test.common.autocrdt_time, 0);
  expect(test.common.preca_charge_only, 0);
  expect(test.common.preca_charge_plucd1, 0);
  expect(test.common.preca_charge_plucd2, 0);
  expect(test.common.preca_charge_plucd3, 0);
  expect(test.common.preca_charge_plucd4, 0);
  expect(test.common.preca_charge_plucd5, 0);
  expect(test.common.preca_charge_plucd6, 0);
  expect(test.common.select_dsp_ccin, 0);
  expect(test.common.cancel_btn_dsp, 0);
  expect(test.common.clinic_mode, 0);
  expect(test.common.clinic_receipt, 0);
  expect(test.common.clinic_greeting, 0);
  expect(test.common.clinic_greeting_sound, 0);
  expect(test.common.fin_btn_chg, 0);
  expect(test.common.startdsp_btn_single, 0);
  expect(test.common.startdsp_scan_enable, 0);
  expect(test.common.pay_typ9, 0);
  expect(test.common.pay_typ10, 0);
  expect(test.common.pay_typ11, 0);
  expect(test.common.pay_typ12, 0);
  expect(test.common.pay_typ13, 0);
  expect(test.common.pay_typ14, 0);
  expect(test.common.pay_typ15, 0);
  expect(test.common.pay_typ16, 0);
  expect(test.common.verifone_nfc_crdt, 0);
  expect(test.common.hs_dualdisp_chk, 0);
  expect(test.common.back_btn_dsp, 0);
  expect(test.common.NoOperationWarning, 0);
  expect(test.common.NoOperationSignpaul_time, 0);
  expect(test.common.NoOperationVoicesound_time, 0);
  expect(test.common.NoOperationSound, 0);
  expect(test.common.NoOperationPayWarning, 0);
  expect(test.common.cin_dsp_wait, 0);
  expect(test.common.clinic_auto_stl, 0);
  expect(test.common.acracb_stlmode, 0);
  expect(test.common.apbf_regbag_plucd, 0);
  expect(test.common.apbf_dlgdisp_time, 0);
  expect(test.common.mybag_plu_point_add, 0);
  expect(test.common.video_jpqr_scanner, 0);
  expect(test.common.chg_warn_timer_use, 0);
  expect(test.common.cin_cnl_btn_show, 0);
  expect(test.common.regs_use_class, 0);
  expect(test.common.sg_eatin_chk, 0);
  expect(test.common.selfmode1_auto_cancel, 0);
  expect(test.common.point_use_unit, 0);
  expect(test.common.selfmode1_wav_qty, 0);
  expect(test.common.age_chk_notice, 0);
  expect(test.common.verifone_nfc_repika_crdt, 0);
  expect(test.common.regbag1_default, 0);
  expect(test.common.regbag2_default, 0);
  expect(test.common.regbag3_default, 0);
  expect(test.common.regbag_timing, 0);
  expect(test.common.regbag_disp_back_btn, 0);
  expect(test.common.self_disp_preca_ref, 0);
  expect(test.common.fs_cashless_dsp_change, 0);
  expect(test.common.hs_fs_scanning_guide, 0);
  expect(test.common.hs_fs_twice_read_stop, 0);
  expect(test.common.cashin_sound, 0);
  expect(test.common.sound_change_flg, 0);
  expect(test.common.hs_fs_auto_preset_dsp, 0);
  expect(test.common.cashless_dsp_return, 0);
  expect(test.common.regbag_screen_scan_input, 0);
  expect(test.common.g3_pay_btn_blink, 0);
  expect(test.common.g3_employee_call_btn, 0);
  expect(test.common.g3_pay_slct_btn_ptn, 0);
  expect(test.common.video_jpqr_sidescanner, 0);
  expect(test.common.mente_itemlist_type, 0);
  expect(test.common.rg_self_noteplu_perm, 0);
  expect(test.common.g3_self_itemlist_scrvoid, 0);
  expect(test.common.g3_fs_presetgroup_custom, 0);
  expect(test.common.g3_fs_presetgroup_btn1, 0);
  expect(test.common.g3_fs_presetgroup_btn2, 0);
  expect(test.common.g3_fs_presetgroup_btn3, 0);
  expect(test.common.g3_fs_presetgroup_btn4, 0);
  expect(test.common.g3_fs_presetgroup_btn5, 0);
  expect(test.common.g3_fs_presetgroup_btn6, 0);
  expect(test.common.g3_fs_presetgroup_btn7, 0);
  expect(test.common.g3_fs_presetgroup_btn8, 0);
  expect(test.common.callBuzzer_sound_change_flg, 0);
  expect(test.common.top_map_display, 0);
  expect(test.common.start_payselect_display, 0);
  expect(test.common.idle_signp_state, 0);
  expect(test.common.jpqr_paybtn_image, 0);
  expect(test.common.vega_credit_forget_chk, 0);
  expect(test.common.cash_only_setting, 0);
  expect(test.common.cash_only_border, 0);
  expect(test.chg_info.chg_info, 0);
  expect(test.chg_info.chg_5000, 0);
  expect(test.chg_info.chg_2000, 0);
  expect(test.chg_info.chg_1000, 0);
  expect(test.chg_info.chg_500, 0);
  expect(test.chg_info.chg_100, 0);
  expect(test.chg_info.chg_50, 0);
  expect(test.chg_info.chg_10, 0);
  expect(test.chg_info.chg_5, 0);
  expect(test.chg_info.chg_1, 0);
  expect(test.chg_info.chg_info_full_chk, 0);
  expect(test.chg_info.chg_signp_full_chk, 0);
  expect(test.period.spr_str, 0);
  expect(test.period.spr_end, 0);
  expect(test.period.sum_str, 0);
  expect(test.period.sum_end, 0);
  expect(test.period.aut_str, 0);
  expect(test.period.aut_end, 0);
  expect(test.period.win1_str, 0);
  expect(test.period.win1_end, 0);
  expect(test.period.win2_str, 0);
  expect(test.period.win2_end, 0);
  expect(test.period.sp1_flg, 0);
  expect(test.period.sp2_flg, 0);
  expect(test.period.sp3_flg, 0);
  expect(test.period.sp4_flg, 0);
  expect(test.period.sp5_flg, 0);
  expect(test.period.sp6_flg, 0);
  expect(test.period.sp7_flg, 0);
  expect(test.period.sp8_flg, 0);
  expect(test.period.sp9_flg, 0);
  expect(test.period.sp10_flg, 0);
  expect(test.period.sp11_flg, 0);
  expect(test.period.sp12_flg, 0);
  expect(test.period.sp13_flg, 0);
  expect(test.period.sp14_flg, 0);
  expect(test.period.sp15_flg, 0);
  expect(test.period.sp16_flg, 0);
  expect(test.period.sp17_flg, 0);
  expect(test.period.sp18_flg, 0);
  expect(test.period.sp1_str, 0);
  expect(test.period.sp1_end, 0);
  expect(test.period.sp2_str, "");
  expect(test.period.sp2_end, "");
  expect(test.period.sp3_str, 0);
  expect(test.period.sp3_end, 0);
  expect(test.period.sp4_str, 0);
  expect(test.period.sp4_end, 0);
  expect(test.period.sp5_str, "");
  expect(test.period.sp5_end, "");
  expect(test.period.sp6_str, 0);
  expect(test.period.sp6_end, 0);
  expect(test.period.sp7_str, 0);
  expect(test.period.sp7_end, 0);
  expect(test.period.sp8_str, "");
  expect(test.period.sp8_end, "");
  expect(test.period.sp9_str, "");
  expect(test.period.sp9_end, "");
  expect(test.period.sp10_str, 0);
  expect(test.period.sp10_end, 0);
  expect(test.period.sp11_str, "");
  expect(test.period.sp11_end, "");
  expect(test.period.sp12_str, 0);
  expect(test.period.sp12_end, 0);
  expect(test.period.sp13_str, "");
  expect(test.period.sp13_end, "");
  expect(test.period.sp14_str, 0);
  expect(test.period.sp14_end, 0);
  expect(test.period.sp15_str, "");
  expect(test.period.sp15_end, "");
  expect(test.period.sp16_str, 0);
  expect(test.period.sp16_end, 0);
  expect(test.period.sp17_str, 0);
  expect(test.period.sp17_end, 0);
  expect(test.period.sp18_str, "");
  expect(test.period.sp18_end, "");
  expect(test.period.spr_time1, 0);
  expect(test.period.spr_time2, 0);
  expect(test.period.sum_time1, 0);
  expect(test.period.sum_time2, 0);
  expect(test.period.aut_time1, 0);
  expect(test.period.aut_time2, 0);
  expect(test.period.win_time1, 0);
  expect(test.period.win_time2, 0);
  expect(test.screen0.title, "");
  expect(test.screen0.msg1, "");
  expect(test.screen0.msg2, "");
  expect(test.screen0.msg1_size, 0);
  expect(test.screen0.msg2_size, 0);
  expect(test.screen0.sound1, 0);
  expect(test.screen0.sound2, 0);
  expect(test.screen0.sound3, 0);
  expect(test.screen0.snd_timer, 0);
  expect(test.screen0.timer1, 0);
  expect(test.screen0.timer2, 0);
  expect(test.screen0.timer3, 0);
  expect(test.screen0.dsp_flg1, 0);
  expect(test.screen0.dsp_flg2, 0);
  expect(test.screen0.movie01_ext, 0);
  expect(test.screen0.movie02_ext, 0);
  expect(test.screen0.movie03_ext, 0);
  expect(test.screen0.movie04_ext, 0);
  expect(test.screen0.line_title, "");
  expect(test.screen0.line_title_ex, "");
  expect(test.screen0.line1, "");
  expect(test.screen0.line2, "");
  expect(test.screen0.line3, "");
  expect(test.screen0.line4, "");
  expect(test.screen0.line1_ex, "");
  expect(test.screen0.line2_ex, "");
  expect(test.screen0.line3_ex, "");
  expect(test.screen0.line4_ex, "");
  expect(test.screen0.sound_led1, 0);
  expect(test.screen0.sound_led2, 0);
  expect(test.screen0.sound_led3, 0);
  expect(test.screen1.title, "");
  expect(test.screen1.msg1, "");
  expect(test.screen1.msg2, "");
  expect(test.screen1.msg1_size, 0);
  expect(test.screen1.msg2_size, 0);
  expect(test.screen1.sound1, 0);
  expect(test.screen1.sound2, 0);
  expect(test.screen1.sound3, 0);
  expect(test.screen1.snd_timer, 0);
  expect(test.screen1.timer1, 0);
  expect(test.screen1.timer2, 0);
  expect(test.screen1.timer3, 0);
  expect(test.screen1.dsp_flg1, 0);
  expect(test.screen1.dsp_flg2, 0);
  expect(test.screen1.movie01_ext, 0);
  expect(test.screen1.movie02_ext, 0);
  expect(test.screen1.movie03_ext, 0);
  expect(test.screen1.movie04_ext, 0);
  expect(test.screen1.line_title, "");
  expect(test.screen1.line_title_ex, "");
  expect(test.screen1.line1, "");
  expect(test.screen1.line2, "");
  expect(test.screen1.line3, "");
  expect(test.screen1.line4, "");
  expect(test.screen1.line1_ex, "");
  expect(test.screen1.line2_ex, "");
  expect(test.screen1.line3_ex, "");
  expect(test.screen1.line4_ex, "");
  expect(test.screen1.sound_led1, 0);
  expect(test.screen1.sound_led2, 0);
  expect(test.screen1.sound_led3, 0);
  expect(test.screen2.title, "");
  expect(test.screen2.msg1, "");
  expect(test.screen2.msg2, "");
  expect(test.screen2.msg1_size, 0);
  expect(test.screen2.msg2_size, 0);
  expect(test.screen2.sound1, 0);
  expect(test.screen2.sound2, 0);
  expect(test.screen2.sound3, 0);
  expect(test.screen2.snd_timer, 0);
  expect(test.screen2.timer1, 0);
  expect(test.screen2.timer2, 0);
  expect(test.screen2.timer3, 0);
  expect(test.screen2.dsp_flg1, 0);
  expect(test.screen2.dsp_flg2, 0);
  expect(test.screen2.movie01_ext, 0);
  expect(test.screen2.movie02_ext, 0);
  expect(test.screen2.movie03_ext, 0);
  expect(test.screen2.movie04_ext, 0);
  expect(test.screen2.line_title, "");
  expect(test.screen2.line_title_ex, "");
  expect(test.screen2.line1, "");
  expect(test.screen2.line2, "");
  expect(test.screen2.line3, "");
  expect(test.screen2.line4, "");
  expect(test.screen2.line1_ex, "");
  expect(test.screen2.line2_ex, "");
  expect(test.screen2.line3_ex, "");
  expect(test.screen2.line4_ex, "");
  expect(test.screen2.sound_led1, 0);
  expect(test.screen2.sound_led2, 0);
  expect(test.screen2.sound_led3, 0);
  expect(test.screen3.title, "");
  expect(test.screen3.msg1, "");
  expect(test.screen3.msg2, "");
  expect(test.screen3.msg1_size, 0);
  expect(test.screen3.msg2_size, 0);
  expect(test.screen3.sound1, 0);
  expect(test.screen3.sound2, 0);
  expect(test.screen3.sound3, 0);
  expect(test.screen3.snd_timer, 0);
  expect(test.screen3.timer1, 0);
  expect(test.screen3.timer2, 0);
  expect(test.screen3.timer3, 0);
  expect(test.screen3.dsp_flg1, 0);
  expect(test.screen3.dsp_flg2, 0);
  expect(test.screen3.movie01_ext, 0);
  expect(test.screen3.movie02_ext, 0);
  expect(test.screen3.movie03_ext, 0);
  expect(test.screen3.movie04_ext, 0);
  expect(test.screen3.line_title, "");
  expect(test.screen3.line_title_ex, "");
  expect(test.screen3.line1, "");
  expect(test.screen3.line2, "");
  expect(test.screen3.line3, "");
  expect(test.screen3.line4, "");
  expect(test.screen3.line1_ex, "");
  expect(test.screen3.line2_ex, "");
  expect(test.screen3.line3_ex, "");
  expect(test.screen3.line4_ex, "");
  expect(test.screen3.sound_led1, 0);
  expect(test.screen3.sound_led2, 0);
  expect(test.screen3.sound_led3, 0);
  expect(test.screen4.title, "");
  expect(test.screen4.msg1, "");
  expect(test.screen4.msg2, "");
  expect(test.screen4.msg1_size, 0);
  expect(test.screen4.msg2_size, 0);
  expect(test.screen4.sound1, 0);
  expect(test.screen4.sound2, 0);
  expect(test.screen4.sound3, 0);
  expect(test.screen4.snd_timer, 0);
  expect(test.screen4.timer1, 0);
  expect(test.screen4.timer2, 0);
  expect(test.screen4.timer3, 0);
  expect(test.screen4.dsp_flg1, 0);
  expect(test.screen4.dsp_flg2, 0);
  expect(test.screen4.movie01_ext, 0);
  expect(test.screen4.movie02_ext, 0);
  expect(test.screen4.movie03_ext, 0);
  expect(test.screen4.movie04_ext, 0);
  expect(test.screen4.line_title, "");
  expect(test.screen4.line_title_ex, "");
  expect(test.screen4.line1, "");
  expect(test.screen4.line2, "");
  expect(test.screen4.line3, "");
  expect(test.screen4.line4, "");
  expect(test.screen4.line1_ex, "");
  expect(test.screen4.line2_ex, "");
  expect(test.screen4.line3_ex, "");
  expect(test.screen4.line4_ex, "");
  expect(test.screen4.sound_led1, 0);
  expect(test.screen4.sound_led2, 0);
  expect(test.screen4.sound_led3, 0);
  expect(test.screen5.title, "");
  expect(test.screen5.msg1, "");
  expect(test.screen5.msg2, "");
  expect(test.screen5.msg1_size, 0);
  expect(test.screen5.msg2_size, 0);
  expect(test.screen5.sound1, 0);
  expect(test.screen5.sound2, "");
  expect(test.screen5.sound3, 0);
  expect(test.screen5.snd_timer, 0);
  expect(test.screen5.timer1, 0);
  expect(test.screen5.timer2, 0);
  expect(test.screen5.timer3, 0);
  expect(test.screen5.dsp_flg1, 0);
  expect(test.screen5.dsp_flg2, 0);
  expect(test.screen5.movie01_ext, 0);
  expect(test.screen5.movie02_ext, 0);
  expect(test.screen5.movie03_ext, 0);
  expect(test.screen5.movie04_ext, 0);
  expect(test.screen5.line_title, "");
  expect(test.screen5.line_title_ex, "");
  expect(test.screen5.line1, "");
  expect(test.screen5.line2, "");
  expect(test.screen5.line3, "");
  expect(test.screen5.line4, "");
  expect(test.screen5.line1_ex, "");
  expect(test.screen5.line2_ex, "");
  expect(test.screen5.line3_ex, "");
  expect(test.screen5.line4_ex, "");
  expect(test.screen5.sound_led1, 0);
  expect(test.screen5.sound_led2, 0);
  expect(test.screen5.sound_led3, 0);
  expect(test.screen6.title, "");
  expect(test.screen6.msg1, "");
  expect(test.screen6.msg2, "");
  expect(test.screen6.msg1_size, 0);
  expect(test.screen6.msg2_size, 0);
  expect(test.screen6.sound1, 0);
  expect(test.screen6.sound2, 0);
  expect(test.screen6.sound3, 0);
  expect(test.screen6.snd_timer, 0);
  expect(test.screen6.timer1, 0);
  expect(test.screen6.timer2, 0);
  expect(test.screen6.timer3, 0);
  expect(test.screen6.dsp_flg1, 0);
  expect(test.screen6.dsp_flg2, 0);
  expect(test.screen6.movie01_ext, 0);
  expect(test.screen6.movie02_ext, 0);
  expect(test.screen6.movie03_ext, 0);
  expect(test.screen6.movie04_ext, 0);
  expect(test.screen6.line_title, "");
  expect(test.screen6.line_title_ex, "");
  expect(test.screen6.line1, "");
  expect(test.screen6.line2, "");
  expect(test.screen6.line3, "");
  expect(test.screen6.line4, "");
  expect(test.screen6.line1_ex, "");
  expect(test.screen6.line2_ex, "");
  expect(test.screen6.line3_ex, "");
  expect(test.screen6.line4_ex, "");
  expect(test.screen6.sound_led1, 0);
  expect(test.screen6.sound_led2, 0);
  expect(test.screen6.sound_led3, 0);
  expect(test.screen6.line2_1, "");
  expect(test.screen6.line2_2, "");
  expect(test.screen6.line2_3, "");
  expect(test.screen6.line2_4, "");
  expect(test.screen7.title, "");
  expect(test.screen7.msg1, "");
  expect(test.screen7.msg2, "");
  expect(test.screen7.msg1_size, 0);
  expect(test.screen7.msg2_size, 0);
  expect(test.screen7.sound1, 0);
  expect(test.screen7.sound2, 0);
  expect(test.screen7.sound3, 0);
  expect(test.screen7.snd_timer, 0);
  expect(test.screen7.timer1, 0);
  expect(test.screen7.timer2, 0);
  expect(test.screen7.timer3, 0);
  expect(test.screen7.dsp_flg1, 0);
  expect(test.screen7.dsp_flg2, 0);
  expect(test.screen7.movie01_ext, 0);
  expect(test.screen7.movie02_ext, 0);
  expect(test.screen7.movie03_ext, 0);
  expect(test.screen7.movie04_ext, 0);
  expect(test.screen7.line_title, "");
  expect(test.screen7.line_title_ex, "");
  expect(test.screen7.line1, "");
  expect(test.screen7.line2, "");
  expect(test.screen7.line3, "");
  expect(test.screen7.line4, "");
  expect(test.screen7.line1_ex, "");
  expect(test.screen7.line2_ex, "");
  expect(test.screen7.line3_ex, "");
  expect(test.screen7.line4_ex, "");
  expect(test.screen7.sound_led1, 0);
  expect(test.screen7.sound_led2, 0);
  expect(test.screen7.sound_led3, 0);
  expect(test.screen8.title, "");
  expect(test.screen8.msg1, "");
  expect(test.screen8.msg2, "");
  expect(test.screen8.msg1_size, 0);
  expect(test.screen8.msg2_size, 0);
  expect(test.screen8.sound1, 0);
  expect(test.screen8.sound2, 0);
  expect(test.screen8.sound3, 0);
  expect(test.screen8.snd_timer, 0);
  expect(test.screen8.timer1, 0);
  expect(test.screen8.timer2, 0);
  expect(test.screen8.timer3, 0);
  expect(test.screen8.dsp_flg1, 0);
  expect(test.screen8.dsp_flg2, 0);
  expect(test.screen8.movie01_ext, 0);
  expect(test.screen8.movie02_ext, 0);
  expect(test.screen8.movie03_ext, 0);
  expect(test.screen8.movie04_ext, 0);
  expect(test.screen8.line_title, "");
  expect(test.screen8.line_title_ex, "");
  expect(test.screen8.line1, "");
  expect(test.screen8.line2, "");
  expect(test.screen8.line3, "");
  expect(test.screen8.line4, "");
  expect(test.screen8.line1_ex, "");
  expect(test.screen8.line2_ex, "");
  expect(test.screen8.line3_ex, "");
  expect(test.screen8.line4_ex, "");
  expect(test.screen8.sound_led1, 0);
  expect(test.screen8.sound_led2, 0);
  expect(test.screen8.sound_led3, 0);
  expect(test.screen9.title, "");
  expect(test.screen9.msg1, "");
  expect(test.screen9.msg2, "");
  expect(test.screen9.msg1_size, 0);
  expect(test.screen9.msg2_size, 0);
  expect(test.screen9.sound1, 0);
  expect(test.screen9.sound2, 0);
  expect(test.screen9.sound3, 0);
  expect(test.screen9.snd_timer, 0);
  expect(test.screen9.timer1, 0);
  expect(test.screen9.timer2, 0);
  expect(test.screen9.timer3, 0);
  expect(test.screen9.dsp_flg1, 0);
  expect(test.screen9.dsp_flg2, 0);
  expect(test.screen9.movie01_ext, 0);
  expect(test.screen9.movie02_ext, 0);
  expect(test.screen9.movie03_ext, 0);
  expect(test.screen9.movie04_ext, 0);
  expect(test.screen9.line_title, "");
  expect(test.screen9.line_title_ex, "");
  expect(test.screen9.line1, "");
  expect(test.screen9.line2, "");
  expect(test.screen9.line3, "");
  expect(test.screen9.line4, "");
  expect(test.screen9.line1_ex, "");
  expect(test.screen9.line2_ex, "");
  expect(test.screen9.line3_ex, "");
  expect(test.screen9.line4_ex, "");
  expect(test.screen9.sound_led1, 0);
  expect(test.screen9.sound_led2, 0);
  expect(test.screen9.sound_led3, 0);
  expect(test.screen10.title, "");
  expect(test.screen10.msg1, "");
  expect(test.screen10.msg2, "");
  expect(test.screen10.msg1_size, 0);
  expect(test.screen10.msg2_size, 0);
  expect(test.screen10.sound1, 0);
  expect(test.screen10.sound2, 0);
  expect(test.screen10.sound3, 0);
  expect(test.screen10.snd_timer, 0);
  expect(test.screen10.timer1, 0);
  expect(test.screen10.timer2, 0);
  expect(test.screen10.timer3, 0);
  expect(test.screen10.dsp_flg1, 0);
  expect(test.screen10.dsp_flg2, 0);
  expect(test.screen10.movie01_ext, 0);
  expect(test.screen10.movie02_ext, 0);
  expect(test.screen10.movie03_ext, 0);
  expect(test.screen10.movie04_ext, 0);
  expect(test.screen10.line_title, "");
  expect(test.screen10.line_title_ex, "");
  expect(test.screen10.line1, "");
  expect(test.screen10.line2, "");
  expect(test.screen10.line3, "");
  expect(test.screen10.line4, "");
  expect(test.screen10.line1_ex, "");
  expect(test.screen10.line2_ex, "");
  expect(test.screen10.line3_ex, "");
  expect(test.screen10.line4_ex, "");
  expect(test.screen10.sound_led1, 0);
  expect(test.screen10.sound_led2, 0);
  expect(test.screen10.sound_led3, 0);
  expect(test.screen11.title, "");
  expect(test.screen11.msg1, "");
  expect(test.screen11.msg2, "");
  expect(test.screen11.msg1_size, 0);
  expect(test.screen11.msg2_size, 0);
  expect(test.screen11.sound1, 0);
  expect(test.screen11.sound2, 0);
  expect(test.screen11.sound3, 0);
  expect(test.screen11.snd_timer, 0);
  expect(test.screen11.timer1, 0);
  expect(test.screen11.timer2, 0);
  expect(test.screen11.timer3, 0);
  expect(test.screen11.dsp_flg1, 0);
  expect(test.screen11.dsp_flg2, 0);
  expect(test.screen11.movie01_ext, 0);
  expect(test.screen11.movie02_ext, 0);
  expect(test.screen11.movie03_ext, 0);
  expect(test.screen11.movie04_ext, 0);
  expect(test.screen11.line_title, "");
  expect(test.screen11.line_title_ex, "");
  expect(test.screen11.line1, "");
  expect(test.screen11.line2, "");
  expect(test.screen11.line3, "");
  expect(test.screen11.line4, "");
  expect(test.screen11.line1_ex, "");
  expect(test.screen11.line2_ex, "");
  expect(test.screen11.line3_ex, "");
  expect(test.screen11.line4_ex, "");
  expect(test.screen11.sound_led1, 0);
  expect(test.screen11.sound_led2, 0);
  expect(test.screen11.sound_led3, 0);
  expect(test.screen12.title, "");
  expect(test.screen12.msg1, "");
  expect(test.screen12.msg2, "");
  expect(test.screen12.msg1_size, 0);
  expect(test.screen12.msg2_size, 0);
  expect(test.screen12.sound1, 0);
  expect(test.screen12.sound2, 0);
  expect(test.screen12.sound3, 0);
  expect(test.screen12.snd_timer, 0);
  expect(test.screen12.timer1, 0);
  expect(test.screen12.timer2, 0);
  expect(test.screen12.timer3, 0);
  expect(test.screen12.dsp_flg1, 0);
  expect(test.screen12.dsp_flg2, 0);
  expect(test.screen12.movie01_ext, 0);
  expect(test.screen12.movie02_ext, 0);
  expect(test.screen12.movie03_ext, 0);
  expect(test.screen12.movie04_ext, 0);
  expect(test.screen12.line_title, "");
  expect(test.screen12.line_title_ex, "");
  expect(test.screen12.line1, "");
  expect(test.screen12.line2, "");
  expect(test.screen12.line3, "");
  expect(test.screen12.line4, "");
  expect(test.screen12.line1_ex, "");
  expect(test.screen12.line2_ex, "");
  expect(test.screen12.line3_ex, "");
  expect(test.screen12.line4_ex, "");
  expect(test.screen12.sound_led1, 0);
  expect(test.screen12.sound_led2, 0);
  expect(test.screen12.sound_led3, 0);
  expect(test.screen13.title, "");
  expect(test.screen13.msg1, "");
  expect(test.screen13.msg2, "");
  expect(test.screen13.msg1_size, 0);
  expect(test.screen13.msg2_size, 0);
  expect(test.screen13.sound1, 0);
  expect(test.screen13.sound2, 0);
  expect(test.screen13.sound3, 0);
  expect(test.screen13.snd_timer, 0);
  expect(test.screen13.timer1, 0);
  expect(test.screen13.timer2, 0);
  expect(test.screen13.timer3, 0);
  expect(test.screen13.dsp_flg1, 0);
  expect(test.screen13.dsp_flg2, 0);
  expect(test.screen13.movie01_ext, 0);
  expect(test.screen13.movie02_ext, 0);
  expect(test.screen13.movie03_ext, 0);
  expect(test.screen13.movie04_ext, 0);
  expect(test.screen13.line_title, "");
  expect(test.screen13.line_title_ex, "");
  expect(test.screen13.line1, "");
  expect(test.screen13.line2, "");
  expect(test.screen13.line3, "");
  expect(test.screen13.line4, "");
  expect(test.screen13.line1_ex, "");
  expect(test.screen13.line2_ex, "");
  expect(test.screen13.line3_ex, "");
  expect(test.screen13.line4_ex, "");
  expect(test.screen13.sound_led1, 0);
  expect(test.screen13.sound_led2, 0);
  expect(test.screen13.sound_led3, 0);
  expect(test.screen14.title, "");
  expect(test.screen14.msg1, "");
  expect(test.screen14.msg2, "");
  expect(test.screen14.msg1_size, 0);
  expect(test.screen14.msg2_size, 0);
  expect(test.screen14.sound1, 0);
  expect(test.screen14.sound2, 0);
  expect(test.screen14.sound3, 0);
  expect(test.screen14.snd_timer, 0);
  expect(test.screen14.timer1, 0);
  expect(test.screen14.timer2, 0);
  expect(test.screen14.timer3, 0);
  expect(test.screen14.dsp_flg1, 0);
  expect(test.screen14.dsp_flg2, 0);
  expect(test.screen14.movie01_ext, 0);
  expect(test.screen14.movie02_ext, 0);
  expect(test.screen14.movie03_ext, 0);
  expect(test.screen14.movie04_ext, 0);
  expect(test.screen14.line_title, "");
  expect(test.screen14.line_title_ex, "");
  expect(test.screen14.line1, "");
  expect(test.screen14.line2, "");
  expect(test.screen14.line3, "");
  expect(test.screen14.line4, "");
  expect(test.screen14.line1_ex, "");
  expect(test.screen14.line2_ex, "");
  expect(test.screen14.line3_ex, "");
  expect(test.screen14.line4_ex, "");
  expect(test.screen14.sound_led1, 0);
  expect(test.screen14.sound_led2, 0);
  expect(test.screen14.sound_led3, 0);
  expect(test.screen15.title, "");
  expect(test.screen15.msg1, "");
  expect(test.screen15.msg2, "");
  expect(test.screen15.msg1_size, 0);
  expect(test.screen15.msg2_size, 0);
  expect(test.screen15.sound1, 0);
  expect(test.screen15.sound2, 0);
  expect(test.screen15.sound3, 0);
  expect(test.screen15.snd_timer, 0);
  expect(test.screen15.timer1, 0);
  expect(test.screen15.timer2, 0);
  expect(test.screen15.timer3, 0);
  expect(test.screen15.dsp_flg1, 0);
  expect(test.screen15.dsp_flg2, 0);
  expect(test.screen15.movie01_ext, 0);
  expect(test.screen15.movie02_ext, 0);
  expect(test.screen15.movie03_ext, 0);
  expect(test.screen15.movie04_ext, 0);
  expect(test.screen15.line_title, "");
  expect(test.screen15.line_title_ex, "");
  expect(test.screen15.line1, "");
  expect(test.screen15.line2, "");
  expect(test.screen15.line3, "");
  expect(test.screen15.line4, "");
  expect(test.screen15.line1_ex, "");
  expect(test.screen15.line2_ex, "");
  expect(test.screen15.line3_ex, "");
  expect(test.screen15.line4_ex, "");
  expect(test.screen15.sound_led1, 0);
  expect(test.screen15.sound_led2, 0);
  expect(test.screen15.sound_led3, 0);
  expect(test.screen16.title, "");
  expect(test.screen16.msg1, "");
  expect(test.screen16.msg2, "");
  expect(test.screen16.msg1_size, 0);
  expect(test.screen16.msg2_size, 0);
  expect(test.screen16.sound1, 0);
  expect(test.screen16.sound2, "");
  expect(test.screen16.sound3, "");
  expect(test.screen16.snd_timer, 0);
  expect(test.screen16.timer1, 0);
  expect(test.screen16.timer2, 0);
  expect(test.screen16.timer3, 0);
  expect(test.screen16.dsp_flg1, 0);
  expect(test.screen16.dsp_flg2, 0);
  expect(test.screen16.movie01_ext, 0);
  expect(test.screen16.movie02_ext, 0);
  expect(test.screen16.movie03_ext, 0);
  expect(test.screen16.movie04_ext, 0);
  expect(test.screen16.line_title, "");
  expect(test.screen16.line_title_ex, "");
  expect(test.screen16.line1, "");
  expect(test.screen16.line2, "");
  expect(test.screen16.line3, "");
  expect(test.screen16.line4, "");
  expect(test.screen16.line1_ex, "");
  expect(test.screen16.line2_ex, "");
  expect(test.screen16.line3_ex, "");
  expect(test.screen16.line4_ex, "");
  expect(test.screen16.sound_led1, 0);
  expect(test.screen16.sound_led2, "");
  expect(test.screen16.sound_led3, "");
  expect(test.screen16.msg_max, 0);
  expect(test.screen16.line2_1, "");
  expect(test.screen16.line2_2, "");
  expect(test.screen16.line2_3, "");
  expect(test.screen16.line2_4, "");
  expect(test.screen16.line2_1_ex, "");
  expect(test.screen16.line2_2_ex, "");
  expect(test.screen16.line2_3_ex, "");
  expect(test.screen16.line2_4_ex, "");
  expect(test.screen17.title, "");
  expect(test.screen17.msg1, "");
  expect(test.screen17.msg2, "");
  expect(test.screen17.msg1_size, 0);
  expect(test.screen17.msg2_size, 0);
  expect(test.screen17.sound1, 0);
  expect(test.screen17.sound2, 0);
  expect(test.screen17.sound3, 0);
  expect(test.screen17.snd_timer, 0);
  expect(test.screen17.timer1, 0);
  expect(test.screen17.timer2, 0);
  expect(test.screen17.timer3, 0);
  expect(test.screen17.dsp_flg1, 0);
  expect(test.screen17.dsp_flg2, 0);
  expect(test.screen17.movie01_ext, 0);
  expect(test.screen17.movie02_ext, 0);
  expect(test.screen17.movie03_ext, 0);
  expect(test.screen17.movie04_ext, 0);
  expect(test.screen17.line_title, "");
  expect(test.screen17.line_title_ex, "");
  expect(test.screen17.line1, "");
  expect(test.screen17.line2, "");
  expect(test.screen17.line3, "");
  expect(test.screen17.line4, "");
  expect(test.screen17.line1_ex, "");
  expect(test.screen17.line2_ex, "");
  expect(test.screen17.line3_ex, "");
  expect(test.screen17.line4_ex, "");
  expect(test.screen17.sound_led1, 0);
  expect(test.screen17.sound_led2, 0);
  expect(test.screen17.sound_led3, 0);
  expect(test.screen18.title, "");
  expect(test.screen18.msg1, "");
  expect(test.screen18.msg2, "");
  expect(test.screen18.msg1_size, 0);
  expect(test.screen18.msg2_size, 0);
  expect(test.screen18.sound1, 0);
  expect(test.screen18.sound2, 0);
  expect(test.screen18.sound3, 0);
  expect(test.screen18.snd_timer, 0);
  expect(test.screen18.timer1, 0);
  expect(test.screen18.timer2, 0);
  expect(test.screen18.timer3, 0);
  expect(test.screen18.dsp_flg1, 0);
  expect(test.screen18.dsp_flg2, 0);
  expect(test.screen18.movie01_ext, 0);
  expect(test.screen18.movie02_ext, 0);
  expect(test.screen18.movie03_ext, 0);
  expect(test.screen18.movie04_ext, 0);
  expect(test.screen18.line_title, "");
  expect(test.screen18.line_title_ex, "");
  expect(test.screen18.line1, "");
  expect(test.screen18.line2, "");
  expect(test.screen18.line3, "");
  expect(test.screen18.line4, "");
  expect(test.screen18.line1_ex, "");
  expect(test.screen18.line2_ex, "");
  expect(test.screen18.line3_ex, "");
  expect(test.screen18.line4_ex, "");
  expect(test.screen18.sound_led1, 0);
  expect(test.screen18.sound_led2, 0);
  expect(test.screen18.sound_led3, 0);
  expect(test.screen19.title, "");
  expect(test.screen19.msg1, "");
  expect(test.screen19.msg2, "");
  expect(test.screen19.msg1_size, 0);
  expect(test.screen19.msg2_size, 0);
  expect(test.screen19.sound1, 0);
  expect(test.screen19.sound2, "");
  expect(test.screen19.sound3, "");
  expect(test.screen19.snd_timer, 0);
  expect(test.screen19.timer1, 0);
  expect(test.screen19.timer2, 0);
  expect(test.screen19.timer3, 0);
  expect(test.screen19.dsp_flg1, 0);
  expect(test.screen19.dsp_flg2, 0);
  expect(test.screen19.movie01_ext, 0);
  expect(test.screen19.movie02_ext, 0);
  expect(test.screen19.movie03_ext, 0);
  expect(test.screen19.movie04_ext, 0);
  expect(test.screen19.line_title, "");
  expect(test.screen19.line_title_ex, "");
  expect(test.screen19.line1, "");
  expect(test.screen19.line2, "");
  expect(test.screen19.line3, "");
  expect(test.screen19.line4, "");
  expect(test.screen19.line1_ex, "");
  expect(test.screen19.line2_ex, "");
  expect(test.screen19.line3_ex, "");
  expect(test.screen19.line4_ex, "");
  expect(test.screen19.sound_led1, 0);
  expect(test.screen19.sound_led2, "");
  expect(test.screen19.sound_led3, "");
  expect(test.screen20.title, "");
  expect(test.screen20.msg1, "");
  expect(test.screen20.msg2, "");
  expect(test.screen20.msg1_size, 0);
  expect(test.screen20.msg2_size, 0);
  expect(test.screen20.sound1, 0);
  expect(test.screen20.sound2, 0);
  expect(test.screen20.sound3, 0);
  expect(test.screen20.snd_timer, 0);
  expect(test.screen20.timer1, 0);
  expect(test.screen20.timer2, 0);
  expect(test.screen20.timer3, 0);
  expect(test.screen20.dsp_flg1, 0);
  expect(test.screen20.dsp_flg2, 0);
  expect(test.screen20.movie01_ext, 0);
  expect(test.screen20.movie02_ext, 0);
  expect(test.screen20.movie03_ext, 0);
  expect(test.screen20.movie04_ext, 0);
  expect(test.screen20.line_title, "");
  expect(test.screen20.line_title_ex, "");
  expect(test.screen20.line1, "");
  expect(test.screen20.line2, "");
  expect(test.screen20.line3, "");
  expect(test.screen20.line4, "");
  expect(test.screen20.line1_ex, "");
  expect(test.screen20.line2_ex, "");
  expect(test.screen20.line3_ex, "");
  expect(test.screen20.line4_ex, "");
  expect(test.screen20.sound_led1, 0);
  expect(test.screen20.sound_led2, 0);
  expect(test.screen20.sound_led3, 0);
  expect(test.screen21.title, "");
  expect(test.screen21.msg1, "");
  expect(test.screen21.msg2, "");
  expect(test.screen21.msg1_size, 0);
  expect(test.screen21.msg2_size, 0);
  expect(test.screen21.sound1, 0);
  expect(test.screen21.sound2, 0);
  expect(test.screen21.sound3, 0);
  expect(test.screen21.snd_timer, 0);
  expect(test.screen21.timer1, 0);
  expect(test.screen21.timer2, 0);
  expect(test.screen21.timer3, 0);
  expect(test.screen21.dsp_flg1, 0);
  expect(test.screen21.dsp_flg2, 0);
  expect(test.screen21.movie01_ext, 0);
  expect(test.screen21.movie02_ext, 0);
  expect(test.screen21.movie03_ext, 0);
  expect(test.screen21.movie04_ext, 0);
  expect(test.screen21.line_title, "");
  expect(test.screen21.line_title_ex, "");
  expect(test.screen21.line1, "");
  expect(test.screen21.line2, "");
  expect(test.screen21.line3, "");
  expect(test.screen21.line4, "");
  expect(test.screen21.line1_ex, "");
  expect(test.screen21.line2_ex, "");
  expect(test.screen21.line3_ex, "");
  expect(test.screen21.line4_ex, "");
  expect(test.screen21.sound_led1, 0);
  expect(test.screen21.sound_led2, 0);
  expect(test.screen21.sound_led3, 0);
  expect(test.screen22.title, "");
  expect(test.screen22.msg1, "");
  expect(test.screen22.msg2, "");
  expect(test.screen22.msg1_size, 0);
  expect(test.screen22.msg2_size, 0);
  expect(test.screen22.sound1, 0);
  expect(test.screen22.sound2, 0);
  expect(test.screen22.sound3, 0);
  expect(test.screen22.snd_timer, 0);
  expect(test.screen22.timer1, 0);
  expect(test.screen22.timer2, 0);
  expect(test.screen22.timer3, 0);
  expect(test.screen22.dsp_flg1, 0);
  expect(test.screen22.dsp_flg2, 0);
  expect(test.screen22.movie01_ext, 0);
  expect(test.screen22.movie02_ext, 0);
  expect(test.screen22.movie03_ext, 0);
  expect(test.screen22.movie04_ext, 0);
  expect(test.screen22.line_title, "");
  expect(test.screen22.line_title_ex, "");
  expect(test.screen22.line1, "");
  expect(test.screen22.line2, "");
  expect(test.screen22.line3, "");
  expect(test.screen22.line4, "");
  expect(test.screen22.line1_ex, "");
  expect(test.screen22.line2_ex, "");
  expect(test.screen22.line3_ex, "");
  expect(test.screen22.line4_ex, "");
  expect(test.screen22.sound_led1, 0);
  expect(test.screen22.sound_led2, 0);
  expect(test.screen22.sound_led3, 0);
  expect(test.screen23.title, "");
  expect(test.screen23.msg1, "");
  expect(test.screen23.msg2, "");
  expect(test.screen23.msg1_size, 0);
  expect(test.screen23.msg2_size, 0);
  expect(test.screen23.sound1, 0);
  expect(test.screen23.sound2, 0);
  expect(test.screen23.sound3, 0);
  expect(test.screen23.snd_timer, 0);
  expect(test.screen23.timer1, 0);
  expect(test.screen23.timer2, 0);
  expect(test.screen23.timer3, 0);
  expect(test.screen23.dsp_flg1, 0);
  expect(test.screen23.dsp_flg2, 0);
  expect(test.screen23.movie01_ext, 0);
  expect(test.screen23.movie02_ext, 0);
  expect(test.screen23.movie03_ext, 0);
  expect(test.screen23.movie04_ext, 0);
  expect(test.screen23.line_title, "");
  expect(test.screen23.line_title_ex, "");
  expect(test.screen23.line1, "");
  expect(test.screen23.line2, "");
  expect(test.screen23.line3, "");
  expect(test.screen23.line4, "");
  expect(test.screen23.line1_ex, "");
  expect(test.screen23.line2_ex, "");
  expect(test.screen23.line3_ex, "");
  expect(test.screen23.line4_ex, "");
  expect(test.screen23.sound_led1, 0);
  expect(test.screen23.sound_led2, 0);
  expect(test.screen23.sound_led3, 0);
  expect(test.screen24.title, "");
  expect(test.screen24.msg1, "");
  expect(test.screen24.msg2, "");
  expect(test.screen24.msg1_size, 0);
  expect(test.screen24.msg2_size, 0);
  expect(test.screen24.sound1, 0);
  expect(test.screen24.sound2, 0);
  expect(test.screen24.sound3, 0);
  expect(test.screen24.snd_timer, 0);
  expect(test.screen24.timer1, 0);
  expect(test.screen24.timer2, 0);
  expect(test.screen24.timer3, 0);
  expect(test.screen24.dsp_flg1, 0);
  expect(test.screen24.dsp_flg2, 0);
  expect(test.screen24.movie01_ext, 0);
  expect(test.screen24.movie02_ext, 0);
  expect(test.screen24.movie03_ext, 0);
  expect(test.screen24.movie04_ext, 0);
  expect(test.screen24.line_title, "");
  expect(test.screen24.line_title_ex, "");
  expect(test.screen24.line1, "");
  expect(test.screen24.line2, "");
  expect(test.screen24.line3, "");
  expect(test.screen24.line4, "");
  expect(test.screen24.line1_ex, "");
  expect(test.screen24.line2_ex, "");
  expect(test.screen24.line3_ex, "");
  expect(test.screen24.line4_ex, "");
  expect(test.screen24.sound_led1, 0);
  expect(test.screen24.sound_led2, 0);
  expect(test.screen24.sound_led3, 0);
  expect(test.screen25.title, "");
  expect(test.screen25.msg1, "");
  expect(test.screen25.msg2, "");
  expect(test.screen25.msg1_size, 0);
  expect(test.screen25.msg2_size, 0);
  expect(test.screen25.sound1, 0);
  expect(test.screen25.sound2, 0);
  expect(test.screen25.sound3, 0);
  expect(test.screen25.snd_timer, 0);
  expect(test.screen25.timer1, 0);
  expect(test.screen25.timer2, 0);
  expect(test.screen25.timer3, 0);
  expect(test.screen25.dsp_flg1, 0);
  expect(test.screen25.dsp_flg2, 0);
  expect(test.screen25.movie01_ext, 0);
  expect(test.screen25.movie02_ext, 0);
  expect(test.screen25.movie03_ext, 0);
  expect(test.screen25.movie04_ext, 0);
  expect(test.screen25.line_title, "");
  expect(test.screen25.line_title_ex, "");
  expect(test.screen25.line1, "");
  expect(test.screen25.line2, "");
  expect(test.screen25.line3, "");
  expect(test.screen25.line4, "");
  expect(test.screen25.line1_ex, "");
  expect(test.screen25.line2_ex, "");
  expect(test.screen25.line3_ex, "");
  expect(test.screen25.line4_ex, "");
  expect(test.screen25.sound_led1, 0);
  expect(test.screen25.sound_led2, 0);
  expect(test.screen25.sound_led3, 0);
  expect(test.screen26.title, "");
  expect(test.screen26.msg1, "");
  expect(test.screen26.msg2, "");
  expect(test.screen26.msg1_size, 0);
  expect(test.screen26.msg2_size, 0);
  expect(test.screen26.sound1, 0);
  expect(test.screen26.sound2, "");
  expect(test.screen26.sound3, "");
  expect(test.screen26.snd_timer, 0);
  expect(test.screen26.timer1, 0);
  expect(test.screen26.timer2, 0);
  expect(test.screen26.timer3, 0);
  expect(test.screen26.dsp_flg1, 0);
  expect(test.screen26.dsp_flg2, 0);
  expect(test.screen26.movie01_ext, 0);
  expect(test.screen26.movie02_ext, 0);
  expect(test.screen26.movie03_ext, 0);
  expect(test.screen26.movie04_ext, 0);
  expect(test.screen26.line_title, "");
  expect(test.screen26.line_title_ex, "");
  expect(test.screen26.line1, "");
  expect(test.screen26.line2, "");
  expect(test.screen26.line3, "");
  expect(test.screen26.line4, "");
  expect(test.screen26.line1_ex, "");
  expect(test.screen26.line2_ex, "");
  expect(test.screen26.line3_ex, "");
  expect(test.screen26.line4_ex, "");
  expect(test.screen26.sound_led1, 0);
  expect(test.screen26.sound_led2, "");
  expect(test.screen26.sound_led3, "");
  expect(test.screen27.title, "");
  expect(test.screen27.msg1, "");
  expect(test.screen27.msg2, "");
  expect(test.screen27.msg1_size, 0);
  expect(test.screen27.msg2_size, 0);
  expect(test.screen27.sound1, 0);
  expect(test.screen27.sound2, 0);
  expect(test.screen27.sound3, 0);
  expect(test.screen27.snd_timer, 0);
  expect(test.screen27.timer1, 0);
  expect(test.screen27.timer2, 0);
  expect(test.screen27.timer3, 0);
  expect(test.screen27.dsp_flg1, 0);
  expect(test.screen27.dsp_flg2, 0);
  expect(test.screen27.movie01_ext, 0);
  expect(test.screen27.movie02_ext, 0);
  expect(test.screen27.movie03_ext, 0);
  expect(test.screen27.movie04_ext, 0);
  expect(test.screen27.line_title, "");
  expect(test.screen27.line_title_ex, "");
  expect(test.screen27.line1, "");
  expect(test.screen27.line2, "");
  expect(test.screen27.line3, "");
  expect(test.screen27.line4, "");
  expect(test.screen27.line1_ex, "");
  expect(test.screen27.line2_ex, "");
  expect(test.screen27.line3_ex, "");
  expect(test.screen27.line4_ex, "");
  expect(test.screen27.sound_led1, 0);
  expect(test.screen27.sound_led2, 0);
  expect(test.screen27.sound_led3, 0);
  expect(test.screen28.title, "");
  expect(test.screen28.msg1, "");
  expect(test.screen28.msg2, "");
  expect(test.screen28.msg1_size, 0);
  expect(test.screen28.msg2_size, 0);
  expect(test.screen28.sound1, 0);
  expect(test.screen28.sound2, 0);
  expect(test.screen28.sound3, 0);
  expect(test.screen28.snd_timer, 0);
  expect(test.screen28.timer1, 0);
  expect(test.screen28.timer2, 0);
  expect(test.screen28.timer3, 0);
  expect(test.screen28.dsp_flg1, 0);
  expect(test.screen28.dsp_flg2, 0);
  expect(test.screen28.movie01_ext, 0);
  expect(test.screen28.movie02_ext, 0);
  expect(test.screen28.movie03_ext, 0);
  expect(test.screen28.movie04_ext, 0);
  expect(test.screen28.line_title, "");
  expect(test.screen28.line_title_ex, "");
  expect(test.screen28.line1, "");
  expect(test.screen28.line2, "");
  expect(test.screen28.line3, "");
  expect(test.screen28.line4, "");
  expect(test.screen28.line1_ex, "");
  expect(test.screen28.line2_ex, "");
  expect(test.screen28.line3_ex, "");
  expect(test.screen28.line4_ex, "");
  expect(test.screen28.sound_led1, 0);
  expect(test.screen28.sound_led2, 0);
  expect(test.screen28.sound_led3, 0);
  expect(test.screen29.title, "");
  expect(test.screen29.msg1, "");
  expect(test.screen29.msg2, "");
  expect(test.screen29.msg1_size, 0);
  expect(test.screen29.msg2_size, 0);
  expect(test.screen29.sound1, 0);
  expect(test.screen29.sound2, 0);
  expect(test.screen29.sound3, 0);
  expect(test.screen29.snd_timer, 0);
  expect(test.screen29.timer1, 0);
  expect(test.screen29.timer2, 0);
  expect(test.screen29.timer3, 0);
  expect(test.screen29.dsp_flg1, 0);
  expect(test.screen29.dsp_flg2, 0);
  expect(test.screen29.movie01_ext, 0);
  expect(test.screen29.movie02_ext, 0);
  expect(test.screen29.movie03_ext, 0);
  expect(test.screen29.movie04_ext, 0);
  expect(test.screen29.line_title, "");
  expect(test.screen29.line_title_ex, "");
  expect(test.screen29.line1, "");
  expect(test.screen29.line2, "");
  expect(test.screen29.line3, "");
  expect(test.screen29.line4, "");
  expect(test.screen29.line1_ex, "");
  expect(test.screen29.line2_ex, "");
  expect(test.screen29.line3_ex, "");
  expect(test.screen29.line4_ex, "");
  expect(test.screen29.sound_led1, 0);
  expect(test.screen29.sound_led2, 0);
  expect(test.screen29.sound_led3, 0);
  expect(test.screen30.title, "");
  expect(test.screen30.msg1, "");
  expect(test.screen30.msg2, "");
  expect(test.screen30.msg1_size, 0);
  expect(test.screen30.msg2_size, 0);
  expect(test.screen30.sound1, 0);
  expect(test.screen30.sound2, 0);
  expect(test.screen30.sound3, 0);
  expect(test.screen30.snd_timer, 0);
  expect(test.screen30.timer1, 0);
  expect(test.screen30.timer2, 0);
  expect(test.screen30.timer3, 0);
  expect(test.screen30.dsp_flg1, 0);
  expect(test.screen30.dsp_flg2, 0);
  expect(test.screen30.movie01_ext, 0);
  expect(test.screen30.movie02_ext, 0);
  expect(test.screen30.movie03_ext, 0);
  expect(test.screen30.movie04_ext, 0);
  expect(test.screen30.line_title, "");
  expect(test.screen30.line_title_ex, "");
  expect(test.screen30.line1, "");
  expect(test.screen30.line2, "");
  expect(test.screen30.line3, "");
  expect(test.screen30.line4, "");
  expect(test.screen30.line1_ex, "");
  expect(test.screen30.line2_ex, "");
  expect(test.screen30.line3_ex, "");
  expect(test.screen30.line4_ex, "");
  expect(test.screen30.sound_led1, 0);
  expect(test.screen30.sound_led2, 0);
  expect(test.screen30.sound_led3, 0);
  expect(test.screen31.title, "");
  expect(test.screen31.msg1, "");
  expect(test.screen31.msg2, "");
  expect(test.screen31.msg1_size, 0);
  expect(test.screen31.msg2_size, 0);
  expect(test.screen31.sound1, 0);
  expect(test.screen31.sound2, 0);
  expect(test.screen31.sound3, 0);
  expect(test.screen31.snd_timer, 0);
  expect(test.screen31.timer1, 0);
  expect(test.screen31.timer2, 0);
  expect(test.screen31.timer3, 0);
  expect(test.screen31.dsp_flg1, 0);
  expect(test.screen31.dsp_flg2, 0);
  expect(test.screen31.movie01_ext, 0);
  expect(test.screen31.movie02_ext, 0);
  expect(test.screen31.movie03_ext, 0);
  expect(test.screen31.movie04_ext, 0);
  expect(test.screen31.line_title, "");
  expect(test.screen31.line_title_ex, "");
  expect(test.screen31.line1, "");
  expect(test.screen31.line2, "");
  expect(test.screen31.line3, "");
  expect(test.screen31.line4, "");
  expect(test.screen31.line1_ex, "");
  expect(test.screen31.line2_ex, "");
  expect(test.screen31.line3_ex, "");
  expect(test.screen31.line4_ex, "");
  expect(test.screen31.sound_led1, 0);
  expect(test.screen31.sound_led2, 0);
  expect(test.screen31.sound_led3, 0);
  expect(test.screen32.title, "");
  expect(test.screen32.msg1, "");
  expect(test.screen32.msg2, "");
  expect(test.screen32.msg1_size, 0);
  expect(test.screen32.msg2_size, 0);
  expect(test.screen32.sound1, 0);
  expect(test.screen32.sound2, 0);
  expect(test.screen32.sound3, 0);
  expect(test.screen32.snd_timer, 0);
  expect(test.screen32.timer1, 0);
  expect(test.screen32.timer2, 0);
  expect(test.screen32.timer3, 0);
  expect(test.screen32.dsp_flg1, 0);
  expect(test.screen32.dsp_flg2, 0);
  expect(test.screen32.movie01_ext, 0);
  expect(test.screen32.movie02_ext, 0);
  expect(test.screen32.movie03_ext, 0);
  expect(test.screen32.movie04_ext, 0);
  expect(test.screen32.line_title, "");
  expect(test.screen32.line_title_ex, "");
  expect(test.screen32.line1, "");
  expect(test.screen32.line2, "");
  expect(test.screen32.line3, "");
  expect(test.screen32.line4, "");
  expect(test.screen32.line1_ex, "");
  expect(test.screen32.line2_ex, "");
  expect(test.screen32.line3_ex, "");
  expect(test.screen32.line4_ex, "");
  expect(test.screen32.sound_led1, 0);
  expect(test.screen32.sound_led2, 0);
  expect(test.screen32.sound_led3, 0);
  expect(test.screen33.title, "");
  expect(test.screen33.msg1, "");
  expect(test.screen33.msg2, "");
  expect(test.screen33.msg1_size, 0);
  expect(test.screen33.msg2_size, 0);
  expect(test.screen33.sound1, 0);
  expect(test.screen33.sound2, 0);
  expect(test.screen33.sound3, 0);
  expect(test.screen33.snd_timer, 0);
  expect(test.screen33.timer1, 0);
  expect(test.screen33.timer2, 0);
  expect(test.screen33.timer3, 0);
  expect(test.screen33.dsp_flg1, 0);
  expect(test.screen33.dsp_flg2, 0);
  expect(test.screen33.movie01_ext, 0);
  expect(test.screen33.movie02_ext, 0);
  expect(test.screen33.movie03_ext, 0);
  expect(test.screen33.movie04_ext, 0);
  expect(test.screen33.line_title, "");
  expect(test.screen33.line_title_ex, "");
  expect(test.screen33.line1, "");
  expect(test.screen33.line2, "");
  expect(test.screen33.line3, "");
  expect(test.screen33.line4, "");
  expect(test.screen33.line1_ex, "");
  expect(test.screen33.line2_ex, "");
  expect(test.screen33.line3_ex, "");
  expect(test.screen33.line4_ex, "");
  expect(test.screen33.sound_led1, 0);
  expect(test.screen33.sound_led2, 0);
  expect(test.screen33.sound_led3, 0);
  expect(test.screen34.title, "");
  expect(test.screen34.msg1, "");
  expect(test.screen34.msg2, "");
  expect(test.screen34.msg1_size, 0);
  expect(test.screen34.msg2_size, 0);
  expect(test.screen34.sound1, 0);
  expect(test.screen34.sound2, 0);
  expect(test.screen34.sound3, 0);
  expect(test.screen34.snd_timer, 0);
  expect(test.screen34.timer1, 0);
  expect(test.screen34.timer2, 0);
  expect(test.screen34.timer3, 0);
  expect(test.screen34.dsp_flg1, 0);
  expect(test.screen34.dsp_flg2, 0);
  expect(test.screen34.movie01_ext, 0);
  expect(test.screen34.movie02_ext, 0);
  expect(test.screen34.movie03_ext, 0);
  expect(test.screen34.movie04_ext, 0);
  expect(test.screen34.line_title, "");
  expect(test.screen34.line_title_ex, "");
  expect(test.screen34.line1, "");
  expect(test.screen34.line2, "");
  expect(test.screen34.line3, "");
  expect(test.screen34.line4, "");
  expect(test.screen34.line1_ex, "");
  expect(test.screen34.line2_ex, "");
  expect(test.screen34.line3_ex, "");
  expect(test.screen34.line4_ex, "");
  expect(test.screen34.sound_led1, 0);
  expect(test.screen34.sound_led2, 0);
  expect(test.screen34.sound_led3, 0);
  expect(test.screen35.title, "");
  expect(test.screen35.msg1, "");
  expect(test.screen35.msg2, "");
  expect(test.screen35.msg1_size, 0);
  expect(test.screen35.msg2_size, 0);
  expect(test.screen35.sound1, 0);
  expect(test.screen35.sound2, 0);
  expect(test.screen35.sound3, 0);
  expect(test.screen35.snd_timer, 0);
  expect(test.screen35.timer1, 0);
  expect(test.screen35.timer2, 0);
  expect(test.screen35.timer3, 0);
  expect(test.screen35.dsp_flg1, 0);
  expect(test.screen35.dsp_flg2, 0);
  expect(test.screen35.movie01_ext, 0);
  expect(test.screen35.movie02_ext, 0);
  expect(test.screen35.movie03_ext, 0);
  expect(test.screen35.movie04_ext, 0);
  expect(test.screen35.line_title, "");
  expect(test.screen35.line_title_ex, "");
  expect(test.screen35.line1, "");
  expect(test.screen35.line2, "");
  expect(test.screen35.line3, "");
  expect(test.screen35.line4, "");
  expect(test.screen35.line1_ex, "");
  expect(test.screen35.line2_ex, "");
  expect(test.screen35.line3_ex, "");
  expect(test.screen35.line4_ex, "");
  expect(test.screen35.sound_led1, 0);
  expect(test.screen35.sound_led2, 0);
  expect(test.screen35.sound_led3, 0);
  expect(test.screen36.title, "");
  expect(test.screen36.msg1, "");
  expect(test.screen36.msg2, "");
  expect(test.screen36.msg1_size, 0);
  expect(test.screen36.msg2_size, 0);
  expect(test.screen36.sound1, 0);
  expect(test.screen36.sound2, 0);
  expect(test.screen36.sound3, 0);
  expect(test.screen36.snd_timer, 0);
  expect(test.screen36.timer1, 0);
  expect(test.screen36.timer2, 0);
  expect(test.screen36.timer3, 0);
  expect(test.screen36.dsp_flg1, 0);
  expect(test.screen36.dsp_flg2, 0);
  expect(test.screen36.movie01_ext, 0);
  expect(test.screen36.movie02_ext, 0);
  expect(test.screen36.movie03_ext, 0);
  expect(test.screen36.movie04_ext, 0);
  expect(test.screen36.line_title, "");
  expect(test.screen36.line_title_ex, "");
  expect(test.screen36.line1, "");
  expect(test.screen36.line2, "");
  expect(test.screen36.line3, "");
  expect(test.screen36.line4, "");
  expect(test.screen36.line1_ex, "");
  expect(test.screen36.line2_ex, "");
  expect(test.screen36.line3_ex, "");
  expect(test.screen36.line4_ex, "");
  expect(test.screen36.sound_led1, 0);
  expect(test.screen36.sound_led2, 0);
  expect(test.screen36.sound_led3, 0);
  expect(test.screen37.title, "");
  expect(test.screen37.msg1, "");
  expect(test.screen37.msg2, "");
  expect(test.screen37.msg1_size, 0);
  expect(test.screen37.msg2_size, 0);
  expect(test.screen37.sound1, 0);
  expect(test.screen37.sound2, 0);
  expect(test.screen37.sound3, 0);
  expect(test.screen37.snd_timer, 0);
  expect(test.screen37.timer1, 0);
  expect(test.screen37.timer2, 0);
  expect(test.screen37.timer3, 0);
  expect(test.screen37.dsp_flg1, 0);
  expect(test.screen37.dsp_flg2, 0);
  expect(test.screen37.movie01_ext, 0);
  expect(test.screen37.movie02_ext, 0);
  expect(test.screen37.movie03_ext, 0);
  expect(test.screen37.movie04_ext, 0);
  expect(test.screen37.line_title, "");
  expect(test.screen37.line_title_ex, "");
  expect(test.screen37.line1, "");
  expect(test.screen37.line2, "");
  expect(test.screen37.line3, "");
  expect(test.screen37.line4, "");
  expect(test.screen37.line1_ex, "");
  expect(test.screen37.line2_ex, "");
  expect(test.screen37.line3_ex, "");
  expect(test.screen37.line4_ex, "");
  expect(test.screen37.sound_led1, 0);
  expect(test.screen37.sound_led2, 0);
  expect(test.screen37.sound_led3, 0);
  expect(test.screen38.title, "");
  expect(test.screen38.msg1, "");
  expect(test.screen38.msg2, "");
  expect(test.screen38.msg1_size, 0);
  expect(test.screen38.msg2_size, 0);
  expect(test.screen38.sound1, 0);
  expect(test.screen38.sound2, 0);
  expect(test.screen38.sound3, 0);
  expect(test.screen38.snd_timer, 0);
  expect(test.screen38.timer1, 0);
  expect(test.screen38.timer2, 0);
  expect(test.screen38.timer3, 0);
  expect(test.screen38.dsp_flg1, 0);
  expect(test.screen38.dsp_flg2, 0);
  expect(test.screen38.movie01_ext, 0);
  expect(test.screen38.movie02_ext, 0);
  expect(test.screen38.movie03_ext, 0);
  expect(test.screen38.movie04_ext, 0);
  expect(test.screen38.line_title, "");
  expect(test.screen38.line_title_ex, "");
  expect(test.screen38.line1, "");
  expect(test.screen38.line2, "");
  expect(test.screen38.line3, "");
  expect(test.screen38.line4, "");
  expect(test.screen38.line1_ex, "");
  expect(test.screen38.line2_ex, "");
  expect(test.screen38.line3_ex, "");
  expect(test.screen38.line4_ex, "");
  expect(test.screen38.sound_led1, 0);
  expect(test.screen38.sound_led2, 0);
  expect(test.screen38.sound_led3, 0);
  expect(test.screen39.title, "");
  expect(test.screen39.msg1, "");
  expect(test.screen39.msg2, "");
  expect(test.screen39.msg1_size, 0);
  expect(test.screen39.msg2_size, 0);
  expect(test.screen39.sound1, 0);
  expect(test.screen39.sound2, 0);
  expect(test.screen39.sound3, 0);
  expect(test.screen39.snd_timer, 0);
  expect(test.screen39.timer1, 0);
  expect(test.screen39.timer2, 0);
  expect(test.screen39.timer3, 0);
  expect(test.screen39.dsp_flg1, 0);
  expect(test.screen39.dsp_flg2, 0);
  expect(test.screen39.movie01_ext, 0);
  expect(test.screen39.movie02_ext, 0);
  expect(test.screen39.movie03_ext, 0);
  expect(test.screen39.movie04_ext, 0);
  expect(test.screen39.line_title, "");
  expect(test.screen39.line_title_ex, "");
  expect(test.screen39.line1, "");
  expect(test.screen39.line2, "");
  expect(test.screen39.line3, "");
  expect(test.screen39.line4, "");
  expect(test.screen39.line1_ex, "");
  expect(test.screen39.line2_ex, "");
  expect(test.screen39.line3_ex, "");
  expect(test.screen39.line4_ex, "");
  expect(test.screen39.sound_led1, 0);
  expect(test.screen39.sound_led2, 0);
  expect(test.screen39.sound_led3, 0);
  expect(test.screen40.title, "");
  expect(test.screen40.msg1, "");
  expect(test.screen40.msg2, "");
  expect(test.screen40.msg1_size, 0);
  expect(test.screen40.msg2_size, 0);
  expect(test.screen40.sound1, 0);
  expect(test.screen40.sound2, 0);
  expect(test.screen40.sound3, 0);
  expect(test.screen40.snd_timer, 0);
  expect(test.screen40.timer1, 0);
  expect(test.screen40.timer2, 0);
  expect(test.screen40.timer3, 0);
  expect(test.screen40.dsp_flg1, 0);
  expect(test.screen40.dsp_flg2, 0);
  expect(test.screen40.movie01_ext, 0);
  expect(test.screen40.movie02_ext, 0);
  expect(test.screen40.movie03_ext, 0);
  expect(test.screen40.movie04_ext, 0);
  expect(test.screen40.line_title, "");
  expect(test.screen40.line_title_ex, "");
  expect(test.screen40.line1, "");
  expect(test.screen40.line2, "");
  expect(test.screen40.line3, "");
  expect(test.screen40.line4, "");
  expect(test.screen40.line1_ex, "");
  expect(test.screen40.line2_ex, "");
  expect(test.screen40.line3_ex, "");
  expect(test.screen40.line4_ex, "");
  expect(test.screen40.sound_led1, 0);
  expect(test.screen40.sound_led2, 0);
  expect(test.screen40.sound_led3, 0);
  expect(test.screen41.title, "");
  expect(test.screen41.msg1, "");
  expect(test.screen41.msg2, "");
  expect(test.screen41.msg1_size, 0);
  expect(test.screen41.msg2_size, 0);
  expect(test.screen41.sound1, 0);
  expect(test.screen41.sound2, 0);
  expect(test.screen41.sound3, 0);
  expect(test.screen41.snd_timer, 0);
  expect(test.screen41.timer1, 0);
  expect(test.screen41.timer2, 0);
  expect(test.screen41.timer3, 0);
  expect(test.screen41.dsp_flg1, 0);
  expect(test.screen41.dsp_flg2, 0);
  expect(test.screen41.movie01_ext, 0);
  expect(test.screen41.movie02_ext, 0);
  expect(test.screen41.movie03_ext, 0);
  expect(test.screen41.movie04_ext, 0);
  expect(test.screen41.line_title, "");
  expect(test.screen41.line_title_ex, "");
  expect(test.screen41.line1, "");
  expect(test.screen41.line2, "");
  expect(test.screen41.line3, "");
  expect(test.screen41.line4, "");
  expect(test.screen41.line1_ex, "");
  expect(test.screen41.line2_ex, "");
  expect(test.screen41.line3_ex, "");
  expect(test.screen41.line4_ex, "");
  expect(test.screen41.sound_led1, 0);
  expect(test.screen41.sound_led2, 0);
  expect(test.screen41.sound_led3, 0);
  expect(test.screen42.title, "");
  expect(test.screen42.msg1, "");
  expect(test.screen42.msg2, "");
  expect(test.screen42.msg1_size, 0);
  expect(test.screen42.msg2_size, 0);
  expect(test.screen42.sound1, 0);
  expect(test.screen42.sound2, 0);
  expect(test.screen42.sound3, 0);
  expect(test.screen42.snd_timer, 0);
  expect(test.screen42.timer1, 0);
  expect(test.screen42.timer2, 0);
  expect(test.screen42.timer3, 0);
  expect(test.screen42.dsp_flg1, 0);
  expect(test.screen42.dsp_flg2, 0);
  expect(test.screen42.movie01_ext, 0);
  expect(test.screen42.movie02_ext, 0);
  expect(test.screen42.movie03_ext, 0);
  expect(test.screen42.movie04_ext, 0);
  expect(test.screen42.line_title, "");
  expect(test.screen42.line_title_ex, "");
  expect(test.screen42.line1, "");
  expect(test.screen42.line2, "");
  expect(test.screen42.line3, "");
  expect(test.screen42.line4, "");
  expect(test.screen42.line1_ex, "");
  expect(test.screen42.line2_ex, "");
  expect(test.screen42.line3_ex, "");
  expect(test.screen42.line4_ex, "");
  expect(test.screen42.sound_led1, 0);
  expect(test.screen42.sound_led2, 0);
  expect(test.screen42.sound_led3, 0);
  expect(test.screen43.title, "");
  expect(test.screen43.msg1, "");
  expect(test.screen43.msg2, "");
  expect(test.screen43.msg1_size, 0);
  expect(test.screen43.msg2_size, 0);
  expect(test.screen43.sound1, 0);
  expect(test.screen43.sound2, 0);
  expect(test.screen43.sound3, 0);
  expect(test.screen43.snd_timer, 0);
  expect(test.screen43.timer1, 0);
  expect(test.screen43.timer2, 0);
  expect(test.screen43.timer3, 0);
  expect(test.screen43.dsp_flg1, 0);
  expect(test.screen43.dsp_flg2, 0);
  expect(test.screen43.movie01_ext, 0);
  expect(test.screen43.movie02_ext, 0);
  expect(test.screen43.movie03_ext, 0);
  expect(test.screen43.movie04_ext, 0);
  expect(test.screen43.line_title, "");
  expect(test.screen43.line_title_ex, "");
  expect(test.screen43.line1, "");
  expect(test.screen43.line2, "");
  expect(test.screen43.line3, "");
  expect(test.screen43.line4, "");
  expect(test.screen43.line1_ex, "");
  expect(test.screen43.line2_ex, "");
  expect(test.screen43.line3_ex, "");
  expect(test.screen43.line4_ex, "");
  expect(test.screen43.sound_led1, 0);
  expect(test.screen43.sound_led2, 0);
  expect(test.screen43.sound_led3, 0);
  expect(test.screen44.title, "");
  expect(test.screen44.msg1, "");
  expect(test.screen44.msg2, "");
  expect(test.screen44.msg1_size, 0);
  expect(test.screen44.msg2_size, 0);
  expect(test.screen44.sound1, 0);
  expect(test.screen44.sound2, 0);
  expect(test.screen44.sound3, 0);
  expect(test.screen44.snd_timer, 0);
  expect(test.screen44.timer1, 0);
  expect(test.screen44.timer2, 0);
  expect(test.screen44.timer3, 0);
  expect(test.screen44.dsp_flg1, 0);
  expect(test.screen44.dsp_flg2, 0);
  expect(test.screen44.movie01_ext, 0);
  expect(test.screen44.movie02_ext, 0);
  expect(test.screen44.movie03_ext, 0);
  expect(test.screen44.movie04_ext, 0);
  expect(test.screen44.line_title, "");
  expect(test.screen44.line_title_ex, "");
  expect(test.screen44.line1, "");
  expect(test.screen44.line2, "");
  expect(test.screen44.line3, "");
  expect(test.screen44.line4, "");
  expect(test.screen44.line1_ex, "");
  expect(test.screen44.line2_ex, "");
  expect(test.screen44.line3_ex, "");
  expect(test.screen44.line4_ex, "");
  expect(test.screen44.sound_led1, 0);
  expect(test.screen44.sound_led2, 0);
  expect(test.screen44.sound_led3, 0);
  expect(test.screen45.title, "");
  expect(test.screen45.msg1, "");
  expect(test.screen45.msg2, "");
  expect(test.screen45.msg1_size, 0);
  expect(test.screen45.msg2_size, 0);
  expect(test.screen45.sound1, 0);
  expect(test.screen45.sound2, 0);
  expect(test.screen45.sound3, 0);
  expect(test.screen45.snd_timer, 0);
  expect(test.screen45.timer1, 0);
  expect(test.screen45.timer2, 0);
  expect(test.screen45.timer3, 0);
  expect(test.screen45.dsp_flg1, 0);
  expect(test.screen45.dsp_flg2, 0);
  expect(test.screen45.movie01_ext, 0);
  expect(test.screen45.movie02_ext, 0);
  expect(test.screen45.movie03_ext, 0);
  expect(test.screen45.movie04_ext, 0);
  expect(test.screen45.line_title, "");
  expect(test.screen45.line_title_ex, "");
  expect(test.screen45.line1, "");
  expect(test.screen45.line2, "");
  expect(test.screen45.line3, "");
  expect(test.screen45.line4, "");
  expect(test.screen45.line1_ex, "");
  expect(test.screen45.line2_ex, "");
  expect(test.screen45.line3_ex, "");
  expect(test.screen45.line4_ex, "");
  expect(test.screen45.sound_led1, 0);
  expect(test.screen45.sound_led2, 0);
  expect(test.screen45.sound_led3, 0);
  expect(test.screen46.title, "");
  expect(test.screen46.msg1, "");
  expect(test.screen46.msg2, "");
  expect(test.screen46.msg1_size, 0);
  expect(test.screen46.msg2_size, 0);
  expect(test.screen46.sound1, 0);
  expect(test.screen46.sound2, 0);
  expect(test.screen46.sound3, 0);
  expect(test.screen46.snd_timer, 0);
  expect(test.screen46.timer1, 0);
  expect(test.screen46.timer2, 0);
  expect(test.screen46.timer3, 0);
  expect(test.screen46.dsp_flg1, 0);
  expect(test.screen46.dsp_flg2, 0);
  expect(test.screen46.movie01_ext, 0);
  expect(test.screen46.movie02_ext, 0);
  expect(test.screen46.movie03_ext, 0);
  expect(test.screen46.movie04_ext, 0);
  expect(test.screen46.line_title, "");
  expect(test.screen46.line_title_ex, "");
  expect(test.screen46.line1, "");
  expect(test.screen46.line2, "");
  expect(test.screen46.line3, "");
  expect(test.screen46.line4, "");
  expect(test.screen46.line1_ex, "");
  expect(test.screen46.line2_ex, "");
  expect(test.screen46.line3_ex, "");
  expect(test.screen46.line4_ex, "");
  expect(test.screen46.sound_led1, 0);
  expect(test.screen46.sound_led2, 0);
  expect(test.screen46.sound_led3, 0);
  expect(test.screen47.title, "");
  expect(test.screen47.msg1, "");
  expect(test.screen47.msg2, "");
  expect(test.screen47.msg1_size, 0);
  expect(test.screen47.msg2_size, 0);
  expect(test.screen47.sound1, 0);
  expect(test.screen47.sound2, 0);
  expect(test.screen47.sound3, 0);
  expect(test.screen47.snd_timer, 0);
  expect(test.screen47.timer1, 0);
  expect(test.screen47.timer2, 0);
  expect(test.screen47.timer3, 0);
  expect(test.screen47.dsp_flg1, 0);
  expect(test.screen47.dsp_flg2, 0);
  expect(test.screen47.movie01_ext, 0);
  expect(test.screen47.movie02_ext, 0);
  expect(test.screen47.movie03_ext, 0);
  expect(test.screen47.movie04_ext, 0);
  expect(test.screen47.line_title, "");
  expect(test.screen47.line_title_ex, "");
  expect(test.screen47.line1, "");
  expect(test.screen47.line2, "");
  expect(test.screen47.line3, "");
  expect(test.screen47.line4, "");
  expect(test.screen47.line1_ex, "");
  expect(test.screen47.line2_ex, "");
  expect(test.screen47.line3_ex, "");
  expect(test.screen47.line4_ex, "");
  expect(test.screen47.sound_led1, 0);
  expect(test.screen47.sound_led2, 0);
  expect(test.screen47.sound_led3, 0);
  expect(test.screen48.title, "");
  expect(test.screen48.msg1, "");
  expect(test.screen48.msg2, "");
  expect(test.screen48.msg1_size, 0);
  expect(test.screen48.msg2_size, 0);
  expect(test.screen48.sound1, 0);
  expect(test.screen48.sound2, 0);
  expect(test.screen48.sound3, 0);
  expect(test.screen48.snd_timer, 0);
  expect(test.screen48.timer1, 0);
  expect(test.screen48.timer2, 0);
  expect(test.screen48.timer3, 0);
  expect(test.screen48.dsp_flg1, 0);
  expect(test.screen48.dsp_flg2, 0);
  expect(test.screen48.movie01_ext, 0);
  expect(test.screen48.movie02_ext, 0);
  expect(test.screen48.movie03_ext, 0);
  expect(test.screen48.movie04_ext, 0);
  expect(test.screen48.line_title, "");
  expect(test.screen48.line_title_ex, "");
  expect(test.screen48.line1, "");
  expect(test.screen48.line2, "");
  expect(test.screen48.line3, "");
  expect(test.screen48.line4, "");
  expect(test.screen48.line1_ex, "");
  expect(test.screen48.line2_ex, "");
  expect(test.screen48.line3_ex, "");
  expect(test.screen48.line4_ex, "");
  expect(test.screen48.sound_led1, 0);
  expect(test.screen48.sound_led2, 0);
  expect(test.screen48.sound_led3, 0);
  expect(test.screen49.title, "");
  expect(test.screen49.msg1, "");
  expect(test.screen49.msg2, "");
  expect(test.screen49.msg1_size, 0);
  expect(test.screen49.msg2_size, 0);
  expect(test.screen49.sound1, 0);
  expect(test.screen49.sound2, 0);
  expect(test.screen49.sound3, 0);
  expect(test.screen49.snd_timer, 0);
  expect(test.screen49.timer1, 0);
  expect(test.screen49.timer2, 0);
  expect(test.screen49.timer3, 0);
  expect(test.screen49.dsp_flg1, 0);
  expect(test.screen49.dsp_flg2, 0);
  expect(test.screen49.movie01_ext, 0);
  expect(test.screen49.movie02_ext, 0);
  expect(test.screen49.movie03_ext, 0);
  expect(test.screen49.movie04_ext, 0);
  expect(test.screen49.line_title, "");
  expect(test.screen49.line_title_ex, "");
  expect(test.screen49.line1, "");
  expect(test.screen49.line2, "");
  expect(test.screen49.line3, "");
  expect(test.screen49.line4, "");
  expect(test.screen49.line1_ex, "");
  expect(test.screen49.line2_ex, "");
  expect(test.screen49.line3_ex, "");
  expect(test.screen49.line4_ex, "");
  expect(test.screen49.sound_led1, 0);
  expect(test.screen49.sound_led2, 0);
  expect(test.screen49.sound_led3, 0);
  expect(test.screen50.title, "");
  expect(test.screen50.msg1, "");
  expect(test.screen50.msg2, "");
  expect(test.screen50.msg1_size, 0);
  expect(test.screen50.msg2_size, 0);
  expect(test.screen50.sound1, 0);
  expect(test.screen50.sound2, 0);
  expect(test.screen50.sound3, 0);
  expect(test.screen50.snd_timer, 0);
  expect(test.screen50.timer1, 0);
  expect(test.screen50.timer2, 0);
  expect(test.screen50.timer3, 0);
  expect(test.screen50.dsp_flg1, 0);
  expect(test.screen50.dsp_flg2, 0);
  expect(test.screen50.movie01_ext, 0);
  expect(test.screen50.movie02_ext, 0);
  expect(test.screen50.movie03_ext, 0);
  expect(test.screen50.movie04_ext, 0);
  expect(test.screen50.line_title, "");
  expect(test.screen50.line_title_ex, "");
  expect(test.screen50.line1, "");
  expect(test.screen50.line2, "");
  expect(test.screen50.line3, "");
  expect(test.screen50.line4, "");
  expect(test.screen50.line1_ex, "");
  expect(test.screen50.line2_ex, "");
  expect(test.screen50.line3_ex, "");
  expect(test.screen50.line4_ex, "");
  expect(test.screen50.sound_led1, 0);
  expect(test.screen50.sound_led2, 0);
  expect(test.screen50.sound_led3, 0);
  expect(test.screen51.title, "");
  expect(test.screen51.msg1, "");
  expect(test.screen51.msg2, "");
  expect(test.screen51.msg1_size, 0);
  expect(test.screen51.msg2_size, 0);
  expect(test.screen51.sound1, 0);
  expect(test.screen51.sound2, 0);
  expect(test.screen51.sound3, "");
  expect(test.screen51.snd_timer, 0);
  expect(test.screen51.timer1, 0);
  expect(test.screen51.timer2, 0);
  expect(test.screen51.timer3, 0);
  expect(test.screen51.dsp_flg1, 0);
  expect(test.screen51.dsp_flg2, 0);
  expect(test.screen51.movie01_ext, 0);
  expect(test.screen51.movie02_ext, 0);
  expect(test.screen51.movie03_ext, 0);
  expect(test.screen51.movie04_ext, 0);
  expect(test.screen51.line_title, "");
  expect(test.screen51.line_title_ex, "");
  expect(test.screen51.line1, "");
  expect(test.screen51.line2, "");
  expect(test.screen51.line3, "");
  expect(test.screen51.line4, "");
  expect(test.screen51.line1_ex, "");
  expect(test.screen51.line2_ex, "");
  expect(test.screen51.line3_ex, "");
  expect(test.screen51.line4_ex, "");
  expect(test.screen51.sound_led1, 0);
  expect(test.screen51.sound_led2, 0);
  expect(test.screen51.sound_led3, "");
  expect(test.screen52.title, "");
  expect(test.screen52.msg1, "");
  expect(test.screen52.msg2, "");
  expect(test.screen52.msg1_size, 0);
  expect(test.screen52.msg2_size, 0);
  expect(test.screen52.sound1, 0);
  expect(test.screen52.sound2, 0);
  expect(test.screen52.sound3, 0);
  expect(test.screen52.snd_timer, 0);
  expect(test.screen52.timer1, 0);
  expect(test.screen52.timer2, 0);
  expect(test.screen52.timer3, 0);
  expect(test.screen52.dsp_flg1, 0);
  expect(test.screen52.dsp_flg2, 0);
  expect(test.screen52.movie01_ext, 0);
  expect(test.screen52.movie02_ext, 0);
  expect(test.screen52.movie03_ext, 0);
  expect(test.screen52.movie04_ext, 0);
  expect(test.screen52.line_title, "");
  expect(test.screen52.line_title_ex, "");
  expect(test.screen52.line1, "");
  expect(test.screen52.line2, "");
  expect(test.screen52.line3, "");
  expect(test.screen52.line4, "");
  expect(test.screen52.line1_ex, "");
  expect(test.screen52.line2_ex, "");
  expect(test.screen52.line3_ex, "");
  expect(test.screen52.line4_ex, "");
  expect(test.screen52.sound_led1, 0);
  expect(test.screen52.sound_led2, 0);
  expect(test.screen52.sound_led3, 0);
  expect(test.screen53.title, "");
  expect(test.screen53.msg1, "");
  expect(test.screen53.msg2, "");
  expect(test.screen53.msg1_size, 0);
  expect(test.screen53.msg2_size, 0);
  expect(test.screen53.sound1, 0);
  expect(test.screen53.sound2, 0);
  expect(test.screen53.sound3, 0);
  expect(test.screen53.snd_timer, 0);
  expect(test.screen53.timer1, 0);
  expect(test.screen53.timer2, 0);
  expect(test.screen53.timer3, 0);
  expect(test.screen53.dsp_flg1, 0);
  expect(test.screen53.dsp_flg2, 0);
  expect(test.screen53.movie01_ext, 0);
  expect(test.screen53.movie02_ext, 0);
  expect(test.screen53.movie03_ext, 0);
  expect(test.screen53.movie04_ext, 0);
  expect(test.screen53.line_title, "");
  expect(test.screen53.line_title_ex, "");
  expect(test.screen53.line1, "");
  expect(test.screen53.line2, "");
  expect(test.screen53.line3, "");
  expect(test.screen53.line4, "");
  expect(test.screen53.line1_ex, "");
  expect(test.screen53.line2_ex, "");
  expect(test.screen53.line3_ex, "");
  expect(test.screen53.line4_ex, "");
  expect(test.screen53.sound_led1, 0);
  expect(test.screen53.sound_led2, 0);
  expect(test.screen53.sound_led3, 0);
  expect(test.screen54.title, "");
  expect(test.screen54.msg1, "");
  expect(test.screen54.msg2, "");
  expect(test.screen54.msg1_size, 0);
  expect(test.screen54.msg2_size, 0);
  expect(test.screen54.sound1, 0);
  expect(test.screen54.sound2, 0);
  expect(test.screen54.sound3, "");
  expect(test.screen54.snd_timer, 0);
  expect(test.screen54.timer1, 0);
  expect(test.screen54.timer2, 0);
  expect(test.screen54.timer3, 0);
  expect(test.screen54.dsp_flg1, 0);
  expect(test.screen54.dsp_flg2, 0);
  expect(test.screen54.movie01_ext, 0);
  expect(test.screen54.movie02_ext, 0);
  expect(test.screen54.movie03_ext, 0);
  expect(test.screen54.movie04_ext, 0);
  expect(test.screen54.line_title, "");
  expect(test.screen54.line_title_ex, "");
  expect(test.screen54.line1, "");
  expect(test.screen54.line2, "");
  expect(test.screen54.line3, "");
  expect(test.screen54.line4, "");
  expect(test.screen54.line1_ex, "");
  expect(test.screen54.line2_ex, "");
  expect(test.screen54.line3_ex, "");
  expect(test.screen54.line4_ex, "");
  expect(test.screen54.sound_led1, 0);
  expect(test.screen54.sound_led2, 0);
  expect(test.screen54.sound_led3, "");
  expect(test.screen55.title, "");
  expect(test.screen55.msg1, "");
  expect(test.screen55.msg2, "");
  expect(test.screen55.msg1_size, 0);
  expect(test.screen55.msg2_size, 0);
  expect(test.screen55.sound1, 0);
  expect(test.screen55.sound2, 0);
  expect(test.screen55.sound3, 0);
  expect(test.screen55.snd_timer, 0);
  expect(test.screen55.timer1, 0);
  expect(test.screen55.timer2, 0);
  expect(test.screen55.timer3, 0);
  expect(test.screen55.dsp_flg1, 0);
  expect(test.screen55.dsp_flg2, 0);
  expect(test.screen55.movie01_ext, 0);
  expect(test.screen55.movie02_ext, 0);
  expect(test.screen55.movie03_ext, 0);
  expect(test.screen55.movie04_ext, 0);
  expect(test.screen55.line_title, "");
  expect(test.screen55.line_title_ex, "");
  expect(test.screen55.line1, "");
  expect(test.screen55.line2, "");
  expect(test.screen55.line3, "");
  expect(test.screen55.line4, "");
  expect(test.screen55.line1_ex, "");
  expect(test.screen55.line2_ex, "");
  expect(test.screen55.line3_ex, "");
  expect(test.screen55.line4_ex, "");
  expect(test.screen55.sound_led1, 0);
  expect(test.screen55.sound_led2, 0);
  expect(test.screen55.sound_led3, 0);
  expect(test.screen56.title, "");
  expect(test.screen56.msg1, "");
  expect(test.screen56.msg2, "");
  expect(test.screen56.msg1_size, 0);
  expect(test.screen56.msg2_size, 0);
  expect(test.screen56.sound1, 0);
  expect(test.screen56.sound2, 0);
  expect(test.screen56.sound3, 0);
  expect(test.screen56.snd_timer, 0);
  expect(test.screen56.timer1, 0);
  expect(test.screen56.timer2, 0);
  expect(test.screen56.timer3, 0);
  expect(test.screen56.dsp_flg1, 0);
  expect(test.screen56.dsp_flg2, 0);
  expect(test.screen56.movie01_ext, 0);
  expect(test.screen56.movie02_ext, 0);
  expect(test.screen56.movie03_ext, 0);
  expect(test.screen56.movie04_ext, 0);
  expect(test.screen56.line_title, "");
  expect(test.screen56.line_title_ex, "");
  expect(test.screen56.line1, "");
  expect(test.screen56.line2, "");
  expect(test.screen56.line3, "");
  expect(test.screen56.line4, "");
  expect(test.screen56.line1_ex, "");
  expect(test.screen56.line2_ex, "");
  expect(test.screen56.line3_ex, "");
  expect(test.screen56.line4_ex, "");
  expect(test.screen56.sound_led1, 0);
  expect(test.screen56.sound_led2, 0);
  expect(test.screen56.sound_led3, 0);
  expect(test.screen57.title, "");
  expect(test.screen57.msg1, "");
  expect(test.screen57.msg2, "");
  expect(test.screen57.msg1_size, 0);
  expect(test.screen57.msg2_size, 0);
  expect(test.screen57.sound1, 0);
  expect(test.screen57.sound2, 0);
  expect(test.screen57.sound3, "");
  expect(test.screen57.snd_timer, 0);
  expect(test.screen57.timer1, 0);
  expect(test.screen57.timer2, 0);
  expect(test.screen57.timer3, 0);
  expect(test.screen57.dsp_flg1, 0);
  expect(test.screen57.dsp_flg2, 0);
  expect(test.screen57.movie01_ext, 0);
  expect(test.screen57.movie02_ext, 0);
  expect(test.screen57.movie03_ext, 0);
  expect(test.screen57.movie04_ext, 0);
  expect(test.screen57.line_title, "");
  expect(test.screen57.line_title_ex, "");
  expect(test.screen57.line1, "");
  expect(test.screen57.line2, "");
  expect(test.screen57.line3, "");
  expect(test.screen57.line4, "");
  expect(test.screen57.line1_ex, "");
  expect(test.screen57.line2_ex, "");
  expect(test.screen57.line3_ex, "");
  expect(test.screen57.line4_ex, "");
  expect(test.screen57.sound_led1, 0);
  expect(test.screen57.sound_led2, 0);
  expect(test.screen57.sound_led3, "");
  expect(test.screen58.title, "");
  expect(test.screen58.msg1, "");
  expect(test.screen58.msg2, "");
  expect(test.screen58.msg1_size, 0);
  expect(test.screen58.msg2_size, 0);
  expect(test.screen58.sound1, 0);
  expect(test.screen58.sound2, 0);
  expect(test.screen58.sound3, 0);
  expect(test.screen58.snd_timer, 0);
  expect(test.screen58.timer1, 0);
  expect(test.screen58.timer2, 0);
  expect(test.screen58.timer3, 0);
  expect(test.screen58.dsp_flg1, 0);
  expect(test.screen58.dsp_flg2, 0);
  expect(test.screen58.movie01_ext, 0);
  expect(test.screen58.movie02_ext, 0);
  expect(test.screen58.movie03_ext, 0);
  expect(test.screen58.movie04_ext, 0);
  expect(test.screen58.line_title, "");
  expect(test.screen58.line_title_ex, "");
  expect(test.screen58.line1, "");
  expect(test.screen58.line2, "");
  expect(test.screen58.line3, "");
  expect(test.screen58.line4, "");
  expect(test.screen58.line1_ex, "");
  expect(test.screen58.line2_ex, "");
  expect(test.screen58.line3_ex, "");
  expect(test.screen58.line4_ex, "");
  expect(test.screen58.sound_led1, 0);
  expect(test.screen58.sound_led2, 0);
  expect(test.screen58.sound_led3, 0);
  expect(test.screen59.title, "");
  expect(test.screen59.msg1, "");
  expect(test.screen59.msg2, "");
  expect(test.screen59.msg1_size, 0);
  expect(test.screen59.msg2_size, 0);
  expect(test.screen59.sound1, 0);
  expect(test.screen59.sound2, 0);
  expect(test.screen59.sound3, 0);
  expect(test.screen59.snd_timer, 0);
  expect(test.screen59.timer1, 0);
  expect(test.screen59.timer2, 0);
  expect(test.screen59.timer3, 0);
  expect(test.screen59.dsp_flg1, 0);
  expect(test.screen59.dsp_flg2, 0);
  expect(test.screen59.movie01_ext, 0);
  expect(test.screen59.movie02_ext, 0);
  expect(test.screen59.movie03_ext, 0);
  expect(test.screen59.movie04_ext, 0);
  expect(test.screen59.line_title, "");
  expect(test.screen59.line_title_ex, "");
  expect(test.screen59.line1, "");
  expect(test.screen59.line2, "");
  expect(test.screen59.line3, "");
  expect(test.screen59.line4, "");
  expect(test.screen59.line1_ex, "");
  expect(test.screen59.line2_ex, "");
  expect(test.screen59.line3_ex, "");
  expect(test.screen59.line4_ex, "");
  expect(test.screen59.sound_led1, 0);
  expect(test.screen59.sound_led2, 0);
  expect(test.screen59.sound_led3, 0);
  expect(test.screen60.title, "");
  expect(test.screen60.msg1, "");
  expect(test.screen60.msg2, "");
  expect(test.screen60.msg1_size, 0);
  expect(test.screen60.msg2_size, 0);
  expect(test.screen60.sound1, 0);
  expect(test.screen60.sound2, 0);
  expect(test.screen60.sound3, "");
  expect(test.screen60.snd_timer, 0);
  expect(test.screen60.timer1, 0);
  expect(test.screen60.timer2, 0);
  expect(test.screen60.timer3, 0);
  expect(test.screen60.dsp_flg1, 0);
  expect(test.screen60.dsp_flg2, 0);
  expect(test.screen60.movie01_ext, 0);
  expect(test.screen60.movie02_ext, 0);
  expect(test.screen60.movie03_ext, 0);
  expect(test.screen60.movie04_ext, 0);
  expect(test.screen60.line_title, "");
  expect(test.screen60.line_title_ex, "");
  expect(test.screen60.line1, "");
  expect(test.screen60.line2, "");
  expect(test.screen60.line3, "");
  expect(test.screen60.line4, "");
  expect(test.screen60.line1_ex, "");
  expect(test.screen60.line2_ex, "");
  expect(test.screen60.line3_ex, "");
  expect(test.screen60.line4_ex, "");
  expect(test.screen60.sound_led1, 0);
  expect(test.screen60.sound_led2, 0);
  expect(test.screen60.sound_led3, "");
  expect(test.screen61.title, "");
  expect(test.screen61.msg1, "");
  expect(test.screen61.msg2, "");
  expect(test.screen61.msg1_size, 0);
  expect(test.screen61.msg2_size, 0);
  expect(test.screen61.sound1, 0);
  expect(test.screen61.sound2, 0);
  expect(test.screen61.sound3, 0);
  expect(test.screen61.snd_timer, 0);
  expect(test.screen61.timer1, 0);
  expect(test.screen61.timer2, 0);
  expect(test.screen61.timer3, 0);
  expect(test.screen61.dsp_flg1, 0);
  expect(test.screen61.dsp_flg2, 0);
  expect(test.screen61.movie01_ext, 0);
  expect(test.screen61.movie02_ext, 0);
  expect(test.screen61.movie03_ext, 0);
  expect(test.screen61.movie04_ext, 0);
  expect(test.screen61.line_title, "");
  expect(test.screen61.line_title_ex, "");
  expect(test.screen61.line1, "");
  expect(test.screen61.line2, "");
  expect(test.screen61.line3, "");
  expect(test.screen61.line4, "");
  expect(test.screen61.line1_ex, "");
  expect(test.screen61.line2_ex, "");
  expect(test.screen61.line3_ex, "");
  expect(test.screen61.line4_ex, "");
  expect(test.screen61.sound_led1, 0);
  expect(test.screen61.sound_led2, 0);
  expect(test.screen61.sound_led3, 0);
  expect(test.screen62.title, "");
  expect(test.screen62.msg1, "");
  expect(test.screen62.msg2, "");
  expect(test.screen62.msg1_size, 0);
  expect(test.screen62.msg2_size, 0);
  expect(test.screen62.sound1, 0);
  expect(test.screen62.sound2, 0);
  expect(test.screen62.sound3, 0);
  expect(test.screen62.snd_timer, 0);
  expect(test.screen62.timer1, 0);
  expect(test.screen62.timer2, 0);
  expect(test.screen62.timer3, 0);
  expect(test.screen62.dsp_flg1, 0);
  expect(test.screen62.dsp_flg2, 0);
  expect(test.screen62.movie01_ext, 0);
  expect(test.screen62.movie02_ext, 0);
  expect(test.screen62.movie03_ext, 0);
  expect(test.screen62.movie04_ext, 0);
  expect(test.screen62.line_title, "");
  expect(test.screen62.line_title_ex, "");
  expect(test.screen62.line1, "");
  expect(test.screen62.line2, "");
  expect(test.screen62.line3, "");
  expect(test.screen62.line4, "");
  expect(test.screen62.line1_ex, "");
  expect(test.screen62.line2_ex, "");
  expect(test.screen62.line3_ex, "");
  expect(test.screen62.line4_ex, "");
  expect(test.screen62.sound_led1, 0);
  expect(test.screen62.sound_led2, 0);
  expect(test.screen62.sound_led3, 0);
  expect(test.screen63.title, "");
  expect(test.screen63.msg1, "");
  expect(test.screen63.msg2, "");
  expect(test.screen63.msg1_size, 0);
  expect(test.screen63.msg2_size, 0);
  expect(test.screen63.sound1, 0);
  expect(test.screen63.sound2, 0);
  expect(test.screen63.sound3, "");
  expect(test.screen63.snd_timer, 0);
  expect(test.screen63.timer1, 0);
  expect(test.screen63.timer2, 0);
  expect(test.screen63.timer3, 0);
  expect(test.screen63.dsp_flg1, 0);
  expect(test.screen63.dsp_flg2, 0);
  expect(test.screen63.movie01_ext, 0);
  expect(test.screen63.movie02_ext, 0);
  expect(test.screen63.movie03_ext, 0);
  expect(test.screen63.movie04_ext, 0);
  expect(test.screen63.line_title, "");
  expect(test.screen63.line_title_ex, "");
  expect(test.screen63.line1, "");
  expect(test.screen63.line2, "");
  expect(test.screen63.line3, "");
  expect(test.screen63.line4, "");
  expect(test.screen63.line1_ex, "");
  expect(test.screen63.line2_ex, "");
  expect(test.screen63.line3_ex, "");
  expect(test.screen63.line4_ex, "");
  expect(test.screen63.sound_led1, 0);
  expect(test.screen63.sound_led2, 0);
  expect(test.screen63.sound_led3, "");
  expect(test.screen64.title, "");
  expect(test.screen64.msg1, "");
  expect(test.screen64.msg2, "");
  expect(test.screen64.msg1_size, 0);
  expect(test.screen64.msg2_size, 0);
  expect(test.screen64.sound1, 0);
  expect(test.screen64.sound2, 0);
  expect(test.screen64.sound3, 0);
  expect(test.screen64.snd_timer, 0);
  expect(test.screen64.timer1, 0);
  expect(test.screen64.timer2, 0);
  expect(test.screen64.timer3, 0);
  expect(test.screen64.dsp_flg1, 0);
  expect(test.screen64.dsp_flg2, 0);
  expect(test.screen64.movie01_ext, 0);
  expect(test.screen64.movie02_ext, 0);
  expect(test.screen64.movie03_ext, 0);
  expect(test.screen64.movie04_ext, 0);
  expect(test.screen64.line_title, "");
  expect(test.screen64.line_title_ex, "");
  expect(test.screen64.line1, "");
  expect(test.screen64.line2, "");
  expect(test.screen64.line3, "");
  expect(test.screen64.line4, "");
  expect(test.screen64.line1_ex, "");
  expect(test.screen64.line2_ex, "");
  expect(test.screen64.line3_ex, "");
  expect(test.screen64.line4_ex, "");
  expect(test.screen64.sound_led1, 0);
  expect(test.screen64.sound_led2, 0);
  expect(test.screen64.sound_led3, 0);
  expect(test.screen65.title, "");
  expect(test.screen65.msg1, "");
  expect(test.screen65.msg2, "");
  expect(test.screen65.msg1_size, 0);
  expect(test.screen65.msg2_size, 0);
  expect(test.screen65.sound1, 0);
  expect(test.screen65.sound2, 0);
  expect(test.screen65.sound3, 0);
  expect(test.screen65.snd_timer, 0);
  expect(test.screen65.timer1, 0);
  expect(test.screen65.timer2, 0);
  expect(test.screen65.timer3, 0);
  expect(test.screen65.dsp_flg1, 0);
  expect(test.screen65.dsp_flg2, 0);
  expect(test.screen65.movie01_ext, 0);
  expect(test.screen65.movie02_ext, 0);
  expect(test.screen65.movie03_ext, 0);
  expect(test.screen65.movie04_ext, 0);
  expect(test.screen65.line_title, "");
  expect(test.screen65.line_title_ex, "");
  expect(test.screen65.line1, "");
  expect(test.screen65.line2, "");
  expect(test.screen65.line3, "");
  expect(test.screen65.line4, "");
  expect(test.screen65.line1_ex, "");
  expect(test.screen65.line2_ex, "");
  expect(test.screen65.line3_ex, "");
  expect(test.screen65.line4_ex, "");
  expect(test.screen65.sound_led1, 0);
  expect(test.screen65.sound_led2, 0);
  expect(test.screen65.sound_led3, 0);
  expect(test.screen67.title, "");
  expect(test.screen67.msg1, "");
  expect(test.screen67.msg2, "");
  expect(test.screen67.msg1_size, 0);
  expect(test.screen67.msg2_size, 0);
  expect(test.screen67.sound1, 0);
  expect(test.screen67.sound2, 0);
  expect(test.screen67.sound3, 0);
  expect(test.screen67.snd_timer, 0);
  expect(test.screen67.timer1, 0);
  expect(test.screen67.timer2, 0);
  expect(test.screen67.timer3, 0);
  expect(test.screen67.dsp_flg1, 0);
  expect(test.screen67.dsp_flg2, 0);
  expect(test.screen67.movie01_ext, 0);
  expect(test.screen67.movie02_ext, 0);
  expect(test.screen67.movie03_ext, 0);
  expect(test.screen67.movie04_ext, 0);
  expect(test.screen67.line_title, "");
  expect(test.screen67.line_title_ex, "");
  expect(test.screen67.line1, "");
  expect(test.screen67.line2, "");
  expect(test.screen67.line3, "");
  expect(test.screen67.line4, "");
  expect(test.screen67.line1_ex, "");
  expect(test.screen67.line2_ex, "");
  expect(test.screen67.line3_ex, "");
  expect(test.screen67.line4_ex, "");
  expect(test.screen67.sound_led1, 0);
  expect(test.screen67.sound_led2, 0);
  expect(test.screen67.sound_led3, 0);
  expect(test.screen68.title, "");
  expect(test.screen68.msg1, "");
  expect(test.screen68.msg2, "");
  expect(test.screen68.msg1_size, 0);
  expect(test.screen68.msg2_size, 0);
  expect(test.screen68.sound1, 0);
  expect(test.screen68.sound2, 0);
  expect(test.screen68.sound3, 0);
  expect(test.screen68.snd_timer, 0);
  expect(test.screen68.timer1, 0);
  expect(test.screen68.timer2, 0);
  expect(test.screen68.timer3, 0);
  expect(test.screen68.dsp_flg1, 0);
  expect(test.screen68.dsp_flg2, 0);
  expect(test.screen68.movie01_ext, 0);
  expect(test.screen68.movie02_ext, 0);
  expect(test.screen68.movie03_ext, 0);
  expect(test.screen68.movie04_ext, 0);
  expect(test.screen68.line_title, "");
  expect(test.screen68.line_title_ex, "");
  expect(test.screen68.line1, "");
  expect(test.screen68.line2, "");
  expect(test.screen68.line3, "");
  expect(test.screen68.line4, "");
  expect(test.screen68.line1_ex, "");
  expect(test.screen68.line2_ex, "");
  expect(test.screen68.line3_ex, "");
  expect(test.screen68.line4_ex, "");
  expect(test.screen68.sound_led1, 0);
  expect(test.screen68.sound_led2, 0);
  expect(test.screen68.sound_led3, 0);
  expect(test.screen69.title, "");
  expect(test.screen69.msg1, "");
  expect(test.screen69.msg2, "");
  expect(test.screen69.msg1_size, 0);
  expect(test.screen69.msg2_size, 0);
  expect(test.screen69.sound1, 0);
  expect(test.screen69.sound2, 0);
  expect(test.screen69.sound3, 0);
  expect(test.screen69.snd_timer, 0);
  expect(test.screen69.timer1, 0);
  expect(test.screen69.timer2, 0);
  expect(test.screen69.timer3, 0);
  expect(test.screen69.dsp_flg1, 0);
  expect(test.screen69.dsp_flg2, 0);
  expect(test.screen69.movie01_ext, 0);
  expect(test.screen69.movie02_ext, 0);
  expect(test.screen69.movie03_ext, 0);
  expect(test.screen69.movie04_ext, 0);
  expect(test.screen69.line_title, "");
  expect(test.screen69.line_title_ex, "");
  expect(test.screen69.line1, "");
  expect(test.screen69.line2, "");
  expect(test.screen69.line3, "");
  expect(test.screen69.line4, "");
  expect(test.screen69.line1_ex, "");
  expect(test.screen69.line2_ex, "");
  expect(test.screen69.line3_ex, "");
  expect(test.screen69.line4_ex, "");
  expect(test.screen69.sound_led1, 0);
  expect(test.screen69.sound_led2, 0);
  expect(test.screen69.sound_led3, 0);
  expect(test.screen70.title, "");
  expect(test.screen70.msg1, "");
  expect(test.screen70.msg2, "");
  expect(test.screen70.msg1_size, 0);
  expect(test.screen70.msg2_size, 0);
  expect(test.screen70.sound1, 0);
  expect(test.screen70.sound2, 0);
  expect(test.screen70.sound3, 0);
  expect(test.screen70.snd_timer, 0);
  expect(test.screen70.timer1, 0);
  expect(test.screen70.timer2, 0);
  expect(test.screen70.timer3, 0);
  expect(test.screen70.dsp_flg1, 0);
  expect(test.screen70.dsp_flg2, 0);
  expect(test.screen70.movie01_ext, 0);
  expect(test.screen70.movie02_ext, 0);
  expect(test.screen70.movie03_ext, 0);
  expect(test.screen70.movie04_ext, 0);
  expect(test.screen70.line_title, "");
  expect(test.screen70.line_title_ex, "");
  expect(test.screen70.line1, "");
  expect(test.screen70.line2, "");
  expect(test.screen70.line3, "");
  expect(test.screen70.line4, "");
  expect(test.screen70.line1_ex, "");
  expect(test.screen70.line2_ex, "");
  expect(test.screen70.line3_ex, "");
  expect(test.screen70.line4_ex, "");
  expect(test.screen70.sound_led1, 0);
  expect(test.screen70.sound_led2, 0);
  expect(test.screen70.sound_led3, 0);
  expect(test.screen71.title, "");
  expect(test.screen71.msg1, "");
  expect(test.screen71.msg2, "");
  expect(test.screen71.msg1_size, 0);
  expect(test.screen71.msg2_size, 0);
  expect(test.screen71.sound1, 0);
  expect(test.screen71.sound2, 0);
  expect(test.screen71.sound3, 0);
  expect(test.screen71.snd_timer, 0);
  expect(test.screen71.timer1, 0);
  expect(test.screen71.timer2, 0);
  expect(test.screen71.timer3, 0);
  expect(test.screen71.dsp_flg1, 0);
  expect(test.screen71.dsp_flg2, 0);
  expect(test.screen71.movie01_ext, 0);
  expect(test.screen71.movie02_ext, 0);
  expect(test.screen71.movie03_ext, 0);
  expect(test.screen71.movie04_ext, 0);
  expect(test.screen71.line_title, "");
  expect(test.screen71.line_title_ex, "");
  expect(test.screen71.line1, "");
  expect(test.screen71.line2, "");
  expect(test.screen71.line3, "");
  expect(test.screen71.line4, "");
  expect(test.screen71.line1_ex, "");
  expect(test.screen71.line2_ex, "");
  expect(test.screen71.line3_ex, "");
  expect(test.screen71.line4_ex, "");
  expect(test.screen71.sound_led1, 0);
  expect(test.screen71.sound_led2, 0);
  expect(test.screen71.sound_led3, 0);
  expect(test.screen72.title, "");
  expect(test.screen72.msg1, "");
  expect(test.screen72.msg2, "");
  expect(test.screen72.msg1_size, 0);
  expect(test.screen72.msg2_size, 0);
  expect(test.screen72.sound1, 0);
  expect(test.screen72.sound2, 0);
  expect(test.screen72.sound3, 0);
  expect(test.screen72.snd_timer, 0);
  expect(test.screen72.timer1, 0);
  expect(test.screen72.timer2, 0);
  expect(test.screen72.timer3, 0);
  expect(test.screen72.dsp_flg1, 0);
  expect(test.screen72.dsp_flg2, 0);
  expect(test.screen72.movie01_ext, 0);
  expect(test.screen72.movie02_ext, 0);
  expect(test.screen72.movie03_ext, 0);
  expect(test.screen72.movie04_ext, 0);
  expect(test.screen72.line_title, "");
  expect(test.screen72.line_title_ex, "");
  expect(test.screen72.line1, "");
  expect(test.screen72.line2, "");
  expect(test.screen72.line3, "");
  expect(test.screen72.line4, "");
  expect(test.screen72.line1_ex, "");
  expect(test.screen72.line2_ex, "");
  expect(test.screen72.line3_ex, "");
  expect(test.screen72.line4_ex, "");
  expect(test.screen72.sound_led1, 0);
  expect(test.screen72.sound_led2, 0);
  expect(test.screen72.sound_led3, 0);
  expect(test.screen73.title, "");
  expect(test.screen73.msg1, "");
  expect(test.screen73.msg2, "");
  expect(test.screen73.msg1_size, 0);
  expect(test.screen73.msg2_size, 0);
  expect(test.screen73.sound1, 0);
  expect(test.screen73.sound2, 0);
  expect(test.screen73.sound3, 0);
  expect(test.screen73.snd_timer, 0);
  expect(test.screen73.timer1, 0);
  expect(test.screen73.timer2, 0);
  expect(test.screen73.timer3, 0);
  expect(test.screen73.dsp_flg1, 0);
  expect(test.screen73.dsp_flg2, 0);
  expect(test.screen73.movie01_ext, 0);
  expect(test.screen73.movie02_ext, 0);
  expect(test.screen73.movie03_ext, 0);
  expect(test.screen73.movie04_ext, 0);
  expect(test.screen73.line_title, "");
  expect(test.screen73.line_title_ex, "");
  expect(test.screen73.line1, "");
  expect(test.screen73.line2, "");
  expect(test.screen73.line3, "");
  expect(test.screen73.line4, "");
  expect(test.screen73.line1_ex, "");
  expect(test.screen73.line2_ex, "");
  expect(test.screen73.line3_ex, "");
  expect(test.screen73.line4_ex, "");
  expect(test.screen73.sound_led1, 0);
  expect(test.screen73.sound_led2, 0);
  expect(test.screen73.sound_led3, 0);
  expect(test.screen74.title, "");
  expect(test.screen74.msg1, "");
  expect(test.screen74.msg2, "");
  expect(test.screen74.msg1_size, 0);
  expect(test.screen74.msg2_size, 0);
  expect(test.screen74.sound1, 0);
  expect(test.screen74.sound2, 0);
  expect(test.screen74.sound3, 0);
  expect(test.screen74.snd_timer, 0);
  expect(test.screen74.timer1, 0);
  expect(test.screen74.timer2, 0);
  expect(test.screen74.timer3, 0);
  expect(test.screen74.dsp_flg1, 0);
  expect(test.screen74.dsp_flg2, 0);
  expect(test.screen74.movie01_ext, 0);
  expect(test.screen74.movie02_ext, 0);
  expect(test.screen74.movie03_ext, 0);
  expect(test.screen74.movie04_ext, 0);
  expect(test.screen74.line_title, "");
  expect(test.screen74.line_title_ex, "");
  expect(test.screen74.line1, "");
  expect(test.screen74.line2, "");
  expect(test.screen74.line3, "");
  expect(test.screen74.line4, "");
  expect(test.screen74.line1_ex, "");
  expect(test.screen74.line2_ex, "");
  expect(test.screen74.line3_ex, "");
  expect(test.screen74.line4_ex, "");
  expect(test.screen74.sound_led1, 0);
  expect(test.screen74.sound_led2, 0);
  expect(test.screen74.sound_led3, 0);
  expect(test.screen75.title, "");
  expect(test.screen75.msg1, "");
  expect(test.screen75.msg2, "");
  expect(test.screen75.msg1_size, 0);
  expect(test.screen75.msg2_size, 0);
  expect(test.screen75.sound1, 0);
  expect(test.screen75.sound2, 0);
  expect(test.screen75.sound3, 0);
  expect(test.screen75.snd_timer, 0);
  expect(test.screen75.timer1, 0);
  expect(test.screen75.timer2, 0);
  expect(test.screen75.timer3, 0);
  expect(test.screen75.dsp_flg1, 0);
  expect(test.screen75.dsp_flg2, 0);
  expect(test.screen75.movie01_ext, 0);
  expect(test.screen75.movie02_ext, 0);
  expect(test.screen75.movie03_ext, 0);
  expect(test.screen75.movie04_ext, 0);
  expect(test.screen75.line_title, "");
  expect(test.screen75.line_title_ex, "");
  expect(test.screen75.line1, "");
  expect(test.screen75.line2, "");
  expect(test.screen75.line3, "");
  expect(test.screen75.line4, "");
  expect(test.screen75.line1_ex, "");
  expect(test.screen75.line2_ex, "");
  expect(test.screen75.line3_ex, "");
  expect(test.screen75.line4_ex, "");
  expect(test.screen75.sound_led1, 0);
  expect(test.screen75.sound_led2, 0);
  expect(test.screen75.sound_led3, 0);
  expect(test.screen76.title, "");
  expect(test.screen76.msg1, "");
  expect(test.screen76.msg2, "");
  expect(test.screen76.msg1_size, 0);
  expect(test.screen76.msg2_size, 0);
  expect(test.screen76.sound1, 0);
  expect(test.screen76.sound2, 0);
  expect(test.screen76.sound3, 0);
  expect(test.screen76.snd_timer, 0);
  expect(test.screen76.timer1, 0);
  expect(test.screen76.timer2, 0);
  expect(test.screen76.timer3, 0);
  expect(test.screen76.dsp_flg1, 0);
  expect(test.screen76.dsp_flg2, 0);
  expect(test.screen76.movie01_ext, 0);
  expect(test.screen76.movie02_ext, 0);
  expect(test.screen76.movie03_ext, 0);
  expect(test.screen76.movie04_ext, 0);
  expect(test.screen76.line_title, "");
  expect(test.screen76.line_title_ex, "");
  expect(test.screen76.line1, "");
  expect(test.screen76.line2, "");
  expect(test.screen76.line3, "");
  expect(test.screen76.line4, "");
  expect(test.screen76.line1_ex, "");
  expect(test.screen76.line2_ex, "");
  expect(test.screen76.line3_ex, "");
  expect(test.screen76.line4_ex, "");
  expect(test.screen76.sound_led1, 0);
  expect(test.screen76.sound_led2, 0);
  expect(test.screen76.sound_led3, 0);
  expect(test.screen77.title, "");
  expect(test.screen77.msg1, "");
  expect(test.screen77.msg2, "");
  expect(test.screen77.msg1_size, 0);
  expect(test.screen77.msg2_size, 0);
  expect(test.screen77.sound1, 0);
  expect(test.screen77.sound2, 0);
  expect(test.screen77.sound3, 0);
  expect(test.screen77.snd_timer, 0);
  expect(test.screen77.timer1, 0);
  expect(test.screen77.timer2, 0);
  expect(test.screen77.timer3, 0);
  expect(test.screen77.dsp_flg1, 0);
  expect(test.screen77.dsp_flg2, 0);
  expect(test.screen77.movie01_ext, 0);
  expect(test.screen77.movie02_ext, 0);
  expect(test.screen77.movie03_ext, 0);
  expect(test.screen77.movie04_ext, 0);
  expect(test.screen77.line_title, "");
  expect(test.screen77.line_title_ex, "");
  expect(test.screen77.line1, "");
  expect(test.screen77.line2, "");
  expect(test.screen77.line3, "");
  expect(test.screen77.line4, "");
  expect(test.screen77.line1_ex, "");
  expect(test.screen77.line2_ex, "");
  expect(test.screen77.line3_ex, "");
  expect(test.screen77.line4_ex, "");
  expect(test.screen77.sound_led1, 0);
  expect(test.screen77.sound_led2, 0);
  expect(test.screen77.sound_led3, 0);
  expect(test.screen78.title, "");
  expect(test.screen78.msg1, "");
  expect(test.screen78.msg2, "");
  expect(test.screen78.msg1_size, 0);
  expect(test.screen78.msg2_size, 0);
  expect(test.screen78.sound1, 0);
  expect(test.screen78.sound2, 0);
  expect(test.screen78.sound3, 0);
  expect(test.screen78.snd_timer, 0);
  expect(test.screen78.timer1, 0);
  expect(test.screen78.timer2, 0);
  expect(test.screen78.timer3, 0);
  expect(test.screen78.dsp_flg1, 0);
  expect(test.screen78.dsp_flg2, 0);
  expect(test.screen78.movie01_ext, 0);
  expect(test.screen78.movie02_ext, 0);
  expect(test.screen78.movie03_ext, 0);
  expect(test.screen78.movie04_ext, 0);
  expect(test.screen78.line_title, "");
  expect(test.screen78.line_title_ex, "");
  expect(test.screen78.line1, "");
  expect(test.screen78.line2, "");
  expect(test.screen78.line3, "");
  expect(test.screen78.line4, "");
  expect(test.screen78.line1_ex, "");
  expect(test.screen78.line2_ex, "");
  expect(test.screen78.line3_ex, "");
  expect(test.screen78.line4_ex, "");
  expect(test.screen78.sound_led1, 0);
  expect(test.screen78.sound_led2, 0);
  expect(test.screen78.sound_led3, 0);
  expect(test.screen79.title, "");
  expect(test.screen79.msg1, "");
  expect(test.screen79.msg2, "");
  expect(test.screen79.msg1_size, 0);
  expect(test.screen79.msg2_size, 0);
  expect(test.screen79.sound1, 0);
  expect(test.screen79.sound2, 0);
  expect(test.screen79.sound3, 0);
  expect(test.screen79.snd_timer, 0);
  expect(test.screen79.timer1, 0);
  expect(test.screen79.timer2, 0);
  expect(test.screen79.timer3, 0);
  expect(test.screen79.dsp_flg1, 0);
  expect(test.screen79.dsp_flg2, 0);
  expect(test.screen79.movie01_ext, 0);
  expect(test.screen79.movie02_ext, 0);
  expect(test.screen79.movie03_ext, 0);
  expect(test.screen79.movie04_ext, 0);
  expect(test.screen79.line_title, "");
  expect(test.screen79.line_title_ex, "");
  expect(test.screen79.line1, "");
  expect(test.screen79.line2, "");
  expect(test.screen79.line3, "");
  expect(test.screen79.line4, "");
  expect(test.screen79.line1_ex, "");
  expect(test.screen79.line2_ex, "");
  expect(test.screen79.line3_ex, "");
  expect(test.screen79.line4_ex, "");
  expect(test.screen79.sound_led1, 0);
  expect(test.screen79.sound_led2, 0);
  expect(test.screen79.sound_led3, 0);
  expect(test.screen81.title, "");
  expect(test.screen81.msg1, "");
  expect(test.screen81.msg2, "");
  expect(test.screen81.msg1_size, 0);
  expect(test.screen81.msg2_size, 0);
  expect(test.screen81.sound1, 0);
  expect(test.screen81.sound2, 0);
  expect(test.screen81.sound3, 0);
  expect(test.screen81.snd_timer, 0);
  expect(test.screen81.timer1, 0);
  expect(test.screen81.timer2, 0);
  expect(test.screen81.timer3, 0);
  expect(test.screen81.dsp_flg1, 0);
  expect(test.screen81.dsp_flg2, 0);
  expect(test.screen81.movie01_ext, 0);
  expect(test.screen81.movie02_ext, 0);
  expect(test.screen81.movie03_ext, 0);
  expect(test.screen81.movie04_ext, 0);
  expect(test.screen81.line_title, "");
  expect(test.screen81.line_title_ex, "");
  expect(test.screen81.line1, "");
  expect(test.screen81.line2, "");
  expect(test.screen81.line3, "");
  expect(test.screen81.line4, "");
  expect(test.screen81.line1_ex, "");
  expect(test.screen81.line2_ex, "");
  expect(test.screen81.line3_ex, "");
  expect(test.screen81.line4_ex, "");
  expect(test.screen81.sound_led1, 0);
  expect(test.screen81.sound_led2, 0);
  expect(test.screen81.sound_led3, 0);
  expect(test.screen82.title, "");
  expect(test.screen82.msg1, "");
  expect(test.screen82.msg2, "");
  expect(test.screen82.msg1_size, 0);
  expect(test.screen82.msg2_size, 0);
  expect(test.screen82.sound1, 0);
  expect(test.screen82.sound2, 0);
  expect(test.screen82.sound3, 0);
  expect(test.screen82.snd_timer, 0);
  expect(test.screen82.timer1, 0);
  expect(test.screen82.timer2, 0);
  expect(test.screen82.timer3, 0);
  expect(test.screen82.dsp_flg1, 0);
  expect(test.screen82.dsp_flg2, 0);
  expect(test.screen82.movie01_ext, 0);
  expect(test.screen82.movie02_ext, 0);
  expect(test.screen82.movie03_ext, 0);
  expect(test.screen82.movie04_ext, 0);
  expect(test.screen82.line_title, "");
  expect(test.screen82.line_title_ex, "");
  expect(test.screen82.line1, "");
  expect(test.screen82.line2, "");
  expect(test.screen82.line3, "");
  expect(test.screen82.line4, "");
  expect(test.screen82.line1_ex, "");
  expect(test.screen82.line2_ex, "");
  expect(test.screen82.line3_ex, "");
  expect(test.screen82.line4_ex, "");
  expect(test.screen82.sound_led1, 0);
  expect(test.screen82.sound_led2, 0);
  expect(test.screen82.sound_led3, 0);
  expect(test.screen83.title, "");
  expect(test.screen83.msg1, "");
  expect(test.screen83.msg2, "");
  expect(test.screen83.msg1_size, 0);
  expect(test.screen83.msg2_size, 0);
  expect(test.screen83.sound1, 0);
  expect(test.screen83.sound2, 0);
  expect(test.screen83.sound3, 0);
  expect(test.screen83.snd_timer, 0);
  expect(test.screen83.timer1, 0);
  expect(test.screen83.timer2, 0);
  expect(test.screen83.timer3, 0);
  expect(test.screen83.dsp_flg1, 0);
  expect(test.screen83.dsp_flg2, 0);
  expect(test.screen83.movie01_ext, 0);
  expect(test.screen83.movie02_ext, 0);
  expect(test.screen83.movie03_ext, 0);
  expect(test.screen83.movie04_ext, 0);
  expect(test.screen83.line_title, "");
  expect(test.screen83.line_title_ex, "");
  expect(test.screen83.line1, "");
  expect(test.screen83.line2, "");
  expect(test.screen83.line3, "");
  expect(test.screen83.line4, "");
  expect(test.screen83.line1_ex, "");
  expect(test.screen83.line2_ex, "");
  expect(test.screen83.line3_ex, "");
  expect(test.screen83.line4_ex, "");
  expect(test.screen83.sound_led1, 0);
  expect(test.screen83.sound_led2, 0);
  expect(test.screen83.sound_led3, 0);
  expect(test.screen84.title, "");
  expect(test.screen84.msg1, "");
  expect(test.screen84.msg2, "");
  expect(test.screen84.msg1_size, 0);
  expect(test.screen84.msg2_size, 0);
  expect(test.screen84.sound1, 0);
  expect(test.screen84.sound2, 0);
  expect(test.screen84.sound3, 0);
  expect(test.screen84.snd_timer, 0);
  expect(test.screen84.timer1, 0);
  expect(test.screen84.timer2, 0);
  expect(test.screen84.timer3, 0);
  expect(test.screen84.dsp_flg1, 0);
  expect(test.screen84.dsp_flg2, 0);
  expect(test.screen84.movie01_ext, 0);
  expect(test.screen84.movie02_ext, 0);
  expect(test.screen84.movie03_ext, 0);
  expect(test.screen84.movie04_ext, 0);
  expect(test.screen84.line_title, "");
  expect(test.screen84.line_title_ex, "");
  expect(test.screen84.line1, "");
  expect(test.screen84.line2, "");
  expect(test.screen84.line3, "");
  expect(test.screen84.line4, "");
  expect(test.screen84.line1_ex, "");
  expect(test.screen84.line2_ex, "");
  expect(test.screen84.line3_ex, "");
  expect(test.screen84.line4_ex, "");
  expect(test.screen84.sound_led1, 0);
  expect(test.screen84.sound_led2, 0);
  expect(test.screen84.sound_led3, 0);
  expect(test.screen85.title, "");
  expect(test.screen85.msg1, "");
  expect(test.screen85.msg2, "");
  expect(test.screen85.msg1_size, 0);
  expect(test.screen85.msg2_size, 0);
  expect(test.screen85.sound1, 0);
  expect(test.screen85.sound2, 0);
  expect(test.screen85.sound3, 0);
  expect(test.screen85.snd_timer, 0);
  expect(test.screen85.timer1, 0);
  expect(test.screen85.timer2, 0);
  expect(test.screen85.timer3, 0);
  expect(test.screen85.dsp_flg1, 0);
  expect(test.screen85.dsp_flg2, 0);
  expect(test.screen85.movie01_ext, 0);
  expect(test.screen85.movie02_ext, 0);
  expect(test.screen85.movie03_ext, 0);
  expect(test.screen85.movie04_ext, 0);
  expect(test.screen85.line_title, "");
  expect(test.screen85.line_title_ex, "");
  expect(test.screen85.line1, "");
  expect(test.screen85.line2, "");
  expect(test.screen85.line3, "");
  expect(test.screen85.line4, "");
  expect(test.screen85.line1_ex, "");
  expect(test.screen85.line2_ex, "");
  expect(test.screen85.line3_ex, "");
  expect(test.screen85.line4_ex, "");
  expect(test.screen85.sound_led1, 0);
  expect(test.screen85.sound_led2, 0);
  expect(test.screen85.sound_led3, 0);
  expect(test.screen86.title, "");
  expect(test.screen86.msg1, "");
  expect(test.screen86.msg2, "");
  expect(test.screen86.msg1_size, 0);
  expect(test.screen86.msg2_size, 0);
  expect(test.screen86.sound1, 0);
  expect(test.screen86.sound2, 0);
  expect(test.screen86.sound3, 0);
  expect(test.screen86.snd_timer, 0);
  expect(test.screen86.timer1, 0);
  expect(test.screen86.timer2, 0);
  expect(test.screen86.timer3, 0);
  expect(test.screen86.dsp_flg1, 0);
  expect(test.screen86.dsp_flg2, 0);
  expect(test.screen86.movie01_ext, 0);
  expect(test.screen86.movie02_ext, 0);
  expect(test.screen86.movie03_ext, 0);
  expect(test.screen86.movie04_ext, 0);
  expect(test.screen86.line_title, "");
  expect(test.screen86.line_title_ex, "");
  expect(test.screen86.line1, "");
  expect(test.screen86.line2, "");
  expect(test.screen86.line3, "");
  expect(test.screen86.line4, "");
  expect(test.screen86.line1_ex, "");
  expect(test.screen86.line2_ex, "");
  expect(test.screen86.line3_ex, "");
  expect(test.screen86.line4_ex, "");
  expect(test.screen86.sound_led1, 0);
  expect(test.screen86.sound_led2, 0);
  expect(test.screen86.sound_led3, 0);
  expect(test.screen87.title, "");
  expect(test.screen87.msg1, "");
  expect(test.screen87.msg2, "");
  expect(test.screen87.msg1_size, 0);
  expect(test.screen87.msg2_size, 0);
  expect(test.screen87.sound1, 0);
  expect(test.screen87.sound2, 0);
  expect(test.screen87.sound3, 0);
  expect(test.screen87.snd_timer, 0);
  expect(test.screen87.timer1, 0);
  expect(test.screen87.timer2, 0);
  expect(test.screen87.timer3, 0);
  expect(test.screen87.dsp_flg1, 0);
  expect(test.screen87.dsp_flg2, 0);
  expect(test.screen87.movie01_ext, 0);
  expect(test.screen87.movie02_ext, 0);
  expect(test.screen87.movie03_ext, 0);
  expect(test.screen87.movie04_ext, 0);
  expect(test.screen87.line_title, "");
  expect(test.screen87.line_title_ex, "");
  expect(test.screen87.line1, "");
  expect(test.screen87.line2, "");
  expect(test.screen87.line3, "");
  expect(test.screen87.line4, "");
  expect(test.screen87.line1_ex, "");
  expect(test.screen87.line2_ex, "");
  expect(test.screen87.line3_ex, "");
  expect(test.screen87.line4_ex, "");
  expect(test.screen87.sound_led1, 0);
  expect(test.screen87.sound_led2, 0);
  expect(test.screen87.sound_led3, 0);
  expect(test.screen88.title, "");
  expect(test.screen88.msg1, "");
  expect(test.screen88.msg2, "");
  expect(test.screen88.msg1_size, 0);
  expect(test.screen88.msg2_size, 0);
  expect(test.screen88.sound1, 0);
  expect(test.screen88.sound2, 0);
  expect(test.screen88.sound3, 0);
  expect(test.screen88.snd_timer, 0);
  expect(test.screen88.timer1, 0);
  expect(test.screen88.timer2, 0);
  expect(test.screen88.timer3, 0);
  expect(test.screen88.dsp_flg1, 0);
  expect(test.screen88.dsp_flg2, 0);
  expect(test.screen88.movie01_ext, 0);
  expect(test.screen88.movie02_ext, 0);
  expect(test.screen88.movie03_ext, 0);
  expect(test.screen88.movie04_ext, 0);
  expect(test.screen88.line_title, "");
  expect(test.screen88.line_title_ex, "");
  expect(test.screen88.line1, "");
  expect(test.screen88.line2, "");
  expect(test.screen88.line3, "");
  expect(test.screen88.line4, "");
  expect(test.screen88.line1_ex, "");
  expect(test.screen88.line2_ex, "");
  expect(test.screen88.line3_ex, "");
  expect(test.screen88.line4_ex, "");
  expect(test.screen88.sound_led1, 0);
  expect(test.screen88.sound_led2, 0);
  expect(test.screen88.sound_led3, 0);
  expect(test.screen89.title, "");
  expect(test.screen89.msg1, "");
  expect(test.screen89.msg2, "");
  expect(test.screen89.msg1_size, 0);
  expect(test.screen89.msg2_size, 0);
  expect(test.screen89.sound1, 0);
  expect(test.screen89.sound2, 0);
  expect(test.screen89.sound3, 0);
  expect(test.screen89.snd_timer, 0);
  expect(test.screen89.timer1, 0);
  expect(test.screen89.timer2, 0);
  expect(test.screen89.timer3, 0);
  expect(test.screen89.dsp_flg1, 0);
  expect(test.screen89.dsp_flg2, 0);
  expect(test.screen89.movie01_ext, 0);
  expect(test.screen89.movie02_ext, 0);
  expect(test.screen89.movie03_ext, 0);
  expect(test.screen89.movie04_ext, 0);
  expect(test.screen89.line_title, "");
  expect(test.screen89.line_title_ex, "");
  expect(test.screen89.line1, "");
  expect(test.screen89.line2, "");
  expect(test.screen89.line3, "");
  expect(test.screen89.line4, "");
  expect(test.screen89.line1_ex, "");
  expect(test.screen89.line2_ex, "");
  expect(test.screen89.line3_ex, "");
  expect(test.screen89.line4_ex, "");
  expect(test.screen89.sound_led1, 0);
  expect(test.screen89.sound_led2, 0);
  expect(test.screen89.sound_led3, 0);
  expect(test.screen90.title, "");
  expect(test.screen90.msg1, "");
  expect(test.screen90.msg2, "");
  expect(test.screen90.msg1_size, 0);
  expect(test.screen90.msg2_size, 0);
  expect(test.screen90.sound1, 0);
  expect(test.screen90.sound2, 0);
  expect(test.screen90.sound3, 0);
  expect(test.screen90.snd_timer, 0);
  expect(test.screen90.timer1, 0);
  expect(test.screen90.timer2, 0);
  expect(test.screen90.timer3, 0);
  expect(test.screen90.dsp_flg1, 0);
  expect(test.screen90.dsp_flg2, 0);
  expect(test.screen90.movie01_ext, 0);
  expect(test.screen90.movie02_ext, 0);
  expect(test.screen90.movie03_ext, 0);
  expect(test.screen90.movie04_ext, 0);
  expect(test.screen90.line_title, "");
  expect(test.screen90.line_title_ex, "");
  expect(test.screen90.line1, "");
  expect(test.screen90.line2, "");
  expect(test.screen90.line3, "");
  expect(test.screen90.line4, "");
  expect(test.screen90.line1_ex, "");
  expect(test.screen90.line2_ex, "");
  expect(test.screen90.line3_ex, "");
  expect(test.screen90.line4_ex, "");
  expect(test.screen90.sound_led1, 0);
  expect(test.screen90.sound_led2, 0);
  expect(test.screen90.sound_led3, 0);
  expect(test.screen91.title, "");
  expect(test.screen91.msg1, "");
  expect(test.screen91.msg2, "");
  expect(test.screen91.msg1_size, 0);
  expect(test.screen91.msg2_size, 0);
  expect(test.screen91.sound1, 0);
  expect(test.screen91.sound2, 0);
  expect(test.screen91.sound3, 0);
  expect(test.screen91.snd_timer, 0);
  expect(test.screen91.timer1, 0);
  expect(test.screen91.timer2, 0);
  expect(test.screen91.timer3, 0);
  expect(test.screen91.dsp_flg1, 0);
  expect(test.screen91.dsp_flg2, 0);
  expect(test.screen91.movie01_ext, 0);
  expect(test.screen91.movie02_ext, 0);
  expect(test.screen91.movie03_ext, 0);
  expect(test.screen91.movie04_ext, 0);
  expect(test.screen91.line_title, "");
  expect(test.screen91.line_title_ex, "");
  expect(test.screen91.line1, "");
  expect(test.screen91.line2, "");
  expect(test.screen91.line3, "");
  expect(test.screen91.line4, "");
  expect(test.screen91.line1_ex, "");
  expect(test.screen91.line2_ex, "");
  expect(test.screen91.line3_ex, "");
  expect(test.screen91.line4_ex, "");
  expect(test.screen91.sound_led1, 0);
  expect(test.screen91.sound_led2, 0);
  expect(test.screen91.sound_led3, 0);
  expect(test.screen92.title, "");
  expect(test.screen92.msg1, "");
  expect(test.screen92.msg2, "");
  expect(test.screen92.msg1_size, 0);
  expect(test.screen92.msg2_size, 0);
  expect(test.screen92.sound1, 0);
  expect(test.screen92.sound2, 0);
  expect(test.screen92.sound3, 0);
  expect(test.screen92.snd_timer, 0);
  expect(test.screen92.timer1, 0);
  expect(test.screen92.timer2, 0);
  expect(test.screen92.timer3, 0);
  expect(test.screen92.dsp_flg1, 0);
  expect(test.screen92.dsp_flg2, 0);
  expect(test.screen92.movie01_ext, 0);
  expect(test.screen92.movie02_ext, 0);
  expect(test.screen92.movie03_ext, 0);
  expect(test.screen92.movie04_ext, 0);
  expect(test.screen92.line_title, "");
  expect(test.screen92.line_title_ex, "");
  expect(test.screen92.line1, "");
  expect(test.screen92.line2, "");
  expect(test.screen92.line3, "");
  expect(test.screen92.line4, "");
  expect(test.screen92.line1_ex, "");
  expect(test.screen92.line2_ex, "");
  expect(test.screen92.line3_ex, "");
  expect(test.screen92.line4_ex, "");
  expect(test.screen92.sound_led1, 0);
  expect(test.screen92.sound_led2, 0);
  expect(test.screen92.sound_led3, 0);
  expect(test.screen93.title, "");
  expect(test.screen93.msg1, "");
  expect(test.screen93.msg2, "");
  expect(test.screen93.msg1_size, 0);
  expect(test.screen93.msg2_size, 0);
  expect(test.screen93.sound1, 0);
  expect(test.screen93.sound2, 0);
  expect(test.screen93.sound3, 0);
  expect(test.screen93.snd_timer, 0);
  expect(test.screen93.timer1, 0);
  expect(test.screen93.timer2, 0);
  expect(test.screen93.timer3, 0);
  expect(test.screen93.dsp_flg1, 0);
  expect(test.screen93.dsp_flg2, 0);
  expect(test.screen93.movie01_ext, 0);
  expect(test.screen93.movie02_ext, 0);
  expect(test.screen93.movie03_ext, 0);
  expect(test.screen93.movie04_ext, 0);
  expect(test.screen93.line_title, "");
  expect(test.screen93.line_title_ex, "");
  expect(test.screen93.line1, "");
  expect(test.screen93.line2, "");
  expect(test.screen93.line3, "");
  expect(test.screen93.line4, "");
  expect(test.screen93.line1_ex, "");
  expect(test.screen93.line2_ex, "");
  expect(test.screen93.line3_ex, "");
  expect(test.screen93.line4_ex, "");
  expect(test.screen93.sound_led1, 0);
  expect(test.screen93.sound_led2, 0);
  expect(test.screen93.sound_led3, 0);
  expect(test.screen94.title, "");
  expect(test.screen94.msg1, "");
  expect(test.screen94.msg2, "");
  expect(test.screen94.msg1_size, 0);
  expect(test.screen94.msg2_size, 0);
  expect(test.screen94.sound1, 0);
  expect(test.screen94.sound2, 0);
  expect(test.screen94.sound3, 0);
  expect(test.screen94.snd_timer, 0);
  expect(test.screen94.timer1, 0);
  expect(test.screen94.timer2, 0);
  expect(test.screen94.timer3, 0);
  expect(test.screen94.dsp_flg1, 0);
  expect(test.screen94.dsp_flg2, 0);
  expect(test.screen94.movie01_ext, 0);
  expect(test.screen94.movie02_ext, 0);
  expect(test.screen94.movie03_ext, 0);
  expect(test.screen94.movie04_ext, 0);
  expect(test.screen94.line_title, "");
  expect(test.screen94.line_title_ex, "");
  expect(test.screen94.line1, "");
  expect(test.screen94.line2, "");
  expect(test.screen94.line3, "");
  expect(test.screen94.line4, "");
  expect(test.screen94.line1_ex, "");
  expect(test.screen94.line2_ex, "");
  expect(test.screen94.line3_ex, "");
  expect(test.screen94.line4_ex, "");
  expect(test.screen94.sound_led1, 0);
  expect(test.screen94.sound_led2, 0);
  expect(test.screen94.sound_led3, 0);
  expect(test.screen95.title, "");
  expect(test.screen95.msg1, "");
  expect(test.screen95.msg2, "");
  expect(test.screen95.msg1_size, 0);
  expect(test.screen95.msg2_size, 0);
  expect(test.screen95.sound1, 0);
  expect(test.screen95.sound2, 0);
  expect(test.screen95.sound3, 0);
  expect(test.screen95.snd_timer, 0);
  expect(test.screen95.timer1, 0);
  expect(test.screen95.timer2, 0);
  expect(test.screen95.timer3, 0);
  expect(test.screen95.dsp_flg1, 0);
  expect(test.screen95.dsp_flg2, 0);
  expect(test.screen95.movie01_ext, 0);
  expect(test.screen95.movie02_ext, 0);
  expect(test.screen95.movie03_ext, 0);
  expect(test.screen95.movie04_ext, 0);
  expect(test.screen95.line_title, "");
  expect(test.screen95.line_title_ex, "");
  expect(test.screen95.line1, "");
  expect(test.screen95.line2, "");
  expect(test.screen95.line3, "");
  expect(test.screen95.line4, "");
  expect(test.screen95.line1_ex, "");
  expect(test.screen95.line2_ex, "");
  expect(test.screen95.line3_ex, "");
  expect(test.screen95.line4_ex, "");
  expect(test.screen95.sound_led1, 0);
  expect(test.screen95.sound_led2, 0);
  expect(test.screen95.sound_led3, 0);
  expect(test.screen96.title, "");
  expect(test.screen96.msg1, "");
  expect(test.screen96.msg2, "");
  expect(test.screen96.msg1_size, 0);
  expect(test.screen96.msg2_size, 0);
  expect(test.screen96.sound1, 0);
  expect(test.screen96.sound2, 0);
  expect(test.screen96.sound3, 0);
  expect(test.screen96.snd_timer, 0);
  expect(test.screen96.timer1, 0);
  expect(test.screen96.timer2, 0);
  expect(test.screen96.timer3, 0);
  expect(test.screen96.dsp_flg1, 0);
  expect(test.screen96.dsp_flg2, 0);
  expect(test.screen96.movie01_ext, 0);
  expect(test.screen96.movie02_ext, 0);
  expect(test.screen96.movie03_ext, 0);
  expect(test.screen96.movie04_ext, 0);
  expect(test.screen96.line_title, "");
  expect(test.screen96.line_title_ex, "");
  expect(test.screen96.line1, "");
  expect(test.screen96.line2, "");
  expect(test.screen96.line3, "");
  expect(test.screen96.line4, "");
  expect(test.screen96.line1_ex, "");
  expect(test.screen96.line2_ex, "");
  expect(test.screen96.line3_ex, "");
  expect(test.screen96.line4_ex, "");
  expect(test.screen96.sound_led1, 0);
  expect(test.screen96.sound_led2, 0);
  expect(test.screen96.sound_led3, 0);
  expect(test.screen97.title, "");
  expect(test.screen97.msg1, "");
  expect(test.screen97.msg2, "");
  expect(test.screen97.msg1_size, 0);
  expect(test.screen97.msg2_size, 0);
  expect(test.screen97.sound1, 0);
  expect(test.screen97.sound2, 0);
  expect(test.screen97.sound3, 0);
  expect(test.screen97.snd_timer, 0);
  expect(test.screen97.timer1, 0);
  expect(test.screen97.timer2, 0);
  expect(test.screen97.timer3, 0);
  expect(test.screen97.dsp_flg1, 0);
  expect(test.screen97.dsp_flg2, 0);
  expect(test.screen97.movie01_ext, 0);
  expect(test.screen97.movie02_ext, 0);
  expect(test.screen97.movie03_ext, 0);
  expect(test.screen97.movie04_ext, 0);
  expect(test.screen97.line_title, "");
  expect(test.screen97.line_title_ex, "");
  expect(test.screen97.line1, "");
  expect(test.screen97.line2, "");
  expect(test.screen97.line3, "");
  expect(test.screen97.line4, "");
  expect(test.screen97.line1_ex, "");
  expect(test.screen97.line2_ex, "");
  expect(test.screen97.line3_ex, "");
  expect(test.screen97.line4_ex, "");
  expect(test.screen97.sound_led1, 0);
  expect(test.screen97.sound_led2, 0);
  expect(test.screen97.sound_led3, 0);
  expect(test.screen98.title, "");
  expect(test.screen98.msg1, "");
  expect(test.screen98.msg2, "");
  expect(test.screen98.msg1_size, 0);
  expect(test.screen98.msg2_size, 0);
  expect(test.screen98.sound1, 0);
  expect(test.screen98.sound2, 0);
  expect(test.screen98.sound3, 0);
  expect(test.screen98.snd_timer, 0);
  expect(test.screen98.timer1, 0);
  expect(test.screen98.timer2, 0);
  expect(test.screen98.timer3, 0);
  expect(test.screen98.dsp_flg1, 0);
  expect(test.screen98.dsp_flg2, 0);
  expect(test.screen98.movie01_ext, 0);
  expect(test.screen98.movie02_ext, 0);
  expect(test.screen98.movie03_ext, 0);
  expect(test.screen98.movie04_ext, 0);
  expect(test.screen98.line_title, "");
  expect(test.screen98.line_title_ex, "");
  expect(test.screen98.line1, "");
  expect(test.screen98.line2, "");
  expect(test.screen98.line3, "");
  expect(test.screen98.line4, "");
  expect(test.screen98.line1_ex, "");
  expect(test.screen98.line2_ex, "");
  expect(test.screen98.line3_ex, "");
  expect(test.screen98.line4_ex, "");
  expect(test.screen98.sound_led1, 0);
  expect(test.screen98.sound_led2, 0);
  expect(test.screen98.sound_led3, 0);
  expect(test.screen99.title, "");
  expect(test.screen99.msg1, "");
  expect(test.screen99.msg2, "");
  expect(test.screen99.msg1_size, 0);
  expect(test.screen99.msg2_size, 0);
  expect(test.screen99.sound1, 0);
  expect(test.screen99.sound2, 0);
  expect(test.screen99.sound3, 0);
  expect(test.screen99.snd_timer, 0);
  expect(test.screen99.timer1, 0);
  expect(test.screen99.timer2, 0);
  expect(test.screen99.timer3, 0);
  expect(test.screen99.dsp_flg1, 0);
  expect(test.screen99.dsp_flg2, 0);
  expect(test.screen99.movie01_ext, 0);
  expect(test.screen99.movie02_ext, 0);
  expect(test.screen99.movie03_ext, 0);
  expect(test.screen99.movie04_ext, 0);
  expect(test.screen99.line_title, "");
  expect(test.screen99.line_title_ex, "");
  expect(test.screen99.line1, "");
  expect(test.screen99.line2, "");
  expect(test.screen99.line3, "");
  expect(test.screen99.line4, "");
  expect(test.screen99.line1_ex, "");
  expect(test.screen99.line2_ex, "");
  expect(test.screen99.line3_ex, "");
  expect(test.screen99.line4_ex, "");
  expect(test.screen99.sound_led1, 0);
  expect(test.screen99.sound_led2, 0);
  expect(test.screen99.sound_led3, 0);
  expect(test.screen100.title, "");
  expect(test.screen100.msg1, "");
  expect(test.screen100.msg2, "");
  expect(test.screen100.msg1_size, 0);
  expect(test.screen100.msg2_size, 0);
  expect(test.screen100.sound1, 0);
  expect(test.screen100.sound2, 0);
  expect(test.screen100.sound3, 0);
  expect(test.screen100.snd_timer, 0);
  expect(test.screen100.timer1, 0);
  expect(test.screen100.timer2, 0);
  expect(test.screen100.timer3, 0);
  expect(test.screen100.dsp_flg1, 0);
  expect(test.screen100.dsp_flg2, 0);
  expect(test.screen100.movie01_ext, 0);
  expect(test.screen100.movie02_ext, 0);
  expect(test.screen100.movie03_ext, 0);
  expect(test.screen100.movie04_ext, 0);
  expect(test.screen100.line_title, "");
  expect(test.screen100.line_title_ex, "");
  expect(test.screen100.line1, "");
  expect(test.screen100.line2, "");
  expect(test.screen100.line3, "");
  expect(test.screen100.line4, "");
  expect(test.screen100.line1_ex, "");
  expect(test.screen100.line2_ex, "");
  expect(test.screen100.line3_ex, "");
  expect(test.screen100.line4_ex, "");
  expect(test.screen100.sound_led1, 0);
  expect(test.screen100.sound_led2, 0);
  expect(test.screen100.sound_led3, 0);
  expect(test.screen101.title, "");
  expect(test.screen101.msg1, "");
  expect(test.screen101.msg2, "");
  expect(test.screen101.msg1_size, 0);
  expect(test.screen101.msg2_size, 0);
  expect(test.screen101.sound1, 0);
  expect(test.screen101.sound2, 0);
  expect(test.screen101.sound3, 0);
  expect(test.screen101.snd_timer, 0);
  expect(test.screen101.timer1, 0);
  expect(test.screen101.timer2, 0);
  expect(test.screen101.timer3, 0);
  expect(test.screen101.dsp_flg1, 0);
  expect(test.screen101.dsp_flg2, 0);
  expect(test.screen101.movie01_ext, 0);
  expect(test.screen101.movie02_ext, 0);
  expect(test.screen101.movie03_ext, 0);
  expect(test.screen101.movie04_ext, 0);
  expect(test.screen101.line_title, "");
  expect(test.screen101.line_title_ex, "");
  expect(test.screen101.line1, "");
  expect(test.screen101.line2, "");
  expect(test.screen101.line3, "");
  expect(test.screen101.line4, "");
  expect(test.screen101.line1_ex, "");
  expect(test.screen101.line2_ex, "");
  expect(test.screen101.line3_ex, "");
  expect(test.screen101.line4_ex, "");
  expect(test.screen101.sound_led1, 0);
  expect(test.screen101.sound_led2, 0);
  expect(test.screen101.sound_led3, 0);
  expect(test.screen102.title, "");
  expect(test.screen102.msg1, "");
  expect(test.screen102.msg2, "");
  expect(test.screen102.msg1_size, 0);
  expect(test.screen102.msg2_size, 0);
  expect(test.screen102.sound1, 0);
  expect(test.screen102.sound2, 0);
  expect(test.screen102.sound3, 0);
  expect(test.screen102.snd_timer, 0);
  expect(test.screen102.timer1, 0);
  expect(test.screen102.timer2, 0);
  expect(test.screen102.timer3, 0);
  expect(test.screen102.dsp_flg1, 0);
  expect(test.screen102.dsp_flg2, 0);
  expect(test.screen102.movie01_ext, 0);
  expect(test.screen102.movie02_ext, 0);
  expect(test.screen102.movie03_ext, 0);
  expect(test.screen102.movie04_ext, 0);
  expect(test.screen102.line_title, "");
  expect(test.screen102.line_title_ex, "");
  expect(test.screen102.line1, "");
  expect(test.screen102.line2, "");
  expect(test.screen102.line3, "");
  expect(test.screen102.line4, "");
  expect(test.screen102.line1_ex, "");
  expect(test.screen102.line2_ex, "");
  expect(test.screen102.line3_ex, "");
  expect(test.screen102.line4_ex, "");
  expect(test.screen102.sound_led1, 0);
  expect(test.screen102.sound_led2, 0);
  expect(test.screen102.sound_led3, 0);
  expect(test.screen103.title, "");
  expect(test.screen103.msg1, "");
  expect(test.screen103.msg2, "");
  expect(test.screen103.msg1_size, 0);
  expect(test.screen103.msg2_size, 0);
  expect(test.screen103.sound1, 0);
  expect(test.screen103.sound2, 0);
  expect(test.screen103.sound3, 0);
  expect(test.screen103.snd_timer, 0);
  expect(test.screen103.timer1, 0);
  expect(test.screen103.timer2, 0);
  expect(test.screen103.timer3, 0);
  expect(test.screen103.dsp_flg1, 0);
  expect(test.screen103.dsp_flg2, 0);
  expect(test.screen103.movie01_ext, 0);
  expect(test.screen103.movie02_ext, 0);
  expect(test.screen103.movie03_ext, 0);
  expect(test.screen103.movie04_ext, 0);
  expect(test.screen103.line_title, "");
  expect(test.screen103.line_title_ex, "");
  expect(test.screen103.line1, "");
  expect(test.screen103.line2, "");
  expect(test.screen103.line3, "");
  expect(test.screen103.line4, "");
  expect(test.screen103.line1_ex, "");
  expect(test.screen103.line2_ex, "");
  expect(test.screen103.line3_ex, "");
  expect(test.screen103.line4_ex, "");
  expect(test.screen103.sound_led1, 0);
  expect(test.screen103.sound_led2, 0);
  expect(test.screen103.sound_led3, 0);
  expect(test.screen104.title, "");
  expect(test.screen104.msg1, "");
  expect(test.screen104.msg2, "");
  expect(test.screen104.msg1_size, 0);
  expect(test.screen104.msg2_size, 0);
  expect(test.screen104.sound1, 0);
  expect(test.screen104.sound2, 0);
  expect(test.screen104.sound3, 0);
  expect(test.screen104.snd_timer, 0);
  expect(test.screen104.timer1, 0);
  expect(test.screen104.timer2, 0);
  expect(test.screen104.timer3, 0);
  expect(test.screen104.dsp_flg1, 0);
  expect(test.screen104.dsp_flg2, 0);
  expect(test.screen104.movie01_ext, 0);
  expect(test.screen104.movie02_ext, 0);
  expect(test.screen104.movie03_ext, 0);
  expect(test.screen104.movie04_ext, 0);
  expect(test.screen104.line_title, "");
  expect(test.screen104.line_title_ex, "");
  expect(test.screen104.line1, "");
  expect(test.screen104.line2, "");
  expect(test.screen104.line3, "");
  expect(test.screen104.line4, "");
  expect(test.screen104.line1_ex, "");
  expect(test.screen104.line2_ex, "");
  expect(test.screen104.line3_ex, "");
  expect(test.screen104.line4_ex, "");
  expect(test.screen104.sound_led1, 0);
  expect(test.screen104.sound_led2, 0);
  expect(test.screen104.sound_led3, 0);
  expect(test.screen105.title, "");
  expect(test.screen105.msg1, "");
  expect(test.screen105.msg2, "");
  expect(test.screen105.msg1_size, 0);
  expect(test.screen105.msg2_size, 0);
  expect(test.screen105.sound1, 0);
  expect(test.screen105.sound2, 0);
  expect(test.screen105.sound3, 0);
  expect(test.screen105.snd_timer, 0);
  expect(test.screen105.timer1, 0);
  expect(test.screen105.timer2, 0);
  expect(test.screen105.timer3, 0);
  expect(test.screen105.dsp_flg1, 0);
  expect(test.screen105.dsp_flg2, 0);
  expect(test.screen105.movie01_ext, 0);
  expect(test.screen105.movie02_ext, 0);
  expect(test.screen105.movie03_ext, 0);
  expect(test.screen105.movie04_ext, 0);
  expect(test.screen105.line_title, "");
  expect(test.screen105.line_title_ex, "");
  expect(test.screen105.line1, "");
  expect(test.screen105.line2, "");
  expect(test.screen105.line3, "");
  expect(test.screen105.line4, "");
  expect(test.screen105.line1_ex, "");
  expect(test.screen105.line2_ex, "");
  expect(test.screen105.line3_ex, "");
  expect(test.screen105.line4_ex, "");
  expect(test.screen105.sound_led1, 0);
  expect(test.screen105.sound_led2, 0);
  expect(test.screen105.sound_led3, 0);
  expect(test.screen106.title, "");
  expect(test.screen106.msg1, "");
  expect(test.screen106.msg2, "");
  expect(test.screen106.msg1_size, 0);
  expect(test.screen106.msg2_size, 0);
  expect(test.screen106.sound1, 0);
  expect(test.screen106.sound2, 0);
  expect(test.screen106.sound3, 0);
  expect(test.screen106.snd_timer, 0);
  expect(test.screen106.timer1, 0);
  expect(test.screen106.timer2, 0);
  expect(test.screen106.timer3, 0);
  expect(test.screen106.dsp_flg1, 0);
  expect(test.screen106.dsp_flg2, 0);
  expect(test.screen106.movie01_ext, 0);
  expect(test.screen106.movie02_ext, 0);
  expect(test.screen106.movie03_ext, 0);
  expect(test.screen106.movie04_ext, 0);
  expect(test.screen106.line_title, "");
  expect(test.screen106.line_title_ex, "");
  expect(test.screen106.line1, "");
  expect(test.screen106.line2, "");
  expect(test.screen106.line3, "");
  expect(test.screen106.line4, "");
  expect(test.screen106.line1_ex, "");
  expect(test.screen106.line2_ex, "");
  expect(test.screen106.line3_ex, "");
  expect(test.screen106.line4_ex, "");
  expect(test.screen106.sound_led1, 0);
  expect(test.screen106.sound_led2, 0);
  expect(test.screen106.sound_led3, 0);
  expect(test.screen107.title, "");
  expect(test.screen107.msg1, "");
  expect(test.screen107.msg2, "");
  expect(test.screen107.msg1_size, 0);
  expect(test.screen107.msg2_size, 0);
  expect(test.screen107.sound1, 0);
  expect(test.screen107.sound2, 0);
  expect(test.screen107.sound3, 0);
  expect(test.screen107.snd_timer, 0);
  expect(test.screen107.timer1, 0);
  expect(test.screen107.timer2, 0);
  expect(test.screen107.timer3, 0);
  expect(test.screen107.dsp_flg1, 0);
  expect(test.screen107.dsp_flg2, 0);
  expect(test.screen107.movie01_ext, 0);
  expect(test.screen107.movie02_ext, 0);
  expect(test.screen107.movie03_ext, 0);
  expect(test.screen107.movie04_ext, 0);
  expect(test.screen107.line_title, "");
  expect(test.screen107.line_title_ex, "");
  expect(test.screen107.line1, "");
  expect(test.screen107.line2, "");
  expect(test.screen107.line3, "");
  expect(test.screen107.line4, "");
  expect(test.screen107.line1_ex, "");
  expect(test.screen107.line2_ex, "");
  expect(test.screen107.line3_ex, "");
  expect(test.screen107.line4_ex, "");
  expect(test.screen107.sound_led1, 0);
  expect(test.screen107.sound_led2, 0);
  expect(test.screen107.sound_led3, 0);
  expect(test.screen109.title, "");
  expect(test.screen109.msg1, "");
  expect(test.screen109.msg2, "");
  expect(test.screen109.msg1_size, 0);
  expect(test.screen109.msg2_size, 0);
  expect(test.screen109.sound1, 0);
  expect(test.screen109.sound2, 0);
  expect(test.screen109.sound3, 0);
  expect(test.screen109.snd_timer, 0);
  expect(test.screen109.timer1, 0);
  expect(test.screen109.timer2, 0);
  expect(test.screen109.timer3, 0);
  expect(test.screen109.dsp_flg1, 0);
  expect(test.screen109.dsp_flg2, 0);
  expect(test.screen109.movie01_ext, 0);
  expect(test.screen109.movie02_ext, 0);
  expect(test.screen109.movie03_ext, 0);
  expect(test.screen109.movie04_ext, 0);
  expect(test.screen109.line_title, "");
  expect(test.screen109.line_title_ex, "");
  expect(test.screen109.line1, "");
  expect(test.screen109.line2, "");
  expect(test.screen109.line3, "");
  expect(test.screen109.line4, "");
  expect(test.screen109.line1_ex, "");
  expect(test.screen109.line2_ex, "");
  expect(test.screen109.line3_ex, "");
  expect(test.screen109.line4_ex, "");
  expect(test.screen109.sound_led1, 0);
  expect(test.screen109.sound_led2, 0);
  expect(test.screen109.sound_led3, 0);
  expect(test.screen111.title, "");
  expect(test.screen111.msg1, "");
  expect(test.screen111.msg2, "");
  expect(test.screen111.msg1_size, 0);
  expect(test.screen111.msg2_size, 0);
  expect(test.screen111.sound1, 0);
  expect(test.screen111.sound2, 0);
  expect(test.screen111.sound3, 0);
  expect(test.screen111.snd_timer, 0);
  expect(test.screen111.timer1, 0);
  expect(test.screen111.timer2, 0);
  expect(test.screen111.timer3, 0);
  expect(test.screen111.dsp_flg1, 0);
  expect(test.screen111.dsp_flg2, 0);
  expect(test.screen111.movie01_ext, 0);
  expect(test.screen111.movie02_ext, 0);
  expect(test.screen111.movie03_ext, 0);
  expect(test.screen111.movie04_ext, 0);
  expect(test.screen111.line_title, "");
  expect(test.screen111.line_title_ex, "");
  expect(test.screen111.line1, "");
  expect(test.screen111.line2, "");
  expect(test.screen111.line3, "");
  expect(test.screen111.line4, "");
  expect(test.screen111.line1_ex, "");
  expect(test.screen111.line2_ex, "");
  expect(test.screen111.line3_ex, "");
  expect(test.screen111.line4_ex, "");
  expect(test.screen111.sound_led1, 0);
  expect(test.screen111.sound_led2, 0);
  expect(test.screen111.sound_led3, 0);
  expect(test.screen112.title, "");
  expect(test.screen112.msg1, "");
  expect(test.screen112.msg2, "");
  expect(test.screen112.msg1_size, 0);
  expect(test.screen112.msg2_size, 0);
  expect(test.screen112.sound1, 0);
  expect(test.screen112.sound2, 0);
  expect(test.screen112.sound3, 0);
  expect(test.screen112.snd_timer, 0);
  expect(test.screen112.timer1, 0);
  expect(test.screen112.timer2, 0);
  expect(test.screen112.timer3, 0);
  expect(test.screen112.dsp_flg1, 0);
  expect(test.screen112.dsp_flg2, 0);
  expect(test.screen112.movie01_ext, 0);
  expect(test.screen112.movie02_ext, 0);
  expect(test.screen112.movie03_ext, 0);
  expect(test.screen112.movie04_ext, 0);
  expect(test.screen112.line_title, "");
  expect(test.screen112.line_title_ex, "");
  expect(test.screen112.line1, "");
  expect(test.screen112.line2, "");
  expect(test.screen112.line3, "");
  expect(test.screen112.line4, "");
  expect(test.screen112.line1_ex, "");
  expect(test.screen112.line2_ex, "");
  expect(test.screen112.line3_ex, "");
  expect(test.screen112.line4_ex, "");
  expect(test.screen112.sound_led1, 0);
  expect(test.screen112.sound_led2, 0);
  expect(test.screen112.sound_led3, 0);
  expect(test.screen113.title, "");
  expect(test.screen113.msg1, "");
  expect(test.screen113.msg2, "");
  expect(test.screen113.msg1_size, 0);
  expect(test.screen113.msg2_size, 0);
  expect(test.screen113.sound1, 0);
  expect(test.screen113.sound2, 0);
  expect(test.screen113.sound3, 0);
  expect(test.screen113.snd_timer, 0);
  expect(test.screen113.timer1, 0);
  expect(test.screen113.timer2, 0);
  expect(test.screen113.timer3, 0);
  expect(test.screen113.dsp_flg1, 0);
  expect(test.screen113.dsp_flg2, 0);
  expect(test.screen113.movie01_ext, 0);
  expect(test.screen113.movie02_ext, 0);
  expect(test.screen113.movie03_ext, 0);
  expect(test.screen113.movie04_ext, 0);
  expect(test.screen113.line_title, "");
  expect(test.screen113.line_title_ex, "");
  expect(test.screen113.line1, "");
  expect(test.screen113.line2, "");
  expect(test.screen113.line3, "");
  expect(test.screen113.line4, "");
  expect(test.screen113.line1_ex, "");
  expect(test.screen113.line2_ex, "");
  expect(test.screen113.line3_ex, "");
  expect(test.screen113.line4_ex, "");
  expect(test.screen113.sound_led1, 0);
  expect(test.screen113.sound_led2, 0);
  expect(test.screen113.sound_led3, 0);
  expect(test.screen114.title, "");
  expect(test.screen114.msg1, "");
  expect(test.screen114.msg2, "");
  expect(test.screen114.msg1_size, 0);
  expect(test.screen114.msg2_size, 0);
  expect(test.screen114.sound1, 0);
  expect(test.screen114.sound2, 0);
  expect(test.screen114.sound3, 0);
  expect(test.screen114.snd_timer, 0);
  expect(test.screen114.timer1, 0);
  expect(test.screen114.timer2, 0);
  expect(test.screen114.timer3, 0);
  expect(test.screen114.dsp_flg1, 0);
  expect(test.screen114.dsp_flg2, 0);
  expect(test.screen114.movie01_ext, 0);
  expect(test.screen114.movie02_ext, 0);
  expect(test.screen114.movie03_ext, 0);
  expect(test.screen114.movie04_ext, 0);
  expect(test.screen114.line_title, "");
  expect(test.screen114.line_title_ex, "");
  expect(test.screen114.line1, "");
  expect(test.screen114.line2, "");
  expect(test.screen114.line3, "");
  expect(test.screen114.line4, "");
  expect(test.screen114.line1_ex, "");
  expect(test.screen114.line2_ex, "");
  expect(test.screen114.line3_ex, "");
  expect(test.screen114.line4_ex, "");
  expect(test.screen114.sound_led1, 0);
  expect(test.screen114.sound_led2, 0);
  expect(test.screen114.sound_led3, 0);
  expect(test.screen115.title, "");
  expect(test.screen115.msg1, "");
  expect(test.screen115.msg2, "");
  expect(test.screen115.msg1_size, 0);
  expect(test.screen115.msg2_size, 0);
  expect(test.screen115.sound1, 0);
  expect(test.screen115.sound2, 0);
  expect(test.screen115.sound3, 0);
  expect(test.screen115.snd_timer, 0);
  expect(test.screen115.timer1, 0);
  expect(test.screen115.timer2, 0);
  expect(test.screen115.timer3, 0);
  expect(test.screen115.dsp_flg1, 0);
  expect(test.screen115.dsp_flg2, 0);
  expect(test.screen115.movie01_ext, 0);
  expect(test.screen115.movie02_ext, 0);
  expect(test.screen115.movie03_ext, 0);
  expect(test.screen115.movie04_ext, 0);
  expect(test.screen115.line_title, "");
  expect(test.screen115.line_title_ex, "");
  expect(test.screen115.line1, "");
  expect(test.screen115.line2, "");
  expect(test.screen115.line3, "");
  expect(test.screen115.line4, "");
  expect(test.screen115.line1_ex, "");
  expect(test.screen115.line2_ex, "");
  expect(test.screen115.line3_ex, "");
  expect(test.screen115.line4_ex, "");
  expect(test.screen115.sound_led1, 0);
  expect(test.screen115.sound_led2, 0);
  expect(test.screen115.sound_led3, 0);
  expect(test.screen116.title, "");
  expect(test.screen116.msg1, "");
  expect(test.screen116.msg2, "");
  expect(test.screen116.msg1_size, 0);
  expect(test.screen116.msg2_size, 0);
  expect(test.screen116.sound1, 0);
  expect(test.screen116.sound2, 0);
  expect(test.screen116.sound3, 0);
  expect(test.screen116.snd_timer, 0);
  expect(test.screen116.timer1, 0);
  expect(test.screen116.timer2, 0);
  expect(test.screen116.timer3, 0);
  expect(test.screen116.dsp_flg1, 0);
  expect(test.screen116.dsp_flg2, 0);
  expect(test.screen116.movie01_ext, 0);
  expect(test.screen116.movie02_ext, 0);
  expect(test.screen116.movie03_ext, 0);
  expect(test.screen116.movie04_ext, 0);
  expect(test.screen116.line_title, "");
  expect(test.screen116.line_title_ex, "");
  expect(test.screen116.line1, "");
  expect(test.screen116.line2, "");
  expect(test.screen116.line3, "");
  expect(test.screen116.line4, "");
  expect(test.screen116.line1_ex, "");
  expect(test.screen116.line2_ex, "");
  expect(test.screen116.line3_ex, "");
  expect(test.screen116.line4_ex, "");
  expect(test.screen116.sound_led1, 0);
  expect(test.screen116.sound_led2, 0);
  expect(test.screen116.sound_led3, 0);
  expect(test.screen117.title, "");
  expect(test.screen117.msg1, "");
  expect(test.screen117.msg2, "");
  expect(test.screen117.msg1_size, 0);
  expect(test.screen117.msg2_size, 0);
  expect(test.screen117.sound1, 0);
  expect(test.screen117.sound2, 0);
  expect(test.screen117.sound3, 0);
  expect(test.screen117.snd_timer, 0);
  expect(test.screen117.timer1, 0);
  expect(test.screen117.timer2, 0);
  expect(test.screen117.timer3, 0);
  expect(test.screen117.dsp_flg1, 0);
  expect(test.screen117.dsp_flg2, 0);
  expect(test.screen117.movie01_ext, 0);
  expect(test.screen117.movie02_ext, 0);
  expect(test.screen117.movie03_ext, 0);
  expect(test.screen117.movie04_ext, 0);
  expect(test.screen117.line_title, "");
  expect(test.screen117.line_title_ex, "");
  expect(test.screen117.line1, "");
  expect(test.screen117.line2, "");
  expect(test.screen117.line3, "");
  expect(test.screen117.line4, "");
  expect(test.screen117.line1_ex, "");
  expect(test.screen117.line2_ex, "");
  expect(test.screen117.line3_ex, "");
  expect(test.screen117.line4_ex, "");
  expect(test.screen117.sound_led1, 0);
  expect(test.screen117.sound_led2, 0);
  expect(test.screen117.sound_led3, 0);
  expect(test.screen118.title, "");
  expect(test.screen118.msg1, "");
  expect(test.screen118.msg2, "");
  expect(test.screen118.msg1_size, 0);
  expect(test.screen118.msg2_size, 0);
  expect(test.screen118.sound1, 0);
  expect(test.screen118.sound2, 0);
  expect(test.screen118.sound3, 0);
  expect(test.screen118.snd_timer, 0);
  expect(test.screen118.timer1, 0);
  expect(test.screen118.timer2, 0);
  expect(test.screen118.timer3, 0);
  expect(test.screen118.dsp_flg1, 0);
  expect(test.screen118.dsp_flg2, 0);
  expect(test.screen118.movie01_ext, 0);
  expect(test.screen118.movie02_ext, 0);
  expect(test.screen118.movie03_ext, 0);
  expect(test.screen118.movie04_ext, 0);
  expect(test.screen118.line_title, "");
  expect(test.screen118.line_title_ex, "");
  expect(test.screen118.line1, "");
  expect(test.screen118.line2, "");
  expect(test.screen118.line3, "");
  expect(test.screen118.line4, "");
  expect(test.screen118.line1_ex, "");
  expect(test.screen118.line2_ex, "");
  expect(test.screen118.line3_ex, "");
  expect(test.screen118.line4_ex, "");
  expect(test.screen118.sound_led1, 0);
  expect(test.screen118.sound_led2, 0);
  expect(test.screen118.sound_led3, 0);
  expect(test.screen119.title, "");
  expect(test.screen119.msg1, "");
  expect(test.screen119.msg2, "");
  expect(test.screen119.msg1_size, 0);
  expect(test.screen119.msg2_size, 0);
  expect(test.screen119.sound1, 0);
  expect(test.screen119.sound2, 0);
  expect(test.screen119.sound3, 0);
  expect(test.screen119.snd_timer, 0);
  expect(test.screen119.timer1, 0);
  expect(test.screen119.timer2, 0);
  expect(test.screen119.timer3, 0);
  expect(test.screen119.dsp_flg1, 0);
  expect(test.screen119.dsp_flg2, 0);
  expect(test.screen119.movie01_ext, 0);
  expect(test.screen119.movie02_ext, 0);
  expect(test.screen119.movie03_ext, 0);
  expect(test.screen119.movie04_ext, 0);
  expect(test.screen119.line_title, "");
  expect(test.screen119.line_title_ex, "");
  expect(test.screen119.line1, "");
  expect(test.screen119.line2, "");
  expect(test.screen119.line3, "");
  expect(test.screen119.line4, "");
  expect(test.screen119.line1_ex, "");
  expect(test.screen119.line2_ex, "");
  expect(test.screen119.line3_ex, "");
  expect(test.screen119.line4_ex, "");
  expect(test.screen119.sound_led1, 0);
  expect(test.screen119.sound_led2, 0);
  expect(test.screen119.sound_led3, 0);
  expect(test.screen120.title, "");
  expect(test.screen120.msg1, "");
  expect(test.screen120.msg2, "");
  expect(test.screen120.msg1_size, 0);
  expect(test.screen120.msg2_size, 0);
  expect(test.screen120.sound1, 0);
  expect(test.screen120.sound2, 0);
  expect(test.screen120.sound3, 0);
  expect(test.screen120.snd_timer, 0);
  expect(test.screen120.timer1, 0);
  expect(test.screen120.timer2, 0);
  expect(test.screen120.timer3, 0);
  expect(test.screen120.dsp_flg1, 0);
  expect(test.screen120.dsp_flg2, 0);
  expect(test.screen120.movie01_ext, 0);
  expect(test.screen120.movie02_ext, 0);
  expect(test.screen120.movie03_ext, 0);
  expect(test.screen120.movie04_ext, 0);
  expect(test.screen120.line_title, "");
  expect(test.screen120.line_title_ex, "");
  expect(test.screen120.line1, "");
  expect(test.screen120.line2, "");
  expect(test.screen120.line3, "");
  expect(test.screen120.line4, "");
  expect(test.screen120.line1_ex, "");
  expect(test.screen120.line2_ex, "");
  expect(test.screen120.line3_ex, "");
  expect(test.screen120.line4_ex, "");
  expect(test.screen120.sound_led1, 0);
  expect(test.screen120.sound_led2, 0);
  expect(test.screen120.sound_led3, 0);
  expect(test.screen121.title, "");
  expect(test.screen121.msg1, "");
  expect(test.screen121.msg2, "");
  expect(test.screen121.msg1_size, 0);
  expect(test.screen121.msg2_size, 0);
  expect(test.screen121.sound1, 0);
  expect(test.screen121.sound2, 0);
  expect(test.screen121.sound3, 0);
  expect(test.screen121.snd_timer, 0);
  expect(test.screen121.timer1, 0);
  expect(test.screen121.timer2, 0);
  expect(test.screen121.timer3, 0);
  expect(test.screen121.dsp_flg1, 0);
  expect(test.screen121.dsp_flg2, 0);
  expect(test.screen121.movie01_ext, 0);
  expect(test.screen121.movie02_ext, 0);
  expect(test.screen121.movie03_ext, 0);
  expect(test.screen121.movie04_ext, 0);
  expect(test.screen121.line_title, "");
  expect(test.screen121.line_title_ex, "");
  expect(test.screen121.line1, "");
  expect(test.screen121.line2, "");
  expect(test.screen121.line3, "");
  expect(test.screen121.line4, "");
  expect(test.screen121.line1_ex, "");
  expect(test.screen121.line2_ex, "");
  expect(test.screen121.line3_ex, "");
  expect(test.screen121.line4_ex, "");
  expect(test.screen121.sound_led1, 0);
  expect(test.screen121.sound_led2, 0);
  expect(test.screen121.sound_led3, 0);
  expect(test.screen122.title, "");
  expect(test.screen122.msg1, "");
  expect(test.screen122.msg2, "");
  expect(test.screen122.msg1_size, 0);
  expect(test.screen122.msg2_size, 0);
  expect(test.screen122.sound1, 0);
  expect(test.screen122.sound2, 0);
  expect(test.screen122.sound3, 0);
  expect(test.screen122.snd_timer, 0);
  expect(test.screen122.timer1, 0);
  expect(test.screen122.timer2, 0);
  expect(test.screen122.timer3, 0);
  expect(test.screen122.dsp_flg1, 0);
  expect(test.screen122.dsp_flg2, 0);
  expect(test.screen122.movie01_ext, 0);
  expect(test.screen122.movie02_ext, 0);
  expect(test.screen122.movie03_ext, 0);
  expect(test.screen122.movie04_ext, 0);
  expect(test.screen122.line_title, "");
  expect(test.screen122.line_title_ex, "");
  expect(test.screen122.line1, "");
  expect(test.screen122.line2, "");
  expect(test.screen122.line3, "");
  expect(test.screen122.line4, "");
  expect(test.screen122.line1_ex, "");
  expect(test.screen122.line2_ex, "");
  expect(test.screen122.line3_ex, "");
  expect(test.screen122.line4_ex, "");
  expect(test.screen122.sound_led1, 0);
  expect(test.screen122.sound_led2, 0);
  expect(test.screen122.sound_led3, 0);
  expect(test.screen123.title, "");
  expect(test.screen123.msg1, "");
  expect(test.screen123.msg2, "");
  expect(test.screen123.msg1_size, 0);
  expect(test.screen123.msg2_size, 0);
  expect(test.screen123.sound1, 0);
  expect(test.screen123.sound2, 0);
  expect(test.screen123.sound3, 0);
  expect(test.screen123.snd_timer, 0);
  expect(test.screen123.timer1, 0);
  expect(test.screen123.timer2, 0);
  expect(test.screen123.timer3, 0);
  expect(test.screen123.dsp_flg1, 0);
  expect(test.screen123.dsp_flg2, 0);
  expect(test.screen123.movie01_ext, 0);
  expect(test.screen123.movie02_ext, 0);
  expect(test.screen123.movie03_ext, 0);
  expect(test.screen123.movie04_ext, 0);
  expect(test.screen123.line_title, "");
  expect(test.screen123.line_title_ex, "");
  expect(test.screen123.line1, "");
  expect(test.screen123.line2, "");
  expect(test.screen123.line3, "");
  expect(test.screen123.line4, "");
  expect(test.screen123.line1_ex, "");
  expect(test.screen123.line2_ex, "");
  expect(test.screen123.line3_ex, "");
  expect(test.screen123.line4_ex, "");
  expect(test.screen123.sound_led1, 0);
  expect(test.screen123.sound_led2, 0);
  expect(test.screen123.sound_led3, 0);
  expect(test.screen124.title, "");
  expect(test.screen124.msg1, "");
  expect(test.screen124.msg2, "");
  expect(test.screen124.msg1_size, 0);
  expect(test.screen124.msg2_size, 0);
  expect(test.screen124.sound1, 0);
  expect(test.screen124.sound2, "");
  expect(test.screen124.sound3, "");
  expect(test.screen124.snd_timer, 0);
  expect(test.screen124.timer1, 0);
  expect(test.screen124.timer2, 0);
  expect(test.screen124.timer3, 0);
  expect(test.screen124.dsp_flg1, 0);
  expect(test.screen124.dsp_flg2, 0);
  expect(test.screen124.movie01_ext, 0);
  expect(test.screen124.movie02_ext, 0);
  expect(test.screen124.movie03_ext, 0);
  expect(test.screen124.movie04_ext, 0);
  expect(test.screen124.line_title, "");
  expect(test.screen124.line_title_ex, "");
  expect(test.screen124.line1, "");
  expect(test.screen124.line2, "");
  expect(test.screen124.line3, "");
  expect(test.screen124.line4, "");
  expect(test.screen124.line1_ex, "");
  expect(test.screen124.line2_ex, "");
  expect(test.screen124.line3_ex, "");
  expect(test.screen124.line4_ex, "");
  expect(test.screen124.sound_led1, 0);
  expect(test.screen124.sound_led2, "");
  expect(test.screen124.sound_led3, "");
  expect(test.screen125.title, "");
  expect(test.screen125.msg1, "");
  expect(test.screen125.msg2, "");
  expect(test.screen125.msg1_size, 0);
  expect(test.screen125.msg2_size, "");
  expect(test.screen125.sound1, 0);
  expect(test.screen125.sound2, 0);
  expect(test.screen125.sound3, 0);
  expect(test.screen125.snd_timer, 0);
  expect(test.screen125.timer1, 0);
  expect(test.screen125.timer2, 0);
  expect(test.screen125.timer3, 0);
  expect(test.screen125.dsp_flg1, 0);
  expect(test.screen125.dsp_flg2, 0);
  expect(test.screen125.movie01_ext, 0);
  expect(test.screen125.movie02_ext, 0);
  expect(test.screen125.movie03_ext, 0);
  expect(test.screen125.movie04_ext, 0);
  expect(test.screen125.line_title, "");
  expect(test.screen125.line_title_ex, "");
  expect(test.screen125.line1, "");
  expect(test.screen125.line2, "");
  expect(test.screen125.line3, "");
  expect(test.screen125.line4, "");
  expect(test.screen125.line1_ex, "");
  expect(test.screen125.line2_ex, "");
  expect(test.screen125.line3_ex, "");
  expect(test.screen125.line4_ex, "");
  expect(test.screen125.sound_led1, 0);
  expect(test.screen125.sound_led2, 0);
  expect(test.screen125.sound_led3, 0);
  expect(test.screen126.title, "");
  expect(test.screen126.msg1, "");
  expect(test.screen126.msg2, "");
  expect(test.screen126.msg1_size, 0);
  expect(test.screen126.msg2_size, "");
  expect(test.screen126.sound1, 0);
  expect(test.screen126.sound2, 0);
  expect(test.screen126.sound3, 0);
  expect(test.screen126.snd_timer, 0);
  expect(test.screen126.timer1, 0);
  expect(test.screen126.timer2, 0);
  expect(test.screen126.timer3, 0);
  expect(test.screen126.dsp_flg1, 0);
  expect(test.screen126.dsp_flg2, 0);
  expect(test.screen126.movie01_ext, 0);
  expect(test.screen126.movie02_ext, 0);
  expect(test.screen126.movie03_ext, 0);
  expect(test.screen126.movie04_ext, 0);
  expect(test.screen126.line_title, "");
  expect(test.screen126.line_title_ex, "");
  expect(test.screen126.line1, "");
  expect(test.screen126.line2, "");
  expect(test.screen126.line3, "");
  expect(test.screen126.line4, "");
  expect(test.screen126.line1_ex, "");
  expect(test.screen126.line2_ex, "");
  expect(test.screen126.line3_ex, "");
  expect(test.screen126.line4_ex, "");
  expect(test.screen126.sound_led1, 0);
  expect(test.screen126.sound_led2, 0);
  expect(test.screen126.sound_led3, 0);
  expect(test.screen127.title, "");
  expect(test.screen127.msg1, "");
  expect(test.screen127.msg2, "");
  expect(test.screen127.msg1_size, 0);
  expect(test.screen127.msg2_size, 0);
  expect(test.screen127.sound1, 0);
  expect(test.screen127.sound2, 0);
  expect(test.screen127.sound3, 0);
  expect(test.screen127.snd_timer, 0);
  expect(test.screen127.timer1, 0);
  expect(test.screen127.timer2, 0);
  expect(test.screen127.timer3, 0);
  expect(test.screen127.dsp_flg1, 0);
  expect(test.screen127.dsp_flg2, 0);
  expect(test.screen127.movie01_ext, 0);
  expect(test.screen127.movie02_ext, 0);
  expect(test.screen127.movie03_ext, 0);
  expect(test.screen127.movie04_ext, 0);
  expect(test.screen127.line_title, "");
  expect(test.screen127.line_title_ex, "");
  expect(test.screen127.line1, "");
  expect(test.screen127.line2, "");
  expect(test.screen127.line3, "");
  expect(test.screen127.line4, "");
  expect(test.screen127.line1_ex, "");
  expect(test.screen127.line2_ex, "");
  expect(test.screen127.line3_ex, "");
  expect(test.screen127.line4_ex, "");
  expect(test.screen127.sound_led1, 0);
  expect(test.screen127.sound_led2, 0);
  expect(test.screen127.sound_led3, 0);
  expect(test.screen128.title, "");
  expect(test.screen128.msg1, "");
  expect(test.screen128.msg2, "");
  expect(test.screen128.msg1_size, 0);
  expect(test.screen128.msg2_size, 0);
  expect(test.screen128.sound1, 0);
  expect(test.screen128.sound2, 0);
  expect(test.screen128.sound3, 0);
  expect(test.screen128.snd_timer, 0);
  expect(test.screen128.timer1, 0);
  expect(test.screen128.timer2, 0);
  expect(test.screen128.timer3, 0);
  expect(test.screen128.dsp_flg1, 0);
  expect(test.screen128.dsp_flg2, 0);
  expect(test.screen128.movie01_ext, 0);
  expect(test.screen128.movie02_ext, 0);
  expect(test.screen128.movie03_ext, 0);
  expect(test.screen128.movie04_ext, 0);
  expect(test.screen128.line_title, "");
  expect(test.screen128.line_title_ex, "");
  expect(test.screen128.line1, "");
  expect(test.screen128.line2, "");
  expect(test.screen128.line3, "");
  expect(test.screen128.line4, "");
  expect(test.screen128.line1_ex, "");
  expect(test.screen128.line2_ex, "");
  expect(test.screen128.line3_ex, "");
  expect(test.screen128.line4_ex, "");
  expect(test.screen128.sound_led1, 0);
  expect(test.screen128.sound_led2, 0);
  expect(test.screen128.sound_led3, 0);
  expect(test.screen129.title, "");
  expect(test.screen129.msg1, "");
  expect(test.screen129.msg2, "");
  expect(test.screen129.msg1_size, 0);
  expect(test.screen129.msg2_size, 0);
  expect(test.screen129.sound1, 0);
  expect(test.screen129.sound2, 0);
  expect(test.screen129.sound3, 0);
  expect(test.screen129.snd_timer, 0);
  expect(test.screen129.timer1, 0);
  expect(test.screen129.timer2, 0);
  expect(test.screen129.timer3, 0);
  expect(test.screen129.dsp_flg1, 0);
  expect(test.screen129.dsp_flg2, 0);
  expect(test.screen129.movie01_ext, 0);
  expect(test.screen129.movie02_ext, 0);
  expect(test.screen129.movie03_ext, 0);
  expect(test.screen129.movie04_ext, 0);
  expect(test.screen129.line_title, "");
  expect(test.screen129.line_title_ex, "");
  expect(test.screen129.line1, "");
  expect(test.screen129.line2, "");
  expect(test.screen129.line3, "");
  expect(test.screen129.line4, "");
  expect(test.screen129.line1_ex, "");
  expect(test.screen129.line2_ex, "");
  expect(test.screen129.line3_ex, "");
  expect(test.screen129.line4_ex, "");
  expect(test.screen129.sound_led1, 0);
  expect(test.screen129.sound_led2, 0);
  expect(test.screen129.sound_led3, 0);
  expect(test.screen130.title, "");
  expect(test.screen130.msg1, "");
  expect(test.screen130.msg2, "");
  expect(test.screen130.msg1_size, 0);
  expect(test.screen130.msg2_size, 0);
  expect(test.screen130.sound1, 0);
  expect(test.screen130.sound2, "");
  expect(test.screen130.sound3, "");
  expect(test.screen130.snd_timer, 0);
  expect(test.screen130.timer1, 0);
  expect(test.screen130.timer2, 0);
  expect(test.screen130.timer3, 0);
  expect(test.screen130.dsp_flg1, 0);
  expect(test.screen130.dsp_flg2, 0);
  expect(test.screen130.movie01_ext, 0);
  expect(test.screen130.movie02_ext, 0);
  expect(test.screen130.movie03_ext, 0);
  expect(test.screen130.movie04_ext, 0);
  expect(test.screen130.line_title, "");
  expect(test.screen130.line_title_ex, "");
  expect(test.screen130.line1, "");
  expect(test.screen130.line2, "");
  expect(test.screen130.line3, "");
  expect(test.screen130.line4, "");
  expect(test.screen130.line1_ex, "");
  expect(test.screen130.line2_ex, "");
  expect(test.screen130.line3_ex, "");
  expect(test.screen130.line4_ex, "");
  expect(test.screen130.sound_led1, 0);
  expect(test.screen130.sound_led2, "");
  expect(test.screen130.sound_led3, "");
  expect(test.screen131.title, "");
  expect(test.screen131.msg1, "");
  expect(test.screen131.msg2, "");
  expect(test.screen131.msg1_size, 0);
  expect(test.screen131.msg2_size, 0);
  expect(test.screen131.sound1, 0);
  expect(test.screen131.sound2, 0);
  expect(test.screen131.sound3, 0);
  expect(test.screen131.snd_timer, 0);
  expect(test.screen131.timer1, 0);
  expect(test.screen131.timer2, 0);
  expect(test.screen131.timer3, 0);
  expect(test.screen131.dsp_flg1, 0);
  expect(test.screen131.dsp_flg2, 0);
  expect(test.screen131.movie01_ext, 0);
  expect(test.screen131.movie02_ext, 0);
  expect(test.screen131.movie03_ext, 0);
  expect(test.screen131.movie04_ext, 0);
  expect(test.screen131.line_title, "");
  expect(test.screen131.line_title_ex, "");
  expect(test.screen131.line1, "");
  expect(test.screen131.line2, "");
  expect(test.screen131.line3, "");
  expect(test.screen131.line4, "");
  expect(test.screen131.line1_ex, "");
  expect(test.screen131.line2_ex, "");
  expect(test.screen131.line3_ex, "");
  expect(test.screen131.line4_ex, "");
  expect(test.screen131.sound_led1, 0);
  expect(test.screen131.sound_led2, 0);
  expect(test.screen131.sound_led3, 0);
  expect(test.screen132.title, "");
  expect(test.screen132.msg1, "");
  expect(test.screen132.msg2, "");
  expect(test.screen132.msg1_size, 0);
  expect(test.screen132.msg2_size, "");
  expect(test.screen132.sound1, 0);
  expect(test.screen132.sound2, 0);
  expect(test.screen132.sound3, 0);
  expect(test.screen132.snd_timer, 0);
  expect(test.screen132.timer1, 0);
  expect(test.screen132.timer2, 0);
  expect(test.screen132.timer3, 0);
  expect(test.screen132.dsp_flg1, 0);
  expect(test.screen132.dsp_flg2, 0);
  expect(test.screen132.movie01_ext, 0);
  expect(test.screen132.movie02_ext, 0);
  expect(test.screen132.movie03_ext, 0);
  expect(test.screen132.movie04_ext, 0);
  expect(test.screen132.line_title, "");
  expect(test.screen132.line_title_ex, "");
  expect(test.screen132.line1, "");
  expect(test.screen132.line2, "");
  expect(test.screen132.line3, "");
  expect(test.screen132.line4, "");
  expect(test.screen132.line1_ex, "");
  expect(test.screen132.line2_ex, "");
  expect(test.screen132.line3_ex, "");
  expect(test.screen132.line4_ex, "");
  expect(test.screen132.sound_led1, 0);
  expect(test.screen132.sound_led2, 0);
  expect(test.screen132.sound_led3, 0);
  expect(test.screen133.title, "");
  expect(test.screen133.msg1, "");
  expect(test.screen133.msg2, "");
  expect(test.screen133.msg1_size, 0);
  expect(test.screen133.msg2_size, 0);
  expect(test.screen133.sound1, 0);
  expect(test.screen133.sound2, 0);
  expect(test.screen133.sound3, 0);
  expect(test.screen133.snd_timer, 0);
  expect(test.screen133.timer1, 0);
  expect(test.screen133.timer2, 0);
  expect(test.screen133.timer3, 0);
  expect(test.screen133.dsp_flg1, 0);
  expect(test.screen133.dsp_flg2, 0);
  expect(test.screen133.movie01_ext, 0);
  expect(test.screen133.movie02_ext, 0);
  expect(test.screen133.movie03_ext, 0);
  expect(test.screen133.movie04_ext, 0);
  expect(test.screen133.line_title, "");
  expect(test.screen133.line_title_ex, "");
  expect(test.screen133.line1, "");
  expect(test.screen133.line2, "");
  expect(test.screen133.line3, "");
  expect(test.screen133.line4, "");
  expect(test.screen133.line1_ex, "");
  expect(test.screen133.line2_ex, "");
  expect(test.screen133.line3_ex, "");
  expect(test.screen133.line4_ex, "");
  expect(test.screen133.sound_led1, 0);
  expect(test.screen133.sound_led2, 0);
  expect(test.screen133.sound_led3, 0);
  expect(test.screen134.title, "");
  expect(test.screen134.msg1, "");
  expect(test.screen134.msg2, "");
  expect(test.screen134.msg1_size, 0);
  expect(test.screen134.msg2_size, "");
  expect(test.screen134.sound1, 0);
  expect(test.screen134.sound2, 0);
  expect(test.screen134.sound3, 0);
  expect(test.screen134.snd_timer, 0);
  expect(test.screen134.timer1, 0);
  expect(test.screen134.timer2, 0);
  expect(test.screen134.timer3, 0);
  expect(test.screen134.dsp_flg1, 0);
  expect(test.screen134.dsp_flg2, 0);
  expect(test.screen134.movie01_ext, 0);
  expect(test.screen134.movie02_ext, 0);
  expect(test.screen134.movie03_ext, 0);
  expect(test.screen134.movie04_ext, 0);
  expect(test.screen134.line_title, "");
  expect(test.screen134.line_title_ex, "");
  expect(test.screen134.line1, "");
  expect(test.screen134.line2, "");
  expect(test.screen134.line3, "");
  expect(test.screen134.line4, "");
  expect(test.screen134.line1_ex, "");
  expect(test.screen134.line2_ex, "");
  expect(test.screen134.line3_ex, "");
  expect(test.screen134.line4_ex, "");
  expect(test.screen134.sound_led1, 0);
  expect(test.screen134.sound_led2, 0);
  expect(test.screen134.sound_led3, 0);
  expect(test.screen135.title, "");
  expect(test.screen135.msg1, "");
  expect(test.screen135.msg2, "");
  expect(test.screen135.msg1_size, 0);
  expect(test.screen135.msg2_size, 0);
  expect(test.screen135.sound1, 0);
  expect(test.screen135.sound2, 0);
  expect(test.screen135.sound3, 0);
  expect(test.screen135.snd_timer, 0);
  expect(test.screen135.timer1, 0);
  expect(test.screen135.timer2, 0);
  expect(test.screen135.timer3, 0);
  expect(test.screen135.dsp_flg1, 0);
  expect(test.screen135.dsp_flg2, 0);
  expect(test.screen135.movie01_ext, 0);
  expect(test.screen135.movie02_ext, 0);
  expect(test.screen135.movie03_ext, 0);
  expect(test.screen135.movie04_ext, 0);
  expect(test.screen135.line_title, "");
  expect(test.screen135.line_title_ex, "");
  expect(test.screen135.line1, "");
  expect(test.screen135.line2, "");
  expect(test.screen135.line3, "");
  expect(test.screen135.line4, "");
  expect(test.screen135.line1_ex, "");
  expect(test.screen135.line2_ex, "");
  expect(test.screen135.line3_ex, "");
  expect(test.screen135.line4_ex, "");
  expect(test.screen135.sound_led1, 0);
  expect(test.screen135.sound_led2, 0);
  expect(test.screen135.sound_led3, 0);
  expect(test.screen136.title, "");
  expect(test.screen136.msg1, "");
  expect(test.screen136.msg2, "");
  expect(test.screen136.msg1_size, 0);
  expect(test.screen136.msg2_size, 0);
  expect(test.screen136.sound1, 0);
  expect(test.screen136.sound2, 0);
  expect(test.screen136.sound3, 0);
  expect(test.screen136.snd_timer, 0);
  expect(test.screen136.timer1, 0);
  expect(test.screen136.timer2, 0);
  expect(test.screen136.timer3, 0);
  expect(test.screen136.dsp_flg1, 0);
  expect(test.screen136.dsp_flg2, 0);
  expect(test.screen136.movie01_ext, 0);
  expect(test.screen136.movie02_ext, 0);
  expect(test.screen136.movie03_ext, 0);
  expect(test.screen136.movie04_ext, 0);
  expect(test.screen136.line_title, "");
  expect(test.screen136.line_title_ex, "");
  expect(test.screen136.line1, "");
  expect(test.screen136.line2, "");
  expect(test.screen136.line3, "");
  expect(test.screen136.line4, "");
  expect(test.screen136.line1_ex, "");
  expect(test.screen136.line2_ex, "");
  expect(test.screen136.line3_ex, "");
  expect(test.screen136.line4_ex, "");
  expect(test.screen136.sound_led1, 0);
  expect(test.screen136.sound_led2, 0);
  expect(test.screen136.sound_led3, 0);
  expect(test.screen137.title, "");
  expect(test.screen137.msg1, "");
  expect(test.screen137.msg2, "");
  expect(test.screen137.msg1_size, 0);
  expect(test.screen137.msg2_size, 0);
  expect(test.screen137.sound1, 0);
  expect(test.screen137.sound2, 0);
  expect(test.screen137.sound3, 0);
  expect(test.screen137.snd_timer, 0);
  expect(test.screen137.timer1, 0);
  expect(test.screen137.timer2, 0);
  expect(test.screen137.timer3, 0);
  expect(test.screen137.dsp_flg1, 0);
  expect(test.screen137.dsp_flg2, 0);
  expect(test.screen137.movie01_ext, 0);
  expect(test.screen137.movie02_ext, 0);
  expect(test.screen137.movie03_ext, 0);
  expect(test.screen137.movie04_ext, 0);
  expect(test.screen137.line_title, "");
  expect(test.screen137.line_title_ex, "");
  expect(test.screen137.line1, "");
  expect(test.screen137.line2, "");
  expect(test.screen137.line3, "");
  expect(test.screen137.line4, "");
  expect(test.screen137.line1_ex, "");
  expect(test.screen137.line2_ex, "");
  expect(test.screen137.line3_ex, "");
  expect(test.screen137.line4_ex, "");
  expect(test.screen137.sound_led1, 0);
  expect(test.screen137.sound_led2, 0);
  expect(test.screen137.sound_led3, 0);
  expect(test.screen138.title, "");
  expect(test.screen138.msg1, "");
  expect(test.screen138.msg2, "");
  expect(test.screen138.msg1_size, 0);
  expect(test.screen138.msg2_size, 0);
  expect(test.screen138.sound1, 0);
  expect(test.screen138.sound2, 0);
  expect(test.screen138.sound3, 0);
  expect(test.screen138.snd_timer, 0);
  expect(test.screen138.timer1, 0);
  expect(test.screen138.timer2, 0);
  expect(test.screen138.timer3, 0);
  expect(test.screen138.dsp_flg1, 0);
  expect(test.screen138.dsp_flg2, 0);
  expect(test.screen138.movie01_ext, 0);
  expect(test.screen138.movie02_ext, 0);
  expect(test.screen138.movie03_ext, 0);
  expect(test.screen138.movie04_ext, 0);
  expect(test.screen138.line_title, "");
  expect(test.screen138.line_title_ex, "");
  expect(test.screen138.line1, "");
  expect(test.screen138.line2, "");
  expect(test.screen138.line3, "");
  expect(test.screen138.line4, "");
  expect(test.screen138.line1_ex, "");
  expect(test.screen138.line2_ex, "");
  expect(test.screen138.line3_ex, "");
  expect(test.screen138.line4_ex, "");
  expect(test.screen138.sound_led1, 0);
  expect(test.screen138.sound_led2, 0);
  expect(test.screen138.sound_led3, 0);
  expect(test.screen139.title, "");
  expect(test.screen139.msg1, "");
  expect(test.screen139.msg2, "");
  expect(test.screen139.msg1_size, 0);
  expect(test.screen139.msg2_size, 0);
  expect(test.screen139.sound1, 0);
  expect(test.screen139.sound2, 0);
  expect(test.screen139.sound3, 0);
  expect(test.screen139.snd_timer, 0);
  expect(test.screen139.timer1, 0);
  expect(test.screen139.timer2, 0);
  expect(test.screen139.timer3, 0);
  expect(test.screen139.dsp_flg1, 0);
  expect(test.screen139.dsp_flg2, 0);
  expect(test.screen139.movie01_ext, 0);
  expect(test.screen139.movie02_ext, 0);
  expect(test.screen139.movie03_ext, 0);
  expect(test.screen139.movie04_ext, 0);
  expect(test.screen139.line_title, "");
  expect(test.screen139.line_title_ex, "");
  expect(test.screen139.line1, "");
  expect(test.screen139.line2, "");
  expect(test.screen139.line3, "");
  expect(test.screen139.line4, "");
  expect(test.screen139.line1_ex, "");
  expect(test.screen139.line2_ex, "");
  expect(test.screen139.line3_ex, "");
  expect(test.screen139.line4_ex, "");
  expect(test.screen139.sound_led1, 0);
  expect(test.screen139.sound_led2, 0);
  expect(test.screen139.sound_led3, 0);
  expect(test.screen140.title, "");
  expect(test.screen140.msg1, "");
  expect(test.screen140.msg2, "");
  expect(test.screen140.msg1_size, 0);
  expect(test.screen140.msg2_size, 0);
  expect(test.screen140.sound1, 0);
  expect(test.screen140.sound2, 0);
  expect(test.screen140.sound3, 0);
  expect(test.screen140.snd_timer, 0);
  expect(test.screen140.timer1, 0);
  expect(test.screen140.timer2, 0);
  expect(test.screen140.timer3, 0);
  expect(test.screen140.dsp_flg1, 0);
  expect(test.screen140.dsp_flg2, 0);
  expect(test.screen140.movie01_ext, 0);
  expect(test.screen140.movie02_ext, 0);
  expect(test.screen140.movie03_ext, 0);
  expect(test.screen140.movie04_ext, 0);
  expect(test.screen140.line_title, "");
  expect(test.screen140.line_title_ex, "");
  expect(test.screen140.line1, "");
  expect(test.screen140.line2, "");
  expect(test.screen140.line3, "");
  expect(test.screen140.line4, "");
  expect(test.screen140.line1_ex, "");
  expect(test.screen140.line2_ex, "");
  expect(test.screen140.line3_ex, "");
  expect(test.screen140.line4_ex, "");
  expect(test.screen140.sound_led1, 0);
  expect(test.screen140.sound_led2, 0);
  expect(test.screen140.sound_led3, 0);
  expect(test.screen141.title, "");
  expect(test.screen141.msg1, "");
  expect(test.screen141.msg2, "");
  expect(test.screen141.msg1_size, 0);
  expect(test.screen141.msg2_size, 0);
  expect(test.screen141.sound1, 0);
  expect(test.screen141.sound2, 0);
  expect(test.screen141.sound3, 0);
  expect(test.screen141.snd_timer, 0);
  expect(test.screen141.timer1, 0);
  expect(test.screen141.timer2, 0);
  expect(test.screen141.timer3, 0);
  expect(test.screen141.dsp_flg1, 0);
  expect(test.screen141.dsp_flg2, 0);
  expect(test.screen141.movie01_ext, 0);
  expect(test.screen141.movie02_ext, 0);
  expect(test.screen141.movie03_ext, 0);
  expect(test.screen141.movie04_ext, 0);
  expect(test.screen141.line_title, "");
  expect(test.screen141.line_title_ex, "");
  expect(test.screen141.line1, "");
  expect(test.screen141.line2, "");
  expect(test.screen141.line3, "");
  expect(test.screen141.line4, "");
  expect(test.screen141.line1_ex, "");
  expect(test.screen141.line2_ex, "");
  expect(test.screen141.line3_ex, "");
  expect(test.screen141.line4_ex, "");
  expect(test.screen141.sound_led1, 0);
  expect(test.screen141.sound_led2, 0);
  expect(test.screen141.sound_led3, 0);
  expect(test.screen144.title, "");
  expect(test.screen144.msg1, "");
  expect(test.screen144.msg2, "");
  expect(test.screen144.msg1_size, 0);
  expect(test.screen144.msg2_size, 0);
  expect(test.screen144.sound1, 0);
  expect(test.screen144.sound2, 0);
  expect(test.screen144.sound3, 0);
  expect(test.screen144.snd_timer, 0);
  expect(test.screen144.timer1, 0);
  expect(test.screen144.timer2, 0);
  expect(test.screen144.timer3, 0);
  expect(test.screen144.dsp_flg1, 0);
  expect(test.screen144.dsp_flg2, 0);
  expect(test.screen144.movie01_ext, 0);
  expect(test.screen144.movie02_ext, 0);
  expect(test.screen144.movie03_ext, 0);
  expect(test.screen144.movie04_ext, 0);
  expect(test.screen144.line_title, "");
  expect(test.screen144.line_title_ex, "");
  expect(test.screen144.line1, "");
  expect(test.screen144.line2, "");
  expect(test.screen144.line3, "");
  expect(test.screen144.line4, "");
  expect(test.screen144.line1_ex, "");
  expect(test.screen144.line2_ex, "");
  expect(test.screen144.line3_ex, "");
  expect(test.screen144.line4_ex, "");
  expect(test.screen144.sound_led1, 0);
  expect(test.screen144.sound_led2, 0);
  expect(test.screen144.sound_led3, 0);
  expect(test.ActSetUp.ReadAlertTime, 0);
  expect(test.ActSetUp.AutoReadInterval, 0);
  expect(test.ActSetUp.InterruptPrint, 0);
  expect(test.ActSetUp.InterruptPay, 0);
  expect(test.ActSetUp.UpdGetFtpTimer, 0);
  expect(test.HiddenSetUp.TableReadInterval, 0);
  expect(test.customer.cust_card_max, 0);
  expect(test.customer.cust_card_type1, 0);
  expect(test.customer.cust_card_type2, 0);
  expect(test.customer.cust_card_type3, 0);
  expect(test.customer.cust_card_type4, 0);
  expect(test.customer.cust_card_type5, 0);
  expect(test.customer.cust_card_type6, 0);
  expect(test.ShopAndGo.shop_and_go_nonfile_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_nonscan_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_limit1, 0);
  expect(test.ShopAndGo.shop_and_go_limit2, 0);
  expect(test.ShopAndGo.shop_and_go_limit3, 0);
  expect(test.ShopAndGo.shop_and_go_test_srv_flg, 0);
  expect(test.ShopAndGo.shop_and_go_companycode, 0);
  expect(test.ShopAndGo.shop_and_go_storecode, 0);
  expect(test.ShopAndGo.shop_and_go_mbr_chk_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_server_timeout, 0);
  expect(test.ShopAndGo.shop_and_go_proxy, "");
  expect(test.ShopAndGo.shop_and_go_proxy_port, 0);
  expect(test.ShopAndGo.shop_and_go_n_money_btn_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_domain, "");
  expect(test.ShopAndGo.shop_and_go_mbr_card_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cr50_domain, "");
  expect(test.ShopAndGo.shop_and_go_point_domain, "");
  expect(test.ShopAndGo.shop_and_go_cr50_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_eatin_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cogca_read_twice, 0);
  expect(test.ShopAndGo.shop_and_go_use_class, 0);
  expect(test.ShopAndGo.shop_and_go_expensive_mark_prn, 0);
  expect(test.ShopAndGo.shop_and_go_regbag_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_use_preset_grp_code, 0);
  expect(test.ShopAndGo.shop_and_go_mente_nonplu_btn_reference, 0);
  expect(test.ShopAndGo.shop_and_go_mbr_auto_cncl_time, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_msg_use_no, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print_normal, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss, 0);
  expect(test.ShopAndGo.shop_and_go_thread_timeout, 0);
  expect(test.PaymentGroup.pay_grp_name1, "");
  expect(test.PaymentGroup.pay_grp_name2, "");
  expect(test.PaymentGroup.pay_grp_name3, "");
  expect(test.PaymentGroup.pay_grp_name4, "");
  expect(test.PaymentGroup.pay_grp_name5, "");
  expect(test.PaymentGroup.pay_grp_name6, "");
  expect(test.PaymentGroup.pay_grp_name7, "");
  expect(test.PaymentGroup.pay_grp_name8, "");
  expect(test.PaymentGroup.pay_grp_name9, "");
  expect(test.PaymentGroup.pay_typ1_grp, 0);
  expect(test.PaymentGroup.pay_typ2_grp, 0);
  expect(test.PaymentGroup.pay_typ3_grp, 0);
  expect(test.PaymentGroup.pay_typ4_grp, 0);
  expect(test.PaymentGroup.pay_typ5_grp, 0);
  expect(test.PaymentGroup.pay_typ6_grp, 0);
  expect(test.PaymentGroup.pay_typ7_grp, 0);
  expect(test.PaymentGroup.pay_typ8_grp, 0);
  expect(test.PaymentGroup.pay_typ9_grp, 0);
  expect(test.PaymentGroup.pay_typ10_grp, 0);
  expect(test.PaymentGroup.pay_typ11_grp, 0);
  expect(test.PaymentGroup.pay_typ12_grp, 0);
  expect(test.PaymentGroup.pay_typ13_grp, 0);
  expect(test.PaymentGroup.pay_typ14_grp, 0);
  expect(test.PaymentGroup.pay_typ15_grp, 0);
  expect(test.PaymentGroup.pay_typ16_grp, 0);
  expect(test.PaymentGroup.pay_grp_name1_ex, "");
  expect(test.PaymentGroup.pay_grp_name2_ex, "");
  expect(test.PaymentGroup.pay_grp_name3_ex, "");
  expect(test.PaymentGroup.pay_grp_name4_ex, "");
  expect(test.PaymentGroup.pay_grp_name5_ex, "");
  expect(test.PaymentGroup.pay_grp_name6_ex, "");
  expect(test.PaymentGroup.pay_grp_name7_ex, "");
  expect(test.PaymentGroup.pay_grp_name8_ex, "");
  expect(test.PaymentGroup.pay_grp_name9_ex, "");
}

void allPropatyCheck(QcashierJsonFile test, bool firstItemCheck)
{
  if(firstItemCheck == true) {
    expect(test.common.item_disp, 1);
  }
  expect(test.common.logo_typ, 0);
  expect(test.common.disp_typ, 1);
  expect(test.common.spdsp_use, 1);
  expect(test.common.fix_max, 10);
  expect(test.common.fix_typ, 1);
  expect(test.common.ptn_max, 6);
  expect(test.common.ptn_typ, 1);
  expect(test.common.spe_typ, 1);
  expect(test.common.chara_typ, 0);
  expect(test.common.language_typ, 0);
  expect(test.common.page_max, 145);
  expect(test.common.typ_max, 1);
  expect(test.common.pay_typ1, 0);
  expect(test.common.pay_typ2, 1);
  expect(test.common.pay_typ3, 0);
  expect(test.common.pay_typ4, 0);
  expect(test.common.pay_typ5, 0);
  expect(test.common.pay_typ6, 0);
  expect(test.common.pay_typ7, 0);
  expect(test.common.pay_typ8, 0);
  expect(test.common.demo_disp_btn, 0);
  expect(test.common.rcpt_limit_time, 10);
  expect(test.common.next_rcpt_limit, 60);
  expect(test.common.auto_susdsp, 0);
  expect(test.common.susdsp_time, 2200);
  expect(test.common.rfm_receipt, 1);
  expect(test.common.signp_typ, 0);
  expect(test.common.select_typ, 0);
  expect(test.common.select_str_msg, 0);
  expect(test.common.regbag1_plucd, 0);
  expect(test.common.regbag2_plucd, 0);
  expect(test.common.regbag3_plucd, 0);
  expect(test.common.autocash_operation, 0);
  expect(test.common.autocash_equaltime, 10);
  expect(test.common.autocash_overtime, 0);
  expect(test.common.fip_disp, 0);
  expect(test.common.crdtcard_gettimer, 0);
  expect(test.common.charge_plucd1, 0);
  expect(test.common.charge_plucd2, 0);
  expect(test.common.charge_plucd3, 0);
  expect(test.common.charge_plucd4, 0);
  expect(test.common.charge_plucd5, 0);
  expect(test.common.charge_plucd6, 0);
  expect(test.common.crdtcard_warntime, 6);
  expect(test.common.acx_recalc_btn, 0);
  expect(test.common.lang_chg_max, 0);
  expect(test.common.lang_select1, 0);
  expect(test.common.lang_select2, 0);
  expect(test.common.lang_select3, 0);
  expect(test.common.lang_select4, 0);
  expect(test.common.lang_select5, 0);
  expect(test.common.lang_select6, 0);
  expect(test.common.lang_select7, 0);
  expect(test.common.lang_select8, 0);
  expect(test.common.autocrdt_operation, 0);
  expect(test.common.autocrdt_time, 10);
  expect(test.common.preca_charge_only, 0);
  expect(test.common.preca_charge_plucd1, 0);
  expect(test.common.preca_charge_plucd2, 0);
  expect(test.common.preca_charge_plucd3, 0);
  expect(test.common.preca_charge_plucd4, 0);
  expect(test.common.preca_charge_plucd5, 0);
  expect(test.common.preca_charge_plucd6, 0);
  expect(test.common.select_dsp_ccin, 0);
  expect(test.common.cancel_btn_dsp, 0);
  expect(test.common.clinic_mode, 0);
  expect(test.common.clinic_receipt, 1);
  expect(test.common.clinic_greeting, 1);
  expect(test.common.clinic_greeting_sound, 1);
  expect(test.common.fin_btn_chg, 0);
  expect(test.common.startdsp_btn_single, 1);
  expect(test.common.startdsp_scan_enable, 0);
  expect(test.common.pay_typ9, 0);
  expect(test.common.pay_typ10, 0);
  expect(test.common.pay_typ11, 0);
  expect(test.common.pay_typ12, 0);
  expect(test.common.pay_typ13, 0);
  expect(test.common.pay_typ14, 0);
  expect(test.common.pay_typ15, 0);
  expect(test.common.pay_typ16, 0);
  expect(test.common.verifone_nfc_crdt, 0);
  expect(test.common.hs_dualdisp_chk, 1);
  expect(test.common.back_btn_dsp, 1);
  expect(test.common.NoOperationWarning, 0);
  expect(test.common.NoOperationSignpaul_time, 0);
  expect(test.common.NoOperationVoicesound_time, 0);
  expect(test.common.NoOperationSound, 0);
  expect(test.common.NoOperationPayWarning, 0);
  expect(test.common.cin_dsp_wait, 0);
  expect(test.common.clinic_auto_stl, 0);
  expect(test.common.acracb_stlmode, 1);
  expect(test.common.apbf_regbag_plucd, 0);
  expect(test.common.apbf_dlgdisp_time, 30);
  expect(test.common.mybag_plu_point_add, 0);
  expect(test.common.video_jpqr_scanner, 0);
  expect(test.common.chg_warn_timer_use, 0);
  expect(test.common.cin_cnl_btn_show, 0);
  expect(test.common.regs_use_class, 0);
  expect(test.common.sg_eatin_chk, 0);
  expect(test.common.selfmode1_auto_cancel, 0);
  expect(test.common.point_use_unit, 1);
  expect(test.common.selfmode1_wav_qty, 0);
  expect(test.common.age_chk_notice, 0);
  expect(test.common.verifone_nfc_repika_crdt, 0);
  expect(test.common.regbag1_default, 0);
  expect(test.common.regbag2_default, 0);
  expect(test.common.regbag3_default, 0);
  expect(test.common.regbag_timing, 0);
  expect(test.common.regbag_disp_back_btn, 1);
  expect(test.common.self_disp_preca_ref, 0);
  expect(test.common.fs_cashless_dsp_change, 0);
  expect(test.common.hs_fs_scanning_guide, 0);
  expect(test.common.hs_fs_twice_read_stop, 0);
  expect(test.common.cashin_sound, 0);
  expect(test.common.sound_change_flg, 0);
  expect(test.common.hs_fs_auto_preset_dsp, 0);
  expect(test.common.cashless_dsp_return, 0);
  expect(test.common.regbag_screen_scan_input, 0);
  expect(test.common.g3_pay_btn_blink, 0);
  expect(test.common.g3_employee_call_btn, 1);
  expect(test.common.g3_pay_slct_btn_ptn, 0);
  expect(test.common.video_jpqr_sidescanner, 0);
  expect(test.common.mente_itemlist_type, 0);
  expect(test.common.rg_self_noteplu_perm, 0);
  expect(test.common.g3_self_itemlist_scrvoid, 0);
  expect(test.common.g3_fs_presetgroup_custom, 0);
  expect(test.common.g3_fs_presetgroup_btn1, 0);
  expect(test.common.g3_fs_presetgroup_btn2, 0);
  expect(test.common.g3_fs_presetgroup_btn3, 0);
  expect(test.common.g3_fs_presetgroup_btn4, 0);
  expect(test.common.g3_fs_presetgroup_btn5, 0);
  expect(test.common.g3_fs_presetgroup_btn6, 0);
  expect(test.common.g3_fs_presetgroup_btn7, 0);
  expect(test.common.g3_fs_presetgroup_btn8, 0);
  expect(test.common.callBuzzer_sound_change_flg, 0);
  expect(test.common.top_map_display, 0);
  expect(test.common.start_payselect_display, 0);
  expect(test.common.idle_signp_state, 0);
  expect(test.common.jpqr_paybtn_image, 0);
  expect(test.common.vega_credit_forget_chk, 0);
  expect(test.common.cash_only_setting, 0);
  expect(test.common.cash_only_border, 0);
  expect(test.chg_info.chg_info, 1);
  expect(test.chg_info.chg_5000, 0);
  expect(test.chg_info.chg_2000, 0);
  expect(test.chg_info.chg_1000, 9);
  expect(test.chg_info.chg_500, 0);
  expect(test.chg_info.chg_100, 9);
  expect(test.chg_info.chg_50, 0);
  expect(test.chg_info.chg_10, 9);
  expect(test.chg_info.chg_5, 0);
  expect(test.chg_info.chg_1, 9);
  expect(test.chg_info.chg_info_full_chk, 30);
  expect(test.chg_info.chg_signp_full_chk, 10);
  expect(test.period.spr_str, 301);
  expect(test.period.spr_end, 531);
  expect(test.period.sum_str, 601);
  expect(test.period.sum_end, 831);
  expect(test.period.aut_str, 901);
  expect(test.period.aut_end, 1130);
  expect(test.period.win1_str, 1201);
  expect(test.period.win1_end, 1231);
  expect(test.period.win2_str, 101);
  expect(test.period.win2_end, 229);
  expect(test.period.sp1_flg, 1);
  expect(test.period.sp2_flg, 0);
  expect(test.period.sp3_flg, 1);
  expect(test.period.sp4_flg, 1);
  expect(test.period.sp5_flg, 0);
  expect(test.period.sp6_flg, 1);
  expect(test.period.sp7_flg, 1);
  expect(test.period.sp8_flg, 0);
  expect(test.period.sp9_flg, 0);
  expect(test.period.sp10_flg, 1);
  expect(test.period.sp11_flg, 0);
  expect(test.period.sp12_flg, 1);
  expect(test.period.sp13_flg, 0);
  expect(test.period.sp14_flg, 1);
  expect(test.period.sp15_flg, 0);
  expect(test.period.sp16_flg, 1);
  expect(test.period.sp17_flg, 1);
  expect(test.period.sp18_flg, 0);
  expect(test.period.sp1_str, 101);
  expect(test.period.sp1_end, 107);
  expect(test.period.sp2_str, "");
  expect(test.period.sp2_end, "");
  expect(test.period.sp3_str, 201);
  expect(test.period.sp3_end, 214);
  expect(test.period.sp4_str, 215);
  expect(test.period.sp4_end, 303);
  expect(test.period.sp5_str, "");
  expect(test.period.sp5_end, "");
  expect(test.period.sp6_str, 325);
  expect(test.period.sp6_end, 410);
  expect(test.period.sp7_str, 425);
  expect(test.period.sp7_end, 505);
  expect(test.period.sp8_str, "");
  expect(test.period.sp8_end, "");
  expect(test.period.sp9_str, "");
  expect(test.period.sp9_end, "");
  expect(test.period.sp10_str, 627);
  expect(test.period.sp10_end, 707);
  expect(test.period.sp11_str, "");
  expect(test.period.sp11_end, "");
  expect(test.period.sp12_str, 825);
  expect(test.period.sp12_end, 920);
  expect(test.period.sp13_str, "");
  expect(test.period.sp13_end, "");
  expect(test.period.sp14_str, 1015);
  expect(test.period.sp14_end, 1030);
  expect(test.period.sp15_str, "");
  expect(test.period.sp15_end, "");
  expect(test.period.sp16_str, 1201);
  expect(test.period.sp16_end, 1225);
  expect(test.period.sp17_str, 1226);
  expect(test.period.sp17_end, 1231);
  expect(test.period.sp18_str, "");
  expect(test.period.sp18_end, "");
  expect(test.period.spr_time1, 600);
  expect(test.period.spr_time2, 1700);
  expect(test.period.sum_time1, 600);
  expect(test.period.sum_time2, 1800);
  expect(test.period.aut_time1, 600);
  expect(test.period.aut_time2, 1700);
  expect(test.period.win_time1, 600);
  expect(test.period.win_time2, 1700);
  expect(test.screen0.title, "スタート画面");
  expect(test.screen0.msg1, "お会計券を読ませるとスタートします");
  expect(test.screen0.msg2, "");
  expect(test.screen0.msg1_size, 0);
  expect(test.screen0.msg2_size, 0);
  expect(test.screen0.sound1, 0);
  expect(test.screen0.sound2, 0);
  expect(test.screen0.sound3, 6091);
  expect(test.screen0.snd_timer, 0);
  expect(test.screen0.timer1, 0);
  expect(test.screen0.timer2, 0);
  expect(test.screen0.timer3, 0);
  expect(test.screen0.dsp_flg1, 0);
  expect(test.screen0.dsp_flg2, 0);
  expect(test.screen0.movie01_ext, 0);
  expect(test.screen0.movie02_ext, 0);
  expect(test.screen0.movie03_ext, 0);
  expect(test.screen0.movie04_ext, 0);
  expect(test.screen0.line_title, "");
  expect(test.screen0.line_title_ex, "");
  expect(test.screen0.line1, "");
  expect(test.screen0.line2, "お会計券を");
  expect(test.screen0.line3, "読ませてください");
  expect(test.screen0.line4, "");
  expect(test.screen0.line1_ex, "");
  expect(test.screen0.line2_ex, "Insert the ticket");
  expect(test.screen0.line3_ex, "into the scanner.");
  expect(test.screen0.line4_ex, "");
  expect(test.screen0.sound_led1, 0);
  expect(test.screen0.sound_led2, 0);
  expect(test.screen0.sound_led3, 6091);
  expect(test.screen1.title, "スキャン中画面");
  expect(test.screen1.msg1, "お会計券を読ませるとスタートします");
  expect(test.screen1.msg2, "");
  expect(test.screen1.msg1_size, 0);
  expect(test.screen1.msg2_size, 0);
  expect(test.screen1.sound1, 6003);
  expect(test.screen1.sound2, 6097);
  expect(test.screen1.sound3, 6096);
  expect(test.screen1.snd_timer, 10);
  expect(test.screen1.timer1, 2);
  expect(test.screen1.timer2, 10);
  expect(test.screen1.timer3, 10);
  expect(test.screen1.dsp_flg1, 0);
  expect(test.screen1.dsp_flg2, 0);
  expect(test.screen1.movie01_ext, 0);
  expect(test.screen1.movie02_ext, 0);
  expect(test.screen1.movie03_ext, 0);
  expect(test.screen1.movie04_ext, 0);
  expect(test.screen1.line_title, "");
  expect(test.screen1.line_title_ex, "");
  expect(test.screen1.line1, "");
  expect(test.screen1.line2, "");
  expect(test.screen1.line3, "");
  expect(test.screen1.line4, "");
  expect(test.screen1.line1_ex, "");
  expect(test.screen1.line2_ex, "");
  expect(test.screen1.line3_ex, "");
  expect(test.screen1.line4_ex, "");
  expect(test.screen1.sound_led1, 6003);
  expect(test.screen1.sound_led2, 6097);
  expect(test.screen1.sound_led3, 6096);
  expect(test.screen2.title, "会計選択画面");
  expect(test.screen2.msg1, "お支払方法のボタンを押して下さい");
  expect(test.screen2.msg2, "");
  expect(test.screen2.msg1_size, 0);
  expect(test.screen2.msg2_size, 0);
  expect(test.screen2.sound1, 6004);
  expect(test.screen2.sound2, 0);
  expect(test.screen2.sound3, 0);
  expect(test.screen2.snd_timer, 30);
  expect(test.screen2.timer1, 60);
  expect(test.screen2.timer2, 10);
  expect(test.screen2.timer3, 10);
  expect(test.screen2.dsp_flg1, 0);
  expect(test.screen2.dsp_flg2, 0);
  expect(test.screen2.movie01_ext, 0);
  expect(test.screen2.movie02_ext, 0);
  expect(test.screen2.movie03_ext, 0);
  expect(test.screen2.movie04_ext, 0);
  expect(test.screen2.line_title, "");
  expect(test.screen2.line_title_ex, "");
  expect(test.screen2.line1, "お支払方法を");
  expect(test.screen2.line2, "押してください");
  expect(test.screen2.line3, "");
  expect(test.screen2.line4, "");
  expect(test.screen2.line1_ex, "Please select your");
  expect(test.screen2.line2_ex, "payment method.");
  expect(test.screen2.line3_ex, "");
  expect(test.screen2.line4_ex, "");
  expect(test.screen2.sound_led1, 6129);
  expect(test.screen2.sound_led2, 0);
  expect(test.screen2.sound_led3, 0);
  expect(test.screen3.title, "現金入金画面");
  expect(test.screen3.msg1, "お買上金額を確認し             お金をいれてください");
  expect(test.screen3.msg2, "");
  expect(test.screen3.msg1_size, 0);
  expect(test.screen3.msg2_size, 0);
  expect(test.screen3.sound1, 6005);
  expect(test.screen3.sound2, 6006);
  expect(test.screen3.sound3, 6015);
  expect(test.screen3.snd_timer, 20);
  expect(test.screen3.timer1, 0);
  expect(test.screen3.timer2, 0);
  expect(test.screen3.timer3, 0);
  expect(test.screen3.dsp_flg1, 0);
  expect(test.screen3.dsp_flg2, 0);
  expect(test.screen3.movie01_ext, 0);
  expect(test.screen3.movie02_ext, 0);
  expect(test.screen3.movie03_ext, 0);
  expect(test.screen3.movie04_ext, 0);
  expect(test.screen3.line_title, "現金でお支払い");
  expect(test.screen3.line_title_ex, "Cash Payment");
  expect(test.screen3.line1, "お金を");
  expect(test.screen3.line2, "入れてください");
  expect(test.screen3.line3, "");
  expect(test.screen3.line4, "");
  expect(test.screen3.line1_ex, "Please insert the cash.");
  expect(test.screen3.line2_ex, "");
  expect(test.screen3.line3_ex, "");
  expect(test.screen3.line4_ex, "");
  expect(test.screen3.sound_led1, 6180);
  expect(test.screen3.sound_led2, 6130);
  expect(test.screen3.sound_led3, 6015);
  expect(test.screen4.title, "現金支払画面");
  expect(test.screen4.msg1, "お買上金額を確認し             お金をいれてください");
  expect(test.screen4.msg2, "");
  expect(test.screen4.msg1_size, 0);
  expect(test.screen4.msg2_size, 0);
  expect(test.screen4.sound1, 6016);
  expect(test.screen4.sound2, 0);
  expect(test.screen4.sound3, 0);
  expect(test.screen4.snd_timer, 20);
  expect(test.screen4.timer1, 10);
  expect(test.screen4.timer2, 0);
  expect(test.screen4.timer3, 0);
  expect(test.screen4.dsp_flg1, 0);
  expect(test.screen4.dsp_flg2, 0);
  expect(test.screen4.movie01_ext, 0);
  expect(test.screen4.movie02_ext, 0);
  expect(test.screen4.movie03_ext, 0);
  expect(test.screen4.movie04_ext, 0);
  expect(test.screen4.line_title, "");
  expect(test.screen4.line_title_ex, "");
  expect(test.screen4.line1, "よろしければ");
  expect(test.screen4.line2, "おわりボタンを");
  expect(test.screen4.line3, "押してください");
  expect(test.screen4.line4, "");
  expect(test.screen4.line1_ex, "When ready, ");
  expect(test.screen4.line2_ex, "press \"finish\"");
  expect(test.screen4.line3_ex, "to complete payment.");
  expect(test.screen4.line4_ex, "");
  expect(test.screen4.sound_led1, 6179);
  expect(test.screen4.sound_led2, 6217);
  expect(test.screen4.sound_led3, 0);
  expect(test.screen5.title, "現金支払完了画面");
  expect(test.screen5.msg1, "お釣りとレシートを             お取りください。");
  expect(test.screen5.msg2, "");
  expect(test.screen5.msg1_size, 0);
  expect(test.screen5.msg2_size, 0);
  expect(test.screen5.sound1, 6017);
  expect(test.screen5.sound2, "");
  expect(test.screen5.sound3, 0);
  expect(test.screen5.snd_timer, 0);
  expect(test.screen5.timer1, 5);
  expect(test.screen5.timer2, 10);
  expect(test.screen5.timer3, 2);
  expect(test.screen5.dsp_flg1, 0);
  expect(test.screen5.dsp_flg2, 0);
  expect(test.screen5.movie01_ext, 0);
  expect(test.screen5.movie02_ext, 0);
  expect(test.screen5.movie03_ext, 0);
  expect(test.screen5.movie04_ext, 0);
  expect(test.screen5.line_title, "");
  expect(test.screen5.line_title_ex, "");
  expect(test.screen5.line1, "おつりを");
  expect(test.screen5.line2, "お受け取りください");
  expect(test.screen5.line3, "");
  expect(test.screen5.line4, "");
  expect(test.screen5.line1_ex, "Please take your change.");
  expect(test.screen5.line2_ex, "");
  expect(test.screen5.line3_ex, "");
  expect(test.screen5.line4_ex, "");
  expect(test.screen5.sound_led1, 6132);
  expect(test.screen5.sound_led2, 6132);
  expect(test.screen5.sound_led3, 0);
  expect(test.screen6.title, "支払完了(お釣り０円)");
  expect(test.screen6.msg1, "レシートをお取りください。");
  expect(test.screen6.msg2, "");
  expect(test.screen6.msg1_size, 0);
  expect(test.screen6.msg2_size, 0);
  expect(test.screen6.sound1, 6018);
  expect(test.screen6.sound2, 6129);
  expect(test.screen6.sound3, 6548);
  expect(test.screen6.snd_timer, 0);
  expect(test.screen6.timer1, 5);
  expect(test.screen6.timer2, 10);
  expect(test.screen6.timer3, 0);
  expect(test.screen6.dsp_flg1, 0);
  expect(test.screen6.dsp_flg2, 0);
  expect(test.screen6.movie01_ext, 0);
  expect(test.screen6.movie02_ext, 0);
  expect(test.screen6.movie03_ext, 0);
  expect(test.screen6.movie04_ext, 0);
  expect(test.screen6.line_title, "");
  expect(test.screen6.line_title_ex, "");
  expect(test.screen6.line1, "レシートを");
  expect(test.screen6.line2, "お受け取りください");
  expect(test.screen6.line3, "ありがとう");
  expect(test.screen6.line4, "ございました");
  expect(test.screen6.line1_ex, "Thank you.");
  expect(test.screen6.line2_ex, "Please take your receipt.");
  expect(test.screen6.line3_ex, "");
  expect(test.screen6.line4_ex, "");
  expect(test.screen6.sound_led1, 6133);
  expect(test.screen6.sound_led2, 6132);
  expect(test.screen6.sound_led3, 6548);
  expect(test.screen6.line2_1, "レシートを");
  expect(test.screen6.line2_2, "お受け取りください");
  expect(test.screen6.line2_3, "お大事にして下さい");
  expect(test.screen6.line2_4, "");
  expect(test.screen7.title, "アイテム明細画面");
  expect(test.screen7.msg1, "確認が終わりましたら、お会計ボタンを押してください");
  expect(test.screen7.msg2, "");
  expect(test.screen7.msg1_size, 0);
  expect(test.screen7.msg2_size, 0);
  expect(test.screen7.sound1, 6027);
  expect(test.screen7.sound2, 0);
  expect(test.screen7.sound3, 0);
  expect(test.screen7.snd_timer, 20);
  expect(test.screen7.timer1, 1);
  expect(test.screen7.timer2, 0);
  expect(test.screen7.timer3, 0);
  expect(test.screen7.dsp_flg1, 0);
  expect(test.screen7.dsp_flg2, 0);
  expect(test.screen7.movie01_ext, 0);
  expect(test.screen7.movie02_ext, 0);
  expect(test.screen7.movie03_ext, 0);
  expect(test.screen7.movie04_ext, 0);
  expect(test.screen7.line_title, "");
  expect(test.screen7.line_title_ex, "");
  expect(test.screen7.line1, "");
  expect(test.screen7.line2, "");
  expect(test.screen7.line3, "");
  expect(test.screen7.line4, "");
  expect(test.screen7.line1_ex, "");
  expect(test.screen7.line2_ex, "");
  expect(test.screen7.line3_ex, "");
  expect(test.screen7.line4_ex, "");
  expect(test.screen7.sound_led1, 6027);
  expect(test.screen7.sound_led2, 0);
  expect(test.screen7.sound_led3, 0);
  expect(test.screen8.title, "ｸﾚｼﾞｯﾄﾘｰﾄﾞ画面");
  expect(test.screen8.msg1, "お買上金額を確認し             クレジットカードを読ませて下さい");
  expect(test.screen8.msg2, "");
  expect(test.screen8.msg1_size, 0);
  expect(test.screen8.msg2_size, 0);
  expect(test.screen8.sound1, 6007);
  expect(test.screen8.sound2, 6008);
  expect(test.screen8.sound3, 0);
  expect(test.screen8.snd_timer, 20);
  expect(test.screen8.timer1, 0);
  expect(test.screen8.timer2, 0);
  expect(test.screen8.timer3, 0);
  expect(test.screen8.dsp_flg1, 0);
  expect(test.screen8.dsp_flg2, 0);
  expect(test.screen8.movie01_ext, 0);
  expect(test.screen8.movie02_ext, 0);
  expect(test.screen8.movie03_ext, 0);
  expect(test.screen8.movie04_ext, 0);
  expect(test.screen8.line_title, "クレジットでお支払い");
  expect(test.screen8.line_title_ex, "Credit Card Payment");
  expect(test.screen8.line1, "クレジットカードを");
  expect(test.screen8.line2, "読ませてください");
  expect(test.screen8.line3, "");
  expect(test.screen8.line4, "");
  expect(test.screen8.line1_ex, "Please swipe");
  expect(test.screen8.line2_ex, "your credit card.");
  expect(test.screen8.line3_ex, "");
  expect(test.screen8.line4_ex, "");
  expect(test.screen8.sound_led1, 6007);
  expect(test.screen8.sound_led2, 6008);
  expect(test.screen8.sound_led3, 0);
  expect(test.screen9.title, "ｸﾚｼﾞｯﾄ支払完了画面");
  expect(test.screen9.msg1, "レシートをお取りください。");
  expect(test.screen9.msg2, "");
  expect(test.screen9.msg1_size, 0);
  expect(test.screen9.msg2_size, 0);
  expect(test.screen9.sound1, 6018);
  expect(test.screen9.sound2, 0);
  expect(test.screen9.sound3, 0);
  expect(test.screen9.snd_timer, 0);
  expect(test.screen9.timer1, 5);
  expect(test.screen9.timer2, 10);
  expect(test.screen9.timer3, 0);
  expect(test.screen9.dsp_flg1, 0);
  expect(test.screen9.dsp_flg2, 0);
  expect(test.screen9.movie01_ext, 0);
  expect(test.screen9.movie02_ext, 0);
  expect(test.screen9.movie03_ext, 0);
  expect(test.screen9.movie04_ext, 0);
  expect(test.screen9.line_title, "");
  expect(test.screen9.line_title_ex, "");
  expect(test.screen9.line1, "レシートを");
  expect(test.screen9.line2, "お受け取りください");
  expect(test.screen9.line3, "ありがとう");
  expect(test.screen9.line4, "ございました");
  expect(test.screen9.line1_ex, "Thank you.");
  expect(test.screen9.line2_ex, "Please take your receipt.");
  expect(test.screen9.line3_ex, "");
  expect(test.screen9.line4_ex, "");
  expect(test.screen9.sound_led1, 6133);
  expect(test.screen9.sound_led2, 0);
  expect(test.screen9.sound_led3, 0);
  expect(test.screen10.title, "ありがとうございました画面");
  expect(test.screen10.msg1, "");
  expect(test.screen10.msg2, "");
  expect(test.screen10.msg1_size, 0);
  expect(test.screen10.msg2_size, 0);
  expect(test.screen10.sound1, 6025);
  expect(test.screen10.sound2, 6098);
  expect(test.screen10.sound3, 0);
  expect(test.screen10.snd_timer, 0);
  expect(test.screen10.timer1, 4);
  expect(test.screen10.timer2, 0);
  expect(test.screen10.timer3, 0);
  expect(test.screen10.dsp_flg1, 0);
  expect(test.screen10.dsp_flg2, 0);
  expect(test.screen10.movie01_ext, 0);
  expect(test.screen10.movie02_ext, 0);
  expect(test.screen10.movie03_ext, 0);
  expect(test.screen10.movie04_ext, 0);
  expect(test.screen10.line_title, "");
  expect(test.screen10.line_title_ex, "");
  expect(test.screen10.line1, "");
  expect(test.screen10.line2, "");
  expect(test.screen10.line3, "");
  expect(test.screen10.line4, "");
  expect(test.screen10.line1_ex, "");
  expect(test.screen10.line2_ex, "");
  expect(test.screen10.line3_ex, "");
  expect(test.screen10.line4_ex, "");
  expect(test.screen10.sound_led1, 6025);
  expect(test.screen10.sound_led2, 6098);
  expect(test.screen10.sound_led3, 0);
  expect(test.screen11.title, "店員呼び出し選択画面");
  expect(test.screen11.msg1, "");
  expect(test.screen11.msg2, "");
  expect(test.screen11.msg1_size, 0);
  expect(test.screen11.msg2_size, 0);
  expect(test.screen11.sound1, 6034);
  expect(test.screen11.sound2, 0);
  expect(test.screen11.sound3, 0);
  expect(test.screen11.snd_timer, 10);
  expect(test.screen11.timer1, 0);
  expect(test.screen11.timer2, 0);
  expect(test.screen11.timer3, 0);
  expect(test.screen11.dsp_flg1, 0);
  expect(test.screen11.dsp_flg2, 0);
  expect(test.screen11.movie01_ext, 0);
  expect(test.screen11.movie02_ext, 0);
  expect(test.screen11.movie03_ext, 0);
  expect(test.screen11.movie04_ext, 0);
  expect(test.screen11.line_title, "");
  expect(test.screen11.line_title_ex, "");
  expect(test.screen11.line1, "");
  expect(test.screen11.line2, "");
  expect(test.screen11.line3, "");
  expect(test.screen11.line4, "");
  expect(test.screen11.line1_ex, "");
  expect(test.screen11.line2_ex, "");
  expect(test.screen11.line3_ex, "");
  expect(test.screen11.line4_ex, "");
  expect(test.screen11.sound_led1, 6034);
  expect(test.screen11.sound_led2, 0);
  expect(test.screen11.sound_led3, 0);
  expect(test.screen12.title, "店員呼び出し中画面");
  expect(test.screen12.msg1, "");
  expect(test.screen12.msg2, "");
  expect(test.screen12.msg1_size, 0);
  expect(test.screen12.msg2_size, 0);
  expect(test.screen12.sound1, 6035);
  expect(test.screen12.sound2, 0);
  expect(test.screen12.sound3, 0);
  expect(test.screen12.snd_timer, 15);
  expect(test.screen12.timer1, 0);
  expect(test.screen12.timer2, 0);
  expect(test.screen12.timer3, 0);
  expect(test.screen12.dsp_flg1, 0);
  expect(test.screen12.dsp_flg2, 0);
  expect(test.screen12.movie01_ext, 0);
  expect(test.screen12.movie02_ext, 0);
  expect(test.screen12.movie03_ext, 0);
  expect(test.screen12.movie04_ext, 0);
  expect(test.screen12.line_title, "");
  expect(test.screen12.line_title_ex, "");
  expect(test.screen12.line1, "");
  expect(test.screen12.line2, "");
  expect(test.screen12.line3, "");
  expect(test.screen12.line4, "");
  expect(test.screen12.line1_ex, "");
  expect(test.screen12.line2_ex, "");
  expect(test.screen12.line3_ex, "");
  expect(test.screen12.line4_ex, "");
  expect(test.screen12.sound_led1, 6178);
  expect(test.screen12.sound_led2, 0);
  expect(test.screen12.sound_led3, 0);
  expect(test.screen13.title, "パスワード入力");
  expect(test.screen13.msg1, "");
  expect(test.screen13.msg2, "");
  expect(test.screen13.msg1_size, 0);
  expect(test.screen13.msg2_size, 0);
  expect(test.screen13.sound1, 6036);
  expect(test.screen13.sound2, 0);
  expect(test.screen13.sound3, 0);
  expect(test.screen13.snd_timer, 20);
  expect(test.screen13.timer1, 0);
  expect(test.screen13.timer2, 0);
  expect(test.screen13.timer3, 0);
  expect(test.screen13.dsp_flg1, 0);
  expect(test.screen13.dsp_flg2, 0);
  expect(test.screen13.movie01_ext, 0);
  expect(test.screen13.movie02_ext, 0);
  expect(test.screen13.movie03_ext, 0);
  expect(test.screen13.movie04_ext, 0);
  expect(test.screen13.line_title, "");
  expect(test.screen13.line_title_ex, "");
  expect(test.screen13.line1, "");
  expect(test.screen13.line2, "");
  expect(test.screen13.line3, "");
  expect(test.screen13.line4, "");
  expect(test.screen13.line1_ex, "");
  expect(test.screen13.line2_ex, "");
  expect(test.screen13.line3_ex, "");
  expect(test.screen13.line4_ex, "");
  expect(test.screen13.sound_led1, 6036);
  expect(test.screen13.sound_led2, 0);
  expect(test.screen13.sound_led3, 0);
  expect(test.screen14.title, "メンテナンス画面");
  expect(test.screen14.msg1, "");
  expect(test.screen14.msg2, "");
  expect(test.screen14.msg1_size, 0);
  expect(test.screen14.msg2_size, 0);
  expect(test.screen14.sound1, 6031);
  expect(test.screen14.sound2, 1008);
  expect(test.screen14.sound3, 0);
  expect(test.screen14.snd_timer, 0);
  expect(test.screen14.timer1, 0);
  expect(test.screen14.timer2, 0);
  expect(test.screen14.timer3, 0);
  expect(test.screen14.dsp_flg1, 0);
  expect(test.screen14.dsp_flg2, 0);
  expect(test.screen14.movie01_ext, 0);
  expect(test.screen14.movie02_ext, 0);
  expect(test.screen14.movie03_ext, 0);
  expect(test.screen14.movie04_ext, 0);
  expect(test.screen14.line_title, "");
  expect(test.screen14.line_title_ex, "");
  expect(test.screen14.line1, "");
  expect(test.screen14.line2, "");
  expect(test.screen14.line3, "");
  expect(test.screen14.line4, "");
  expect(test.screen14.line1_ex, "");
  expect(test.screen14.line2_ex, "");
  expect(test.screen14.line3_ex, "");
  expect(test.screen14.line4_ex, "");
  expect(test.screen14.sound_led1, 6031);
  expect(test.screen14.sound_led2, 1008);
  expect(test.screen14.sound_led3, 0);
  expect(test.screen15.title, "商品取消画面");
  expect(test.screen15.msg1, "");
  expect(test.screen15.msg2, "");
  expect(test.screen15.msg1_size, 0);
  expect(test.screen15.msg2_size, 0);
  expect(test.screen15.sound1, 1054);
  expect(test.screen15.sound2, 5089);
  expect(test.screen15.sound3, 5090);
  expect(test.screen15.snd_timer, 30);
  expect(test.screen15.timer1, 0);
  expect(test.screen15.timer2, 0);
  expect(test.screen15.timer3, 0);
  expect(test.screen15.dsp_flg1, 0);
  expect(test.screen15.dsp_flg2, 0);
  expect(test.screen15.movie01_ext, 0);
  expect(test.screen15.movie02_ext, 0);
  expect(test.screen15.movie03_ext, 0);
  expect(test.screen15.movie04_ext, 0);
  expect(test.screen15.line_title, "");
  expect(test.screen15.line_title_ex, "");
  expect(test.screen15.line1, "");
  expect(test.screen15.line2, "");
  expect(test.screen15.line3, "");
  expect(test.screen15.line4, "");
  expect(test.screen15.line1_ex, "");
  expect(test.screen15.line2_ex, "");
  expect(test.screen15.line3_ex, "");
  expect(test.screen15.line4_ex, "");
  expect(test.screen15.sound_led1, 1054);
  expect(test.screen15.sound_led2, 5089);
  expect(test.screen15.sound_led3, 5090);
  expect(test.screen16.title, "クレジットリード完了画面");
  expect(test.screen16.msg1, "よろしければ決済ボタンを       押してください");
  expect(test.screen16.msg2, "");
  expect(test.screen16.msg1_size, 0);
  expect(test.screen16.msg2_size, 0);
  expect(test.screen16.sound1, 6119);
  expect(test.screen16.sound2, "");
  expect(test.screen16.sound3, "");
  expect(test.screen16.snd_timer, 20);
  expect(test.screen16.timer1, 0);
  expect(test.screen16.timer2, 0);
  expect(test.screen16.timer3, 0);
  expect(test.screen16.dsp_flg1, 0);
  expect(test.screen16.dsp_flg2, 0);
  expect(test.screen16.movie01_ext, 0);
  expect(test.screen16.movie02_ext, 0);
  expect(test.screen16.movie03_ext, 0);
  expect(test.screen16.movie04_ext, 0);
  expect(test.screen16.line_title, "");
  expect(test.screen16.line_title_ex, "");
  expect(test.screen16.line1, "よろしければ");
  expect(test.screen16.line2, "おわりボタンを");
  expect(test.screen16.line3, "押してください");
  expect(test.screen16.line4, "");
  expect(test.screen16.line1_ex, "When ready, ");
  expect(test.screen16.line2_ex, "press \"finish\"");
  expect(test.screen16.line3_ex, "to complete payment.");
  expect(test.screen16.line4_ex, "");
  expect(test.screen16.sound_led1, 6179);
  expect(test.screen16.sound_led2, "");
  expect(test.screen16.sound_led3, "");
  expect(test.screen16.msg_max, 1);
  expect(test.screen16.line2_1, "クレジット決済できませんでした");
  expect(test.screen16.line2_2, "会計中止ボタンを押して");
  expect(test.screen16.line2_3, "再度お会計を行ってください");
  expect(test.screen16.line2_4, "");
  expect(test.screen16.line2_1_ex, "Payment failed.");
  expect(test.screen16.line2_2_ex, "Press \"Swipe again\"");
  expect(test.screen16.line2_3_ex, "and try it again.");
  expect(test.screen16.line2_4_ex, "");
  expect(test.screen17.title, "Edyタッチ画面");
  expect(test.screen17.msg1, "お会計金額を確認し             “Ｅｄｙ”をタッチしてください");
  expect(test.screen17.msg2, "");
  expect(test.screen17.msg1_size, 0);
  expect(test.screen17.msg2_size, 0);
  expect(test.screen17.sound1, 6124);
  expect(test.screen17.sound2, 6125);
  expect(test.screen17.sound3, 0);
  expect(test.screen17.snd_timer, 20);
  expect(test.screen17.timer1, 0);
  expect(test.screen17.timer2, 0);
  expect(test.screen17.timer3, 0);
  expect(test.screen17.dsp_flg1, 0);
  expect(test.screen17.dsp_flg2, 0);
  expect(test.screen17.movie01_ext, 0);
  expect(test.screen17.movie02_ext, 0);
  expect(test.screen17.movie03_ext, 0);
  expect(test.screen17.movie04_ext, 0);
  expect(test.screen17.line_title, "Ｅｄｙでお支払い");
  expect(test.screen17.line_title_ex, "Edy Payment");
  expect(test.screen17.line1, "お会計金額を確認し");
  expect(test.screen17.line2, "カードをタッチしてください");
  expect(test.screen17.line3, "");
  expect(test.screen17.line4, "");
  expect(test.screen17.line1_ex, "Please read");
  expect(test.screen17.line2_ex, "Card on the Reader.");
  expect(test.screen17.line3_ex, "");
  expect(test.screen17.line4_ex, "");
  expect(test.screen17.sound_led1, 6124);
  expect(test.screen17.sound_led2, 6125);
  expect(test.screen17.sound_led3, 0);
  expect(test.screen18.title, "Edy支払完了画面");
  expect(test.screen18.msg1, "レシートをお取りください。");
  expect(test.screen18.msg2, "");
  expect(test.screen18.msg1_size, 0);
  expect(test.screen18.msg2_size, 0);
  expect(test.screen18.sound1, 6019);
  expect(test.screen18.sound2, 0);
  expect(test.screen18.sound3, 0);
  expect(test.screen18.snd_timer, 0);
  expect(test.screen18.timer1, 5);
  expect(test.screen18.timer2, 10);
  expect(test.screen18.timer3, 0);
  expect(test.screen18.dsp_flg1, 0);
  expect(test.screen18.dsp_flg2, 0);
  expect(test.screen18.movie01_ext, 0);
  expect(test.screen18.movie02_ext, 0);
  expect(test.screen18.movie03_ext, 0);
  expect(test.screen18.movie04_ext, 0);
  expect(test.screen18.line_title, "");
  expect(test.screen18.line_title_ex, "");
  expect(test.screen18.line1, "レシートを");
  expect(test.screen18.line2, "お受け取りください");
  expect(test.screen18.line3, "ありがとう");
  expect(test.screen18.line4, "ございました");
  expect(test.screen18.line1_ex, "Thank you.");
  expect(test.screen18.line2_ex, "Please take your receipt.");
  expect(test.screen18.line3_ex, "");
  expect(test.screen18.line4_ex, "");
  expect(test.screen18.sound_led1, 6019);
  expect(test.screen18.sound_led2, 0);
  expect(test.screen18.sound_led3, 0);
  expect(test.screen19.title, "Edyタッチ完了画面");
  expect(test.screen19.msg1, "レシート発行ボタンを              押してください");
  expect(test.screen19.msg2, "");
  expect(test.screen19.msg1_size, 0);
  expect(test.screen19.msg2_size, 0);
  expect(test.screen19.sound1, 6126);
  expect(test.screen19.sound2, "");
  expect(test.screen19.sound3, "");
  expect(test.screen19.snd_timer, 20);
  expect(test.screen19.timer1, 0);
  expect(test.screen19.timer2, 0);
  expect(test.screen19.timer3, 0);
  expect(test.screen19.dsp_flg1, 0);
  expect(test.screen19.dsp_flg2, 0);
  expect(test.screen19.movie01_ext, 0);
  expect(test.screen19.movie02_ext, 0);
  expect(test.screen19.movie03_ext, 0);
  expect(test.screen19.movie04_ext, 0);
  expect(test.screen19.line_title, "");
  expect(test.screen19.line_title_ex, "");
  expect(test.screen19.line1, "よろしければ");
  expect(test.screen19.line2, "おわりボタンを");
  expect(test.screen19.line3, "押してください");
  expect(test.screen19.line4, "");
  expect(test.screen19.line1_ex, "When ready, ");
  expect(test.screen19.line2_ex, "press \"finish\"");
  expect(test.screen19.line3_ex, "to complete payment.");
  expect(test.screen19.line4_ex, "");
  expect(test.screen19.sound_led1, 6179);
  expect(test.screen19.sound_led2, "");
  expect(test.screen19.sound_led3, "");
  expect(test.screen20.title, "電子マネー確認選択画面");
  expect(test.screen20.msg1, "確認する電子マネーを選択してください");
  expect(test.screen20.msg2, "");
  expect(test.screen20.msg1_size, 0);
  expect(test.screen20.msg2_size, 0);
  expect(test.screen20.sound1, 6028);
  expect(test.screen20.sound2, 0);
  expect(test.screen20.sound3, 0);
  expect(test.screen20.snd_timer, 30);
  expect(test.screen20.timer1, 0);
  expect(test.screen20.timer2, 0);
  expect(test.screen20.timer3, 0);
  expect(test.screen20.dsp_flg1, 0);
  expect(test.screen20.dsp_flg2, 0);
  expect(test.screen20.movie01_ext, 0);
  expect(test.screen20.movie02_ext, 0);
  expect(test.screen20.movie03_ext, 0);
  expect(test.screen20.movie04_ext, 0);
  expect(test.screen20.line_title, "");
  expect(test.screen20.line_title_ex, "");
  expect(test.screen20.line1, "");
  expect(test.screen20.line2, "");
  expect(test.screen20.line3, "");
  expect(test.screen20.line4, "");
  expect(test.screen20.line1_ex, "");
  expect(test.screen20.line2_ex, "");
  expect(test.screen20.line3_ex, "");
  expect(test.screen20.line4_ex, "");
  expect(test.screen20.sound_led1, 6028);
  expect(test.screen20.sound_led2, 0);
  expect(test.screen20.sound_led3, 0);
  expect(test.screen21.title, "電子マネー確認Edyタッチ画面");
  expect(test.screen21.msg1, "Ｅｄｙをタッチしてください");
  expect(test.screen21.msg2, "");
  expect(test.screen21.msg1_size, 0);
  expect(test.screen21.msg2_size, 0);
  expect(test.screen21.sound1, 6009);
  expect(test.screen21.sound2, 0);
  expect(test.screen21.sound3, 0);
  expect(test.screen21.snd_timer, 10);
  expect(test.screen21.timer1, 0);
  expect(test.screen21.timer2, 0);
  expect(test.screen21.timer3, 0);
  expect(test.screen21.dsp_flg1, 0);
  expect(test.screen21.dsp_flg2, 0);
  expect(test.screen21.movie01_ext, 0);
  expect(test.screen21.movie02_ext, 0);
  expect(test.screen21.movie03_ext, 0);
  expect(test.screen21.movie04_ext, 0);
  expect(test.screen21.line_title, "");
  expect(test.screen21.line_title_ex, "");
  expect(test.screen21.line1, "");
  expect(test.screen21.line2, "");
  expect(test.screen21.line3, "");
  expect(test.screen21.line4, "");
  expect(test.screen21.line1_ex, "");
  expect(test.screen21.line2_ex, "");
  expect(test.screen21.line3_ex, "");
  expect(test.screen21.line4_ex, "");
  expect(test.screen21.sound_led1, 6009);
  expect(test.screen21.sound_led2, 0);
  expect(test.screen21.sound_led3, 0);
  expect(test.screen22.title, "電子マネー確認Edy完了画面");
  expect(test.screen22.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen22.msg2, "");
  expect(test.screen22.msg1_size, 0);
  expect(test.screen22.msg2_size, 0);
  expect(test.screen22.sound1, 6029);
  expect(test.screen22.sound2, 0);
  expect(test.screen22.sound3, 0);
  expect(test.screen22.snd_timer, 20);
  expect(test.screen22.timer1, 0);
  expect(test.screen22.timer2, 0);
  expect(test.screen22.timer3, 0);
  expect(test.screen22.dsp_flg1, 0);
  expect(test.screen22.dsp_flg2, 0);
  expect(test.screen22.movie01_ext, 0);
  expect(test.screen22.movie02_ext, 0);
  expect(test.screen22.movie03_ext, 0);
  expect(test.screen22.movie04_ext, 0);
  expect(test.screen22.line_title, "");
  expect(test.screen22.line_title_ex, "");
  expect(test.screen22.line1, "");
  expect(test.screen22.line2, "");
  expect(test.screen22.line3, "");
  expect(test.screen22.line4, "");
  expect(test.screen22.line1_ex, "");
  expect(test.screen22.line2_ex, "");
  expect(test.screen22.line3_ex, "");
  expect(test.screen22.line4_ex, "");
  expect(test.screen22.sound_led1, 6029);
  expect(test.screen22.sound_led2, 0);
  expect(test.screen22.sound_led3, 0);
  expect(test.screen23.title, "返金画面");
  expect(test.screen23.msg1, "お金とレシートを　             お取りください。");
  expect(test.screen23.msg2, "");
  expect(test.screen23.msg1_size, 0);
  expect(test.screen23.msg2_size, 0);
  expect(test.screen23.sound1, 6127);
  expect(test.screen23.sound2, 0);
  expect(test.screen23.sound3, 0);
  expect(test.screen23.snd_timer, 0);
  expect(test.screen23.timer1, 0);
  expect(test.screen23.timer2, 0);
  expect(test.screen23.timer3, 0);
  expect(test.screen23.dsp_flg1, 0);
  expect(test.screen23.dsp_flg2, 0);
  expect(test.screen23.movie01_ext, 0);
  expect(test.screen23.movie02_ext, 0);
  expect(test.screen23.movie03_ext, 0);
  expect(test.screen23.movie04_ext, 0);
  expect(test.screen23.line_title, "");
  expect(test.screen23.line_title_ex, "");
  expect(test.screen23.line1, "お金を");
  expect(test.screen23.line2, "お受け取りください");
  expect(test.screen23.line3, "");
  expect(test.screen23.line4, "");
  expect(test.screen23.line1_ex, "Please take the money.");
  expect(test.screen23.line2_ex, "");
  expect(test.screen23.line3_ex, "");
  expect(test.screen23.line4_ex, "");
  expect(test.screen23.sound_led1, 6098);
  expect(test.screen23.sound_led2, 0);
  expect(test.screen23.sound_led3, 0);
  expect(test.screen24.title, "交通系ICタッチ画面");
  expect(test.screen24.msg1, "お会計金額を確認し             “交通系IC”をタッチしてください");
  expect(test.screen24.msg2, "");
  expect(test.screen24.msg1_size, 0);
  expect(test.screen24.msg2_size, 0);
  expect(test.screen24.sound1, 6153);
  expect(test.screen24.sound2, 6070);
  expect(test.screen24.sound3, 0);
  expect(test.screen24.snd_timer, 20);
  expect(test.screen24.timer1, 0);
  expect(test.screen24.timer2, 0);
  expect(test.screen24.timer3, 0);
  expect(test.screen24.dsp_flg1, 0);
  expect(test.screen24.dsp_flg2, 0);
  expect(test.screen24.movie01_ext, 0);
  expect(test.screen24.movie02_ext, 0);
  expect(test.screen24.movie03_ext, 0);
  expect(test.screen24.movie04_ext, 0);
  expect(test.screen24.line_title, "交通系ICでお支払い");
  expect(test.screen24.line_title_ex, "IC Card Payment");
  expect(test.screen24.line1, "お会計金額を確認し");
  expect(test.screen24.line2, "カードをタッチしてください");
  expect(test.screen24.line3, "");
  expect(test.screen24.line4, "");
  expect(test.screen24.line1_ex, "Tap your IC card");
  expect(test.screen24.line2_ex, "on the terminal.");
  expect(test.screen24.line3_ex, "");
  expect(test.screen24.line4_ex, "");
  expect(test.screen24.sound_led1, 6153);
  expect(test.screen24.sound_led2, 6070);
  expect(test.screen24.sound_led3, 0);
  expect(test.screen25.title, "交通系IC支払完了画面");
  expect(test.screen25.msg1, "レシートをお取りください。");
  expect(test.screen25.msg2, "");
  expect(test.screen25.msg1_size, 0);
  expect(test.screen25.msg2_size, 0);
  expect(test.screen25.sound1, 6219);
  expect(test.screen25.sound2, 0);
  expect(test.screen25.sound3, 0);
  expect(test.screen25.snd_timer, 0);
  expect(test.screen25.timer1, 5);
  expect(test.screen25.timer2, 10);
  expect(test.screen25.timer3, 0);
  expect(test.screen25.dsp_flg1, 0);
  expect(test.screen25.dsp_flg2, 0);
  expect(test.screen25.movie01_ext, 0);
  expect(test.screen25.movie02_ext, 0);
  expect(test.screen25.movie03_ext, 0);
  expect(test.screen25.movie04_ext, 0);
  expect(test.screen25.line_title, "");
  expect(test.screen25.line_title_ex, "");
  expect(test.screen25.line1, "レシートを");
  expect(test.screen25.line2, "お受け取りください");
  expect(test.screen25.line3, "ありがとう");
  expect(test.screen25.line4, "ございました");
  expect(test.screen25.line1_ex, "Please take your card");
  expect(test.screen25.line2_ex, "and the receipt.");
  expect(test.screen25.line3_ex, "Thank you.");
  expect(test.screen25.line4_ex, "");
  expect(test.screen25.sound_led1, 6219);
  expect(test.screen25.sound_led2, 0);
  expect(test.screen25.sound_led3, 0);
  expect(test.screen26.title, "交通系ICタッチ完了画面");
  expect(test.screen26.msg1, "レシート発行ボタンを              押してください");
  expect(test.screen26.msg2, "");
  expect(test.screen26.msg1_size, 0);
  expect(test.screen26.msg2_size, 0);
  expect(test.screen26.sound1, 6126);
  expect(test.screen26.sound2, "");
  expect(test.screen26.sound3, "");
  expect(test.screen26.snd_timer, 20);
  expect(test.screen26.timer1, 0);
  expect(test.screen26.timer2, 0);
  expect(test.screen26.timer3, 0);
  expect(test.screen26.dsp_flg1, 0);
  expect(test.screen26.dsp_flg2, 0);
  expect(test.screen26.movie01_ext, 0);
  expect(test.screen26.movie02_ext, 0);
  expect(test.screen26.movie03_ext, 0);
  expect(test.screen26.movie04_ext, 0);
  expect(test.screen26.line_title, "");
  expect(test.screen26.line_title_ex, "");
  expect(test.screen26.line1, "よろしければ");
  expect(test.screen26.line2, "おわりボタンを");
  expect(test.screen26.line3, "押してください");
  expect(test.screen26.line4, "");
  expect(test.screen26.line1_ex, "When ready, ");
  expect(test.screen26.line2_ex, "press \"finish\"");
  expect(test.screen26.line3_ex, "to complete payment.");
  expect(test.screen26.line4_ex, "");
  expect(test.screen26.sound_led1, 6179);
  expect(test.screen26.sound_led2, "");
  expect(test.screen26.sound_led3, "");
  expect(test.screen27.title, "電子マネー確認交通系ICタッチ画面");
  expect(test.screen27.msg1, "交通系ICをタッチしてください");
  expect(test.screen27.msg2, "");
  expect(test.screen27.msg1_size, 0);
  expect(test.screen27.msg2_size, 0);
  expect(test.screen27.sound1, 6153);
  expect(test.screen27.sound2, 0);
  expect(test.screen27.sound3, 0);
  expect(test.screen27.snd_timer, 10);
  expect(test.screen27.timer1, 0);
  expect(test.screen27.timer2, 0);
  expect(test.screen27.timer3, 0);
  expect(test.screen27.dsp_flg1, 0);
  expect(test.screen27.dsp_flg2, 0);
  expect(test.screen27.movie01_ext, 0);
  expect(test.screen27.movie02_ext, 0);
  expect(test.screen27.movie03_ext, 0);
  expect(test.screen27.movie04_ext, 0);
  expect(test.screen27.line_title, "");
  expect(test.screen27.line_title_ex, "");
  expect(test.screen27.line1, "");
  expect(test.screen27.line2, "");
  expect(test.screen27.line3, "");
  expect(test.screen27.line4, "");
  expect(test.screen27.line1_ex, "");
  expect(test.screen27.line2_ex, "");
  expect(test.screen27.line3_ex, "");
  expect(test.screen27.line4_ex, "");
  expect(test.screen27.sound_led1, 6153);
  expect(test.screen27.sound_led2, 0);
  expect(test.screen27.sound_led3, 0);
  expect(test.screen28.title, "電子マネー確認交通系IC完了画面");
  expect(test.screen28.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen28.msg2, "");
  expect(test.screen28.msg1_size, 0);
  expect(test.screen28.msg2_size, 0);
  expect(test.screen28.sound1, 6029);
  expect(test.screen28.sound2, 0);
  expect(test.screen28.sound3, 0);
  expect(test.screen28.snd_timer, 20);
  expect(test.screen28.timer1, 0);
  expect(test.screen28.timer2, 0);
  expect(test.screen28.timer3, 0);
  expect(test.screen28.dsp_flg1, 0);
  expect(test.screen28.dsp_flg2, 0);
  expect(test.screen28.movie01_ext, 0);
  expect(test.screen28.movie02_ext, 0);
  expect(test.screen28.movie03_ext, 0);
  expect(test.screen28.movie04_ext, 0);
  expect(test.screen28.line_title, "");
  expect(test.screen28.line_title_ex, "");
  expect(test.screen28.line1, "");
  expect(test.screen28.line2, "");
  expect(test.screen28.line3, "");
  expect(test.screen28.line4, "");
  expect(test.screen28.line1_ex, "");
  expect(test.screen28.line2_ex, "");
  expect(test.screen28.line3_ex, "");
  expect(test.screen28.line4_ex, "");
  expect(test.screen28.sound_led1, 6029);
  expect(test.screen28.sound_led2, 0);
  expect(test.screen28.sound_led3, 0);
  expect(test.screen29.title, "レジ袋登録画面");
  expect(test.screen29.msg1, "レジ袋登録");
  expect(test.screen29.msg2, "レジ袋は有料となっております。枚数を入力してください。");
  expect(test.screen29.msg1_size, 1);
  expect(test.screen29.msg2_size, 1);
  expect(test.screen29.sound1, 0);
  expect(test.screen29.sound2, 0);
  expect(test.screen29.sound3, 0);
  expect(test.screen29.snd_timer, 0);
  expect(test.screen29.timer1, 0);
  expect(test.screen29.timer2, 0);
  expect(test.screen29.timer3, 0);
  expect(test.screen29.dsp_flg1, 0);
  expect(test.screen29.dsp_flg2, 0);
  expect(test.screen29.movie01_ext, 0);
  expect(test.screen29.movie02_ext, 0);
  expect(test.screen29.movie03_ext, 0);
  expect(test.screen29.movie04_ext, 0);
  expect(test.screen29.line_title, "");
  expect(test.screen29.line_title_ex, "");
  expect(test.screen29.line1, "");
  expect(test.screen29.line2, "");
  expect(test.screen29.line3, "");
  expect(test.screen29.line4, "");
  expect(test.screen29.line1_ex, "");
  expect(test.screen29.line2_ex, "");
  expect(test.screen29.line3_ex, "");
  expect(test.screen29.line4_ex, "");
  expect(test.screen29.sound_led1, 0);
  expect(test.screen29.sound_led2, 0);
  expect(test.screen29.sound_led3, 0);
  expect(test.screen30.title, "おつりチャージ画面");
  expect(test.screen30.msg1, "");
  expect(test.screen30.msg2, "");
  expect(test.screen30.msg1_size, 0);
  expect(test.screen30.msg2_size, 0);
  expect(test.screen30.sound1, 6183);
  expect(test.screen30.sound2, 0);
  expect(test.screen30.sound3, 0);
  expect(test.screen30.snd_timer, 20);
  expect(test.screen30.timer1, 0);
  expect(test.screen30.timer2, 0);
  expect(test.screen30.timer3, 0);
  expect(test.screen30.dsp_flg1, 0);
  expect(test.screen30.dsp_flg2, 0);
  expect(test.screen30.movie01_ext, 0);
  expect(test.screen30.movie02_ext, 0);
  expect(test.screen30.movie03_ext, 0);
  expect(test.screen30.movie04_ext, 0);
  expect(test.screen30.line_title, "");
  expect(test.screen30.line_title_ex, "");
  expect(test.screen30.line1, "");
  expect(test.screen30.line2, "");
  expect(test.screen30.line3, "");
  expect(test.screen30.line4, "");
  expect(test.screen30.line1_ex, "");
  expect(test.screen30.line2_ex, "");
  expect(test.screen30.line3_ex, "");
  expect(test.screen30.line4_ex, "");
  expect(test.screen30.sound_led1, 6183);
  expect(test.screen30.sound_led2, 0);
  expect(test.screen30.sound_led3, 0);
  expect(test.screen31.title, "現金チャージ選択画面");
  expect(test.screen31.msg1, "チャージ金額を選択してください");
  expect(test.screen31.msg2, "Select the amount you want to add to your card.");
  expect(test.screen31.msg1_size, 30);
  expect(test.screen31.msg2_size, 47);
  expect(test.screen31.sound1, 6198);
  expect(test.screen31.sound2, 0);
  expect(test.screen31.sound3, 0);
  expect(test.screen31.snd_timer, 30);
  expect(test.screen31.timer1, 0);
  expect(test.screen31.timer2, 0);
  expect(test.screen31.timer3, 0);
  expect(test.screen31.dsp_flg1, 0);
  expect(test.screen31.dsp_flg2, 0);
  expect(test.screen31.movie01_ext, 0);
  expect(test.screen31.movie02_ext, 0);
  expect(test.screen31.movie03_ext, 0);
  expect(test.screen31.movie04_ext, 0);
  expect(test.screen31.line_title, "");
  expect(test.screen31.line_title_ex, "");
  expect(test.screen31.line1, "");
  expect(test.screen31.line2, "");
  expect(test.screen31.line3, "");
  expect(test.screen31.line4, "");
  expect(test.screen31.line1_ex, "");
  expect(test.screen31.line2_ex, "");
  expect(test.screen31.line3_ex, "");
  expect(test.screen31.line4_ex, "");
  expect(test.screen31.sound_led1, 6198);
  expect(test.screen31.sound_led2, 0);
  expect(test.screen31.sound_led3, 0);
  expect(test.screen32.title, "ｎｉｍｏｃａカード確認画面");
  expect(test.screen32.msg1, "★ｎｉｍｏｃａカード、または");
  expect(test.screen32.msg2, "クレジットｎｉｍｏｃａカードはお持ちですか？");
  expect(test.screen32.msg1_size, 28);
  expect(test.screen32.msg2_size, 44);
  expect(test.screen32.sound1, 6214);
  expect(test.screen32.sound2, 0);
  expect(test.screen32.sound3, 0);
  expect(test.screen32.snd_timer, 30);
  expect(test.screen32.timer1, 0);
  expect(test.screen32.timer2, 0);
  expect(test.screen32.timer3, 0);
  expect(test.screen32.dsp_flg1, 0);
  expect(test.screen32.dsp_flg2, 0);
  expect(test.screen32.movie01_ext, 0);
  expect(test.screen32.movie02_ext, 0);
  expect(test.screen32.movie03_ext, 0);
  expect(test.screen32.movie04_ext, 0);
  expect(test.screen32.line_title, "");
  expect(test.screen32.line_title_ex, "");
  expect(test.screen32.line1, "");
  expect(test.screen32.line2, "");
  expect(test.screen32.line3, "");
  expect(test.screen32.line4, "");
  expect(test.screen32.line1_ex, "");
  expect(test.screen32.line2_ex, "");
  expect(test.screen32.line3_ex, "");
  expect(test.screen32.line4_ex, "");
  expect(test.screen32.sound_led1, 6214);
  expect(test.screen32.sound_led2, 0);
  expect(test.screen32.sound_led3, 0);
  expect(test.screen33.title, "交通系ICチャージ画面");
  expect(test.screen33.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen33.msg2, "");
  expect(test.screen33.msg1_size, 0);
  expect(test.screen33.msg2_size, 0);
  expect(test.screen33.sound1, 6005);
  expect(test.screen33.sound2, 6006);
  expect(test.screen33.sound3, 6015);
  expect(test.screen33.snd_timer, 20);
  expect(test.screen33.timer1, 0);
  expect(test.screen33.timer2, 0);
  expect(test.screen33.timer3, 0);
  expect(test.screen33.dsp_flg1, 0);
  expect(test.screen33.dsp_flg2, 0);
  expect(test.screen33.movie01_ext, 0);
  expect(test.screen33.movie02_ext, 0);
  expect(test.screen33.movie03_ext, 0);
  expect(test.screen33.movie04_ext, 0);
  expect(test.screen33.line_title, "交通系ICチャージ");
  expect(test.screen33.line_title_ex, "Reload Card");
  expect(test.screen33.line1, "お金を");
  expect(test.screen33.line2, "入れてください");
  expect(test.screen33.line3, "");
  expect(test.screen33.line4, "");
  expect(test.screen33.line1_ex, "Insert the payment.");
  expect(test.screen33.line2_ex, "");
  expect(test.screen33.line3_ex, "");
  expect(test.screen33.line4_ex, "");
  expect(test.screen33.sound_led1, 6216);
  expect(test.screen33.sound_led2, 6216);
  expect(test.screen33.sound_led3, 6015);
  expect(test.screen34.title, "交通系ICチャージタッチ画面");
  expect(test.screen34.msg1, "チャージ金額を確認し“交通系IC”をタッチしてください");
  expect(test.screen34.msg2, "");
  expect(test.screen34.msg1_size, 0);
  expect(test.screen34.msg2_size, 0);
  expect(test.screen34.sound1, 6153);
  expect(test.screen34.sound2, 6070);
  expect(test.screen34.sound3, 0);
  expect(test.screen34.snd_timer, 20);
  expect(test.screen34.timer1, 0);
  expect(test.screen34.timer2, 0);
  expect(test.screen34.timer3, 0);
  expect(test.screen34.dsp_flg1, 0);
  expect(test.screen34.dsp_flg2, 0);
  expect(test.screen34.movie01_ext, 0);
  expect(test.screen34.movie02_ext, 0);
  expect(test.screen34.movie03_ext, 0);
  expect(test.screen34.movie04_ext, 0);
  expect(test.screen34.line_title, "交通系ICチャージ");
  expect(test.screen34.line_title_ex, "Reload Card");
  expect(test.screen34.line1, "チャージ金額を確認し");
  expect(test.screen34.line2, "カードをタッチしてください");
  expect(test.screen34.line3, "");
  expect(test.screen34.line4, "");
  expect(test.screen34.line1_ex, "Tap your IC card");
  expect(test.screen34.line2_ex, "on the terminal.");
  expect(test.screen34.line3_ex, "");
  expect(test.screen34.line4_ex, "");
  expect(test.screen34.sound_led1, 6153);
  expect(test.screen34.sound_led2, 6070);
  expect(test.screen34.sound_led3, 0);
  expect(test.screen35.title, "チャージする、しない確認画面");
  expect(test.screen35.msg1, "残額が不足しています。チャージしますか？");
  expect(test.screen35.msg2, "");
  expect(test.screen35.msg1_size, 42);
  expect(test.screen35.msg2_size, 0);
  expect(test.screen35.sound1, 6218);
  expect(test.screen35.sound2, 0);
  expect(test.screen35.sound3, 0);
  expect(test.screen35.snd_timer, 30);
  expect(test.screen35.timer1, 0);
  expect(test.screen35.timer2, 0);
  expect(test.screen35.timer3, 0);
  expect(test.screen35.dsp_flg1, 0);
  expect(test.screen35.dsp_flg2, 0);
  expect(test.screen35.movie01_ext, 0);
  expect(test.screen35.movie02_ext, 0);
  expect(test.screen35.movie03_ext, 0);
  expect(test.screen35.movie04_ext, 0);
  expect(test.screen35.line_title, "");
  expect(test.screen35.line_title_ex, "");
  expect(test.screen35.line1, "");
  expect(test.screen35.line2, "");
  expect(test.screen35.line3, "");
  expect(test.screen35.line4, "");
  expect(test.screen35.line1_ex, "");
  expect(test.screen35.line2_ex, "");
  expect(test.screen35.line3_ex, "");
  expect(test.screen35.line4_ex, "");
  expect(test.screen35.sound_led1, 6218);
  expect(test.screen35.sound_led2, 0);
  expect(test.screen35.sound_led3, 0);
  expect(test.screen36.title, "残額不足！！現金併用する？しない？確認画面");
  expect(test.screen36.msg1, "残額が不足している為、支払いが完了出来ません");
  expect(test.screen36.msg2, "不足額を現金でお支払いください");
  expect(test.screen36.msg1_size, 44);
  expect(test.screen36.msg2_size, 30);
  expect(test.screen36.sound1, 6224);
  expect(test.screen36.sound2, 0);
  expect(test.screen36.sound3, 0);
  expect(test.screen36.snd_timer, 30);
  expect(test.screen36.timer1, 0);
  expect(test.screen36.timer2, 0);
  expect(test.screen36.timer3, 0);
  expect(test.screen36.dsp_flg1, 0);
  expect(test.screen36.dsp_flg2, 0);
  expect(test.screen36.movie01_ext, 0);
  expect(test.screen36.movie02_ext, 0);
  expect(test.screen36.movie03_ext, 0);
  expect(test.screen36.movie04_ext, 0);
  expect(test.screen36.line_title, "");
  expect(test.screen36.line_title_ex, "");
  expect(test.screen36.line1, "");
  expect(test.screen36.line2, "");
  expect(test.screen36.line3, "");
  expect(test.screen36.line4, "");
  expect(test.screen36.line1_ex, "");
  expect(test.screen36.line2_ex, "");
  expect(test.screen36.line3_ex, "");
  expect(test.screen36.line4_ex, "");
  expect(test.screen36.sound_led1, 6224);
  expect(test.screen36.sound_led2, 0);
  expect(test.screen36.sound_led3, 0);
  expect(test.screen37.title, "領収書？レシート？発行確認画面");
  expect(test.screen37.msg1, "どちらか一方のボタンを選択してください");
  expect(test.screen37.msg2, "Please touch either of the buttons.");
  expect(test.screen37.msg1_size, 38);
  expect(test.screen37.msg2_size, 35);
  expect(test.screen37.sound1, 6225);
  expect(test.screen37.sound2, 0);
  expect(test.screen37.sound3, 0);
  expect(test.screen37.snd_timer, 30);
  expect(test.screen37.timer1, 0);
  expect(test.screen37.timer2, 0);
  expect(test.screen37.timer3, 0);
  expect(test.screen37.dsp_flg1, 0);
  expect(test.screen37.dsp_flg2, 0);
  expect(test.screen37.movie01_ext, 0);
  expect(test.screen37.movie02_ext, 0);
  expect(test.screen37.movie03_ext, 0);
  expect(test.screen37.movie04_ext, 0);
  expect(test.screen37.line_title, "");
  expect(test.screen37.line_title_ex, "");
  expect(test.screen37.line1, "");
  expect(test.screen37.line2, "");
  expect(test.screen37.line3, "");
  expect(test.screen37.line4, "");
  expect(test.screen37.line1_ex, "");
  expect(test.screen37.line2_ex, "");
  expect(test.screen37.line3_ex, "");
  expect(test.screen37.line4_ex, "");
  expect(test.screen37.sound_led1, 6225);
  expect(test.screen37.sound_led2, 0);
  expect(test.screen37.sound_led3, 0);
  expect(test.screen38.title, "交通系ICチャージ入金完了画面");
  expect(test.screen38.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen38.msg2, "");
  expect(test.screen38.msg1_size, 0);
  expect(test.screen38.msg2_size, 0);
  expect(test.screen38.sound1, 6217);
  expect(test.screen38.sound2, 0);
  expect(test.screen38.sound3, 0);
  expect(test.screen38.snd_timer, 20);
  expect(test.screen38.timer1, 10);
  expect(test.screen38.timer2, 0);
  expect(test.screen38.timer3, 0);
  expect(test.screen38.dsp_flg1, 0);
  expect(test.screen38.dsp_flg2, 0);
  expect(test.screen38.movie01_ext, 0);
  expect(test.screen38.movie02_ext, 0);
  expect(test.screen38.movie03_ext, 0);
  expect(test.screen38.movie04_ext, 0);
  expect(test.screen38.line_title, "交通系ICチャージ");
  expect(test.screen38.line_title_ex, "Reload Card");
  expect(test.screen38.line1, "よろしければ");
  expect(test.screen38.line2, "チャージボタンを");
  expect(test.screen38.line3, "押してください");
  expect(test.screen38.line4, "");
  expect(test.screen38.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen38.line2_ex, "button to reload");
  expect(test.screen38.line3_ex, "your card.");
  expect(test.screen38.line4_ex, "");
  expect(test.screen38.sound_led1, 6179);
  expect(test.screen38.sound_led2, 6217);
  expect(test.screen38.sound_led3, 0);
  expect(test.screen39.title, "未精算支払画面");
  expect(test.screen39.msg1, "よろしければ未精算支払へを押してください");
  expect(test.screen39.msg2, "");
  expect(test.screen39.msg1_size, 0);
  expect(test.screen39.msg2_size, 0);
  expect(test.screen39.sound1, 6226);
  expect(test.screen39.sound2, 0);
  expect(test.screen39.sound3, 0);
  expect(test.screen39.snd_timer, 20);
  expect(test.screen39.timer1, 10);
  expect(test.screen39.timer2, 0);
  expect(test.screen39.timer3, 0);
  expect(test.screen39.dsp_flg1, 0);
  expect(test.screen39.dsp_flg2, 0);
  expect(test.screen39.movie01_ext, 0);
  expect(test.screen39.movie02_ext, 0);
  expect(test.screen39.movie03_ext, 0);
  expect(test.screen39.movie04_ext, 0);
  expect(test.screen39.line_title, "");
  expect(test.screen39.line_title_ex, "");
  expect(test.screen39.line1, "よろしければ");
  expect(test.screen39.line2, "未精算支払へを");
  expect(test.screen39.line3, "押してください");
  expect(test.screen39.line4, "");
  expect(test.screen39.line1_ex, "Touch the");
  expect(test.screen39.line2_ex, "\"Pay remaining balance\"");
  expect(test.screen39.line3_ex, "button.");
  expect(test.screen39.line4_ex, "");
  expect(test.screen39.sound_led1, 6226);
  expect(test.screen39.sound_led2, 0);
  expect(test.screen39.sound_led3, 0);
  expect(test.screen40.title, "ポイント機能なしカード通知画面");
  expect(test.screen40.msg1, "ポイント機能なしカードです");
  expect(test.screen40.msg2, "You cannot use this card to earn points.");
  expect(test.screen40.msg1_size, 26);
  expect(test.screen40.msg2_size, 40);
  expect(test.screen40.sound1, 6632);
  expect(test.screen40.sound2, 0);
  expect(test.screen40.sound3, 0);
  expect(test.screen40.snd_timer, 30);
  expect(test.screen40.timer1, 0);
  expect(test.screen40.timer2, 0);
  expect(test.screen40.timer3, 0);
  expect(test.screen40.dsp_flg1, 0);
  expect(test.screen40.dsp_flg2, 0);
  expect(test.screen40.movie01_ext, 0);
  expect(test.screen40.movie02_ext, 0);
  expect(test.screen40.movie03_ext, 0);
  expect(test.screen40.movie04_ext, 0);
  expect(test.screen40.line_title, "");
  expect(test.screen40.line_title_ex, "");
  expect(test.screen40.line1, "");
  expect(test.screen40.line2, "");
  expect(test.screen40.line3, "");
  expect(test.screen40.line4, "");
  expect(test.screen40.line1_ex, "");
  expect(test.screen40.line2_ex, "");
  expect(test.screen40.line3_ex, "");
  expect(test.screen40.line4_ex, "");
  expect(test.screen40.sound_led1, 6632);
  expect(test.screen40.sound_led2, 0);
  expect(test.screen40.sound_led3, 0);
  expect(test.screen41.title, "チケットお取り下さい画面");
  expect(test.screen41.msg1, "チケットをお取りください。");
  expect(test.screen41.msg2, "");
  expect(test.screen41.msg1_size, 0);
  expect(test.screen41.msg2_size, 0);
  expect(test.screen41.sound1, 6228);
  expect(test.screen41.sound2, 0);
  expect(test.screen41.sound3, 0);
  expect(test.screen41.snd_timer, 0);
  expect(test.screen41.timer1, 5);
  expect(test.screen41.timer2, 10);
  expect(test.screen41.timer3, 0);
  expect(test.screen41.dsp_flg1, 0);
  expect(test.screen41.dsp_flg2, 0);
  expect(test.screen41.movie01_ext, 0);
  expect(test.screen41.movie02_ext, 0);
  expect(test.screen41.movie03_ext, 0);
  expect(test.screen41.movie04_ext, 0);
  expect(test.screen41.line_title, "");
  expect(test.screen41.line_title_ex, "");
  expect(test.screen41.line1, "チケットとレシートを");
  expect(test.screen41.line2, "お受け取りください");
  expect(test.screen41.line3, "ありがとう");
  expect(test.screen41.line4, "ございました");
  expect(test.screen41.line1_ex, "Thank you.");
  expect(test.screen41.line2_ex, "Please take your receipt.");
  expect(test.screen41.line3_ex, "");
  expect(test.screen41.line4_ex, "");
  expect(test.screen41.sound_led1, 6228);
  expect(test.screen41.sound_led2, 0);
  expect(test.screen41.sound_led3, 0);
  expect(test.screen42.title, "クレジット利用画面<verifone>");
  expect(test.screen42.msg1, "クレジットでお会計ですね");
  expect(test.screen42.msg2, "");
  expect(test.screen42.msg1_size, 0);
  expect(test.screen42.msg2_size, 0);
  expect(test.screen42.sound1, 6007);
  expect(test.screen42.sound2, 6008);
  expect(test.screen42.sound3, 0);
  expect(test.screen42.snd_timer, 20);
  expect(test.screen42.timer1, 0);
  expect(test.screen42.timer2, 0);
  expect(test.screen42.timer3, 0);
  expect(test.screen42.dsp_flg1, 0);
  expect(test.screen42.dsp_flg2, 0);
  expect(test.screen42.movie01_ext, 0);
  expect(test.screen42.movie02_ext, 0);
  expect(test.screen42.movie03_ext, 0);
  expect(test.screen42.movie04_ext, 0);
  expect(test.screen42.line_title, "クレジットでお支払い");
  expect(test.screen42.line_title_ex, "Credit Card Payment");
  expect(test.screen42.line1, "お支払い金額を確認し");
  expect(test.screen42.line2, "カードを読ませてください");
  expect(test.screen42.line3, "");
  expect(test.screen42.line4, "");
  expect(test.screen42.line1_ex, "Please swipe");
  expect(test.screen42.line2_ex, "your credit card.");
  expect(test.screen42.line3_ex, "");
  expect(test.screen42.line4_ex, "");
  expect(test.screen42.sound_led1, 6007);
  expect(test.screen42.sound_led2, 6008);
  expect(test.screen42.sound_led3, 0);
  expect(test.screen43.title, "Edy利用画面<verifone>");
  expect(test.screen43.msg1, "Edyでお会計ですね");
  expect(test.screen43.msg2, "");
  expect(test.screen43.msg1_size, 0);
  expect(test.screen43.msg2_size, 0);
  expect(test.screen43.sound1, 6124);
  expect(test.screen43.sound2, 6125);
  expect(test.screen43.sound3, 0);
  expect(test.screen43.snd_timer, 20);
  expect(test.screen43.timer1, 0);
  expect(test.screen43.timer2, 0);
  expect(test.screen43.timer3, 0);
  expect(test.screen43.dsp_flg1, 0);
  expect(test.screen43.dsp_flg2, 0);
  expect(test.screen43.movie01_ext, 0);
  expect(test.screen43.movie02_ext, 0);
  expect(test.screen43.movie03_ext, 0);
  expect(test.screen43.movie04_ext, 0);
  expect(test.screen43.line_title, "Ｅｄｙでお支払い");
  expect(test.screen43.line_title_ex, "Edy Payment");
  expect(test.screen43.line1, "お支払い金額を確認し");
  expect(test.screen43.line2, "カードをタッチしてください");
  expect(test.screen43.line3, "");
  expect(test.screen43.line4, "");
  expect(test.screen43.line1_ex, "Tap your IC card");
  expect(test.screen43.line2_ex, "on the terminal.");
  expect(test.screen43.line3_ex, "");
  expect(test.screen43.line4_ex, "");
  expect(test.screen43.sound_led1, 6124);
  expect(test.screen43.sound_led2, 6125);
  expect(test.screen43.sound_led3, 0);
  expect(test.screen44.title, "iD利用画面<verifone>");
  expect(test.screen44.msg1, "iDでお会計ですね");
  expect(test.screen44.msg2, "");
  expect(test.screen44.msg1_size, 0);
  expect(test.screen44.msg2_size, 0);
  expect(test.screen44.sound1, 6124);
  expect(test.screen44.sound2, 6255);
  expect(test.screen44.sound3, 0);
  expect(test.screen44.snd_timer, 20);
  expect(test.screen44.timer1, 0);
  expect(test.screen44.timer2, 0);
  expect(test.screen44.timer3, 0);
  expect(test.screen44.dsp_flg1, 0);
  expect(test.screen44.dsp_flg2, 0);
  expect(test.screen44.movie01_ext, 0);
  expect(test.screen44.movie02_ext, 0);
  expect(test.screen44.movie03_ext, 0);
  expect(test.screen44.movie04_ext, 0);
  expect(test.screen44.line_title, "ｉＤでお支払い");
  expect(test.screen44.line_title_ex, "iD Payment");
  expect(test.screen44.line1, "お支払い金額を確認し");
  expect(test.screen44.line2, "カードをタッチしてください");
  expect(test.screen44.line3, "");
  expect(test.screen44.line4, "");
  expect(test.screen44.line1_ex, "Tap your IC card");
  expect(test.screen44.line2_ex, "on the terminal.");
  expect(test.screen44.line3_ex, "");
  expect(test.screen44.line4_ex, "");
  expect(test.screen44.sound_led1, 6124);
  expect(test.screen44.sound_led2, 6255);
  expect(test.screen44.sound_led3, 0);
  expect(test.screen45.title, "交通系IC利用画面<verifone>");
  expect(test.screen45.msg1, "交通系ICでお会計ですね");
  expect(test.screen45.msg2, "");
  expect(test.screen45.msg1_size, 0);
  expect(test.screen45.msg2_size, 0);
  expect(test.screen45.sound1, 6124);
  expect(test.screen45.sound2, 6153);
  expect(test.screen45.sound3, 0);
  expect(test.screen45.snd_timer, 20);
  expect(test.screen45.timer1, 0);
  expect(test.screen45.timer2, 0);
  expect(test.screen45.timer3, 0);
  expect(test.screen45.dsp_flg1, 0);
  expect(test.screen45.dsp_flg2, 0);
  expect(test.screen45.movie01_ext, 0);
  expect(test.screen45.movie02_ext, 0);
  expect(test.screen45.movie03_ext, 0);
  expect(test.screen45.movie04_ext, 0);
  expect(test.screen45.line_title, "交通系ＩＣでお支払い");
  expect(test.screen45.line_title_ex, "IC Card Payment");
  expect(test.screen45.line1, "お支払い金額を確認し");
  expect(test.screen45.line2, "カードをタッチしてください");
  expect(test.screen45.line3, "");
  expect(test.screen45.line4, "");
  expect(test.screen45.line1_ex, "Tap your IC card");
  expect(test.screen45.line2_ex, "on the terminal.");
  expect(test.screen45.line3_ex, "");
  expect(test.screen45.line4_ex, "");
  expect(test.screen45.sound_led1, 6124);
  expect(test.screen45.sound_led2, 6153);
  expect(test.screen45.sound_led3, 0);
  expect(test.screen46.title, "QUICPay利用画面<verifone>");
  expect(test.screen46.msg1, "QUICPayでお会計ですね");
  expect(test.screen46.msg2, "");
  expect(test.screen46.msg1_size, 0);
  expect(test.screen46.msg2_size, 0);
  expect(test.screen46.sound1, 6124);
  expect(test.screen46.sound2, 6254);
  expect(test.screen46.sound3, 0);
  expect(test.screen46.snd_timer, 20);
  expect(test.screen46.timer1, 0);
  expect(test.screen46.timer2, 0);
  expect(test.screen46.timer3, 0);
  expect(test.screen46.dsp_flg1, 0);
  expect(test.screen46.dsp_flg2, 0);
  expect(test.screen46.movie01_ext, 0);
  expect(test.screen46.movie02_ext, 0);
  expect(test.screen46.movie03_ext, 0);
  expect(test.screen46.movie04_ext, 0);
  expect(test.screen46.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen46.line_title_ex, "QUICPay Payment");
  expect(test.screen46.line1, "お支払い金額を確認し");
  expect(test.screen46.line2, "カードをタッチしてください");
  expect(test.screen46.line3, "");
  expect(test.screen46.line4, "");
  expect(test.screen46.line1_ex, "Tap your IC card");
  expect(test.screen46.line2_ex, "on the terminal.");
  expect(test.screen46.line3_ex, "");
  expect(test.screen46.line4_ex, "");
  expect(test.screen46.sound_led1, 6124);
  expect(test.screen46.sound_led2, 6254);
  expect(test.screen46.sound_led3, 0);
  expect(test.screen47.title, "WAON利用画面<verifone>");
  expect(test.screen47.msg1, "WAONでお会計ですね");
  expect(test.screen47.msg2, "");
  expect(test.screen47.msg1_size, 0);
  expect(test.screen47.msg2_size, 0);
  expect(test.screen47.sound1, 6124);
  expect(test.screen47.sound2, 6256);
  expect(test.screen47.sound3, 0);
  expect(test.screen47.snd_timer, 20);
  expect(test.screen47.timer1, 0);
  expect(test.screen47.timer2, 0);
  expect(test.screen47.timer3, 0);
  expect(test.screen47.dsp_flg1, 0);
  expect(test.screen47.dsp_flg2, 0);
  expect(test.screen47.movie01_ext, 0);
  expect(test.screen47.movie02_ext, 0);
  expect(test.screen47.movie03_ext, 0);
  expect(test.screen47.movie04_ext, 0);
  expect(test.screen47.line_title, "ＷＡＯＮでお支払い");
  expect(test.screen47.line_title_ex, "WAON Payment");
  expect(test.screen47.line1, "お支払い金額を確認し");
  expect(test.screen47.line2, "カードをタッチしてください");
  expect(test.screen47.line3, "");
  expect(test.screen47.line4, "");
  expect(test.screen47.line1_ex, "Tap your IC card");
  expect(test.screen47.line2_ex, "on the terminal.");
  expect(test.screen47.line3_ex, "");
  expect(test.screen47.line4_ex, "");
  expect(test.screen47.sound_led1, 6124);
  expect(test.screen47.sound_led2, 6256);
  expect(test.screen47.sound_led3, 0);
  expect(test.screen48.title, "nanaco利用画面<verifone>");
  expect(test.screen48.msg1, "nanacoでお会計ですね");
  expect(test.screen48.msg2, "");
  expect(test.screen48.msg1_size, 0);
  expect(test.screen48.msg2_size, 0);
  expect(test.screen48.sound1, 6124);
  expect(test.screen48.sound2, 6257);
  expect(test.screen48.sound3, 0);
  expect(test.screen48.snd_timer, 20);
  expect(test.screen48.timer1, 0);
  expect(test.screen48.timer2, 0);
  expect(test.screen48.timer3, 0);
  expect(test.screen48.dsp_flg1, 0);
  expect(test.screen48.dsp_flg2, 0);
  expect(test.screen48.movie01_ext, 0);
  expect(test.screen48.movie02_ext, 0);
  expect(test.screen48.movie03_ext, 0);
  expect(test.screen48.movie04_ext, 0);
  expect(test.screen48.line_title, "ｎａｎａｃｏでお支払い");
  expect(test.screen48.line_title_ex, "nanaco Payment");
  expect(test.screen48.line1, "お支払い金額を確認し");
  expect(test.screen48.line2, "カードをタッチしてください");
  expect(test.screen48.line3, "");
  expect(test.screen48.line4, "");
  expect(test.screen48.line1_ex, "Tap your IC card");
  expect(test.screen48.line2_ex, "on the terminal.");
  expect(test.screen48.line3_ex, "");
  expect(test.screen48.line4_ex, "");
  expect(test.screen48.sound_led1, 6124);
  expect(test.screen48.sound_led2, 6257);
  expect(test.screen48.sound_led3, 0);
  expect(test.screen49.title, "銀聯利用画面<verifone>");
  expect(test.screen49.msg1, "銀聯でお会計ですね");
  expect(test.screen49.msg2, "");
  expect(test.screen49.msg1_size, 0);
  expect(test.screen49.msg2_size, 0);
  expect(test.screen49.sound1, 6258);
  expect(test.screen49.sound2, 6252);
  expect(test.screen49.sound3, 0);
  expect(test.screen49.snd_timer, 20);
  expect(test.screen49.timer1, 0);
  expect(test.screen49.timer2, 0);
  expect(test.screen49.timer3, 0);
  expect(test.screen49.dsp_flg1, 0);
  expect(test.screen49.dsp_flg2, 0);
  expect(test.screen49.movie01_ext, 0);
  expect(test.screen49.movie02_ext, 0);
  expect(test.screen49.movie03_ext, 0);
  expect(test.screen49.movie04_ext, 0);
  expect(test.screen49.line_title, "銀聯でお支払い");
  expect(test.screen49.line_title_ex, "UnionPay Card Payment");
  expect(test.screen49.line1, "お支払い金額を確認し");
  expect(test.screen49.line2, "カードを読ませてください");
  expect(test.screen49.line3, "");
  expect(test.screen49.line4, "");
  expect(test.screen49.line1_ex, "Please swipe");
  expect(test.screen49.line2_ex, "your unionpay card.");
  expect(test.screen49.line3_ex, "");
  expect(test.screen49.line4_ex, "");
  expect(test.screen49.sound_led1, 6258);
  expect(test.screen49.sound_led2, 6252);
  expect(test.screen49.sound_led3, 0);
  expect(test.screen50.title, "プリカ利用画面<verifone>");
  expect(test.screen50.msg1, "プリペイドカードでお会計ですね");
  expect(test.screen50.msg2, "");
  expect(test.screen50.msg1_size, 0);
  expect(test.screen50.msg2_size, 0);
  expect(test.screen50.sound1, 6258);
  expect(test.screen50.sound2, 6253);
  expect(test.screen50.sound3, 0);
  expect(test.screen50.snd_timer, 20);
  expect(test.screen50.timer1, 0);
  expect(test.screen50.timer2, 0);
  expect(test.screen50.timer3, 0);
  expect(test.screen50.dsp_flg1, 0);
  expect(test.screen50.dsp_flg2, 0);
  expect(test.screen50.movie01_ext, 0);
  expect(test.screen50.movie02_ext, 0);
  expect(test.screen50.movie03_ext, 0);
  expect(test.screen50.movie04_ext, 0);
  expect(test.screen50.line_title, "プリカでお支払い");
  expect(test.screen50.line_title_ex, "Prepaid Card Payment");
  expect(test.screen50.line1, "お支払い金額を確認し");
  expect(test.screen50.line2, "カードを読ませてください");
  expect(test.screen50.line3, "");
  expect(test.screen50.line4, "");
  expect(test.screen50.line1_ex, "Please swipe");
  expect(test.screen50.line2_ex, "your prepaid card.");
  expect(test.screen50.line3_ex, "");
  expect(test.screen50.line4_ex, "");
  expect(test.screen50.sound_led1, 6258);
  expect(test.screen50.sound_led2, 6253);
  expect(test.screen50.sound_led3, 0);
  expect(test.screen51.title, "Edy入金画面<verifone>");
  expect(test.screen51.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen51.msg2, "");
  expect(test.screen51.msg1_size, 0);
  expect(test.screen51.msg2_size, 0);
  expect(test.screen51.sound1, 6216);
  expect(test.screen51.sound2, 6216);
  expect(test.screen51.sound3, "");
  expect(test.screen51.snd_timer, 20);
  expect(test.screen51.timer1, 0);
  expect(test.screen51.timer2, 0);
  expect(test.screen51.timer3, 0);
  expect(test.screen51.dsp_flg1, 0);
  expect(test.screen51.dsp_flg2, 0);
  expect(test.screen51.movie01_ext, 0);
  expect(test.screen51.movie02_ext, 0);
  expect(test.screen51.movie03_ext, 0);
  expect(test.screen51.movie04_ext, 0);
  expect(test.screen51.line_title, "Ｅｄｙチャージ");
  expect(test.screen51.line_title_ex, "Reload Card");
  expect(test.screen51.line1, "お金を");
  expect(test.screen51.line2, "入れてください");
  expect(test.screen51.line3, "");
  expect(test.screen51.line4, "");
  expect(test.screen51.line1_ex, "Insert the payment.");
  expect(test.screen51.line2_ex, "");
  expect(test.screen51.line3_ex, "");
  expect(test.screen51.line4_ex, "");
  expect(test.screen51.sound_led1, 6216);
  expect(test.screen51.sound_led2, 6216);
  expect(test.screen51.sound_led3, "");
  expect(test.screen52.title, "Edyチャージ画面<verifone>");
  expect(test.screen52.msg1, "“Edy”をタッチしてください");
  expect(test.screen52.msg2, "");
  expect(test.screen52.msg1_size, 0);
  expect(test.screen52.msg2_size, 0);
  expect(test.screen52.sound1, 6009);
  expect(test.screen52.sound2, 6009);
  expect(test.screen52.sound3, 0);
  expect(test.screen52.snd_timer, 20);
  expect(test.screen52.timer1, 0);
  expect(test.screen52.timer2, 0);
  expect(test.screen52.timer3, 0);
  expect(test.screen52.dsp_flg1, 0);
  expect(test.screen52.dsp_flg2, 0);
  expect(test.screen52.movie01_ext, 0);
  expect(test.screen52.movie02_ext, 0);
  expect(test.screen52.movie03_ext, 0);
  expect(test.screen52.movie04_ext, 0);
  expect(test.screen52.line_title, "Ｅｄｙチャージ");
  expect(test.screen52.line_title_ex, "Reload Card");
  expect(test.screen52.line1, "チャージ金額を確認し");
  expect(test.screen52.line2, "カードをタッチしてください");
  expect(test.screen52.line3, "");
  expect(test.screen52.line4, "");
  expect(test.screen52.line1_ex, "Tap your IC card");
  expect(test.screen52.line2_ex, "on the terminal.");
  expect(test.screen52.line3_ex, "");
  expect(test.screen52.line4_ex, "");
  expect(test.screen52.sound_led1, 6009);
  expect(test.screen52.sound_led2, 6009);
  expect(test.screen52.sound_led3, 0);
  expect(test.screen53.title, "Edy入金終了画面<verifone>");
  expect(test.screen53.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen53.msg2, "");
  expect(test.screen53.msg1_size, 0);
  expect(test.screen53.msg2_size, 0);
  expect(test.screen53.sound1, 6217);
  expect(test.screen53.sound2, 6217);
  expect(test.screen53.sound3, 0);
  expect(test.screen53.snd_timer, 20);
  expect(test.screen53.timer1, 10);
  expect(test.screen53.timer2, 0);
  expect(test.screen53.timer3, 0);
  expect(test.screen53.dsp_flg1, 0);
  expect(test.screen53.dsp_flg2, 0);
  expect(test.screen53.movie01_ext, 0);
  expect(test.screen53.movie02_ext, 0);
  expect(test.screen53.movie03_ext, 0);
  expect(test.screen53.movie04_ext, 0);
  expect(test.screen53.line_title, "Ｅｄｙチャージ");
  expect(test.screen53.line_title_ex, "Reload Card");
  expect(test.screen53.line1, "よろしければ");
  expect(test.screen53.line2, "チャージボタンを");
  expect(test.screen53.line3, "押してください");
  expect(test.screen53.line4, "");
  expect(test.screen53.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen53.line2_ex, "button to reload");
  expect(test.screen53.line3_ex, "your card.");
  expect(test.screen53.line4_ex, "");
  expect(test.screen53.sound_led1, 6217);
  expect(test.screen53.sound_led2, 6217);
  expect(test.screen53.sound_led3, 0);
  expect(test.screen54.title, "交通系IC入金画面<verifone>");
  expect(test.screen54.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen54.msg2, "");
  expect(test.screen54.msg1_size, 0);
  expect(test.screen54.msg2_size, 0);
  expect(test.screen54.sound1, 6216);
  expect(test.screen54.sound2, 6216);
  expect(test.screen54.sound3, "");
  expect(test.screen54.snd_timer, 20);
  expect(test.screen54.timer1, 0);
  expect(test.screen54.timer2, 0);
  expect(test.screen54.timer3, 0);
  expect(test.screen54.dsp_flg1, 0);
  expect(test.screen54.dsp_flg2, 0);
  expect(test.screen54.movie01_ext, 0);
  expect(test.screen54.movie02_ext, 0);
  expect(test.screen54.movie03_ext, 0);
  expect(test.screen54.movie04_ext, 0);
  expect(test.screen54.line_title, "交通系ＩＣチャージ");
  expect(test.screen54.line_title_ex, "Reload Card");
  expect(test.screen54.line1, "お金を");
  expect(test.screen54.line2, "入れてください");
  expect(test.screen54.line3, "");
  expect(test.screen54.line4, "");
  expect(test.screen54.line1_ex, "Insert the payment.");
  expect(test.screen54.line2_ex, "");
  expect(test.screen54.line3_ex, "");
  expect(test.screen54.line4_ex, "");
  expect(test.screen54.sound_led1, 6216);
  expect(test.screen54.sound_led2, 6216);
  expect(test.screen54.sound_led3, "");
  expect(test.screen55.title, "交通系ICチャージ画面<verifone>");
  expect(test.screen55.msg1, "“交通系IC”をタッチしてください");
  expect(test.screen55.msg2, "");
  expect(test.screen55.msg1_size, 0);
  expect(test.screen55.msg2_size, 0);
  expect(test.screen55.sound1, 6009);
  expect(test.screen55.sound2, 6009);
  expect(test.screen55.sound3, 0);
  expect(test.screen55.snd_timer, 20);
  expect(test.screen55.timer1, 0);
  expect(test.screen55.timer2, 0);
  expect(test.screen55.timer3, 0);
  expect(test.screen55.dsp_flg1, 0);
  expect(test.screen55.dsp_flg2, 0);
  expect(test.screen55.movie01_ext, 0);
  expect(test.screen55.movie02_ext, 0);
  expect(test.screen55.movie03_ext, 0);
  expect(test.screen55.movie04_ext, 0);
  expect(test.screen55.line_title, "交通系ＩＣチャージ");
  expect(test.screen55.line_title_ex, "Reload Card");
  expect(test.screen55.line1, "チャージ金額を確認し");
  expect(test.screen55.line2, "カードをタッチしてください");
  expect(test.screen55.line3, "");
  expect(test.screen55.line4, "");
  expect(test.screen55.line1_ex, "Tap your IC card");
  expect(test.screen55.line2_ex, "on the terminal.");
  expect(test.screen55.line3_ex, "");
  expect(test.screen55.line4_ex, "");
  expect(test.screen55.sound_led1, 6009);
  expect(test.screen55.sound_led2, 6009);
  expect(test.screen55.sound_led3, 0);
  expect(test.screen56.title, "交通系IC入金終了画面<verifone>");
  expect(test.screen56.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen56.msg2, "");
  expect(test.screen56.msg1_size, 0);
  expect(test.screen56.msg2_size, 0);
  expect(test.screen56.sound1, 6217);
  expect(test.screen56.sound2, 6217);
  expect(test.screen56.sound3, 0);
  expect(test.screen56.snd_timer, 20);
  expect(test.screen56.timer1, 10);
  expect(test.screen56.timer2, 0);
  expect(test.screen56.timer3, 0);
  expect(test.screen56.dsp_flg1, 0);
  expect(test.screen56.dsp_flg2, 0);
  expect(test.screen56.movie01_ext, 0);
  expect(test.screen56.movie02_ext, 0);
  expect(test.screen56.movie03_ext, 0);
  expect(test.screen56.movie04_ext, 0);
  expect(test.screen56.line_title, "交通系ＩＣチャージ");
  expect(test.screen56.line_title_ex, "Reload Card");
  expect(test.screen56.line1, "よろしければ");
  expect(test.screen56.line2, "チャージボタンを");
  expect(test.screen56.line3, "押してください");
  expect(test.screen56.line4, "");
  expect(test.screen56.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen56.line2_ex, "button to reload");
  expect(test.screen56.line3_ex, "your card.");
  expect(test.screen56.line4_ex, "");
  expect(test.screen56.sound_led1, 6217);
  expect(test.screen56.sound_led2, 6217);
  expect(test.screen56.sound_led3, 0);
  expect(test.screen57.title, "WAON入金画面<verifone>");
  expect(test.screen57.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen57.msg2, "");
  expect(test.screen57.msg1_size, 0);
  expect(test.screen57.msg2_size, 0);
  expect(test.screen57.sound1, 6216);
  expect(test.screen57.sound2, 6216);
  expect(test.screen57.sound3, "");
  expect(test.screen57.snd_timer, 20);
  expect(test.screen57.timer1, 0);
  expect(test.screen57.timer2, 0);
  expect(test.screen57.timer3, 0);
  expect(test.screen57.dsp_flg1, 0);
  expect(test.screen57.dsp_flg2, 0);
  expect(test.screen57.movie01_ext, 0);
  expect(test.screen57.movie02_ext, 0);
  expect(test.screen57.movie03_ext, 0);
  expect(test.screen57.movie04_ext, 0);
  expect(test.screen57.line_title, "ＷＡＯＮチャージ");
  expect(test.screen57.line_title_ex, "Reload Card");
  expect(test.screen57.line1, "お金を");
  expect(test.screen57.line2, "入れてください");
  expect(test.screen57.line3, "");
  expect(test.screen57.line4, "");
  expect(test.screen57.line1_ex, "Insert the payment.");
  expect(test.screen57.line2_ex, "");
  expect(test.screen57.line3_ex, "");
  expect(test.screen57.line4_ex, "");
  expect(test.screen57.sound_led1, 6216);
  expect(test.screen57.sound_led2, 6216);
  expect(test.screen57.sound_led3, "");
  expect(test.screen58.title, "WAONチャージ画面<verifone>");
  expect(test.screen58.msg1, "“WAON”をタッチしてください");
  expect(test.screen58.msg2, "");
  expect(test.screen58.msg1_size, 0);
  expect(test.screen58.msg2_size, 0);
  expect(test.screen58.sound1, 6009);
  expect(test.screen58.sound2, 6009);
  expect(test.screen58.sound3, 0);
  expect(test.screen58.snd_timer, 20);
  expect(test.screen58.timer1, 0);
  expect(test.screen58.timer2, 0);
  expect(test.screen58.timer3, 0);
  expect(test.screen58.dsp_flg1, 0);
  expect(test.screen58.dsp_flg2, 0);
  expect(test.screen58.movie01_ext, 0);
  expect(test.screen58.movie02_ext, 0);
  expect(test.screen58.movie03_ext, 0);
  expect(test.screen58.movie04_ext, 0);
  expect(test.screen58.line_title, "ＷＡＯＮチャージ");
  expect(test.screen58.line_title_ex, "Reload Card");
  expect(test.screen58.line1, "チャージ金額を確認し");
  expect(test.screen58.line2, "カードをタッチしてください");
  expect(test.screen58.line3, "");
  expect(test.screen58.line4, "");
  expect(test.screen58.line1_ex, "Tap your IC card");
  expect(test.screen58.line2_ex, "on the terminal.");
  expect(test.screen58.line3_ex, "");
  expect(test.screen58.line4_ex, "");
  expect(test.screen58.sound_led1, 6009);
  expect(test.screen58.sound_led2, 6009);
  expect(test.screen58.sound_led3, 0);
  expect(test.screen59.title, "WAON入金終了画面<verifone>");
  expect(test.screen59.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen59.msg2, "");
  expect(test.screen59.msg1_size, 0);
  expect(test.screen59.msg2_size, 0);
  expect(test.screen59.sound1, 6217);
  expect(test.screen59.sound2, 6217);
  expect(test.screen59.sound3, 0);
  expect(test.screen59.snd_timer, 20);
  expect(test.screen59.timer1, 10);
  expect(test.screen59.timer2, 0);
  expect(test.screen59.timer3, 0);
  expect(test.screen59.dsp_flg1, 0);
  expect(test.screen59.dsp_flg2, 0);
  expect(test.screen59.movie01_ext, 0);
  expect(test.screen59.movie02_ext, 0);
  expect(test.screen59.movie03_ext, 0);
  expect(test.screen59.movie04_ext, 0);
  expect(test.screen59.line_title, "ＷＡＯＮチャージ");
  expect(test.screen59.line_title_ex, "Reload Card");
  expect(test.screen59.line1, "よろしければ");
  expect(test.screen59.line2, "チャージボタンを");
  expect(test.screen59.line3, "押してください");
  expect(test.screen59.line4, "");
  expect(test.screen59.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen59.line2_ex, "button to reload");
  expect(test.screen59.line3_ex, "your card.");
  expect(test.screen59.line4_ex, "");
  expect(test.screen59.sound_led1, 6217);
  expect(test.screen59.sound_led2, 6217);
  expect(test.screen59.sound_led3, 0);
  expect(test.screen60.title, "nanaco入金画面<verifone>");
  expect(test.screen60.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen60.msg2, "");
  expect(test.screen60.msg1_size, 0);
  expect(test.screen60.msg2_size, 0);
  expect(test.screen60.sound1, 6216);
  expect(test.screen60.sound2, 6216);
  expect(test.screen60.sound3, "");
  expect(test.screen60.snd_timer, 20);
  expect(test.screen60.timer1, 0);
  expect(test.screen60.timer2, 0);
  expect(test.screen60.timer3, 0);
  expect(test.screen60.dsp_flg1, 0);
  expect(test.screen60.dsp_flg2, 0);
  expect(test.screen60.movie01_ext, 0);
  expect(test.screen60.movie02_ext, 0);
  expect(test.screen60.movie03_ext, 0);
  expect(test.screen60.movie04_ext, 0);
  expect(test.screen60.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen60.line_title_ex, "Reload Card");
  expect(test.screen60.line1, "お金を");
  expect(test.screen60.line2, "入れてください");
  expect(test.screen60.line3, "");
  expect(test.screen60.line4, "");
  expect(test.screen60.line1_ex, "Insert the payment.");
  expect(test.screen60.line2_ex, "");
  expect(test.screen60.line3_ex, "");
  expect(test.screen60.line4_ex, "");
  expect(test.screen60.sound_led1, 6216);
  expect(test.screen60.sound_led2, 6216);
  expect(test.screen60.sound_led3, "");
  expect(test.screen61.title, "nanacoチャージ画面<verifone>");
  expect(test.screen61.msg1, "“nanaco”をタッチしてください");
  expect(test.screen61.msg2, "");
  expect(test.screen61.msg1_size, 0);
  expect(test.screen61.msg2_size, 0);
  expect(test.screen61.sound1, 6009);
  expect(test.screen61.sound2, 6009);
  expect(test.screen61.sound3, 0);
  expect(test.screen61.snd_timer, 20);
  expect(test.screen61.timer1, 0);
  expect(test.screen61.timer2, 0);
  expect(test.screen61.timer3, 0);
  expect(test.screen61.dsp_flg1, 0);
  expect(test.screen61.dsp_flg2, 0);
  expect(test.screen61.movie01_ext, 0);
  expect(test.screen61.movie02_ext, 0);
  expect(test.screen61.movie03_ext, 0);
  expect(test.screen61.movie04_ext, 0);
  expect(test.screen61.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen61.line_title_ex, "Reload Card");
  expect(test.screen61.line1, "チャージ金額を確認し");
  expect(test.screen61.line2, "カードをタッチしてください");
  expect(test.screen61.line3, "");
  expect(test.screen61.line4, "");
  expect(test.screen61.line1_ex, "Tap your IC card");
  expect(test.screen61.line2_ex, "on the terminal.");
  expect(test.screen61.line3_ex, "");
  expect(test.screen61.line4_ex, "");
  expect(test.screen61.sound_led1, 6009);
  expect(test.screen61.sound_led2, 6009);
  expect(test.screen61.sound_led3, 0);
  expect(test.screen62.title, "nanaco入金終了画面<verifone>");
  expect(test.screen62.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen62.msg2, "");
  expect(test.screen62.msg1_size, 0);
  expect(test.screen62.msg2_size, 0);
  expect(test.screen62.sound1, 6217);
  expect(test.screen62.sound2, 6217);
  expect(test.screen62.sound3, 0);
  expect(test.screen62.snd_timer, 20);
  expect(test.screen62.timer1, 10);
  expect(test.screen62.timer2, 0);
  expect(test.screen62.timer3, 0);
  expect(test.screen62.dsp_flg1, 0);
  expect(test.screen62.dsp_flg2, 0);
  expect(test.screen62.movie01_ext, 0);
  expect(test.screen62.movie02_ext, 0);
  expect(test.screen62.movie03_ext, 0);
  expect(test.screen62.movie04_ext, 0);
  expect(test.screen62.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen62.line_title_ex, "Reload Card");
  expect(test.screen62.line1, "よろしければ");
  expect(test.screen62.line2, "チャージボタンを");
  expect(test.screen62.line3, "押してください");
  expect(test.screen62.line4, "");
  expect(test.screen62.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen62.line2_ex, "button to reload");
  expect(test.screen62.line3_ex, "your card.");
  expect(test.screen62.line4_ex, "");
  expect(test.screen62.sound_led1, 6217);
  expect(test.screen62.sound_led2, 6217);
  expect(test.screen62.sound_led3, 0);
  expect(test.screen63.title, "プリカ入金画面<verifone>");
  expect(test.screen63.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen63.msg2, "");
  expect(test.screen63.msg1_size, 0);
  expect(test.screen63.msg2_size, 0);
  expect(test.screen63.sound1, 6216);
  expect(test.screen63.sound2, 6216);
  expect(test.screen63.sound3, "");
  expect(test.screen63.snd_timer, 20);
  expect(test.screen63.timer1, 0);
  expect(test.screen63.timer2, 0);
  expect(test.screen63.timer3, 0);
  expect(test.screen63.dsp_flg1, 0);
  expect(test.screen63.dsp_flg2, 0);
  expect(test.screen63.movie01_ext, 0);
  expect(test.screen63.movie02_ext, 0);
  expect(test.screen63.movie03_ext, 0);
  expect(test.screen63.movie04_ext, 0);
  expect(test.screen63.line_title, "プリカチャージ");
  expect(test.screen63.line_title_ex, "Reload Card");
  expect(test.screen63.line1, "お金を");
  expect(test.screen63.line2, "入れてください");
  expect(test.screen63.line3, "");
  expect(test.screen63.line4, "");
  expect(test.screen63.line1_ex, "Insert the payment.");
  expect(test.screen63.line2_ex, "");
  expect(test.screen63.line3_ex, "");
  expect(test.screen63.line4_ex, "");
  expect(test.screen63.sound_led1, 6216);
  expect(test.screen63.sound_led2, 6216);
  expect(test.screen63.sound_led3, "");
  expect(test.screen64.title, "プリカチャージ画面<verifone>");
  expect(test.screen64.msg1, "“プリペイドカード”を読ませてください");
  expect(test.screen64.msg2, "");
  expect(test.screen64.msg1_size, 0);
  expect(test.screen64.msg2_size, 0);
  expect(test.screen64.sound1, 6258);
  expect(test.screen64.sound2, 6258);
  expect(test.screen64.sound3, 0);
  expect(test.screen64.snd_timer, 20);
  expect(test.screen64.timer1, 0);
  expect(test.screen64.timer2, 0);
  expect(test.screen64.timer3, 0);
  expect(test.screen64.dsp_flg1, 0);
  expect(test.screen64.dsp_flg2, 0);
  expect(test.screen64.movie01_ext, 0);
  expect(test.screen64.movie02_ext, 0);
  expect(test.screen64.movie03_ext, 0);
  expect(test.screen64.movie04_ext, 0);
  expect(test.screen64.line_title, "プリカチャージ");
  expect(test.screen64.line_title_ex, "Reload Card");
  expect(test.screen64.line1, "チャージ金額を確認し");
  expect(test.screen64.line2, "カードを読ませてください");
  expect(test.screen64.line3, "");
  expect(test.screen64.line4, "");
  expect(test.screen64.line1_ex, "Please swipe");
  expect(test.screen64.line2_ex, "your prepaid card.");
  expect(test.screen64.line3_ex, "");
  expect(test.screen64.line4_ex, "");
  expect(test.screen64.sound_led1, 6258);
  expect(test.screen64.sound_led2, 6258);
  expect(test.screen64.sound_led3, 0);
  expect(test.screen65.title, "プリカ入金終了画面<verifone>");
  expect(test.screen65.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen65.msg2, "");
  expect(test.screen65.msg1_size, 0);
  expect(test.screen65.msg2_size, 0);
  expect(test.screen65.sound1, 6217);
  expect(test.screen65.sound2, 6217);
  expect(test.screen65.sound3, 0);
  expect(test.screen65.snd_timer, 20);
  expect(test.screen65.timer1, 10);
  expect(test.screen65.timer2, 0);
  expect(test.screen65.timer3, 0);
  expect(test.screen65.dsp_flg1, 0);
  expect(test.screen65.dsp_flg2, 0);
  expect(test.screen65.movie01_ext, 0);
  expect(test.screen65.movie02_ext, 0);
  expect(test.screen65.movie03_ext, 0);
  expect(test.screen65.movie04_ext, 0);
  expect(test.screen65.line_title, "プリカチャージ");
  expect(test.screen65.line_title_ex, "Reload Card");
  expect(test.screen65.line1, "よろしければ");
  expect(test.screen65.line2, "チャージボタンを");
  expect(test.screen65.line3, "押してください");
  expect(test.screen65.line4, "");
  expect(test.screen65.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen65.line2_ex, "button to reload");
  expect(test.screen65.line3_ex, "your card.");
  expect(test.screen65.line4_ex, "");
  expect(test.screen65.sound_led1, 6217);
  expect(test.screen65.sound_led2, 6217);
  expect(test.screen65.sound_led3, 0);
  expect(test.screen67.title, "店員操作中画面<対面>");
  expect(test.screen67.msg1, "");
  expect(test.screen67.msg2, "");
  expect(test.screen67.msg1_size, 0);
  expect(test.screen67.msg2_size, 0);
  expect(test.screen67.sound1, 0);
  expect(test.screen67.sound2, 0);
  expect(test.screen67.sound3, 0);
  expect(test.screen67.snd_timer, 0);
  expect(test.screen67.timer1, 0);
  expect(test.screen67.timer2, 0);
  expect(test.screen67.timer3, 0);
  expect(test.screen67.dsp_flg1, 0);
  expect(test.screen67.dsp_flg2, 0);
  expect(test.screen67.movie01_ext, 0);
  expect(test.screen67.movie02_ext, 0);
  expect(test.screen67.movie03_ext, 0);
  expect(test.screen67.movie04_ext, 0);
  expect(test.screen67.line_title, "");
  expect(test.screen67.line_title_ex, "");
  expect(test.screen67.line1, "店員操作中です");
  expect(test.screen67.line2, "お待ちください");
  expect(test.screen67.line3, "");
  expect(test.screen67.line4, "");
  expect(test.screen67.line1_ex, "");
  expect(test.screen67.line2_ex, "");
  expect(test.screen67.line3_ex, "");
  expect(test.screen67.line4_ex, "");
  expect(test.screen67.sound_led1, 0);
  expect(test.screen67.sound_led2, 0);
  expect(test.screen67.sound_led3, 0);
  expect(test.screen68.title, "プリカチャージ入金完了画面");
  expect(test.screen68.msg1, "");
  expect(test.screen68.msg2, "");
  expect(test.screen68.msg1_size, 0);
  expect(test.screen68.msg2_size, 0);
  expect(test.screen68.sound1, 0);
  expect(test.screen68.sound2, 0);
  expect(test.screen68.sound3, 0);
  expect(test.screen68.snd_timer, 0);
  expect(test.screen68.timer1, 0);
  expect(test.screen68.timer2, 0);
  expect(test.screen68.timer3, 0);
  expect(test.screen68.dsp_flg1, 0);
  expect(test.screen68.dsp_flg2, 0);
  expect(test.screen68.movie01_ext, 0);
  expect(test.screen68.movie02_ext, 0);
  expect(test.screen68.movie03_ext, 0);
  expect(test.screen68.movie04_ext, 0);
  expect(test.screen68.line_title, "");
  expect(test.screen68.line_title_ex, "");
  expect(test.screen68.line1, "よろしければ");
  expect(test.screen68.line2, "チャージボタンを");
  expect(test.screen68.line3, "押してください");
  expect(test.screen68.line4, "");
  expect(test.screen68.line1_ex, "");
  expect(test.screen68.line2_ex, "");
  expect(test.screen68.line3_ex, "");
  expect(test.screen68.line4_ex, "");
  expect(test.screen68.sound_led1, 6179);
  expect(test.screen68.sound_led2, 6217);
  expect(test.screen68.sound_led3, 0);
  expect(test.screen69.title, "チャージ完了画面<印字なし>");
  expect(test.screen69.msg1, "");
  expect(test.screen69.msg2, "");
  expect(test.screen69.msg1_size, 0);
  expect(test.screen69.msg2_size, 0);
  expect(test.screen69.sound1, 0);
  expect(test.screen69.sound2, 0);
  expect(test.screen69.sound3, 0);
  expect(test.screen69.snd_timer, 0);
  expect(test.screen69.timer1, 0);
  expect(test.screen69.timer2, 0);
  expect(test.screen69.timer3, 0);
  expect(test.screen69.dsp_flg1, 0);
  expect(test.screen69.dsp_flg2, 0);
  expect(test.screen69.movie01_ext, 0);
  expect(test.screen69.movie02_ext, 0);
  expect(test.screen69.movie03_ext, 0);
  expect(test.screen69.movie04_ext, 0);
  expect(test.screen69.line_title, "");
  expect(test.screen69.line_title_ex, "");
  expect(test.screen69.line1, "チャージしました");
  expect(test.screen69.line2, "お支払いを続けて");
  expect(test.screen69.line3, "ください");
  expect(test.screen69.line4, "");
  expect(test.screen69.line1_ex, "");
  expect(test.screen69.line2_ex, "");
  expect(test.screen69.line3_ex, "");
  expect(test.screen69.line4_ex, "");
  expect(test.screen69.sound_led1, 0);
  expect(test.screen69.sound_led2, 0);
  expect(test.screen69.sound_led3, 0);
  expect(test.screen70.title, "あいさつ画面");
  expect(test.screen70.msg1, "");
  expect(test.screen70.msg2, "");
  expect(test.screen70.msg1_size, 0);
  expect(test.screen70.msg2_size, 0);
  expect(test.screen70.sound1, 6547);
  expect(test.screen70.sound2, 0);
  expect(test.screen70.sound3, 0);
  expect(test.screen70.snd_timer, 20);
  expect(test.screen70.timer1, 0);
  expect(test.screen70.timer2, 0);
  expect(test.screen70.timer3, 0);
  expect(test.screen70.dsp_flg1, 0);
  expect(test.screen70.dsp_flg2, 0);
  expect(test.screen70.movie01_ext, 0);
  expect(test.screen70.movie02_ext, 0);
  expect(test.screen70.movie03_ext, 0);
  expect(test.screen70.movie04_ext, 0);
  expect(test.screen70.line_title, "");
  expect(test.screen70.line_title_ex, "");
  expect(test.screen70.line1, "");
  expect(test.screen70.line2, "");
  expect(test.screen70.line3, "");
  expect(test.screen70.line4, "");
  expect(test.screen70.line1_ex, "");
  expect(test.screen70.line2_ex, "");
  expect(test.screen70.line3_ex, "");
  expect(test.screen70.line4_ex, "");
  expect(test.screen70.sound_led1, 6547);
  expect(test.screen70.sound_led2, 0);
  expect(test.screen70.sound_led3, 0);
  expect(test.screen71.title, "会員カード選択画面");
  expect(test.screen71.msg1, "");
  expect(test.screen71.msg2, "");
  expect(test.screen71.msg1_size, 0);
  expect(test.screen71.msg2_size, 0);
  expect(test.screen71.sound1, 6547);
  expect(test.screen71.sound2, 0);
  expect(test.screen71.sound3, 0);
  expect(test.screen71.snd_timer, 20);
  expect(test.screen71.timer1, 0);
  expect(test.screen71.timer2, 0);
  expect(test.screen71.timer3, 0);
  expect(test.screen71.dsp_flg1, 0);
  expect(test.screen71.dsp_flg2, 0);
  expect(test.screen71.movie01_ext, 0);
  expect(test.screen71.movie02_ext, 0);
  expect(test.screen71.movie03_ext, 0);
  expect(test.screen71.movie04_ext, 0);
  expect(test.screen71.line_title, "");
  expect(test.screen71.line_title_ex, "");
  expect(test.screen71.line1, "");
  expect(test.screen71.line2, "");
  expect(test.screen71.line3, "");
  expect(test.screen71.line4, "");
  expect(test.screen71.line1_ex, "");
  expect(test.screen71.line2_ex, "");
  expect(test.screen71.line3_ex, "");
  expect(test.screen71.line4_ex, "");
  expect(test.screen71.sound_led1, 6547);
  expect(test.screen71.sound_led2, 0);
  expect(test.screen71.sound_led3, 0);
  expect(test.screen72.title, "会員リード画面");
  expect(test.screen72.msg1, "");
  expect(test.screen72.msg2, "");
  expect(test.screen72.msg1_size, 0);
  expect(test.screen72.msg2_size, 0);
  expect(test.screen72.sound1, 6143);
  expect(test.screen72.sound2, 0);
  expect(test.screen72.sound3, 0);
  expect(test.screen72.snd_timer, 20);
  expect(test.screen72.timer1, 0);
  expect(test.screen72.timer2, 0);
  expect(test.screen72.timer3, 0);
  expect(test.screen72.dsp_flg1, 0);
  expect(test.screen72.dsp_flg2, 0);
  expect(test.screen72.movie01_ext, 0);
  expect(test.screen72.movie02_ext, 0);
  expect(test.screen72.movie03_ext, 0);
  expect(test.screen72.movie04_ext, 0);
  expect(test.screen72.line_title, "");
  expect(test.screen72.line_title_ex, "");
  expect(test.screen72.line1, "");
  expect(test.screen72.line2, "");
  expect(test.screen72.line3, "");
  expect(test.screen72.line4, "");
  expect(test.screen72.line1_ex, "");
  expect(test.screen72.line2_ex, "");
  expect(test.screen72.line3_ex, "");
  expect(test.screen72.line4_ex, "");
  expect(test.screen72.sound_led1, 6143);
  expect(test.screen72.sound_led2, 0);
  expect(test.screen72.sound_led3, 0);
  expect(test.screen73.title, "dポイント支払画面");
  expect(test.screen73.msg1, "");
  expect(test.screen73.msg2, "");
  expect(test.screen73.msg1_size, 24);
  expect(test.screen73.msg2_size, 0);
  expect(test.screen73.sound1, 6534);
  expect(test.screen73.sound2, 6534);
  expect(test.screen73.sound3, 0);
  expect(test.screen73.snd_timer, 20);
  expect(test.screen73.timer1, 10);
  expect(test.screen73.timer2, 0);
  expect(test.screen73.timer3, 0);
  expect(test.screen73.dsp_flg1, 0);
  expect(test.screen73.dsp_flg2, 0);
  expect(test.screen73.movie01_ext, 0);
  expect(test.screen73.movie02_ext, 0);
  expect(test.screen73.movie03_ext, 0);
  expect(test.screen73.movie04_ext, 0);
  expect(test.screen73.line_title, "");
  expect(test.screen73.line_title_ex, "");
  expect(test.screen73.line1, "ポイント数を入力して");
  expect(test.screen73.line2, "決定を押してください");
  expect(test.screen73.line3, "訂正する場合はクリア");
  expect(test.screen73.line4, "ボタンを押してください");
  expect(test.screen73.line1_ex, "");
  expect(test.screen73.line2_ex, "");
  expect(test.screen73.line3_ex, "");
  expect(test.screen73.line4_ex, "");
  expect(test.screen73.sound_led1, 6534);
  expect(test.screen73.sound_led2, 6534);
  expect(test.screen73.sound_led3, 0);
  expect(test.screen74.title, "dﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen74.msg1, "");
  expect(test.screen74.msg2, "");
  expect(test.screen74.msg1_size, 0);
  expect(test.screen74.msg2_size, 0);
  expect(test.screen74.sound1, 6179);
  expect(test.screen74.sound2, 6179);
  expect(test.screen74.sound3, 0);
  expect(test.screen74.snd_timer, 20);
  expect(test.screen74.timer1, 10);
  expect(test.screen74.timer2, 0);
  expect(test.screen74.timer3, 0);
  expect(test.screen74.dsp_flg1, 0);
  expect(test.screen74.dsp_flg2, 0);
  expect(test.screen74.movie01_ext, 0);
  expect(test.screen74.movie02_ext, 0);
  expect(test.screen74.movie03_ext, 0);
  expect(test.screen74.movie04_ext, 0);
  expect(test.screen74.line_title, "");
  expect(test.screen74.line_title_ex, "");
  expect(test.screen74.line1, "よろしければ");
  expect(test.screen74.line2, "おわりボタンを");
  expect(test.screen74.line3, "押してください");
  expect(test.screen74.line4, "");
  expect(test.screen74.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen74.line2_ex, "button to complete");
  expect(test.screen74.line3_ex, "the payment.");
  expect(test.screen74.line4_ex, "");
  expect(test.screen74.sound_led1, 6179);
  expect(test.screen74.sound_led2, 6179);
  expect(test.screen74.sound_led3, 0);
  expect(test.screen75.title, "dﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen75.msg1, "レシートをお取りください。");
  expect(test.screen75.msg2, "");
  expect(test.screen75.msg1_size, 0);
  expect(test.screen75.msg2_size, 0);
  expect(test.screen75.sound1, 6133);
  expect(test.screen75.sound2, 6133);
  expect(test.screen75.sound3, 0);
  expect(test.screen75.snd_timer, 0);
  expect(test.screen75.timer1, 5);
  expect(test.screen75.timer2, 10);
  expect(test.screen75.timer3, 0);
  expect(test.screen75.dsp_flg1, 0);
  expect(test.screen75.dsp_flg2, 0);
  expect(test.screen75.movie01_ext, 0);
  expect(test.screen75.movie02_ext, 0);
  expect(test.screen75.movie03_ext, 0);
  expect(test.screen75.movie04_ext, 0);
  expect(test.screen75.line_title, "");
  expect(test.screen75.line_title_ex, "");
  expect(test.screen75.line1, "レシートを");
  expect(test.screen75.line2, "お受け取りください");
  expect(test.screen75.line3, "ありがとう");
  expect(test.screen75.line4, "ございました");
  expect(test.screen75.line1_ex, "Thank you.");
  expect(test.screen75.line2_ex, "Please take your receipt.");
  expect(test.screen75.line3_ex, "");
  expect(test.screen75.line4_ex, "");
  expect(test.screen75.sound_led1, 6133);
  expect(test.screen75.sound_led2, 6133);
  expect(test.screen75.sound_led3, 0);
  expect(test.screen76.title, "LINE Pay読取画面");
  expect(test.screen76.msg1, "");
  expect(test.screen76.msg2, "");
  expect(test.screen76.msg1_size, 24);
  expect(test.screen76.msg2_size, 0);
  expect(test.screen76.sound1, 0);
  expect(test.screen76.sound2, 0);
  expect(test.screen76.sound3, 0);
  expect(test.screen76.snd_timer, 20);
  expect(test.screen76.timer1, 0);
  expect(test.screen76.timer2, 0);
  expect(test.screen76.timer3, 0);
  expect(test.screen76.dsp_flg1, 0);
  expect(test.screen76.dsp_flg2, 0);
  expect(test.screen76.movie01_ext, 0);
  expect(test.screen76.movie02_ext, 0);
  expect(test.screen76.movie03_ext, 0);
  expect(test.screen76.movie04_ext, 0);
  expect(test.screen76.line_title, "LINE Payでお支払い");
  expect(test.screen76.line_title_ex, "");
  expect(test.screen76.line1, "お支払い金額を確認し");
  expect(test.screen76.line2, "バーコードを読ませてください");
  expect(test.screen76.line3, "");
  expect(test.screen76.line4, "");
  expect(test.screen76.line1_ex, "");
  expect(test.screen76.line2_ex, "");
  expect(test.screen76.line3_ex, "");
  expect(test.screen76.line4_ex, "");
  expect(test.screen76.sound_led1, 6273);
  expect(test.screen76.sound_led2, 6273);
  expect(test.screen76.sound_led3, 0);
  expect(test.screen77.title, "Alipay読取画面");
  expect(test.screen77.msg1, "");
  expect(test.screen77.msg2, "");
  expect(test.screen77.msg1_size, 0);
  expect(test.screen77.msg2_size, 0);
  expect(test.screen77.sound1, 0);
  expect(test.screen77.sound2, 0);
  expect(test.screen77.sound3, 0);
  expect(test.screen77.snd_timer, 20);
  expect(test.screen77.timer1, 0);
  expect(test.screen77.timer2, 0);
  expect(test.screen77.timer3, 0);
  expect(test.screen77.dsp_flg1, 0);
  expect(test.screen77.dsp_flg2, 0);
  expect(test.screen77.movie01_ext, 0);
  expect(test.screen77.movie02_ext, 0);
  expect(test.screen77.movie03_ext, 0);
  expect(test.screen77.movie04_ext, 0);
  expect(test.screen77.line_title, "Alipayでお支払い");
  expect(test.screen77.line_title_ex, "");
  expect(test.screen77.line1, "お支払い金額を確認し");
  expect(test.screen77.line2, "QRコードを読み込んでください");
  expect(test.screen77.line3, "");
  expect(test.screen77.line4, "");
  expect(test.screen77.line1_ex, "");
  expect(test.screen77.line2_ex, "");
  expect(test.screen77.line3_ex, "");
  expect(test.screen77.line4_ex, "");
  expect(test.screen77.sound_led1, 6272);
  expect(test.screen77.sound_led2, 6272);
  expect(test.screen77.sound_led3, 0);
  expect(test.screen78.title, "バーコード決済支払完了画面");
  expect(test.screen78.msg1, "レシートをお取りください。");
  expect(test.screen78.msg2, "");
  expect(test.screen78.msg1_size, 0);
  expect(test.screen78.msg2_size, 0);
  expect(test.screen78.sound1, 0);
  expect(test.screen78.sound2, 0);
  expect(test.screen78.sound3, 0);
  expect(test.screen78.snd_timer, 0);
  expect(test.screen78.timer1, 5);
  expect(test.screen78.timer2, 10);
  expect(test.screen78.timer3, 0);
  expect(test.screen78.dsp_flg1, 0);
  expect(test.screen78.dsp_flg2, 0);
  expect(test.screen78.movie01_ext, 0);
  expect(test.screen78.movie02_ext, 0);
  expect(test.screen78.movie03_ext, 0);
  expect(test.screen78.movie04_ext, 0);
  expect(test.screen78.line_title, "");
  expect(test.screen78.line_title_ex, "");
  expect(test.screen78.line1, "レシートを");
  expect(test.screen78.line2, "お受け取りください");
  expect(test.screen78.line3, "ありがとう");
  expect(test.screen78.line4, "ございました");
  expect(test.screen78.line1_ex, "");
  expect(test.screen78.line2_ex, "");
  expect(test.screen78.line3_ex, "");
  expect(test.screen78.line4_ex, "");
  expect(test.screen78.sound_led1, 6133);
  expect(test.screen78.sound_led2, 6133);
  expect(test.screen78.sound_led3, 0);
  expect(test.screen79.title, "バーコード決済残高不足画面");
  expect(test.screen79.msg1, "残高が不足しています");
  expect(test.screen79.msg2, "");
  expect(test.screen79.msg1_size, 24);
  expect(test.screen79.msg2_size, 0);
  expect(test.screen79.sound1, 0);
  expect(test.screen79.sound2, 0);
  expect(test.screen79.sound3, 0);
  expect(test.screen79.snd_timer, 20);
  expect(test.screen79.timer1, 0);
  expect(test.screen79.timer2, 0);
  expect(test.screen79.timer3, 0);
  expect(test.screen79.dsp_flg1, 0);
  expect(test.screen79.dsp_flg2, 0);
  expect(test.screen79.movie01_ext, 0);
  expect(test.screen79.movie02_ext, 0);
  expect(test.screen79.movie03_ext, 0);
  expect(test.screen79.movie04_ext, 0);
  expect(test.screen79.line_title, "");
  expect(test.screen79.line_title_ex, "");
  expect(test.screen79.line1, "");
  expect(test.screen79.line2, "");
  expect(test.screen79.line3, "");
  expect(test.screen79.line4, "");
  expect(test.screen79.line1_ex, "");
  expect(test.screen79.line2_ex, "");
  expect(test.screen79.line3_ex, "");
  expect(test.screen79.line4_ex, "");
  expect(test.screen79.sound_led1, 6280);
  expect(test.screen79.sound_led2, 6280);
  expect(test.screen79.sound_led3, 0);
  expect(test.screen81.title, "Alipay読取画面");
  expect(test.screen81.msg1, "");
  expect(test.screen81.msg2, "");
  expect(test.screen81.msg1_size, 24);
  expect(test.screen81.msg2_size, 0);
  expect(test.screen81.sound1, 0);
  expect(test.screen81.sound2, 0);
  expect(test.screen81.sound3, 0);
  expect(test.screen81.snd_timer, 20);
  expect(test.screen81.timer1, 0);
  expect(test.screen81.timer2, 0);
  expect(test.screen81.timer3, 0);
  expect(test.screen81.dsp_flg1, 0);
  expect(test.screen81.dsp_flg2, 0);
  expect(test.screen81.movie01_ext, 0);
  expect(test.screen81.movie02_ext, 0);
  expect(test.screen81.movie03_ext, 0);
  expect(test.screen81.movie04_ext, 0);
  expect(test.screen81.line_title, "Alipayでお支払い");
  expect(test.screen81.line_title_ex, "");
  expect(test.screen81.line1, "お支払い金額を確認し");
  expect(test.screen81.line2, "バーコードを読ませてください");
  expect(test.screen81.line3, "");
  expect(test.screen81.line4, "");
  expect(test.screen81.line1_ex, "");
  expect(test.screen81.line2_ex, "");
  expect(test.screen81.line3_ex, "");
  expect(test.screen81.line4_ex, "");
  expect(test.screen81.sound_led1, 6273);
  expect(test.screen81.sound_led2, 6273);
  expect(test.screen81.sound_led3, 0);
  expect(test.screen82.title, "WeChatPay読取画面");
  expect(test.screen82.msg1, "");
  expect(test.screen82.msg2, "");
  expect(test.screen82.msg1_size, 0);
  expect(test.screen82.msg2_size, 0);
  expect(test.screen82.sound1, 0);
  expect(test.screen82.sound2, 0);
  expect(test.screen82.sound3, 0);
  expect(test.screen82.snd_timer, 20);
  expect(test.screen82.timer1, 0);
  expect(test.screen82.timer2, 0);
  expect(test.screen82.timer3, 0);
  expect(test.screen82.dsp_flg1, 0);
  expect(test.screen82.dsp_flg2, 0);
  expect(test.screen82.movie01_ext, 0);
  expect(test.screen82.movie02_ext, 0);
  expect(test.screen82.movie03_ext, 0);
  expect(test.screen82.movie04_ext, 0);
  expect(test.screen82.line_title, "WeChatPayでお支払い");
  expect(test.screen82.line_title_ex, "");
  expect(test.screen82.line1, "お支払い金額を確認し");
  expect(test.screen82.line2, "QRコードを読み込んでください");
  expect(test.screen82.line3, "");
  expect(test.screen82.line4, "");
  expect(test.screen82.line1_ex, "");
  expect(test.screen82.line2_ex, "");
  expect(test.screen82.line3_ex, "");
  expect(test.screen82.line4_ex, "");
  expect(test.screen82.sound_led1, 6272);
  expect(test.screen82.sound_led2, 6272);
  expect(test.screen82.sound_led3, 0);
  expect(test.screen83.title, "WeChatPay読取画面");
  expect(test.screen83.msg1, "");
  expect(test.screen83.msg2, "");
  expect(test.screen83.msg1_size, 24);
  expect(test.screen83.msg2_size, 0);
  expect(test.screen83.sound1, 0);
  expect(test.screen83.sound2, 0);
  expect(test.screen83.sound3, 0);
  expect(test.screen83.snd_timer, 20);
  expect(test.screen83.timer1, 0);
  expect(test.screen83.timer2, 0);
  expect(test.screen83.timer3, 0);
  expect(test.screen83.dsp_flg1, 0);
  expect(test.screen83.dsp_flg2, 0);
  expect(test.screen83.movie01_ext, 0);
  expect(test.screen83.movie02_ext, 0);
  expect(test.screen83.movie03_ext, 0);
  expect(test.screen83.movie04_ext, 0);
  expect(test.screen83.line_title, "WeChatPayでお支払い");
  expect(test.screen83.line_title_ex, "");
  expect(test.screen83.line1, "お支払い金額を確認し");
  expect(test.screen83.line2, "バーコードを読ませてください");
  expect(test.screen83.line3, "");
  expect(test.screen83.line4, "");
  expect(test.screen83.line1_ex, "");
  expect(test.screen83.line2_ex, "");
  expect(test.screen83.line3_ex, "");
  expect(test.screen83.line4_ex, "");
  expect(test.screen83.sound_led1, 6273);
  expect(test.screen83.sound_led2, 6273);
  expect(test.screen83.sound_led3, 0);
  expect(test.screen84.title, "JPQR PAY 読取画面");
  expect(test.screen84.msg1, "");
  expect(test.screen84.msg2, "");
  expect(test.screen84.msg1_size, 24);
  expect(test.screen84.msg2_size, 0);
  expect(test.screen84.sound1, 0);
  expect(test.screen84.sound2, 0);
  expect(test.screen84.sound3, 0);
  expect(test.screen84.snd_timer, 20);
  expect(test.screen84.timer1, 0);
  expect(test.screen84.timer2, 0);
  expect(test.screen84.timer3, 0);
  expect(test.screen84.dsp_flg1, 0);
  expect(test.screen84.dsp_flg2, 0);
  expect(test.screen84.movie01_ext, 0);
  expect(test.screen84.movie02_ext, 0);
  expect(test.screen84.movie03_ext, 0);
  expect(test.screen84.movie04_ext, 0);
  expect(test.screen84.line_title, "JPQRでお支払い");
  expect(test.screen84.line_title_ex, "");
  expect(test.screen84.line1, "お支払い金額を確認し");
  expect(test.screen84.line2, "バーコードを読ませてください");
  expect(test.screen84.line3, "");
  expect(test.screen84.line4, "");
  expect(test.screen84.line1_ex, "");
  expect(test.screen84.line2_ex, "");
  expect(test.screen84.line3_ex, "");
  expect(test.screen84.line4_ex, "");
  expect(test.screen84.sound_led1, 6273);
  expect(test.screen84.sound_led2, 6273);
  expect(test.screen84.sound_led3, 0);
  expect(test.screen85.title, "コード決済 読取画面");
  expect(test.screen85.msg1, "");
  expect(test.screen85.msg2, "");
  expect(test.screen85.msg1_size, 24);
  expect(test.screen85.msg2_size, 0);
  expect(test.screen85.sound1, 0);
  expect(test.screen85.sound2, 0);
  expect(test.screen85.sound3, 0);
  expect(test.screen85.snd_timer, 20);
  expect(test.screen85.timer1, 0);
  expect(test.screen85.timer2, 0);
  expect(test.screen85.timer3, 0);
  expect(test.screen85.dsp_flg1, 0);
  expect(test.screen85.dsp_flg2, 0);
  expect(test.screen85.movie01_ext, 0);
  expect(test.screen85.movie02_ext, 0);
  expect(test.screen85.movie03_ext, 0);
  expect(test.screen85.movie04_ext, 0);
  expect(test.screen85.line_title, "コード決済でお支払い");
  expect(test.screen85.line_title_ex, "");
  expect(test.screen85.line1, "お支払い金額を確認し");
  expect(test.screen85.line2, "バーコードを読ませてください");
  expect(test.screen85.line3, "");
  expect(test.screen85.line4, "");
  expect(test.screen85.line1_ex, "");
  expect(test.screen85.line2_ex, "");
  expect(test.screen85.line3_ex, "");
  expect(test.screen85.line4_ex, "");
  expect(test.screen85.sound_led1, 6273);
  expect(test.screen85.sound_led2, 6273);
  expect(test.screen85.sound_led3, 0);
  expect(test.screen86.title, "イートインアイテム画面");
  expect(test.screen86.msg1, "店内でご飲食される商品はありますか？");
  expect(test.screen86.msg2, "");
  expect(test.screen86.msg1_size, 24);
  expect(test.screen86.msg2_size, 0);
  expect(test.screen86.sound1, 0);
  expect(test.screen86.sound2, 0);
  expect(test.screen86.sound3, 0);
  expect(test.screen86.snd_timer, 10);
  expect(test.screen86.timer1, 0);
  expect(test.screen86.timer2, 0);
  expect(test.screen86.timer3, 0);
  expect(test.screen86.dsp_flg1, 0);
  expect(test.screen86.dsp_flg2, 0);
  expect(test.screen86.movie01_ext, 0);
  expect(test.screen86.movie02_ext, 0);
  expect(test.screen86.movie03_ext, 0);
  expect(test.screen86.movie04_ext, 0);
  expect(test.screen86.line_title, "");
  expect(test.screen86.line_title_ex, "");
  expect(test.screen86.line1, "");
  expect(test.screen86.line2, "");
  expect(test.screen86.line3, "");
  expect(test.screen86.line4, "");
  expect(test.screen86.line1_ex, "");
  expect(test.screen86.line2_ex, "");
  expect(test.screen86.line3_ex, "");
  expect(test.screen86.line4_ex, "");
  expect(test.screen86.sound_led1, 6715);
  expect(test.screen86.sound_led2, 0);
  expect(test.screen86.sound_led3, 0);
  expect(test.screen87.title, "ﾌﾟﾘﾍﾟｲﾄﾞｶｰﾄﾞ読取画面<IC>");
  expect(test.screen87.msg1, "");
  expect(test.screen87.msg2, "");
  expect(test.screen87.msg1_size, 20);
  expect(test.screen87.msg2_size, 0);
  expect(test.screen87.sound1, 0);
  expect(test.screen87.sound2, 0);
  expect(test.screen87.sound3, 0);
  expect(test.screen87.snd_timer, 20);
  expect(test.screen87.timer1, 0);
  expect(test.screen87.timer2, 0);
  expect(test.screen87.timer3, 0);
  expect(test.screen87.dsp_flg1, 0);
  expect(test.screen87.dsp_flg2, 0);
  expect(test.screen87.movie01_ext, 0);
  expect(test.screen87.movie02_ext, 0);
  expect(test.screen87.movie03_ext, 0);
  expect(test.screen87.movie04_ext, 0);
  expect(test.screen87.line_title, "CoGCaでお支払い");
  expect(test.screen87.line_title_ex, "");
  expect(test.screen87.line1, "CoGCaカードを");
  expect(test.screen87.line2, "タッチしてください");
  expect(test.screen87.line3, "");
  expect(test.screen87.line4, "");
  expect(test.screen87.line1_ex, "");
  expect(test.screen87.line2_ex, "");
  expect(test.screen87.line3_ex, "");
  expect(test.screen87.line4_ex, "");
  expect(test.screen87.sound_led1, 6283);
  expect(test.screen87.sound_led2, 6283);
  expect(test.screen87.sound_led3, 0);
  expect(test.screen88.title, "ﾌﾟﾘﾍﾟｲﾄﾞ支払画面");
  expect(test.screen88.msg1, "");
  expect(test.screen88.msg2, "");
  expect(test.screen88.msg1_size, 0);
  expect(test.screen88.msg2_size, 0);
  expect(test.screen88.sound1, 6179);
  expect(test.screen88.sound2, 6179);
  expect(test.screen88.sound3, 0);
  expect(test.screen88.snd_timer, 20);
  expect(test.screen88.timer1, 0);
  expect(test.screen88.timer2, 0);
  expect(test.screen88.timer3, 0);
  expect(test.screen88.dsp_flg1, 0);
  expect(test.screen88.dsp_flg2, 0);
  expect(test.screen88.movie01_ext, 0);
  expect(test.screen88.movie02_ext, 0);
  expect(test.screen88.movie03_ext, 0);
  expect(test.screen88.movie04_ext, 0);
  expect(test.screen88.line_title, "");
  expect(test.screen88.line_title_ex, "");
  expect(test.screen88.line1, "よろしければ");
  expect(test.screen88.line2, "おわりボタンを");
  expect(test.screen88.line3, "押してください");
  expect(test.screen88.line4, "");
  expect(test.screen88.line1_ex, "");
  expect(test.screen88.line2_ex, "");
  expect(test.screen88.line3_ex, "");
  expect(test.screen88.line4_ex, "");
  expect(test.screen88.sound_led1, 6179);
  expect(test.screen88.sound_led2, 6179);
  expect(test.screen88.sound_led3, 0);
  expect(test.screen89.title, "ﾌﾟﾘﾍﾟｲﾄﾞ支払完了画面");
  expect(test.screen89.msg1, "レシートをお取りください。");
  expect(test.screen89.msg2, "");
  expect(test.screen89.msg1_size, 0);
  expect(test.screen89.msg2_size, 0);
  expect(test.screen89.sound1, 6133);
  expect(test.screen89.sound2, 6133);
  expect(test.screen89.sound3, 0);
  expect(test.screen89.snd_timer, 0);
  expect(test.screen89.timer1, 5);
  expect(test.screen89.timer2, 10);
  expect(test.screen89.timer3, 0);
  expect(test.screen89.dsp_flg1, 0);
  expect(test.screen89.dsp_flg2, 0);
  expect(test.screen89.movie01_ext, 0);
  expect(test.screen89.movie02_ext, 0);
  expect(test.screen89.movie03_ext, 0);
  expect(test.screen89.movie04_ext, 0);
  expect(test.screen89.line_title, "");
  expect(test.screen89.line_title_ex, "");
  expect(test.screen89.line1, "レシートを");
  expect(test.screen89.line2, "お受け取りください");
  expect(test.screen89.line3, "ありがとう");
  expect(test.screen89.line4, "ございました");
  expect(test.screen89.line1_ex, "");
  expect(test.screen89.line2_ex, "");
  expect(test.screen89.line3_ex, "");
  expect(test.screen89.line4_ex, "");
  expect(test.screen89.sound_led1, 6133);
  expect(test.screen89.sound_led2, 6133);
  expect(test.screen89.sound_led3, 0);
  expect(test.screen90.title, "ﾌﾟﾘﾍﾟｲﾄﾞ置数支払画面");
  expect(test.screen90.msg1, "お支払金額を入力してください");
  expect(test.screen90.msg2, "");
  expect(test.screen90.msg1_size, 24);
  expect(test.screen90.msg2_size, 0);
  expect(test.screen90.sound1, 0);
  expect(test.screen90.sound2, 0);
  expect(test.screen90.sound3, 0);
  expect(test.screen90.snd_timer, 20);
  expect(test.screen90.timer1, 0);
  expect(test.screen90.timer2, 0);
  expect(test.screen90.timer3, 0);
  expect(test.screen90.dsp_flg1, 0);
  expect(test.screen90.dsp_flg2, 0);
  expect(test.screen90.movie01_ext, 0);
  expect(test.screen90.movie02_ext, 0);
  expect(test.screen90.movie03_ext, 0);
  expect(test.screen90.movie04_ext, 0);
  expect(test.screen90.line_title, "");
  expect(test.screen90.line_title_ex, "");
  expect(test.screen90.line1, "");
  expect(test.screen90.line2, "");
  expect(test.screen90.line3, "");
  expect(test.screen90.line4, "");
  expect(test.screen90.line1_ex, "");
  expect(test.screen90.line2_ex, "");
  expect(test.screen90.line3_ex, "");
  expect(test.screen90.line4_ex, "");
  expect(test.screen90.sound_led1, 6285);
  expect(test.screen90.sound_led2, 0);
  expect(test.screen90.sound_led3, 0);
  expect(test.screen91.title, "ﾌﾟﾘﾍﾟｲﾄﾞ残高不足確認画面");
  expect(test.screen91.msg1, "残高が不足しています");
  expect(test.screen91.msg2, "");
  expect(test.screen91.msg1_size, 24);
  expect(test.screen91.msg2_size, 0);
  expect(test.screen91.sound1, 0);
  expect(test.screen91.sound2, 0);
  expect(test.screen91.sound3, 0);
  expect(test.screen91.snd_timer, 20);
  expect(test.screen91.timer1, 0);
  expect(test.screen91.timer2, 0);
  expect(test.screen91.timer3, 0);
  expect(test.screen91.dsp_flg1, 0);
  expect(test.screen91.dsp_flg2, 0);
  expect(test.screen91.movie01_ext, 0);
  expect(test.screen91.movie02_ext, 0);
  expect(test.screen91.movie03_ext, 0);
  expect(test.screen91.movie04_ext, 0);
  expect(test.screen91.line_title, "");
  expect(test.screen91.line_title_ex, "");
  expect(test.screen91.line1, "");
  expect(test.screen91.line2, "");
  expect(test.screen91.line3, "");
  expect(test.screen91.line4, "");
  expect(test.screen91.line1_ex, "");
  expect(test.screen91.line2_ex, "");
  expect(test.screen91.line3_ex, "");
  expect(test.screen91.line4_ex, "");
  expect(test.screen91.sound_led1, 6284);
  expect(test.screen91.sound_led2, 0);
  expect(test.screen91.sound_led3, 0);
  expect(test.screen92.title, "ﾎﾟｲﾝﾄ支払画面");
  expect(test.screen92.msg1, "");
  expect(test.screen92.msg2, "");
  expect(test.screen92.msg1_size, 24);
  expect(test.screen92.msg2_size, 0);
  expect(test.screen92.sound1, 6534);
  expect(test.screen92.sound2, 6534);
  expect(test.screen92.sound3, 0);
  expect(test.screen92.snd_timer, 20);
  expect(test.screen92.timer1, 10);
  expect(test.screen92.timer2, 0);
  expect(test.screen92.timer3, 0);
  expect(test.screen92.dsp_flg1, 0);
  expect(test.screen92.dsp_flg2, 0);
  expect(test.screen92.movie01_ext, 0);
  expect(test.screen92.movie02_ext, 0);
  expect(test.screen92.movie03_ext, 0);
  expect(test.screen92.movie04_ext, 0);
  expect(test.screen92.line_title, "");
  expect(test.screen92.line_title_ex, "");
  expect(test.screen92.line1, "ポイント数を入力して");
  expect(test.screen92.line2, "決定を押してください");
  expect(test.screen92.line3, "訂正する場合はクリア");
  expect(test.screen92.line4, "ボタンを押してください");
  expect(test.screen92.line1_ex, "ポイント利用単位：");
  expect(test.screen92.line2_ex, "");
  expect(test.screen92.line3_ex, "");
  expect(test.screen92.line4_ex, "");
  expect(test.screen92.sound_led1, 6534);
  expect(test.screen92.sound_led2, 6534);
  expect(test.screen92.sound_led3, 0);
  expect(test.screen93.title, "ﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen93.msg1, "");
  expect(test.screen93.msg2, "");
  expect(test.screen93.msg1_size, 0);
  expect(test.screen93.msg2_size, 0);
  expect(test.screen93.sound1, 6016);
  expect(test.screen93.sound2, 0);
  expect(test.screen93.sound3, 0);
  expect(test.screen93.snd_timer, 20);
  expect(test.screen93.timer1, 10);
  expect(test.screen93.timer2, 0);
  expect(test.screen93.timer3, 0);
  expect(test.screen93.dsp_flg1, 0);
  expect(test.screen93.dsp_flg2, 0);
  expect(test.screen93.movie01_ext, 0);
  expect(test.screen93.movie02_ext, 0);
  expect(test.screen93.movie03_ext, 0);
  expect(test.screen93.movie04_ext, 0);
  expect(test.screen93.line_title, "");
  expect(test.screen93.line_title_ex, "");
  expect(test.screen93.line1, "よろしければ");
  expect(test.screen93.line2, "おわりボタンを");
  expect(test.screen93.line3, "押してください");
  expect(test.screen93.line4, "");
  expect(test.screen93.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen93.line2_ex, "button to complete");
  expect(test.screen93.line3_ex, "the payment.");
  expect(test.screen93.line4_ex, "");
  expect(test.screen93.sound_led1, 6179);
  expect(test.screen93.sound_led2, 6217);
  expect(test.screen93.sound_led3, 0);
  expect(test.screen94.title, "ﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen94.msg1, "レシートをお取りください。");
  expect(test.screen94.msg2, "");
  expect(test.screen94.msg1_size, 0);
  expect(test.screen94.msg2_size, 0);
  expect(test.screen94.sound1, 6018);
  expect(test.screen94.sound2, 0);
  expect(test.screen94.sound3, 0);
  expect(test.screen94.snd_timer, 0);
  expect(test.screen94.timer1, 5);
  expect(test.screen94.timer2, 10);
  expect(test.screen94.timer3, 0);
  expect(test.screen94.dsp_flg1, 0);
  expect(test.screen94.dsp_flg2, 0);
  expect(test.screen94.movie01_ext, 0);
  expect(test.screen94.movie02_ext, 0);
  expect(test.screen94.movie03_ext, 0);
  expect(test.screen94.movie04_ext, 0);
  expect(test.screen94.line_title, "");
  expect(test.screen94.line_title_ex, "");
  expect(test.screen94.line1, "レシートを");
  expect(test.screen94.line2, "お受け取りください");
  expect(test.screen94.line3, "ありがとう");
  expect(test.screen94.line4, "ございました");
  expect(test.screen94.line1_ex, "Thank you.");
  expect(test.screen94.line2_ex, "Please take your receipt.");
  expect(test.screen94.line3_ex, "");
  expect(test.screen94.line4_ex, "");
  expect(test.screen94.sound_led1, 6133);
  expect(test.screen94.sound_led2, 0);
  expect(test.screen94.sound_led3, 0);
  expect(test.screen95.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払画面");
  expect(test.screen95.msg1, "");
  expect(test.screen95.msg2, "");
  expect(test.screen95.msg1_size, 24);
  expect(test.screen95.msg2_size, 0);
  expect(test.screen95.sound1, 6534);
  expect(test.screen95.sound2, 6534);
  expect(test.screen95.sound3, 0);
  expect(test.screen95.snd_timer, 20);
  expect(test.screen95.timer1, 10);
  expect(test.screen95.timer2, 0);
  expect(test.screen95.timer3, 0);
  expect(test.screen95.dsp_flg1, 0);
  expect(test.screen95.dsp_flg2, 0);
  expect(test.screen95.movie01_ext, 0);
  expect(test.screen95.movie02_ext, 0);
  expect(test.screen95.movie03_ext, 0);
  expect(test.screen95.movie04_ext, 0);
  expect(test.screen95.line_title, "");
  expect(test.screen95.line_title_ex, "");
  expect(test.screen95.line1, "ポイント数を入力して");
  expect(test.screen95.line2, "決定を押してください");
  expect(test.screen95.line3, "訂正する場合はクリア");
  expect(test.screen95.line4, "ボタンを押してください");
  expect(test.screen95.line1_ex, "");
  expect(test.screen95.line2_ex, "");
  expect(test.screen95.line3_ex, "");
  expect(test.screen95.line4_ex, "");
  expect(test.screen95.sound_led1, 6534);
  expect(test.screen95.sound_led2, 6534);
  expect(test.screen95.sound_led3, 0);
  expect(test.screen96.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen96.msg1, "");
  expect(test.screen96.msg2, "");
  expect(test.screen96.msg1_size, 0);
  expect(test.screen96.msg2_size, 0);
  expect(test.screen96.sound1, 6016);
  expect(test.screen96.sound2, 0);
  expect(test.screen96.sound3, 0);
  expect(test.screen96.snd_timer, 20);
  expect(test.screen96.timer1, 10);
  expect(test.screen96.timer2, 0);
  expect(test.screen96.timer3, 0);
  expect(test.screen96.dsp_flg1, 0);
  expect(test.screen96.dsp_flg2, 0);
  expect(test.screen96.movie01_ext, 0);
  expect(test.screen96.movie02_ext, 0);
  expect(test.screen96.movie03_ext, 0);
  expect(test.screen96.movie04_ext, 0);
  expect(test.screen96.line_title, "");
  expect(test.screen96.line_title_ex, "");
  expect(test.screen96.line1, "よろしければ");
  expect(test.screen96.line2, "おわりボタンを");
  expect(test.screen96.line3, "押してください");
  expect(test.screen96.line4, "");
  expect(test.screen96.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen96.line2_ex, "button to complete");
  expect(test.screen96.line3_ex, "the payment.");
  expect(test.screen96.line4_ex, "");
  expect(test.screen96.sound_led1, 6179);
  expect(test.screen96.sound_led2, 6217);
  expect(test.screen96.sound_led3, 0);
  expect(test.screen97.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen97.msg1, "レシートをお取りください。");
  expect(test.screen97.msg2, "");
  expect(test.screen97.msg1_size, 0);
  expect(test.screen97.msg2_size, 0);
  expect(test.screen97.sound1, 6018);
  expect(test.screen97.sound2, 0);
  expect(test.screen97.sound3, 0);
  expect(test.screen97.snd_timer, 0);
  expect(test.screen97.timer1, 5);
  expect(test.screen97.timer2, 10);
  expect(test.screen97.timer3, 0);
  expect(test.screen97.dsp_flg1, 0);
  expect(test.screen97.dsp_flg2, 0);
  expect(test.screen97.movie01_ext, 0);
  expect(test.screen97.movie02_ext, 0);
  expect(test.screen97.movie03_ext, 0);
  expect(test.screen97.movie04_ext, 0);
  expect(test.screen97.line_title, "");
  expect(test.screen97.line_title_ex, "");
  expect(test.screen97.line1, "レシートを");
  expect(test.screen97.line2, "お受け取りください");
  expect(test.screen97.line3, "ありがとう");
  expect(test.screen97.line4, "ございました");
  expect(test.screen97.line1_ex, "Thank you.");
  expect(test.screen97.line2_ex, "Please take your receipt.");
  expect(test.screen97.line3_ex, "");
  expect(test.screen97.line4_ex, "");
  expect(test.screen97.sound_led1, 6133);
  expect(test.screen97.sound_led2, 0);
  expect(test.screen97.sound_led3, 0);
  expect(test.screen98.title, "社員証決済画面");
  expect(test.screen98.msg1, "");
  expect(test.screen98.msg2, "");
  expect(test.screen98.msg1_size, 0);
  expect(test.screen98.msg2_size, 0);
  expect(test.screen98.sound1, 0);
  expect(test.screen98.sound2, 0);
  expect(test.screen98.sound3, 0);
  expect(test.screen98.snd_timer, 20);
  expect(test.screen98.timer1, 10);
  expect(test.screen98.timer2, 0);
  expect(test.screen98.timer3, 0);
  expect(test.screen98.dsp_flg1, 0);
  expect(test.screen98.dsp_flg2, 0);
  expect(test.screen98.movie01_ext, 0);
  expect(test.screen98.movie02_ext, 0);
  expect(test.screen98.movie03_ext, 0);
  expect(test.screen98.movie04_ext, 0);
  expect(test.screen98.line_title, "");
  expect(test.screen98.line_title_ex, "");
  expect(test.screen98.line1, "よろしければ");
  expect(test.screen98.line2, "おわりボタンを");
  expect(test.screen98.line3, "押してください");
  expect(test.screen98.line4, "");
  expect(test.screen98.line1_ex, "When ready, ");
  expect(test.screen98.line2_ex, "press \"finish\"");
  expect(test.screen98.line3_ex, "to complete payment.");
  expect(test.screen98.line4_ex, "");
  expect(test.screen98.sound_led1, 6179);
  expect(test.screen98.sound_led2, 6217);
  expect(test.screen98.sound_led3, 0);
  expect(test.screen99.title, "社員証決済完了画面");
  expect(test.screen99.msg1, "");
  expect(test.screen99.msg2, "");
  expect(test.screen99.msg1_size, 0);
  expect(test.screen99.msg2_size, 0);
  expect(test.screen99.sound1, 6133);
  expect(test.screen99.sound2, 6133);
  expect(test.screen99.sound3, 0);
  expect(test.screen99.snd_timer, 0);
  expect(test.screen99.timer1, 5);
  expect(test.screen99.timer2, 10);
  expect(test.screen99.timer3, 0);
  expect(test.screen99.dsp_flg1, 0);
  expect(test.screen99.dsp_flg2, 0);
  expect(test.screen99.movie01_ext, 0);
  expect(test.screen99.movie02_ext, 0);
  expect(test.screen99.movie03_ext, 0);
  expect(test.screen99.movie04_ext, 0);
  expect(test.screen99.line_title, "");
  expect(test.screen99.line_title_ex, "");
  expect(test.screen99.line1, "レシートを");
  expect(test.screen99.line2, "お受け取りください");
  expect(test.screen99.line3, "ありがとう");
  expect(test.screen99.line4, "ございました");
  expect(test.screen99.line1_ex, "Thank you.");
  expect(test.screen99.line2_ex, "Please take your receipt.");
  expect(test.screen99.line3_ex, "");
  expect(test.screen99.line4_ex, "");
  expect(test.screen99.sound_led1, 6133);
  expect(test.screen99.sound_led2, 6133);
  expect(test.screen99.sound_led3, 0);
  expect(test.screen100.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄｶｰﾄﾞ読取画面");
  expect(test.screen100.msg1, "");
  expect(test.screen100.msg2, "");
  expect(test.screen100.msg1_size, 20);
  expect(test.screen100.msg2_size, 0);
  expect(test.screen100.sound1, 6258);
  expect(test.screen100.sound2, 6292);
  expect(test.screen100.sound3, 0);
  expect(test.screen100.snd_timer, 20);
  expect(test.screen100.timer1, 0);
  expect(test.screen100.timer2, 0);
  expect(test.screen100.timer3, 0);
  expect(test.screen100.dsp_flg1, 0);
  expect(test.screen100.dsp_flg2, 0);
  expect(test.screen100.movie01_ext, 0);
  expect(test.screen100.movie02_ext, 0);
  expect(test.screen100.movie03_ext, 0);
  expect(test.screen100.movie04_ext, 0);
  expect(test.screen100.line_title, "プリペイドでお支払い");
  expect(test.screen100.line_title_ex, "");
  expect(test.screen100.line1, "プリペイドカードを");
  expect(test.screen100.line2, "読ませてください");
  expect(test.screen100.line3, "");
  expect(test.screen100.line4, "");
  expect(test.screen100.line1_ex, "");
  expect(test.screen100.line2_ex, "");
  expect(test.screen100.line3_ex, "");
  expect(test.screen100.line4_ex, "");
  expect(test.screen100.sound_led1, 6258);
  expect(test.screen100.sound_led2, 6292);
  expect(test.screen100.sound_led3, 0);
  expect(test.screen101.title, "会員読込画面(フルセルフ)");
  expect(test.screen101.msg1, "");
  expect(test.screen101.msg2, "");
  expect(test.screen101.msg1_size, 0);
  expect(test.screen101.msg2_size, 0);
  expect(test.screen101.sound1, 0);
  expect(test.screen101.sound2, 0);
  expect(test.screen101.sound3, 0);
  expect(test.screen101.snd_timer, 0);
  expect(test.screen101.timer1, 0);
  expect(test.screen101.timer2, 0);
  expect(test.screen101.timer3, 0);
  expect(test.screen101.dsp_flg1, 0);
  expect(test.screen101.dsp_flg2, 0);
  expect(test.screen101.movie01_ext, 0);
  expect(test.screen101.movie02_ext, 0);
  expect(test.screen101.movie03_ext, 0);
  expect(test.screen101.movie04_ext, 0);
  expect(test.screen101.line_title, "");
  expect(test.screen101.line_title_ex, "");
  expect(test.screen101.line1, "");
  expect(test.screen101.line2, "");
  expect(test.screen101.line3, "");
  expect(test.screen101.line4, "");
  expect(test.screen101.line1_ex, "");
  expect(test.screen101.line2_ex, "");
  expect(test.screen101.line3_ex, "");
  expect(test.screen101.line4_ex, "");
  expect(test.screen101.sound_led1, 0);
  expect(test.screen101.sound_led2, 0);
  expect(test.screen101.sound_led3, 0);
  expect(test.screen102.title, "アイテムリスト画面(フルセルフ)");
  expect(test.screen102.msg1, "");
  expect(test.screen102.msg2, "");
  expect(test.screen102.msg1_size, 0);
  expect(test.screen102.msg2_size, 0);
  expect(test.screen102.sound1, 0);
  expect(test.screen102.sound2, 0);
  expect(test.screen102.sound3, 0);
  expect(test.screen102.snd_timer, 0);
  expect(test.screen102.timer1, 0);
  expect(test.screen102.timer2, 0);
  expect(test.screen102.timer3, 0);
  expect(test.screen102.dsp_flg1, 0);
  expect(test.screen102.dsp_flg2, 0);
  expect(test.screen102.movie01_ext, 0);
  expect(test.screen102.movie02_ext, 0);
  expect(test.screen102.movie03_ext, 0);
  expect(test.screen102.movie04_ext, 0);
  expect(test.screen102.line_title, "");
  expect(test.screen102.line_title_ex, "");
  expect(test.screen102.line1, "");
  expect(test.screen102.line2, "");
  expect(test.screen102.line3, "");
  expect(test.screen102.line4, "");
  expect(test.screen102.line1_ex, "");
  expect(test.screen102.line2_ex, "");
  expect(test.screen102.line3_ex, "");
  expect(test.screen102.line4_ex, "");
  expect(test.screen102.sound_led1, 0);
  expect(test.screen102.sound_led2, 0);
  expect(test.screen102.sound_led3, 0);
  expect(test.screen103.title, "カード選択画面");
  expect(test.screen103.msg1, "ポイントカードの種類を選択して下さい");
  expect(test.screen103.msg2, "");
  expect(test.screen103.msg1_size, 24);
  expect(test.screen103.msg2_size, 0);
  expect(test.screen103.sound1, 6270);
  expect(test.screen103.sound2, 0);
  expect(test.screen103.sound3, 0);
  expect(test.screen103.snd_timer, 10);
  expect(test.screen103.timer1, 0);
  expect(test.screen103.timer2, 0);
  expect(test.screen103.timer3, 0);
  expect(test.screen103.dsp_flg1, 0);
  expect(test.screen103.dsp_flg2, 0);
  expect(test.screen103.movie01_ext, 0);
  expect(test.screen103.movie02_ext, 0);
  expect(test.screen103.movie03_ext, 0);
  expect(test.screen103.movie04_ext, 0);
  expect(test.screen103.line_title, "");
  expect(test.screen103.line_title_ex, "");
  expect(test.screen103.line1, "");
  expect(test.screen103.line2, "");
  expect(test.screen103.line3, "");
  expect(test.screen103.line4, "");
  expect(test.screen103.line1_ex, "");
  expect(test.screen103.line2_ex, "");
  expect(test.screen103.line3_ex, "");
  expect(test.screen103.line4_ex, "");
  expect(test.screen103.sound_led1, 6281);
  expect(test.screen103.sound_led2, 0);
  expect(test.screen103.sound_led3, 0);
  expect(test.screen104.title, "カード読込画面");
  expect(test.screen104.msg1, "カードを読ませてください");
  expect(test.screen104.msg2, "");
  expect(test.screen104.msg1_size, 24);
  expect(test.screen104.msg2_size, 0);
  expect(test.screen104.sound1, 6270);
  expect(test.screen104.sound2, 0);
  expect(test.screen104.sound3, 0);
  expect(test.screen104.snd_timer, 10);
  expect(test.screen104.timer1, 0);
  expect(test.screen104.timer2, 0);
  expect(test.screen104.timer3, 0);
  expect(test.screen104.dsp_flg1, 0);
  expect(test.screen104.dsp_flg2, 0);
  expect(test.screen104.movie01_ext, 0);
  expect(test.screen104.movie02_ext, 0);
  expect(test.screen104.movie03_ext, 0);
  expect(test.screen104.movie04_ext, 0);
  expect(test.screen104.line_title, "");
  expect(test.screen104.line_title_ex, "");
  expect(test.screen104.line1, "CoGCaカードを");
  expect(test.screen104.line2, "タッチしてください");
  expect(test.screen104.line3, "");
  expect(test.screen104.line4, "");
  expect(test.screen104.line1_ex, "");
  expect(test.screen104.line2_ex, "");
  expect(test.screen104.line3_ex, "");
  expect(test.screen104.line4_ex, "");
  expect(test.screen104.sound_led1, 6283);
  expect(test.screen104.sound_led2, 0);
  expect(test.screen104.sound_led3, 0);
  expect(test.screen105.title, "カード読込画面");
  expect(test.screen105.msg1, "カードを読ませてください");
  expect(test.screen105.msg2, "");
  expect(test.screen105.msg1_size, 24);
  expect(test.screen105.msg2_size, 0);
  expect(test.screen105.sound1, 6270);
  expect(test.screen105.sound2, 0);
  expect(test.screen105.sound3, 0);
  expect(test.screen105.snd_timer, 10);
  expect(test.screen105.timer1, 0);
  expect(test.screen105.timer2, 0);
  expect(test.screen105.timer3, 0);
  expect(test.screen105.dsp_flg1, 0);
  expect(test.screen105.dsp_flg2, 0);
  expect(test.screen105.movie01_ext, 0);
  expect(test.screen105.movie02_ext, 0);
  expect(test.screen105.movie03_ext, 0);
  expect(test.screen105.movie04_ext, 0);
  expect(test.screen105.line_title, "");
  expect(test.screen105.line_title_ex, "");
  expect(test.screen105.line1, "カードを端末に");
  expect(test.screen105.line2, "通してください");
  expect(test.screen105.line3, "");
  expect(test.screen105.line4, "");
  expect(test.screen105.line1_ex, "");
  expect(test.screen105.line2_ex, "");
  expect(test.screen105.line3_ex, "");
  expect(test.screen105.line4_ex, "");
  expect(test.screen105.sound_led1, 6282);
  expect(test.screen105.sound_led2, 0);
  expect(test.screen105.sound_led3, 0);
  expect(test.screen106.title, "カード読込画面");
  expect(test.screen106.msg1, "カードを読ませてください");
  expect(test.screen106.msg2, "");
  expect(test.screen106.msg1_size, 24);
  expect(test.screen106.msg2_size, 0);
  expect(test.screen106.sound1, 6270);
  expect(test.screen106.sound2, 0);
  expect(test.screen106.sound3, 0);
  expect(test.screen106.snd_timer, 10);
  expect(test.screen106.timer1, 0);
  expect(test.screen106.timer2, 0);
  expect(test.screen106.timer3, 0);
  expect(test.screen106.dsp_flg1, 0);
  expect(test.screen106.dsp_flg2, 0);
  expect(test.screen106.movie01_ext, 0);
  expect(test.screen106.movie02_ext, 0);
  expect(test.screen106.movie03_ext, 0);
  expect(test.screen106.movie04_ext, 0);
  expect(test.screen106.line_title, "");
  expect(test.screen106.line_title_ex, "");
  expect(test.screen106.line1, "CoGCaカードを");
  expect(test.screen106.line2, "タッチしてください");
  expect(test.screen106.line3, "");
  expect(test.screen106.line4, "");
  expect(test.screen106.line1_ex, "");
  expect(test.screen106.line2_ex, "");
  expect(test.screen106.line3_ex, "");
  expect(test.screen106.line4_ex, "");
  expect(test.screen106.sound_led1, 6283);
  expect(test.screen106.sound_led2, 0);
  expect(test.screen106.sound_led3, 0);
  expect(test.screen107.title, "カード読込画面");
  expect(test.screen107.msg1, "カードを読ませてください");
  expect(test.screen107.msg2, "");
  expect(test.screen107.msg1_size, 24);
  expect(test.screen107.msg2_size, 0);
  expect(test.screen107.sound1, 6270);
  expect(test.screen107.sound2, 0);
  expect(test.screen107.sound3, 0);
  expect(test.screen107.snd_timer, 10);
  expect(test.screen107.timer1, 0);
  expect(test.screen107.timer2, 0);
  expect(test.screen107.timer3, 0);
  expect(test.screen107.dsp_flg1, 0);
  expect(test.screen107.dsp_flg2, 0);
  expect(test.screen107.movie01_ext, 0);
  expect(test.screen107.movie02_ext, 0);
  expect(test.screen107.movie03_ext, 0);
  expect(test.screen107.movie04_ext, 0);
  expect(test.screen107.line_title, "");
  expect(test.screen107.line_title_ex, "");
  expect(test.screen107.line1, "CoGCaカードを");
  expect(test.screen107.line2, "タッチしてください");
  expect(test.screen107.line3, "");
  expect(test.screen107.line4, "");
  expect(test.screen107.line1_ex, "");
  expect(test.screen107.line2_ex, "");
  expect(test.screen107.line3_ex, "");
  expect(test.screen107.line4_ex, "");
  expect(test.screen107.sound_led1, 6283);
  expect(test.screen107.sound_led2, 0);
  expect(test.screen107.sound_led3, 0);
  expect(test.screen109.title, "プリカチャージ入金画面");
  expect(test.screen109.msg1, "");
  expect(test.screen109.msg2, "");
  expect(test.screen109.msg1_size, 0);
  expect(test.screen109.msg2_size, 0);
  expect(test.screen109.sound1, 0);
  expect(test.screen109.sound2, 0);
  expect(test.screen109.sound3, 0);
  expect(test.screen109.snd_timer, 0);
  expect(test.screen109.timer1, 0);
  expect(test.screen109.timer2, 0);
  expect(test.screen109.timer3, 0);
  expect(test.screen109.dsp_flg1, 0);
  expect(test.screen109.dsp_flg2, 0);
  expect(test.screen109.movie01_ext, 0);
  expect(test.screen109.movie02_ext, 0);
  expect(test.screen109.movie03_ext, 0);
  expect(test.screen109.movie04_ext, 0);
  expect(test.screen109.line_title, "プリカチャージ");
  expect(test.screen109.line_title_ex, "");
  expect(test.screen109.line1, "お金を");
  expect(test.screen109.line2, "入れてください");
  expect(test.screen109.line3, "");
  expect(test.screen109.line4, "");
  expect(test.screen109.line1_ex, "");
  expect(test.screen109.line2_ex, "");
  expect(test.screen109.line3_ex, "");
  expect(test.screen109.line4_ex, "");
  expect(test.screen109.sound_led1, 6180);
  expect(test.screen109.sound_led2, 6130);
  expect(test.screen109.sound_led3, 6015);
  expect(test.screen111.title, "プリカ利用画面");
  expect(test.screen111.msg1, "プリペイドカードでお会計ですね");
  expect(test.screen111.msg2, "");
  expect(test.screen111.msg1_size, 0);
  expect(test.screen111.msg2_size, 0);
  expect(test.screen111.sound1, 0);
  expect(test.screen111.sound2, 0);
  expect(test.screen111.sound3, 0);
  expect(test.screen111.snd_timer, 20);
  expect(test.screen111.timer1, 0);
  expect(test.screen111.timer2, 0);
  expect(test.screen111.timer3, 0);
  expect(test.screen111.dsp_flg1, 0);
  expect(test.screen111.dsp_flg2, 0);
  expect(test.screen111.movie01_ext, 0);
  expect(test.screen111.movie02_ext, 0);
  expect(test.screen111.movie03_ext, 0);
  expect(test.screen111.movie04_ext, 0);
  expect(test.screen111.line_title, "プリカでお支払い");
  expect(test.screen111.line_title_ex, "Prepaid Card Payment");
  expect(test.screen111.line1, "お支払い金額を確認し");
  expect(test.screen111.line2, "カードを読ませてください");
  expect(test.screen111.line3, "");
  expect(test.screen111.line4, "");
  expect(test.screen111.line1_ex, "Please swipe");
  expect(test.screen111.line2_ex, "your prepaid card.");
  expect(test.screen111.line3_ex, "");
  expect(test.screen111.line4_ex, "");
  expect(test.screen111.sound_led1, 0);
  expect(test.screen111.sound_led2, 0);
  expect(test.screen111.sound_led3, 0);
  expect(test.screen112.title, "釣銭チャージ");
  expect(test.screen112.msg1, "");
  expect(test.screen112.msg2, "");
  expect(test.screen112.msg1_size, 0);
  expect(test.screen112.msg2_size, 0);
  expect(test.screen112.sound1, 0);
  expect(test.screen112.sound2, 0);
  expect(test.screen112.sound3, 0);
  expect(test.screen112.snd_timer, 0);
  expect(test.screen112.timer1, 0);
  expect(test.screen112.timer2, 0);
  expect(test.screen112.timer3, 0);
  expect(test.screen112.dsp_flg1, 0);
  expect(test.screen112.dsp_flg2, 0);
  expect(test.screen112.movie01_ext, 0);
  expect(test.screen112.movie02_ext, 0);
  expect(test.screen112.movie03_ext, 0);
  expect(test.screen112.movie04_ext, 0);
  expect(test.screen112.line_title, "釣銭チャージ中");
  expect(test.screen112.line_title_ex, "");
  expect(test.screen112.line1, "釣銭チャージ中です。");
  expect(test.screen112.line2, "しばらくお待ちください。");
  expect(test.screen112.line3, "");
  expect(test.screen112.line4, "");
  expect(test.screen112.line1_ex, "");
  expect(test.screen112.line2_ex, "");
  expect(test.screen112.line3_ex, "");
  expect(test.screen112.line4_ex, "");
  expect(test.screen112.sound_led1, 0);
  expect(test.screen112.sound_led2, 0);
  expect(test.screen112.sound_led3, 0);
  expect(test.screen113.title, "プリカ残高照会読取画面");
  expect(test.screen113.msg1, "カードを読ませてください");
  expect(test.screen113.msg2, "");
  expect(test.screen113.msg1_size, 0);
  expect(test.screen113.msg2_size, 0);
  expect(test.screen113.sound1, 6289);
  expect(test.screen113.sound2, 0);
  expect(test.screen113.sound3, 0);
  expect(test.screen113.snd_timer, 10);
  expect(test.screen113.timer1, 0);
  expect(test.screen113.timer2, 0);
  expect(test.screen113.timer3, 0);
  expect(test.screen113.dsp_flg1, 0);
  expect(test.screen113.dsp_flg2, 0);
  expect(test.screen113.movie01_ext, 0);
  expect(test.screen113.movie02_ext, 0);
  expect(test.screen113.movie03_ext, 0);
  expect(test.screen113.movie04_ext, 0);
  expect(test.screen113.line_title, "");
  expect(test.screen113.line_title_ex, "");
  expect(test.screen113.line1, "");
  expect(test.screen113.line2, "");
  expect(test.screen113.line3, "");
  expect(test.screen113.line4, "");
  expect(test.screen113.line1_ex, "");
  expect(test.screen113.line2_ex, "");
  expect(test.screen113.line3_ex, "");
  expect(test.screen113.line4_ex, "");
  expect(test.screen113.sound_led1, 6289);
  expect(test.screen113.sound_led2, 0);
  expect(test.screen113.sound_led3, 0);
  expect(test.screen114.title, "プリカ残高照会完了画面");
  expect(test.screen114.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen114.msg2, "");
  expect(test.screen114.msg1_size, 0);
  expect(test.screen114.msg2_size, 0);
  expect(test.screen114.sound1, 6578);
  expect(test.screen114.sound2, 0);
  expect(test.screen114.sound3, 0);
  expect(test.screen114.snd_timer, 20);
  expect(test.screen114.timer1, 0);
  expect(test.screen114.timer2, 0);
  expect(test.screen114.timer3, 0);
  expect(test.screen114.dsp_flg1, 0);
  expect(test.screen114.dsp_flg2, 0);
  expect(test.screen114.movie01_ext, 0);
  expect(test.screen114.movie02_ext, 0);
  expect(test.screen114.movie03_ext, 0);
  expect(test.screen114.movie04_ext, 0);
  expect(test.screen114.line_title, "");
  expect(test.screen114.line_title_ex, "");
  expect(test.screen114.line1, "");
  expect(test.screen114.line2, "");
  expect(test.screen114.line3, "");
  expect(test.screen114.line4, "");
  expect(test.screen114.line1_ex, "");
  expect(test.screen114.line2_ex, "");
  expect(test.screen114.line3_ex, "");
  expect(test.screen114.line4_ex, "");
  expect(test.screen114.sound_led1, 6578);
  expect(test.screen114.sound_led2, 0);
  expect(test.screen114.sound_led3, 0);
  expect(test.screen115.title, "ﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen115.msg1, "");
  expect(test.screen115.msg2, "");
  expect(test.screen115.msg1_size, 0);
  expect(test.screen115.msg2_size, 0);
  expect(test.screen115.sound1, 6016);
  expect(test.screen115.sound2, 0);
  expect(test.screen115.sound3, 0);
  expect(test.screen115.snd_timer, 20);
  expect(test.screen115.timer1, 10);
  expect(test.screen115.timer2, 0);
  expect(test.screen115.timer3, 0);
  expect(test.screen115.dsp_flg1, 0);
  expect(test.screen115.dsp_flg2, 0);
  expect(test.screen115.movie01_ext, 0);
  expect(test.screen115.movie02_ext, 0);
  expect(test.screen115.movie03_ext, 0);
  expect(test.screen115.movie04_ext, 0);
  expect(test.screen115.line_title, "");
  expect(test.screen115.line_title_ex, "");
  expect(test.screen115.line1, "よろしければ");
  expect(test.screen115.line2, "おわりボタンを");
  expect(test.screen115.line3, "押してください");
  expect(test.screen115.line4, "");
  expect(test.screen115.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen115.line2_ex, "button to complete");
  expect(test.screen115.line3_ex, "the payment.");
  expect(test.screen115.line4_ex, "");
  expect(test.screen115.sound_led1, 6179);
  expect(test.screen115.sound_led2, 6217);
  expect(test.screen115.sound_led3, 0);
  expect(test.screen116.title, "ﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen116.msg1, "レシートをお取りください。");
  expect(test.screen116.msg2, "");
  expect(test.screen116.msg1_size, 0);
  expect(test.screen116.msg2_size, 0);
  expect(test.screen116.sound1, 6018);
  expect(test.screen116.sound2, 0);
  expect(test.screen116.sound3, 0);
  expect(test.screen116.snd_timer, 0);
  expect(test.screen116.timer1, 5);
  expect(test.screen116.timer2, 10);
  expect(test.screen116.timer3, 0);
  expect(test.screen116.dsp_flg1, 0);
  expect(test.screen116.dsp_flg2, 0);
  expect(test.screen116.movie01_ext, 0);
  expect(test.screen116.movie02_ext, 0);
  expect(test.screen116.movie03_ext, 0);
  expect(test.screen116.movie04_ext, 0);
  expect(test.screen116.line_title, "");
  expect(test.screen116.line_title_ex, "");
  expect(test.screen116.line1, "レシートを");
  expect(test.screen116.line2, "お受け取りください");
  expect(test.screen116.line3, "ありがとう");
  expect(test.screen116.line4, "ございました");
  expect(test.screen116.line1_ex, "Thank you.");
  expect(test.screen116.line2_ex, "Please take your receipt.");
  expect(test.screen116.line3_ex, "");
  expect(test.screen116.line4_ex, "");
  expect(test.screen116.sound_led1, 6133);
  expect(test.screen116.sound_led2, 0);
  expect(test.screen116.sound_led3, 0);
  expect(test.screen117.title, "ﾎﾟｲﾝﾄ支払画面");
  expect(test.screen117.msg1, "");
  expect(test.screen117.msg2, "");
  expect(test.screen117.msg1_size, 24);
  expect(test.screen117.msg2_size, 0);
  expect(test.screen117.sound1, 6534);
  expect(test.screen117.sound2, 6534);
  expect(test.screen117.sound3, 0);
  expect(test.screen117.snd_timer, 20);
  expect(test.screen117.timer1, 10);
  expect(test.screen117.timer2, 0);
  expect(test.screen117.timer3, 0);
  expect(test.screen117.dsp_flg1, 0);
  expect(test.screen117.dsp_flg2, 0);
  expect(test.screen117.movie01_ext, 0);
  expect(test.screen117.movie02_ext, 0);
  expect(test.screen117.movie03_ext, 0);
  expect(test.screen117.movie04_ext, 0);
  expect(test.screen117.line_title, "");
  expect(test.screen117.line_title_ex, "");
  expect(test.screen117.line1, "ポイント数を入力して");
  expect(test.screen117.line2, "決定を押してください");
  expect(test.screen117.line3, "訂正する場合はクリア");
  expect(test.screen117.line4, "ボタンを押してください");
  expect(test.screen117.line1_ex, "ポイント利用単位：");
  expect(test.screen117.line2_ex, "");
  expect(test.screen117.line3_ex, "");
  expect(test.screen117.line4_ex, "");
  expect(test.screen117.sound_led1, 6534);
  expect(test.screen117.sound_led2, 6534);
  expect(test.screen117.sound_led3, 0);
  expect(test.screen118.title, "暗証番号入力画面");
  expect(test.screen118.msg1, "");
  expect(test.screen118.msg2, "");
  expect(test.screen118.msg1_size, 20);
  expect(test.screen118.msg2_size, 0);
  expect(test.screen118.sound1, 0);
  expect(test.screen118.sound2, 0);
  expect(test.screen118.sound3, 0);
  expect(test.screen118.snd_timer, 10);
  expect(test.screen118.timer1, 0);
  expect(test.screen118.timer2, 0);
  expect(test.screen118.timer3, 0);
  expect(test.screen118.dsp_flg1, 0);
  expect(test.screen118.dsp_flg2, 0);
  expect(test.screen118.movie01_ext, 0);
  expect(test.screen118.movie02_ext, 0);
  expect(test.screen118.movie03_ext, 0);
  expect(test.screen118.movie04_ext, 0);
  expect(test.screen118.line_title, "暗証番号を入力");
  expect(test.screen118.line_title_ex, "");
  expect(test.screen118.line1, "暗証番号を");
  expect(test.screen118.line2, "入力してください");
  expect(test.screen118.line3, "");
  expect(test.screen118.line4, "");
  expect(test.screen118.line1_ex, "Enter the passcode.");
  expect(test.screen118.line2_ex, "");
  expect(test.screen118.line3_ex, "");
  expect(test.screen118.line4_ex, "");
  expect(test.screen118.sound_led1, 6239);
  expect(test.screen118.sound_led2, 6239);
  expect(test.screen118.sound_led3, 0);
  expect(test.screen119.title, "iD利用画面");
  expect(test.screen119.msg1, "iDでお会計ですね");
  expect(test.screen119.msg2, "");
  expect(test.screen119.msg1_size, 0);
  expect(test.screen119.msg2_size, 0);
  expect(test.screen119.sound1, 6124);
  expect(test.screen119.sound2, 6255);
  expect(test.screen119.sound3, 0);
  expect(test.screen119.snd_timer, 20);
  expect(test.screen119.timer1, 0);
  expect(test.screen119.timer2, 0);
  expect(test.screen119.timer3, 0);
  expect(test.screen119.dsp_flg1, 0);
  expect(test.screen119.dsp_flg2, 0);
  expect(test.screen119.movie01_ext, 0);
  expect(test.screen119.movie02_ext, 0);
  expect(test.screen119.movie03_ext, 0);
  expect(test.screen119.movie04_ext, 0);
  expect(test.screen119.line_title, "ｉＤでお支払い");
  expect(test.screen119.line_title_ex, "iD Payment");
  expect(test.screen119.line1, "お支払い金額を確認し");
  expect(test.screen119.line2, "カードをタッチしてください");
  expect(test.screen119.line3, "");
  expect(test.screen119.line4, "");
  expect(test.screen119.line1_ex, "Tap your IC card");
  expect(test.screen119.line2_ex, "on the terminal.");
  expect(test.screen119.line3_ex, "");
  expect(test.screen119.line4_ex, "");
  expect(test.screen119.sound_led1, 6124);
  expect(test.screen119.sound_led2, 6255);
  expect(test.screen119.sound_led3, 0);
  expect(test.screen120.title, "QUICPay利用画面");
  expect(test.screen120.msg1, "QUICPayでお会計ですね");
  expect(test.screen120.msg2, "");
  expect(test.screen120.msg1_size, 0);
  expect(test.screen120.msg2_size, 0);
  expect(test.screen120.sound1, 6124);
  expect(test.screen120.sound2, 6254);
  expect(test.screen120.sound3, 0);
  expect(test.screen120.snd_timer, 20);
  expect(test.screen120.timer1, 0);
  expect(test.screen120.timer2, 0);
  expect(test.screen120.timer3, 0);
  expect(test.screen120.dsp_flg1, 0);
  expect(test.screen120.dsp_flg2, 0);
  expect(test.screen120.movie01_ext, 0);
  expect(test.screen120.movie02_ext, 0);
  expect(test.screen120.movie03_ext, 0);
  expect(test.screen120.movie04_ext, 0);
  expect(test.screen120.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen120.line_title_ex, "QUICPay Payment");
  expect(test.screen120.line1, "お支払い金額を確認し");
  expect(test.screen120.line2, "カードをタッチしてください");
  expect(test.screen120.line3, "");
  expect(test.screen120.line4, "");
  expect(test.screen120.line1_ex, "Tap your IC card");
  expect(test.screen120.line2_ex, "on the terminal.");
  expect(test.screen120.line3_ex, "");
  expect(test.screen120.line4_ex, "");
  expect(test.screen120.sound_led1, 6124);
  expect(test.screen120.sound_led2, 6254);
  expect(test.screen120.sound_led3, 0);
  expect(test.screen121.title, "ID支払完了画面");
  expect(test.screen121.msg1, "レシートをお取りください。");
  expect(test.screen121.msg2, "");
  expect(test.screen121.msg1_size, 0);
  expect(test.screen121.msg2_size, 0);
  expect(test.screen121.sound1, 6133);
  expect(test.screen121.sound2, 0);
  expect(test.screen121.sound3, 0);
  expect(test.screen121.snd_timer, 0);
  expect(test.screen121.timer1, 5);
  expect(test.screen121.timer2, 10);
  expect(test.screen121.timer3, 0);
  expect(test.screen121.dsp_flg1, 0);
  expect(test.screen121.dsp_flg2, 0);
  expect(test.screen121.movie01_ext, 0);
  expect(test.screen121.movie02_ext, 0);
  expect(test.screen121.movie03_ext, 0);
  expect(test.screen121.movie04_ext, 0);
  expect(test.screen121.line_title, "");
  expect(test.screen121.line_title_ex, "");
  expect(test.screen121.line1, "レシートを");
  expect(test.screen121.line2, "お受け取りください");
  expect(test.screen121.line3, "ありがとう");
  expect(test.screen121.line4, "ございました");
  expect(test.screen121.line1_ex, "Thank you.");
  expect(test.screen121.line2_ex, "Please take your receipt.");
  expect(test.screen121.line3_ex, "");
  expect(test.screen121.line4_ex, "");
  expect(test.screen121.sound_led1, 6133);
  expect(test.screen121.sound_led2, 6133);
  expect(test.screen121.sound_led3, 0);
  expect(test.screen122.title, "QUICPay支払完了画面");
  expect(test.screen122.msg1, "レシートをお取りください。");
  expect(test.screen122.msg2, "");
  expect(test.screen122.msg1_size, 0);
  expect(test.screen122.msg2_size, 0);
  expect(test.screen122.sound1, 6133);
  expect(test.screen122.sound2, 0);
  expect(test.screen122.sound3, 0);
  expect(test.screen122.snd_timer, 0);
  expect(test.screen122.timer1, 5);
  expect(test.screen122.timer2, 10);
  expect(test.screen122.timer3, 0);
  expect(test.screen122.dsp_flg1, 0);
  expect(test.screen122.dsp_flg2, 0);
  expect(test.screen122.movie01_ext, 0);
  expect(test.screen122.movie02_ext, 0);
  expect(test.screen122.movie03_ext, 0);
  expect(test.screen122.movie04_ext, 0);
  expect(test.screen122.line_title, "");
  expect(test.screen122.line_title_ex, "");
  expect(test.screen122.line1, "レシートを");
  expect(test.screen122.line2, "お受け取りください");
  expect(test.screen122.line3, "ありがとう");
  expect(test.screen122.line4, "ございました");
  expect(test.screen122.line1_ex, "Thank you.");
  expect(test.screen122.line2_ex, "Please take your receipt.");
  expect(test.screen122.line3_ex, "");
  expect(test.screen122.line4_ex, "");
  expect(test.screen122.sound_led1, 6133);
  expect(test.screen122.sound_led2, 6133);
  expect(test.screen122.sound_led3, 0);
  expect(test.screen123.title, "Verifone支払完了画面");
  expect(test.screen123.msg1, "レシートをお取りください。");
  expect(test.screen123.msg2, "");
  expect(test.screen123.msg1_size, 0);
  expect(test.screen123.msg2_size, 0);
  expect(test.screen123.sound1, 6133);
  expect(test.screen123.sound2, 0);
  expect(test.screen123.sound3, 0);
  expect(test.screen123.snd_timer, 0);
  expect(test.screen123.timer1, 5);
  expect(test.screen123.timer2, 10);
  expect(test.screen123.timer3, 0);
  expect(test.screen123.dsp_flg1, 0);
  expect(test.screen123.dsp_flg2, 0);
  expect(test.screen123.movie01_ext, 0);
  expect(test.screen123.movie02_ext, 0);
  expect(test.screen123.movie03_ext, 0);
  expect(test.screen123.movie04_ext, 0);
  expect(test.screen123.line_title, "");
  expect(test.screen123.line_title_ex, "");
  expect(test.screen123.line1, "レシートを");
  expect(test.screen123.line2, "お受け取りください");
  expect(test.screen123.line3, "ありがとう");
  expect(test.screen123.line4, "ございました");
  expect(test.screen123.line1_ex, "Please take your card");
  expect(test.screen123.line2_ex, "and the receipt.");
  expect(test.screen123.line3_ex, "Thank you.");
  expect(test.screen123.line4_ex, "");
  expect(test.screen123.sound_led1, 6133);
  expect(test.screen123.sound_led2, 0);
  expect(test.screen123.sound_led3, 0);
  expect(test.screen124.title, "Verifone支払確認画面");
  expect(test.screen124.msg1, "");
  expect(test.screen124.msg2, "");
  expect(test.screen124.msg1_size, 0);
  expect(test.screen124.msg2_size, 0);
  expect(test.screen124.sound1, 6179);
  expect(test.screen124.sound2, "");
  expect(test.screen124.sound3, "");
  expect(test.screen124.snd_timer, 20);
  expect(test.screen124.timer1, 0);
  expect(test.screen124.timer2, 0);
  expect(test.screen124.timer3, 0);
  expect(test.screen124.dsp_flg1, 0);
  expect(test.screen124.dsp_flg2, 0);
  expect(test.screen124.movie01_ext, 0);
  expect(test.screen124.movie02_ext, 0);
  expect(test.screen124.movie03_ext, 0);
  expect(test.screen124.movie04_ext, 0);
  expect(test.screen124.line_title, "");
  expect(test.screen124.line_title_ex, "");
  expect(test.screen124.line1, "よろしければ");
  expect(test.screen124.line2, "おわりボタンを");
  expect(test.screen124.line3, "押してください");
  expect(test.screen124.line4, "");
  expect(test.screen124.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen124.line2_ex, "button to complete");
  expect(test.screen124.line3_ex, "the payment.");
  expect(test.screen124.line4_ex, "");
  expect(test.screen124.sound_led1, 6179);
  expect(test.screen124.sound_led2, "");
  expect(test.screen124.sound_led3, "");
  expect(test.screen125.title, "楽天ポイントカード確認画面");
  expect(test.screen125.msg1, "楽天ポイントカードはお持ちですか？");
  expect(test.screen125.msg2, "");
  expect(test.screen125.msg1_size, 44);
  expect(test.screen125.msg2_size, "");
  expect(test.screen125.sound1, 6603);
  expect(test.screen125.sound2, 0);
  expect(test.screen125.sound3, 0);
  expect(test.screen125.snd_timer, 30);
  expect(test.screen125.timer1, 0);
  expect(test.screen125.timer2, 0);
  expect(test.screen125.timer3, 0);
  expect(test.screen125.dsp_flg1, 0);
  expect(test.screen125.dsp_flg2, 0);
  expect(test.screen125.movie01_ext, 0);
  expect(test.screen125.movie02_ext, 0);
  expect(test.screen125.movie03_ext, 0);
  expect(test.screen125.movie04_ext, 0);
  expect(test.screen125.line_title, "");
  expect(test.screen125.line_title_ex, "");
  expect(test.screen125.line1, "");
  expect(test.screen125.line2, "");
  expect(test.screen125.line3, "");
  expect(test.screen125.line4, "");
  expect(test.screen125.line1_ex, "");
  expect(test.screen125.line2_ex, "");
  expect(test.screen125.line3_ex, "");
  expect(test.screen125.line4_ex, "");
  expect(test.screen125.sound_led1, 6603);
  expect(test.screen125.sound_led2, 0);
  expect(test.screen125.sound_led3, 0);
  expect(test.screen126.title, "楽天ポイントカード読込画面");
  expect(test.screen126.msg1, "楽天ポイントカードの登録を行ってください。");
  expect(test.screen126.msg2, "");
  expect(test.screen126.msg1_size, 44);
  expect(test.screen126.msg2_size, "");
  expect(test.screen126.sound1, 6604);
  expect(test.screen126.sound2, 0);
  expect(test.screen126.sound3, 0);
  expect(test.screen126.snd_timer, 30);
  expect(test.screen126.timer1, 0);
  expect(test.screen126.timer2, 0);
  expect(test.screen126.timer3, 0);
  expect(test.screen126.dsp_flg1, 0);
  expect(test.screen126.dsp_flg2, 0);
  expect(test.screen126.movie01_ext, 0);
  expect(test.screen126.movie02_ext, 0);
  expect(test.screen126.movie03_ext, 0);
  expect(test.screen126.movie04_ext, 0);
  expect(test.screen126.line_title, "");
  expect(test.screen126.line_title_ex, "");
  expect(test.screen126.line1, "");
  expect(test.screen126.line2, "");
  expect(test.screen126.line3, "");
  expect(test.screen126.line4, "");
  expect(test.screen126.line1_ex, "");
  expect(test.screen126.line2_ex, "");
  expect(test.screen126.line3_ex, "");
  expect(test.screen126.line4_ex, "");
  expect(test.screen126.sound_led1, 6604);
  expect(test.screen126.sound_led2, 0);
  expect(test.screen126.sound_led3, 0);
  expect(test.screen127.title, "PiTaPa利用画面<verifone>");
  expect(test.screen127.msg1, "PiTaPaでお会計ですね");
  expect(test.screen127.msg2, "");
  expect(test.screen127.msg1_size, 0);
  expect(test.screen127.msg2_size, 0);
  expect(test.screen127.sound1, 6124);
  expect(test.screen127.sound2, 6048);
  expect(test.screen127.sound3, 0);
  expect(test.screen127.snd_timer, 20);
  expect(test.screen127.timer1, 0);
  expect(test.screen127.timer2, 0);
  expect(test.screen127.timer3, 0);
  expect(test.screen127.dsp_flg1, 0);
  expect(test.screen127.dsp_flg2, 0);
  expect(test.screen127.movie01_ext, 0);
  expect(test.screen127.movie02_ext, 0);
  expect(test.screen127.movie03_ext, 0);
  expect(test.screen127.movie04_ext, 0);
  expect(test.screen127.line_title, "ＰｉＴａＰａでお支払い");
  expect(test.screen127.line_title_ex, "PiTaPa Payment");
  expect(test.screen127.line1, "お支払い金額を確認し");
  expect(test.screen127.line2, "カードをタッチしてください");
  expect(test.screen127.line3, "");
  expect(test.screen127.line4, "");
  expect(test.screen127.line1_ex, "Tap your IC card");
  expect(test.screen127.line2_ex, "on the terminal.");
  expect(test.screen127.line3_ex, "");
  expect(test.screen127.line4_ex, "");
  expect(test.screen127.sound_led1, 6124);
  expect(test.screen127.sound_led2, 6048);
  expect(test.screen127.sound_led3, 0);
  expect(test.screen128.title, "カード読込画面");
  expect(test.screen128.msg1, "カードを読ませてください");
  expect(test.screen128.msg2, "");
  expect(test.screen128.msg1_size, 24);
  expect(test.screen128.msg2_size, 0);
  expect(test.screen128.sound1, 6270);
  expect(test.screen128.sound2, 0);
  expect(test.screen128.sound3, 0);
  expect(test.screen128.snd_timer, 10);
  expect(test.screen128.timer1, 0);
  expect(test.screen128.timer2, 0);
  expect(test.screen128.timer3, 0);
  expect(test.screen128.dsp_flg1, 0);
  expect(test.screen128.dsp_flg2, 0);
  expect(test.screen128.movie01_ext, 0);
  expect(test.screen128.movie02_ext, 0);
  expect(test.screen128.movie03_ext, 0);
  expect(test.screen128.movie04_ext, 0);
  expect(test.screen128.line_title, "");
  expect(test.screen128.line_title_ex, "");
  expect(test.screen128.line1, "友の会カードを");
  expect(test.screen128.line2, "読ませてください");
  expect(test.screen128.line3, "");
  expect(test.screen128.line4, "");
  expect(test.screen128.line1_ex, "");
  expect(test.screen128.line2_ex, "");
  expect(test.screen128.line3_ex, "");
  expect(test.screen128.line4_ex, "");
  expect(test.screen128.sound_led1, 6720);
  expect(test.screen128.sound_led2, 0);
  expect(test.screen128.sound_led3, 0);
  expect(test.screen129.title, "友の会でお支払画面");
  expect(test.screen129.msg1, "");
  expect(test.screen129.msg2, "");
  expect(test.screen129.msg1_size, 20);
  expect(test.screen129.msg2_size, 0);
  expect(test.screen129.sound1, 6258);
  expect(test.screen129.sound2, 0);
  expect(test.screen129.sound3, 0);
  expect(test.screen129.snd_timer, 20);
  expect(test.screen129.timer1, 0);
  expect(test.screen129.timer2, 0);
  expect(test.screen129.timer3, 0);
  expect(test.screen129.dsp_flg1, 0);
  expect(test.screen129.dsp_flg2, 0);
  expect(test.screen129.movie01_ext, 0);
  expect(test.screen129.movie02_ext, 0);
  expect(test.screen129.movie03_ext, 0);
  expect(test.screen129.movie04_ext, 0);
  expect(test.screen129.line_title, "友の会でお支払い");
  expect(test.screen129.line_title_ex, "");
  expect(test.screen129.line1, "あああ");
  expect(test.screen129.line2, "いいい");
  expect(test.screen129.line3, "");
  expect(test.screen129.line4, "");
  expect(test.screen129.line1_ex, "");
  expect(test.screen129.line2_ex, "");
  expect(test.screen129.line3_ex, "");
  expect(test.screen129.line4_ex, "");
  expect(test.screen129.sound_led1, 6258);
  expect(test.screen129.sound_led2, 0);
  expect(test.screen129.sound_led3, 0);
  expect(test.screen130.title, "友の会支払確認画面");
  expect(test.screen130.msg1, "");
  expect(test.screen130.msg2, "");
  expect(test.screen130.msg1_size, 0);
  expect(test.screen130.msg2_size, 0);
  expect(test.screen130.sound1, 6179);
  expect(test.screen130.sound2, "");
  expect(test.screen130.sound3, "");
  expect(test.screen130.snd_timer, 20);
  expect(test.screen130.timer1, 0);
  expect(test.screen130.timer2, 0);
  expect(test.screen130.timer3, 0);
  expect(test.screen130.dsp_flg1, 0);
  expect(test.screen130.dsp_flg2, 0);
  expect(test.screen130.movie01_ext, 0);
  expect(test.screen130.movie02_ext, 0);
  expect(test.screen130.movie03_ext, 0);
  expect(test.screen130.movie04_ext, 0);
  expect(test.screen130.line_title, "");
  expect(test.screen130.line_title_ex, "");
  expect(test.screen130.line1, "よろしければ");
  expect(test.screen130.line2, "おわりボタンを");
  expect(test.screen130.line3, "押してください");
  expect(test.screen130.line4, "");
  expect(test.screen130.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen130.line2_ex, "button to complete");
  expect(test.screen130.line3_ex, "the payment.");
  expect(test.screen130.line4_ex, "");
  expect(test.screen130.sound_led1, 6179);
  expect(test.screen130.sound_led2, "");
  expect(test.screen130.sound_led3, "");
  expect(test.screen131.title, "友の会支払完了画面");
  expect(test.screen131.msg1, "レシートをお取りください。");
  expect(test.screen131.msg2, "");
  expect(test.screen131.msg1_size, 0);
  expect(test.screen131.msg2_size, 0);
  expect(test.screen131.sound1, 6133);
  expect(test.screen131.sound2, 0);
  expect(test.screen131.sound3, 0);
  expect(test.screen131.snd_timer, 0);
  expect(test.screen131.timer1, 5);
  expect(test.screen131.timer2, 10);
  expect(test.screen131.timer3, 0);
  expect(test.screen131.dsp_flg1, 0);
  expect(test.screen131.dsp_flg2, 0);
  expect(test.screen131.movie01_ext, 0);
  expect(test.screen131.movie02_ext, 0);
  expect(test.screen131.movie03_ext, 0);
  expect(test.screen131.movie04_ext, 0);
  expect(test.screen131.line_title, "");
  expect(test.screen131.line_title_ex, "");
  expect(test.screen131.line1, "レシートを");
  expect(test.screen131.line2, "お受け取りください");
  expect(test.screen131.line3, "ありがとう");
  expect(test.screen131.line4, "ございました");
  expect(test.screen131.line1_ex, "Please take your card");
  expect(test.screen131.line2_ex, "and the receipt.");
  expect(test.screen131.line3_ex, "Thank you.");
  expect(test.screen131.line4_ex, "");
  expect(test.screen131.sound_led1, 6133);
  expect(test.screen131.sound_led2, 0);
  expect(test.screen131.sound_led3, 0);
  expect(test.screen132.title, "Tクーポン確認画面");
  expect(test.screen132.msg1, "クーポンはお持ちですか？");
  expect(test.screen132.msg2, "");
  expect(test.screen132.msg1_size, 44);
  expect(test.screen132.msg2_size, "");
  expect(test.screen132.sound1, 6552);
  expect(test.screen132.sound2, 0);
  expect(test.screen132.sound3, 0);
  expect(test.screen132.snd_timer, 30);
  expect(test.screen132.timer1, 0);
  expect(test.screen132.timer2, 0);
  expect(test.screen132.timer3, 0);
  expect(test.screen132.dsp_flg1, 0);
  expect(test.screen132.dsp_flg2, 0);
  expect(test.screen132.movie01_ext, 0);
  expect(test.screen132.movie02_ext, 0);
  expect(test.screen132.movie03_ext, 0);
  expect(test.screen132.movie04_ext, 0);
  expect(test.screen132.line_title, "");
  expect(test.screen132.line_title_ex, "");
  expect(test.screen132.line1, "");
  expect(test.screen132.line2, "");
  expect(test.screen132.line3, "");
  expect(test.screen132.line4, "");
  expect(test.screen132.line1_ex, "");
  expect(test.screen132.line2_ex, "");
  expect(test.screen132.line3_ex, "");
  expect(test.screen132.line4_ex, "");
  expect(test.screen132.sound_led1, 6552);
  expect(test.screen132.sound_led2, 0);
  expect(test.screen132.sound_led3, 0);
  expect(test.screen133.title, "Tクーポン読取画面");
  expect(test.screen133.msg1, "クーポンバーコードを");
  expect(test.screen133.msg2, "スキャンしてください");
  expect(test.screen133.msg1_size, 0);
  expect(test.screen133.msg2_size, 0);
  expect(test.screen133.sound1, 6553);
  expect(test.screen133.sound2, 0);
  expect(test.screen133.sound3, 0);
  expect(test.screen133.snd_timer, 20);
  expect(test.screen133.timer1, 0);
  expect(test.screen133.timer2, 0);
  expect(test.screen133.timer3, 0);
  expect(test.screen133.dsp_flg1, 0);
  expect(test.screen133.dsp_flg2, 0);
  expect(test.screen133.movie01_ext, 0);
  expect(test.screen133.movie02_ext, 0);
  expect(test.screen133.movie03_ext, 0);
  expect(test.screen133.movie04_ext, 0);
  expect(test.screen133.line_title, "");
  expect(test.screen133.line_title_ex, "");
  expect(test.screen133.line1, "");
  expect(test.screen133.line2, "");
  expect(test.screen133.line3, "");
  expect(test.screen133.line4, "");
  expect(test.screen133.line1_ex, "");
  expect(test.screen133.line2_ex, "");
  expect(test.screen133.line3_ex, "");
  expect(test.screen133.line4_ex, "");
  expect(test.screen133.sound_led1, 6553);
  expect(test.screen133.sound_led2, 0);
  expect(test.screen133.sound_led3, 0);
  expect(test.screen134.title, "楽天ポイント利用確認画面");
  expect(test.screen134.msg1, "楽天ポイントを利用しますか？");
  expect(test.screen134.msg2, "");
  expect(test.screen134.msg1_size, 44);
  expect(test.screen134.msg2_size, "");
  expect(test.screen134.sound1, 6631);
  expect(test.screen134.sound2, 0);
  expect(test.screen134.sound3, 0);
  expect(test.screen134.snd_timer, 30);
  expect(test.screen134.timer1, 0);
  expect(test.screen134.timer2, 0);
  expect(test.screen134.timer3, 0);
  expect(test.screen134.dsp_flg1, 0);
  expect(test.screen134.dsp_flg2, 0);
  expect(test.screen134.movie01_ext, 0);
  expect(test.screen134.movie02_ext, 0);
  expect(test.screen134.movie03_ext, 0);
  expect(test.screen134.movie04_ext, 0);
  expect(test.screen134.line_title, "");
  expect(test.screen134.line_title_ex, "");
  expect(test.screen134.line1, "");
  expect(test.screen134.line2, "");
  expect(test.screen134.line3, "");
  expect(test.screen134.line4, "");
  expect(test.screen134.line1_ex, "");
  expect(test.screen134.line2_ex, "");
  expect(test.screen134.line3_ex, "");
  expect(test.screen134.line4_ex, "");
  expect(test.screen134.sound_led1, 6631);
  expect(test.screen134.sound_led2, 0);
  expect(test.screen134.sound_led3, 0);
  expect(test.screen135.title, "Edyリトライ画面");
  expect(test.screen135.msg1, "もう一度カードを");
  expect(test.screen135.msg2, "タッチしてください");
  expect(test.screen135.msg1_size, 0);
  expect(test.screen135.msg2_size, 0);
  expect(test.screen135.sound1, 6277);
  expect(test.screen135.sound2, 0);
  expect(test.screen135.sound3, 0);
  expect(test.screen135.snd_timer, 10);
  expect(test.screen135.timer1, 0);
  expect(test.screen135.timer2, 0);
  expect(test.screen135.timer3, 0);
  expect(test.screen135.dsp_flg1, 0);
  expect(test.screen135.dsp_flg2, 0);
  expect(test.screen135.movie01_ext, 0);
  expect(test.screen135.movie02_ext, 0);
  expect(test.screen135.movie03_ext, 0);
  expect(test.screen135.movie04_ext, 0);
  expect(test.screen135.line_title, "Ｅｄｙでお支払い");
  expect(test.screen135.line_title_ex, "");
  expect(test.screen135.line1, "カードの読取が不十分です");
  expect(test.screen135.line2, "もう一度カードを");
  expect(test.screen135.line3, "タッチしてください");
  expect(test.screen135.line4, "");
  expect(test.screen135.line1_ex, "");
  expect(test.screen135.line2_ex, "");
  expect(test.screen135.line3_ex, "");
  expect(test.screen135.line4_ex, "");
  expect(test.screen135.sound_led1, 6277);
  expect(test.screen135.sound_led2, 0);
  expect(test.screen135.sound_led3, 0);
  expect(test.screen136.title, "iDリトライ画面");
  expect(test.screen136.msg1, "もう一度カードを");
  expect(test.screen136.msg2, "タッチしてください");
  expect(test.screen136.msg1_size, 0);
  expect(test.screen136.msg2_size, 0);
  expect(test.screen136.sound1, 6277);
  expect(test.screen136.sound2, 0);
  expect(test.screen136.sound3, 0);
  expect(test.screen136.snd_timer, 10);
  expect(test.screen136.timer1, 0);
  expect(test.screen136.timer2, 0);
  expect(test.screen136.timer3, 0);
  expect(test.screen136.dsp_flg1, 0);
  expect(test.screen136.dsp_flg2, 0);
  expect(test.screen136.movie01_ext, 0);
  expect(test.screen136.movie02_ext, 0);
  expect(test.screen136.movie03_ext, 0);
  expect(test.screen136.movie04_ext, 0);
  expect(test.screen136.line_title, "ｉＤでお支払い");
  expect(test.screen136.line_title_ex, "");
  expect(test.screen136.line1, "カードの読取が不十分です");
  expect(test.screen136.line2, "もう一度カードを");
  expect(test.screen136.line3, "タッチしてください");
  expect(test.screen136.line4, "");
  expect(test.screen136.line1_ex, "");
  expect(test.screen136.line2_ex, "");
  expect(test.screen136.line3_ex, "");
  expect(test.screen136.line4_ex, "");
  expect(test.screen136.sound_led1, 6277);
  expect(test.screen136.sound_led2, 0);
  expect(test.screen136.sound_led3, 0);
  expect(test.screen137.title, "交通系ICリトライ画面");
  expect(test.screen137.msg1, "もう一度カードを");
  expect(test.screen137.msg2, "タッチしてください");
  expect(test.screen137.msg1_size, 0);
  expect(test.screen137.msg2_size, 0);
  expect(test.screen137.sound1, 6277);
  expect(test.screen137.sound2, 0);
  expect(test.screen137.sound3, 0);
  expect(test.screen137.snd_timer, 10);
  expect(test.screen137.timer1, 0);
  expect(test.screen137.timer2, 0);
  expect(test.screen137.timer3, 0);
  expect(test.screen137.dsp_flg1, 0);
  expect(test.screen137.dsp_flg2, 0);
  expect(test.screen137.movie01_ext, 0);
  expect(test.screen137.movie02_ext, 0);
  expect(test.screen137.movie03_ext, 0);
  expect(test.screen137.movie04_ext, 0);
  expect(test.screen137.line_title, "交通系ＩＣでお支払い");
  expect(test.screen137.line_title_ex, "");
  expect(test.screen137.line1, "カードの読取が不十分です");
  expect(test.screen137.line2, "もう一度カードを");
  expect(test.screen137.line3, "タッチしてください");
  expect(test.screen137.line4, "");
  expect(test.screen137.line1_ex, "");
  expect(test.screen137.line2_ex, "");
  expect(test.screen137.line3_ex, "");
  expect(test.screen137.line4_ex, "");
  expect(test.screen137.sound_led1, 6277);
  expect(test.screen137.sound_led2, 0);
  expect(test.screen137.sound_led3, 0);
  expect(test.screen138.title, "QUICPayリトライ画面");
  expect(test.screen138.msg1, "もう一度カードを");
  expect(test.screen138.msg2, "タッチしてください");
  expect(test.screen138.msg1_size, 0);
  expect(test.screen138.msg2_size, 0);
  expect(test.screen138.sound1, 6277);
  expect(test.screen138.sound2, 0);
  expect(test.screen138.sound3, 0);
  expect(test.screen138.snd_timer, 10);
  expect(test.screen138.timer1, 0);
  expect(test.screen138.timer2, 0);
  expect(test.screen138.timer3, 0);
  expect(test.screen138.dsp_flg1, 0);
  expect(test.screen138.dsp_flg2, 0);
  expect(test.screen138.movie01_ext, 0);
  expect(test.screen138.movie02_ext, 0);
  expect(test.screen138.movie03_ext, 0);
  expect(test.screen138.movie04_ext, 0);
  expect(test.screen138.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen138.line_title_ex, "");
  expect(test.screen138.line1, "カードの読取が不十分です");
  expect(test.screen138.line2, "もう一度カードを");
  expect(test.screen138.line3, "タッチしてください");
  expect(test.screen138.line4, "");
  expect(test.screen138.line1_ex, "");
  expect(test.screen138.line2_ex, "");
  expect(test.screen138.line3_ex, "");
  expect(test.screen138.line4_ex, "");
  expect(test.screen138.sound_led1, 6277);
  expect(test.screen138.sound_led2, 0);
  expect(test.screen138.sound_led3, 0);
  expect(test.screen139.title, "nanacoリトライ画面");
  expect(test.screen139.msg1, "もう一度カードを");
  expect(test.screen139.msg2, "タッチしてください");
  expect(test.screen139.msg1_size, 0);
  expect(test.screen139.msg2_size, 0);
  expect(test.screen139.sound1, 6277);
  expect(test.screen139.sound2, 0);
  expect(test.screen139.sound3, 0);
  expect(test.screen139.snd_timer, 10);
  expect(test.screen139.timer1, 0);
  expect(test.screen139.timer2, 0);
  expect(test.screen139.timer3, 0);
  expect(test.screen139.dsp_flg1, 0);
  expect(test.screen139.dsp_flg2, 0);
  expect(test.screen139.movie01_ext, 0);
  expect(test.screen139.movie02_ext, 0);
  expect(test.screen139.movie03_ext, 0);
  expect(test.screen139.movie04_ext, 0);
  expect(test.screen139.line_title, "ｎａｎａｃｏでお支払い");
  expect(test.screen139.line_title_ex, "");
  expect(test.screen139.line1, "カードの読取が不十分です");
  expect(test.screen139.line2, "もう一度カードを");
  expect(test.screen139.line3, "タッチしてください");
  expect(test.screen139.line4, "");
  expect(test.screen139.line1_ex, "");
  expect(test.screen139.line2_ex, "");
  expect(test.screen139.line3_ex, "");
  expect(test.screen139.line4_ex, "");
  expect(test.screen139.sound_led1, 6277);
  expect(test.screen139.sound_led2, 0);
  expect(test.screen139.sound_led3, 0);
  expect(test.screen140.title, "PiTaPaリトライ画面");
  expect(test.screen140.msg1, "もう一度カードを");
  expect(test.screen140.msg2, "タッチしてください");
  expect(test.screen140.msg1_size, 0);
  expect(test.screen140.msg2_size, 0);
  expect(test.screen140.sound1, 6277);
  expect(test.screen140.sound2, 0);
  expect(test.screen140.sound3, 0);
  expect(test.screen140.snd_timer, 10);
  expect(test.screen140.timer1, 0);
  expect(test.screen140.timer2, 0);
  expect(test.screen140.timer3, 0);
  expect(test.screen140.dsp_flg1, 0);
  expect(test.screen140.dsp_flg2, 0);
  expect(test.screen140.movie01_ext, 0);
  expect(test.screen140.movie02_ext, 0);
  expect(test.screen140.movie03_ext, 0);
  expect(test.screen140.movie04_ext, 0);
  expect(test.screen140.line_title, "ＰｉＴａＰａでお支払い");
  expect(test.screen140.line_title_ex, "");
  expect(test.screen140.line1, "カードの読取が不十分です");
  expect(test.screen140.line2, "もう一度カードを");
  expect(test.screen140.line3, "タッチしてください");
  expect(test.screen140.line4, "");
  expect(test.screen140.line1_ex, "");
  expect(test.screen140.line2_ex, "");
  expect(test.screen140.line3_ex, "");
  expect(test.screen140.line4_ex, "");
  expect(test.screen140.sound_led1, 6277);
  expect(test.screen140.sound_led2, 0);
  expect(test.screen140.sound_led3, 0);
  expect(test.screen141.title, "WAONリトライ画面");
  expect(test.screen141.msg1, "もう一度カードを");
  expect(test.screen141.msg2, "タッチしてください");
  expect(test.screen141.msg1_size, 0);
  expect(test.screen141.msg2_size, 0);
  expect(test.screen141.sound1, 6277);
  expect(test.screen141.sound2, 0);
  expect(test.screen141.sound3, 0);
  expect(test.screen141.snd_timer, 10);
  expect(test.screen141.timer1, 0);
  expect(test.screen141.timer2, 0);
  expect(test.screen141.timer3, 0);
  expect(test.screen141.dsp_flg1, 0);
  expect(test.screen141.dsp_flg2, 0);
  expect(test.screen141.movie01_ext, 0);
  expect(test.screen141.movie02_ext, 0);
  expect(test.screen141.movie03_ext, 0);
  expect(test.screen141.movie04_ext, 0);
  expect(test.screen141.line_title, "ＷＡＯＮでお支払い");
  expect(test.screen141.line_title_ex, "");
  expect(test.screen141.line1, "カードの読取が不十分です");
  expect(test.screen141.line2, "もう一度カードを");
  expect(test.screen141.line3, "タッチしてください");
  expect(test.screen141.line4, "");
  expect(test.screen141.line1_ex, "");
  expect(test.screen141.line2_ex, "");
  expect(test.screen141.line3_ex, "");
  expect(test.screen141.line4_ex, "");
  expect(test.screen141.sound_led1, 6277);
  expect(test.screen141.sound_led2, 0);
  expect(test.screen141.sound_led3, 0);
  expect(test.screen144.title, "会員解除確認画面");
  expect(test.screen144.msg1, "会員様優待が適用されません。");
  expect(test.screen144.msg2, "よろしいでしょうか？");
  expect(test.screen144.msg1_size, 28);
  expect(test.screen144.msg2_size, 44);
  expect(test.screen144.sound1, 6606);
  expect(test.screen144.sound2, 0);
  expect(test.screen144.sound3, 0);
  expect(test.screen144.snd_timer, 30);
  expect(test.screen144.timer1, 0);
  expect(test.screen144.timer2, 0);
  expect(test.screen144.timer3, 0);
  expect(test.screen144.dsp_flg1, 0);
  expect(test.screen144.dsp_flg2, 0);
  expect(test.screen144.movie01_ext, 0);
  expect(test.screen144.movie02_ext, 0);
  expect(test.screen144.movie03_ext, 0);
  expect(test.screen144.movie04_ext, 0);
  expect(test.screen144.line_title, "");
  expect(test.screen144.line_title_ex, "");
  expect(test.screen144.line1, "");
  expect(test.screen144.line2, "");
  expect(test.screen144.line3, "");
  expect(test.screen144.line4, "");
  expect(test.screen144.line1_ex, "");
  expect(test.screen144.line2_ex, "");
  expect(test.screen144.line3_ex, "");
  expect(test.screen144.line4_ex, "");
  expect(test.screen144.sound_led1, 6606);
  expect(test.screen144.sound_led2, 0);
  expect(test.screen144.sound_led3, 0);
  expect(test.ActSetUp.ReadAlertTime, 60);
  expect(test.ActSetUp.AutoReadInterval, 3);
  expect(test.ActSetUp.InterruptPrint, 0);
  expect(test.ActSetUp.InterruptPay, 0);
  expect(test.ActSetUp.UpdGetFtpTimer, 10);
  expect(test.HiddenSetUp.TableReadInterval, 500);
  expect(test.customer.cust_card_max, 0);
  expect(test.customer.cust_card_type1, 0);
  expect(test.customer.cust_card_type2, 0);
  expect(test.customer.cust_card_type3, 0);
  expect(test.customer.cust_card_type4, 0);
  expect(test.customer.cust_card_type5, 0);
  expect(test.customer.cust_card_type6, 0);
  expect(test.ShopAndGo.shop_and_go_nonfile_plucd, 999999);
  expect(test.ShopAndGo.shop_and_go_nonscan_plucd, 999998);
  expect(test.ShopAndGo.shop_and_go_limit1, 999);
  expect(test.ShopAndGo.shop_and_go_limit2, 499);
  expect(test.ShopAndGo.shop_and_go_limit3, 299);
  expect(test.ShopAndGo.shop_and_go_test_srv_flg, 0);
  expect(test.ShopAndGo.shop_and_go_companycode, 999999998);
  expect(test.ShopAndGo.shop_and_go_storecode, 123456789);
  expect(test.ShopAndGo.shop_and_go_mbr_chk_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_server_timeout, 3);
  expect(test.ShopAndGo.shop_and_go_proxy, "");
  expect(test.ShopAndGo.shop_and_go_proxy_port, 0);
  expect(test.ShopAndGo.shop_and_go_n_money_btn_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_domain, "https://api.digi-cr.com");
  expect(test.ShopAndGo.shop_and_go_mbr_card_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cr50_domain, "");
  expect(test.ShopAndGo.shop_and_go_point_domain, "");
  expect(test.ShopAndGo.shop_and_go_cr50_plucd, 999997);
  expect(test.ShopAndGo.shop_and_go_eatin_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cogca_read_twice, 0);
  expect(test.ShopAndGo.shop_and_go_use_class, 0);
  expect(test.ShopAndGo.shop_and_go_expensive_mark_prn, 0);
  expect(test.ShopAndGo.shop_and_go_regbag_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_use_preset_grp_code, 0);
  expect(test.ShopAndGo.shop_and_go_mente_nonplu_btn_reference, 1);
  expect(test.ShopAndGo.shop_and_go_mbr_auto_cncl_time, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_msg_use_no, 31);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print_normal, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs, 6);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss, 16);
  expect(test.ShopAndGo.shop_and_go_thread_timeout, 10);
  expect(test.PaymentGroup.pay_grp_name1, "会計グループ１");
  expect(test.PaymentGroup.pay_grp_name2, "会計グループ２");
  expect(test.PaymentGroup.pay_grp_name3, "会計グループ３");
  expect(test.PaymentGroup.pay_grp_name4, "会計グループ４");
  expect(test.PaymentGroup.pay_grp_name5, "会計グループ５");
  expect(test.PaymentGroup.pay_grp_name6, "会計グループ６");
  expect(test.PaymentGroup.pay_grp_name7, "会計グループ７");
  expect(test.PaymentGroup.pay_grp_name8, "会計グループ８");
  expect(test.PaymentGroup.pay_grp_name9, "会計グループ９");
  expect(test.PaymentGroup.pay_typ1_grp, 0);
  expect(test.PaymentGroup.pay_typ2_grp, 0);
  expect(test.PaymentGroup.pay_typ3_grp, 0);
  expect(test.PaymentGroup.pay_typ4_grp, 0);
  expect(test.PaymentGroup.pay_typ5_grp, 0);
  expect(test.PaymentGroup.pay_typ6_grp, 0);
  expect(test.PaymentGroup.pay_typ7_grp, 0);
  expect(test.PaymentGroup.pay_typ8_grp, 0);
  expect(test.PaymentGroup.pay_typ9_grp, 0);
  expect(test.PaymentGroup.pay_typ10_grp, 0);
  expect(test.PaymentGroup.pay_typ11_grp, 0);
  expect(test.PaymentGroup.pay_typ12_grp, 0);
  expect(test.PaymentGroup.pay_typ13_grp, 0);
  expect(test.PaymentGroup.pay_typ14_grp, 0);
  expect(test.PaymentGroup.pay_typ15_grp, 0);
  expect(test.PaymentGroup.pay_typ16_grp, 0);
  expect(test.PaymentGroup.pay_grp_name1_ex, "Payment Group １");
  expect(test.PaymentGroup.pay_grp_name2_ex, "Payment Group ２");
  expect(test.PaymentGroup.pay_grp_name3_ex, "Payment Group ３");
  expect(test.PaymentGroup.pay_grp_name4_ex, "Payment Group ４");
  expect(test.PaymentGroup.pay_grp_name5_ex, "Payment Group ５");
  expect(test.PaymentGroup.pay_grp_name6_ex, "Payment Group ６");
  expect(test.PaymentGroup.pay_grp_name7_ex, "Payment Group ７");
  expect(test.PaymentGroup.pay_grp_name8_ex, "Payment Group ８");
  expect(test.PaymentGroup.pay_grp_name9_ex, "Payment Group ９");
}

