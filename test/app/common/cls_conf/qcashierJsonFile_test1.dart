/*
 * (C)2023 TERAOKA SEIKO Co., Ltd./株式会社寺岡精工
 * CONFIDENTIAL/社外秘
 * 無断開示・無断複製禁止
 */
 
import 'package:flutter_pos/app/common/environment.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:flutter/services.dart' show rootBundle;
import 'package:flutter/cupertino.dart';
import 'package:path_provider/path_provider.dart';
import 'package:path_provider_platform_interface/path_provider_platform_interface.dart';
import 'package:path/path.dart';
import 'dart:io';
import 'unitTestParts.dart';

import '../../../../lib/app/common/cls_conf/configJsonFile.dart';
import '../../../../lib/app/common/cls_conf/qcashierJsonFile.dart';

late QcashierJsonFile qcashier;

void main(){
  qcashierJsonFile_test1();
}

void qcashierJsonFile_test1()
{
  TestWidgetsFlutterBinding.ensureInitialized();
  const String confPath = "conf/";
  const String testDir = "test_assets";
  const String fileName = "qcashier.json";
  const String section = "common";
  const String key = "item_disp";
  const defaultData = 1;
  const testData1  =  987654321;    // テストデータ1
  const testData1s = "987654321";
  const testData2  =  192834675;    // テストデータ2
  const testData2s = "192834675";
  const testData3  =  129834765;    // テストデータ3
  const testData3s = "129834765";

  group('QcashierJsonFile',()
  {
    setUp(() async{
      PathProviderPlatform.instance = MockPathProviderPlatform();
      // 当該JSONファイルをデフォルトに戻す。
      await QcashierJsonFile().setDefault();
    });

    // 各テストの事後処理
    tearDown(() async{
      // 当該JSONファイルをデフォルトに戻す。
      await QcashierJsonFile().setDefault();
    });

    // ********************************************************
    // テスト00001 : load
    // 前提：アプリ用フォルダに対象JSONファイルが存在しないこと。
    // 試験手順：loadを実行する。
    // 期待結果：①assets/confにある対象JSONファイルがアプリ用フォルダに作成されること。
    // 　　　　　②対象JSONファイルの各プロパティ値を読み込んでいること。
    // ********************************************************
    test('00001_load_01', () async {
      print("\n********** テスト実行：00001_load_01 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // 前提状態構築
      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == true) {
        fileBefore.deleteSync();
      }
      // ⓪：事前状態確認（対象JSONファイルが存在しないこと。）
      expect(fileBefore.exists() == false, false);

      await qcashier.load();

      final File fileAfter = File(jsonPath);
      // ①-1：load実行により対象JSONファイルが作成されていること。
      expect(fileAfter.existsSync(), true);

      // ②：対象JSONファイルの各プロパティ値を読み込んでいること。
      allPropatyCheck(qcashier,true);

      print("********** テスト終了：00001_load_01 **********\n\n");
    });

    // ********************************************************
    // テスト00002 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：loadを実行する。
    // 期待結果：アプリ用フォルダの対象JSONファイルの各プロパティ値を読み込んでいること。
    // ********************************************************
    test("00002_load_02", () async {
      print("\n********** テスト実行：00002_load_02 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == false) {
        qcashier.setDefault();
        debugPrint("setDefault実行");
      }
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      await qcashier.load();

      // 対象JSONファイルの各プロパティ値を読み込んでいること。
      // 00001実行後で、デフォルト値前提
      allPropatyCheck(qcashier,true);

      print("********** テスト終了：00002_load_02 **********\n\n");
    });

    // ********************************************************
    // テスト00003 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②任意のプロパティの値を変更する。
    // 　　　　　③loadを実行する。
    // 期待結果：当該プロパティ値の変更が取り消されること。
    // ********************************************************
    test('00003_load_03', () async {
      print("\n********** テスト実行：00003_load_03 **********");
      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①：loadを実行する。
      await qcashier.load();

      // ②任意のプロパティの値を変更する。
      final prefixData = qcashier.common.item_disp;
      qcashier.common.item_disp = testData1;
      expect(qcashier.common.item_disp == testData1, true);

      // ③loadを実行する。
      //   当該プロパティ値の変更が取り消されること。
      await qcashier.load();
      expect(qcashier.common.item_disp != testData1, true);
      expect(qcashier.common.item_disp == prefixData, true);

      print("********** テスト終了：00003_load_03 **********\n\n");
    });

    // ********************************************************
    // テスト00004 : load
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②任意のプロパティの値を変更する。
    // 　　　　　③loadを実行する。
    // 期待結果：当該プロパティ値の変更が取り消されること。
    // ********************************************************
    test('00004_load_04', () async {
      print("\n********** テスト実行：00004_load_04 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②任意のプロパティの値を変更する。
      final prefixData = qcashier.common.item_disp;
      qcashier.common.item_disp = testData1;
      expect(qcashier.common.item_disp, testData1);

      // ③saveを実行する。
      await qcashier.save();

      // ④loadを実行する。
      await qcashier.load();

      expect(qcashier.common.item_disp != prefixData, true);
      expect(qcashier.common.item_disp == testData1, true);
      allPropatyCheck(qcashier,false);

      print("********** テスト終了：00004_load_04 **********\n\n");
    });

    // ********************************************************
    // テスト00005 : save
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    // 　　　　　②saveを実行する。
    // 期待結果：アプリ用フォルダにある対象JSONファイルの内容に変化がないこと。
    // ********************************************************
    test('00005_save_01', () async {
      print("\n********** テスト実行：00005_save_01 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      // ① loadを実行する。
      await qcashier.load();

      // save実行前のJSONファイルを保存する。
      final String jsonBefor = await fileBefore.readAsString();

      // ② saveを実行する。
      await qcashier.save();

      final File fileAfter = File(jsonPath);
      expect(fileAfter.existsSync(), true);

      // アプリ用フォルダにある対象JSONファイルの内容に変化がないこと。
      final String jsonAfter = await fileAfter.readAsString();
      expect(jsonBefor.replaceAll("\r\n", "\n") == jsonAfter.replaceAll("\r\n", "\n"), true);

      print("********** テスト終了：00201_save_01 **********\n\n");
    });

    // ********************************************************
    // テスト00006 : save
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    // 期待結果：アプリ用フォルダにある対象JSONファイルの当該プロパティの値が
    //         変更した値に変更されていること。
    // ********************************************************
    test('00006_save_02', () async {
      print("\n********** テスト実行：00006_save_02 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      // ⓪：事前状態確認（対象JSONファイルが存在すること。）
      expect(fileBefore.existsSync(), true);

      // ① loadを実行する。
      await qcashier.load();

      // save実行前のJSONファイルを保存する。
      final String jsonBefor = await fileBefore.readAsString();
      expect(qcashier.common.item_disp, defaultData);

      // ②任意のプロパティの値を変更する。
      final prefixData = qcashier.common.item_disp;
      qcashier.common.item_disp = testData1;

      // ③ saveを実行する。
      await qcashier.save();

      final File fileAfter1 = File(jsonPath);
      expect(fileAfter1.existsSync(), true);

      // アプリ用フォルダにある対象JSONファイルの内容に変化ががあること。
      // 手順②で変更した内容になっていること。
      final String jsonAfter1 = await fileAfter1.readAsString();
      expect(jsonBefor.replaceAll("\r\n", "\n") != jsonAfter1.replaceAll("\r\n", "\n"), true);
      expect(testData1 != prefixData, true);
      expect(qcashier.common.item_disp, testData1);

      // ④ loadを実行する。
      await qcashier.load();

      // アプリ用フォルダにある対象JSONファイルの内容が同じであること。
      // 手順②で変更した内容であること。
      final String jsonAfter2 = await fileAfter1.readAsString();
      expect(jsonAfter1.replaceAll("\r\n", "\n") == jsonAfter2.replaceAll("\r\n", "\n"), true);

      expect(qcashier.common.item_disp == testData1, true);
      allPropatyCheck(qcashier,false);

      print("********** テスト終了：00006_save_02 **********\n\n");
    });

    // ********************************************************
    // テスト00007 : setDefault
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    //         アプリ用フォルダに対象JSONファイルが存在し、任意の編集を施すこと。
    // 試験手順：①アプリ用フォルダにある対象JSONファイルを削除する。
    //         ②setDefaultを実行する。
    // 期待結果：手順②実行後、assets/confにある対象JSONファイルが
    //         アプリ用フォルダに作成されること。
    // ********************************************************
    test('00007_setDefault_01', () async {
      print("\n********** テスト実行：00007_setDefault_01 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①アプリ用フォルダにある対象JSONファイルを削除する。
      Directory appDir = Directory(EnvironmentData.TPRX_HOME);
      final String jsonPath = join(appDir.path, confPath, fileName);
      final File fileBefore = File(jsonPath);
      if (fileBefore.existsSync() == true) {
        fileBefore.deleteSync();
      }
      expect(fileBefore.existsSync() , false);

      // ②setDefaultを実行する。
      await qcashier.setDefault();
      expect(fileBefore.existsSync() , true);
      allPropatyCheck(qcashier,true);

      print("********** テスト終了：00007_setDefault_01 **********\n\n");
    });

    // ********************************************************
    // テスト00008 : setDefault
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    //         アプリ用フォルダに対象JSONファイルが存在し、任意の編集を施すこと。
    // 試験手順：①任意のプロパティの値を変更し、saveを実行する。
    //         ②setDefaultを実行する。
    // 期待結果：手順②実行後、assets/confにある対象JSONファイルの内容で上書きされること。
    //         （変更が取り消されていること）
    // ********************************************************
    test('00008_setDefault_02', () async {
      print("\n********** テスト実行：00008_setDefault_02 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②任意のプロパティの値を変更する。
      qcashier.common.item_disp = testData1;
      expect(qcashier.common.item_disp, testData1);

      // ③saveを実行する。
      await qcashier.save();
      expect(qcashier.common.item_disp, testData1);

      // ④loadを実行する。
      await qcashier.setDefault();

      // （デフォルト値と同じであること。）
      allPropatyCheck(qcashier,true);

      print("********** テスト終了：00008_setDefault_02 **********\n\n");
    });

    // ********************************************************
    // テスト00009 : セクション/キー名称による設定（setValueWithName）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
    //         ②loadを実行する。
    // 期待結果：手順②実行後、手順①で設定したプロパティ変更後の内容で
    //         プロパティ値が設定されていること。
    // ********************************************************
    test('00009_setValueWithName_01', () async {
      print("\n********** テスト実行：00009_setValueWithName_01 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      await qcashier.setValueWithName(section, key, testData1);

      // ②loadを実行する。
      await qcashier.load();

      // 手順②実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(qcashier.common.item_disp == testData1, true);

      print("********** テスト終了：00009_setValueWithName_01 **********\n\n");
    });

    test('00010_setValueWithName_02', () async {
      print("\n********** テスト実行：00010_setValueWithName_02 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      final value = await qcashier.setValueWithName("test_section", key, testData1);


      // 手順実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(value.result, false);
      expect(value.cause == json_result.element_not_found, true);

      print("********** テスト終了：00010_setValueWithName_02 **********\n\n");
    });

    test('00011_setValueWithName_03', () async {
      print("\n********** テスト実行：00011_setValueWithName_03 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①任意のセクション名、キー名、値にてsetValueWithNameを実行する。
      final value = await qcashier.setValueWithName(section, "test_key", testData1);

      // 手順①実行後、手順①で設定したプロパティ変更後の内容でプロパティ値が設定されていること。
      expect(value.result, false);
      expect(value.cause == json_result.element_not_found, true);

      print("********** テスト終了：00011_setValueWithName_03 **********\n\n");
    });

    // ********************************************************
    // テスト00010 : セクション/キー名称による取得（getValueWithName）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティを変更する。
    //         ③saveを実行する。
    //         ④①で指定したプロパティに相当するセクション名、キー名にて
    //           getValueWithNameを実行する。
    // 期待結果：手順④で設定した値が手順②で設定した値と一致すること。
    // ********************************************************
    test('00012_getValueWithName_01', () async {
      print("\n********** テスト実行：00012_getValueWithName_01********** ");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②任意のプロパティを変更する。
      qcashier.common.item_disp = testData1;

      // ③saveを実行する。
      await qcashier.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await qcashier.getValueWithName(section, key);
      //print(testData.toString() + " == " + verify.value.toString());
      expect(testData1 == verify.value, true);

      print("********** テスト終了：00012_getValueWithName_01**********\n\n");
    });

    test('00013_getValueWithName_02', () async {
      print("\n********** テスト実行：00013_getValueWithName_02********** ");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②任意のプロパティを変更する。
      qcashier.common.item_disp = testData1;

      // ③saveを実行する。
      await qcashier.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await qcashier.getValueWithName("test_section", key);
      //print(testData.toString() + " == " + verify.value.toString());

      expect(verify.result, false);
      expect(verify.cause == json_result.element_not_found, true);

      print("********** テスト終了：00013_getValueWithName_02**********\n\n");
    });

    test('00014_getValueWithName_03', () async {
      print("\n********** テスト実行：00014_getValueWithName_03********** ");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②任意のプロパティを変更する。
      qcashier.common.item_disp = testData1;

      // ③saveを実行する。
      await qcashier.save();

      // ④①で指定したプロパティに相当するセクション名、キー名にて
      //   getValueWithNameを実行する。
      final verify = await qcashier.getValueWithName(section, "test_key");
      //print(testData.toString() + " == " + verify.value.toString());

      expect(verify.result, false);
      expect(verify.cause == json_result.element_not_found, true);

      print("********** テスト終了：00014_getValueWithName_03**********\n\n");
    });

    // ********************************************************
    // テスト00015 : 任意フォルダ設定（_setAbsolutePath）
    // 事前条件：assets/confに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティ値を変更し、テスト用フォルダにJSONのコピーを作成する。
    //         ②setDefaultを実行する。
    //         ③テスト用フォルダのパスを引数としてsetAbsolutePathを実行する。
    //         ④loadを実行する。
    // 期待結果：手順④実行後、プロパティ変更後の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00015:_setAbsolutePath_01', () async {
      print("\n********** テスト実行：00015_setAbsolutePath_01 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①任意のフォルダのパスを引数としてsetAbsolutePathを実行する。
      final appDir = Directory(EnvironmentData.TPRX_HOME);
      JsonPath().absolutePath = join(appDir.path, testDir);

      // ②loadを実行する。
      await qcashier.load();

      // 手順②実行後に①で指定したパスに/assets/conf/当該JSONファイルが作成されていること。
      final String jsonPath = join(appDir.path, testDir, confPath, fileName);
      //print("存在確認先：" + jsonPath);
      final File file = File(jsonPath);
      expect(file.existsSync() == true , true);

      // ③任意のプロパティ値を変更する。
      qcashier.common.item_disp = testData1;
      expect(qcashier.common.item_disp, testData1);

      // ④saveを実行する。
      await qcashier.save();

      // 手順④実行後、プロパティ変更後の内容でプロパティ値が設定されていること。
      expect(qcashier.common.item_disp, testData1);
      
      // アプリフォルダのパスを元に戻しておく（このテストだけの後処理）。
      JsonPath().absolutePath = join(appDir.path);

      print("********** テスト終了：00015_setAbsolutePath_01 **********\n\n");
    });

    // ********************************************************
    // テスト00016 : ファイル復元（_restoreJson：バックアップ作成中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    //         ④バックアップファイルを作成し、破損状態とする。
    //         ⑤loadを実行する。
    // 期待結果：手順③実行後、プロパティ変更前の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00016_restoreJson_01', () async {
      print("\n********** テスト実行：00016_restoreJson_01 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ②Jsonファイルの任意のプロパティの値を変更する。
      // ④バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern1, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern1);

      // ⑤loadを実行する。
      await qcashier.load();

      // 手順⑤実行後、手順②で変更した内容でプロパティ値が設定されていること。
      print("check:" + qcashier.common.item_disp.toString());
      expect(qcashier.common.item_disp == testData1, true);

      print("********** テスト終了：00016_restoreJson_01 **********\n\n");
    });

    // ********************************************************
    // テスト00017 : ファイル復元（_restoreJson：バックアップ作成直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①loadを実行する。
    //         ②任意のプロパティの値を変更する。
    //         ③saveを実行する。
    //         ④バックアップファイルを作成する。
    //         ⑤loadを実行する。
    // 期待結果：手順③実行後、プロパティ変更前の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('0017_restoreJson_02', () async {
      print("\n********** テスト実行：00017_restoreJson_02 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ②任意のプロパティの値を変更する。
      // ④バックアップファイルを作成する。
      await makeTestData(confPath, fileName, testFunc.makePattern2, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern2);

      // ⑤loadを実行する。
      await qcashier.load();

      // 手順⑤実行後、手順②で変更した内容でプロパティ値が設定されていること。
      print("check:" + qcashier.common.item_disp.toString());
      expect(qcashier.common.item_disp == testData2, true);

      print("********** テスト終了：00017_restoreJson_02 **********\n\n");
    });

    // ********************************************************
    // テスト00018 : ファイル復元（_restoreJson：JSON更新中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成する。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00018_restoreJson_03', () async {
      print("\n********** テスト実行：00018_restoreJson_03 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern3, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern3);

      // ③loadを実行する。
      await qcashier.load();

      // 手順③実行後、①の内容ででプロパティ値が設定されていること。
      print("check:" + qcashier.common.item_disp.toString());
      expect(qcashier.common.item_disp == testData1, true);

      print("********** テスト終了：00018_restoreJson_03 **********\n\n");
    });

    // ********************************************************
    // テスト00019 : ファイル復元（_restoreJson：JSON作成直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成する。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新する。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、②の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00019_restoreJson_04', () async {
      print("\n********** テスト実行：00019_restoreJson_04 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern4, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern4);

      // ③loadを実行する。
      await qcashier.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + qcashier.common.item_disp.toString());
      expect(qcashier.common.item_disp == testData2, true);

      print("********** テスト終了：00019_restoreJson_04 **********\n\n");
    });

    // ********************************************************
    // テスト00020 : ファイル復元（_restoreJson：バックアップ削除中に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更した内容でJSONファイルを更新する。
    //         ②バックアップファイルを作成し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00020_restoreJson_05', () async {
      print("\n********** テスト実行：00020_restoreJson_05 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern5, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern5);

      // ③loadを実行する。
      await qcashier.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + qcashier.common.item_disp.toString());
      expect(qcashier.common.item_disp == testData1, true);

      print("********** テスト終了：00020_restoreJson_05 **********\n\n");
    });

    // ********************************************************
    // テスト00021 : ファイル復元（_restoreJson：バックアップ削除直後に電断）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更する。
    //         ②①の内容でJSONファイルを更新する。
    //         ③loadを実行する。
    // 期待結果：手順③実行後、①の内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00021_restoreJson_06', () async {
      print("\n********** テスト実行：00021_restoreJson_06 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①バックアップファイルを作成する。
      // ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern6, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern6);

      // ③loadを実行する。
      await qcashier.load();

      // 手順③実行後、②の内容ででプロパティ値が設定されていること。
      print("check:" + qcashier.common.item_disp.toString());
      expect(qcashier.common.item_disp == testData1, true);

      print("********** テスト終了：00021_restoreJson_06 **********\n\n");
    });

    // ********************************************************
    // テスト00022 : ファイル復元（_restoreJson：バックアップとJSON共に破損：バックアップが新しい日付）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ②バックアップファイルを作成し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：デフォルトの内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00022_restoreJson_07', () async {
      print("\n********** テスト実行：00022_restoreJson_07 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      // ②バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern7, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern7);

      // ③loadを実行する。
      await qcashier.load();

      // デフォルトの内容でプロパティ値が設定されていること。
      print("check:" + qcashier.common.item_disp.toString());
      allPropatyCheck(qcashier,true);

      print("********** テスト終了：00022_restoreJson_07 **********\n\n");
    });

    // ********************************************************
    // テスト00023 : ファイル復元（_restoreJson：バックアップとJSON共に破損：JSONが新しい日付）
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    // 試験手順：①バックアップファイルを作成し、破損状態とする。
    //         ②任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
    //         ③loadを実行する。
    // 期待結果：デフォルトの内容でプロパティ値が設定されていること。
    // ********************************************************
    test('00023_restoreJson_08', () async {
      print("\n********** テスト実行：00023_restoreJson_08 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①任意のプロパティの値を変更した内容でJSONファイルを更新し、破損状態とする。
      // ②バックアップファイルを作成し、破損状態とする。
      await makeTestData(confPath, fileName, testFunc.makePattern8, section, key, testData1, testData2);
      await getTestDate(confPath, fileName, testFunc.getPattern8);

      // ③loadを実行する。
      await qcashier.load();

      // デフォルトの内容でプロパティ値が設定されていること。
      print("check:" + qcashier.common.item_disp.toString());
      allPropatyCheck(qcashier,true);

      print("********** テスト終了：00023_restoreJson_08 **********\n\n");
    });

    // ********************************************************
    // テスト00024 ～ : 要素取得・設定
    // 事前条件：アプリ用フォルダに対象JSONファイルが存在すること。
    //         実行前にsetConfigを実行すること。
    // 試験手順：①loadを実行する。
    //         ②指定したプロパティの初期値を取得する。
    //         ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
    //         ④saveを実行後、loadを実行する。
    //         ⑤同じプロパティを読み込み、データに変化がないことを確認する。
    //         ⑥③～⑤を異なるテストデータで実施する。
    //         ⑦③～⑤を手順①で取得した初期値で実施する。
    //         ⑧全てのプロパティが初期値になっていることを確認する。
    // 期待結果：全プロパティ値を取得、設定できること。（１要素、1テストで実施する）
    // ********************************************************
     test('00024_element_check_00001', () async {
      print("\n********** テスト実行：00024_element_check_00001 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.item_disp;
      print(qcashier.common.item_disp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.item_disp = testData1;
      print(qcashier.common.item_disp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.item_disp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.item_disp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.item_disp = testData2;
      print(qcashier.common.item_disp);
      expect(qcashier.common.item_disp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.item_disp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.item_disp = defalut;
      print(qcashier.common.item_disp);
      expect(qcashier.common.item_disp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.item_disp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00024_element_check_00001 **********\n\n");
    });

    test('00025_element_check_00002', () async {
      print("\n********** テスト実行：00025_element_check_00002 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.logo_typ;
      print(qcashier.common.logo_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.logo_typ = testData1;
      print(qcashier.common.logo_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.logo_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.logo_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.logo_typ = testData2;
      print(qcashier.common.logo_typ);
      expect(qcashier.common.logo_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.logo_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.logo_typ = defalut;
      print(qcashier.common.logo_typ);
      expect(qcashier.common.logo_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.logo_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00025_element_check_00002 **********\n\n");
    });

    test('00026_element_check_00003', () async {
      print("\n********** テスト実行：00026_element_check_00003 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.disp_typ;
      print(qcashier.common.disp_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.disp_typ = testData1;
      print(qcashier.common.disp_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.disp_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.disp_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.disp_typ = testData2;
      print(qcashier.common.disp_typ);
      expect(qcashier.common.disp_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.disp_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.disp_typ = defalut;
      print(qcashier.common.disp_typ);
      expect(qcashier.common.disp_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.disp_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00026_element_check_00003 **********\n\n");
    });

    test('00027_element_check_00004', () async {
      print("\n********** テスト実行：00027_element_check_00004 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.spdsp_use;
      print(qcashier.common.spdsp_use);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.spdsp_use = testData1;
      print(qcashier.common.spdsp_use);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.spdsp_use == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.spdsp_use == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.spdsp_use = testData2;
      print(qcashier.common.spdsp_use);
      expect(qcashier.common.spdsp_use == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.spdsp_use == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.spdsp_use = defalut;
      print(qcashier.common.spdsp_use);
      expect(qcashier.common.spdsp_use == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.spdsp_use == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00027_element_check_00004 **********\n\n");
    });

    test('00028_element_check_00005', () async {
      print("\n********** テスト実行：00028_element_check_00005 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.fix_max;
      print(qcashier.common.fix_max);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.fix_max = testData1;
      print(qcashier.common.fix_max);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.fix_max == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.fix_max == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.fix_max = testData2;
      print(qcashier.common.fix_max);
      expect(qcashier.common.fix_max == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fix_max == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.fix_max = defalut;
      print(qcashier.common.fix_max);
      expect(qcashier.common.fix_max == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fix_max == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00028_element_check_00005 **********\n\n");
    });

    test('00029_element_check_00006', () async {
      print("\n********** テスト実行：00029_element_check_00006 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.fix_typ;
      print(qcashier.common.fix_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.fix_typ = testData1;
      print(qcashier.common.fix_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.fix_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.fix_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.fix_typ = testData2;
      print(qcashier.common.fix_typ);
      expect(qcashier.common.fix_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fix_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.fix_typ = defalut;
      print(qcashier.common.fix_typ);
      expect(qcashier.common.fix_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fix_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00029_element_check_00006 **********\n\n");
    });

    test('00030_element_check_00007', () async {
      print("\n********** テスト実行：00030_element_check_00007 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.ptn_max;
      print(qcashier.common.ptn_max);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.ptn_max = testData1;
      print(qcashier.common.ptn_max);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.ptn_max == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.ptn_max == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.ptn_max = testData2;
      print(qcashier.common.ptn_max);
      expect(qcashier.common.ptn_max == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.ptn_max == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.ptn_max = defalut;
      print(qcashier.common.ptn_max);
      expect(qcashier.common.ptn_max == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.ptn_max == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00030_element_check_00007 **********\n\n");
    });

    test('00031_element_check_00008', () async {
      print("\n********** テスト実行：00031_element_check_00008 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.ptn_typ;
      print(qcashier.common.ptn_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.ptn_typ = testData1;
      print(qcashier.common.ptn_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.ptn_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.ptn_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.ptn_typ = testData2;
      print(qcashier.common.ptn_typ);
      expect(qcashier.common.ptn_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.ptn_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.ptn_typ = defalut;
      print(qcashier.common.ptn_typ);
      expect(qcashier.common.ptn_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.ptn_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00031_element_check_00008 **********\n\n");
    });

    test('00032_element_check_00009', () async {
      print("\n********** テスト実行：00032_element_check_00009 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.spe_typ;
      print(qcashier.common.spe_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.spe_typ = testData1;
      print(qcashier.common.spe_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.spe_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.spe_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.spe_typ = testData2;
      print(qcashier.common.spe_typ);
      expect(qcashier.common.spe_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.spe_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.spe_typ = defalut;
      print(qcashier.common.spe_typ);
      expect(qcashier.common.spe_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.spe_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00032_element_check_00009 **********\n\n");
    });

    test('00033_element_check_00010', () async {
      print("\n********** テスト実行：00033_element_check_00010 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.chara_typ;
      print(qcashier.common.chara_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.chara_typ = testData1;
      print(qcashier.common.chara_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.chara_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.chara_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.chara_typ = testData2;
      print(qcashier.common.chara_typ);
      expect(qcashier.common.chara_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.chara_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.chara_typ = defalut;
      print(qcashier.common.chara_typ);
      expect(qcashier.common.chara_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.chara_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00033_element_check_00010 **********\n\n");
    });

    test('00034_element_check_00011', () async {
      print("\n********** テスト実行：00034_element_check_00011 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.language_typ;
      print(qcashier.common.language_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.language_typ = testData1;
      print(qcashier.common.language_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.language_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.language_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.language_typ = testData2;
      print(qcashier.common.language_typ);
      expect(qcashier.common.language_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.language_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.language_typ = defalut;
      print(qcashier.common.language_typ);
      expect(qcashier.common.language_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.language_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00034_element_check_00011 **********\n\n");
    });

    test('00035_element_check_00012', () async {
      print("\n********** テスト実行：00035_element_check_00012 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.page_max;
      print(qcashier.common.page_max);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.page_max = testData1;
      print(qcashier.common.page_max);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.page_max == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.page_max == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.page_max = testData2;
      print(qcashier.common.page_max);
      expect(qcashier.common.page_max == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.page_max == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.page_max = defalut;
      print(qcashier.common.page_max);
      expect(qcashier.common.page_max == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.page_max == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00035_element_check_00012 **********\n\n");
    });

    test('00036_element_check_00013', () async {
      print("\n********** テスト実行：00036_element_check_00013 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.typ_max;
      print(qcashier.common.typ_max);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.typ_max = testData1;
      print(qcashier.common.typ_max);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.typ_max == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.typ_max == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.typ_max = testData2;
      print(qcashier.common.typ_max);
      expect(qcashier.common.typ_max == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.typ_max == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.typ_max = defalut;
      print(qcashier.common.typ_max);
      expect(qcashier.common.typ_max == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.typ_max == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00036_element_check_00013 **********\n\n");
    });

    test('00037_element_check_00014', () async {
      print("\n********** テスト実行：00037_element_check_00014 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ1;
      print(qcashier.common.pay_typ1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ1 = testData1;
      print(qcashier.common.pay_typ1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ1 = testData2;
      print(qcashier.common.pay_typ1);
      expect(qcashier.common.pay_typ1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ1 = defalut;
      print(qcashier.common.pay_typ1);
      expect(qcashier.common.pay_typ1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00037_element_check_00014 **********\n\n");
    });

    test('00038_element_check_00015', () async {
      print("\n********** テスト実行：00038_element_check_00015 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ2;
      print(qcashier.common.pay_typ2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ2 = testData1;
      print(qcashier.common.pay_typ2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ2 = testData2;
      print(qcashier.common.pay_typ2);
      expect(qcashier.common.pay_typ2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ2 = defalut;
      print(qcashier.common.pay_typ2);
      expect(qcashier.common.pay_typ2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00038_element_check_00015 **********\n\n");
    });

    test('00039_element_check_00016', () async {
      print("\n********** テスト実行：00039_element_check_00016 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ3;
      print(qcashier.common.pay_typ3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ3 = testData1;
      print(qcashier.common.pay_typ3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ3 = testData2;
      print(qcashier.common.pay_typ3);
      expect(qcashier.common.pay_typ3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ3 = defalut;
      print(qcashier.common.pay_typ3);
      expect(qcashier.common.pay_typ3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00039_element_check_00016 **********\n\n");
    });

    test('00040_element_check_00017', () async {
      print("\n********** テスト実行：00040_element_check_00017 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ4;
      print(qcashier.common.pay_typ4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ4 = testData1;
      print(qcashier.common.pay_typ4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ4 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ4 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ4 = testData2;
      print(qcashier.common.pay_typ4);
      expect(qcashier.common.pay_typ4 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ4 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ4 = defalut;
      print(qcashier.common.pay_typ4);
      expect(qcashier.common.pay_typ4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00040_element_check_00017 **********\n\n");
    });

    test('00041_element_check_00018', () async {
      print("\n********** テスト実行：00041_element_check_00018 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ5;
      print(qcashier.common.pay_typ5);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ5 = testData1;
      print(qcashier.common.pay_typ5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ5 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ5 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ5 = testData2;
      print(qcashier.common.pay_typ5);
      expect(qcashier.common.pay_typ5 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ5 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ5 = defalut;
      print(qcashier.common.pay_typ5);
      expect(qcashier.common.pay_typ5 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00041_element_check_00018 **********\n\n");
    });

    test('00042_element_check_00019', () async {
      print("\n********** テスト実行：00042_element_check_00019 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ6;
      print(qcashier.common.pay_typ6);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ6 = testData1;
      print(qcashier.common.pay_typ6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ6 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ6 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ6 = testData2;
      print(qcashier.common.pay_typ6);
      expect(qcashier.common.pay_typ6 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ6 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ6 = defalut;
      print(qcashier.common.pay_typ6);
      expect(qcashier.common.pay_typ6 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00042_element_check_00019 **********\n\n");
    });

    test('00043_element_check_00020', () async {
      print("\n********** テスト実行：00043_element_check_00020 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ7;
      print(qcashier.common.pay_typ7);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ7 = testData1;
      print(qcashier.common.pay_typ7);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ7 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ7 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ7 = testData2;
      print(qcashier.common.pay_typ7);
      expect(qcashier.common.pay_typ7 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ7 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ7 = defalut;
      print(qcashier.common.pay_typ7);
      expect(qcashier.common.pay_typ7 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ7 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00043_element_check_00020 **********\n\n");
    });

    test('00044_element_check_00021', () async {
      print("\n********** テスト実行：00044_element_check_00021 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ8;
      print(qcashier.common.pay_typ8);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ8 = testData1;
      print(qcashier.common.pay_typ8);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ8 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ8 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ8 = testData2;
      print(qcashier.common.pay_typ8);
      expect(qcashier.common.pay_typ8 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ8 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ8 = defalut;
      print(qcashier.common.pay_typ8);
      expect(qcashier.common.pay_typ8 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ8 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00044_element_check_00021 **********\n\n");
    });

    test('00045_element_check_00022', () async {
      print("\n********** テスト実行：00045_element_check_00022 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.demo_disp_btn;
      print(qcashier.common.demo_disp_btn);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.demo_disp_btn = testData1;
      print(qcashier.common.demo_disp_btn);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.demo_disp_btn == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.demo_disp_btn == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.demo_disp_btn = testData2;
      print(qcashier.common.demo_disp_btn);
      expect(qcashier.common.demo_disp_btn == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.demo_disp_btn == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.demo_disp_btn = defalut;
      print(qcashier.common.demo_disp_btn);
      expect(qcashier.common.demo_disp_btn == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.demo_disp_btn == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00045_element_check_00022 **********\n\n");
    });

    test('00046_element_check_00023', () async {
      print("\n********** テスト実行：00046_element_check_00023 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.rcpt_limit_time;
      print(qcashier.common.rcpt_limit_time);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.rcpt_limit_time = testData1;
      print(qcashier.common.rcpt_limit_time);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.rcpt_limit_time == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.rcpt_limit_time == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.rcpt_limit_time = testData2;
      print(qcashier.common.rcpt_limit_time);
      expect(qcashier.common.rcpt_limit_time == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.rcpt_limit_time == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.rcpt_limit_time = defalut;
      print(qcashier.common.rcpt_limit_time);
      expect(qcashier.common.rcpt_limit_time == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.rcpt_limit_time == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00046_element_check_00023 **********\n\n");
    });

    test('00047_element_check_00024', () async {
      print("\n********** テスト実行：00047_element_check_00024 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.next_rcpt_limit;
      print(qcashier.common.next_rcpt_limit);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.next_rcpt_limit = testData1;
      print(qcashier.common.next_rcpt_limit);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.next_rcpt_limit == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.next_rcpt_limit == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.next_rcpt_limit = testData2;
      print(qcashier.common.next_rcpt_limit);
      expect(qcashier.common.next_rcpt_limit == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.next_rcpt_limit == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.next_rcpt_limit = defalut;
      print(qcashier.common.next_rcpt_limit);
      expect(qcashier.common.next_rcpt_limit == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.next_rcpt_limit == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00047_element_check_00024 **********\n\n");
    });

    test('00048_element_check_00025', () async {
      print("\n********** テスト実行：00048_element_check_00025 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.auto_susdsp;
      print(qcashier.common.auto_susdsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.auto_susdsp = testData1;
      print(qcashier.common.auto_susdsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.auto_susdsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.auto_susdsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.auto_susdsp = testData2;
      print(qcashier.common.auto_susdsp);
      expect(qcashier.common.auto_susdsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.auto_susdsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.auto_susdsp = defalut;
      print(qcashier.common.auto_susdsp);
      expect(qcashier.common.auto_susdsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.auto_susdsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00048_element_check_00025 **********\n\n");
    });

    test('00049_element_check_00026', () async {
      print("\n********** テスト実行：00049_element_check_00026 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.susdsp_time;
      print(qcashier.common.susdsp_time);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.susdsp_time = testData1;
      print(qcashier.common.susdsp_time);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.susdsp_time == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.susdsp_time == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.susdsp_time = testData2;
      print(qcashier.common.susdsp_time);
      expect(qcashier.common.susdsp_time == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.susdsp_time == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.susdsp_time = defalut;
      print(qcashier.common.susdsp_time);
      expect(qcashier.common.susdsp_time == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.susdsp_time == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00049_element_check_00026 **********\n\n");
    });

    test('00050_element_check_00027', () async {
      print("\n********** テスト実行：00050_element_check_00027 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.rfm_receipt;
      print(qcashier.common.rfm_receipt);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.rfm_receipt = testData1;
      print(qcashier.common.rfm_receipt);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.rfm_receipt == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.rfm_receipt == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.rfm_receipt = testData2;
      print(qcashier.common.rfm_receipt);
      expect(qcashier.common.rfm_receipt == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.rfm_receipt == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.rfm_receipt = defalut;
      print(qcashier.common.rfm_receipt);
      expect(qcashier.common.rfm_receipt == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.rfm_receipt == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00050_element_check_00027 **********\n\n");
    });

    test('00051_element_check_00028', () async {
      print("\n********** テスト実行：00051_element_check_00028 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.signp_typ;
      print(qcashier.common.signp_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.signp_typ = testData1;
      print(qcashier.common.signp_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.signp_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.signp_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.signp_typ = testData2;
      print(qcashier.common.signp_typ);
      expect(qcashier.common.signp_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.signp_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.signp_typ = defalut;
      print(qcashier.common.signp_typ);
      expect(qcashier.common.signp_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.signp_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00051_element_check_00028 **********\n\n");
    });

    test('00052_element_check_00029', () async {
      print("\n********** テスト実行：00052_element_check_00029 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.select_typ;
      print(qcashier.common.select_typ);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.select_typ = testData1;
      print(qcashier.common.select_typ);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.select_typ == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.select_typ == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.select_typ = testData2;
      print(qcashier.common.select_typ);
      expect(qcashier.common.select_typ == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.select_typ == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.select_typ = defalut;
      print(qcashier.common.select_typ);
      expect(qcashier.common.select_typ == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.select_typ == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00052_element_check_00029 **********\n\n");
    });

    test('00053_element_check_00030', () async {
      print("\n********** テスト実行：00053_element_check_00030 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.select_str_msg;
      print(qcashier.common.select_str_msg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.select_str_msg = testData1;
      print(qcashier.common.select_str_msg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.select_str_msg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.select_str_msg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.select_str_msg = testData2;
      print(qcashier.common.select_str_msg);
      expect(qcashier.common.select_str_msg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.select_str_msg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.select_str_msg = defalut;
      print(qcashier.common.select_str_msg);
      expect(qcashier.common.select_str_msg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.select_str_msg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00053_element_check_00030 **********\n\n");
    });

    test('00054_element_check_00031', () async {
      print("\n********** テスト実行：00054_element_check_00031 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag1_plucd;
      print(qcashier.common.regbag1_plucd);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag1_plucd = testData1;
      print(qcashier.common.regbag1_plucd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag1_plucd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag1_plucd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag1_plucd = testData2;
      print(qcashier.common.regbag1_plucd);
      expect(qcashier.common.regbag1_plucd == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag1_plucd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag1_plucd = defalut;
      print(qcashier.common.regbag1_plucd);
      expect(qcashier.common.regbag1_plucd == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag1_plucd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00054_element_check_00031 **********\n\n");
    });

    test('00055_element_check_00032', () async {
      print("\n********** テスト実行：00055_element_check_00032 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag2_plucd;
      print(qcashier.common.regbag2_plucd);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag2_plucd = testData1;
      print(qcashier.common.regbag2_plucd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag2_plucd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag2_plucd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag2_plucd = testData2;
      print(qcashier.common.regbag2_plucd);
      expect(qcashier.common.regbag2_plucd == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag2_plucd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag2_plucd = defalut;
      print(qcashier.common.regbag2_plucd);
      expect(qcashier.common.regbag2_plucd == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag2_plucd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00055_element_check_00032 **********\n\n");
    });

    test('00056_element_check_00033', () async {
      print("\n********** テスト実行：00056_element_check_00033 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag3_plucd;
      print(qcashier.common.regbag3_plucd);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag3_plucd = testData1;
      print(qcashier.common.regbag3_plucd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag3_plucd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag3_plucd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag3_plucd = testData2;
      print(qcashier.common.regbag3_plucd);
      expect(qcashier.common.regbag3_plucd == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag3_plucd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag3_plucd = defalut;
      print(qcashier.common.regbag3_plucd);
      expect(qcashier.common.regbag3_plucd == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag3_plucd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00056_element_check_00033 **********\n\n");
    });

    test('00057_element_check_00034', () async {
      print("\n********** テスト実行：00057_element_check_00034 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.autocash_operation;
      print(qcashier.common.autocash_operation);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.autocash_operation = testData1;
      print(qcashier.common.autocash_operation);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.autocash_operation == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.autocash_operation == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.autocash_operation = testData2;
      print(qcashier.common.autocash_operation);
      expect(qcashier.common.autocash_operation == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocash_operation == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.autocash_operation = defalut;
      print(qcashier.common.autocash_operation);
      expect(qcashier.common.autocash_operation == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocash_operation == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00057_element_check_00034 **********\n\n");
    });

    test('00058_element_check_00035', () async {
      print("\n********** テスト実行：00058_element_check_00035 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.autocash_equaltime;
      print(qcashier.common.autocash_equaltime);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.autocash_equaltime = testData1;
      print(qcashier.common.autocash_equaltime);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.autocash_equaltime == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.autocash_equaltime == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.autocash_equaltime = testData2;
      print(qcashier.common.autocash_equaltime);
      expect(qcashier.common.autocash_equaltime == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocash_equaltime == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.autocash_equaltime = defalut;
      print(qcashier.common.autocash_equaltime);
      expect(qcashier.common.autocash_equaltime == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocash_equaltime == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00058_element_check_00035 **********\n\n");
    });

    test('00059_element_check_00036', () async {
      print("\n********** テスト実行：00059_element_check_00036 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.autocash_overtime;
      print(qcashier.common.autocash_overtime);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.autocash_overtime = testData1;
      print(qcashier.common.autocash_overtime);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.autocash_overtime == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.autocash_overtime == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.autocash_overtime = testData2;
      print(qcashier.common.autocash_overtime);
      expect(qcashier.common.autocash_overtime == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocash_overtime == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.autocash_overtime = defalut;
      print(qcashier.common.autocash_overtime);
      expect(qcashier.common.autocash_overtime == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocash_overtime == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00059_element_check_00036 **********\n\n");
    });

    test('00060_element_check_00037', () async {
      print("\n********** テスト実行：00060_element_check_00037 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.fip_disp;
      print(qcashier.common.fip_disp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.fip_disp = testData1;
      print(qcashier.common.fip_disp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.fip_disp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.fip_disp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.fip_disp = testData2;
      print(qcashier.common.fip_disp);
      expect(qcashier.common.fip_disp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fip_disp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.fip_disp = defalut;
      print(qcashier.common.fip_disp);
      expect(qcashier.common.fip_disp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fip_disp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00060_element_check_00037 **********\n\n");
    });

    test('00061_element_check_00038', () async {
      print("\n********** テスト実行：00061_element_check_00038 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.crdtcard_gettimer;
      print(qcashier.common.crdtcard_gettimer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.crdtcard_gettimer = testData1;
      print(qcashier.common.crdtcard_gettimer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.crdtcard_gettimer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.crdtcard_gettimer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.crdtcard_gettimer = testData2;
      print(qcashier.common.crdtcard_gettimer);
      expect(qcashier.common.crdtcard_gettimer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.crdtcard_gettimer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.crdtcard_gettimer = defalut;
      print(qcashier.common.crdtcard_gettimer);
      expect(qcashier.common.crdtcard_gettimer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.crdtcard_gettimer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00061_element_check_00038 **********\n\n");
    });

    test('00062_element_check_00039', () async {
      print("\n********** テスト実行：00062_element_check_00039 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.charge_plucd1;
      print(qcashier.common.charge_plucd1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.charge_plucd1 = testData1;
      print(qcashier.common.charge_plucd1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.charge_plucd1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.charge_plucd1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.charge_plucd1 = testData2;
      print(qcashier.common.charge_plucd1);
      expect(qcashier.common.charge_plucd1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.charge_plucd1 = defalut;
      print(qcashier.common.charge_plucd1);
      expect(qcashier.common.charge_plucd1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00062_element_check_00039 **********\n\n");
    });

    test('00063_element_check_00040', () async {
      print("\n********** テスト実行：00063_element_check_00040 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.charge_plucd2;
      print(qcashier.common.charge_plucd2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.charge_plucd2 = testData1;
      print(qcashier.common.charge_plucd2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.charge_plucd2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.charge_plucd2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.charge_plucd2 = testData2;
      print(qcashier.common.charge_plucd2);
      expect(qcashier.common.charge_plucd2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.charge_plucd2 = defalut;
      print(qcashier.common.charge_plucd2);
      expect(qcashier.common.charge_plucd2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00063_element_check_00040 **********\n\n");
    });

    test('00064_element_check_00041', () async {
      print("\n********** テスト実行：00064_element_check_00041 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.charge_plucd3;
      print(qcashier.common.charge_plucd3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.charge_plucd3 = testData1;
      print(qcashier.common.charge_plucd3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.charge_plucd3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.charge_plucd3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.charge_plucd3 = testData2;
      print(qcashier.common.charge_plucd3);
      expect(qcashier.common.charge_plucd3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.charge_plucd3 = defalut;
      print(qcashier.common.charge_plucd3);
      expect(qcashier.common.charge_plucd3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00064_element_check_00041 **********\n\n");
    });

    test('00065_element_check_00042', () async {
      print("\n********** テスト実行：00065_element_check_00042 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.charge_plucd4;
      print(qcashier.common.charge_plucd4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.charge_plucd4 = testData1;
      print(qcashier.common.charge_plucd4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.charge_plucd4 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.charge_plucd4 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.charge_plucd4 = testData2;
      print(qcashier.common.charge_plucd4);
      expect(qcashier.common.charge_plucd4 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd4 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.charge_plucd4 = defalut;
      print(qcashier.common.charge_plucd4);
      expect(qcashier.common.charge_plucd4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00065_element_check_00042 **********\n\n");
    });

    test('00066_element_check_00043', () async {
      print("\n********** テスト実行：00066_element_check_00043 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.charge_plucd5;
      print(qcashier.common.charge_plucd5);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.charge_plucd5 = testData1;
      print(qcashier.common.charge_plucd5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.charge_plucd5 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.charge_plucd5 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.charge_plucd5 = testData2;
      print(qcashier.common.charge_plucd5);
      expect(qcashier.common.charge_plucd5 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd5 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.charge_plucd5 = defalut;
      print(qcashier.common.charge_plucd5);
      expect(qcashier.common.charge_plucd5 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00066_element_check_00043 **********\n\n");
    });

    test('00067_element_check_00044', () async {
      print("\n********** テスト実行：00067_element_check_00044 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.charge_plucd6;
      print(qcashier.common.charge_plucd6);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.charge_plucd6 = testData1;
      print(qcashier.common.charge_plucd6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.charge_plucd6 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.charge_plucd6 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.charge_plucd6 = testData2;
      print(qcashier.common.charge_plucd6);
      expect(qcashier.common.charge_plucd6 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd6 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.charge_plucd6 = defalut;
      print(qcashier.common.charge_plucd6);
      expect(qcashier.common.charge_plucd6 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.charge_plucd6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00067_element_check_00044 **********\n\n");
    });

    test('00068_element_check_00045', () async {
      print("\n********** テスト実行：00068_element_check_00045 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.crdtcard_warntime;
      print(qcashier.common.crdtcard_warntime);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.crdtcard_warntime = testData1;
      print(qcashier.common.crdtcard_warntime);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.crdtcard_warntime == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.crdtcard_warntime == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.crdtcard_warntime = testData2;
      print(qcashier.common.crdtcard_warntime);
      expect(qcashier.common.crdtcard_warntime == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.crdtcard_warntime == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.crdtcard_warntime = defalut;
      print(qcashier.common.crdtcard_warntime);
      expect(qcashier.common.crdtcard_warntime == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.crdtcard_warntime == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00068_element_check_00045 **********\n\n");
    });

    test('00069_element_check_00046', () async {
      print("\n********** テスト実行：00069_element_check_00046 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.acx_recalc_btn;
      print(qcashier.common.acx_recalc_btn);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.acx_recalc_btn = testData1;
      print(qcashier.common.acx_recalc_btn);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.acx_recalc_btn == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.acx_recalc_btn == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.acx_recalc_btn = testData2;
      print(qcashier.common.acx_recalc_btn);
      expect(qcashier.common.acx_recalc_btn == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.acx_recalc_btn == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.acx_recalc_btn = defalut;
      print(qcashier.common.acx_recalc_btn);
      expect(qcashier.common.acx_recalc_btn == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.acx_recalc_btn == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00069_element_check_00046 **********\n\n");
    });

    test('00070_element_check_00047', () async {
      print("\n********** テスト実行：00070_element_check_00047 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_chg_max;
      print(qcashier.common.lang_chg_max);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_chg_max = testData1;
      print(qcashier.common.lang_chg_max);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_chg_max == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_chg_max == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_chg_max = testData2;
      print(qcashier.common.lang_chg_max);
      expect(qcashier.common.lang_chg_max == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_chg_max == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_chg_max = defalut;
      print(qcashier.common.lang_chg_max);
      expect(qcashier.common.lang_chg_max == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_chg_max == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00070_element_check_00047 **********\n\n");
    });

    test('00071_element_check_00048', () async {
      print("\n********** テスト実行：00071_element_check_00048 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_select1;
      print(qcashier.common.lang_select1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_select1 = testData1;
      print(qcashier.common.lang_select1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_select1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_select1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_select1 = testData2;
      print(qcashier.common.lang_select1);
      expect(qcashier.common.lang_select1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_select1 = defalut;
      print(qcashier.common.lang_select1);
      expect(qcashier.common.lang_select1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00071_element_check_00048 **********\n\n");
    });

    test('00072_element_check_00049', () async {
      print("\n********** テスト実行：00072_element_check_00049 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_select2;
      print(qcashier.common.lang_select2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_select2 = testData1;
      print(qcashier.common.lang_select2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_select2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_select2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_select2 = testData2;
      print(qcashier.common.lang_select2);
      expect(qcashier.common.lang_select2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_select2 = defalut;
      print(qcashier.common.lang_select2);
      expect(qcashier.common.lang_select2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00072_element_check_00049 **********\n\n");
    });

    test('00073_element_check_00050', () async {
      print("\n********** テスト実行：00073_element_check_00050 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_select3;
      print(qcashier.common.lang_select3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_select3 = testData1;
      print(qcashier.common.lang_select3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_select3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_select3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_select3 = testData2;
      print(qcashier.common.lang_select3);
      expect(qcashier.common.lang_select3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_select3 = defalut;
      print(qcashier.common.lang_select3);
      expect(qcashier.common.lang_select3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00073_element_check_00050 **********\n\n");
    });

    test('00074_element_check_00051', () async {
      print("\n********** テスト実行：00074_element_check_00051 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_select4;
      print(qcashier.common.lang_select4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_select4 = testData1;
      print(qcashier.common.lang_select4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_select4 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_select4 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_select4 = testData2;
      print(qcashier.common.lang_select4);
      expect(qcashier.common.lang_select4 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select4 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_select4 = defalut;
      print(qcashier.common.lang_select4);
      expect(qcashier.common.lang_select4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00074_element_check_00051 **********\n\n");
    });

    test('00075_element_check_00052', () async {
      print("\n********** テスト実行：00075_element_check_00052 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_select5;
      print(qcashier.common.lang_select5);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_select5 = testData1;
      print(qcashier.common.lang_select5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_select5 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_select5 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_select5 = testData2;
      print(qcashier.common.lang_select5);
      expect(qcashier.common.lang_select5 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select5 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_select5 = defalut;
      print(qcashier.common.lang_select5);
      expect(qcashier.common.lang_select5 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00075_element_check_00052 **********\n\n");
    });

    test('00076_element_check_00053', () async {
      print("\n********** テスト実行：00076_element_check_00053 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_select6;
      print(qcashier.common.lang_select6);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_select6 = testData1;
      print(qcashier.common.lang_select6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_select6 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_select6 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_select6 = testData2;
      print(qcashier.common.lang_select6);
      expect(qcashier.common.lang_select6 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select6 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_select6 = defalut;
      print(qcashier.common.lang_select6);
      expect(qcashier.common.lang_select6 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00076_element_check_00053 **********\n\n");
    });

    test('00077_element_check_00054', () async {
      print("\n********** テスト実行：00077_element_check_00054 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_select7;
      print(qcashier.common.lang_select7);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_select7 = testData1;
      print(qcashier.common.lang_select7);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_select7 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_select7 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_select7 = testData2;
      print(qcashier.common.lang_select7);
      expect(qcashier.common.lang_select7 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select7 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_select7 = defalut;
      print(qcashier.common.lang_select7);
      expect(qcashier.common.lang_select7 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select7 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00077_element_check_00054 **********\n\n");
    });

    test('00078_element_check_00055', () async {
      print("\n********** テスト実行：00078_element_check_00055 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.lang_select8;
      print(qcashier.common.lang_select8);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.lang_select8 = testData1;
      print(qcashier.common.lang_select8);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.lang_select8 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.lang_select8 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.lang_select8 = testData2;
      print(qcashier.common.lang_select8);
      expect(qcashier.common.lang_select8 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select8 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.lang_select8 = defalut;
      print(qcashier.common.lang_select8);
      expect(qcashier.common.lang_select8 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.lang_select8 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00078_element_check_00055 **********\n\n");
    });

    test('00079_element_check_00056', () async {
      print("\n********** テスト実行：00079_element_check_00056 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.autocrdt_operation;
      print(qcashier.common.autocrdt_operation);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.autocrdt_operation = testData1;
      print(qcashier.common.autocrdt_operation);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.autocrdt_operation == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.autocrdt_operation == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.autocrdt_operation = testData2;
      print(qcashier.common.autocrdt_operation);
      expect(qcashier.common.autocrdt_operation == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocrdt_operation == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.autocrdt_operation = defalut;
      print(qcashier.common.autocrdt_operation);
      expect(qcashier.common.autocrdt_operation == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocrdt_operation == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00079_element_check_00056 **********\n\n");
    });

    test('00080_element_check_00057', () async {
      print("\n********** テスト実行：00080_element_check_00057 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.autocrdt_time;
      print(qcashier.common.autocrdt_time);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.autocrdt_time = testData1;
      print(qcashier.common.autocrdt_time);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.autocrdt_time == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.autocrdt_time == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.autocrdt_time = testData2;
      print(qcashier.common.autocrdt_time);
      expect(qcashier.common.autocrdt_time == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocrdt_time == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.autocrdt_time = defalut;
      print(qcashier.common.autocrdt_time);
      expect(qcashier.common.autocrdt_time == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.autocrdt_time == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00080_element_check_00057 **********\n\n");
    });

    test('00081_element_check_00058', () async {
      print("\n********** テスト実行：00081_element_check_00058 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.preca_charge_only;
      print(qcashier.common.preca_charge_only);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.preca_charge_only = testData1;
      print(qcashier.common.preca_charge_only);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.preca_charge_only == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.preca_charge_only == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.preca_charge_only = testData2;
      print(qcashier.common.preca_charge_only);
      expect(qcashier.common.preca_charge_only == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_only == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.preca_charge_only = defalut;
      print(qcashier.common.preca_charge_only);
      expect(qcashier.common.preca_charge_only == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_only == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00081_element_check_00058 **********\n\n");
    });

    test('00082_element_check_00059', () async {
      print("\n********** テスト実行：00082_element_check_00059 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.preca_charge_plucd1;
      print(qcashier.common.preca_charge_plucd1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.preca_charge_plucd1 = testData1;
      print(qcashier.common.preca_charge_plucd1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.preca_charge_plucd1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.preca_charge_plucd1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.preca_charge_plucd1 = testData2;
      print(qcashier.common.preca_charge_plucd1);
      expect(qcashier.common.preca_charge_plucd1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.preca_charge_plucd1 = defalut;
      print(qcashier.common.preca_charge_plucd1);
      expect(qcashier.common.preca_charge_plucd1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00082_element_check_00059 **********\n\n");
    });

    test('00083_element_check_00060', () async {
      print("\n********** テスト実行：00083_element_check_00060 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.preca_charge_plucd2;
      print(qcashier.common.preca_charge_plucd2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.preca_charge_plucd2 = testData1;
      print(qcashier.common.preca_charge_plucd2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.preca_charge_plucd2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.preca_charge_plucd2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.preca_charge_plucd2 = testData2;
      print(qcashier.common.preca_charge_plucd2);
      expect(qcashier.common.preca_charge_plucd2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.preca_charge_plucd2 = defalut;
      print(qcashier.common.preca_charge_plucd2);
      expect(qcashier.common.preca_charge_plucd2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00083_element_check_00060 **********\n\n");
    });

    test('00084_element_check_00061', () async {
      print("\n********** テスト実行：00084_element_check_00061 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.preca_charge_plucd3;
      print(qcashier.common.preca_charge_plucd3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.preca_charge_plucd3 = testData1;
      print(qcashier.common.preca_charge_plucd3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.preca_charge_plucd3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.preca_charge_plucd3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.preca_charge_plucd3 = testData2;
      print(qcashier.common.preca_charge_plucd3);
      expect(qcashier.common.preca_charge_plucd3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.preca_charge_plucd3 = defalut;
      print(qcashier.common.preca_charge_plucd3);
      expect(qcashier.common.preca_charge_plucd3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00084_element_check_00061 **********\n\n");
    });

    test('00085_element_check_00062', () async {
      print("\n********** テスト実行：00085_element_check_00062 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.preca_charge_plucd4;
      print(qcashier.common.preca_charge_plucd4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.preca_charge_plucd4 = testData1;
      print(qcashier.common.preca_charge_plucd4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.preca_charge_plucd4 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.preca_charge_plucd4 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.preca_charge_plucd4 = testData2;
      print(qcashier.common.preca_charge_plucd4);
      expect(qcashier.common.preca_charge_plucd4 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd4 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.preca_charge_plucd4 = defalut;
      print(qcashier.common.preca_charge_plucd4);
      expect(qcashier.common.preca_charge_plucd4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00085_element_check_00062 **********\n\n");
    });

    test('00086_element_check_00063', () async {
      print("\n********** テスト実行：00086_element_check_00063 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.preca_charge_plucd5;
      print(qcashier.common.preca_charge_plucd5);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.preca_charge_plucd5 = testData1;
      print(qcashier.common.preca_charge_plucd5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.preca_charge_plucd5 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.preca_charge_plucd5 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.preca_charge_plucd5 = testData2;
      print(qcashier.common.preca_charge_plucd5);
      expect(qcashier.common.preca_charge_plucd5 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd5 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.preca_charge_plucd5 = defalut;
      print(qcashier.common.preca_charge_plucd5);
      expect(qcashier.common.preca_charge_plucd5 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00086_element_check_00063 **********\n\n");
    });

    test('00087_element_check_00064', () async {
      print("\n********** テスト実行：00087_element_check_00064 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.preca_charge_plucd6;
      print(qcashier.common.preca_charge_plucd6);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.preca_charge_plucd6 = testData1;
      print(qcashier.common.preca_charge_plucd6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.preca_charge_plucd6 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.preca_charge_plucd6 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.preca_charge_plucd6 = testData2;
      print(qcashier.common.preca_charge_plucd6);
      expect(qcashier.common.preca_charge_plucd6 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd6 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.preca_charge_plucd6 = defalut;
      print(qcashier.common.preca_charge_plucd6);
      expect(qcashier.common.preca_charge_plucd6 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.preca_charge_plucd6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00087_element_check_00064 **********\n\n");
    });

    test('00088_element_check_00065', () async {
      print("\n********** テスト実行：00088_element_check_00065 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.select_dsp_ccin;
      print(qcashier.common.select_dsp_ccin);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.select_dsp_ccin = testData1;
      print(qcashier.common.select_dsp_ccin);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.select_dsp_ccin == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.select_dsp_ccin == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.select_dsp_ccin = testData2;
      print(qcashier.common.select_dsp_ccin);
      expect(qcashier.common.select_dsp_ccin == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.select_dsp_ccin == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.select_dsp_ccin = defalut;
      print(qcashier.common.select_dsp_ccin);
      expect(qcashier.common.select_dsp_ccin == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.select_dsp_ccin == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00088_element_check_00065 **********\n\n");
    });

    test('00089_element_check_00066', () async {
      print("\n********** テスト実行：00089_element_check_00066 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.cancel_btn_dsp;
      print(qcashier.common.cancel_btn_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.cancel_btn_dsp = testData1;
      print(qcashier.common.cancel_btn_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.cancel_btn_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.cancel_btn_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.cancel_btn_dsp = testData2;
      print(qcashier.common.cancel_btn_dsp);
      expect(qcashier.common.cancel_btn_dsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cancel_btn_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.cancel_btn_dsp = defalut;
      print(qcashier.common.cancel_btn_dsp);
      expect(qcashier.common.cancel_btn_dsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cancel_btn_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00089_element_check_00066 **********\n\n");
    });

    test('00090_element_check_00067', () async {
      print("\n********** テスト実行：00090_element_check_00067 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.clinic_mode;
      print(qcashier.common.clinic_mode);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.clinic_mode = testData1;
      print(qcashier.common.clinic_mode);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.clinic_mode == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.clinic_mode == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.clinic_mode = testData2;
      print(qcashier.common.clinic_mode);
      expect(qcashier.common.clinic_mode == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_mode == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.clinic_mode = defalut;
      print(qcashier.common.clinic_mode);
      expect(qcashier.common.clinic_mode == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_mode == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00090_element_check_00067 **********\n\n");
    });

    test('00091_element_check_00068', () async {
      print("\n********** テスト実行：00091_element_check_00068 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.clinic_receipt;
      print(qcashier.common.clinic_receipt);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.clinic_receipt = testData1;
      print(qcashier.common.clinic_receipt);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.clinic_receipt == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.clinic_receipt == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.clinic_receipt = testData2;
      print(qcashier.common.clinic_receipt);
      expect(qcashier.common.clinic_receipt == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_receipt == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.clinic_receipt = defalut;
      print(qcashier.common.clinic_receipt);
      expect(qcashier.common.clinic_receipt == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_receipt == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00091_element_check_00068 **********\n\n");
    });

    test('00092_element_check_00069', () async {
      print("\n********** テスト実行：00092_element_check_00069 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.clinic_greeting;
      print(qcashier.common.clinic_greeting);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.clinic_greeting = testData1;
      print(qcashier.common.clinic_greeting);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.clinic_greeting == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.clinic_greeting == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.clinic_greeting = testData2;
      print(qcashier.common.clinic_greeting);
      expect(qcashier.common.clinic_greeting == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_greeting == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.clinic_greeting = defalut;
      print(qcashier.common.clinic_greeting);
      expect(qcashier.common.clinic_greeting == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_greeting == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00092_element_check_00069 **********\n\n");
    });

    test('00093_element_check_00070', () async {
      print("\n********** テスト実行：00093_element_check_00070 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.clinic_greeting_sound;
      print(qcashier.common.clinic_greeting_sound);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.clinic_greeting_sound = testData1;
      print(qcashier.common.clinic_greeting_sound);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.clinic_greeting_sound == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.clinic_greeting_sound == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.clinic_greeting_sound = testData2;
      print(qcashier.common.clinic_greeting_sound);
      expect(qcashier.common.clinic_greeting_sound == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_greeting_sound == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.clinic_greeting_sound = defalut;
      print(qcashier.common.clinic_greeting_sound);
      expect(qcashier.common.clinic_greeting_sound == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_greeting_sound == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00093_element_check_00070 **********\n\n");
    });

    test('00094_element_check_00071', () async {
      print("\n********** テスト実行：00094_element_check_00071 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.fin_btn_chg;
      print(qcashier.common.fin_btn_chg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.fin_btn_chg = testData1;
      print(qcashier.common.fin_btn_chg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.fin_btn_chg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.fin_btn_chg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.fin_btn_chg = testData2;
      print(qcashier.common.fin_btn_chg);
      expect(qcashier.common.fin_btn_chg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fin_btn_chg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.fin_btn_chg = defalut;
      print(qcashier.common.fin_btn_chg);
      expect(qcashier.common.fin_btn_chg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fin_btn_chg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00094_element_check_00071 **********\n\n");
    });

    test('00095_element_check_00072', () async {
      print("\n********** テスト実行：00095_element_check_00072 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.startdsp_btn_single;
      print(qcashier.common.startdsp_btn_single);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.startdsp_btn_single = testData1;
      print(qcashier.common.startdsp_btn_single);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.startdsp_btn_single == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.startdsp_btn_single == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.startdsp_btn_single = testData2;
      print(qcashier.common.startdsp_btn_single);
      expect(qcashier.common.startdsp_btn_single == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.startdsp_btn_single == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.startdsp_btn_single = defalut;
      print(qcashier.common.startdsp_btn_single);
      expect(qcashier.common.startdsp_btn_single == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.startdsp_btn_single == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00095_element_check_00072 **********\n\n");
    });

    test('00096_element_check_00073', () async {
      print("\n********** テスト実行：00096_element_check_00073 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.startdsp_scan_enable;
      print(qcashier.common.startdsp_scan_enable);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.startdsp_scan_enable = testData1;
      print(qcashier.common.startdsp_scan_enable);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.startdsp_scan_enable == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.startdsp_scan_enable == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.startdsp_scan_enable = testData2;
      print(qcashier.common.startdsp_scan_enable);
      expect(qcashier.common.startdsp_scan_enable == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.startdsp_scan_enable == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.startdsp_scan_enable = defalut;
      print(qcashier.common.startdsp_scan_enable);
      expect(qcashier.common.startdsp_scan_enable == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.startdsp_scan_enable == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00096_element_check_00073 **********\n\n");
    });

    test('00097_element_check_00074', () async {
      print("\n********** テスト実行：00097_element_check_00074 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ9;
      print(qcashier.common.pay_typ9);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ9 = testData1;
      print(qcashier.common.pay_typ9);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ9 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ9 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ9 = testData2;
      print(qcashier.common.pay_typ9);
      expect(qcashier.common.pay_typ9 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ9 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ9 = defalut;
      print(qcashier.common.pay_typ9);
      expect(qcashier.common.pay_typ9 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ9 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00097_element_check_00074 **********\n\n");
    });

    test('00098_element_check_00075', () async {
      print("\n********** テスト実行：00098_element_check_00075 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ10;
      print(qcashier.common.pay_typ10);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ10 = testData1;
      print(qcashier.common.pay_typ10);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ10 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ10 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ10 = testData2;
      print(qcashier.common.pay_typ10);
      expect(qcashier.common.pay_typ10 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ10 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ10 = defalut;
      print(qcashier.common.pay_typ10);
      expect(qcashier.common.pay_typ10 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ10 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00098_element_check_00075 **********\n\n");
    });

    test('00099_element_check_00076', () async {
      print("\n********** テスト実行：00099_element_check_00076 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ11;
      print(qcashier.common.pay_typ11);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ11 = testData1;
      print(qcashier.common.pay_typ11);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ11 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ11 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ11 = testData2;
      print(qcashier.common.pay_typ11);
      expect(qcashier.common.pay_typ11 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ11 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ11 = defalut;
      print(qcashier.common.pay_typ11);
      expect(qcashier.common.pay_typ11 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ11 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00099_element_check_00076 **********\n\n");
    });

    test('00100_element_check_00077', () async {
      print("\n********** テスト実行：00100_element_check_00077 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ12;
      print(qcashier.common.pay_typ12);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ12 = testData1;
      print(qcashier.common.pay_typ12);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ12 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ12 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ12 = testData2;
      print(qcashier.common.pay_typ12);
      expect(qcashier.common.pay_typ12 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ12 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ12 = defalut;
      print(qcashier.common.pay_typ12);
      expect(qcashier.common.pay_typ12 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ12 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00100_element_check_00077 **********\n\n");
    });

    test('00101_element_check_00078', () async {
      print("\n********** テスト実行：00101_element_check_00078 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ13;
      print(qcashier.common.pay_typ13);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ13 = testData1;
      print(qcashier.common.pay_typ13);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ13 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ13 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ13 = testData2;
      print(qcashier.common.pay_typ13);
      expect(qcashier.common.pay_typ13 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ13 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ13 = defalut;
      print(qcashier.common.pay_typ13);
      expect(qcashier.common.pay_typ13 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ13 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00101_element_check_00078 **********\n\n");
    });

    test('00102_element_check_00079', () async {
      print("\n********** テスト実行：00102_element_check_00079 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ14;
      print(qcashier.common.pay_typ14);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ14 = testData1;
      print(qcashier.common.pay_typ14);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ14 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ14 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ14 = testData2;
      print(qcashier.common.pay_typ14);
      expect(qcashier.common.pay_typ14 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ14 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ14 = defalut;
      print(qcashier.common.pay_typ14);
      expect(qcashier.common.pay_typ14 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ14 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00102_element_check_00079 **********\n\n");
    });

    test('00103_element_check_00080', () async {
      print("\n********** テスト実行：00103_element_check_00080 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ15;
      print(qcashier.common.pay_typ15);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ15 = testData1;
      print(qcashier.common.pay_typ15);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ15 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ15 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ15 = testData2;
      print(qcashier.common.pay_typ15);
      expect(qcashier.common.pay_typ15 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ15 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ15 = defalut;
      print(qcashier.common.pay_typ15);
      expect(qcashier.common.pay_typ15 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ15 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00103_element_check_00080 **********\n\n");
    });

    test('00104_element_check_00081', () async {
      print("\n********** テスト実行：00104_element_check_00081 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.pay_typ16;
      print(qcashier.common.pay_typ16);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.pay_typ16 = testData1;
      print(qcashier.common.pay_typ16);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.pay_typ16 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.pay_typ16 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.pay_typ16 = testData2;
      print(qcashier.common.pay_typ16);
      expect(qcashier.common.pay_typ16 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ16 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.pay_typ16 = defalut;
      print(qcashier.common.pay_typ16);
      expect(qcashier.common.pay_typ16 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.pay_typ16 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00104_element_check_00081 **********\n\n");
    });

    test('00105_element_check_00082', () async {
      print("\n********** テスト実行：00105_element_check_00082 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.verifone_nfc_crdt;
      print(qcashier.common.verifone_nfc_crdt);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.verifone_nfc_crdt = testData1;
      print(qcashier.common.verifone_nfc_crdt);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.verifone_nfc_crdt == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.verifone_nfc_crdt == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.verifone_nfc_crdt = testData2;
      print(qcashier.common.verifone_nfc_crdt);
      expect(qcashier.common.verifone_nfc_crdt == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.verifone_nfc_crdt == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.verifone_nfc_crdt = defalut;
      print(qcashier.common.verifone_nfc_crdt);
      expect(qcashier.common.verifone_nfc_crdt == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.verifone_nfc_crdt == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00105_element_check_00082 **********\n\n");
    });

    test('00106_element_check_00083', () async {
      print("\n********** テスト実行：00106_element_check_00083 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.hs_dualdisp_chk;
      print(qcashier.common.hs_dualdisp_chk);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.hs_dualdisp_chk = testData1;
      print(qcashier.common.hs_dualdisp_chk);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.hs_dualdisp_chk == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.hs_dualdisp_chk == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.hs_dualdisp_chk = testData2;
      print(qcashier.common.hs_dualdisp_chk);
      expect(qcashier.common.hs_dualdisp_chk == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.hs_dualdisp_chk == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.hs_dualdisp_chk = defalut;
      print(qcashier.common.hs_dualdisp_chk);
      expect(qcashier.common.hs_dualdisp_chk == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.hs_dualdisp_chk == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00106_element_check_00083 **********\n\n");
    });

    test('00107_element_check_00084', () async {
      print("\n********** テスト実行：00107_element_check_00084 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.back_btn_dsp;
      print(qcashier.common.back_btn_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.back_btn_dsp = testData1;
      print(qcashier.common.back_btn_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.back_btn_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.back_btn_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.back_btn_dsp = testData2;
      print(qcashier.common.back_btn_dsp);
      expect(qcashier.common.back_btn_dsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.back_btn_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.back_btn_dsp = defalut;
      print(qcashier.common.back_btn_dsp);
      expect(qcashier.common.back_btn_dsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.back_btn_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00107_element_check_00084 **********\n\n");
    });

    test('00108_element_check_00085', () async {
      print("\n********** テスト実行：00108_element_check_00085 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.NoOperationWarning;
      print(qcashier.common.NoOperationWarning);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.NoOperationWarning = testData1;
      print(qcashier.common.NoOperationWarning);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.NoOperationWarning == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.NoOperationWarning == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.NoOperationWarning = testData2;
      print(qcashier.common.NoOperationWarning);
      expect(qcashier.common.NoOperationWarning == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationWarning == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.NoOperationWarning = defalut;
      print(qcashier.common.NoOperationWarning);
      expect(qcashier.common.NoOperationWarning == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationWarning == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00108_element_check_00085 **********\n\n");
    });

    test('00109_element_check_00086', () async {
      print("\n********** テスト実行：00109_element_check_00086 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.NoOperationSignpaul_time;
      print(qcashier.common.NoOperationSignpaul_time);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.NoOperationSignpaul_time = testData1;
      print(qcashier.common.NoOperationSignpaul_time);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.NoOperationSignpaul_time == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.NoOperationSignpaul_time == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.NoOperationSignpaul_time = testData2;
      print(qcashier.common.NoOperationSignpaul_time);
      expect(qcashier.common.NoOperationSignpaul_time == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationSignpaul_time == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.NoOperationSignpaul_time = defalut;
      print(qcashier.common.NoOperationSignpaul_time);
      expect(qcashier.common.NoOperationSignpaul_time == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationSignpaul_time == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00109_element_check_00086 **********\n\n");
    });

    test('00110_element_check_00087', () async {
      print("\n********** テスト実行：00110_element_check_00087 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.NoOperationVoicesound_time;
      print(qcashier.common.NoOperationVoicesound_time);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.NoOperationVoicesound_time = testData1;
      print(qcashier.common.NoOperationVoicesound_time);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.NoOperationVoicesound_time == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.NoOperationVoicesound_time == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.NoOperationVoicesound_time = testData2;
      print(qcashier.common.NoOperationVoicesound_time);
      expect(qcashier.common.NoOperationVoicesound_time == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationVoicesound_time == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.NoOperationVoicesound_time = defalut;
      print(qcashier.common.NoOperationVoicesound_time);
      expect(qcashier.common.NoOperationVoicesound_time == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationVoicesound_time == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00110_element_check_00087 **********\n\n");
    });

    test('00111_element_check_00088', () async {
      print("\n********** テスト実行：00111_element_check_00088 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.NoOperationSound;
      print(qcashier.common.NoOperationSound);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.NoOperationSound = testData1;
      print(qcashier.common.NoOperationSound);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.NoOperationSound == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.NoOperationSound == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.NoOperationSound = testData2;
      print(qcashier.common.NoOperationSound);
      expect(qcashier.common.NoOperationSound == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationSound == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.NoOperationSound = defalut;
      print(qcashier.common.NoOperationSound);
      expect(qcashier.common.NoOperationSound == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationSound == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00111_element_check_00088 **********\n\n");
    });

    test('00112_element_check_00089', () async {
      print("\n********** テスト実行：00112_element_check_00089 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.NoOperationPayWarning;
      print(qcashier.common.NoOperationPayWarning);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.NoOperationPayWarning = testData1;
      print(qcashier.common.NoOperationPayWarning);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.NoOperationPayWarning == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.NoOperationPayWarning == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.NoOperationPayWarning = testData2;
      print(qcashier.common.NoOperationPayWarning);
      expect(qcashier.common.NoOperationPayWarning == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationPayWarning == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.NoOperationPayWarning = defalut;
      print(qcashier.common.NoOperationPayWarning);
      expect(qcashier.common.NoOperationPayWarning == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.NoOperationPayWarning == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00112_element_check_00089 **********\n\n");
    });

    test('00113_element_check_00090', () async {
      print("\n********** テスト実行：00113_element_check_00090 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.cin_dsp_wait;
      print(qcashier.common.cin_dsp_wait);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.cin_dsp_wait = testData1;
      print(qcashier.common.cin_dsp_wait);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.cin_dsp_wait == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.cin_dsp_wait == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.cin_dsp_wait = testData2;
      print(qcashier.common.cin_dsp_wait);
      expect(qcashier.common.cin_dsp_wait == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cin_dsp_wait == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.cin_dsp_wait = defalut;
      print(qcashier.common.cin_dsp_wait);
      expect(qcashier.common.cin_dsp_wait == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cin_dsp_wait == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00113_element_check_00090 **********\n\n");
    });

    test('00114_element_check_00091', () async {
      print("\n********** テスト実行：00114_element_check_00091 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.clinic_auto_stl;
      print(qcashier.common.clinic_auto_stl);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.clinic_auto_stl = testData1;
      print(qcashier.common.clinic_auto_stl);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.clinic_auto_stl == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.clinic_auto_stl == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.clinic_auto_stl = testData2;
      print(qcashier.common.clinic_auto_stl);
      expect(qcashier.common.clinic_auto_stl == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_auto_stl == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.clinic_auto_stl = defalut;
      print(qcashier.common.clinic_auto_stl);
      expect(qcashier.common.clinic_auto_stl == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.clinic_auto_stl == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00114_element_check_00091 **********\n\n");
    });

    test('00115_element_check_00092', () async {
      print("\n********** テスト実行：00115_element_check_00092 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.acracb_stlmode;
      print(qcashier.common.acracb_stlmode);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.acracb_stlmode = testData1;
      print(qcashier.common.acracb_stlmode);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.acracb_stlmode == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.acracb_stlmode == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.acracb_stlmode = testData2;
      print(qcashier.common.acracb_stlmode);
      expect(qcashier.common.acracb_stlmode == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.acracb_stlmode == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.acracb_stlmode = defalut;
      print(qcashier.common.acracb_stlmode);
      expect(qcashier.common.acracb_stlmode == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.acracb_stlmode == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00115_element_check_00092 **********\n\n");
    });

    test('00116_element_check_00093', () async {
      print("\n********** テスト実行：00116_element_check_00093 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.apbf_regbag_plucd;
      print(qcashier.common.apbf_regbag_plucd);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.apbf_regbag_plucd = testData1;
      print(qcashier.common.apbf_regbag_plucd);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.apbf_regbag_plucd == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.apbf_regbag_plucd == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.apbf_regbag_plucd = testData2;
      print(qcashier.common.apbf_regbag_plucd);
      expect(qcashier.common.apbf_regbag_plucd == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.apbf_regbag_plucd == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.apbf_regbag_plucd = defalut;
      print(qcashier.common.apbf_regbag_plucd);
      expect(qcashier.common.apbf_regbag_plucd == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.apbf_regbag_plucd == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00116_element_check_00093 **********\n\n");
    });

    test('00117_element_check_00094', () async {
      print("\n********** テスト実行：00117_element_check_00094 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.apbf_dlgdisp_time;
      print(qcashier.common.apbf_dlgdisp_time);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.apbf_dlgdisp_time = testData1;
      print(qcashier.common.apbf_dlgdisp_time);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.apbf_dlgdisp_time == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.apbf_dlgdisp_time == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.apbf_dlgdisp_time = testData2;
      print(qcashier.common.apbf_dlgdisp_time);
      expect(qcashier.common.apbf_dlgdisp_time == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.apbf_dlgdisp_time == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.apbf_dlgdisp_time = defalut;
      print(qcashier.common.apbf_dlgdisp_time);
      expect(qcashier.common.apbf_dlgdisp_time == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.apbf_dlgdisp_time == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00117_element_check_00094 **********\n\n");
    });

    test('00118_element_check_00095', () async {
      print("\n********** テスト実行：00118_element_check_00095 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.mybag_plu_point_add;
      print(qcashier.common.mybag_plu_point_add);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.mybag_plu_point_add = testData1s;
      print(qcashier.common.mybag_plu_point_add);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.mybag_plu_point_add == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.mybag_plu_point_add == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.mybag_plu_point_add = testData2s;
      print(qcashier.common.mybag_plu_point_add);
      expect(qcashier.common.mybag_plu_point_add == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.mybag_plu_point_add == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.mybag_plu_point_add = defalut;
      print(qcashier.common.mybag_plu_point_add);
      expect(qcashier.common.mybag_plu_point_add == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.mybag_plu_point_add == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00118_element_check_00095 **********\n\n");
    });

    test('00119_element_check_00096', () async {
      print("\n********** テスト実行：00119_element_check_00096 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.video_jpqr_scanner;
      print(qcashier.common.video_jpqr_scanner);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.video_jpqr_scanner = testData1;
      print(qcashier.common.video_jpqr_scanner);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.video_jpqr_scanner == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.video_jpqr_scanner == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.video_jpqr_scanner = testData2;
      print(qcashier.common.video_jpqr_scanner);
      expect(qcashier.common.video_jpqr_scanner == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.video_jpqr_scanner == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.video_jpqr_scanner = defalut;
      print(qcashier.common.video_jpqr_scanner);
      expect(qcashier.common.video_jpqr_scanner == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.video_jpqr_scanner == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00119_element_check_00096 **********\n\n");
    });

    test('00120_element_check_00097', () async {
      print("\n********** テスト実行：00120_element_check_00097 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.chg_warn_timer_use;
      print(qcashier.common.chg_warn_timer_use);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.chg_warn_timer_use = testData1;
      print(qcashier.common.chg_warn_timer_use);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.chg_warn_timer_use == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.chg_warn_timer_use == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.chg_warn_timer_use = testData2;
      print(qcashier.common.chg_warn_timer_use);
      expect(qcashier.common.chg_warn_timer_use == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.chg_warn_timer_use == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.chg_warn_timer_use = defalut;
      print(qcashier.common.chg_warn_timer_use);
      expect(qcashier.common.chg_warn_timer_use == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.chg_warn_timer_use == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00120_element_check_00097 **********\n\n");
    });

    test('00121_element_check_00098', () async {
      print("\n********** テスト実行：00121_element_check_00098 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.cin_cnl_btn_show;
      print(qcashier.common.cin_cnl_btn_show);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.cin_cnl_btn_show = testData1;
      print(qcashier.common.cin_cnl_btn_show);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.cin_cnl_btn_show == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.cin_cnl_btn_show == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.cin_cnl_btn_show = testData2;
      print(qcashier.common.cin_cnl_btn_show);
      expect(qcashier.common.cin_cnl_btn_show == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cin_cnl_btn_show == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.cin_cnl_btn_show = defalut;
      print(qcashier.common.cin_cnl_btn_show);
      expect(qcashier.common.cin_cnl_btn_show == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cin_cnl_btn_show == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00121_element_check_00098 **********\n\n");
    });

    test('00122_element_check_00099', () async {
      print("\n********** テスト実行：00122_element_check_00099 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regs_use_class;
      print(qcashier.common.regs_use_class);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regs_use_class = testData1;
      print(qcashier.common.regs_use_class);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regs_use_class == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regs_use_class == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regs_use_class = testData2;
      print(qcashier.common.regs_use_class);
      expect(qcashier.common.regs_use_class == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regs_use_class == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regs_use_class = defalut;
      print(qcashier.common.regs_use_class);
      expect(qcashier.common.regs_use_class == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regs_use_class == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00122_element_check_00099 **********\n\n");
    });

    test('00123_element_check_00100', () async {
      print("\n********** テスト実行：00123_element_check_00100 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.sg_eatin_chk;
      print(qcashier.common.sg_eatin_chk);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.sg_eatin_chk = testData1;
      print(qcashier.common.sg_eatin_chk);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.sg_eatin_chk == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.sg_eatin_chk == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.sg_eatin_chk = testData2;
      print(qcashier.common.sg_eatin_chk);
      expect(qcashier.common.sg_eatin_chk == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.sg_eatin_chk == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.sg_eatin_chk = defalut;
      print(qcashier.common.sg_eatin_chk);
      expect(qcashier.common.sg_eatin_chk == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.sg_eatin_chk == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00123_element_check_00100 **********\n\n");
    });

    test('00124_element_check_00101', () async {
      print("\n********** テスト実行：00124_element_check_00101 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.selfmode1_auto_cancel;
      print(qcashier.common.selfmode1_auto_cancel);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.selfmode1_auto_cancel = testData1;
      print(qcashier.common.selfmode1_auto_cancel);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.selfmode1_auto_cancel == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.selfmode1_auto_cancel == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.selfmode1_auto_cancel = testData2;
      print(qcashier.common.selfmode1_auto_cancel);
      expect(qcashier.common.selfmode1_auto_cancel == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.selfmode1_auto_cancel == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.selfmode1_auto_cancel = defalut;
      print(qcashier.common.selfmode1_auto_cancel);
      expect(qcashier.common.selfmode1_auto_cancel == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.selfmode1_auto_cancel == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00124_element_check_00101 **********\n\n");
    });

    test('00125_element_check_00102', () async {
      print("\n********** テスト実行：00125_element_check_00102 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.point_use_unit;
      print(qcashier.common.point_use_unit);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.point_use_unit = testData1;
      print(qcashier.common.point_use_unit);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.point_use_unit == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.point_use_unit == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.point_use_unit = testData2;
      print(qcashier.common.point_use_unit);
      expect(qcashier.common.point_use_unit == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.point_use_unit == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.point_use_unit = defalut;
      print(qcashier.common.point_use_unit);
      expect(qcashier.common.point_use_unit == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.point_use_unit == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00125_element_check_00102 **********\n\n");
    });

    test('00126_element_check_00103', () async {
      print("\n********** テスト実行：00126_element_check_00103 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.selfmode1_wav_qty;
      print(qcashier.common.selfmode1_wav_qty);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.selfmode1_wav_qty = testData1;
      print(qcashier.common.selfmode1_wav_qty);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.selfmode1_wav_qty == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.selfmode1_wav_qty == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.selfmode1_wav_qty = testData2;
      print(qcashier.common.selfmode1_wav_qty);
      expect(qcashier.common.selfmode1_wav_qty == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.selfmode1_wav_qty == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.selfmode1_wav_qty = defalut;
      print(qcashier.common.selfmode1_wav_qty);
      expect(qcashier.common.selfmode1_wav_qty == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.selfmode1_wav_qty == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00126_element_check_00103 **********\n\n");
    });

    test('00127_element_check_00104', () async {
      print("\n********** テスト実行：00127_element_check_00104 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.age_chk_notice;
      print(qcashier.common.age_chk_notice);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.age_chk_notice = testData1;
      print(qcashier.common.age_chk_notice);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.age_chk_notice == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.age_chk_notice == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.age_chk_notice = testData2;
      print(qcashier.common.age_chk_notice);
      expect(qcashier.common.age_chk_notice == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.age_chk_notice == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.age_chk_notice = defalut;
      print(qcashier.common.age_chk_notice);
      expect(qcashier.common.age_chk_notice == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.age_chk_notice == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00127_element_check_00104 **********\n\n");
    });

    test('00128_element_check_00105', () async {
      print("\n********** テスト実行：00128_element_check_00105 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.verifone_nfc_repika_crdt;
      print(qcashier.common.verifone_nfc_repika_crdt);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.verifone_nfc_repika_crdt = testData1;
      print(qcashier.common.verifone_nfc_repika_crdt);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.verifone_nfc_repika_crdt == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.verifone_nfc_repika_crdt == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.verifone_nfc_repika_crdt = testData2;
      print(qcashier.common.verifone_nfc_repika_crdt);
      expect(qcashier.common.verifone_nfc_repika_crdt == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.verifone_nfc_repika_crdt == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.verifone_nfc_repika_crdt = defalut;
      print(qcashier.common.verifone_nfc_repika_crdt);
      expect(qcashier.common.verifone_nfc_repika_crdt == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.verifone_nfc_repika_crdt == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00128_element_check_00105 **********\n\n");
    });

    test('00129_element_check_00106', () async {
      print("\n********** テスト実行：00129_element_check_00106 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag1_default;
      print(qcashier.common.regbag1_default);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag1_default = testData1;
      print(qcashier.common.regbag1_default);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag1_default == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag1_default == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag1_default = testData2;
      print(qcashier.common.regbag1_default);
      expect(qcashier.common.regbag1_default == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag1_default == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag1_default = defalut;
      print(qcashier.common.regbag1_default);
      expect(qcashier.common.regbag1_default == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag1_default == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00129_element_check_00106 **********\n\n");
    });

    test('00130_element_check_00107', () async {
      print("\n********** テスト実行：00130_element_check_00107 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag2_default;
      print(qcashier.common.regbag2_default);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag2_default = testData1;
      print(qcashier.common.regbag2_default);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag2_default == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag2_default == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag2_default = testData2;
      print(qcashier.common.regbag2_default);
      expect(qcashier.common.regbag2_default == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag2_default == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag2_default = defalut;
      print(qcashier.common.regbag2_default);
      expect(qcashier.common.regbag2_default == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag2_default == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00130_element_check_00107 **********\n\n");
    });

    test('00131_element_check_00108', () async {
      print("\n********** テスト実行：00131_element_check_00108 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag3_default;
      print(qcashier.common.regbag3_default);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag3_default = testData1;
      print(qcashier.common.regbag3_default);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag3_default == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag3_default == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag3_default = testData2;
      print(qcashier.common.regbag3_default);
      expect(qcashier.common.regbag3_default == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag3_default == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag3_default = defalut;
      print(qcashier.common.regbag3_default);
      expect(qcashier.common.regbag3_default == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag3_default == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00131_element_check_00108 **********\n\n");
    });

    test('00132_element_check_00109', () async {
      print("\n********** テスト実行：00132_element_check_00109 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag_timing;
      print(qcashier.common.regbag_timing);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag_timing = testData1;
      print(qcashier.common.regbag_timing);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag_timing == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag_timing == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag_timing = testData2;
      print(qcashier.common.regbag_timing);
      expect(qcashier.common.regbag_timing == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag_timing == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag_timing = defalut;
      print(qcashier.common.regbag_timing);
      expect(qcashier.common.regbag_timing == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag_timing == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00132_element_check_00109 **********\n\n");
    });

    test('00133_element_check_00110', () async {
      print("\n********** テスト実行：00133_element_check_00110 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag_disp_back_btn;
      print(qcashier.common.regbag_disp_back_btn);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag_disp_back_btn = testData1;
      print(qcashier.common.regbag_disp_back_btn);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag_disp_back_btn == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag_disp_back_btn == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag_disp_back_btn = testData2;
      print(qcashier.common.regbag_disp_back_btn);
      expect(qcashier.common.regbag_disp_back_btn == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag_disp_back_btn == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag_disp_back_btn = defalut;
      print(qcashier.common.regbag_disp_back_btn);
      expect(qcashier.common.regbag_disp_back_btn == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag_disp_back_btn == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00133_element_check_00110 **********\n\n");
    });

    test('00134_element_check_00111', () async {
      print("\n********** テスト実行：00134_element_check_00111 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.self_disp_preca_ref;
      print(qcashier.common.self_disp_preca_ref);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.self_disp_preca_ref = testData1;
      print(qcashier.common.self_disp_preca_ref);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.self_disp_preca_ref == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.self_disp_preca_ref == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.self_disp_preca_ref = testData2;
      print(qcashier.common.self_disp_preca_ref);
      expect(qcashier.common.self_disp_preca_ref == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.self_disp_preca_ref == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.self_disp_preca_ref = defalut;
      print(qcashier.common.self_disp_preca_ref);
      expect(qcashier.common.self_disp_preca_ref == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.self_disp_preca_ref == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00134_element_check_00111 **********\n\n");
    });

    test('00135_element_check_00112', () async {
      print("\n********** テスト実行：00135_element_check_00112 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.fs_cashless_dsp_change;
      print(qcashier.common.fs_cashless_dsp_change);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.fs_cashless_dsp_change = testData1;
      print(qcashier.common.fs_cashless_dsp_change);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.fs_cashless_dsp_change == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.fs_cashless_dsp_change == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.fs_cashless_dsp_change = testData2;
      print(qcashier.common.fs_cashless_dsp_change);
      expect(qcashier.common.fs_cashless_dsp_change == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fs_cashless_dsp_change == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.fs_cashless_dsp_change = defalut;
      print(qcashier.common.fs_cashless_dsp_change);
      expect(qcashier.common.fs_cashless_dsp_change == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.fs_cashless_dsp_change == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00135_element_check_00112 **********\n\n");
    });

    test('00136_element_check_00113', () async {
      print("\n********** テスト実行：00136_element_check_00113 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.hs_fs_scanning_guide;
      print(qcashier.common.hs_fs_scanning_guide);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.hs_fs_scanning_guide = testData1;
      print(qcashier.common.hs_fs_scanning_guide);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.hs_fs_scanning_guide == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.hs_fs_scanning_guide == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.hs_fs_scanning_guide = testData2;
      print(qcashier.common.hs_fs_scanning_guide);
      expect(qcashier.common.hs_fs_scanning_guide == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.hs_fs_scanning_guide == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.hs_fs_scanning_guide = defalut;
      print(qcashier.common.hs_fs_scanning_guide);
      expect(qcashier.common.hs_fs_scanning_guide == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.hs_fs_scanning_guide == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00136_element_check_00113 **********\n\n");
    });

    test('00137_element_check_00114', () async {
      print("\n********** テスト実行：00137_element_check_00114 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.hs_fs_twice_read_stop;
      print(qcashier.common.hs_fs_twice_read_stop);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.hs_fs_twice_read_stop = testData1;
      print(qcashier.common.hs_fs_twice_read_stop);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.hs_fs_twice_read_stop == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.hs_fs_twice_read_stop == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.hs_fs_twice_read_stop = testData2;
      print(qcashier.common.hs_fs_twice_read_stop);
      expect(qcashier.common.hs_fs_twice_read_stop == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.hs_fs_twice_read_stop == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.hs_fs_twice_read_stop = defalut;
      print(qcashier.common.hs_fs_twice_read_stop);
      expect(qcashier.common.hs_fs_twice_read_stop == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.hs_fs_twice_read_stop == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00137_element_check_00114 **********\n\n");
    });

    test('00138_element_check_00115', () async {
      print("\n********** テスト実行：00138_element_check_00115 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.cashin_sound;
      print(qcashier.common.cashin_sound);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.cashin_sound = testData1;
      print(qcashier.common.cashin_sound);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.cashin_sound == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.cashin_sound == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.cashin_sound = testData2;
      print(qcashier.common.cashin_sound);
      expect(qcashier.common.cashin_sound == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cashin_sound == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.cashin_sound = defalut;
      print(qcashier.common.cashin_sound);
      expect(qcashier.common.cashin_sound == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cashin_sound == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00138_element_check_00115 **********\n\n");
    });

    test('00139_element_check_00116', () async {
      print("\n********** テスト実行：00139_element_check_00116 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.sound_change_flg;
      print(qcashier.common.sound_change_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.sound_change_flg = testData1;
      print(qcashier.common.sound_change_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.sound_change_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.sound_change_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.sound_change_flg = testData2;
      print(qcashier.common.sound_change_flg);
      expect(qcashier.common.sound_change_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.sound_change_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.sound_change_flg = defalut;
      print(qcashier.common.sound_change_flg);
      expect(qcashier.common.sound_change_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.sound_change_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00139_element_check_00116 **********\n\n");
    });

    test('00140_element_check_00117', () async {
      print("\n********** テスト実行：00140_element_check_00117 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.hs_fs_auto_preset_dsp;
      print(qcashier.common.hs_fs_auto_preset_dsp);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.hs_fs_auto_preset_dsp = testData1;
      print(qcashier.common.hs_fs_auto_preset_dsp);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.hs_fs_auto_preset_dsp == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.hs_fs_auto_preset_dsp == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.hs_fs_auto_preset_dsp = testData2;
      print(qcashier.common.hs_fs_auto_preset_dsp);
      expect(qcashier.common.hs_fs_auto_preset_dsp == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.hs_fs_auto_preset_dsp == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.hs_fs_auto_preset_dsp = defalut;
      print(qcashier.common.hs_fs_auto_preset_dsp);
      expect(qcashier.common.hs_fs_auto_preset_dsp == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.hs_fs_auto_preset_dsp == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00140_element_check_00117 **********\n\n");
    });

    test('00141_element_check_00118', () async {
      print("\n********** テスト実行：00141_element_check_00118 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.cashless_dsp_return;
      print(qcashier.common.cashless_dsp_return);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.cashless_dsp_return = testData1;
      print(qcashier.common.cashless_dsp_return);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.cashless_dsp_return == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.cashless_dsp_return == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.cashless_dsp_return = testData2;
      print(qcashier.common.cashless_dsp_return);
      expect(qcashier.common.cashless_dsp_return == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cashless_dsp_return == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.cashless_dsp_return = defalut;
      print(qcashier.common.cashless_dsp_return);
      expect(qcashier.common.cashless_dsp_return == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cashless_dsp_return == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00141_element_check_00118 **********\n\n");
    });

    test('00142_element_check_00119', () async {
      print("\n********** テスト実行：00142_element_check_00119 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.regbag_screen_scan_input;
      print(qcashier.common.regbag_screen_scan_input);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.regbag_screen_scan_input = testData1;
      print(qcashier.common.regbag_screen_scan_input);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.regbag_screen_scan_input == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.regbag_screen_scan_input == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.regbag_screen_scan_input = testData2;
      print(qcashier.common.regbag_screen_scan_input);
      expect(qcashier.common.regbag_screen_scan_input == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag_screen_scan_input == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.regbag_screen_scan_input = defalut;
      print(qcashier.common.regbag_screen_scan_input);
      expect(qcashier.common.regbag_screen_scan_input == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.regbag_screen_scan_input == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00142_element_check_00119 **********\n\n");
    });

    test('00143_element_check_00120', () async {
      print("\n********** テスト実行：00143_element_check_00120 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_pay_btn_blink;
      print(qcashier.common.g3_pay_btn_blink);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_pay_btn_blink = testData1;
      print(qcashier.common.g3_pay_btn_blink);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_pay_btn_blink == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_pay_btn_blink == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_pay_btn_blink = testData2;
      print(qcashier.common.g3_pay_btn_blink);
      expect(qcashier.common.g3_pay_btn_blink == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_pay_btn_blink == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_pay_btn_blink = defalut;
      print(qcashier.common.g3_pay_btn_blink);
      expect(qcashier.common.g3_pay_btn_blink == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_pay_btn_blink == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00143_element_check_00120 **********\n\n");
    });

    test('00144_element_check_00121', () async {
      print("\n********** テスト実行：00144_element_check_00121 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_employee_call_btn;
      print(qcashier.common.g3_employee_call_btn);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_employee_call_btn = testData1;
      print(qcashier.common.g3_employee_call_btn);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_employee_call_btn == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_employee_call_btn == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_employee_call_btn = testData2;
      print(qcashier.common.g3_employee_call_btn);
      expect(qcashier.common.g3_employee_call_btn == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_employee_call_btn == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_employee_call_btn = defalut;
      print(qcashier.common.g3_employee_call_btn);
      expect(qcashier.common.g3_employee_call_btn == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_employee_call_btn == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00144_element_check_00121 **********\n\n");
    });

    test('00145_element_check_00122', () async {
      print("\n********** テスト実行：00145_element_check_00122 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_pay_slct_btn_ptn;
      print(qcashier.common.g3_pay_slct_btn_ptn);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_pay_slct_btn_ptn = testData1;
      print(qcashier.common.g3_pay_slct_btn_ptn);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_pay_slct_btn_ptn == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_pay_slct_btn_ptn == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_pay_slct_btn_ptn = testData2;
      print(qcashier.common.g3_pay_slct_btn_ptn);
      expect(qcashier.common.g3_pay_slct_btn_ptn == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_pay_slct_btn_ptn == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_pay_slct_btn_ptn = defalut;
      print(qcashier.common.g3_pay_slct_btn_ptn);
      expect(qcashier.common.g3_pay_slct_btn_ptn == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_pay_slct_btn_ptn == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00145_element_check_00122 **********\n\n");
    });

    test('00146_element_check_00123', () async {
      print("\n********** テスト実行：00146_element_check_00123 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.video_jpqr_sidescanner;
      print(qcashier.common.video_jpqr_sidescanner);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.video_jpqr_sidescanner = testData1;
      print(qcashier.common.video_jpqr_sidescanner);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.video_jpqr_sidescanner == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.video_jpqr_sidescanner == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.video_jpqr_sidescanner = testData2;
      print(qcashier.common.video_jpqr_sidescanner);
      expect(qcashier.common.video_jpqr_sidescanner == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.video_jpqr_sidescanner == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.video_jpqr_sidescanner = defalut;
      print(qcashier.common.video_jpqr_sidescanner);
      expect(qcashier.common.video_jpqr_sidescanner == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.video_jpqr_sidescanner == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00146_element_check_00123 **********\n\n");
    });

    test('00147_element_check_00124', () async {
      print("\n********** テスト実行：00147_element_check_00124 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.mente_itemlist_type;
      print(qcashier.common.mente_itemlist_type);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.mente_itemlist_type = testData1;
      print(qcashier.common.mente_itemlist_type);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.mente_itemlist_type == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.mente_itemlist_type == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.mente_itemlist_type = testData2;
      print(qcashier.common.mente_itemlist_type);
      expect(qcashier.common.mente_itemlist_type == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.mente_itemlist_type == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.mente_itemlist_type = defalut;
      print(qcashier.common.mente_itemlist_type);
      expect(qcashier.common.mente_itemlist_type == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.mente_itemlist_type == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00147_element_check_00124 **********\n\n");
    });

    test('00148_element_check_00125', () async {
      print("\n********** テスト実行：00148_element_check_00125 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.rg_self_noteplu_perm;
      print(qcashier.common.rg_self_noteplu_perm);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.rg_self_noteplu_perm = testData1;
      print(qcashier.common.rg_self_noteplu_perm);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.rg_self_noteplu_perm == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.rg_self_noteplu_perm == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.rg_self_noteplu_perm = testData2;
      print(qcashier.common.rg_self_noteplu_perm);
      expect(qcashier.common.rg_self_noteplu_perm == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.rg_self_noteplu_perm == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.rg_self_noteplu_perm = defalut;
      print(qcashier.common.rg_self_noteplu_perm);
      expect(qcashier.common.rg_self_noteplu_perm == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.rg_self_noteplu_perm == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00148_element_check_00125 **********\n\n");
    });

    test('00149_element_check_00126', () async {
      print("\n********** テスト実行：00149_element_check_00126 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_self_itemlist_scrvoid;
      print(qcashier.common.g3_self_itemlist_scrvoid);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_self_itemlist_scrvoid = testData1;
      print(qcashier.common.g3_self_itemlist_scrvoid);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_self_itemlist_scrvoid == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_self_itemlist_scrvoid == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_self_itemlist_scrvoid = testData2;
      print(qcashier.common.g3_self_itemlist_scrvoid);
      expect(qcashier.common.g3_self_itemlist_scrvoid == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_self_itemlist_scrvoid == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_self_itemlist_scrvoid = defalut;
      print(qcashier.common.g3_self_itemlist_scrvoid);
      expect(qcashier.common.g3_self_itemlist_scrvoid == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_self_itemlist_scrvoid == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00149_element_check_00126 **********\n\n");
    });

    test('00150_element_check_00127', () async {
      print("\n********** テスト実行：00150_element_check_00127 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_custom;
      print(qcashier.common.g3_fs_presetgroup_custom);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_custom = testData1;
      print(qcashier.common.g3_fs_presetgroup_custom);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_custom == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_custom == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_custom = testData2;
      print(qcashier.common.g3_fs_presetgroup_custom);
      expect(qcashier.common.g3_fs_presetgroup_custom == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_custom == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_custom = defalut;
      print(qcashier.common.g3_fs_presetgroup_custom);
      expect(qcashier.common.g3_fs_presetgroup_custom == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_custom == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00150_element_check_00127 **********\n\n");
    });

    test('00151_element_check_00128', () async {
      print("\n********** テスト実行：00151_element_check_00128 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_btn1;
      print(qcashier.common.g3_fs_presetgroup_btn1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_btn1 = testData1;
      print(qcashier.common.g3_fs_presetgroup_btn1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_btn1 = testData2;
      print(qcashier.common.g3_fs_presetgroup_btn1);
      expect(qcashier.common.g3_fs_presetgroup_btn1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_btn1 = defalut;
      print(qcashier.common.g3_fs_presetgroup_btn1);
      expect(qcashier.common.g3_fs_presetgroup_btn1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00151_element_check_00128 **********\n\n");
    });

    test('00152_element_check_00129', () async {
      print("\n********** テスト実行：00152_element_check_00129 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_btn2;
      print(qcashier.common.g3_fs_presetgroup_btn2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_btn2 = testData1;
      print(qcashier.common.g3_fs_presetgroup_btn2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_btn2 = testData2;
      print(qcashier.common.g3_fs_presetgroup_btn2);
      expect(qcashier.common.g3_fs_presetgroup_btn2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_btn2 = defalut;
      print(qcashier.common.g3_fs_presetgroup_btn2);
      expect(qcashier.common.g3_fs_presetgroup_btn2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00152_element_check_00129 **********\n\n");
    });

    test('00153_element_check_00130', () async {
      print("\n********** テスト実行：00153_element_check_00130 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_btn3;
      print(qcashier.common.g3_fs_presetgroup_btn3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_btn3 = testData1;
      print(qcashier.common.g3_fs_presetgroup_btn3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_btn3 = testData2;
      print(qcashier.common.g3_fs_presetgroup_btn3);
      expect(qcashier.common.g3_fs_presetgroup_btn3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_btn3 = defalut;
      print(qcashier.common.g3_fs_presetgroup_btn3);
      expect(qcashier.common.g3_fs_presetgroup_btn3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00153_element_check_00130 **********\n\n");
    });

    test('00154_element_check_00131', () async {
      print("\n********** テスト実行：00154_element_check_00131 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_btn4;
      print(qcashier.common.g3_fs_presetgroup_btn4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_btn4 = testData1;
      print(qcashier.common.g3_fs_presetgroup_btn4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn4 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn4 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_btn4 = testData2;
      print(qcashier.common.g3_fs_presetgroup_btn4);
      expect(qcashier.common.g3_fs_presetgroup_btn4 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn4 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_btn4 = defalut;
      print(qcashier.common.g3_fs_presetgroup_btn4);
      expect(qcashier.common.g3_fs_presetgroup_btn4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00154_element_check_00131 **********\n\n");
    });

    test('00155_element_check_00132', () async {
      print("\n********** テスト実行：00155_element_check_00132 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_btn5;
      print(qcashier.common.g3_fs_presetgroup_btn5);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_btn5 = testData1;
      print(qcashier.common.g3_fs_presetgroup_btn5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn5 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn5 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_btn5 = testData2;
      print(qcashier.common.g3_fs_presetgroup_btn5);
      expect(qcashier.common.g3_fs_presetgroup_btn5 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn5 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_btn5 = defalut;
      print(qcashier.common.g3_fs_presetgroup_btn5);
      expect(qcashier.common.g3_fs_presetgroup_btn5 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00155_element_check_00132 **********\n\n");
    });

    test('00156_element_check_00133', () async {
      print("\n********** テスト実行：00156_element_check_00133 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_btn6;
      print(qcashier.common.g3_fs_presetgroup_btn6);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_btn6 = testData1;
      print(qcashier.common.g3_fs_presetgroup_btn6);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn6 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn6 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_btn6 = testData2;
      print(qcashier.common.g3_fs_presetgroup_btn6);
      expect(qcashier.common.g3_fs_presetgroup_btn6 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn6 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_btn6 = defalut;
      print(qcashier.common.g3_fs_presetgroup_btn6);
      expect(qcashier.common.g3_fs_presetgroup_btn6 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn6 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00156_element_check_00133 **********\n\n");
    });

    test('00157_element_check_00134', () async {
      print("\n********** テスト実行：00157_element_check_00134 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_btn7;
      print(qcashier.common.g3_fs_presetgroup_btn7);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_btn7 = testData1;
      print(qcashier.common.g3_fs_presetgroup_btn7);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn7 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn7 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_btn7 = testData2;
      print(qcashier.common.g3_fs_presetgroup_btn7);
      expect(qcashier.common.g3_fs_presetgroup_btn7 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn7 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_btn7 = defalut;
      print(qcashier.common.g3_fs_presetgroup_btn7);
      expect(qcashier.common.g3_fs_presetgroup_btn7 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn7 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00157_element_check_00134 **********\n\n");
    });

    test('00158_element_check_00135', () async {
      print("\n********** テスト実行：00158_element_check_00135 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.g3_fs_presetgroup_btn8;
      print(qcashier.common.g3_fs_presetgroup_btn8);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.g3_fs_presetgroup_btn8 = testData1;
      print(qcashier.common.g3_fs_presetgroup_btn8);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn8 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.g3_fs_presetgroup_btn8 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.g3_fs_presetgroup_btn8 = testData2;
      print(qcashier.common.g3_fs_presetgroup_btn8);
      expect(qcashier.common.g3_fs_presetgroup_btn8 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn8 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.g3_fs_presetgroup_btn8 = defalut;
      print(qcashier.common.g3_fs_presetgroup_btn8);
      expect(qcashier.common.g3_fs_presetgroup_btn8 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.g3_fs_presetgroup_btn8 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00158_element_check_00135 **********\n\n");
    });

    test('00159_element_check_00136', () async {
      print("\n********** テスト実行：00159_element_check_00136 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.callBuzzer_sound_change_flg;
      print(qcashier.common.callBuzzer_sound_change_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.callBuzzer_sound_change_flg = testData1;
      print(qcashier.common.callBuzzer_sound_change_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.callBuzzer_sound_change_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.callBuzzer_sound_change_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.callBuzzer_sound_change_flg = testData2;
      print(qcashier.common.callBuzzer_sound_change_flg);
      expect(qcashier.common.callBuzzer_sound_change_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.callBuzzer_sound_change_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.callBuzzer_sound_change_flg = defalut;
      print(qcashier.common.callBuzzer_sound_change_flg);
      expect(qcashier.common.callBuzzer_sound_change_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.callBuzzer_sound_change_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00159_element_check_00136 **********\n\n");
    });

    test('00160_element_check_00137', () async {
      print("\n********** テスト実行：00160_element_check_00137 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.top_map_display;
      print(qcashier.common.top_map_display);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.top_map_display = testData1;
      print(qcashier.common.top_map_display);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.top_map_display == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.top_map_display == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.top_map_display = testData2;
      print(qcashier.common.top_map_display);
      expect(qcashier.common.top_map_display == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.top_map_display == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.top_map_display = defalut;
      print(qcashier.common.top_map_display);
      expect(qcashier.common.top_map_display == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.top_map_display == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00160_element_check_00137 **********\n\n");
    });

    test('00161_element_check_00138', () async {
      print("\n********** テスト実行：00161_element_check_00138 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.start_payselect_display;
      print(qcashier.common.start_payselect_display);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.start_payselect_display = testData1;
      print(qcashier.common.start_payselect_display);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.start_payselect_display == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.start_payselect_display == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.start_payselect_display = testData2;
      print(qcashier.common.start_payselect_display);
      expect(qcashier.common.start_payselect_display == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.start_payselect_display == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.start_payselect_display = defalut;
      print(qcashier.common.start_payselect_display);
      expect(qcashier.common.start_payselect_display == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.start_payselect_display == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00161_element_check_00138 **********\n\n");
    });

    test('00162_element_check_00139', () async {
      print("\n********** テスト実行：00162_element_check_00139 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.idle_signp_state;
      print(qcashier.common.idle_signp_state);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.idle_signp_state = testData1;
      print(qcashier.common.idle_signp_state);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.idle_signp_state == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.idle_signp_state == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.idle_signp_state = testData2;
      print(qcashier.common.idle_signp_state);
      expect(qcashier.common.idle_signp_state == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.idle_signp_state == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.idle_signp_state = defalut;
      print(qcashier.common.idle_signp_state);
      expect(qcashier.common.idle_signp_state == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.idle_signp_state == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00162_element_check_00139 **********\n\n");
    });

    test('00163_element_check_00140', () async {
      print("\n********** テスト実行：00163_element_check_00140 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.jpqr_paybtn_image;
      print(qcashier.common.jpqr_paybtn_image);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.jpqr_paybtn_image = testData1;
      print(qcashier.common.jpqr_paybtn_image);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.jpqr_paybtn_image == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.jpqr_paybtn_image == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.jpqr_paybtn_image = testData2;
      print(qcashier.common.jpqr_paybtn_image);
      expect(qcashier.common.jpqr_paybtn_image == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.jpqr_paybtn_image == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.jpqr_paybtn_image = defalut;
      print(qcashier.common.jpqr_paybtn_image);
      expect(qcashier.common.jpqr_paybtn_image == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.jpqr_paybtn_image == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00163_element_check_00140 **********\n\n");
    });

    test('00164_element_check_00141', () async {
      print("\n********** テスト実行：00164_element_check_00141 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.vega_credit_forget_chk;
      print(qcashier.common.vega_credit_forget_chk);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.vega_credit_forget_chk = testData1;
      print(qcashier.common.vega_credit_forget_chk);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.vega_credit_forget_chk == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.vega_credit_forget_chk == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.vega_credit_forget_chk = testData2;
      print(qcashier.common.vega_credit_forget_chk);
      expect(qcashier.common.vega_credit_forget_chk == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.vega_credit_forget_chk == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.vega_credit_forget_chk = defalut;
      print(qcashier.common.vega_credit_forget_chk);
      expect(qcashier.common.vega_credit_forget_chk == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.vega_credit_forget_chk == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00164_element_check_00141 **********\n\n");
    });

    test('00165_element_check_00142', () async {
      print("\n********** テスト実行：00165_element_check_00142 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.cash_only_setting;
      print(qcashier.common.cash_only_setting);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.cash_only_setting = testData1;
      print(qcashier.common.cash_only_setting);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.cash_only_setting == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.cash_only_setting == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.cash_only_setting = testData2;
      print(qcashier.common.cash_only_setting);
      expect(qcashier.common.cash_only_setting == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cash_only_setting == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.cash_only_setting = defalut;
      print(qcashier.common.cash_only_setting);
      expect(qcashier.common.cash_only_setting == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cash_only_setting == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00165_element_check_00142 **********\n\n");
    });

    test('00166_element_check_00143', () async {
      print("\n********** テスト実行：00166_element_check_00143 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.common.cash_only_border;
      print(qcashier.common.cash_only_border);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.common.cash_only_border = testData1;
      print(qcashier.common.cash_only_border);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.common.cash_only_border == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.common.cash_only_border == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.common.cash_only_border = testData2;
      print(qcashier.common.cash_only_border);
      expect(qcashier.common.cash_only_border == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cash_only_border == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.common.cash_only_border = defalut;
      print(qcashier.common.cash_only_border);
      expect(qcashier.common.cash_only_border == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.common.cash_only_border == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00166_element_check_00143 **********\n\n");
    });

    test('00167_element_check_00144', () async {
      print("\n********** テスト実行：00167_element_check_00144 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_info;
      print(qcashier.chg_info.chg_info);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_info = testData1;
      print(qcashier.chg_info.chg_info);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_info == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_info == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_info = testData2;
      print(qcashier.chg_info.chg_info);
      expect(qcashier.chg_info.chg_info == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_info == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_info = defalut;
      print(qcashier.chg_info.chg_info);
      expect(qcashier.chg_info.chg_info == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_info == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00167_element_check_00144 **********\n\n");
    });

    test('00168_element_check_00145', () async {
      print("\n********** テスト実行：00168_element_check_00145 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_5000;
      print(qcashier.chg_info.chg_5000);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_5000 = testData1;
      print(qcashier.chg_info.chg_5000);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_5000 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_5000 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_5000 = testData2;
      print(qcashier.chg_info.chg_5000);
      expect(qcashier.chg_info.chg_5000 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_5000 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_5000 = defalut;
      print(qcashier.chg_info.chg_5000);
      expect(qcashier.chg_info.chg_5000 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_5000 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00168_element_check_00145 **********\n\n");
    });

    test('00169_element_check_00146', () async {
      print("\n********** テスト実行：00169_element_check_00146 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_2000;
      print(qcashier.chg_info.chg_2000);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_2000 = testData1;
      print(qcashier.chg_info.chg_2000);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_2000 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_2000 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_2000 = testData2;
      print(qcashier.chg_info.chg_2000);
      expect(qcashier.chg_info.chg_2000 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_2000 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_2000 = defalut;
      print(qcashier.chg_info.chg_2000);
      expect(qcashier.chg_info.chg_2000 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_2000 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00169_element_check_00146 **********\n\n");
    });

    test('00170_element_check_00147', () async {
      print("\n********** テスト実行：00170_element_check_00147 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_1000;
      print(qcashier.chg_info.chg_1000);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_1000 = testData1;
      print(qcashier.chg_info.chg_1000);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_1000 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_1000 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_1000 = testData2;
      print(qcashier.chg_info.chg_1000);
      expect(qcashier.chg_info.chg_1000 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_1000 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_1000 = defalut;
      print(qcashier.chg_info.chg_1000);
      expect(qcashier.chg_info.chg_1000 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_1000 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00170_element_check_00147 **********\n\n");
    });

    test('00171_element_check_00148', () async {
      print("\n********** テスト実行：00171_element_check_00148 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_500;
      print(qcashier.chg_info.chg_500);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_500 = testData1;
      print(qcashier.chg_info.chg_500);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_500 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_500 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_500 = testData2;
      print(qcashier.chg_info.chg_500);
      expect(qcashier.chg_info.chg_500 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_500 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_500 = defalut;
      print(qcashier.chg_info.chg_500);
      expect(qcashier.chg_info.chg_500 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_500 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00171_element_check_00148 **********\n\n");
    });

    test('00172_element_check_00149', () async {
      print("\n********** テスト実行：00172_element_check_00149 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_100;
      print(qcashier.chg_info.chg_100);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_100 = testData1;
      print(qcashier.chg_info.chg_100);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_100 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_100 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_100 = testData2;
      print(qcashier.chg_info.chg_100);
      expect(qcashier.chg_info.chg_100 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_100 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_100 = defalut;
      print(qcashier.chg_info.chg_100);
      expect(qcashier.chg_info.chg_100 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_100 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00172_element_check_00149 **********\n\n");
    });

    test('00173_element_check_00150', () async {
      print("\n********** テスト実行：00173_element_check_00150 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_50;
      print(qcashier.chg_info.chg_50);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_50 = testData1;
      print(qcashier.chg_info.chg_50);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_50 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_50 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_50 = testData2;
      print(qcashier.chg_info.chg_50);
      expect(qcashier.chg_info.chg_50 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_50 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_50 = defalut;
      print(qcashier.chg_info.chg_50);
      expect(qcashier.chg_info.chg_50 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_50 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00173_element_check_00150 **********\n\n");
    });

    test('00174_element_check_00151', () async {
      print("\n********** テスト実行：00174_element_check_00151 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_10;
      print(qcashier.chg_info.chg_10);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_10 = testData1;
      print(qcashier.chg_info.chg_10);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_10 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_10 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_10 = testData2;
      print(qcashier.chg_info.chg_10);
      expect(qcashier.chg_info.chg_10 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_10 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_10 = defalut;
      print(qcashier.chg_info.chg_10);
      expect(qcashier.chg_info.chg_10 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_10 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00174_element_check_00151 **********\n\n");
    });

    test('00175_element_check_00152', () async {
      print("\n********** テスト実行：00175_element_check_00152 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_5;
      print(qcashier.chg_info.chg_5);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_5 = testData1;
      print(qcashier.chg_info.chg_5);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_5 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_5 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_5 = testData2;
      print(qcashier.chg_info.chg_5);
      expect(qcashier.chg_info.chg_5 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_5 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_5 = defalut;
      print(qcashier.chg_info.chg_5);
      expect(qcashier.chg_info.chg_5 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_5 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00175_element_check_00152 **********\n\n");
    });

    test('00176_element_check_00153', () async {
      print("\n********** テスト実行：00176_element_check_00153 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_1;
      print(qcashier.chg_info.chg_1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_1 = testData1;
      print(qcashier.chg_info.chg_1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_1 = testData2;
      print(qcashier.chg_info.chg_1);
      expect(qcashier.chg_info.chg_1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_1 = defalut;
      print(qcashier.chg_info.chg_1);
      expect(qcashier.chg_info.chg_1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00176_element_check_00153 **********\n\n");
    });

    test('00177_element_check_00154', () async {
      print("\n********** テスト実行：00177_element_check_00154 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_info_full_chk;
      print(qcashier.chg_info.chg_info_full_chk);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_info_full_chk = testData1;
      print(qcashier.chg_info.chg_info_full_chk);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_info_full_chk == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_info_full_chk == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_info_full_chk = testData2;
      print(qcashier.chg_info.chg_info_full_chk);
      expect(qcashier.chg_info.chg_info_full_chk == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_info_full_chk == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_info_full_chk = defalut;
      print(qcashier.chg_info.chg_info_full_chk);
      expect(qcashier.chg_info.chg_info_full_chk == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_info_full_chk == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00177_element_check_00154 **********\n\n");
    });

    test('00178_element_check_00155', () async {
      print("\n********** テスト実行：00178_element_check_00155 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.chg_info.chg_signp_full_chk;
      print(qcashier.chg_info.chg_signp_full_chk);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.chg_info.chg_signp_full_chk = testData1;
      print(qcashier.chg_info.chg_signp_full_chk);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.chg_info.chg_signp_full_chk == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.chg_info.chg_signp_full_chk == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.chg_info.chg_signp_full_chk = testData2;
      print(qcashier.chg_info.chg_signp_full_chk);
      expect(qcashier.chg_info.chg_signp_full_chk == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_signp_full_chk == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.chg_info.chg_signp_full_chk = defalut;
      print(qcashier.chg_info.chg_signp_full_chk);
      expect(qcashier.chg_info.chg_signp_full_chk == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.chg_info.chg_signp_full_chk == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00178_element_check_00155 **********\n\n");
    });

    test('00179_element_check_00156', () async {
      print("\n********** テスト実行：00179_element_check_00156 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.spr_str;
      print(qcashier.period.spr_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.spr_str = testData1;
      print(qcashier.period.spr_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.spr_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.spr_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.spr_str = testData2;
      print(qcashier.period.spr_str);
      expect(qcashier.period.spr_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.spr_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.spr_str = defalut;
      print(qcashier.period.spr_str);
      expect(qcashier.period.spr_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.spr_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00179_element_check_00156 **********\n\n");
    });

    test('00180_element_check_00157', () async {
      print("\n********** テスト実行：00180_element_check_00157 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.spr_end;
      print(qcashier.period.spr_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.spr_end = testData1;
      print(qcashier.period.spr_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.spr_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.spr_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.spr_end = testData2;
      print(qcashier.period.spr_end);
      expect(qcashier.period.spr_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.spr_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.spr_end = defalut;
      print(qcashier.period.spr_end);
      expect(qcashier.period.spr_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.spr_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00180_element_check_00157 **********\n\n");
    });

    test('00181_element_check_00158', () async {
      print("\n********** テスト実行：00181_element_check_00158 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sum_str;
      print(qcashier.period.sum_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sum_str = testData1;
      print(qcashier.period.sum_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sum_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sum_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sum_str = testData2;
      print(qcashier.period.sum_str);
      expect(qcashier.period.sum_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sum_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sum_str = defalut;
      print(qcashier.period.sum_str);
      expect(qcashier.period.sum_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sum_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00181_element_check_00158 **********\n\n");
    });

    test('00182_element_check_00159', () async {
      print("\n********** テスト実行：00182_element_check_00159 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sum_end;
      print(qcashier.period.sum_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sum_end = testData1;
      print(qcashier.period.sum_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sum_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sum_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sum_end = testData2;
      print(qcashier.period.sum_end);
      expect(qcashier.period.sum_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sum_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sum_end = defalut;
      print(qcashier.period.sum_end);
      expect(qcashier.period.sum_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sum_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00182_element_check_00159 **********\n\n");
    });

    test('00183_element_check_00160', () async {
      print("\n********** テスト実行：00183_element_check_00160 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.aut_str;
      print(qcashier.period.aut_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.aut_str = testData1;
      print(qcashier.period.aut_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.aut_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.aut_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.aut_str = testData2;
      print(qcashier.period.aut_str);
      expect(qcashier.period.aut_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.aut_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.aut_str = defalut;
      print(qcashier.period.aut_str);
      expect(qcashier.period.aut_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.aut_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00183_element_check_00160 **********\n\n");
    });

    test('00184_element_check_00161', () async {
      print("\n********** テスト実行：00184_element_check_00161 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.aut_end;
      print(qcashier.period.aut_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.aut_end = testData1;
      print(qcashier.period.aut_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.aut_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.aut_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.aut_end = testData2;
      print(qcashier.period.aut_end);
      expect(qcashier.period.aut_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.aut_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.aut_end = defalut;
      print(qcashier.period.aut_end);
      expect(qcashier.period.aut_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.aut_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00184_element_check_00161 **********\n\n");
    });

    test('00185_element_check_00162', () async {
      print("\n********** テスト実行：00185_element_check_00162 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.win1_str;
      print(qcashier.period.win1_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.win1_str = testData1;
      print(qcashier.period.win1_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.win1_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.win1_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.win1_str = testData2;
      print(qcashier.period.win1_str);
      expect(qcashier.period.win1_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win1_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.win1_str = defalut;
      print(qcashier.period.win1_str);
      expect(qcashier.period.win1_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win1_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00185_element_check_00162 **********\n\n");
    });

    test('00186_element_check_00163', () async {
      print("\n********** テスト実行：00186_element_check_00163 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.win1_end;
      print(qcashier.period.win1_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.win1_end = testData1;
      print(qcashier.period.win1_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.win1_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.win1_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.win1_end = testData2;
      print(qcashier.period.win1_end);
      expect(qcashier.period.win1_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win1_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.win1_end = defalut;
      print(qcashier.period.win1_end);
      expect(qcashier.period.win1_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win1_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00186_element_check_00163 **********\n\n");
    });

    test('00187_element_check_00164', () async {
      print("\n********** テスト実行：00187_element_check_00164 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.win2_str;
      print(qcashier.period.win2_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.win2_str = testData1;
      print(qcashier.period.win2_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.win2_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.win2_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.win2_str = testData2;
      print(qcashier.period.win2_str);
      expect(qcashier.period.win2_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win2_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.win2_str = defalut;
      print(qcashier.period.win2_str);
      expect(qcashier.period.win2_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win2_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00187_element_check_00164 **********\n\n");
    });

    test('00188_element_check_00165', () async {
      print("\n********** テスト実行：00188_element_check_00165 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.win2_end;
      print(qcashier.period.win2_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.win2_end = testData1;
      print(qcashier.period.win2_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.win2_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.win2_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.win2_end = testData2;
      print(qcashier.period.win2_end);
      expect(qcashier.period.win2_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win2_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.win2_end = defalut;
      print(qcashier.period.win2_end);
      expect(qcashier.period.win2_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win2_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00188_element_check_00165 **********\n\n");
    });

    test('00189_element_check_00166', () async {
      print("\n********** テスト実行：00189_element_check_00166 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp1_flg;
      print(qcashier.period.sp1_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp1_flg = testData1;
      print(qcashier.period.sp1_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp1_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp1_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp1_flg = testData2;
      print(qcashier.period.sp1_flg);
      expect(qcashier.period.sp1_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp1_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp1_flg = defalut;
      print(qcashier.period.sp1_flg);
      expect(qcashier.period.sp1_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp1_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00189_element_check_00166 **********\n\n");
    });

    test('00190_element_check_00167', () async {
      print("\n********** テスト実行：00190_element_check_00167 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp2_flg;
      print(qcashier.period.sp2_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp2_flg = testData1;
      print(qcashier.period.sp2_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp2_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp2_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp2_flg = testData2;
      print(qcashier.period.sp2_flg);
      expect(qcashier.period.sp2_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp2_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp2_flg = defalut;
      print(qcashier.period.sp2_flg);
      expect(qcashier.period.sp2_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp2_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00190_element_check_00167 **********\n\n");
    });

    test('00191_element_check_00168', () async {
      print("\n********** テスト実行：00191_element_check_00168 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp3_flg;
      print(qcashier.period.sp3_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp3_flg = testData1;
      print(qcashier.period.sp3_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp3_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp3_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp3_flg = testData2;
      print(qcashier.period.sp3_flg);
      expect(qcashier.period.sp3_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp3_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp3_flg = defalut;
      print(qcashier.period.sp3_flg);
      expect(qcashier.period.sp3_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp3_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00191_element_check_00168 **********\n\n");
    });

    test('00192_element_check_00169', () async {
      print("\n********** テスト実行：00192_element_check_00169 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp4_flg;
      print(qcashier.period.sp4_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp4_flg = testData1;
      print(qcashier.period.sp4_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp4_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp4_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp4_flg = testData2;
      print(qcashier.period.sp4_flg);
      expect(qcashier.period.sp4_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp4_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp4_flg = defalut;
      print(qcashier.period.sp4_flg);
      expect(qcashier.period.sp4_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp4_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00192_element_check_00169 **********\n\n");
    });

    test('00193_element_check_00170', () async {
      print("\n********** テスト実行：00193_element_check_00170 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp5_flg;
      print(qcashier.period.sp5_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp5_flg = testData1;
      print(qcashier.period.sp5_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp5_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp5_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp5_flg = testData2;
      print(qcashier.period.sp5_flg);
      expect(qcashier.period.sp5_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp5_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp5_flg = defalut;
      print(qcashier.period.sp5_flg);
      expect(qcashier.period.sp5_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp5_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00193_element_check_00170 **********\n\n");
    });

    test('00194_element_check_00171', () async {
      print("\n********** テスト実行：00194_element_check_00171 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp6_flg;
      print(qcashier.period.sp6_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp6_flg = testData1;
      print(qcashier.period.sp6_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp6_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp6_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp6_flg = testData2;
      print(qcashier.period.sp6_flg);
      expect(qcashier.period.sp6_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp6_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp6_flg = defalut;
      print(qcashier.period.sp6_flg);
      expect(qcashier.period.sp6_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp6_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00194_element_check_00171 **********\n\n");
    });

    test('00195_element_check_00172', () async {
      print("\n********** テスト実行：00195_element_check_00172 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp7_flg;
      print(qcashier.period.sp7_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp7_flg = testData1;
      print(qcashier.period.sp7_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp7_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp7_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp7_flg = testData2;
      print(qcashier.period.sp7_flg);
      expect(qcashier.period.sp7_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp7_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp7_flg = defalut;
      print(qcashier.period.sp7_flg);
      expect(qcashier.period.sp7_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp7_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00195_element_check_00172 **********\n\n");
    });

    test('00196_element_check_00173', () async {
      print("\n********** テスト実行：00196_element_check_00173 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp8_flg;
      print(qcashier.period.sp8_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp8_flg = testData1;
      print(qcashier.period.sp8_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp8_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp8_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp8_flg = testData2;
      print(qcashier.period.sp8_flg);
      expect(qcashier.period.sp8_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp8_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp8_flg = defalut;
      print(qcashier.period.sp8_flg);
      expect(qcashier.period.sp8_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp8_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00196_element_check_00173 **********\n\n");
    });

    test('00197_element_check_00174', () async {
      print("\n********** テスト実行：00197_element_check_00174 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp9_flg;
      print(qcashier.period.sp9_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp9_flg = testData1;
      print(qcashier.period.sp9_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp9_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp9_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp9_flg = testData2;
      print(qcashier.period.sp9_flg);
      expect(qcashier.period.sp9_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp9_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp9_flg = defalut;
      print(qcashier.period.sp9_flg);
      expect(qcashier.period.sp9_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp9_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00197_element_check_00174 **********\n\n");
    });

    test('00198_element_check_00175', () async {
      print("\n********** テスト実行：00198_element_check_00175 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp10_flg;
      print(qcashier.period.sp10_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp10_flg = testData1;
      print(qcashier.period.sp10_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp10_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp10_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp10_flg = testData2;
      print(qcashier.period.sp10_flg);
      expect(qcashier.period.sp10_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp10_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp10_flg = defalut;
      print(qcashier.period.sp10_flg);
      expect(qcashier.period.sp10_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp10_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00198_element_check_00175 **********\n\n");
    });

    test('00199_element_check_00176', () async {
      print("\n********** テスト実行：00199_element_check_00176 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp11_flg;
      print(qcashier.period.sp11_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp11_flg = testData1;
      print(qcashier.period.sp11_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp11_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp11_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp11_flg = testData2;
      print(qcashier.period.sp11_flg);
      expect(qcashier.period.sp11_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp11_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp11_flg = defalut;
      print(qcashier.period.sp11_flg);
      expect(qcashier.period.sp11_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp11_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00199_element_check_00176 **********\n\n");
    });

    test('00200_element_check_00177', () async {
      print("\n********** テスト実行：00200_element_check_00177 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp12_flg;
      print(qcashier.period.sp12_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp12_flg = testData1;
      print(qcashier.period.sp12_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp12_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp12_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp12_flg = testData2;
      print(qcashier.period.sp12_flg);
      expect(qcashier.period.sp12_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp12_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp12_flg = defalut;
      print(qcashier.period.sp12_flg);
      expect(qcashier.period.sp12_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp12_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00200_element_check_00177 **********\n\n");
    });

    test('00201_element_check_00178', () async {
      print("\n********** テスト実行：00201_element_check_00178 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp13_flg;
      print(qcashier.period.sp13_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp13_flg = testData1;
      print(qcashier.period.sp13_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp13_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp13_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp13_flg = testData2;
      print(qcashier.period.sp13_flg);
      expect(qcashier.period.sp13_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp13_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp13_flg = defalut;
      print(qcashier.period.sp13_flg);
      expect(qcashier.period.sp13_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp13_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00201_element_check_00178 **********\n\n");
    });

    test('00202_element_check_00179', () async {
      print("\n********** テスト実行：00202_element_check_00179 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp14_flg;
      print(qcashier.period.sp14_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp14_flg = testData1;
      print(qcashier.period.sp14_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp14_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp14_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp14_flg = testData2;
      print(qcashier.period.sp14_flg);
      expect(qcashier.period.sp14_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp14_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp14_flg = defalut;
      print(qcashier.period.sp14_flg);
      expect(qcashier.period.sp14_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp14_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00202_element_check_00179 **********\n\n");
    });

    test('00203_element_check_00180', () async {
      print("\n********** テスト実行：00203_element_check_00180 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp15_flg;
      print(qcashier.period.sp15_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp15_flg = testData1;
      print(qcashier.period.sp15_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp15_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp15_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp15_flg = testData2;
      print(qcashier.period.sp15_flg);
      expect(qcashier.period.sp15_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp15_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp15_flg = defalut;
      print(qcashier.period.sp15_flg);
      expect(qcashier.period.sp15_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp15_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00203_element_check_00180 **********\n\n");
    });

    test('00204_element_check_00181', () async {
      print("\n********** テスト実行：00204_element_check_00181 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp16_flg;
      print(qcashier.period.sp16_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp16_flg = testData1;
      print(qcashier.period.sp16_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp16_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp16_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp16_flg = testData2;
      print(qcashier.period.sp16_flg);
      expect(qcashier.period.sp16_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp16_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp16_flg = defalut;
      print(qcashier.period.sp16_flg);
      expect(qcashier.period.sp16_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp16_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00204_element_check_00181 **********\n\n");
    });

    test('00205_element_check_00182', () async {
      print("\n********** テスト実行：00205_element_check_00182 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp17_flg;
      print(qcashier.period.sp17_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp17_flg = testData1;
      print(qcashier.period.sp17_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp17_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp17_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp17_flg = testData2;
      print(qcashier.period.sp17_flg);
      expect(qcashier.period.sp17_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp17_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp17_flg = defalut;
      print(qcashier.period.sp17_flg);
      expect(qcashier.period.sp17_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp17_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00205_element_check_00182 **********\n\n");
    });

    test('00206_element_check_00183', () async {
      print("\n********** テスト実行：00206_element_check_00183 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp18_flg;
      print(qcashier.period.sp18_flg);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp18_flg = testData1;
      print(qcashier.period.sp18_flg);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp18_flg == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp18_flg == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp18_flg = testData2;
      print(qcashier.period.sp18_flg);
      expect(qcashier.period.sp18_flg == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp18_flg == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp18_flg = defalut;
      print(qcashier.period.sp18_flg);
      expect(qcashier.period.sp18_flg == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp18_flg == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00206_element_check_00183 **********\n\n");
    });

    test('00207_element_check_00184', () async {
      print("\n********** テスト実行：00207_element_check_00184 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp1_str;
      print(qcashier.period.sp1_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp1_str = testData1;
      print(qcashier.period.sp1_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp1_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp1_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp1_str = testData2;
      print(qcashier.period.sp1_str);
      expect(qcashier.period.sp1_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp1_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp1_str = defalut;
      print(qcashier.period.sp1_str);
      expect(qcashier.period.sp1_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp1_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00207_element_check_00184 **********\n\n");
    });

    test('00208_element_check_00185', () async {
      print("\n********** テスト実行：00208_element_check_00185 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp1_end;
      print(qcashier.period.sp1_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp1_end = testData1;
      print(qcashier.period.sp1_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp1_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp1_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp1_end = testData2;
      print(qcashier.period.sp1_end);
      expect(qcashier.period.sp1_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp1_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp1_end = defalut;
      print(qcashier.period.sp1_end);
      expect(qcashier.period.sp1_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp1_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00208_element_check_00185 **********\n\n");
    });

    test('00209_element_check_00186', () async {
      print("\n********** テスト実行：00209_element_check_00186 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp2_str;
      print(qcashier.period.sp2_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp2_str = testData1s;
      print(qcashier.period.sp2_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp2_str == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp2_str == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp2_str = testData2s;
      print(qcashier.period.sp2_str);
      expect(qcashier.period.sp2_str == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp2_str == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp2_str = defalut;
      print(qcashier.period.sp2_str);
      expect(qcashier.period.sp2_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp2_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00209_element_check_00186 **********\n\n");
    });

    test('00210_element_check_00187', () async {
      print("\n********** テスト実行：00210_element_check_00187 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp2_end;
      print(qcashier.period.sp2_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp2_end = testData1s;
      print(qcashier.period.sp2_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp2_end == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp2_end == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp2_end = testData2s;
      print(qcashier.period.sp2_end);
      expect(qcashier.period.sp2_end == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp2_end == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp2_end = defalut;
      print(qcashier.period.sp2_end);
      expect(qcashier.period.sp2_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp2_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00210_element_check_00187 **********\n\n");
    });

    test('00211_element_check_00188', () async {
      print("\n********** テスト実行：00211_element_check_00188 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp3_str;
      print(qcashier.period.sp3_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp3_str = testData1;
      print(qcashier.period.sp3_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp3_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp3_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp3_str = testData2;
      print(qcashier.period.sp3_str);
      expect(qcashier.period.sp3_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp3_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp3_str = defalut;
      print(qcashier.period.sp3_str);
      expect(qcashier.period.sp3_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp3_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00211_element_check_00188 **********\n\n");
    });

    test('00212_element_check_00189', () async {
      print("\n********** テスト実行：00212_element_check_00189 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp3_end;
      print(qcashier.period.sp3_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp3_end = testData1;
      print(qcashier.period.sp3_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp3_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp3_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp3_end = testData2;
      print(qcashier.period.sp3_end);
      expect(qcashier.period.sp3_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp3_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp3_end = defalut;
      print(qcashier.period.sp3_end);
      expect(qcashier.period.sp3_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp3_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00212_element_check_00189 **********\n\n");
    });

    test('00213_element_check_00190', () async {
      print("\n********** テスト実行：00213_element_check_00190 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp4_str;
      print(qcashier.period.sp4_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp4_str = testData1;
      print(qcashier.period.sp4_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp4_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp4_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp4_str = testData2;
      print(qcashier.period.sp4_str);
      expect(qcashier.period.sp4_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp4_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp4_str = defalut;
      print(qcashier.period.sp4_str);
      expect(qcashier.period.sp4_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp4_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00213_element_check_00190 **********\n\n");
    });

    test('00214_element_check_00191', () async {
      print("\n********** テスト実行：00214_element_check_00191 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp4_end;
      print(qcashier.period.sp4_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp4_end = testData1;
      print(qcashier.period.sp4_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp4_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp4_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp4_end = testData2;
      print(qcashier.period.sp4_end);
      expect(qcashier.period.sp4_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp4_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp4_end = defalut;
      print(qcashier.period.sp4_end);
      expect(qcashier.period.sp4_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp4_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00214_element_check_00191 **********\n\n");
    });

    test('00215_element_check_00192', () async {
      print("\n********** テスト実行：00215_element_check_00192 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp5_str;
      print(qcashier.period.sp5_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp5_str = testData1s;
      print(qcashier.period.sp5_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp5_str == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp5_str == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp5_str = testData2s;
      print(qcashier.period.sp5_str);
      expect(qcashier.period.sp5_str == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp5_str == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp5_str = defalut;
      print(qcashier.period.sp5_str);
      expect(qcashier.period.sp5_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp5_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00215_element_check_00192 **********\n\n");
    });

    test('00216_element_check_00193', () async {
      print("\n********** テスト実行：00216_element_check_00193 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp5_end;
      print(qcashier.period.sp5_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp5_end = testData1s;
      print(qcashier.period.sp5_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp5_end == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp5_end == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp5_end = testData2s;
      print(qcashier.period.sp5_end);
      expect(qcashier.period.sp5_end == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp5_end == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp5_end = defalut;
      print(qcashier.period.sp5_end);
      expect(qcashier.period.sp5_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp5_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00216_element_check_00193 **********\n\n");
    });

    test('00217_element_check_00194', () async {
      print("\n********** テスト実行：00217_element_check_00194 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp6_str;
      print(qcashier.period.sp6_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp6_str = testData1;
      print(qcashier.period.sp6_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp6_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp6_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp6_str = testData2;
      print(qcashier.period.sp6_str);
      expect(qcashier.period.sp6_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp6_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp6_str = defalut;
      print(qcashier.period.sp6_str);
      expect(qcashier.period.sp6_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp6_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00217_element_check_00194 **********\n\n");
    });

    test('00218_element_check_00195', () async {
      print("\n********** テスト実行：00218_element_check_00195 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp6_end;
      print(qcashier.period.sp6_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp6_end = testData1;
      print(qcashier.period.sp6_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp6_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp6_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp6_end = testData2;
      print(qcashier.period.sp6_end);
      expect(qcashier.period.sp6_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp6_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp6_end = defalut;
      print(qcashier.period.sp6_end);
      expect(qcashier.period.sp6_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp6_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00218_element_check_00195 **********\n\n");
    });

    test('00219_element_check_00196', () async {
      print("\n********** テスト実行：00219_element_check_00196 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp7_str;
      print(qcashier.period.sp7_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp7_str = testData1;
      print(qcashier.period.sp7_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp7_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp7_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp7_str = testData2;
      print(qcashier.period.sp7_str);
      expect(qcashier.period.sp7_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp7_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp7_str = defalut;
      print(qcashier.period.sp7_str);
      expect(qcashier.period.sp7_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp7_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00219_element_check_00196 **********\n\n");
    });

    test('00220_element_check_00197', () async {
      print("\n********** テスト実行：00220_element_check_00197 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp7_end;
      print(qcashier.period.sp7_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp7_end = testData1;
      print(qcashier.period.sp7_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp7_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp7_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp7_end = testData2;
      print(qcashier.period.sp7_end);
      expect(qcashier.period.sp7_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp7_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp7_end = defalut;
      print(qcashier.period.sp7_end);
      expect(qcashier.period.sp7_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp7_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00220_element_check_00197 **********\n\n");
    });

    test('00221_element_check_00198', () async {
      print("\n********** テスト実行：00221_element_check_00198 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp8_str;
      print(qcashier.period.sp8_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp8_str = testData1s;
      print(qcashier.period.sp8_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp8_str == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp8_str == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp8_str = testData2s;
      print(qcashier.period.sp8_str);
      expect(qcashier.period.sp8_str == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp8_str == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp8_str = defalut;
      print(qcashier.period.sp8_str);
      expect(qcashier.period.sp8_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp8_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00221_element_check_00198 **********\n\n");
    });

    test('00222_element_check_00199', () async {
      print("\n********** テスト実行：00222_element_check_00199 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp8_end;
      print(qcashier.period.sp8_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp8_end = testData1s;
      print(qcashier.period.sp8_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp8_end == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp8_end == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp8_end = testData2s;
      print(qcashier.period.sp8_end);
      expect(qcashier.period.sp8_end == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp8_end == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp8_end = defalut;
      print(qcashier.period.sp8_end);
      expect(qcashier.period.sp8_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp8_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00222_element_check_00199 **********\n\n");
    });

    test('00223_element_check_00200', () async {
      print("\n********** テスト実行：00223_element_check_00200 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp9_str;
      print(qcashier.period.sp9_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp9_str = testData1s;
      print(qcashier.period.sp9_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp9_str == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp9_str == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp9_str = testData2s;
      print(qcashier.period.sp9_str);
      expect(qcashier.period.sp9_str == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp9_str == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp9_str = defalut;
      print(qcashier.period.sp9_str);
      expect(qcashier.period.sp9_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp9_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00223_element_check_00200 **********\n\n");
    });

    test('00224_element_check_00201', () async {
      print("\n********** テスト実行：00224_element_check_00201 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp9_end;
      print(qcashier.period.sp9_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp9_end = testData1s;
      print(qcashier.period.sp9_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp9_end == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp9_end == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp9_end = testData2s;
      print(qcashier.period.sp9_end);
      expect(qcashier.period.sp9_end == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp9_end == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp9_end = defalut;
      print(qcashier.period.sp9_end);
      expect(qcashier.period.sp9_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp9_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00224_element_check_00201 **********\n\n");
    });

    test('00225_element_check_00202', () async {
      print("\n********** テスト実行：00225_element_check_00202 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp10_str;
      print(qcashier.period.sp10_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp10_str = testData1;
      print(qcashier.period.sp10_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp10_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp10_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp10_str = testData2;
      print(qcashier.period.sp10_str);
      expect(qcashier.period.sp10_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp10_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp10_str = defalut;
      print(qcashier.period.sp10_str);
      expect(qcashier.period.sp10_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp10_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00225_element_check_00202 **********\n\n");
    });

    test('00226_element_check_00203', () async {
      print("\n********** テスト実行：00226_element_check_00203 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp10_end;
      print(qcashier.period.sp10_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp10_end = testData1;
      print(qcashier.period.sp10_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp10_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp10_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp10_end = testData2;
      print(qcashier.period.sp10_end);
      expect(qcashier.period.sp10_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp10_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp10_end = defalut;
      print(qcashier.period.sp10_end);
      expect(qcashier.period.sp10_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp10_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00226_element_check_00203 **********\n\n");
    });

    test('00227_element_check_00204', () async {
      print("\n********** テスト実行：00227_element_check_00204 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp11_str;
      print(qcashier.period.sp11_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp11_str = testData1s;
      print(qcashier.period.sp11_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp11_str == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp11_str == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp11_str = testData2s;
      print(qcashier.period.sp11_str);
      expect(qcashier.period.sp11_str == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp11_str == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp11_str = defalut;
      print(qcashier.period.sp11_str);
      expect(qcashier.period.sp11_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp11_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00227_element_check_00204 **********\n\n");
    });

    test('00228_element_check_00205', () async {
      print("\n********** テスト実行：00228_element_check_00205 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp11_end;
      print(qcashier.period.sp11_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp11_end = testData1s;
      print(qcashier.period.sp11_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp11_end == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp11_end == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp11_end = testData2s;
      print(qcashier.period.sp11_end);
      expect(qcashier.period.sp11_end == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp11_end == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp11_end = defalut;
      print(qcashier.period.sp11_end);
      expect(qcashier.period.sp11_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp11_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00228_element_check_00205 **********\n\n");
    });

    test('00229_element_check_00206', () async {
      print("\n********** テスト実行：00229_element_check_00206 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp12_str;
      print(qcashier.period.sp12_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp12_str = testData1;
      print(qcashier.period.sp12_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp12_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp12_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp12_str = testData2;
      print(qcashier.period.sp12_str);
      expect(qcashier.period.sp12_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp12_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp12_str = defalut;
      print(qcashier.period.sp12_str);
      expect(qcashier.period.sp12_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp12_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00229_element_check_00206 **********\n\n");
    });

    test('00230_element_check_00207', () async {
      print("\n********** テスト実行：00230_element_check_00207 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp12_end;
      print(qcashier.period.sp12_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp12_end = testData1;
      print(qcashier.period.sp12_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp12_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp12_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp12_end = testData2;
      print(qcashier.period.sp12_end);
      expect(qcashier.period.sp12_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp12_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp12_end = defalut;
      print(qcashier.period.sp12_end);
      expect(qcashier.period.sp12_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp12_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00230_element_check_00207 **********\n\n");
    });

    test('00231_element_check_00208', () async {
      print("\n********** テスト実行：00231_element_check_00208 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp13_str;
      print(qcashier.period.sp13_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp13_str = testData1s;
      print(qcashier.period.sp13_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp13_str == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp13_str == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp13_str = testData2s;
      print(qcashier.period.sp13_str);
      expect(qcashier.period.sp13_str == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp13_str == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp13_str = defalut;
      print(qcashier.period.sp13_str);
      expect(qcashier.period.sp13_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp13_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00231_element_check_00208 **********\n\n");
    });

    test('00232_element_check_00209', () async {
      print("\n********** テスト実行：00232_element_check_00209 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp13_end;
      print(qcashier.period.sp13_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp13_end = testData1s;
      print(qcashier.period.sp13_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp13_end == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp13_end == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp13_end = testData2s;
      print(qcashier.period.sp13_end);
      expect(qcashier.period.sp13_end == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp13_end == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp13_end = defalut;
      print(qcashier.period.sp13_end);
      expect(qcashier.period.sp13_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp13_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00232_element_check_00209 **********\n\n");
    });

    test('00233_element_check_00210', () async {
      print("\n********** テスト実行：00233_element_check_00210 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp14_str;
      print(qcashier.period.sp14_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp14_str = testData1;
      print(qcashier.period.sp14_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp14_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp14_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp14_str = testData2;
      print(qcashier.period.sp14_str);
      expect(qcashier.period.sp14_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp14_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp14_str = defalut;
      print(qcashier.period.sp14_str);
      expect(qcashier.period.sp14_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp14_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00233_element_check_00210 **********\n\n");
    });

    test('00234_element_check_00211', () async {
      print("\n********** テスト実行：00234_element_check_00211 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp14_end;
      print(qcashier.period.sp14_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp14_end = testData1;
      print(qcashier.period.sp14_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp14_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp14_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp14_end = testData2;
      print(qcashier.period.sp14_end);
      expect(qcashier.period.sp14_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp14_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp14_end = defalut;
      print(qcashier.period.sp14_end);
      expect(qcashier.period.sp14_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp14_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00234_element_check_00211 **********\n\n");
    });

    test('00235_element_check_00212', () async {
      print("\n********** テスト実行：00235_element_check_00212 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp15_str;
      print(qcashier.period.sp15_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp15_str = testData1s;
      print(qcashier.period.sp15_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp15_str == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp15_str == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp15_str = testData2s;
      print(qcashier.period.sp15_str);
      expect(qcashier.period.sp15_str == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp15_str == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp15_str = defalut;
      print(qcashier.period.sp15_str);
      expect(qcashier.period.sp15_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp15_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00235_element_check_00212 **********\n\n");
    });

    test('00236_element_check_00213', () async {
      print("\n********** テスト実行：00236_element_check_00213 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp15_end;
      print(qcashier.period.sp15_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp15_end = testData1s;
      print(qcashier.period.sp15_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp15_end == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp15_end == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp15_end = testData2s;
      print(qcashier.period.sp15_end);
      expect(qcashier.period.sp15_end == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp15_end == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp15_end = defalut;
      print(qcashier.period.sp15_end);
      expect(qcashier.period.sp15_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp15_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00236_element_check_00213 **********\n\n");
    });

    test('00237_element_check_00214', () async {
      print("\n********** テスト実行：00237_element_check_00214 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp16_str;
      print(qcashier.period.sp16_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp16_str = testData1;
      print(qcashier.period.sp16_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp16_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp16_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp16_str = testData2;
      print(qcashier.period.sp16_str);
      expect(qcashier.period.sp16_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp16_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp16_str = defalut;
      print(qcashier.period.sp16_str);
      expect(qcashier.period.sp16_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp16_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00237_element_check_00214 **********\n\n");
    });

    test('00238_element_check_00215', () async {
      print("\n********** テスト実行：00238_element_check_00215 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp16_end;
      print(qcashier.period.sp16_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp16_end = testData1;
      print(qcashier.period.sp16_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp16_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp16_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp16_end = testData2;
      print(qcashier.period.sp16_end);
      expect(qcashier.period.sp16_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp16_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp16_end = defalut;
      print(qcashier.period.sp16_end);
      expect(qcashier.period.sp16_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp16_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00238_element_check_00215 **********\n\n");
    });

    test('00239_element_check_00216', () async {
      print("\n********** テスト実行：00239_element_check_00216 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp17_str;
      print(qcashier.period.sp17_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp17_str = testData1;
      print(qcashier.period.sp17_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp17_str == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp17_str == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp17_str = testData2;
      print(qcashier.period.sp17_str);
      expect(qcashier.period.sp17_str == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp17_str == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp17_str = defalut;
      print(qcashier.period.sp17_str);
      expect(qcashier.period.sp17_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp17_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00239_element_check_00216 **********\n\n");
    });

    test('00240_element_check_00217', () async {
      print("\n********** テスト実行：00240_element_check_00217 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp17_end;
      print(qcashier.period.sp17_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp17_end = testData1;
      print(qcashier.period.sp17_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp17_end == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp17_end == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp17_end = testData2;
      print(qcashier.period.sp17_end);
      expect(qcashier.period.sp17_end == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp17_end == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp17_end = defalut;
      print(qcashier.period.sp17_end);
      expect(qcashier.period.sp17_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp17_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00240_element_check_00217 **********\n\n");
    });

    test('00241_element_check_00218', () async {
      print("\n********** テスト実行：00241_element_check_00218 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp18_str;
      print(qcashier.period.sp18_str);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp18_str = testData1s;
      print(qcashier.period.sp18_str);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp18_str == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp18_str == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp18_str = testData2s;
      print(qcashier.period.sp18_str);
      expect(qcashier.period.sp18_str == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp18_str == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp18_str = defalut;
      print(qcashier.period.sp18_str);
      expect(qcashier.period.sp18_str == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp18_str == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00241_element_check_00218 **********\n\n");
    });

    test('00242_element_check_00219', () async {
      print("\n********** テスト実行：00242_element_check_00219 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sp18_end;
      print(qcashier.period.sp18_end);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sp18_end = testData1s;
      print(qcashier.period.sp18_end);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sp18_end == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sp18_end == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sp18_end = testData2s;
      print(qcashier.period.sp18_end);
      expect(qcashier.period.sp18_end == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp18_end == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sp18_end = defalut;
      print(qcashier.period.sp18_end);
      expect(qcashier.period.sp18_end == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sp18_end == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00242_element_check_00219 **********\n\n");
    });

    test('00243_element_check_00220', () async {
      print("\n********** テスト実行：00243_element_check_00220 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.spr_time1;
      print(qcashier.period.spr_time1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.spr_time1 = testData1;
      print(qcashier.period.spr_time1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.spr_time1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.spr_time1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.spr_time1 = testData2;
      print(qcashier.period.spr_time1);
      expect(qcashier.period.spr_time1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.spr_time1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.spr_time1 = defalut;
      print(qcashier.period.spr_time1);
      expect(qcashier.period.spr_time1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.spr_time1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00243_element_check_00220 **********\n\n");
    });

    test('00244_element_check_00221', () async {
      print("\n********** テスト実行：00244_element_check_00221 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.spr_time2;
      print(qcashier.period.spr_time2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.spr_time2 = testData1;
      print(qcashier.period.spr_time2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.spr_time2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.spr_time2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.spr_time2 = testData2;
      print(qcashier.period.spr_time2);
      expect(qcashier.period.spr_time2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.spr_time2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.spr_time2 = defalut;
      print(qcashier.period.spr_time2);
      expect(qcashier.period.spr_time2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.spr_time2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00244_element_check_00221 **********\n\n");
    });

    test('00245_element_check_00222', () async {
      print("\n********** テスト実行：00245_element_check_00222 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sum_time1;
      print(qcashier.period.sum_time1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sum_time1 = testData1;
      print(qcashier.period.sum_time1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sum_time1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sum_time1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sum_time1 = testData2;
      print(qcashier.period.sum_time1);
      expect(qcashier.period.sum_time1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sum_time1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sum_time1 = defalut;
      print(qcashier.period.sum_time1);
      expect(qcashier.period.sum_time1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sum_time1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00245_element_check_00222 **********\n\n");
    });

    test('00246_element_check_00223', () async {
      print("\n********** テスト実行：00246_element_check_00223 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.sum_time2;
      print(qcashier.period.sum_time2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.sum_time2 = testData1;
      print(qcashier.period.sum_time2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.sum_time2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.sum_time2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.sum_time2 = testData2;
      print(qcashier.period.sum_time2);
      expect(qcashier.period.sum_time2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sum_time2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.sum_time2 = defalut;
      print(qcashier.period.sum_time2);
      expect(qcashier.period.sum_time2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.sum_time2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00246_element_check_00223 **********\n\n");
    });

    test('00247_element_check_00224', () async {
      print("\n********** テスト実行：00247_element_check_00224 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.aut_time1;
      print(qcashier.period.aut_time1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.aut_time1 = testData1;
      print(qcashier.period.aut_time1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.aut_time1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.aut_time1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.aut_time1 = testData2;
      print(qcashier.period.aut_time1);
      expect(qcashier.period.aut_time1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.aut_time1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.aut_time1 = defalut;
      print(qcashier.period.aut_time1);
      expect(qcashier.period.aut_time1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.aut_time1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00247_element_check_00224 **********\n\n");
    });

    test('00248_element_check_00225', () async {
      print("\n********** テスト実行：00248_element_check_00225 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.aut_time2;
      print(qcashier.period.aut_time2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.aut_time2 = testData1;
      print(qcashier.period.aut_time2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.aut_time2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.aut_time2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.aut_time2 = testData2;
      print(qcashier.period.aut_time2);
      expect(qcashier.period.aut_time2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.aut_time2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.aut_time2 = defalut;
      print(qcashier.period.aut_time2);
      expect(qcashier.period.aut_time2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.aut_time2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00248_element_check_00225 **********\n\n");
    });

    test('00249_element_check_00226', () async {
      print("\n********** テスト実行：00249_element_check_00226 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.win_time1;
      print(qcashier.period.win_time1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.win_time1 = testData1;
      print(qcashier.period.win_time1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.win_time1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.win_time1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.win_time1 = testData2;
      print(qcashier.period.win_time1);
      expect(qcashier.period.win_time1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win_time1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.win_time1 = defalut;
      print(qcashier.period.win_time1);
      expect(qcashier.period.win_time1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win_time1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00249_element_check_00226 **********\n\n");
    });

    test('00250_element_check_00227', () async {
      print("\n********** テスト実行：00250_element_check_00227 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.period.win_time2;
      print(qcashier.period.win_time2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.period.win_time2 = testData1;
      print(qcashier.period.win_time2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.period.win_time2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.period.win_time2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.period.win_time2 = testData2;
      print(qcashier.period.win_time2);
      expect(qcashier.period.win_time2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win_time2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.period.win_time2 = defalut;
      print(qcashier.period.win_time2);
      expect(qcashier.period.win_time2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.period.win_time2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00250_element_check_00227 **********\n\n");
    });

    test('00251_element_check_00228', () async {
      print("\n********** テスト実行：00251_element_check_00228 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.title;
      print(qcashier.screen0.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.title = testData1s;
      print(qcashier.screen0.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.title = testData2s;
      print(qcashier.screen0.title);
      expect(qcashier.screen0.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.title = defalut;
      print(qcashier.screen0.title);
      expect(qcashier.screen0.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00251_element_check_00228 **********\n\n");
    });

    test('00252_element_check_00229', () async {
      print("\n********** テスト実行：00252_element_check_00229 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.msg1;
      print(qcashier.screen0.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.msg1 = testData1s;
      print(qcashier.screen0.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.msg1 = testData2s;
      print(qcashier.screen0.msg1);
      expect(qcashier.screen0.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.msg1 = defalut;
      print(qcashier.screen0.msg1);
      expect(qcashier.screen0.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00252_element_check_00229 **********\n\n");
    });

    test('00253_element_check_00230', () async {
      print("\n********** テスト実行：00253_element_check_00230 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.msg2;
      print(qcashier.screen0.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.msg2 = testData1s;
      print(qcashier.screen0.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.msg2 = testData2s;
      print(qcashier.screen0.msg2);
      expect(qcashier.screen0.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.msg2 = defalut;
      print(qcashier.screen0.msg2);
      expect(qcashier.screen0.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00253_element_check_00230 **********\n\n");
    });

    test('00254_element_check_00231', () async {
      print("\n********** テスト実行：00254_element_check_00231 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.msg1_size;
      print(qcashier.screen0.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.msg1_size = testData1;
      print(qcashier.screen0.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.msg1_size = testData2;
      print(qcashier.screen0.msg1_size);
      expect(qcashier.screen0.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.msg1_size = defalut;
      print(qcashier.screen0.msg1_size);
      expect(qcashier.screen0.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00254_element_check_00231 **********\n\n");
    });

    test('00255_element_check_00232', () async {
      print("\n********** テスト実行：00255_element_check_00232 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.msg2_size;
      print(qcashier.screen0.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.msg2_size = testData1;
      print(qcashier.screen0.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.msg2_size = testData2;
      print(qcashier.screen0.msg2_size);
      expect(qcashier.screen0.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.msg2_size = defalut;
      print(qcashier.screen0.msg2_size);
      expect(qcashier.screen0.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00255_element_check_00232 **********\n\n");
    });

    test('00256_element_check_00233', () async {
      print("\n********** テスト実行：00256_element_check_00233 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.sound1;
      print(qcashier.screen0.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.sound1 = testData1;
      print(qcashier.screen0.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.sound1 = testData2;
      print(qcashier.screen0.sound1);
      expect(qcashier.screen0.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.sound1 = defalut;
      print(qcashier.screen0.sound1);
      expect(qcashier.screen0.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00256_element_check_00233 **********\n\n");
    });

    test('00257_element_check_00234', () async {
      print("\n********** テスト実行：00257_element_check_00234 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.sound2;
      print(qcashier.screen0.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.sound2 = testData1;
      print(qcashier.screen0.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.sound2 = testData2;
      print(qcashier.screen0.sound2);
      expect(qcashier.screen0.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.sound2 = defalut;
      print(qcashier.screen0.sound2);
      expect(qcashier.screen0.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00257_element_check_00234 **********\n\n");
    });

    test('00258_element_check_00235', () async {
      print("\n********** テスト実行：00258_element_check_00235 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.sound3;
      print(qcashier.screen0.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.sound3 = testData1;
      print(qcashier.screen0.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.sound3 = testData2;
      print(qcashier.screen0.sound3);
      expect(qcashier.screen0.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.sound3 = defalut;
      print(qcashier.screen0.sound3);
      expect(qcashier.screen0.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00258_element_check_00235 **********\n\n");
    });

    test('00259_element_check_00236', () async {
      print("\n********** テスト実行：00259_element_check_00236 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.snd_timer;
      print(qcashier.screen0.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.snd_timer = testData1;
      print(qcashier.screen0.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.snd_timer = testData2;
      print(qcashier.screen0.snd_timer);
      expect(qcashier.screen0.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.snd_timer = defalut;
      print(qcashier.screen0.snd_timer);
      expect(qcashier.screen0.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00259_element_check_00236 **********\n\n");
    });

    test('00260_element_check_00237', () async {
      print("\n********** テスト実行：00260_element_check_00237 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.timer1;
      print(qcashier.screen0.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.timer1 = testData1;
      print(qcashier.screen0.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.timer1 = testData2;
      print(qcashier.screen0.timer1);
      expect(qcashier.screen0.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.timer1 = defalut;
      print(qcashier.screen0.timer1);
      expect(qcashier.screen0.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00260_element_check_00237 **********\n\n");
    });

    test('00261_element_check_00238', () async {
      print("\n********** テスト実行：00261_element_check_00238 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.timer2;
      print(qcashier.screen0.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.timer2 = testData1;
      print(qcashier.screen0.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.timer2 = testData2;
      print(qcashier.screen0.timer2);
      expect(qcashier.screen0.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.timer2 = defalut;
      print(qcashier.screen0.timer2);
      expect(qcashier.screen0.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00261_element_check_00238 **********\n\n");
    });

    test('00262_element_check_00239', () async {
      print("\n********** テスト実行：00262_element_check_00239 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.timer3;
      print(qcashier.screen0.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.timer3 = testData1;
      print(qcashier.screen0.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.timer3 = testData2;
      print(qcashier.screen0.timer3);
      expect(qcashier.screen0.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.timer3 = defalut;
      print(qcashier.screen0.timer3);
      expect(qcashier.screen0.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00262_element_check_00239 **********\n\n");
    });

    test('00263_element_check_00240', () async {
      print("\n********** テスト実行：00263_element_check_00240 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.dsp_flg1;
      print(qcashier.screen0.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.dsp_flg1 = testData1;
      print(qcashier.screen0.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.dsp_flg1 = testData2;
      print(qcashier.screen0.dsp_flg1);
      expect(qcashier.screen0.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.dsp_flg1 = defalut;
      print(qcashier.screen0.dsp_flg1);
      expect(qcashier.screen0.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00263_element_check_00240 **********\n\n");
    });

    test('00264_element_check_00241', () async {
      print("\n********** テスト実行：00264_element_check_00241 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.dsp_flg2;
      print(qcashier.screen0.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.dsp_flg2 = testData1;
      print(qcashier.screen0.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.dsp_flg2 = testData2;
      print(qcashier.screen0.dsp_flg2);
      expect(qcashier.screen0.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.dsp_flg2 = defalut;
      print(qcashier.screen0.dsp_flg2);
      expect(qcashier.screen0.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00264_element_check_00241 **********\n\n");
    });

    test('00265_element_check_00242', () async {
      print("\n********** テスト実行：00265_element_check_00242 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.movie01_ext;
      print(qcashier.screen0.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.movie01_ext = testData1;
      print(qcashier.screen0.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.movie01_ext = testData2;
      print(qcashier.screen0.movie01_ext);
      expect(qcashier.screen0.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.movie01_ext = defalut;
      print(qcashier.screen0.movie01_ext);
      expect(qcashier.screen0.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00265_element_check_00242 **********\n\n");
    });

    test('00266_element_check_00243', () async {
      print("\n********** テスト実行：00266_element_check_00243 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.movie02_ext;
      print(qcashier.screen0.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.movie02_ext = testData1;
      print(qcashier.screen0.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.movie02_ext = testData2;
      print(qcashier.screen0.movie02_ext);
      expect(qcashier.screen0.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.movie02_ext = defalut;
      print(qcashier.screen0.movie02_ext);
      expect(qcashier.screen0.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00266_element_check_00243 **********\n\n");
    });

    test('00267_element_check_00244', () async {
      print("\n********** テスト実行：00267_element_check_00244 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.movie03_ext;
      print(qcashier.screen0.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.movie03_ext = testData1;
      print(qcashier.screen0.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.movie03_ext = testData2;
      print(qcashier.screen0.movie03_ext);
      expect(qcashier.screen0.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.movie03_ext = defalut;
      print(qcashier.screen0.movie03_ext);
      expect(qcashier.screen0.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00267_element_check_00244 **********\n\n");
    });

    test('00268_element_check_00245', () async {
      print("\n********** テスト実行：00268_element_check_00245 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.movie04_ext;
      print(qcashier.screen0.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.movie04_ext = testData1;
      print(qcashier.screen0.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.movie04_ext = testData2;
      print(qcashier.screen0.movie04_ext);
      expect(qcashier.screen0.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.movie04_ext = defalut;
      print(qcashier.screen0.movie04_ext);
      expect(qcashier.screen0.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00268_element_check_00245 **********\n\n");
    });

    test('00269_element_check_00246', () async {
      print("\n********** テスト実行：00269_element_check_00246 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line_title;
      print(qcashier.screen0.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line_title = testData1s;
      print(qcashier.screen0.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line_title = testData2s;
      print(qcashier.screen0.line_title);
      expect(qcashier.screen0.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line_title = defalut;
      print(qcashier.screen0.line_title);
      expect(qcashier.screen0.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00269_element_check_00246 **********\n\n");
    });

    test('00270_element_check_00247', () async {
      print("\n********** テスト実行：00270_element_check_00247 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line_title_ex;
      print(qcashier.screen0.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line_title_ex = testData1s;
      print(qcashier.screen0.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line_title_ex = testData2s;
      print(qcashier.screen0.line_title_ex);
      expect(qcashier.screen0.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line_title_ex = defalut;
      print(qcashier.screen0.line_title_ex);
      expect(qcashier.screen0.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00270_element_check_00247 **********\n\n");
    });

    test('00271_element_check_00248', () async {
      print("\n********** テスト実行：00271_element_check_00248 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line1;
      print(qcashier.screen0.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line1 = testData1s;
      print(qcashier.screen0.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line1 = testData2s;
      print(qcashier.screen0.line1);
      expect(qcashier.screen0.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line1 = defalut;
      print(qcashier.screen0.line1);
      expect(qcashier.screen0.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00271_element_check_00248 **********\n\n");
    });

    test('00272_element_check_00249', () async {
      print("\n********** テスト実行：00272_element_check_00249 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line2;
      print(qcashier.screen0.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line2 = testData1s;
      print(qcashier.screen0.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line2 = testData2s;
      print(qcashier.screen0.line2);
      expect(qcashier.screen0.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line2 = defalut;
      print(qcashier.screen0.line2);
      expect(qcashier.screen0.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00272_element_check_00249 **********\n\n");
    });

    test('00273_element_check_00250', () async {
      print("\n********** テスト実行：00273_element_check_00250 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line3;
      print(qcashier.screen0.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line3 = testData1s;
      print(qcashier.screen0.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line3 = testData2s;
      print(qcashier.screen0.line3);
      expect(qcashier.screen0.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line3 = defalut;
      print(qcashier.screen0.line3);
      expect(qcashier.screen0.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00273_element_check_00250 **********\n\n");
    });

    test('00274_element_check_00251', () async {
      print("\n********** テスト実行：00274_element_check_00251 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line4;
      print(qcashier.screen0.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line4 = testData1s;
      print(qcashier.screen0.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line4 = testData2s;
      print(qcashier.screen0.line4);
      expect(qcashier.screen0.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line4 = defalut;
      print(qcashier.screen0.line4);
      expect(qcashier.screen0.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00274_element_check_00251 **********\n\n");
    });

    test('00275_element_check_00252', () async {
      print("\n********** テスト実行：00275_element_check_00252 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line1_ex;
      print(qcashier.screen0.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line1_ex = testData1s;
      print(qcashier.screen0.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line1_ex = testData2s;
      print(qcashier.screen0.line1_ex);
      expect(qcashier.screen0.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line1_ex = defalut;
      print(qcashier.screen0.line1_ex);
      expect(qcashier.screen0.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00275_element_check_00252 **********\n\n");
    });

    test('00276_element_check_00253', () async {
      print("\n********** テスト実行：00276_element_check_00253 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line2_ex;
      print(qcashier.screen0.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line2_ex = testData1s;
      print(qcashier.screen0.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line2_ex = testData2s;
      print(qcashier.screen0.line2_ex);
      expect(qcashier.screen0.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line2_ex = defalut;
      print(qcashier.screen0.line2_ex);
      expect(qcashier.screen0.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00276_element_check_00253 **********\n\n");
    });

    test('00277_element_check_00254', () async {
      print("\n********** テスト実行：00277_element_check_00254 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line3_ex;
      print(qcashier.screen0.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line3_ex = testData1s;
      print(qcashier.screen0.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line3_ex = testData2s;
      print(qcashier.screen0.line3_ex);
      expect(qcashier.screen0.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line3_ex = defalut;
      print(qcashier.screen0.line3_ex);
      expect(qcashier.screen0.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00277_element_check_00254 **********\n\n");
    });

    test('00278_element_check_00255', () async {
      print("\n********** テスト実行：00278_element_check_00255 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.line4_ex;
      print(qcashier.screen0.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.line4_ex = testData1s;
      print(qcashier.screen0.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.line4_ex = testData2s;
      print(qcashier.screen0.line4_ex);
      expect(qcashier.screen0.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.line4_ex = defalut;
      print(qcashier.screen0.line4_ex);
      expect(qcashier.screen0.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00278_element_check_00255 **********\n\n");
    });

    test('00279_element_check_00256', () async {
      print("\n********** テスト実行：00279_element_check_00256 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.sound_led1;
      print(qcashier.screen0.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.sound_led1 = testData1;
      print(qcashier.screen0.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.sound_led1 = testData2;
      print(qcashier.screen0.sound_led1);
      expect(qcashier.screen0.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.sound_led1 = defalut;
      print(qcashier.screen0.sound_led1);
      expect(qcashier.screen0.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00279_element_check_00256 **********\n\n");
    });

    test('00280_element_check_00257', () async {
      print("\n********** テスト実行：00280_element_check_00257 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.sound_led2;
      print(qcashier.screen0.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.sound_led2 = testData1;
      print(qcashier.screen0.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.sound_led2 = testData2;
      print(qcashier.screen0.sound_led2);
      expect(qcashier.screen0.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.sound_led2 = defalut;
      print(qcashier.screen0.sound_led2);
      expect(qcashier.screen0.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00280_element_check_00257 **********\n\n");
    });

    test('00281_element_check_00258', () async {
      print("\n********** テスト実行：00281_element_check_00258 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen0.sound_led3;
      print(qcashier.screen0.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen0.sound_led3 = testData1;
      print(qcashier.screen0.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen0.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen0.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen0.sound_led3 = testData2;
      print(qcashier.screen0.sound_led3);
      expect(qcashier.screen0.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen0.sound_led3 = defalut;
      print(qcashier.screen0.sound_led3);
      expect(qcashier.screen0.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen0.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00281_element_check_00258 **********\n\n");
    });

    test('00282_element_check_00259', () async {
      print("\n********** テスト実行：00282_element_check_00259 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.title;
      print(qcashier.screen1.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.title = testData1s;
      print(qcashier.screen1.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.title = testData2s;
      print(qcashier.screen1.title);
      expect(qcashier.screen1.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.title = defalut;
      print(qcashier.screen1.title);
      expect(qcashier.screen1.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00282_element_check_00259 **********\n\n");
    });

    test('00283_element_check_00260', () async {
      print("\n********** テスト実行：00283_element_check_00260 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.msg1;
      print(qcashier.screen1.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.msg1 = testData1s;
      print(qcashier.screen1.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.msg1 = testData2s;
      print(qcashier.screen1.msg1);
      expect(qcashier.screen1.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.msg1 = defalut;
      print(qcashier.screen1.msg1);
      expect(qcashier.screen1.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00283_element_check_00260 **********\n\n");
    });

    test('00284_element_check_00261', () async {
      print("\n********** テスト実行：00284_element_check_00261 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.msg2;
      print(qcashier.screen1.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.msg2 = testData1s;
      print(qcashier.screen1.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.msg2 = testData2s;
      print(qcashier.screen1.msg2);
      expect(qcashier.screen1.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.msg2 = defalut;
      print(qcashier.screen1.msg2);
      expect(qcashier.screen1.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00284_element_check_00261 **********\n\n");
    });

    test('00285_element_check_00262', () async {
      print("\n********** テスト実行：00285_element_check_00262 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.msg1_size;
      print(qcashier.screen1.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.msg1_size = testData1;
      print(qcashier.screen1.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.msg1_size = testData2;
      print(qcashier.screen1.msg1_size);
      expect(qcashier.screen1.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.msg1_size = defalut;
      print(qcashier.screen1.msg1_size);
      expect(qcashier.screen1.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00285_element_check_00262 **********\n\n");
    });

    test('00286_element_check_00263', () async {
      print("\n********** テスト実行：00286_element_check_00263 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.msg2_size;
      print(qcashier.screen1.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.msg2_size = testData1;
      print(qcashier.screen1.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.msg2_size = testData2;
      print(qcashier.screen1.msg2_size);
      expect(qcashier.screen1.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.msg2_size = defalut;
      print(qcashier.screen1.msg2_size);
      expect(qcashier.screen1.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00286_element_check_00263 **********\n\n");
    });

    test('00287_element_check_00264', () async {
      print("\n********** テスト実行：00287_element_check_00264 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.sound1;
      print(qcashier.screen1.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.sound1 = testData1;
      print(qcashier.screen1.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.sound1 = testData2;
      print(qcashier.screen1.sound1);
      expect(qcashier.screen1.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.sound1 = defalut;
      print(qcashier.screen1.sound1);
      expect(qcashier.screen1.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00287_element_check_00264 **********\n\n");
    });

    test('00288_element_check_00265', () async {
      print("\n********** テスト実行：00288_element_check_00265 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.sound2;
      print(qcashier.screen1.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.sound2 = testData1;
      print(qcashier.screen1.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.sound2 = testData2;
      print(qcashier.screen1.sound2);
      expect(qcashier.screen1.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.sound2 = defalut;
      print(qcashier.screen1.sound2);
      expect(qcashier.screen1.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00288_element_check_00265 **********\n\n");
    });

    test('00289_element_check_00266', () async {
      print("\n********** テスト実行：00289_element_check_00266 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.sound3;
      print(qcashier.screen1.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.sound3 = testData1;
      print(qcashier.screen1.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.sound3 = testData2;
      print(qcashier.screen1.sound3);
      expect(qcashier.screen1.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.sound3 = defalut;
      print(qcashier.screen1.sound3);
      expect(qcashier.screen1.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00289_element_check_00266 **********\n\n");
    });

    test('00290_element_check_00267', () async {
      print("\n********** テスト実行：00290_element_check_00267 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.snd_timer;
      print(qcashier.screen1.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.snd_timer = testData1;
      print(qcashier.screen1.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.snd_timer = testData2;
      print(qcashier.screen1.snd_timer);
      expect(qcashier.screen1.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.snd_timer = defalut;
      print(qcashier.screen1.snd_timer);
      expect(qcashier.screen1.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00290_element_check_00267 **********\n\n");
    });

    test('00291_element_check_00268', () async {
      print("\n********** テスト実行：00291_element_check_00268 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.timer1;
      print(qcashier.screen1.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.timer1 = testData1;
      print(qcashier.screen1.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.timer1 = testData2;
      print(qcashier.screen1.timer1);
      expect(qcashier.screen1.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.timer1 = defalut;
      print(qcashier.screen1.timer1);
      expect(qcashier.screen1.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00291_element_check_00268 **********\n\n");
    });

    test('00292_element_check_00269', () async {
      print("\n********** テスト実行：00292_element_check_00269 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.timer2;
      print(qcashier.screen1.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.timer2 = testData1;
      print(qcashier.screen1.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.timer2 = testData2;
      print(qcashier.screen1.timer2);
      expect(qcashier.screen1.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.timer2 = defalut;
      print(qcashier.screen1.timer2);
      expect(qcashier.screen1.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00292_element_check_00269 **********\n\n");
    });

    test('00293_element_check_00270', () async {
      print("\n********** テスト実行：00293_element_check_00270 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.timer3;
      print(qcashier.screen1.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.timer3 = testData1;
      print(qcashier.screen1.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.timer3 = testData2;
      print(qcashier.screen1.timer3);
      expect(qcashier.screen1.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.timer3 = defalut;
      print(qcashier.screen1.timer3);
      expect(qcashier.screen1.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00293_element_check_00270 **********\n\n");
    });

    test('00294_element_check_00271', () async {
      print("\n********** テスト実行：00294_element_check_00271 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.dsp_flg1;
      print(qcashier.screen1.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.dsp_flg1 = testData1;
      print(qcashier.screen1.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.dsp_flg1 = testData2;
      print(qcashier.screen1.dsp_flg1);
      expect(qcashier.screen1.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.dsp_flg1 = defalut;
      print(qcashier.screen1.dsp_flg1);
      expect(qcashier.screen1.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00294_element_check_00271 **********\n\n");
    });

    test('00295_element_check_00272', () async {
      print("\n********** テスト実行：00295_element_check_00272 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.dsp_flg2;
      print(qcashier.screen1.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.dsp_flg2 = testData1;
      print(qcashier.screen1.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.dsp_flg2 = testData2;
      print(qcashier.screen1.dsp_flg2);
      expect(qcashier.screen1.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.dsp_flg2 = defalut;
      print(qcashier.screen1.dsp_flg2);
      expect(qcashier.screen1.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00295_element_check_00272 **********\n\n");
    });

    test('00296_element_check_00273', () async {
      print("\n********** テスト実行：00296_element_check_00273 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.movie01_ext;
      print(qcashier.screen1.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.movie01_ext = testData1;
      print(qcashier.screen1.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.movie01_ext = testData2;
      print(qcashier.screen1.movie01_ext);
      expect(qcashier.screen1.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.movie01_ext = defalut;
      print(qcashier.screen1.movie01_ext);
      expect(qcashier.screen1.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00296_element_check_00273 **********\n\n");
    });

    test('00297_element_check_00274', () async {
      print("\n********** テスト実行：00297_element_check_00274 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.movie02_ext;
      print(qcashier.screen1.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.movie02_ext = testData1;
      print(qcashier.screen1.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.movie02_ext = testData2;
      print(qcashier.screen1.movie02_ext);
      expect(qcashier.screen1.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.movie02_ext = defalut;
      print(qcashier.screen1.movie02_ext);
      expect(qcashier.screen1.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00297_element_check_00274 **********\n\n");
    });

    test('00298_element_check_00275', () async {
      print("\n********** テスト実行：00298_element_check_00275 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.movie03_ext;
      print(qcashier.screen1.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.movie03_ext = testData1;
      print(qcashier.screen1.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.movie03_ext = testData2;
      print(qcashier.screen1.movie03_ext);
      expect(qcashier.screen1.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.movie03_ext = defalut;
      print(qcashier.screen1.movie03_ext);
      expect(qcashier.screen1.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00298_element_check_00275 **********\n\n");
    });

    test('00299_element_check_00276', () async {
      print("\n********** テスト実行：00299_element_check_00276 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.movie04_ext;
      print(qcashier.screen1.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.movie04_ext = testData1;
      print(qcashier.screen1.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.movie04_ext = testData2;
      print(qcashier.screen1.movie04_ext);
      expect(qcashier.screen1.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.movie04_ext = defalut;
      print(qcashier.screen1.movie04_ext);
      expect(qcashier.screen1.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00299_element_check_00276 **********\n\n");
    });

    test('00300_element_check_00277', () async {
      print("\n********** テスト実行：00300_element_check_00277 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line_title;
      print(qcashier.screen1.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line_title = testData1s;
      print(qcashier.screen1.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line_title = testData2s;
      print(qcashier.screen1.line_title);
      expect(qcashier.screen1.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line_title = defalut;
      print(qcashier.screen1.line_title);
      expect(qcashier.screen1.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00300_element_check_00277 **********\n\n");
    });

    test('00301_element_check_00278', () async {
      print("\n********** テスト実行：00301_element_check_00278 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line_title_ex;
      print(qcashier.screen1.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line_title_ex = testData1s;
      print(qcashier.screen1.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line_title_ex = testData2s;
      print(qcashier.screen1.line_title_ex);
      expect(qcashier.screen1.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line_title_ex = defalut;
      print(qcashier.screen1.line_title_ex);
      expect(qcashier.screen1.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00301_element_check_00278 **********\n\n");
    });

    test('00302_element_check_00279', () async {
      print("\n********** テスト実行：00302_element_check_00279 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line1;
      print(qcashier.screen1.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line1 = testData1s;
      print(qcashier.screen1.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line1 = testData2s;
      print(qcashier.screen1.line1);
      expect(qcashier.screen1.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line1 = defalut;
      print(qcashier.screen1.line1);
      expect(qcashier.screen1.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00302_element_check_00279 **********\n\n");
    });

    test('00303_element_check_00280', () async {
      print("\n********** テスト実行：00303_element_check_00280 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line2;
      print(qcashier.screen1.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line2 = testData1s;
      print(qcashier.screen1.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line2 = testData2s;
      print(qcashier.screen1.line2);
      expect(qcashier.screen1.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line2 = defalut;
      print(qcashier.screen1.line2);
      expect(qcashier.screen1.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00303_element_check_00280 **********\n\n");
    });

    test('00304_element_check_00281', () async {
      print("\n********** テスト実行：00304_element_check_00281 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line3;
      print(qcashier.screen1.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line3 = testData1s;
      print(qcashier.screen1.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line3 = testData2s;
      print(qcashier.screen1.line3);
      expect(qcashier.screen1.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line3 = defalut;
      print(qcashier.screen1.line3);
      expect(qcashier.screen1.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00304_element_check_00281 **********\n\n");
    });

    test('00305_element_check_00282', () async {
      print("\n********** テスト実行：00305_element_check_00282 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line4;
      print(qcashier.screen1.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line4 = testData1s;
      print(qcashier.screen1.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line4 = testData2s;
      print(qcashier.screen1.line4);
      expect(qcashier.screen1.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line4 = defalut;
      print(qcashier.screen1.line4);
      expect(qcashier.screen1.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00305_element_check_00282 **********\n\n");
    });

    test('00306_element_check_00283', () async {
      print("\n********** テスト実行：00306_element_check_00283 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line1_ex;
      print(qcashier.screen1.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line1_ex = testData1s;
      print(qcashier.screen1.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line1_ex = testData2s;
      print(qcashier.screen1.line1_ex);
      expect(qcashier.screen1.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line1_ex = defalut;
      print(qcashier.screen1.line1_ex);
      expect(qcashier.screen1.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00306_element_check_00283 **********\n\n");
    });

    test('00307_element_check_00284', () async {
      print("\n********** テスト実行：00307_element_check_00284 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line2_ex;
      print(qcashier.screen1.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line2_ex = testData1s;
      print(qcashier.screen1.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line2_ex = testData2s;
      print(qcashier.screen1.line2_ex);
      expect(qcashier.screen1.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line2_ex = defalut;
      print(qcashier.screen1.line2_ex);
      expect(qcashier.screen1.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00307_element_check_00284 **********\n\n");
    });

    test('00308_element_check_00285', () async {
      print("\n********** テスト実行：00308_element_check_00285 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line3_ex;
      print(qcashier.screen1.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line3_ex = testData1s;
      print(qcashier.screen1.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line3_ex = testData2s;
      print(qcashier.screen1.line3_ex);
      expect(qcashier.screen1.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line3_ex = defalut;
      print(qcashier.screen1.line3_ex);
      expect(qcashier.screen1.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00308_element_check_00285 **********\n\n");
    });

    test('00309_element_check_00286', () async {
      print("\n********** テスト実行：00309_element_check_00286 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.line4_ex;
      print(qcashier.screen1.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.line4_ex = testData1s;
      print(qcashier.screen1.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.line4_ex = testData2s;
      print(qcashier.screen1.line4_ex);
      expect(qcashier.screen1.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.line4_ex = defalut;
      print(qcashier.screen1.line4_ex);
      expect(qcashier.screen1.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00309_element_check_00286 **********\n\n");
    });

    test('00310_element_check_00287', () async {
      print("\n********** テスト実行：00310_element_check_00287 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.sound_led1;
      print(qcashier.screen1.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.sound_led1 = testData1;
      print(qcashier.screen1.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.sound_led1 = testData2;
      print(qcashier.screen1.sound_led1);
      expect(qcashier.screen1.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.sound_led1 = defalut;
      print(qcashier.screen1.sound_led1);
      expect(qcashier.screen1.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00310_element_check_00287 **********\n\n");
    });

    test('00311_element_check_00288', () async {
      print("\n********** テスト実行：00311_element_check_00288 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.sound_led2;
      print(qcashier.screen1.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.sound_led2 = testData1;
      print(qcashier.screen1.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.sound_led2 = testData2;
      print(qcashier.screen1.sound_led2);
      expect(qcashier.screen1.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.sound_led2 = defalut;
      print(qcashier.screen1.sound_led2);
      expect(qcashier.screen1.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00311_element_check_00288 **********\n\n");
    });

    test('00312_element_check_00289', () async {
      print("\n********** テスト実行：00312_element_check_00289 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen1.sound_led3;
      print(qcashier.screen1.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen1.sound_led3 = testData1;
      print(qcashier.screen1.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen1.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen1.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen1.sound_led3 = testData2;
      print(qcashier.screen1.sound_led3);
      expect(qcashier.screen1.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen1.sound_led3 = defalut;
      print(qcashier.screen1.sound_led3);
      expect(qcashier.screen1.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen1.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00312_element_check_00289 **********\n\n");
    });

    test('00313_element_check_00290', () async {
      print("\n********** テスト実行：00313_element_check_00290 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.title;
      print(qcashier.screen2.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.title = testData1s;
      print(qcashier.screen2.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.title = testData2s;
      print(qcashier.screen2.title);
      expect(qcashier.screen2.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.title = defalut;
      print(qcashier.screen2.title);
      expect(qcashier.screen2.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00313_element_check_00290 **********\n\n");
    });

    test('00314_element_check_00291', () async {
      print("\n********** テスト実行：00314_element_check_00291 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.msg1;
      print(qcashier.screen2.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.msg1 = testData1s;
      print(qcashier.screen2.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.msg1 = testData2s;
      print(qcashier.screen2.msg1);
      expect(qcashier.screen2.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.msg1 = defalut;
      print(qcashier.screen2.msg1);
      expect(qcashier.screen2.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00314_element_check_00291 **********\n\n");
    });

    test('00315_element_check_00292', () async {
      print("\n********** テスト実行：00315_element_check_00292 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.msg2;
      print(qcashier.screen2.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.msg2 = testData1s;
      print(qcashier.screen2.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.msg2 = testData2s;
      print(qcashier.screen2.msg2);
      expect(qcashier.screen2.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.msg2 = defalut;
      print(qcashier.screen2.msg2);
      expect(qcashier.screen2.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00315_element_check_00292 **********\n\n");
    });

    test('00316_element_check_00293', () async {
      print("\n********** テスト実行：00316_element_check_00293 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.msg1_size;
      print(qcashier.screen2.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.msg1_size = testData1;
      print(qcashier.screen2.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.msg1_size = testData2;
      print(qcashier.screen2.msg1_size);
      expect(qcashier.screen2.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.msg1_size = defalut;
      print(qcashier.screen2.msg1_size);
      expect(qcashier.screen2.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00316_element_check_00293 **********\n\n");
    });

    test('00317_element_check_00294', () async {
      print("\n********** テスト実行：00317_element_check_00294 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.msg2_size;
      print(qcashier.screen2.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.msg2_size = testData1;
      print(qcashier.screen2.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.msg2_size = testData2;
      print(qcashier.screen2.msg2_size);
      expect(qcashier.screen2.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.msg2_size = defalut;
      print(qcashier.screen2.msg2_size);
      expect(qcashier.screen2.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00317_element_check_00294 **********\n\n");
    });

    test('00318_element_check_00295', () async {
      print("\n********** テスト実行：00318_element_check_00295 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.sound1;
      print(qcashier.screen2.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.sound1 = testData1;
      print(qcashier.screen2.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.sound1 = testData2;
      print(qcashier.screen2.sound1);
      expect(qcashier.screen2.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.sound1 = defalut;
      print(qcashier.screen2.sound1);
      expect(qcashier.screen2.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00318_element_check_00295 **********\n\n");
    });

    test('00319_element_check_00296', () async {
      print("\n********** テスト実行：00319_element_check_00296 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.sound2;
      print(qcashier.screen2.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.sound2 = testData1;
      print(qcashier.screen2.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.sound2 = testData2;
      print(qcashier.screen2.sound2);
      expect(qcashier.screen2.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.sound2 = defalut;
      print(qcashier.screen2.sound2);
      expect(qcashier.screen2.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00319_element_check_00296 **********\n\n");
    });

    test('00320_element_check_00297', () async {
      print("\n********** テスト実行：00320_element_check_00297 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.sound3;
      print(qcashier.screen2.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.sound3 = testData1;
      print(qcashier.screen2.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.sound3 = testData2;
      print(qcashier.screen2.sound3);
      expect(qcashier.screen2.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.sound3 = defalut;
      print(qcashier.screen2.sound3);
      expect(qcashier.screen2.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00320_element_check_00297 **********\n\n");
    });

    test('00321_element_check_00298', () async {
      print("\n********** テスト実行：00321_element_check_00298 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.snd_timer;
      print(qcashier.screen2.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.snd_timer = testData1;
      print(qcashier.screen2.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.snd_timer = testData2;
      print(qcashier.screen2.snd_timer);
      expect(qcashier.screen2.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.snd_timer = defalut;
      print(qcashier.screen2.snd_timer);
      expect(qcashier.screen2.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00321_element_check_00298 **********\n\n");
    });

    test('00322_element_check_00299', () async {
      print("\n********** テスト実行：00322_element_check_00299 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.timer1;
      print(qcashier.screen2.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.timer1 = testData1;
      print(qcashier.screen2.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.timer1 = testData2;
      print(qcashier.screen2.timer1);
      expect(qcashier.screen2.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.timer1 = defalut;
      print(qcashier.screen2.timer1);
      expect(qcashier.screen2.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00322_element_check_00299 **********\n\n");
    });

    test('00323_element_check_00300', () async {
      print("\n********** テスト実行：00323_element_check_00300 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.timer2;
      print(qcashier.screen2.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.timer2 = testData1;
      print(qcashier.screen2.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.timer2 = testData2;
      print(qcashier.screen2.timer2);
      expect(qcashier.screen2.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.timer2 = defalut;
      print(qcashier.screen2.timer2);
      expect(qcashier.screen2.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00323_element_check_00300 **********\n\n");
    });

    test('00324_element_check_00301', () async {
      print("\n********** テスト実行：00324_element_check_00301 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.timer3;
      print(qcashier.screen2.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.timer3 = testData1;
      print(qcashier.screen2.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.timer3 = testData2;
      print(qcashier.screen2.timer3);
      expect(qcashier.screen2.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.timer3 = defalut;
      print(qcashier.screen2.timer3);
      expect(qcashier.screen2.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00324_element_check_00301 **********\n\n");
    });

    test('00325_element_check_00302', () async {
      print("\n********** テスト実行：00325_element_check_00302 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.dsp_flg1;
      print(qcashier.screen2.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.dsp_flg1 = testData1;
      print(qcashier.screen2.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.dsp_flg1 = testData2;
      print(qcashier.screen2.dsp_flg1);
      expect(qcashier.screen2.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.dsp_flg1 = defalut;
      print(qcashier.screen2.dsp_flg1);
      expect(qcashier.screen2.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00325_element_check_00302 **********\n\n");
    });

    test('00326_element_check_00303', () async {
      print("\n********** テスト実行：00326_element_check_00303 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.dsp_flg2;
      print(qcashier.screen2.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.dsp_flg2 = testData1;
      print(qcashier.screen2.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.dsp_flg2 = testData2;
      print(qcashier.screen2.dsp_flg2);
      expect(qcashier.screen2.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.dsp_flg2 = defalut;
      print(qcashier.screen2.dsp_flg2);
      expect(qcashier.screen2.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00326_element_check_00303 **********\n\n");
    });

    test('00327_element_check_00304', () async {
      print("\n********** テスト実行：00327_element_check_00304 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.movie01_ext;
      print(qcashier.screen2.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.movie01_ext = testData1;
      print(qcashier.screen2.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.movie01_ext = testData2;
      print(qcashier.screen2.movie01_ext);
      expect(qcashier.screen2.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.movie01_ext = defalut;
      print(qcashier.screen2.movie01_ext);
      expect(qcashier.screen2.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00327_element_check_00304 **********\n\n");
    });

    test('00328_element_check_00305', () async {
      print("\n********** テスト実行：00328_element_check_00305 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.movie02_ext;
      print(qcashier.screen2.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.movie02_ext = testData1;
      print(qcashier.screen2.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.movie02_ext = testData2;
      print(qcashier.screen2.movie02_ext);
      expect(qcashier.screen2.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.movie02_ext = defalut;
      print(qcashier.screen2.movie02_ext);
      expect(qcashier.screen2.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00328_element_check_00305 **********\n\n");
    });

    test('00329_element_check_00306', () async {
      print("\n********** テスト実行：00329_element_check_00306 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.movie03_ext;
      print(qcashier.screen2.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.movie03_ext = testData1;
      print(qcashier.screen2.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.movie03_ext = testData2;
      print(qcashier.screen2.movie03_ext);
      expect(qcashier.screen2.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.movie03_ext = defalut;
      print(qcashier.screen2.movie03_ext);
      expect(qcashier.screen2.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00329_element_check_00306 **********\n\n");
    });

    test('00330_element_check_00307', () async {
      print("\n********** テスト実行：00330_element_check_00307 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.movie04_ext;
      print(qcashier.screen2.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.movie04_ext = testData1;
      print(qcashier.screen2.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.movie04_ext = testData2;
      print(qcashier.screen2.movie04_ext);
      expect(qcashier.screen2.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.movie04_ext = defalut;
      print(qcashier.screen2.movie04_ext);
      expect(qcashier.screen2.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00330_element_check_00307 **********\n\n");
    });

    test('00331_element_check_00308', () async {
      print("\n********** テスト実行：00331_element_check_00308 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line_title;
      print(qcashier.screen2.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line_title = testData1s;
      print(qcashier.screen2.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line_title = testData2s;
      print(qcashier.screen2.line_title);
      expect(qcashier.screen2.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line_title = defalut;
      print(qcashier.screen2.line_title);
      expect(qcashier.screen2.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00331_element_check_00308 **********\n\n");
    });

    test('00332_element_check_00309', () async {
      print("\n********** テスト実行：00332_element_check_00309 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line_title_ex;
      print(qcashier.screen2.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line_title_ex = testData1s;
      print(qcashier.screen2.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line_title_ex = testData2s;
      print(qcashier.screen2.line_title_ex);
      expect(qcashier.screen2.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line_title_ex = defalut;
      print(qcashier.screen2.line_title_ex);
      expect(qcashier.screen2.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00332_element_check_00309 **********\n\n");
    });

    test('00333_element_check_00310', () async {
      print("\n********** テスト実行：00333_element_check_00310 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line1;
      print(qcashier.screen2.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line1 = testData1s;
      print(qcashier.screen2.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line1 = testData2s;
      print(qcashier.screen2.line1);
      expect(qcashier.screen2.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line1 = defalut;
      print(qcashier.screen2.line1);
      expect(qcashier.screen2.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00333_element_check_00310 **********\n\n");
    });

    test('00334_element_check_00311', () async {
      print("\n********** テスト実行：00334_element_check_00311 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line2;
      print(qcashier.screen2.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line2 = testData1s;
      print(qcashier.screen2.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line2 = testData2s;
      print(qcashier.screen2.line2);
      expect(qcashier.screen2.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line2 = defalut;
      print(qcashier.screen2.line2);
      expect(qcashier.screen2.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00334_element_check_00311 **********\n\n");
    });

    test('00335_element_check_00312', () async {
      print("\n********** テスト実行：00335_element_check_00312 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line3;
      print(qcashier.screen2.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line3 = testData1s;
      print(qcashier.screen2.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line3 = testData2s;
      print(qcashier.screen2.line3);
      expect(qcashier.screen2.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line3 = defalut;
      print(qcashier.screen2.line3);
      expect(qcashier.screen2.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00335_element_check_00312 **********\n\n");
    });

    test('00336_element_check_00313', () async {
      print("\n********** テスト実行：00336_element_check_00313 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line4;
      print(qcashier.screen2.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line4 = testData1s;
      print(qcashier.screen2.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line4 = testData2s;
      print(qcashier.screen2.line4);
      expect(qcashier.screen2.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line4 = defalut;
      print(qcashier.screen2.line4);
      expect(qcashier.screen2.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00336_element_check_00313 **********\n\n");
    });

    test('00337_element_check_00314', () async {
      print("\n********** テスト実行：00337_element_check_00314 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line1_ex;
      print(qcashier.screen2.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line1_ex = testData1s;
      print(qcashier.screen2.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line1_ex = testData2s;
      print(qcashier.screen2.line1_ex);
      expect(qcashier.screen2.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line1_ex = defalut;
      print(qcashier.screen2.line1_ex);
      expect(qcashier.screen2.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00337_element_check_00314 **********\n\n");
    });

    test('00338_element_check_00315', () async {
      print("\n********** テスト実行：00338_element_check_00315 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line2_ex;
      print(qcashier.screen2.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line2_ex = testData1s;
      print(qcashier.screen2.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line2_ex = testData2s;
      print(qcashier.screen2.line2_ex);
      expect(qcashier.screen2.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line2_ex = defalut;
      print(qcashier.screen2.line2_ex);
      expect(qcashier.screen2.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00338_element_check_00315 **********\n\n");
    });

    test('00339_element_check_00316', () async {
      print("\n********** テスト実行：00339_element_check_00316 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line3_ex;
      print(qcashier.screen2.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line3_ex = testData1s;
      print(qcashier.screen2.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line3_ex = testData2s;
      print(qcashier.screen2.line3_ex);
      expect(qcashier.screen2.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line3_ex = defalut;
      print(qcashier.screen2.line3_ex);
      expect(qcashier.screen2.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00339_element_check_00316 **********\n\n");
    });

    test('00340_element_check_00317', () async {
      print("\n********** テスト実行：00340_element_check_00317 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.line4_ex;
      print(qcashier.screen2.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.line4_ex = testData1s;
      print(qcashier.screen2.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.line4_ex = testData2s;
      print(qcashier.screen2.line4_ex);
      expect(qcashier.screen2.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.line4_ex = defalut;
      print(qcashier.screen2.line4_ex);
      expect(qcashier.screen2.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00340_element_check_00317 **********\n\n");
    });

    test('00341_element_check_00318', () async {
      print("\n********** テスト実行：00341_element_check_00318 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.sound_led1;
      print(qcashier.screen2.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.sound_led1 = testData1;
      print(qcashier.screen2.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.sound_led1 = testData2;
      print(qcashier.screen2.sound_led1);
      expect(qcashier.screen2.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.sound_led1 = defalut;
      print(qcashier.screen2.sound_led1);
      expect(qcashier.screen2.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00341_element_check_00318 **********\n\n");
    });

    test('00342_element_check_00319', () async {
      print("\n********** テスト実行：00342_element_check_00319 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.sound_led2;
      print(qcashier.screen2.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.sound_led2 = testData1;
      print(qcashier.screen2.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.sound_led2 = testData2;
      print(qcashier.screen2.sound_led2);
      expect(qcashier.screen2.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.sound_led2 = defalut;
      print(qcashier.screen2.sound_led2);
      expect(qcashier.screen2.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00342_element_check_00319 **********\n\n");
    });

    test('00343_element_check_00320', () async {
      print("\n********** テスト実行：00343_element_check_00320 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen2.sound_led3;
      print(qcashier.screen2.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen2.sound_led3 = testData1;
      print(qcashier.screen2.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen2.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen2.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen2.sound_led3 = testData2;
      print(qcashier.screen2.sound_led3);
      expect(qcashier.screen2.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen2.sound_led3 = defalut;
      print(qcashier.screen2.sound_led3);
      expect(qcashier.screen2.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen2.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00343_element_check_00320 **********\n\n");
    });

    test('00344_element_check_00321', () async {
      print("\n********** テスト実行：00344_element_check_00321 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.title;
      print(qcashier.screen3.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.title = testData1s;
      print(qcashier.screen3.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.title = testData2s;
      print(qcashier.screen3.title);
      expect(qcashier.screen3.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.title = defalut;
      print(qcashier.screen3.title);
      expect(qcashier.screen3.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00344_element_check_00321 **********\n\n");
    });

    test('00345_element_check_00322', () async {
      print("\n********** テスト実行：00345_element_check_00322 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.msg1;
      print(qcashier.screen3.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.msg1 = testData1s;
      print(qcashier.screen3.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.msg1 = testData2s;
      print(qcashier.screen3.msg1);
      expect(qcashier.screen3.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.msg1 = defalut;
      print(qcashier.screen3.msg1);
      expect(qcashier.screen3.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00345_element_check_00322 **********\n\n");
    });

    test('00346_element_check_00323', () async {
      print("\n********** テスト実行：00346_element_check_00323 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.msg2;
      print(qcashier.screen3.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.msg2 = testData1s;
      print(qcashier.screen3.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.msg2 = testData2s;
      print(qcashier.screen3.msg2);
      expect(qcashier.screen3.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.msg2 = defalut;
      print(qcashier.screen3.msg2);
      expect(qcashier.screen3.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00346_element_check_00323 **********\n\n");
    });

    test('00347_element_check_00324', () async {
      print("\n********** テスト実行：00347_element_check_00324 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.msg1_size;
      print(qcashier.screen3.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.msg1_size = testData1;
      print(qcashier.screen3.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.msg1_size = testData2;
      print(qcashier.screen3.msg1_size);
      expect(qcashier.screen3.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.msg1_size = defalut;
      print(qcashier.screen3.msg1_size);
      expect(qcashier.screen3.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00347_element_check_00324 **********\n\n");
    });

    test('00348_element_check_00325', () async {
      print("\n********** テスト実行：00348_element_check_00325 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.msg2_size;
      print(qcashier.screen3.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.msg2_size = testData1;
      print(qcashier.screen3.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.msg2_size = testData2;
      print(qcashier.screen3.msg2_size);
      expect(qcashier.screen3.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.msg2_size = defalut;
      print(qcashier.screen3.msg2_size);
      expect(qcashier.screen3.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00348_element_check_00325 **********\n\n");
    });

    test('00349_element_check_00326', () async {
      print("\n********** テスト実行：00349_element_check_00326 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.sound1;
      print(qcashier.screen3.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.sound1 = testData1;
      print(qcashier.screen3.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.sound1 = testData2;
      print(qcashier.screen3.sound1);
      expect(qcashier.screen3.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.sound1 = defalut;
      print(qcashier.screen3.sound1);
      expect(qcashier.screen3.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00349_element_check_00326 **********\n\n");
    });

    test('00350_element_check_00327', () async {
      print("\n********** テスト実行：00350_element_check_00327 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.sound2;
      print(qcashier.screen3.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.sound2 = testData1;
      print(qcashier.screen3.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.sound2 = testData2;
      print(qcashier.screen3.sound2);
      expect(qcashier.screen3.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.sound2 = defalut;
      print(qcashier.screen3.sound2);
      expect(qcashier.screen3.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00350_element_check_00327 **********\n\n");
    });

    test('00351_element_check_00328', () async {
      print("\n********** テスト実行：00351_element_check_00328 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.sound3;
      print(qcashier.screen3.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.sound3 = testData1;
      print(qcashier.screen3.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.sound3 = testData2;
      print(qcashier.screen3.sound3);
      expect(qcashier.screen3.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.sound3 = defalut;
      print(qcashier.screen3.sound3);
      expect(qcashier.screen3.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00351_element_check_00328 **********\n\n");
    });

    test('00352_element_check_00329', () async {
      print("\n********** テスト実行：00352_element_check_00329 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.snd_timer;
      print(qcashier.screen3.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.snd_timer = testData1;
      print(qcashier.screen3.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.snd_timer = testData2;
      print(qcashier.screen3.snd_timer);
      expect(qcashier.screen3.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.snd_timer = defalut;
      print(qcashier.screen3.snd_timer);
      expect(qcashier.screen3.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00352_element_check_00329 **********\n\n");
    });

    test('00353_element_check_00330', () async {
      print("\n********** テスト実行：00353_element_check_00330 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.timer1;
      print(qcashier.screen3.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.timer1 = testData1;
      print(qcashier.screen3.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.timer1 = testData2;
      print(qcashier.screen3.timer1);
      expect(qcashier.screen3.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.timer1 = defalut;
      print(qcashier.screen3.timer1);
      expect(qcashier.screen3.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00353_element_check_00330 **********\n\n");
    });

    test('00354_element_check_00331', () async {
      print("\n********** テスト実行：00354_element_check_00331 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.timer2;
      print(qcashier.screen3.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.timer2 = testData1;
      print(qcashier.screen3.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.timer2 = testData2;
      print(qcashier.screen3.timer2);
      expect(qcashier.screen3.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.timer2 = defalut;
      print(qcashier.screen3.timer2);
      expect(qcashier.screen3.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00354_element_check_00331 **********\n\n");
    });

    test('00355_element_check_00332', () async {
      print("\n********** テスト実行：00355_element_check_00332 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.timer3;
      print(qcashier.screen3.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.timer3 = testData1;
      print(qcashier.screen3.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.timer3 = testData2;
      print(qcashier.screen3.timer3);
      expect(qcashier.screen3.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.timer3 = defalut;
      print(qcashier.screen3.timer3);
      expect(qcashier.screen3.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00355_element_check_00332 **********\n\n");
    });

    test('00356_element_check_00333', () async {
      print("\n********** テスト実行：00356_element_check_00333 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.dsp_flg1;
      print(qcashier.screen3.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.dsp_flg1 = testData1;
      print(qcashier.screen3.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.dsp_flg1 = testData2;
      print(qcashier.screen3.dsp_flg1);
      expect(qcashier.screen3.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.dsp_flg1 = defalut;
      print(qcashier.screen3.dsp_flg1);
      expect(qcashier.screen3.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00356_element_check_00333 **********\n\n");
    });

    test('00357_element_check_00334', () async {
      print("\n********** テスト実行：00357_element_check_00334 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.dsp_flg2;
      print(qcashier.screen3.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.dsp_flg2 = testData1;
      print(qcashier.screen3.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.dsp_flg2 = testData2;
      print(qcashier.screen3.dsp_flg2);
      expect(qcashier.screen3.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.dsp_flg2 = defalut;
      print(qcashier.screen3.dsp_flg2);
      expect(qcashier.screen3.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00357_element_check_00334 **********\n\n");
    });

    test('00358_element_check_00335', () async {
      print("\n********** テスト実行：00358_element_check_00335 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.movie01_ext;
      print(qcashier.screen3.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.movie01_ext = testData1;
      print(qcashier.screen3.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.movie01_ext = testData2;
      print(qcashier.screen3.movie01_ext);
      expect(qcashier.screen3.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.movie01_ext = defalut;
      print(qcashier.screen3.movie01_ext);
      expect(qcashier.screen3.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00358_element_check_00335 **********\n\n");
    });

    test('00359_element_check_00336', () async {
      print("\n********** テスト実行：00359_element_check_00336 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.movie02_ext;
      print(qcashier.screen3.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.movie02_ext = testData1;
      print(qcashier.screen3.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.movie02_ext = testData2;
      print(qcashier.screen3.movie02_ext);
      expect(qcashier.screen3.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.movie02_ext = defalut;
      print(qcashier.screen3.movie02_ext);
      expect(qcashier.screen3.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00359_element_check_00336 **********\n\n");
    });

    test('00360_element_check_00337', () async {
      print("\n********** テスト実行：00360_element_check_00337 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.movie03_ext;
      print(qcashier.screen3.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.movie03_ext = testData1;
      print(qcashier.screen3.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.movie03_ext = testData2;
      print(qcashier.screen3.movie03_ext);
      expect(qcashier.screen3.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.movie03_ext = defalut;
      print(qcashier.screen3.movie03_ext);
      expect(qcashier.screen3.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00360_element_check_00337 **********\n\n");
    });

    test('00361_element_check_00338', () async {
      print("\n********** テスト実行：00361_element_check_00338 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.movie04_ext;
      print(qcashier.screen3.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.movie04_ext = testData1;
      print(qcashier.screen3.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.movie04_ext = testData2;
      print(qcashier.screen3.movie04_ext);
      expect(qcashier.screen3.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.movie04_ext = defalut;
      print(qcashier.screen3.movie04_ext);
      expect(qcashier.screen3.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00361_element_check_00338 **********\n\n");
    });

    test('00362_element_check_00339', () async {
      print("\n********** テスト実行：00362_element_check_00339 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line_title;
      print(qcashier.screen3.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line_title = testData1s;
      print(qcashier.screen3.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line_title = testData2s;
      print(qcashier.screen3.line_title);
      expect(qcashier.screen3.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line_title = defalut;
      print(qcashier.screen3.line_title);
      expect(qcashier.screen3.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00362_element_check_00339 **********\n\n");
    });

    test('00363_element_check_00340', () async {
      print("\n********** テスト実行：00363_element_check_00340 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line_title_ex;
      print(qcashier.screen3.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line_title_ex = testData1s;
      print(qcashier.screen3.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line_title_ex = testData2s;
      print(qcashier.screen3.line_title_ex);
      expect(qcashier.screen3.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line_title_ex = defalut;
      print(qcashier.screen3.line_title_ex);
      expect(qcashier.screen3.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00363_element_check_00340 **********\n\n");
    });

    test('00364_element_check_00341', () async {
      print("\n********** テスト実行：00364_element_check_00341 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line1;
      print(qcashier.screen3.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line1 = testData1s;
      print(qcashier.screen3.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line1 = testData2s;
      print(qcashier.screen3.line1);
      expect(qcashier.screen3.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line1 = defalut;
      print(qcashier.screen3.line1);
      expect(qcashier.screen3.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00364_element_check_00341 **********\n\n");
    });

    test('00365_element_check_00342', () async {
      print("\n********** テスト実行：00365_element_check_00342 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line2;
      print(qcashier.screen3.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line2 = testData1s;
      print(qcashier.screen3.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line2 = testData2s;
      print(qcashier.screen3.line2);
      expect(qcashier.screen3.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line2 = defalut;
      print(qcashier.screen3.line2);
      expect(qcashier.screen3.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00365_element_check_00342 **********\n\n");
    });

    test('00366_element_check_00343', () async {
      print("\n********** テスト実行：00366_element_check_00343 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line3;
      print(qcashier.screen3.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line3 = testData1s;
      print(qcashier.screen3.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line3 = testData2s;
      print(qcashier.screen3.line3);
      expect(qcashier.screen3.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line3 = defalut;
      print(qcashier.screen3.line3);
      expect(qcashier.screen3.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00366_element_check_00343 **********\n\n");
    });

    test('00367_element_check_00344', () async {
      print("\n********** テスト実行：00367_element_check_00344 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line4;
      print(qcashier.screen3.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line4 = testData1s;
      print(qcashier.screen3.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line4 = testData2s;
      print(qcashier.screen3.line4);
      expect(qcashier.screen3.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line4 = defalut;
      print(qcashier.screen3.line4);
      expect(qcashier.screen3.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00367_element_check_00344 **********\n\n");
    });

    test('00368_element_check_00345', () async {
      print("\n********** テスト実行：00368_element_check_00345 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line1_ex;
      print(qcashier.screen3.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line1_ex = testData1s;
      print(qcashier.screen3.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line1_ex = testData2s;
      print(qcashier.screen3.line1_ex);
      expect(qcashier.screen3.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line1_ex = defalut;
      print(qcashier.screen3.line1_ex);
      expect(qcashier.screen3.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00368_element_check_00345 **********\n\n");
    });

    test('00369_element_check_00346', () async {
      print("\n********** テスト実行：00369_element_check_00346 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line2_ex;
      print(qcashier.screen3.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line2_ex = testData1s;
      print(qcashier.screen3.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line2_ex = testData2s;
      print(qcashier.screen3.line2_ex);
      expect(qcashier.screen3.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line2_ex = defalut;
      print(qcashier.screen3.line2_ex);
      expect(qcashier.screen3.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00369_element_check_00346 **********\n\n");
    });

    test('00370_element_check_00347', () async {
      print("\n********** テスト実行：00370_element_check_00347 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line3_ex;
      print(qcashier.screen3.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line3_ex = testData1s;
      print(qcashier.screen3.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line3_ex = testData2s;
      print(qcashier.screen3.line3_ex);
      expect(qcashier.screen3.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line3_ex = defalut;
      print(qcashier.screen3.line3_ex);
      expect(qcashier.screen3.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00370_element_check_00347 **********\n\n");
    });

    test('00371_element_check_00348', () async {
      print("\n********** テスト実行：00371_element_check_00348 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.line4_ex;
      print(qcashier.screen3.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.line4_ex = testData1s;
      print(qcashier.screen3.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.line4_ex = testData2s;
      print(qcashier.screen3.line4_ex);
      expect(qcashier.screen3.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.line4_ex = defalut;
      print(qcashier.screen3.line4_ex);
      expect(qcashier.screen3.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00371_element_check_00348 **********\n\n");
    });

    test('00372_element_check_00349', () async {
      print("\n********** テスト実行：00372_element_check_00349 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.sound_led1;
      print(qcashier.screen3.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.sound_led1 = testData1;
      print(qcashier.screen3.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.sound_led1 = testData2;
      print(qcashier.screen3.sound_led1);
      expect(qcashier.screen3.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.sound_led1 = defalut;
      print(qcashier.screen3.sound_led1);
      expect(qcashier.screen3.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00372_element_check_00349 **********\n\n");
    });

    test('00373_element_check_00350', () async {
      print("\n********** テスト実行：00373_element_check_00350 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.sound_led2;
      print(qcashier.screen3.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.sound_led2 = testData1;
      print(qcashier.screen3.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.sound_led2 = testData2;
      print(qcashier.screen3.sound_led2);
      expect(qcashier.screen3.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.sound_led2 = defalut;
      print(qcashier.screen3.sound_led2);
      expect(qcashier.screen3.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00373_element_check_00350 **********\n\n");
    });

    test('00374_element_check_00351', () async {
      print("\n********** テスト実行：00374_element_check_00351 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen3.sound_led3;
      print(qcashier.screen3.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen3.sound_led3 = testData1;
      print(qcashier.screen3.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen3.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen3.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen3.sound_led3 = testData2;
      print(qcashier.screen3.sound_led3);
      expect(qcashier.screen3.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen3.sound_led3 = defalut;
      print(qcashier.screen3.sound_led3);
      expect(qcashier.screen3.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen3.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00374_element_check_00351 **********\n\n");
    });

    test('00375_element_check_00352', () async {
      print("\n********** テスト実行：00375_element_check_00352 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.title;
      print(qcashier.screen4.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.title = testData1s;
      print(qcashier.screen4.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.title = testData2s;
      print(qcashier.screen4.title);
      expect(qcashier.screen4.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.title = defalut;
      print(qcashier.screen4.title);
      expect(qcashier.screen4.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00375_element_check_00352 **********\n\n");
    });

    test('00376_element_check_00353', () async {
      print("\n********** テスト実行：00376_element_check_00353 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.msg1;
      print(qcashier.screen4.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.msg1 = testData1s;
      print(qcashier.screen4.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.msg1 = testData2s;
      print(qcashier.screen4.msg1);
      expect(qcashier.screen4.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.msg1 = defalut;
      print(qcashier.screen4.msg1);
      expect(qcashier.screen4.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00376_element_check_00353 **********\n\n");
    });

    test('00377_element_check_00354', () async {
      print("\n********** テスト実行：00377_element_check_00354 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.msg2;
      print(qcashier.screen4.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.msg2 = testData1s;
      print(qcashier.screen4.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.msg2 = testData2s;
      print(qcashier.screen4.msg2);
      expect(qcashier.screen4.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.msg2 = defalut;
      print(qcashier.screen4.msg2);
      expect(qcashier.screen4.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00377_element_check_00354 **********\n\n");
    });

    test('00378_element_check_00355', () async {
      print("\n********** テスト実行：00378_element_check_00355 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.msg1_size;
      print(qcashier.screen4.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.msg1_size = testData1;
      print(qcashier.screen4.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.msg1_size = testData2;
      print(qcashier.screen4.msg1_size);
      expect(qcashier.screen4.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.msg1_size = defalut;
      print(qcashier.screen4.msg1_size);
      expect(qcashier.screen4.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00378_element_check_00355 **********\n\n");
    });

    test('00379_element_check_00356', () async {
      print("\n********** テスト実行：00379_element_check_00356 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.msg2_size;
      print(qcashier.screen4.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.msg2_size = testData1;
      print(qcashier.screen4.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.msg2_size = testData2;
      print(qcashier.screen4.msg2_size);
      expect(qcashier.screen4.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.msg2_size = defalut;
      print(qcashier.screen4.msg2_size);
      expect(qcashier.screen4.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00379_element_check_00356 **********\n\n");
    });

    test('00380_element_check_00357', () async {
      print("\n********** テスト実行：00380_element_check_00357 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.sound1;
      print(qcashier.screen4.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.sound1 = testData1;
      print(qcashier.screen4.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.sound1 = testData2;
      print(qcashier.screen4.sound1);
      expect(qcashier.screen4.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.sound1 = defalut;
      print(qcashier.screen4.sound1);
      expect(qcashier.screen4.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00380_element_check_00357 **********\n\n");
    });

    test('00381_element_check_00358', () async {
      print("\n********** テスト実行：00381_element_check_00358 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.sound2;
      print(qcashier.screen4.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.sound2 = testData1;
      print(qcashier.screen4.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.sound2 = testData2;
      print(qcashier.screen4.sound2);
      expect(qcashier.screen4.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.sound2 = defalut;
      print(qcashier.screen4.sound2);
      expect(qcashier.screen4.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00381_element_check_00358 **********\n\n");
    });

    test('00382_element_check_00359', () async {
      print("\n********** テスト実行：00382_element_check_00359 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.sound3;
      print(qcashier.screen4.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.sound3 = testData1;
      print(qcashier.screen4.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.sound3 = testData2;
      print(qcashier.screen4.sound3);
      expect(qcashier.screen4.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.sound3 = defalut;
      print(qcashier.screen4.sound3);
      expect(qcashier.screen4.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00382_element_check_00359 **********\n\n");
    });

    test('00383_element_check_00360', () async {
      print("\n********** テスト実行：00383_element_check_00360 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.snd_timer;
      print(qcashier.screen4.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.snd_timer = testData1;
      print(qcashier.screen4.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.snd_timer = testData2;
      print(qcashier.screen4.snd_timer);
      expect(qcashier.screen4.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.snd_timer = defalut;
      print(qcashier.screen4.snd_timer);
      expect(qcashier.screen4.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00383_element_check_00360 **********\n\n");
    });

    test('00384_element_check_00361', () async {
      print("\n********** テスト実行：00384_element_check_00361 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.timer1;
      print(qcashier.screen4.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.timer1 = testData1;
      print(qcashier.screen4.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.timer1 = testData2;
      print(qcashier.screen4.timer1);
      expect(qcashier.screen4.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.timer1 = defalut;
      print(qcashier.screen4.timer1);
      expect(qcashier.screen4.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00384_element_check_00361 **********\n\n");
    });

    test('00385_element_check_00362', () async {
      print("\n********** テスト実行：00385_element_check_00362 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.timer2;
      print(qcashier.screen4.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.timer2 = testData1;
      print(qcashier.screen4.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.timer2 = testData2;
      print(qcashier.screen4.timer2);
      expect(qcashier.screen4.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.timer2 = defalut;
      print(qcashier.screen4.timer2);
      expect(qcashier.screen4.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00385_element_check_00362 **********\n\n");
    });

    test('00386_element_check_00363', () async {
      print("\n********** テスト実行：00386_element_check_00363 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.timer3;
      print(qcashier.screen4.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.timer3 = testData1;
      print(qcashier.screen4.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.timer3 = testData2;
      print(qcashier.screen4.timer3);
      expect(qcashier.screen4.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.timer3 = defalut;
      print(qcashier.screen4.timer3);
      expect(qcashier.screen4.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00386_element_check_00363 **********\n\n");
    });

    test('00387_element_check_00364', () async {
      print("\n********** テスト実行：00387_element_check_00364 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.dsp_flg1;
      print(qcashier.screen4.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.dsp_flg1 = testData1;
      print(qcashier.screen4.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.dsp_flg1 = testData2;
      print(qcashier.screen4.dsp_flg1);
      expect(qcashier.screen4.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.dsp_flg1 = defalut;
      print(qcashier.screen4.dsp_flg1);
      expect(qcashier.screen4.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00387_element_check_00364 **********\n\n");
    });

    test('00388_element_check_00365', () async {
      print("\n********** テスト実行：00388_element_check_00365 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.dsp_flg2;
      print(qcashier.screen4.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.dsp_flg2 = testData1;
      print(qcashier.screen4.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.dsp_flg2 = testData2;
      print(qcashier.screen4.dsp_flg2);
      expect(qcashier.screen4.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.dsp_flg2 = defalut;
      print(qcashier.screen4.dsp_flg2);
      expect(qcashier.screen4.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00388_element_check_00365 **********\n\n");
    });

    test('00389_element_check_00366', () async {
      print("\n********** テスト実行：00389_element_check_00366 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.movie01_ext;
      print(qcashier.screen4.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.movie01_ext = testData1;
      print(qcashier.screen4.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.movie01_ext = testData2;
      print(qcashier.screen4.movie01_ext);
      expect(qcashier.screen4.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.movie01_ext = defalut;
      print(qcashier.screen4.movie01_ext);
      expect(qcashier.screen4.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00389_element_check_00366 **********\n\n");
    });

    test('00390_element_check_00367', () async {
      print("\n********** テスト実行：00390_element_check_00367 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.movie02_ext;
      print(qcashier.screen4.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.movie02_ext = testData1;
      print(qcashier.screen4.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.movie02_ext = testData2;
      print(qcashier.screen4.movie02_ext);
      expect(qcashier.screen4.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.movie02_ext = defalut;
      print(qcashier.screen4.movie02_ext);
      expect(qcashier.screen4.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00390_element_check_00367 **********\n\n");
    });

    test('00391_element_check_00368', () async {
      print("\n********** テスト実行：00391_element_check_00368 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.movie03_ext;
      print(qcashier.screen4.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.movie03_ext = testData1;
      print(qcashier.screen4.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.movie03_ext = testData2;
      print(qcashier.screen4.movie03_ext);
      expect(qcashier.screen4.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.movie03_ext = defalut;
      print(qcashier.screen4.movie03_ext);
      expect(qcashier.screen4.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00391_element_check_00368 **********\n\n");
    });

    test('00392_element_check_00369', () async {
      print("\n********** テスト実行：00392_element_check_00369 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.movie04_ext;
      print(qcashier.screen4.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.movie04_ext = testData1;
      print(qcashier.screen4.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.movie04_ext = testData2;
      print(qcashier.screen4.movie04_ext);
      expect(qcashier.screen4.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.movie04_ext = defalut;
      print(qcashier.screen4.movie04_ext);
      expect(qcashier.screen4.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00392_element_check_00369 **********\n\n");
    });

    test('00393_element_check_00370', () async {
      print("\n********** テスト実行：00393_element_check_00370 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line_title;
      print(qcashier.screen4.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line_title = testData1s;
      print(qcashier.screen4.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line_title = testData2s;
      print(qcashier.screen4.line_title);
      expect(qcashier.screen4.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line_title = defalut;
      print(qcashier.screen4.line_title);
      expect(qcashier.screen4.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00393_element_check_00370 **********\n\n");
    });

    test('00394_element_check_00371', () async {
      print("\n********** テスト実行：00394_element_check_00371 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line_title_ex;
      print(qcashier.screen4.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line_title_ex = testData1s;
      print(qcashier.screen4.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line_title_ex = testData2s;
      print(qcashier.screen4.line_title_ex);
      expect(qcashier.screen4.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line_title_ex = defalut;
      print(qcashier.screen4.line_title_ex);
      expect(qcashier.screen4.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00394_element_check_00371 **********\n\n");
    });

    test('00395_element_check_00372', () async {
      print("\n********** テスト実行：00395_element_check_00372 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line1;
      print(qcashier.screen4.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line1 = testData1s;
      print(qcashier.screen4.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line1 = testData2s;
      print(qcashier.screen4.line1);
      expect(qcashier.screen4.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line1 = defalut;
      print(qcashier.screen4.line1);
      expect(qcashier.screen4.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00395_element_check_00372 **********\n\n");
    });

    test('00396_element_check_00373', () async {
      print("\n********** テスト実行：00396_element_check_00373 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line2;
      print(qcashier.screen4.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line2 = testData1s;
      print(qcashier.screen4.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line2 = testData2s;
      print(qcashier.screen4.line2);
      expect(qcashier.screen4.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line2 = defalut;
      print(qcashier.screen4.line2);
      expect(qcashier.screen4.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00396_element_check_00373 **********\n\n");
    });

    test('00397_element_check_00374', () async {
      print("\n********** テスト実行：00397_element_check_00374 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line3;
      print(qcashier.screen4.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line3 = testData1s;
      print(qcashier.screen4.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line3 = testData2s;
      print(qcashier.screen4.line3);
      expect(qcashier.screen4.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line3 = defalut;
      print(qcashier.screen4.line3);
      expect(qcashier.screen4.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00397_element_check_00374 **********\n\n");
    });

    test('00398_element_check_00375', () async {
      print("\n********** テスト実行：00398_element_check_00375 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line4;
      print(qcashier.screen4.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line4 = testData1s;
      print(qcashier.screen4.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line4 = testData2s;
      print(qcashier.screen4.line4);
      expect(qcashier.screen4.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line4 = defalut;
      print(qcashier.screen4.line4);
      expect(qcashier.screen4.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00398_element_check_00375 **********\n\n");
    });

    test('00399_element_check_00376', () async {
      print("\n********** テスト実行：00399_element_check_00376 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line1_ex;
      print(qcashier.screen4.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line1_ex = testData1s;
      print(qcashier.screen4.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line1_ex = testData2s;
      print(qcashier.screen4.line1_ex);
      expect(qcashier.screen4.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line1_ex = defalut;
      print(qcashier.screen4.line1_ex);
      expect(qcashier.screen4.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00399_element_check_00376 **********\n\n");
    });

    test('00400_element_check_00377', () async {
      print("\n********** テスト実行：00400_element_check_00377 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line2_ex;
      print(qcashier.screen4.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line2_ex = testData1s;
      print(qcashier.screen4.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line2_ex = testData2s;
      print(qcashier.screen4.line2_ex);
      expect(qcashier.screen4.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line2_ex = defalut;
      print(qcashier.screen4.line2_ex);
      expect(qcashier.screen4.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00400_element_check_00377 **********\n\n");
    });

    test('00401_element_check_00378', () async {
      print("\n********** テスト実行：00401_element_check_00378 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line3_ex;
      print(qcashier.screen4.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line3_ex = testData1s;
      print(qcashier.screen4.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line3_ex = testData2s;
      print(qcashier.screen4.line3_ex);
      expect(qcashier.screen4.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line3_ex = defalut;
      print(qcashier.screen4.line3_ex);
      expect(qcashier.screen4.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00401_element_check_00378 **********\n\n");
    });

    test('00402_element_check_00379', () async {
      print("\n********** テスト実行：00402_element_check_00379 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.line4_ex;
      print(qcashier.screen4.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.line4_ex = testData1s;
      print(qcashier.screen4.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.line4_ex = testData2s;
      print(qcashier.screen4.line4_ex);
      expect(qcashier.screen4.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.line4_ex = defalut;
      print(qcashier.screen4.line4_ex);
      expect(qcashier.screen4.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00402_element_check_00379 **********\n\n");
    });

    test('00403_element_check_00380', () async {
      print("\n********** テスト実行：00403_element_check_00380 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.sound_led1;
      print(qcashier.screen4.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.sound_led1 = testData1;
      print(qcashier.screen4.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.sound_led1 = testData2;
      print(qcashier.screen4.sound_led1);
      expect(qcashier.screen4.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.sound_led1 = defalut;
      print(qcashier.screen4.sound_led1);
      expect(qcashier.screen4.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00403_element_check_00380 **********\n\n");
    });

    test('00404_element_check_00381', () async {
      print("\n********** テスト実行：00404_element_check_00381 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.sound_led2;
      print(qcashier.screen4.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.sound_led2 = testData1;
      print(qcashier.screen4.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.sound_led2 = testData2;
      print(qcashier.screen4.sound_led2);
      expect(qcashier.screen4.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.sound_led2 = defalut;
      print(qcashier.screen4.sound_led2);
      expect(qcashier.screen4.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00404_element_check_00381 **********\n\n");
    });

    test('00405_element_check_00382', () async {
      print("\n********** テスト実行：00405_element_check_00382 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen4.sound_led3;
      print(qcashier.screen4.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen4.sound_led3 = testData1;
      print(qcashier.screen4.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen4.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen4.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen4.sound_led3 = testData2;
      print(qcashier.screen4.sound_led3);
      expect(qcashier.screen4.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen4.sound_led3 = defalut;
      print(qcashier.screen4.sound_led3);
      expect(qcashier.screen4.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen4.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00405_element_check_00382 **********\n\n");
    });

    test('00406_element_check_00383', () async {
      print("\n********** テスト実行：00406_element_check_00383 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.title;
      print(qcashier.screen5.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.title = testData1s;
      print(qcashier.screen5.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.title = testData2s;
      print(qcashier.screen5.title);
      expect(qcashier.screen5.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.title = defalut;
      print(qcashier.screen5.title);
      expect(qcashier.screen5.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00406_element_check_00383 **********\n\n");
    });

    test('00407_element_check_00384', () async {
      print("\n********** テスト実行：00407_element_check_00384 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.msg1;
      print(qcashier.screen5.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.msg1 = testData1s;
      print(qcashier.screen5.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.msg1 = testData2s;
      print(qcashier.screen5.msg1);
      expect(qcashier.screen5.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.msg1 = defalut;
      print(qcashier.screen5.msg1);
      expect(qcashier.screen5.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00407_element_check_00384 **********\n\n");
    });

    test('00408_element_check_00385', () async {
      print("\n********** テスト実行：00408_element_check_00385 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.msg2;
      print(qcashier.screen5.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.msg2 = testData1s;
      print(qcashier.screen5.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.msg2 = testData2s;
      print(qcashier.screen5.msg2);
      expect(qcashier.screen5.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.msg2 = defalut;
      print(qcashier.screen5.msg2);
      expect(qcashier.screen5.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00408_element_check_00385 **********\n\n");
    });

    test('00409_element_check_00386', () async {
      print("\n********** テスト実行：00409_element_check_00386 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.msg1_size;
      print(qcashier.screen5.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.msg1_size = testData1;
      print(qcashier.screen5.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.msg1_size = testData2;
      print(qcashier.screen5.msg1_size);
      expect(qcashier.screen5.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.msg1_size = defalut;
      print(qcashier.screen5.msg1_size);
      expect(qcashier.screen5.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00409_element_check_00386 **********\n\n");
    });

    test('00410_element_check_00387', () async {
      print("\n********** テスト実行：00410_element_check_00387 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.msg2_size;
      print(qcashier.screen5.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.msg2_size = testData1;
      print(qcashier.screen5.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.msg2_size = testData2;
      print(qcashier.screen5.msg2_size);
      expect(qcashier.screen5.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.msg2_size = defalut;
      print(qcashier.screen5.msg2_size);
      expect(qcashier.screen5.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00410_element_check_00387 **********\n\n");
    });

    test('00411_element_check_00388', () async {
      print("\n********** テスト実行：00411_element_check_00388 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.sound1;
      print(qcashier.screen5.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.sound1 = testData1;
      print(qcashier.screen5.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.sound1 = testData2;
      print(qcashier.screen5.sound1);
      expect(qcashier.screen5.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.sound1 = defalut;
      print(qcashier.screen5.sound1);
      expect(qcashier.screen5.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00411_element_check_00388 **********\n\n");
    });

    test('00412_element_check_00389', () async {
      print("\n********** テスト実行：00412_element_check_00389 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.sound2;
      print(qcashier.screen5.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.sound2 = testData1s;
      print(qcashier.screen5.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.sound2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.sound2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.sound2 = testData2s;
      print(qcashier.screen5.sound2);
      expect(qcashier.screen5.sound2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.sound2 = defalut;
      print(qcashier.screen5.sound2);
      expect(qcashier.screen5.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00412_element_check_00389 **********\n\n");
    });

    test('00413_element_check_00390', () async {
      print("\n********** テスト実行：00413_element_check_00390 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.sound3;
      print(qcashier.screen5.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.sound3 = testData1;
      print(qcashier.screen5.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.sound3 = testData2;
      print(qcashier.screen5.sound3);
      expect(qcashier.screen5.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.sound3 = defalut;
      print(qcashier.screen5.sound3);
      expect(qcashier.screen5.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00413_element_check_00390 **********\n\n");
    });

    test('00414_element_check_00391', () async {
      print("\n********** テスト実行：00414_element_check_00391 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.snd_timer;
      print(qcashier.screen5.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.snd_timer = testData1;
      print(qcashier.screen5.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.snd_timer = testData2;
      print(qcashier.screen5.snd_timer);
      expect(qcashier.screen5.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.snd_timer = defalut;
      print(qcashier.screen5.snd_timer);
      expect(qcashier.screen5.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00414_element_check_00391 **********\n\n");
    });

    test('00415_element_check_00392', () async {
      print("\n********** テスト実行：00415_element_check_00392 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.timer1;
      print(qcashier.screen5.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.timer1 = testData1;
      print(qcashier.screen5.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.timer1 = testData2;
      print(qcashier.screen5.timer1);
      expect(qcashier.screen5.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.timer1 = defalut;
      print(qcashier.screen5.timer1);
      expect(qcashier.screen5.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00415_element_check_00392 **********\n\n");
    });

    test('00416_element_check_00393', () async {
      print("\n********** テスト実行：00416_element_check_00393 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.timer2;
      print(qcashier.screen5.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.timer2 = testData1;
      print(qcashier.screen5.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.timer2 = testData2;
      print(qcashier.screen5.timer2);
      expect(qcashier.screen5.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.timer2 = defalut;
      print(qcashier.screen5.timer2);
      expect(qcashier.screen5.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00416_element_check_00393 **********\n\n");
    });

    test('00417_element_check_00394', () async {
      print("\n********** テスト実行：00417_element_check_00394 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.timer3;
      print(qcashier.screen5.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.timer3 = testData1;
      print(qcashier.screen5.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.timer3 = testData2;
      print(qcashier.screen5.timer3);
      expect(qcashier.screen5.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.timer3 = defalut;
      print(qcashier.screen5.timer3);
      expect(qcashier.screen5.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00417_element_check_00394 **********\n\n");
    });

    test('00418_element_check_00395', () async {
      print("\n********** テスト実行：00418_element_check_00395 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.dsp_flg1;
      print(qcashier.screen5.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.dsp_flg1 = testData1;
      print(qcashier.screen5.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.dsp_flg1 = testData2;
      print(qcashier.screen5.dsp_flg1);
      expect(qcashier.screen5.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.dsp_flg1 = defalut;
      print(qcashier.screen5.dsp_flg1);
      expect(qcashier.screen5.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00418_element_check_00395 **********\n\n");
    });

    test('00419_element_check_00396', () async {
      print("\n********** テスト実行：00419_element_check_00396 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.dsp_flg2;
      print(qcashier.screen5.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.dsp_flg2 = testData1;
      print(qcashier.screen5.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.dsp_flg2 = testData2;
      print(qcashier.screen5.dsp_flg2);
      expect(qcashier.screen5.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.dsp_flg2 = defalut;
      print(qcashier.screen5.dsp_flg2);
      expect(qcashier.screen5.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00419_element_check_00396 **********\n\n");
    });

    test('00420_element_check_00397', () async {
      print("\n********** テスト実行：00420_element_check_00397 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.movie01_ext;
      print(qcashier.screen5.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.movie01_ext = testData1;
      print(qcashier.screen5.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.movie01_ext = testData2;
      print(qcashier.screen5.movie01_ext);
      expect(qcashier.screen5.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.movie01_ext = defalut;
      print(qcashier.screen5.movie01_ext);
      expect(qcashier.screen5.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00420_element_check_00397 **********\n\n");
    });

    test('00421_element_check_00398', () async {
      print("\n********** テスト実行：00421_element_check_00398 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.movie02_ext;
      print(qcashier.screen5.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.movie02_ext = testData1;
      print(qcashier.screen5.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.movie02_ext = testData2;
      print(qcashier.screen5.movie02_ext);
      expect(qcashier.screen5.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.movie02_ext = defalut;
      print(qcashier.screen5.movie02_ext);
      expect(qcashier.screen5.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00421_element_check_00398 **********\n\n");
    });

    test('00422_element_check_00399', () async {
      print("\n********** テスト実行：00422_element_check_00399 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.movie03_ext;
      print(qcashier.screen5.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.movie03_ext = testData1;
      print(qcashier.screen5.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.movie03_ext = testData2;
      print(qcashier.screen5.movie03_ext);
      expect(qcashier.screen5.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.movie03_ext = defalut;
      print(qcashier.screen5.movie03_ext);
      expect(qcashier.screen5.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00422_element_check_00399 **********\n\n");
    });

    test('00423_element_check_00400', () async {
      print("\n********** テスト実行：00423_element_check_00400 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.movie04_ext;
      print(qcashier.screen5.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.movie04_ext = testData1;
      print(qcashier.screen5.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.movie04_ext = testData2;
      print(qcashier.screen5.movie04_ext);
      expect(qcashier.screen5.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.movie04_ext = defalut;
      print(qcashier.screen5.movie04_ext);
      expect(qcashier.screen5.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00423_element_check_00400 **********\n\n");
    });

    test('00424_element_check_00401', () async {
      print("\n********** テスト実行：00424_element_check_00401 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line_title;
      print(qcashier.screen5.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line_title = testData1s;
      print(qcashier.screen5.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line_title = testData2s;
      print(qcashier.screen5.line_title);
      expect(qcashier.screen5.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line_title = defalut;
      print(qcashier.screen5.line_title);
      expect(qcashier.screen5.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00424_element_check_00401 **********\n\n");
    });

    test('00425_element_check_00402', () async {
      print("\n********** テスト実行：00425_element_check_00402 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line_title_ex;
      print(qcashier.screen5.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line_title_ex = testData1s;
      print(qcashier.screen5.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line_title_ex = testData2s;
      print(qcashier.screen5.line_title_ex);
      expect(qcashier.screen5.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line_title_ex = defalut;
      print(qcashier.screen5.line_title_ex);
      expect(qcashier.screen5.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00425_element_check_00402 **********\n\n");
    });

    test('00426_element_check_00403', () async {
      print("\n********** テスト実行：00426_element_check_00403 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line1;
      print(qcashier.screen5.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line1 = testData1s;
      print(qcashier.screen5.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line1 = testData2s;
      print(qcashier.screen5.line1);
      expect(qcashier.screen5.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line1 = defalut;
      print(qcashier.screen5.line1);
      expect(qcashier.screen5.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00426_element_check_00403 **********\n\n");
    });

    test('00427_element_check_00404', () async {
      print("\n********** テスト実行：00427_element_check_00404 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line2;
      print(qcashier.screen5.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line2 = testData1s;
      print(qcashier.screen5.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line2 = testData2s;
      print(qcashier.screen5.line2);
      expect(qcashier.screen5.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line2 = defalut;
      print(qcashier.screen5.line2);
      expect(qcashier.screen5.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00427_element_check_00404 **********\n\n");
    });

    test('00428_element_check_00405', () async {
      print("\n********** テスト実行：00428_element_check_00405 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line3;
      print(qcashier.screen5.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line3 = testData1s;
      print(qcashier.screen5.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line3 = testData2s;
      print(qcashier.screen5.line3);
      expect(qcashier.screen5.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line3 = defalut;
      print(qcashier.screen5.line3);
      expect(qcashier.screen5.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00428_element_check_00405 **********\n\n");
    });

    test('00429_element_check_00406', () async {
      print("\n********** テスト実行：00429_element_check_00406 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line4;
      print(qcashier.screen5.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line4 = testData1s;
      print(qcashier.screen5.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line4 = testData2s;
      print(qcashier.screen5.line4);
      expect(qcashier.screen5.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line4 = defalut;
      print(qcashier.screen5.line4);
      expect(qcashier.screen5.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00429_element_check_00406 **********\n\n");
    });

    test('00430_element_check_00407', () async {
      print("\n********** テスト実行：00430_element_check_00407 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line1_ex;
      print(qcashier.screen5.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line1_ex = testData1s;
      print(qcashier.screen5.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line1_ex = testData2s;
      print(qcashier.screen5.line1_ex);
      expect(qcashier.screen5.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line1_ex = defalut;
      print(qcashier.screen5.line1_ex);
      expect(qcashier.screen5.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00430_element_check_00407 **********\n\n");
    });

    test('00431_element_check_00408', () async {
      print("\n********** テスト実行：00431_element_check_00408 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line2_ex;
      print(qcashier.screen5.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line2_ex = testData1s;
      print(qcashier.screen5.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line2_ex = testData2s;
      print(qcashier.screen5.line2_ex);
      expect(qcashier.screen5.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line2_ex = defalut;
      print(qcashier.screen5.line2_ex);
      expect(qcashier.screen5.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00431_element_check_00408 **********\n\n");
    });

    test('00432_element_check_00409', () async {
      print("\n********** テスト実行：00432_element_check_00409 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line3_ex;
      print(qcashier.screen5.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line3_ex = testData1s;
      print(qcashier.screen5.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line3_ex = testData2s;
      print(qcashier.screen5.line3_ex);
      expect(qcashier.screen5.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line3_ex = defalut;
      print(qcashier.screen5.line3_ex);
      expect(qcashier.screen5.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00432_element_check_00409 **********\n\n");
    });

    test('00433_element_check_00410', () async {
      print("\n********** テスト実行：00433_element_check_00410 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.line4_ex;
      print(qcashier.screen5.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.line4_ex = testData1s;
      print(qcashier.screen5.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.line4_ex = testData2s;
      print(qcashier.screen5.line4_ex);
      expect(qcashier.screen5.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.line4_ex = defalut;
      print(qcashier.screen5.line4_ex);
      expect(qcashier.screen5.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00433_element_check_00410 **********\n\n");
    });

    test('00434_element_check_00411', () async {
      print("\n********** テスト実行：00434_element_check_00411 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.sound_led1;
      print(qcashier.screen5.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.sound_led1 = testData1;
      print(qcashier.screen5.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.sound_led1 = testData2;
      print(qcashier.screen5.sound_led1);
      expect(qcashier.screen5.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.sound_led1 = defalut;
      print(qcashier.screen5.sound_led1);
      expect(qcashier.screen5.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00434_element_check_00411 **********\n\n");
    });

    test('00435_element_check_00412', () async {
      print("\n********** テスト実行：00435_element_check_00412 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.sound_led2;
      print(qcashier.screen5.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.sound_led2 = testData1;
      print(qcashier.screen5.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.sound_led2 = testData2;
      print(qcashier.screen5.sound_led2);
      expect(qcashier.screen5.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.sound_led2 = defalut;
      print(qcashier.screen5.sound_led2);
      expect(qcashier.screen5.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00435_element_check_00412 **********\n\n");
    });

    test('00436_element_check_00413', () async {
      print("\n********** テスト実行：00436_element_check_00413 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen5.sound_led3;
      print(qcashier.screen5.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen5.sound_led3 = testData1;
      print(qcashier.screen5.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen5.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen5.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen5.sound_led3 = testData2;
      print(qcashier.screen5.sound_led3);
      expect(qcashier.screen5.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen5.sound_led3 = defalut;
      print(qcashier.screen5.sound_led3);
      expect(qcashier.screen5.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen5.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00436_element_check_00413 **********\n\n");
    });

    test('00437_element_check_00414', () async {
      print("\n********** テスト実行：00437_element_check_00414 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.title;
      print(qcashier.screen6.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.title = testData1s;
      print(qcashier.screen6.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.title = testData2s;
      print(qcashier.screen6.title);
      expect(qcashier.screen6.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.title = defalut;
      print(qcashier.screen6.title);
      expect(qcashier.screen6.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00437_element_check_00414 **********\n\n");
    });

    test('00438_element_check_00415', () async {
      print("\n********** テスト実行：00438_element_check_00415 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.msg1;
      print(qcashier.screen6.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.msg1 = testData1s;
      print(qcashier.screen6.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.msg1 = testData2s;
      print(qcashier.screen6.msg1);
      expect(qcashier.screen6.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.msg1 = defalut;
      print(qcashier.screen6.msg1);
      expect(qcashier.screen6.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00438_element_check_00415 **********\n\n");
    });

    test('00439_element_check_00416', () async {
      print("\n********** テスト実行：00439_element_check_00416 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.msg2;
      print(qcashier.screen6.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.msg2 = testData1s;
      print(qcashier.screen6.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.msg2 = testData2s;
      print(qcashier.screen6.msg2);
      expect(qcashier.screen6.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.msg2 = defalut;
      print(qcashier.screen6.msg2);
      expect(qcashier.screen6.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00439_element_check_00416 **********\n\n");
    });

    test('00440_element_check_00417', () async {
      print("\n********** テスト実行：00440_element_check_00417 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.msg1_size;
      print(qcashier.screen6.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.msg1_size = testData1;
      print(qcashier.screen6.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.msg1_size = testData2;
      print(qcashier.screen6.msg1_size);
      expect(qcashier.screen6.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.msg1_size = defalut;
      print(qcashier.screen6.msg1_size);
      expect(qcashier.screen6.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00440_element_check_00417 **********\n\n");
    });

    test('00441_element_check_00418', () async {
      print("\n********** テスト実行：00441_element_check_00418 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.msg2_size;
      print(qcashier.screen6.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.msg2_size = testData1;
      print(qcashier.screen6.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.msg2_size = testData2;
      print(qcashier.screen6.msg2_size);
      expect(qcashier.screen6.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.msg2_size = defalut;
      print(qcashier.screen6.msg2_size);
      expect(qcashier.screen6.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00441_element_check_00418 **********\n\n");
    });

    test('00442_element_check_00419', () async {
      print("\n********** テスト実行：00442_element_check_00419 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.sound1;
      print(qcashier.screen6.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.sound1 = testData1;
      print(qcashier.screen6.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.sound1 = testData2;
      print(qcashier.screen6.sound1);
      expect(qcashier.screen6.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.sound1 = defalut;
      print(qcashier.screen6.sound1);
      expect(qcashier.screen6.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00442_element_check_00419 **********\n\n");
    });

    test('00443_element_check_00420', () async {
      print("\n********** テスト実行：00443_element_check_00420 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.sound2;
      print(qcashier.screen6.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.sound2 = testData1;
      print(qcashier.screen6.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.sound2 = testData2;
      print(qcashier.screen6.sound2);
      expect(qcashier.screen6.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.sound2 = defalut;
      print(qcashier.screen6.sound2);
      expect(qcashier.screen6.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00443_element_check_00420 **********\n\n");
    });

    test('00444_element_check_00421', () async {
      print("\n********** テスト実行：00444_element_check_00421 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.sound3;
      print(qcashier.screen6.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.sound3 = testData1;
      print(qcashier.screen6.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.sound3 = testData2;
      print(qcashier.screen6.sound3);
      expect(qcashier.screen6.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.sound3 = defalut;
      print(qcashier.screen6.sound3);
      expect(qcashier.screen6.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00444_element_check_00421 **********\n\n");
    });

    test('00445_element_check_00422', () async {
      print("\n********** テスト実行：00445_element_check_00422 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.snd_timer;
      print(qcashier.screen6.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.snd_timer = testData1;
      print(qcashier.screen6.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.snd_timer = testData2;
      print(qcashier.screen6.snd_timer);
      expect(qcashier.screen6.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.snd_timer = defalut;
      print(qcashier.screen6.snd_timer);
      expect(qcashier.screen6.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00445_element_check_00422 **********\n\n");
    });

    test('00446_element_check_00423', () async {
      print("\n********** テスト実行：00446_element_check_00423 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.timer1;
      print(qcashier.screen6.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.timer1 = testData1;
      print(qcashier.screen6.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.timer1 = testData2;
      print(qcashier.screen6.timer1);
      expect(qcashier.screen6.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.timer1 = defalut;
      print(qcashier.screen6.timer1);
      expect(qcashier.screen6.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00446_element_check_00423 **********\n\n");
    });

    test('00447_element_check_00424', () async {
      print("\n********** テスト実行：00447_element_check_00424 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.timer2;
      print(qcashier.screen6.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.timer2 = testData1;
      print(qcashier.screen6.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.timer2 = testData2;
      print(qcashier.screen6.timer2);
      expect(qcashier.screen6.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.timer2 = defalut;
      print(qcashier.screen6.timer2);
      expect(qcashier.screen6.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00447_element_check_00424 **********\n\n");
    });

    test('00448_element_check_00425', () async {
      print("\n********** テスト実行：00448_element_check_00425 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.timer3;
      print(qcashier.screen6.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.timer3 = testData1;
      print(qcashier.screen6.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.timer3 = testData2;
      print(qcashier.screen6.timer3);
      expect(qcashier.screen6.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.timer3 = defalut;
      print(qcashier.screen6.timer3);
      expect(qcashier.screen6.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00448_element_check_00425 **********\n\n");
    });

    test('00449_element_check_00426', () async {
      print("\n********** テスト実行：00449_element_check_00426 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.dsp_flg1;
      print(qcashier.screen6.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.dsp_flg1 = testData1;
      print(qcashier.screen6.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.dsp_flg1 = testData2;
      print(qcashier.screen6.dsp_flg1);
      expect(qcashier.screen6.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.dsp_flg1 = defalut;
      print(qcashier.screen6.dsp_flg1);
      expect(qcashier.screen6.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00449_element_check_00426 **********\n\n");
    });

    test('00450_element_check_00427', () async {
      print("\n********** テスト実行：00450_element_check_00427 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.dsp_flg2;
      print(qcashier.screen6.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.dsp_flg2 = testData1;
      print(qcashier.screen6.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.dsp_flg2 = testData2;
      print(qcashier.screen6.dsp_flg2);
      expect(qcashier.screen6.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.dsp_flg2 = defalut;
      print(qcashier.screen6.dsp_flg2);
      expect(qcashier.screen6.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00450_element_check_00427 **********\n\n");
    });

    test('00451_element_check_00428', () async {
      print("\n********** テスト実行：00451_element_check_00428 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.movie01_ext;
      print(qcashier.screen6.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.movie01_ext = testData1;
      print(qcashier.screen6.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.movie01_ext = testData2;
      print(qcashier.screen6.movie01_ext);
      expect(qcashier.screen6.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.movie01_ext = defalut;
      print(qcashier.screen6.movie01_ext);
      expect(qcashier.screen6.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00451_element_check_00428 **********\n\n");
    });

    test('00452_element_check_00429', () async {
      print("\n********** テスト実行：00452_element_check_00429 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.movie02_ext;
      print(qcashier.screen6.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.movie02_ext = testData1;
      print(qcashier.screen6.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.movie02_ext = testData2;
      print(qcashier.screen6.movie02_ext);
      expect(qcashier.screen6.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.movie02_ext = defalut;
      print(qcashier.screen6.movie02_ext);
      expect(qcashier.screen6.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00452_element_check_00429 **********\n\n");
    });

    test('00453_element_check_00430', () async {
      print("\n********** テスト実行：00453_element_check_00430 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.movie03_ext;
      print(qcashier.screen6.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.movie03_ext = testData1;
      print(qcashier.screen6.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.movie03_ext = testData2;
      print(qcashier.screen6.movie03_ext);
      expect(qcashier.screen6.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.movie03_ext = defalut;
      print(qcashier.screen6.movie03_ext);
      expect(qcashier.screen6.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00453_element_check_00430 **********\n\n");
    });

    test('00454_element_check_00431', () async {
      print("\n********** テスト実行：00454_element_check_00431 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.movie04_ext;
      print(qcashier.screen6.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.movie04_ext = testData1;
      print(qcashier.screen6.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.movie04_ext = testData2;
      print(qcashier.screen6.movie04_ext);
      expect(qcashier.screen6.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.movie04_ext = defalut;
      print(qcashier.screen6.movie04_ext);
      expect(qcashier.screen6.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00454_element_check_00431 **********\n\n");
    });

    test('00455_element_check_00432', () async {
      print("\n********** テスト実行：00455_element_check_00432 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line_title;
      print(qcashier.screen6.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line_title = testData1s;
      print(qcashier.screen6.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line_title = testData2s;
      print(qcashier.screen6.line_title);
      expect(qcashier.screen6.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line_title = defalut;
      print(qcashier.screen6.line_title);
      expect(qcashier.screen6.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00455_element_check_00432 **********\n\n");
    });

    test('00456_element_check_00433', () async {
      print("\n********** テスト実行：00456_element_check_00433 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line_title_ex;
      print(qcashier.screen6.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line_title_ex = testData1s;
      print(qcashier.screen6.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line_title_ex = testData2s;
      print(qcashier.screen6.line_title_ex);
      expect(qcashier.screen6.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line_title_ex = defalut;
      print(qcashier.screen6.line_title_ex);
      expect(qcashier.screen6.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00456_element_check_00433 **********\n\n");
    });

    test('00457_element_check_00434', () async {
      print("\n********** テスト実行：00457_element_check_00434 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line1;
      print(qcashier.screen6.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line1 = testData1s;
      print(qcashier.screen6.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line1 = testData2s;
      print(qcashier.screen6.line1);
      expect(qcashier.screen6.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line1 = defalut;
      print(qcashier.screen6.line1);
      expect(qcashier.screen6.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00457_element_check_00434 **********\n\n");
    });

    test('00458_element_check_00435', () async {
      print("\n********** テスト実行：00458_element_check_00435 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line2;
      print(qcashier.screen6.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line2 = testData1s;
      print(qcashier.screen6.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line2 = testData2s;
      print(qcashier.screen6.line2);
      expect(qcashier.screen6.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line2 = defalut;
      print(qcashier.screen6.line2);
      expect(qcashier.screen6.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00458_element_check_00435 **********\n\n");
    });

    test('00459_element_check_00436', () async {
      print("\n********** テスト実行：00459_element_check_00436 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line3;
      print(qcashier.screen6.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line3 = testData1s;
      print(qcashier.screen6.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line3 = testData2s;
      print(qcashier.screen6.line3);
      expect(qcashier.screen6.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line3 = defalut;
      print(qcashier.screen6.line3);
      expect(qcashier.screen6.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00459_element_check_00436 **********\n\n");
    });

    test('00460_element_check_00437', () async {
      print("\n********** テスト実行：00460_element_check_00437 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line4;
      print(qcashier.screen6.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line4 = testData1s;
      print(qcashier.screen6.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line4 = testData2s;
      print(qcashier.screen6.line4);
      expect(qcashier.screen6.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line4 = defalut;
      print(qcashier.screen6.line4);
      expect(qcashier.screen6.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00460_element_check_00437 **********\n\n");
    });

    test('00461_element_check_00438', () async {
      print("\n********** テスト実行：00461_element_check_00438 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line1_ex;
      print(qcashier.screen6.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line1_ex = testData1s;
      print(qcashier.screen6.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line1_ex = testData2s;
      print(qcashier.screen6.line1_ex);
      expect(qcashier.screen6.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line1_ex = defalut;
      print(qcashier.screen6.line1_ex);
      expect(qcashier.screen6.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00461_element_check_00438 **********\n\n");
    });

    test('00462_element_check_00439', () async {
      print("\n********** テスト実行：00462_element_check_00439 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line2_ex;
      print(qcashier.screen6.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line2_ex = testData1s;
      print(qcashier.screen6.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line2_ex = testData2s;
      print(qcashier.screen6.line2_ex);
      expect(qcashier.screen6.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line2_ex = defalut;
      print(qcashier.screen6.line2_ex);
      expect(qcashier.screen6.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00462_element_check_00439 **********\n\n");
    });

    test('00463_element_check_00440', () async {
      print("\n********** テスト実行：00463_element_check_00440 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line3_ex;
      print(qcashier.screen6.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line3_ex = testData1s;
      print(qcashier.screen6.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line3_ex = testData2s;
      print(qcashier.screen6.line3_ex);
      expect(qcashier.screen6.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line3_ex = defalut;
      print(qcashier.screen6.line3_ex);
      expect(qcashier.screen6.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00463_element_check_00440 **********\n\n");
    });

    test('00464_element_check_00441', () async {
      print("\n********** テスト実行：00464_element_check_00441 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line4_ex;
      print(qcashier.screen6.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line4_ex = testData1s;
      print(qcashier.screen6.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line4_ex = testData2s;
      print(qcashier.screen6.line4_ex);
      expect(qcashier.screen6.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line4_ex = defalut;
      print(qcashier.screen6.line4_ex);
      expect(qcashier.screen6.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00464_element_check_00441 **********\n\n");
    });

    test('00465_element_check_00442', () async {
      print("\n********** テスト実行：00465_element_check_00442 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.sound_led1;
      print(qcashier.screen6.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.sound_led1 = testData1;
      print(qcashier.screen6.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.sound_led1 = testData2;
      print(qcashier.screen6.sound_led1);
      expect(qcashier.screen6.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.sound_led1 = defalut;
      print(qcashier.screen6.sound_led1);
      expect(qcashier.screen6.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00465_element_check_00442 **********\n\n");
    });

    test('00466_element_check_00443', () async {
      print("\n********** テスト実行：00466_element_check_00443 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.sound_led2;
      print(qcashier.screen6.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.sound_led2 = testData1;
      print(qcashier.screen6.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.sound_led2 = testData2;
      print(qcashier.screen6.sound_led2);
      expect(qcashier.screen6.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.sound_led2 = defalut;
      print(qcashier.screen6.sound_led2);
      expect(qcashier.screen6.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00466_element_check_00443 **********\n\n");
    });

    test('00467_element_check_00444', () async {
      print("\n********** テスト実行：00467_element_check_00444 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.sound_led3;
      print(qcashier.screen6.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.sound_led3 = testData1;
      print(qcashier.screen6.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.sound_led3 = testData2;
      print(qcashier.screen6.sound_led3);
      expect(qcashier.screen6.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.sound_led3 = defalut;
      print(qcashier.screen6.sound_led3);
      expect(qcashier.screen6.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00467_element_check_00444 **********\n\n");
    });

    test('00468_element_check_00445', () async {
      print("\n********** テスト実行：00468_element_check_00445 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line2_1;
      print(qcashier.screen6.line2_1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line2_1 = testData1s;
      print(qcashier.screen6.line2_1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line2_1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line2_1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line2_1 = testData2s;
      print(qcashier.screen6.line2_1);
      expect(qcashier.screen6.line2_1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line2_1 = defalut;
      print(qcashier.screen6.line2_1);
      expect(qcashier.screen6.line2_1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00468_element_check_00445 **********\n\n");
    });

    test('00469_element_check_00446', () async {
      print("\n********** テスト実行：00469_element_check_00446 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line2_2;
      print(qcashier.screen6.line2_2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line2_2 = testData1s;
      print(qcashier.screen6.line2_2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line2_2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line2_2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line2_2 = testData2s;
      print(qcashier.screen6.line2_2);
      expect(qcashier.screen6.line2_2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line2_2 = defalut;
      print(qcashier.screen6.line2_2);
      expect(qcashier.screen6.line2_2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00469_element_check_00446 **********\n\n");
    });

    test('00470_element_check_00447', () async {
      print("\n********** テスト実行：00470_element_check_00447 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line2_3;
      print(qcashier.screen6.line2_3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line2_3 = testData1s;
      print(qcashier.screen6.line2_3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line2_3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line2_3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line2_3 = testData2s;
      print(qcashier.screen6.line2_3);
      expect(qcashier.screen6.line2_3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line2_3 = defalut;
      print(qcashier.screen6.line2_3);
      expect(qcashier.screen6.line2_3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00470_element_check_00447 **********\n\n");
    });

    test('00471_element_check_00448', () async {
      print("\n********** テスト実行：00471_element_check_00448 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen6.line2_4;
      print(qcashier.screen6.line2_4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen6.line2_4 = testData1s;
      print(qcashier.screen6.line2_4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen6.line2_4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen6.line2_4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen6.line2_4 = testData2s;
      print(qcashier.screen6.line2_4);
      expect(qcashier.screen6.line2_4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen6.line2_4 = defalut;
      print(qcashier.screen6.line2_4);
      expect(qcashier.screen6.line2_4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen6.line2_4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00471_element_check_00448 **********\n\n");
    });

    test('00472_element_check_00449', () async {
      print("\n********** テスト実行：00472_element_check_00449 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.title;
      print(qcashier.screen7.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.title = testData1s;
      print(qcashier.screen7.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.title = testData2s;
      print(qcashier.screen7.title);
      expect(qcashier.screen7.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.title = defalut;
      print(qcashier.screen7.title);
      expect(qcashier.screen7.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00472_element_check_00449 **********\n\n");
    });

    test('00473_element_check_00450', () async {
      print("\n********** テスト実行：00473_element_check_00450 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.msg1;
      print(qcashier.screen7.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.msg1 = testData1s;
      print(qcashier.screen7.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.msg1 = testData2s;
      print(qcashier.screen7.msg1);
      expect(qcashier.screen7.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.msg1 = defalut;
      print(qcashier.screen7.msg1);
      expect(qcashier.screen7.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00473_element_check_00450 **********\n\n");
    });

    test('00474_element_check_00451', () async {
      print("\n********** テスト実行：00474_element_check_00451 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.msg2;
      print(qcashier.screen7.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.msg2 = testData1s;
      print(qcashier.screen7.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.msg2 = testData2s;
      print(qcashier.screen7.msg2);
      expect(qcashier.screen7.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.msg2 = defalut;
      print(qcashier.screen7.msg2);
      expect(qcashier.screen7.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00474_element_check_00451 **********\n\n");
    });

    test('00475_element_check_00452', () async {
      print("\n********** テスト実行：00475_element_check_00452 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.msg1_size;
      print(qcashier.screen7.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.msg1_size = testData1;
      print(qcashier.screen7.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.msg1_size = testData2;
      print(qcashier.screen7.msg1_size);
      expect(qcashier.screen7.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.msg1_size = defalut;
      print(qcashier.screen7.msg1_size);
      expect(qcashier.screen7.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00475_element_check_00452 **********\n\n");
    });

    test('00476_element_check_00453', () async {
      print("\n********** テスト実行：00476_element_check_00453 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.msg2_size;
      print(qcashier.screen7.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.msg2_size = testData1;
      print(qcashier.screen7.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.msg2_size = testData2;
      print(qcashier.screen7.msg2_size);
      expect(qcashier.screen7.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.msg2_size = defalut;
      print(qcashier.screen7.msg2_size);
      expect(qcashier.screen7.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00476_element_check_00453 **********\n\n");
    });

    test('00477_element_check_00454', () async {
      print("\n********** テスト実行：00477_element_check_00454 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.sound1;
      print(qcashier.screen7.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.sound1 = testData1;
      print(qcashier.screen7.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.sound1 = testData2;
      print(qcashier.screen7.sound1);
      expect(qcashier.screen7.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.sound1 = defalut;
      print(qcashier.screen7.sound1);
      expect(qcashier.screen7.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00477_element_check_00454 **********\n\n");
    });

    test('00478_element_check_00455', () async {
      print("\n********** テスト実行：00478_element_check_00455 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.sound2;
      print(qcashier.screen7.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.sound2 = testData1;
      print(qcashier.screen7.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.sound2 = testData2;
      print(qcashier.screen7.sound2);
      expect(qcashier.screen7.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.sound2 = defalut;
      print(qcashier.screen7.sound2);
      expect(qcashier.screen7.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00478_element_check_00455 **********\n\n");
    });

    test('00479_element_check_00456', () async {
      print("\n********** テスト実行：00479_element_check_00456 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.sound3;
      print(qcashier.screen7.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.sound3 = testData1;
      print(qcashier.screen7.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.sound3 = testData2;
      print(qcashier.screen7.sound3);
      expect(qcashier.screen7.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.sound3 = defalut;
      print(qcashier.screen7.sound3);
      expect(qcashier.screen7.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00479_element_check_00456 **********\n\n");
    });

    test('00480_element_check_00457', () async {
      print("\n********** テスト実行：00480_element_check_00457 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.snd_timer;
      print(qcashier.screen7.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.snd_timer = testData1;
      print(qcashier.screen7.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.snd_timer = testData2;
      print(qcashier.screen7.snd_timer);
      expect(qcashier.screen7.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.snd_timer = defalut;
      print(qcashier.screen7.snd_timer);
      expect(qcashier.screen7.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00480_element_check_00457 **********\n\n");
    });

    test('00481_element_check_00458', () async {
      print("\n********** テスト実行：00481_element_check_00458 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.timer1;
      print(qcashier.screen7.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.timer1 = testData1;
      print(qcashier.screen7.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.timer1 = testData2;
      print(qcashier.screen7.timer1);
      expect(qcashier.screen7.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.timer1 = defalut;
      print(qcashier.screen7.timer1);
      expect(qcashier.screen7.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00481_element_check_00458 **********\n\n");
    });

    test('00482_element_check_00459', () async {
      print("\n********** テスト実行：00482_element_check_00459 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.timer2;
      print(qcashier.screen7.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.timer2 = testData1;
      print(qcashier.screen7.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.timer2 = testData2;
      print(qcashier.screen7.timer2);
      expect(qcashier.screen7.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.timer2 = defalut;
      print(qcashier.screen7.timer2);
      expect(qcashier.screen7.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00482_element_check_00459 **********\n\n");
    });

    test('00483_element_check_00460', () async {
      print("\n********** テスト実行：00483_element_check_00460 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.timer3;
      print(qcashier.screen7.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.timer3 = testData1;
      print(qcashier.screen7.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.timer3 = testData2;
      print(qcashier.screen7.timer3);
      expect(qcashier.screen7.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.timer3 = defalut;
      print(qcashier.screen7.timer3);
      expect(qcashier.screen7.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00483_element_check_00460 **********\n\n");
    });

    test('00484_element_check_00461', () async {
      print("\n********** テスト実行：00484_element_check_00461 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.dsp_flg1;
      print(qcashier.screen7.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.dsp_flg1 = testData1;
      print(qcashier.screen7.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.dsp_flg1 = testData2;
      print(qcashier.screen7.dsp_flg1);
      expect(qcashier.screen7.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.dsp_flg1 = defalut;
      print(qcashier.screen7.dsp_flg1);
      expect(qcashier.screen7.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00484_element_check_00461 **********\n\n");
    });

    test('00485_element_check_00462', () async {
      print("\n********** テスト実行：00485_element_check_00462 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.dsp_flg2;
      print(qcashier.screen7.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.dsp_flg2 = testData1;
      print(qcashier.screen7.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.dsp_flg2 = testData2;
      print(qcashier.screen7.dsp_flg2);
      expect(qcashier.screen7.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.dsp_flg2 = defalut;
      print(qcashier.screen7.dsp_flg2);
      expect(qcashier.screen7.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00485_element_check_00462 **********\n\n");
    });

    test('00486_element_check_00463', () async {
      print("\n********** テスト実行：00486_element_check_00463 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.movie01_ext;
      print(qcashier.screen7.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.movie01_ext = testData1;
      print(qcashier.screen7.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.movie01_ext = testData2;
      print(qcashier.screen7.movie01_ext);
      expect(qcashier.screen7.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.movie01_ext = defalut;
      print(qcashier.screen7.movie01_ext);
      expect(qcashier.screen7.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00486_element_check_00463 **********\n\n");
    });

    test('00487_element_check_00464', () async {
      print("\n********** テスト実行：00487_element_check_00464 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.movie02_ext;
      print(qcashier.screen7.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.movie02_ext = testData1;
      print(qcashier.screen7.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.movie02_ext = testData2;
      print(qcashier.screen7.movie02_ext);
      expect(qcashier.screen7.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.movie02_ext = defalut;
      print(qcashier.screen7.movie02_ext);
      expect(qcashier.screen7.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00487_element_check_00464 **********\n\n");
    });

    test('00488_element_check_00465', () async {
      print("\n********** テスト実行：00488_element_check_00465 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.movie03_ext;
      print(qcashier.screen7.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.movie03_ext = testData1;
      print(qcashier.screen7.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.movie03_ext = testData2;
      print(qcashier.screen7.movie03_ext);
      expect(qcashier.screen7.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.movie03_ext = defalut;
      print(qcashier.screen7.movie03_ext);
      expect(qcashier.screen7.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00488_element_check_00465 **********\n\n");
    });

    test('00489_element_check_00466', () async {
      print("\n********** テスト実行：00489_element_check_00466 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.movie04_ext;
      print(qcashier.screen7.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.movie04_ext = testData1;
      print(qcashier.screen7.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.movie04_ext = testData2;
      print(qcashier.screen7.movie04_ext);
      expect(qcashier.screen7.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.movie04_ext = defalut;
      print(qcashier.screen7.movie04_ext);
      expect(qcashier.screen7.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00489_element_check_00466 **********\n\n");
    });

    test('00490_element_check_00467', () async {
      print("\n********** テスト実行：00490_element_check_00467 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line_title;
      print(qcashier.screen7.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line_title = testData1s;
      print(qcashier.screen7.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line_title = testData2s;
      print(qcashier.screen7.line_title);
      expect(qcashier.screen7.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line_title = defalut;
      print(qcashier.screen7.line_title);
      expect(qcashier.screen7.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00490_element_check_00467 **********\n\n");
    });

    test('00491_element_check_00468', () async {
      print("\n********** テスト実行：00491_element_check_00468 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line_title_ex;
      print(qcashier.screen7.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line_title_ex = testData1s;
      print(qcashier.screen7.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line_title_ex = testData2s;
      print(qcashier.screen7.line_title_ex);
      expect(qcashier.screen7.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line_title_ex = defalut;
      print(qcashier.screen7.line_title_ex);
      expect(qcashier.screen7.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00491_element_check_00468 **********\n\n");
    });

    test('00492_element_check_00469', () async {
      print("\n********** テスト実行：00492_element_check_00469 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line1;
      print(qcashier.screen7.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line1 = testData1s;
      print(qcashier.screen7.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line1 = testData2s;
      print(qcashier.screen7.line1);
      expect(qcashier.screen7.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line1 = defalut;
      print(qcashier.screen7.line1);
      expect(qcashier.screen7.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00492_element_check_00469 **********\n\n");
    });

    test('00493_element_check_00470', () async {
      print("\n********** テスト実行：00493_element_check_00470 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line2;
      print(qcashier.screen7.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line2 = testData1s;
      print(qcashier.screen7.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line2 = testData2s;
      print(qcashier.screen7.line2);
      expect(qcashier.screen7.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line2 = defalut;
      print(qcashier.screen7.line2);
      expect(qcashier.screen7.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00493_element_check_00470 **********\n\n");
    });

    test('00494_element_check_00471', () async {
      print("\n********** テスト実行：00494_element_check_00471 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line3;
      print(qcashier.screen7.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line3 = testData1s;
      print(qcashier.screen7.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line3 = testData2s;
      print(qcashier.screen7.line3);
      expect(qcashier.screen7.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line3 = defalut;
      print(qcashier.screen7.line3);
      expect(qcashier.screen7.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00494_element_check_00471 **********\n\n");
    });

    test('00495_element_check_00472', () async {
      print("\n********** テスト実行：00495_element_check_00472 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line4;
      print(qcashier.screen7.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line4 = testData1s;
      print(qcashier.screen7.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line4 = testData2s;
      print(qcashier.screen7.line4);
      expect(qcashier.screen7.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line4 = defalut;
      print(qcashier.screen7.line4);
      expect(qcashier.screen7.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00495_element_check_00472 **********\n\n");
    });

    test('00496_element_check_00473', () async {
      print("\n********** テスト実行：00496_element_check_00473 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line1_ex;
      print(qcashier.screen7.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line1_ex = testData1s;
      print(qcashier.screen7.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line1_ex = testData2s;
      print(qcashier.screen7.line1_ex);
      expect(qcashier.screen7.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line1_ex = defalut;
      print(qcashier.screen7.line1_ex);
      expect(qcashier.screen7.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00496_element_check_00473 **********\n\n");
    });

    test('00497_element_check_00474', () async {
      print("\n********** テスト実行：00497_element_check_00474 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line2_ex;
      print(qcashier.screen7.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line2_ex = testData1s;
      print(qcashier.screen7.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line2_ex = testData2s;
      print(qcashier.screen7.line2_ex);
      expect(qcashier.screen7.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line2_ex = defalut;
      print(qcashier.screen7.line2_ex);
      expect(qcashier.screen7.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00497_element_check_00474 **********\n\n");
    });

    test('00498_element_check_00475', () async {
      print("\n********** テスト実行：00498_element_check_00475 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line3_ex;
      print(qcashier.screen7.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line3_ex = testData1s;
      print(qcashier.screen7.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line3_ex = testData2s;
      print(qcashier.screen7.line3_ex);
      expect(qcashier.screen7.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line3_ex = defalut;
      print(qcashier.screen7.line3_ex);
      expect(qcashier.screen7.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00498_element_check_00475 **********\n\n");
    });

    test('00499_element_check_00476', () async {
      print("\n********** テスト実行：00499_element_check_00476 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.line4_ex;
      print(qcashier.screen7.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.line4_ex = testData1s;
      print(qcashier.screen7.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.line4_ex = testData2s;
      print(qcashier.screen7.line4_ex);
      expect(qcashier.screen7.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.line4_ex = defalut;
      print(qcashier.screen7.line4_ex);
      expect(qcashier.screen7.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00499_element_check_00476 **********\n\n");
    });

    test('00500_element_check_00477', () async {
      print("\n********** テスト実行：00500_element_check_00477 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.sound_led1;
      print(qcashier.screen7.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.sound_led1 = testData1;
      print(qcashier.screen7.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.sound_led1 = testData2;
      print(qcashier.screen7.sound_led1);
      expect(qcashier.screen7.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.sound_led1 = defalut;
      print(qcashier.screen7.sound_led1);
      expect(qcashier.screen7.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00500_element_check_00477 **********\n\n");
    });

    test('00501_element_check_00478', () async {
      print("\n********** テスト実行：00501_element_check_00478 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.sound_led2;
      print(qcashier.screen7.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.sound_led2 = testData1;
      print(qcashier.screen7.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.sound_led2 = testData2;
      print(qcashier.screen7.sound_led2);
      expect(qcashier.screen7.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.sound_led2 = defalut;
      print(qcashier.screen7.sound_led2);
      expect(qcashier.screen7.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00501_element_check_00478 **********\n\n");
    });

    test('00502_element_check_00479', () async {
      print("\n********** テスト実行：00502_element_check_00479 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen7.sound_led3;
      print(qcashier.screen7.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen7.sound_led3 = testData1;
      print(qcashier.screen7.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen7.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen7.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen7.sound_led3 = testData2;
      print(qcashier.screen7.sound_led3);
      expect(qcashier.screen7.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen7.sound_led3 = defalut;
      print(qcashier.screen7.sound_led3);
      expect(qcashier.screen7.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen7.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00502_element_check_00479 **********\n\n");
    });

    test('00503_element_check_00480', () async {
      print("\n********** テスト実行：00503_element_check_00480 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.title;
      print(qcashier.screen8.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.title = testData1s;
      print(qcashier.screen8.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.title = testData2s;
      print(qcashier.screen8.title);
      expect(qcashier.screen8.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.title = defalut;
      print(qcashier.screen8.title);
      expect(qcashier.screen8.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00503_element_check_00480 **********\n\n");
    });

    test('00504_element_check_00481', () async {
      print("\n********** テスト実行：00504_element_check_00481 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.msg1;
      print(qcashier.screen8.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.msg1 = testData1s;
      print(qcashier.screen8.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.msg1 = testData2s;
      print(qcashier.screen8.msg1);
      expect(qcashier.screen8.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.msg1 = defalut;
      print(qcashier.screen8.msg1);
      expect(qcashier.screen8.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00504_element_check_00481 **********\n\n");
    });

    test('00505_element_check_00482', () async {
      print("\n********** テスト実行：00505_element_check_00482 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.msg2;
      print(qcashier.screen8.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.msg2 = testData1s;
      print(qcashier.screen8.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.msg2 = testData2s;
      print(qcashier.screen8.msg2);
      expect(qcashier.screen8.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.msg2 = defalut;
      print(qcashier.screen8.msg2);
      expect(qcashier.screen8.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00505_element_check_00482 **********\n\n");
    });

    test('00506_element_check_00483', () async {
      print("\n********** テスト実行：00506_element_check_00483 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.msg1_size;
      print(qcashier.screen8.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.msg1_size = testData1;
      print(qcashier.screen8.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.msg1_size = testData2;
      print(qcashier.screen8.msg1_size);
      expect(qcashier.screen8.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.msg1_size = defalut;
      print(qcashier.screen8.msg1_size);
      expect(qcashier.screen8.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00506_element_check_00483 **********\n\n");
    });

    test('00507_element_check_00484', () async {
      print("\n********** テスト実行：00507_element_check_00484 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.msg2_size;
      print(qcashier.screen8.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.msg2_size = testData1;
      print(qcashier.screen8.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.msg2_size = testData2;
      print(qcashier.screen8.msg2_size);
      expect(qcashier.screen8.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.msg2_size = defalut;
      print(qcashier.screen8.msg2_size);
      expect(qcashier.screen8.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00507_element_check_00484 **********\n\n");
    });

    test('00508_element_check_00485', () async {
      print("\n********** テスト実行：00508_element_check_00485 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.sound1;
      print(qcashier.screen8.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.sound1 = testData1;
      print(qcashier.screen8.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.sound1 = testData2;
      print(qcashier.screen8.sound1);
      expect(qcashier.screen8.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.sound1 = defalut;
      print(qcashier.screen8.sound1);
      expect(qcashier.screen8.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00508_element_check_00485 **********\n\n");
    });

    test('00509_element_check_00486', () async {
      print("\n********** テスト実行：00509_element_check_00486 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.sound2;
      print(qcashier.screen8.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.sound2 = testData1;
      print(qcashier.screen8.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.sound2 = testData2;
      print(qcashier.screen8.sound2);
      expect(qcashier.screen8.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.sound2 = defalut;
      print(qcashier.screen8.sound2);
      expect(qcashier.screen8.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00509_element_check_00486 **********\n\n");
    });

    test('00510_element_check_00487', () async {
      print("\n********** テスト実行：00510_element_check_00487 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.sound3;
      print(qcashier.screen8.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.sound3 = testData1;
      print(qcashier.screen8.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.sound3 = testData2;
      print(qcashier.screen8.sound3);
      expect(qcashier.screen8.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.sound3 = defalut;
      print(qcashier.screen8.sound3);
      expect(qcashier.screen8.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00510_element_check_00487 **********\n\n");
    });

    test('00511_element_check_00488', () async {
      print("\n********** テスト実行：00511_element_check_00488 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.snd_timer;
      print(qcashier.screen8.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.snd_timer = testData1;
      print(qcashier.screen8.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.snd_timer = testData2;
      print(qcashier.screen8.snd_timer);
      expect(qcashier.screen8.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.snd_timer = defalut;
      print(qcashier.screen8.snd_timer);
      expect(qcashier.screen8.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00511_element_check_00488 **********\n\n");
    });

    test('00512_element_check_00489', () async {
      print("\n********** テスト実行：00512_element_check_00489 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.timer1;
      print(qcashier.screen8.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.timer1 = testData1;
      print(qcashier.screen8.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.timer1 = testData2;
      print(qcashier.screen8.timer1);
      expect(qcashier.screen8.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.timer1 = defalut;
      print(qcashier.screen8.timer1);
      expect(qcashier.screen8.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00512_element_check_00489 **********\n\n");
    });

    test('00513_element_check_00490', () async {
      print("\n********** テスト実行：00513_element_check_00490 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.timer2;
      print(qcashier.screen8.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.timer2 = testData1;
      print(qcashier.screen8.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.timer2 = testData2;
      print(qcashier.screen8.timer2);
      expect(qcashier.screen8.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.timer2 = defalut;
      print(qcashier.screen8.timer2);
      expect(qcashier.screen8.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00513_element_check_00490 **********\n\n");
    });

    test('00514_element_check_00491', () async {
      print("\n********** テスト実行：00514_element_check_00491 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.timer3;
      print(qcashier.screen8.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.timer3 = testData1;
      print(qcashier.screen8.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.timer3 = testData2;
      print(qcashier.screen8.timer3);
      expect(qcashier.screen8.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.timer3 = defalut;
      print(qcashier.screen8.timer3);
      expect(qcashier.screen8.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00514_element_check_00491 **********\n\n");
    });

    test('00515_element_check_00492', () async {
      print("\n********** テスト実行：00515_element_check_00492 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.dsp_flg1;
      print(qcashier.screen8.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.dsp_flg1 = testData1;
      print(qcashier.screen8.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.dsp_flg1 = testData2;
      print(qcashier.screen8.dsp_flg1);
      expect(qcashier.screen8.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.dsp_flg1 = defalut;
      print(qcashier.screen8.dsp_flg1);
      expect(qcashier.screen8.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00515_element_check_00492 **********\n\n");
    });

    test('00516_element_check_00493', () async {
      print("\n********** テスト実行：00516_element_check_00493 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.dsp_flg2;
      print(qcashier.screen8.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.dsp_flg2 = testData1;
      print(qcashier.screen8.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.dsp_flg2 = testData2;
      print(qcashier.screen8.dsp_flg2);
      expect(qcashier.screen8.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.dsp_flg2 = defalut;
      print(qcashier.screen8.dsp_flg2);
      expect(qcashier.screen8.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00516_element_check_00493 **********\n\n");
    });

    test('00517_element_check_00494', () async {
      print("\n********** テスト実行：00517_element_check_00494 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.movie01_ext;
      print(qcashier.screen8.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.movie01_ext = testData1;
      print(qcashier.screen8.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.movie01_ext = testData2;
      print(qcashier.screen8.movie01_ext);
      expect(qcashier.screen8.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.movie01_ext = defalut;
      print(qcashier.screen8.movie01_ext);
      expect(qcashier.screen8.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00517_element_check_00494 **********\n\n");
    });

    test('00518_element_check_00495', () async {
      print("\n********** テスト実行：00518_element_check_00495 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.movie02_ext;
      print(qcashier.screen8.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.movie02_ext = testData1;
      print(qcashier.screen8.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.movie02_ext = testData2;
      print(qcashier.screen8.movie02_ext);
      expect(qcashier.screen8.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.movie02_ext = defalut;
      print(qcashier.screen8.movie02_ext);
      expect(qcashier.screen8.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00518_element_check_00495 **********\n\n");
    });

    test('00519_element_check_00496', () async {
      print("\n********** テスト実行：00519_element_check_00496 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.movie03_ext;
      print(qcashier.screen8.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.movie03_ext = testData1;
      print(qcashier.screen8.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.movie03_ext = testData2;
      print(qcashier.screen8.movie03_ext);
      expect(qcashier.screen8.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.movie03_ext = defalut;
      print(qcashier.screen8.movie03_ext);
      expect(qcashier.screen8.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00519_element_check_00496 **********\n\n");
    });

    test('00520_element_check_00497', () async {
      print("\n********** テスト実行：00520_element_check_00497 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.movie04_ext;
      print(qcashier.screen8.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.movie04_ext = testData1;
      print(qcashier.screen8.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.movie04_ext = testData2;
      print(qcashier.screen8.movie04_ext);
      expect(qcashier.screen8.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.movie04_ext = defalut;
      print(qcashier.screen8.movie04_ext);
      expect(qcashier.screen8.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00520_element_check_00497 **********\n\n");
    });

    test('00521_element_check_00498', () async {
      print("\n********** テスト実行：00521_element_check_00498 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line_title;
      print(qcashier.screen8.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line_title = testData1s;
      print(qcashier.screen8.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line_title = testData2s;
      print(qcashier.screen8.line_title);
      expect(qcashier.screen8.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line_title = defalut;
      print(qcashier.screen8.line_title);
      expect(qcashier.screen8.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00521_element_check_00498 **********\n\n");
    });

    test('00522_element_check_00499', () async {
      print("\n********** テスト実行：00522_element_check_00499 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line_title_ex;
      print(qcashier.screen8.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line_title_ex = testData1s;
      print(qcashier.screen8.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line_title_ex = testData2s;
      print(qcashier.screen8.line_title_ex);
      expect(qcashier.screen8.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line_title_ex = defalut;
      print(qcashier.screen8.line_title_ex);
      expect(qcashier.screen8.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00522_element_check_00499 **********\n\n");
    });

    test('00523_element_check_00500', () async {
      print("\n********** テスト実行：00523_element_check_00500 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line1;
      print(qcashier.screen8.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line1 = testData1s;
      print(qcashier.screen8.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line1 = testData2s;
      print(qcashier.screen8.line1);
      expect(qcashier.screen8.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line1 = defalut;
      print(qcashier.screen8.line1);
      expect(qcashier.screen8.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00523_element_check_00500 **********\n\n");
    });

    test('00524_element_check_00501', () async {
      print("\n********** テスト実行：00524_element_check_00501 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line2;
      print(qcashier.screen8.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line2 = testData1s;
      print(qcashier.screen8.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line2 = testData2s;
      print(qcashier.screen8.line2);
      expect(qcashier.screen8.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line2 = defalut;
      print(qcashier.screen8.line2);
      expect(qcashier.screen8.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00524_element_check_00501 **********\n\n");
    });

    test('00525_element_check_00502', () async {
      print("\n********** テスト実行：00525_element_check_00502 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line3;
      print(qcashier.screen8.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line3 = testData1s;
      print(qcashier.screen8.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line3 = testData2s;
      print(qcashier.screen8.line3);
      expect(qcashier.screen8.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line3 = defalut;
      print(qcashier.screen8.line3);
      expect(qcashier.screen8.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00525_element_check_00502 **********\n\n");
    });

    test('00526_element_check_00503', () async {
      print("\n********** テスト実行：00526_element_check_00503 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line4;
      print(qcashier.screen8.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line4 = testData1s;
      print(qcashier.screen8.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line4 = testData2s;
      print(qcashier.screen8.line4);
      expect(qcashier.screen8.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line4 = defalut;
      print(qcashier.screen8.line4);
      expect(qcashier.screen8.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00526_element_check_00503 **********\n\n");
    });

    test('00527_element_check_00504', () async {
      print("\n********** テスト実行：00527_element_check_00504 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line1_ex;
      print(qcashier.screen8.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line1_ex = testData1s;
      print(qcashier.screen8.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line1_ex = testData2s;
      print(qcashier.screen8.line1_ex);
      expect(qcashier.screen8.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line1_ex = defalut;
      print(qcashier.screen8.line1_ex);
      expect(qcashier.screen8.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00527_element_check_00504 **********\n\n");
    });

    test('00528_element_check_00505', () async {
      print("\n********** テスト実行：00528_element_check_00505 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line2_ex;
      print(qcashier.screen8.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line2_ex = testData1s;
      print(qcashier.screen8.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line2_ex = testData2s;
      print(qcashier.screen8.line2_ex);
      expect(qcashier.screen8.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line2_ex = defalut;
      print(qcashier.screen8.line2_ex);
      expect(qcashier.screen8.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00528_element_check_00505 **********\n\n");
    });

    test('00529_element_check_00506', () async {
      print("\n********** テスト実行：00529_element_check_00506 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line3_ex;
      print(qcashier.screen8.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line3_ex = testData1s;
      print(qcashier.screen8.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line3_ex = testData2s;
      print(qcashier.screen8.line3_ex);
      expect(qcashier.screen8.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line3_ex = defalut;
      print(qcashier.screen8.line3_ex);
      expect(qcashier.screen8.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00529_element_check_00506 **********\n\n");
    });

    test('00530_element_check_00507', () async {
      print("\n********** テスト実行：00530_element_check_00507 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.line4_ex;
      print(qcashier.screen8.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.line4_ex = testData1s;
      print(qcashier.screen8.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.line4_ex = testData2s;
      print(qcashier.screen8.line4_ex);
      expect(qcashier.screen8.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.line4_ex = defalut;
      print(qcashier.screen8.line4_ex);
      expect(qcashier.screen8.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00530_element_check_00507 **********\n\n");
    });

    test('00531_element_check_00508', () async {
      print("\n********** テスト実行：00531_element_check_00508 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.sound_led1;
      print(qcashier.screen8.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.sound_led1 = testData1;
      print(qcashier.screen8.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.sound_led1 = testData2;
      print(qcashier.screen8.sound_led1);
      expect(qcashier.screen8.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.sound_led1 = defalut;
      print(qcashier.screen8.sound_led1);
      expect(qcashier.screen8.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00531_element_check_00508 **********\n\n");
    });

    test('00532_element_check_00509', () async {
      print("\n********** テスト実行：00532_element_check_00509 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.sound_led2;
      print(qcashier.screen8.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.sound_led2 = testData1;
      print(qcashier.screen8.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.sound_led2 = testData2;
      print(qcashier.screen8.sound_led2);
      expect(qcashier.screen8.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.sound_led2 = defalut;
      print(qcashier.screen8.sound_led2);
      expect(qcashier.screen8.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00532_element_check_00509 **********\n\n");
    });

    test('00533_element_check_00510', () async {
      print("\n********** テスト実行：00533_element_check_00510 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen8.sound_led3;
      print(qcashier.screen8.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen8.sound_led3 = testData1;
      print(qcashier.screen8.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen8.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen8.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen8.sound_led3 = testData2;
      print(qcashier.screen8.sound_led3);
      expect(qcashier.screen8.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen8.sound_led3 = defalut;
      print(qcashier.screen8.sound_led3);
      expect(qcashier.screen8.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen8.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00533_element_check_00510 **********\n\n");
    });

    test('00534_element_check_00511', () async {
      print("\n********** テスト実行：00534_element_check_00511 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.title;
      print(qcashier.screen9.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.title = testData1s;
      print(qcashier.screen9.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.title = testData2s;
      print(qcashier.screen9.title);
      expect(qcashier.screen9.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.title = defalut;
      print(qcashier.screen9.title);
      expect(qcashier.screen9.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00534_element_check_00511 **********\n\n");
    });

    test('00535_element_check_00512', () async {
      print("\n********** テスト実行：00535_element_check_00512 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.msg1;
      print(qcashier.screen9.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.msg1 = testData1s;
      print(qcashier.screen9.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.msg1 = testData2s;
      print(qcashier.screen9.msg1);
      expect(qcashier.screen9.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.msg1 = defalut;
      print(qcashier.screen9.msg1);
      expect(qcashier.screen9.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00535_element_check_00512 **********\n\n");
    });

    test('00536_element_check_00513', () async {
      print("\n********** テスト実行：00536_element_check_00513 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.msg2;
      print(qcashier.screen9.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.msg2 = testData1s;
      print(qcashier.screen9.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.msg2 = testData2s;
      print(qcashier.screen9.msg2);
      expect(qcashier.screen9.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.msg2 = defalut;
      print(qcashier.screen9.msg2);
      expect(qcashier.screen9.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00536_element_check_00513 **********\n\n");
    });

    test('00537_element_check_00514', () async {
      print("\n********** テスト実行：00537_element_check_00514 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.msg1_size;
      print(qcashier.screen9.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.msg1_size = testData1;
      print(qcashier.screen9.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.msg1_size = testData2;
      print(qcashier.screen9.msg1_size);
      expect(qcashier.screen9.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.msg1_size = defalut;
      print(qcashier.screen9.msg1_size);
      expect(qcashier.screen9.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00537_element_check_00514 **********\n\n");
    });

    test('00538_element_check_00515', () async {
      print("\n********** テスト実行：00538_element_check_00515 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.msg2_size;
      print(qcashier.screen9.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.msg2_size = testData1;
      print(qcashier.screen9.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.msg2_size = testData2;
      print(qcashier.screen9.msg2_size);
      expect(qcashier.screen9.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.msg2_size = defalut;
      print(qcashier.screen9.msg2_size);
      expect(qcashier.screen9.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00538_element_check_00515 **********\n\n");
    });

    test('00539_element_check_00516', () async {
      print("\n********** テスト実行：00539_element_check_00516 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.sound1;
      print(qcashier.screen9.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.sound1 = testData1;
      print(qcashier.screen9.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.sound1 = testData2;
      print(qcashier.screen9.sound1);
      expect(qcashier.screen9.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.sound1 = defalut;
      print(qcashier.screen9.sound1);
      expect(qcashier.screen9.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00539_element_check_00516 **********\n\n");
    });

    test('00540_element_check_00517', () async {
      print("\n********** テスト実行：00540_element_check_00517 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.sound2;
      print(qcashier.screen9.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.sound2 = testData1;
      print(qcashier.screen9.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.sound2 = testData2;
      print(qcashier.screen9.sound2);
      expect(qcashier.screen9.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.sound2 = defalut;
      print(qcashier.screen9.sound2);
      expect(qcashier.screen9.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00540_element_check_00517 **********\n\n");
    });

    test('00541_element_check_00518', () async {
      print("\n********** テスト実行：00541_element_check_00518 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.sound3;
      print(qcashier.screen9.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.sound3 = testData1;
      print(qcashier.screen9.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.sound3 = testData2;
      print(qcashier.screen9.sound3);
      expect(qcashier.screen9.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.sound3 = defalut;
      print(qcashier.screen9.sound3);
      expect(qcashier.screen9.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00541_element_check_00518 **********\n\n");
    });

    test('00542_element_check_00519', () async {
      print("\n********** テスト実行：00542_element_check_00519 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.snd_timer;
      print(qcashier.screen9.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.snd_timer = testData1;
      print(qcashier.screen9.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.snd_timer = testData2;
      print(qcashier.screen9.snd_timer);
      expect(qcashier.screen9.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.snd_timer = defalut;
      print(qcashier.screen9.snd_timer);
      expect(qcashier.screen9.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00542_element_check_00519 **********\n\n");
    });

    test('00543_element_check_00520', () async {
      print("\n********** テスト実行：00543_element_check_00520 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.timer1;
      print(qcashier.screen9.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.timer1 = testData1;
      print(qcashier.screen9.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.timer1 = testData2;
      print(qcashier.screen9.timer1);
      expect(qcashier.screen9.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.timer1 = defalut;
      print(qcashier.screen9.timer1);
      expect(qcashier.screen9.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00543_element_check_00520 **********\n\n");
    });

    test('00544_element_check_00521', () async {
      print("\n********** テスト実行：00544_element_check_00521 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.timer2;
      print(qcashier.screen9.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.timer2 = testData1;
      print(qcashier.screen9.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.timer2 = testData2;
      print(qcashier.screen9.timer2);
      expect(qcashier.screen9.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.timer2 = defalut;
      print(qcashier.screen9.timer2);
      expect(qcashier.screen9.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00544_element_check_00521 **********\n\n");
    });

    test('00545_element_check_00522', () async {
      print("\n********** テスト実行：00545_element_check_00522 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.timer3;
      print(qcashier.screen9.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.timer3 = testData1;
      print(qcashier.screen9.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.timer3 = testData2;
      print(qcashier.screen9.timer3);
      expect(qcashier.screen9.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.timer3 = defalut;
      print(qcashier.screen9.timer3);
      expect(qcashier.screen9.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00545_element_check_00522 **********\n\n");
    });

    test('00546_element_check_00523', () async {
      print("\n********** テスト実行：00546_element_check_00523 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.dsp_flg1;
      print(qcashier.screen9.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.dsp_flg1 = testData1;
      print(qcashier.screen9.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.dsp_flg1 = testData2;
      print(qcashier.screen9.dsp_flg1);
      expect(qcashier.screen9.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.dsp_flg1 = defalut;
      print(qcashier.screen9.dsp_flg1);
      expect(qcashier.screen9.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00546_element_check_00523 **********\n\n");
    });

    test('00547_element_check_00524', () async {
      print("\n********** テスト実行：00547_element_check_00524 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.dsp_flg2;
      print(qcashier.screen9.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.dsp_flg2 = testData1;
      print(qcashier.screen9.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.dsp_flg2 = testData2;
      print(qcashier.screen9.dsp_flg2);
      expect(qcashier.screen9.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.dsp_flg2 = defalut;
      print(qcashier.screen9.dsp_flg2);
      expect(qcashier.screen9.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00547_element_check_00524 **********\n\n");
    });

    test('00548_element_check_00525', () async {
      print("\n********** テスト実行：00548_element_check_00525 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.movie01_ext;
      print(qcashier.screen9.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.movie01_ext = testData1;
      print(qcashier.screen9.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.movie01_ext = testData2;
      print(qcashier.screen9.movie01_ext);
      expect(qcashier.screen9.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.movie01_ext = defalut;
      print(qcashier.screen9.movie01_ext);
      expect(qcashier.screen9.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00548_element_check_00525 **********\n\n");
    });

    test('00549_element_check_00526', () async {
      print("\n********** テスト実行：00549_element_check_00526 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.movie02_ext;
      print(qcashier.screen9.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.movie02_ext = testData1;
      print(qcashier.screen9.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.movie02_ext = testData2;
      print(qcashier.screen9.movie02_ext);
      expect(qcashier.screen9.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.movie02_ext = defalut;
      print(qcashier.screen9.movie02_ext);
      expect(qcashier.screen9.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00549_element_check_00526 **********\n\n");
    });

    test('00550_element_check_00527', () async {
      print("\n********** テスト実行：00550_element_check_00527 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.movie03_ext;
      print(qcashier.screen9.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.movie03_ext = testData1;
      print(qcashier.screen9.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.movie03_ext = testData2;
      print(qcashier.screen9.movie03_ext);
      expect(qcashier.screen9.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.movie03_ext = defalut;
      print(qcashier.screen9.movie03_ext);
      expect(qcashier.screen9.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00550_element_check_00527 **********\n\n");
    });

    test('00551_element_check_00528', () async {
      print("\n********** テスト実行：00551_element_check_00528 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.movie04_ext;
      print(qcashier.screen9.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.movie04_ext = testData1;
      print(qcashier.screen9.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.movie04_ext = testData2;
      print(qcashier.screen9.movie04_ext);
      expect(qcashier.screen9.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.movie04_ext = defalut;
      print(qcashier.screen9.movie04_ext);
      expect(qcashier.screen9.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00551_element_check_00528 **********\n\n");
    });

    test('00552_element_check_00529', () async {
      print("\n********** テスト実行：00552_element_check_00529 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line_title;
      print(qcashier.screen9.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line_title = testData1s;
      print(qcashier.screen9.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line_title = testData2s;
      print(qcashier.screen9.line_title);
      expect(qcashier.screen9.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line_title = defalut;
      print(qcashier.screen9.line_title);
      expect(qcashier.screen9.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00552_element_check_00529 **********\n\n");
    });

    test('00553_element_check_00530', () async {
      print("\n********** テスト実行：00553_element_check_00530 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line_title_ex;
      print(qcashier.screen9.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line_title_ex = testData1s;
      print(qcashier.screen9.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line_title_ex = testData2s;
      print(qcashier.screen9.line_title_ex);
      expect(qcashier.screen9.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line_title_ex = defalut;
      print(qcashier.screen9.line_title_ex);
      expect(qcashier.screen9.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00553_element_check_00530 **********\n\n");
    });

    test('00554_element_check_00531', () async {
      print("\n********** テスト実行：00554_element_check_00531 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line1;
      print(qcashier.screen9.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line1 = testData1s;
      print(qcashier.screen9.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line1 = testData2s;
      print(qcashier.screen9.line1);
      expect(qcashier.screen9.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line1 = defalut;
      print(qcashier.screen9.line1);
      expect(qcashier.screen9.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00554_element_check_00531 **********\n\n");
    });

    test('00555_element_check_00532', () async {
      print("\n********** テスト実行：00555_element_check_00532 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line2;
      print(qcashier.screen9.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line2 = testData1s;
      print(qcashier.screen9.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line2 = testData2s;
      print(qcashier.screen9.line2);
      expect(qcashier.screen9.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line2 = defalut;
      print(qcashier.screen9.line2);
      expect(qcashier.screen9.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00555_element_check_00532 **********\n\n");
    });

    test('00556_element_check_00533', () async {
      print("\n********** テスト実行：00556_element_check_00533 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line3;
      print(qcashier.screen9.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line3 = testData1s;
      print(qcashier.screen9.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line3 = testData2s;
      print(qcashier.screen9.line3);
      expect(qcashier.screen9.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line3 = defalut;
      print(qcashier.screen9.line3);
      expect(qcashier.screen9.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00556_element_check_00533 **********\n\n");
    });

    test('00557_element_check_00534', () async {
      print("\n********** テスト実行：00557_element_check_00534 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line4;
      print(qcashier.screen9.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line4 = testData1s;
      print(qcashier.screen9.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line4 = testData2s;
      print(qcashier.screen9.line4);
      expect(qcashier.screen9.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line4 = defalut;
      print(qcashier.screen9.line4);
      expect(qcashier.screen9.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00557_element_check_00534 **********\n\n");
    });

    test('00558_element_check_00535', () async {
      print("\n********** テスト実行：00558_element_check_00535 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line1_ex;
      print(qcashier.screen9.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line1_ex = testData1s;
      print(qcashier.screen9.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line1_ex = testData2s;
      print(qcashier.screen9.line1_ex);
      expect(qcashier.screen9.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line1_ex = defalut;
      print(qcashier.screen9.line1_ex);
      expect(qcashier.screen9.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00558_element_check_00535 **********\n\n");
    });

    test('00559_element_check_00536', () async {
      print("\n********** テスト実行：00559_element_check_00536 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line2_ex;
      print(qcashier.screen9.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line2_ex = testData1s;
      print(qcashier.screen9.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line2_ex = testData2s;
      print(qcashier.screen9.line2_ex);
      expect(qcashier.screen9.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line2_ex = defalut;
      print(qcashier.screen9.line2_ex);
      expect(qcashier.screen9.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00559_element_check_00536 **********\n\n");
    });

    test('00560_element_check_00537', () async {
      print("\n********** テスト実行：00560_element_check_00537 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line3_ex;
      print(qcashier.screen9.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line3_ex = testData1s;
      print(qcashier.screen9.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line3_ex = testData2s;
      print(qcashier.screen9.line3_ex);
      expect(qcashier.screen9.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line3_ex = defalut;
      print(qcashier.screen9.line3_ex);
      expect(qcashier.screen9.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00560_element_check_00537 **********\n\n");
    });

    test('00561_element_check_00538', () async {
      print("\n********** テスト実行：00561_element_check_00538 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.line4_ex;
      print(qcashier.screen9.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.line4_ex = testData1s;
      print(qcashier.screen9.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.line4_ex = testData2s;
      print(qcashier.screen9.line4_ex);
      expect(qcashier.screen9.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.line4_ex = defalut;
      print(qcashier.screen9.line4_ex);
      expect(qcashier.screen9.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00561_element_check_00538 **********\n\n");
    });

    test('00562_element_check_00539', () async {
      print("\n********** テスト実行：00562_element_check_00539 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.sound_led1;
      print(qcashier.screen9.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.sound_led1 = testData1;
      print(qcashier.screen9.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.sound_led1 = testData2;
      print(qcashier.screen9.sound_led1);
      expect(qcashier.screen9.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.sound_led1 = defalut;
      print(qcashier.screen9.sound_led1);
      expect(qcashier.screen9.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00562_element_check_00539 **********\n\n");
    });

    test('00563_element_check_00540', () async {
      print("\n********** テスト実行：00563_element_check_00540 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.sound_led2;
      print(qcashier.screen9.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.sound_led2 = testData1;
      print(qcashier.screen9.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.sound_led2 = testData2;
      print(qcashier.screen9.sound_led2);
      expect(qcashier.screen9.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.sound_led2 = defalut;
      print(qcashier.screen9.sound_led2);
      expect(qcashier.screen9.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00563_element_check_00540 **********\n\n");
    });

    test('00564_element_check_00541', () async {
      print("\n********** テスト実行：00564_element_check_00541 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen9.sound_led3;
      print(qcashier.screen9.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen9.sound_led3 = testData1;
      print(qcashier.screen9.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen9.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen9.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen9.sound_led3 = testData2;
      print(qcashier.screen9.sound_led3);
      expect(qcashier.screen9.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen9.sound_led3 = defalut;
      print(qcashier.screen9.sound_led3);
      expect(qcashier.screen9.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen9.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00564_element_check_00541 **********\n\n");
    });

    test('00565_element_check_00542', () async {
      print("\n********** テスト実行：00565_element_check_00542 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.title;
      print(qcashier.screen10.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.title = testData1s;
      print(qcashier.screen10.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.title = testData2s;
      print(qcashier.screen10.title);
      expect(qcashier.screen10.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.title = defalut;
      print(qcashier.screen10.title);
      expect(qcashier.screen10.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00565_element_check_00542 **********\n\n");
    });

    test('00566_element_check_00543', () async {
      print("\n********** テスト実行：00566_element_check_00543 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.msg1;
      print(qcashier.screen10.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.msg1 = testData1s;
      print(qcashier.screen10.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.msg1 = testData2s;
      print(qcashier.screen10.msg1);
      expect(qcashier.screen10.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.msg1 = defalut;
      print(qcashier.screen10.msg1);
      expect(qcashier.screen10.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00566_element_check_00543 **********\n\n");
    });

    test('00567_element_check_00544', () async {
      print("\n********** テスト実行：00567_element_check_00544 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.msg2;
      print(qcashier.screen10.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.msg2 = testData1s;
      print(qcashier.screen10.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.msg2 = testData2s;
      print(qcashier.screen10.msg2);
      expect(qcashier.screen10.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.msg2 = defalut;
      print(qcashier.screen10.msg2);
      expect(qcashier.screen10.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00567_element_check_00544 **********\n\n");
    });

    test('00568_element_check_00545', () async {
      print("\n********** テスト実行：00568_element_check_00545 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.msg1_size;
      print(qcashier.screen10.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.msg1_size = testData1;
      print(qcashier.screen10.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.msg1_size = testData2;
      print(qcashier.screen10.msg1_size);
      expect(qcashier.screen10.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.msg1_size = defalut;
      print(qcashier.screen10.msg1_size);
      expect(qcashier.screen10.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00568_element_check_00545 **********\n\n");
    });

    test('00569_element_check_00546', () async {
      print("\n********** テスト実行：00569_element_check_00546 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.msg2_size;
      print(qcashier.screen10.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.msg2_size = testData1;
      print(qcashier.screen10.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.msg2_size = testData2;
      print(qcashier.screen10.msg2_size);
      expect(qcashier.screen10.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.msg2_size = defalut;
      print(qcashier.screen10.msg2_size);
      expect(qcashier.screen10.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00569_element_check_00546 **********\n\n");
    });

    test('00570_element_check_00547', () async {
      print("\n********** テスト実行：00570_element_check_00547 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.sound1;
      print(qcashier.screen10.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.sound1 = testData1;
      print(qcashier.screen10.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.sound1 = testData2;
      print(qcashier.screen10.sound1);
      expect(qcashier.screen10.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.sound1 = defalut;
      print(qcashier.screen10.sound1);
      expect(qcashier.screen10.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00570_element_check_00547 **********\n\n");
    });

    test('00571_element_check_00548', () async {
      print("\n********** テスト実行：00571_element_check_00548 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.sound2;
      print(qcashier.screen10.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.sound2 = testData1;
      print(qcashier.screen10.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.sound2 = testData2;
      print(qcashier.screen10.sound2);
      expect(qcashier.screen10.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.sound2 = defalut;
      print(qcashier.screen10.sound2);
      expect(qcashier.screen10.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00571_element_check_00548 **********\n\n");
    });

    test('00572_element_check_00549', () async {
      print("\n********** テスト実行：00572_element_check_00549 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.sound3;
      print(qcashier.screen10.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.sound3 = testData1;
      print(qcashier.screen10.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.sound3 = testData2;
      print(qcashier.screen10.sound3);
      expect(qcashier.screen10.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.sound3 = defalut;
      print(qcashier.screen10.sound3);
      expect(qcashier.screen10.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00572_element_check_00549 **********\n\n");
    });

    test('00573_element_check_00550', () async {
      print("\n********** テスト実行：00573_element_check_00550 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.snd_timer;
      print(qcashier.screen10.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.snd_timer = testData1;
      print(qcashier.screen10.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.snd_timer = testData2;
      print(qcashier.screen10.snd_timer);
      expect(qcashier.screen10.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.snd_timer = defalut;
      print(qcashier.screen10.snd_timer);
      expect(qcashier.screen10.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00573_element_check_00550 **********\n\n");
    });

    test('00574_element_check_00551', () async {
      print("\n********** テスト実行：00574_element_check_00551 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.timer1;
      print(qcashier.screen10.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.timer1 = testData1;
      print(qcashier.screen10.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.timer1 = testData2;
      print(qcashier.screen10.timer1);
      expect(qcashier.screen10.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.timer1 = defalut;
      print(qcashier.screen10.timer1);
      expect(qcashier.screen10.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00574_element_check_00551 **********\n\n");
    });

    test('00575_element_check_00552', () async {
      print("\n********** テスト実行：00575_element_check_00552 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.timer2;
      print(qcashier.screen10.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.timer2 = testData1;
      print(qcashier.screen10.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.timer2 = testData2;
      print(qcashier.screen10.timer2);
      expect(qcashier.screen10.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.timer2 = defalut;
      print(qcashier.screen10.timer2);
      expect(qcashier.screen10.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00575_element_check_00552 **********\n\n");
    });

    test('00576_element_check_00553', () async {
      print("\n********** テスト実行：00576_element_check_00553 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.timer3;
      print(qcashier.screen10.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.timer3 = testData1;
      print(qcashier.screen10.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.timer3 = testData2;
      print(qcashier.screen10.timer3);
      expect(qcashier.screen10.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.timer3 = defalut;
      print(qcashier.screen10.timer3);
      expect(qcashier.screen10.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00576_element_check_00553 **********\n\n");
    });

    test('00577_element_check_00554', () async {
      print("\n********** テスト実行：00577_element_check_00554 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.dsp_flg1;
      print(qcashier.screen10.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.dsp_flg1 = testData1;
      print(qcashier.screen10.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.dsp_flg1 = testData2;
      print(qcashier.screen10.dsp_flg1);
      expect(qcashier.screen10.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.dsp_flg1 = defalut;
      print(qcashier.screen10.dsp_flg1);
      expect(qcashier.screen10.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00577_element_check_00554 **********\n\n");
    });

    test('00578_element_check_00555', () async {
      print("\n********** テスト実行：00578_element_check_00555 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.dsp_flg2;
      print(qcashier.screen10.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.dsp_flg2 = testData1;
      print(qcashier.screen10.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.dsp_flg2 = testData2;
      print(qcashier.screen10.dsp_flg2);
      expect(qcashier.screen10.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.dsp_flg2 = defalut;
      print(qcashier.screen10.dsp_flg2);
      expect(qcashier.screen10.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00578_element_check_00555 **********\n\n");
    });

    test('00579_element_check_00556', () async {
      print("\n********** テスト実行：00579_element_check_00556 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.movie01_ext;
      print(qcashier.screen10.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.movie01_ext = testData1;
      print(qcashier.screen10.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.movie01_ext = testData2;
      print(qcashier.screen10.movie01_ext);
      expect(qcashier.screen10.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.movie01_ext = defalut;
      print(qcashier.screen10.movie01_ext);
      expect(qcashier.screen10.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00579_element_check_00556 **********\n\n");
    });

    test('00580_element_check_00557', () async {
      print("\n********** テスト実行：00580_element_check_00557 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.movie02_ext;
      print(qcashier.screen10.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.movie02_ext = testData1;
      print(qcashier.screen10.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.movie02_ext = testData2;
      print(qcashier.screen10.movie02_ext);
      expect(qcashier.screen10.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.movie02_ext = defalut;
      print(qcashier.screen10.movie02_ext);
      expect(qcashier.screen10.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00580_element_check_00557 **********\n\n");
    });

    test('00581_element_check_00558', () async {
      print("\n********** テスト実行：00581_element_check_00558 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.movie03_ext;
      print(qcashier.screen10.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.movie03_ext = testData1;
      print(qcashier.screen10.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.movie03_ext = testData2;
      print(qcashier.screen10.movie03_ext);
      expect(qcashier.screen10.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.movie03_ext = defalut;
      print(qcashier.screen10.movie03_ext);
      expect(qcashier.screen10.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00581_element_check_00558 **********\n\n");
    });

    test('00582_element_check_00559', () async {
      print("\n********** テスト実行：00582_element_check_00559 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.movie04_ext;
      print(qcashier.screen10.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.movie04_ext = testData1;
      print(qcashier.screen10.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.movie04_ext = testData2;
      print(qcashier.screen10.movie04_ext);
      expect(qcashier.screen10.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.movie04_ext = defalut;
      print(qcashier.screen10.movie04_ext);
      expect(qcashier.screen10.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00582_element_check_00559 **********\n\n");
    });

    test('00583_element_check_00560', () async {
      print("\n********** テスト実行：00583_element_check_00560 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line_title;
      print(qcashier.screen10.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line_title = testData1s;
      print(qcashier.screen10.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line_title = testData2s;
      print(qcashier.screen10.line_title);
      expect(qcashier.screen10.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line_title = defalut;
      print(qcashier.screen10.line_title);
      expect(qcashier.screen10.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00583_element_check_00560 **********\n\n");
    });

    test('00584_element_check_00561', () async {
      print("\n********** テスト実行：00584_element_check_00561 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line_title_ex;
      print(qcashier.screen10.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line_title_ex = testData1s;
      print(qcashier.screen10.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line_title_ex = testData2s;
      print(qcashier.screen10.line_title_ex);
      expect(qcashier.screen10.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line_title_ex = defalut;
      print(qcashier.screen10.line_title_ex);
      expect(qcashier.screen10.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00584_element_check_00561 **********\n\n");
    });

    test('00585_element_check_00562', () async {
      print("\n********** テスト実行：00585_element_check_00562 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line1;
      print(qcashier.screen10.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line1 = testData1s;
      print(qcashier.screen10.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line1 = testData2s;
      print(qcashier.screen10.line1);
      expect(qcashier.screen10.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line1 = defalut;
      print(qcashier.screen10.line1);
      expect(qcashier.screen10.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00585_element_check_00562 **********\n\n");
    });

    test('00586_element_check_00563', () async {
      print("\n********** テスト実行：00586_element_check_00563 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line2;
      print(qcashier.screen10.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line2 = testData1s;
      print(qcashier.screen10.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line2 = testData2s;
      print(qcashier.screen10.line2);
      expect(qcashier.screen10.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line2 = defalut;
      print(qcashier.screen10.line2);
      expect(qcashier.screen10.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00586_element_check_00563 **********\n\n");
    });

    test('00587_element_check_00564', () async {
      print("\n********** テスト実行：00587_element_check_00564 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line3;
      print(qcashier.screen10.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line3 = testData1s;
      print(qcashier.screen10.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line3 = testData2s;
      print(qcashier.screen10.line3);
      expect(qcashier.screen10.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line3 = defalut;
      print(qcashier.screen10.line3);
      expect(qcashier.screen10.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00587_element_check_00564 **********\n\n");
    });

    test('00588_element_check_00565', () async {
      print("\n********** テスト実行：00588_element_check_00565 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line4;
      print(qcashier.screen10.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line4 = testData1s;
      print(qcashier.screen10.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line4 = testData2s;
      print(qcashier.screen10.line4);
      expect(qcashier.screen10.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line4 = defalut;
      print(qcashier.screen10.line4);
      expect(qcashier.screen10.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00588_element_check_00565 **********\n\n");
    });

    test('00589_element_check_00566', () async {
      print("\n********** テスト実行：00589_element_check_00566 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line1_ex;
      print(qcashier.screen10.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line1_ex = testData1s;
      print(qcashier.screen10.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line1_ex = testData2s;
      print(qcashier.screen10.line1_ex);
      expect(qcashier.screen10.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line1_ex = defalut;
      print(qcashier.screen10.line1_ex);
      expect(qcashier.screen10.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00589_element_check_00566 **********\n\n");
    });

    test('00590_element_check_00567', () async {
      print("\n********** テスト実行：00590_element_check_00567 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line2_ex;
      print(qcashier.screen10.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line2_ex = testData1s;
      print(qcashier.screen10.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line2_ex = testData2s;
      print(qcashier.screen10.line2_ex);
      expect(qcashier.screen10.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line2_ex = defalut;
      print(qcashier.screen10.line2_ex);
      expect(qcashier.screen10.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00590_element_check_00567 **********\n\n");
    });

    test('00591_element_check_00568', () async {
      print("\n********** テスト実行：00591_element_check_00568 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line3_ex;
      print(qcashier.screen10.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line3_ex = testData1s;
      print(qcashier.screen10.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line3_ex = testData2s;
      print(qcashier.screen10.line3_ex);
      expect(qcashier.screen10.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line3_ex = defalut;
      print(qcashier.screen10.line3_ex);
      expect(qcashier.screen10.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00591_element_check_00568 **********\n\n");
    });

    test('00592_element_check_00569', () async {
      print("\n********** テスト実行：00592_element_check_00569 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.line4_ex;
      print(qcashier.screen10.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.line4_ex = testData1s;
      print(qcashier.screen10.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.line4_ex = testData2s;
      print(qcashier.screen10.line4_ex);
      expect(qcashier.screen10.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.line4_ex = defalut;
      print(qcashier.screen10.line4_ex);
      expect(qcashier.screen10.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00592_element_check_00569 **********\n\n");
    });

    test('00593_element_check_00570', () async {
      print("\n********** テスト実行：00593_element_check_00570 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.sound_led1;
      print(qcashier.screen10.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.sound_led1 = testData1;
      print(qcashier.screen10.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.sound_led1 = testData2;
      print(qcashier.screen10.sound_led1);
      expect(qcashier.screen10.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.sound_led1 = defalut;
      print(qcashier.screen10.sound_led1);
      expect(qcashier.screen10.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00593_element_check_00570 **********\n\n");
    });

    test('00594_element_check_00571', () async {
      print("\n********** テスト実行：00594_element_check_00571 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.sound_led2;
      print(qcashier.screen10.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.sound_led2 = testData1;
      print(qcashier.screen10.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.sound_led2 = testData2;
      print(qcashier.screen10.sound_led2);
      expect(qcashier.screen10.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.sound_led2 = defalut;
      print(qcashier.screen10.sound_led2);
      expect(qcashier.screen10.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00594_element_check_00571 **********\n\n");
    });

    test('00595_element_check_00572', () async {
      print("\n********** テスト実行：00595_element_check_00572 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen10.sound_led3;
      print(qcashier.screen10.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen10.sound_led3 = testData1;
      print(qcashier.screen10.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen10.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen10.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen10.sound_led3 = testData2;
      print(qcashier.screen10.sound_led3);
      expect(qcashier.screen10.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen10.sound_led3 = defalut;
      print(qcashier.screen10.sound_led3);
      expect(qcashier.screen10.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen10.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00595_element_check_00572 **********\n\n");
    });

    test('00596_element_check_00573', () async {
      print("\n********** テスト実行：00596_element_check_00573 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.title;
      print(qcashier.screen11.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.title = testData1s;
      print(qcashier.screen11.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.title = testData2s;
      print(qcashier.screen11.title);
      expect(qcashier.screen11.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.title = defalut;
      print(qcashier.screen11.title);
      expect(qcashier.screen11.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00596_element_check_00573 **********\n\n");
    });

    test('00597_element_check_00574', () async {
      print("\n********** テスト実行：00597_element_check_00574 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.msg1;
      print(qcashier.screen11.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.msg1 = testData1s;
      print(qcashier.screen11.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.msg1 = testData2s;
      print(qcashier.screen11.msg1);
      expect(qcashier.screen11.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.msg1 = defalut;
      print(qcashier.screen11.msg1);
      expect(qcashier.screen11.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00597_element_check_00574 **********\n\n");
    });

    test('00598_element_check_00575', () async {
      print("\n********** テスト実行：00598_element_check_00575 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.msg2;
      print(qcashier.screen11.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.msg2 = testData1s;
      print(qcashier.screen11.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.msg2 = testData2s;
      print(qcashier.screen11.msg2);
      expect(qcashier.screen11.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.msg2 = defalut;
      print(qcashier.screen11.msg2);
      expect(qcashier.screen11.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00598_element_check_00575 **********\n\n");
    });

    test('00599_element_check_00576', () async {
      print("\n********** テスト実行：00599_element_check_00576 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.msg1_size;
      print(qcashier.screen11.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.msg1_size = testData1;
      print(qcashier.screen11.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.msg1_size = testData2;
      print(qcashier.screen11.msg1_size);
      expect(qcashier.screen11.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.msg1_size = defalut;
      print(qcashier.screen11.msg1_size);
      expect(qcashier.screen11.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00599_element_check_00576 **********\n\n");
    });

    test('00600_element_check_00577', () async {
      print("\n********** テスト実行：00600_element_check_00577 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.msg2_size;
      print(qcashier.screen11.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.msg2_size = testData1;
      print(qcashier.screen11.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.msg2_size = testData2;
      print(qcashier.screen11.msg2_size);
      expect(qcashier.screen11.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.msg2_size = defalut;
      print(qcashier.screen11.msg2_size);
      expect(qcashier.screen11.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00600_element_check_00577 **********\n\n");
    });

    test('00601_element_check_00578', () async {
      print("\n********** テスト実行：00601_element_check_00578 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.sound1;
      print(qcashier.screen11.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.sound1 = testData1;
      print(qcashier.screen11.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.sound1 = testData2;
      print(qcashier.screen11.sound1);
      expect(qcashier.screen11.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.sound1 = defalut;
      print(qcashier.screen11.sound1);
      expect(qcashier.screen11.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00601_element_check_00578 **********\n\n");
    });

    test('00602_element_check_00579', () async {
      print("\n********** テスト実行：00602_element_check_00579 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.sound2;
      print(qcashier.screen11.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.sound2 = testData1;
      print(qcashier.screen11.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.sound2 = testData2;
      print(qcashier.screen11.sound2);
      expect(qcashier.screen11.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.sound2 = defalut;
      print(qcashier.screen11.sound2);
      expect(qcashier.screen11.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00602_element_check_00579 **********\n\n");
    });

    test('00603_element_check_00580', () async {
      print("\n********** テスト実行：00603_element_check_00580 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.sound3;
      print(qcashier.screen11.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.sound3 = testData1;
      print(qcashier.screen11.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.sound3 = testData2;
      print(qcashier.screen11.sound3);
      expect(qcashier.screen11.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.sound3 = defalut;
      print(qcashier.screen11.sound3);
      expect(qcashier.screen11.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00603_element_check_00580 **********\n\n");
    });

    test('00604_element_check_00581', () async {
      print("\n********** テスト実行：00604_element_check_00581 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.snd_timer;
      print(qcashier.screen11.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.snd_timer = testData1;
      print(qcashier.screen11.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.snd_timer = testData2;
      print(qcashier.screen11.snd_timer);
      expect(qcashier.screen11.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.snd_timer = defalut;
      print(qcashier.screen11.snd_timer);
      expect(qcashier.screen11.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00604_element_check_00581 **********\n\n");
    });

    test('00605_element_check_00582', () async {
      print("\n********** テスト実行：00605_element_check_00582 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.timer1;
      print(qcashier.screen11.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.timer1 = testData1;
      print(qcashier.screen11.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.timer1 = testData2;
      print(qcashier.screen11.timer1);
      expect(qcashier.screen11.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.timer1 = defalut;
      print(qcashier.screen11.timer1);
      expect(qcashier.screen11.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00605_element_check_00582 **********\n\n");
    });

    test('00606_element_check_00583', () async {
      print("\n********** テスト実行：00606_element_check_00583 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.timer2;
      print(qcashier.screen11.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.timer2 = testData1;
      print(qcashier.screen11.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.timer2 = testData2;
      print(qcashier.screen11.timer2);
      expect(qcashier.screen11.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.timer2 = defalut;
      print(qcashier.screen11.timer2);
      expect(qcashier.screen11.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00606_element_check_00583 **********\n\n");
    });

    test('00607_element_check_00584', () async {
      print("\n********** テスト実行：00607_element_check_00584 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.timer3;
      print(qcashier.screen11.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.timer3 = testData1;
      print(qcashier.screen11.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.timer3 = testData2;
      print(qcashier.screen11.timer3);
      expect(qcashier.screen11.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.timer3 = defalut;
      print(qcashier.screen11.timer3);
      expect(qcashier.screen11.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00607_element_check_00584 **********\n\n");
    });

    test('00608_element_check_00585', () async {
      print("\n********** テスト実行：00608_element_check_00585 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.dsp_flg1;
      print(qcashier.screen11.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.dsp_flg1 = testData1;
      print(qcashier.screen11.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.dsp_flg1 = testData2;
      print(qcashier.screen11.dsp_flg1);
      expect(qcashier.screen11.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.dsp_flg1 = defalut;
      print(qcashier.screen11.dsp_flg1);
      expect(qcashier.screen11.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00608_element_check_00585 **********\n\n");
    });

    test('00609_element_check_00586', () async {
      print("\n********** テスト実行：00609_element_check_00586 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.dsp_flg2;
      print(qcashier.screen11.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.dsp_flg2 = testData1;
      print(qcashier.screen11.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.dsp_flg2 = testData2;
      print(qcashier.screen11.dsp_flg2);
      expect(qcashier.screen11.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.dsp_flg2 = defalut;
      print(qcashier.screen11.dsp_flg2);
      expect(qcashier.screen11.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00609_element_check_00586 **********\n\n");
    });

    test('00610_element_check_00587', () async {
      print("\n********** テスト実行：00610_element_check_00587 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.movie01_ext;
      print(qcashier.screen11.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.movie01_ext = testData1;
      print(qcashier.screen11.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.movie01_ext = testData2;
      print(qcashier.screen11.movie01_ext);
      expect(qcashier.screen11.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.movie01_ext = defalut;
      print(qcashier.screen11.movie01_ext);
      expect(qcashier.screen11.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00610_element_check_00587 **********\n\n");
    });

    test('00611_element_check_00588', () async {
      print("\n********** テスト実行：00611_element_check_00588 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.movie02_ext;
      print(qcashier.screen11.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.movie02_ext = testData1;
      print(qcashier.screen11.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.movie02_ext = testData2;
      print(qcashier.screen11.movie02_ext);
      expect(qcashier.screen11.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.movie02_ext = defalut;
      print(qcashier.screen11.movie02_ext);
      expect(qcashier.screen11.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00611_element_check_00588 **********\n\n");
    });

    test('00612_element_check_00589', () async {
      print("\n********** テスト実行：00612_element_check_00589 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.movie03_ext;
      print(qcashier.screen11.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.movie03_ext = testData1;
      print(qcashier.screen11.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.movie03_ext = testData2;
      print(qcashier.screen11.movie03_ext);
      expect(qcashier.screen11.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.movie03_ext = defalut;
      print(qcashier.screen11.movie03_ext);
      expect(qcashier.screen11.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00612_element_check_00589 **********\n\n");
    });

    test('00613_element_check_00590', () async {
      print("\n********** テスト実行：00613_element_check_00590 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.movie04_ext;
      print(qcashier.screen11.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.movie04_ext = testData1;
      print(qcashier.screen11.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.movie04_ext = testData2;
      print(qcashier.screen11.movie04_ext);
      expect(qcashier.screen11.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.movie04_ext = defalut;
      print(qcashier.screen11.movie04_ext);
      expect(qcashier.screen11.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00613_element_check_00590 **********\n\n");
    });

    test('00614_element_check_00591', () async {
      print("\n********** テスト実行：00614_element_check_00591 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line_title;
      print(qcashier.screen11.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line_title = testData1s;
      print(qcashier.screen11.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line_title = testData2s;
      print(qcashier.screen11.line_title);
      expect(qcashier.screen11.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line_title = defalut;
      print(qcashier.screen11.line_title);
      expect(qcashier.screen11.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00614_element_check_00591 **********\n\n");
    });

    test('00615_element_check_00592', () async {
      print("\n********** テスト実行：00615_element_check_00592 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line_title_ex;
      print(qcashier.screen11.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line_title_ex = testData1s;
      print(qcashier.screen11.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line_title_ex = testData2s;
      print(qcashier.screen11.line_title_ex);
      expect(qcashier.screen11.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line_title_ex = defalut;
      print(qcashier.screen11.line_title_ex);
      expect(qcashier.screen11.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00615_element_check_00592 **********\n\n");
    });

    test('00616_element_check_00593', () async {
      print("\n********** テスト実行：00616_element_check_00593 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line1;
      print(qcashier.screen11.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line1 = testData1s;
      print(qcashier.screen11.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line1 = testData2s;
      print(qcashier.screen11.line1);
      expect(qcashier.screen11.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line1 = defalut;
      print(qcashier.screen11.line1);
      expect(qcashier.screen11.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00616_element_check_00593 **********\n\n");
    });

    test('00617_element_check_00594', () async {
      print("\n********** テスト実行：00617_element_check_00594 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line2;
      print(qcashier.screen11.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line2 = testData1s;
      print(qcashier.screen11.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line2 = testData2s;
      print(qcashier.screen11.line2);
      expect(qcashier.screen11.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line2 = defalut;
      print(qcashier.screen11.line2);
      expect(qcashier.screen11.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00617_element_check_00594 **********\n\n");
    });

    test('00618_element_check_00595', () async {
      print("\n********** テスト実行：00618_element_check_00595 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line3;
      print(qcashier.screen11.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line3 = testData1s;
      print(qcashier.screen11.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line3 = testData2s;
      print(qcashier.screen11.line3);
      expect(qcashier.screen11.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line3 = defalut;
      print(qcashier.screen11.line3);
      expect(qcashier.screen11.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00618_element_check_00595 **********\n\n");
    });

    test('00619_element_check_00596', () async {
      print("\n********** テスト実行：00619_element_check_00596 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line4;
      print(qcashier.screen11.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line4 = testData1s;
      print(qcashier.screen11.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line4 = testData2s;
      print(qcashier.screen11.line4);
      expect(qcashier.screen11.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line4 = defalut;
      print(qcashier.screen11.line4);
      expect(qcashier.screen11.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00619_element_check_00596 **********\n\n");
    });

    test('00620_element_check_00597', () async {
      print("\n********** テスト実行：00620_element_check_00597 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line1_ex;
      print(qcashier.screen11.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line1_ex = testData1s;
      print(qcashier.screen11.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line1_ex = testData2s;
      print(qcashier.screen11.line1_ex);
      expect(qcashier.screen11.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line1_ex = defalut;
      print(qcashier.screen11.line1_ex);
      expect(qcashier.screen11.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00620_element_check_00597 **********\n\n");
    });

    test('00621_element_check_00598', () async {
      print("\n********** テスト実行：00621_element_check_00598 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line2_ex;
      print(qcashier.screen11.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line2_ex = testData1s;
      print(qcashier.screen11.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line2_ex = testData2s;
      print(qcashier.screen11.line2_ex);
      expect(qcashier.screen11.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line2_ex = defalut;
      print(qcashier.screen11.line2_ex);
      expect(qcashier.screen11.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00621_element_check_00598 **********\n\n");
    });

    test('00622_element_check_00599', () async {
      print("\n********** テスト実行：00622_element_check_00599 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line3_ex;
      print(qcashier.screen11.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line3_ex = testData1s;
      print(qcashier.screen11.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line3_ex = testData2s;
      print(qcashier.screen11.line3_ex);
      expect(qcashier.screen11.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line3_ex = defalut;
      print(qcashier.screen11.line3_ex);
      expect(qcashier.screen11.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00622_element_check_00599 **********\n\n");
    });

    test('00623_element_check_00600', () async {
      print("\n********** テスト実行：00623_element_check_00600 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.line4_ex;
      print(qcashier.screen11.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.line4_ex = testData1s;
      print(qcashier.screen11.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.line4_ex = testData2s;
      print(qcashier.screen11.line4_ex);
      expect(qcashier.screen11.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.line4_ex = defalut;
      print(qcashier.screen11.line4_ex);
      expect(qcashier.screen11.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00623_element_check_00600 **********\n\n");
    });

    test('00624_element_check_00601', () async {
      print("\n********** テスト実行：00624_element_check_00601 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.sound_led1;
      print(qcashier.screen11.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.sound_led1 = testData1;
      print(qcashier.screen11.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.sound_led1 = testData2;
      print(qcashier.screen11.sound_led1);
      expect(qcashier.screen11.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.sound_led1 = defalut;
      print(qcashier.screen11.sound_led1);
      expect(qcashier.screen11.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00624_element_check_00601 **********\n\n");
    });

    test('00625_element_check_00602', () async {
      print("\n********** テスト実行：00625_element_check_00602 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.sound_led2;
      print(qcashier.screen11.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.sound_led2 = testData1;
      print(qcashier.screen11.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.sound_led2 = testData2;
      print(qcashier.screen11.sound_led2);
      expect(qcashier.screen11.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.sound_led2 = defalut;
      print(qcashier.screen11.sound_led2);
      expect(qcashier.screen11.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00625_element_check_00602 **********\n\n");
    });

    test('00626_element_check_00603', () async {
      print("\n********** テスト実行：00626_element_check_00603 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen11.sound_led3;
      print(qcashier.screen11.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen11.sound_led3 = testData1;
      print(qcashier.screen11.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen11.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen11.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen11.sound_led3 = testData2;
      print(qcashier.screen11.sound_led3);
      expect(qcashier.screen11.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen11.sound_led3 = defalut;
      print(qcashier.screen11.sound_led3);
      expect(qcashier.screen11.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen11.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00626_element_check_00603 **********\n\n");
    });

    test('00627_element_check_00604', () async {
      print("\n********** テスト実行：00627_element_check_00604 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.title;
      print(qcashier.screen12.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.title = testData1s;
      print(qcashier.screen12.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.title = testData2s;
      print(qcashier.screen12.title);
      expect(qcashier.screen12.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.title = defalut;
      print(qcashier.screen12.title);
      expect(qcashier.screen12.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00627_element_check_00604 **********\n\n");
    });

    test('00628_element_check_00605', () async {
      print("\n********** テスト実行：00628_element_check_00605 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.msg1;
      print(qcashier.screen12.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.msg1 = testData1s;
      print(qcashier.screen12.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.msg1 = testData2s;
      print(qcashier.screen12.msg1);
      expect(qcashier.screen12.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.msg1 = defalut;
      print(qcashier.screen12.msg1);
      expect(qcashier.screen12.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00628_element_check_00605 **********\n\n");
    });

    test('00629_element_check_00606', () async {
      print("\n********** テスト実行：00629_element_check_00606 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.msg2;
      print(qcashier.screen12.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.msg2 = testData1s;
      print(qcashier.screen12.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.msg2 = testData2s;
      print(qcashier.screen12.msg2);
      expect(qcashier.screen12.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.msg2 = defalut;
      print(qcashier.screen12.msg2);
      expect(qcashier.screen12.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00629_element_check_00606 **********\n\n");
    });

    test('00630_element_check_00607', () async {
      print("\n********** テスト実行：00630_element_check_00607 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.msg1_size;
      print(qcashier.screen12.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.msg1_size = testData1;
      print(qcashier.screen12.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.msg1_size = testData2;
      print(qcashier.screen12.msg1_size);
      expect(qcashier.screen12.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.msg1_size = defalut;
      print(qcashier.screen12.msg1_size);
      expect(qcashier.screen12.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00630_element_check_00607 **********\n\n");
    });

    test('00631_element_check_00608', () async {
      print("\n********** テスト実行：00631_element_check_00608 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.msg2_size;
      print(qcashier.screen12.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.msg2_size = testData1;
      print(qcashier.screen12.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.msg2_size = testData2;
      print(qcashier.screen12.msg2_size);
      expect(qcashier.screen12.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.msg2_size = defalut;
      print(qcashier.screen12.msg2_size);
      expect(qcashier.screen12.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00631_element_check_00608 **********\n\n");
    });

    test('00632_element_check_00609', () async {
      print("\n********** テスト実行：00632_element_check_00609 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.sound1;
      print(qcashier.screen12.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.sound1 = testData1;
      print(qcashier.screen12.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.sound1 = testData2;
      print(qcashier.screen12.sound1);
      expect(qcashier.screen12.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.sound1 = defalut;
      print(qcashier.screen12.sound1);
      expect(qcashier.screen12.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00632_element_check_00609 **********\n\n");
    });

    test('00633_element_check_00610', () async {
      print("\n********** テスト実行：00633_element_check_00610 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.sound2;
      print(qcashier.screen12.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.sound2 = testData1;
      print(qcashier.screen12.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.sound2 = testData2;
      print(qcashier.screen12.sound2);
      expect(qcashier.screen12.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.sound2 = defalut;
      print(qcashier.screen12.sound2);
      expect(qcashier.screen12.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00633_element_check_00610 **********\n\n");
    });

    test('00634_element_check_00611', () async {
      print("\n********** テスト実行：00634_element_check_00611 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.sound3;
      print(qcashier.screen12.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.sound3 = testData1;
      print(qcashier.screen12.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.sound3 = testData2;
      print(qcashier.screen12.sound3);
      expect(qcashier.screen12.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.sound3 = defalut;
      print(qcashier.screen12.sound3);
      expect(qcashier.screen12.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00634_element_check_00611 **********\n\n");
    });

    test('00635_element_check_00612', () async {
      print("\n********** テスト実行：00635_element_check_00612 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.snd_timer;
      print(qcashier.screen12.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.snd_timer = testData1;
      print(qcashier.screen12.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.snd_timer = testData2;
      print(qcashier.screen12.snd_timer);
      expect(qcashier.screen12.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.snd_timer = defalut;
      print(qcashier.screen12.snd_timer);
      expect(qcashier.screen12.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00635_element_check_00612 **********\n\n");
    });

    test('00636_element_check_00613', () async {
      print("\n********** テスト実行：00636_element_check_00613 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.timer1;
      print(qcashier.screen12.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.timer1 = testData1;
      print(qcashier.screen12.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.timer1 = testData2;
      print(qcashier.screen12.timer1);
      expect(qcashier.screen12.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.timer1 = defalut;
      print(qcashier.screen12.timer1);
      expect(qcashier.screen12.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00636_element_check_00613 **********\n\n");
    });

    test('00637_element_check_00614', () async {
      print("\n********** テスト実行：00637_element_check_00614 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.timer2;
      print(qcashier.screen12.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.timer2 = testData1;
      print(qcashier.screen12.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.timer2 = testData2;
      print(qcashier.screen12.timer2);
      expect(qcashier.screen12.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.timer2 = defalut;
      print(qcashier.screen12.timer2);
      expect(qcashier.screen12.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00637_element_check_00614 **********\n\n");
    });

    test('00638_element_check_00615', () async {
      print("\n********** テスト実行：00638_element_check_00615 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.timer3;
      print(qcashier.screen12.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.timer3 = testData1;
      print(qcashier.screen12.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.timer3 = testData2;
      print(qcashier.screen12.timer3);
      expect(qcashier.screen12.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.timer3 = defalut;
      print(qcashier.screen12.timer3);
      expect(qcashier.screen12.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00638_element_check_00615 **********\n\n");
    });

    test('00639_element_check_00616', () async {
      print("\n********** テスト実行：00639_element_check_00616 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.dsp_flg1;
      print(qcashier.screen12.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.dsp_flg1 = testData1;
      print(qcashier.screen12.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.dsp_flg1 = testData2;
      print(qcashier.screen12.dsp_flg1);
      expect(qcashier.screen12.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.dsp_flg1 = defalut;
      print(qcashier.screen12.dsp_flg1);
      expect(qcashier.screen12.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00639_element_check_00616 **********\n\n");
    });

    test('00640_element_check_00617', () async {
      print("\n********** テスト実行：00640_element_check_00617 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.dsp_flg2;
      print(qcashier.screen12.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.dsp_flg2 = testData1;
      print(qcashier.screen12.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.dsp_flg2 = testData2;
      print(qcashier.screen12.dsp_flg2);
      expect(qcashier.screen12.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.dsp_flg2 = defalut;
      print(qcashier.screen12.dsp_flg2);
      expect(qcashier.screen12.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00640_element_check_00617 **********\n\n");
    });

    test('00641_element_check_00618', () async {
      print("\n********** テスト実行：00641_element_check_00618 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.movie01_ext;
      print(qcashier.screen12.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.movie01_ext = testData1;
      print(qcashier.screen12.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.movie01_ext = testData2;
      print(qcashier.screen12.movie01_ext);
      expect(qcashier.screen12.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.movie01_ext = defalut;
      print(qcashier.screen12.movie01_ext);
      expect(qcashier.screen12.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00641_element_check_00618 **********\n\n");
    });

    test('00642_element_check_00619', () async {
      print("\n********** テスト実行：00642_element_check_00619 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.movie02_ext;
      print(qcashier.screen12.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.movie02_ext = testData1;
      print(qcashier.screen12.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.movie02_ext = testData2;
      print(qcashier.screen12.movie02_ext);
      expect(qcashier.screen12.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.movie02_ext = defalut;
      print(qcashier.screen12.movie02_ext);
      expect(qcashier.screen12.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00642_element_check_00619 **********\n\n");
    });

    test('00643_element_check_00620', () async {
      print("\n********** テスト実行：00643_element_check_00620 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.movie03_ext;
      print(qcashier.screen12.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.movie03_ext = testData1;
      print(qcashier.screen12.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.movie03_ext = testData2;
      print(qcashier.screen12.movie03_ext);
      expect(qcashier.screen12.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.movie03_ext = defalut;
      print(qcashier.screen12.movie03_ext);
      expect(qcashier.screen12.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00643_element_check_00620 **********\n\n");
    });

    test('00644_element_check_00621', () async {
      print("\n********** テスト実行：00644_element_check_00621 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.movie04_ext;
      print(qcashier.screen12.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.movie04_ext = testData1;
      print(qcashier.screen12.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.movie04_ext = testData2;
      print(qcashier.screen12.movie04_ext);
      expect(qcashier.screen12.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.movie04_ext = defalut;
      print(qcashier.screen12.movie04_ext);
      expect(qcashier.screen12.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00644_element_check_00621 **********\n\n");
    });

    test('00645_element_check_00622', () async {
      print("\n********** テスト実行：00645_element_check_00622 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line_title;
      print(qcashier.screen12.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line_title = testData1s;
      print(qcashier.screen12.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line_title = testData2s;
      print(qcashier.screen12.line_title);
      expect(qcashier.screen12.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line_title = defalut;
      print(qcashier.screen12.line_title);
      expect(qcashier.screen12.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00645_element_check_00622 **********\n\n");
    });

    test('00646_element_check_00623', () async {
      print("\n********** テスト実行：00646_element_check_00623 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line_title_ex;
      print(qcashier.screen12.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line_title_ex = testData1s;
      print(qcashier.screen12.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line_title_ex = testData2s;
      print(qcashier.screen12.line_title_ex);
      expect(qcashier.screen12.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line_title_ex = defalut;
      print(qcashier.screen12.line_title_ex);
      expect(qcashier.screen12.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00646_element_check_00623 **********\n\n");
    });

    test('00647_element_check_00624', () async {
      print("\n********** テスト実行：00647_element_check_00624 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line1;
      print(qcashier.screen12.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line1 = testData1s;
      print(qcashier.screen12.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line1 = testData2s;
      print(qcashier.screen12.line1);
      expect(qcashier.screen12.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line1 = defalut;
      print(qcashier.screen12.line1);
      expect(qcashier.screen12.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00647_element_check_00624 **********\n\n");
    });

    test('00648_element_check_00625', () async {
      print("\n********** テスト実行：00648_element_check_00625 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line2;
      print(qcashier.screen12.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line2 = testData1s;
      print(qcashier.screen12.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line2 = testData2s;
      print(qcashier.screen12.line2);
      expect(qcashier.screen12.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line2 = defalut;
      print(qcashier.screen12.line2);
      expect(qcashier.screen12.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00648_element_check_00625 **********\n\n");
    });

    test('00649_element_check_00626', () async {
      print("\n********** テスト実行：00649_element_check_00626 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line3;
      print(qcashier.screen12.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line3 = testData1s;
      print(qcashier.screen12.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line3 = testData2s;
      print(qcashier.screen12.line3);
      expect(qcashier.screen12.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line3 = defalut;
      print(qcashier.screen12.line3);
      expect(qcashier.screen12.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00649_element_check_00626 **********\n\n");
    });

    test('00650_element_check_00627', () async {
      print("\n********** テスト実行：00650_element_check_00627 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line4;
      print(qcashier.screen12.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line4 = testData1s;
      print(qcashier.screen12.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line4 = testData2s;
      print(qcashier.screen12.line4);
      expect(qcashier.screen12.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line4 = defalut;
      print(qcashier.screen12.line4);
      expect(qcashier.screen12.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00650_element_check_00627 **********\n\n");
    });

    test('00651_element_check_00628', () async {
      print("\n********** テスト実行：00651_element_check_00628 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line1_ex;
      print(qcashier.screen12.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line1_ex = testData1s;
      print(qcashier.screen12.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line1_ex = testData2s;
      print(qcashier.screen12.line1_ex);
      expect(qcashier.screen12.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line1_ex = defalut;
      print(qcashier.screen12.line1_ex);
      expect(qcashier.screen12.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00651_element_check_00628 **********\n\n");
    });

    test('00652_element_check_00629', () async {
      print("\n********** テスト実行：00652_element_check_00629 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line2_ex;
      print(qcashier.screen12.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line2_ex = testData1s;
      print(qcashier.screen12.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line2_ex = testData2s;
      print(qcashier.screen12.line2_ex);
      expect(qcashier.screen12.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line2_ex = defalut;
      print(qcashier.screen12.line2_ex);
      expect(qcashier.screen12.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00652_element_check_00629 **********\n\n");
    });

    test('00653_element_check_00630', () async {
      print("\n********** テスト実行：00653_element_check_00630 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line3_ex;
      print(qcashier.screen12.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line3_ex = testData1s;
      print(qcashier.screen12.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line3_ex = testData2s;
      print(qcashier.screen12.line3_ex);
      expect(qcashier.screen12.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line3_ex = defalut;
      print(qcashier.screen12.line3_ex);
      expect(qcashier.screen12.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00653_element_check_00630 **********\n\n");
    });

    test('00654_element_check_00631', () async {
      print("\n********** テスト実行：00654_element_check_00631 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.line4_ex;
      print(qcashier.screen12.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.line4_ex = testData1s;
      print(qcashier.screen12.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.line4_ex = testData2s;
      print(qcashier.screen12.line4_ex);
      expect(qcashier.screen12.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.line4_ex = defalut;
      print(qcashier.screen12.line4_ex);
      expect(qcashier.screen12.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00654_element_check_00631 **********\n\n");
    });

    test('00655_element_check_00632', () async {
      print("\n********** テスト実行：00655_element_check_00632 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.sound_led1;
      print(qcashier.screen12.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.sound_led1 = testData1;
      print(qcashier.screen12.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.sound_led1 = testData2;
      print(qcashier.screen12.sound_led1);
      expect(qcashier.screen12.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.sound_led1 = defalut;
      print(qcashier.screen12.sound_led1);
      expect(qcashier.screen12.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00655_element_check_00632 **********\n\n");
    });

    test('00656_element_check_00633', () async {
      print("\n********** テスト実行：00656_element_check_00633 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.sound_led2;
      print(qcashier.screen12.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.sound_led2 = testData1;
      print(qcashier.screen12.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.sound_led2 = testData2;
      print(qcashier.screen12.sound_led2);
      expect(qcashier.screen12.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.sound_led2 = defalut;
      print(qcashier.screen12.sound_led2);
      expect(qcashier.screen12.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00656_element_check_00633 **********\n\n");
    });

    test('00657_element_check_00634', () async {
      print("\n********** テスト実行：00657_element_check_00634 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen12.sound_led3;
      print(qcashier.screen12.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen12.sound_led3 = testData1;
      print(qcashier.screen12.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen12.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen12.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen12.sound_led3 = testData2;
      print(qcashier.screen12.sound_led3);
      expect(qcashier.screen12.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen12.sound_led3 = defalut;
      print(qcashier.screen12.sound_led3);
      expect(qcashier.screen12.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen12.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00657_element_check_00634 **********\n\n");
    });

    test('00658_element_check_00635', () async {
      print("\n********** テスト実行：00658_element_check_00635 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.title;
      print(qcashier.screen13.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.title = testData1s;
      print(qcashier.screen13.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.title = testData2s;
      print(qcashier.screen13.title);
      expect(qcashier.screen13.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.title = defalut;
      print(qcashier.screen13.title);
      expect(qcashier.screen13.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00658_element_check_00635 **********\n\n");
    });

    test('00659_element_check_00636', () async {
      print("\n********** テスト実行：00659_element_check_00636 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.msg1;
      print(qcashier.screen13.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.msg1 = testData1s;
      print(qcashier.screen13.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.msg1 = testData2s;
      print(qcashier.screen13.msg1);
      expect(qcashier.screen13.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.msg1 = defalut;
      print(qcashier.screen13.msg1);
      expect(qcashier.screen13.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00659_element_check_00636 **********\n\n");
    });

    test('00660_element_check_00637', () async {
      print("\n********** テスト実行：00660_element_check_00637 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.msg2;
      print(qcashier.screen13.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.msg2 = testData1s;
      print(qcashier.screen13.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.msg2 = testData2s;
      print(qcashier.screen13.msg2);
      expect(qcashier.screen13.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.msg2 = defalut;
      print(qcashier.screen13.msg2);
      expect(qcashier.screen13.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00660_element_check_00637 **********\n\n");
    });

    test('00661_element_check_00638', () async {
      print("\n********** テスト実行：00661_element_check_00638 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.msg1_size;
      print(qcashier.screen13.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.msg1_size = testData1;
      print(qcashier.screen13.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.msg1_size = testData2;
      print(qcashier.screen13.msg1_size);
      expect(qcashier.screen13.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.msg1_size = defalut;
      print(qcashier.screen13.msg1_size);
      expect(qcashier.screen13.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00661_element_check_00638 **********\n\n");
    });

    test('00662_element_check_00639', () async {
      print("\n********** テスト実行：00662_element_check_00639 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.msg2_size;
      print(qcashier.screen13.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.msg2_size = testData1;
      print(qcashier.screen13.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.msg2_size = testData2;
      print(qcashier.screen13.msg2_size);
      expect(qcashier.screen13.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.msg2_size = defalut;
      print(qcashier.screen13.msg2_size);
      expect(qcashier.screen13.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00662_element_check_00639 **********\n\n");
    });

    test('00663_element_check_00640', () async {
      print("\n********** テスト実行：00663_element_check_00640 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.sound1;
      print(qcashier.screen13.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.sound1 = testData1;
      print(qcashier.screen13.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.sound1 = testData2;
      print(qcashier.screen13.sound1);
      expect(qcashier.screen13.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.sound1 = defalut;
      print(qcashier.screen13.sound1);
      expect(qcashier.screen13.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00663_element_check_00640 **********\n\n");
    });

    test('00664_element_check_00641', () async {
      print("\n********** テスト実行：00664_element_check_00641 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.sound2;
      print(qcashier.screen13.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.sound2 = testData1;
      print(qcashier.screen13.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.sound2 = testData2;
      print(qcashier.screen13.sound2);
      expect(qcashier.screen13.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.sound2 = defalut;
      print(qcashier.screen13.sound2);
      expect(qcashier.screen13.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00664_element_check_00641 **********\n\n");
    });

    test('00665_element_check_00642', () async {
      print("\n********** テスト実行：00665_element_check_00642 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.sound3;
      print(qcashier.screen13.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.sound3 = testData1;
      print(qcashier.screen13.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.sound3 = testData2;
      print(qcashier.screen13.sound3);
      expect(qcashier.screen13.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.sound3 = defalut;
      print(qcashier.screen13.sound3);
      expect(qcashier.screen13.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00665_element_check_00642 **********\n\n");
    });

    test('00666_element_check_00643', () async {
      print("\n********** テスト実行：00666_element_check_00643 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.snd_timer;
      print(qcashier.screen13.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.snd_timer = testData1;
      print(qcashier.screen13.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.snd_timer = testData2;
      print(qcashier.screen13.snd_timer);
      expect(qcashier.screen13.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.snd_timer = defalut;
      print(qcashier.screen13.snd_timer);
      expect(qcashier.screen13.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00666_element_check_00643 **********\n\n");
    });

    test('00667_element_check_00644', () async {
      print("\n********** テスト実行：00667_element_check_00644 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.timer1;
      print(qcashier.screen13.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.timer1 = testData1;
      print(qcashier.screen13.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.timer1 = testData2;
      print(qcashier.screen13.timer1);
      expect(qcashier.screen13.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.timer1 = defalut;
      print(qcashier.screen13.timer1);
      expect(qcashier.screen13.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00667_element_check_00644 **********\n\n");
    });

    test('00668_element_check_00645', () async {
      print("\n********** テスト実行：00668_element_check_00645 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.timer2;
      print(qcashier.screen13.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.timer2 = testData1;
      print(qcashier.screen13.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.timer2 = testData2;
      print(qcashier.screen13.timer2);
      expect(qcashier.screen13.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.timer2 = defalut;
      print(qcashier.screen13.timer2);
      expect(qcashier.screen13.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00668_element_check_00645 **********\n\n");
    });

    test('00669_element_check_00646', () async {
      print("\n********** テスト実行：00669_element_check_00646 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.timer3;
      print(qcashier.screen13.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.timer3 = testData1;
      print(qcashier.screen13.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.timer3 = testData2;
      print(qcashier.screen13.timer3);
      expect(qcashier.screen13.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.timer3 = defalut;
      print(qcashier.screen13.timer3);
      expect(qcashier.screen13.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00669_element_check_00646 **********\n\n");
    });

    test('00670_element_check_00647', () async {
      print("\n********** テスト実行：00670_element_check_00647 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.dsp_flg1;
      print(qcashier.screen13.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.dsp_flg1 = testData1;
      print(qcashier.screen13.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.dsp_flg1 = testData2;
      print(qcashier.screen13.dsp_flg1);
      expect(qcashier.screen13.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.dsp_flg1 = defalut;
      print(qcashier.screen13.dsp_flg1);
      expect(qcashier.screen13.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00670_element_check_00647 **********\n\n");
    });

    test('00671_element_check_00648', () async {
      print("\n********** テスト実行：00671_element_check_00648 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.dsp_flg2;
      print(qcashier.screen13.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.dsp_flg2 = testData1;
      print(qcashier.screen13.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.dsp_flg2 = testData2;
      print(qcashier.screen13.dsp_flg2);
      expect(qcashier.screen13.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.dsp_flg2 = defalut;
      print(qcashier.screen13.dsp_flg2);
      expect(qcashier.screen13.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00671_element_check_00648 **********\n\n");
    });

    test('00672_element_check_00649', () async {
      print("\n********** テスト実行：00672_element_check_00649 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.movie01_ext;
      print(qcashier.screen13.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.movie01_ext = testData1;
      print(qcashier.screen13.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.movie01_ext = testData2;
      print(qcashier.screen13.movie01_ext);
      expect(qcashier.screen13.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.movie01_ext = defalut;
      print(qcashier.screen13.movie01_ext);
      expect(qcashier.screen13.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00672_element_check_00649 **********\n\n");
    });

    test('00673_element_check_00650', () async {
      print("\n********** テスト実行：00673_element_check_00650 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.movie02_ext;
      print(qcashier.screen13.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.movie02_ext = testData1;
      print(qcashier.screen13.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.movie02_ext = testData2;
      print(qcashier.screen13.movie02_ext);
      expect(qcashier.screen13.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.movie02_ext = defalut;
      print(qcashier.screen13.movie02_ext);
      expect(qcashier.screen13.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00673_element_check_00650 **********\n\n");
    });

    test('00674_element_check_00651', () async {
      print("\n********** テスト実行：00674_element_check_00651 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.movie03_ext;
      print(qcashier.screen13.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.movie03_ext = testData1;
      print(qcashier.screen13.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.movie03_ext = testData2;
      print(qcashier.screen13.movie03_ext);
      expect(qcashier.screen13.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.movie03_ext = defalut;
      print(qcashier.screen13.movie03_ext);
      expect(qcashier.screen13.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00674_element_check_00651 **********\n\n");
    });

    test('00675_element_check_00652', () async {
      print("\n********** テスト実行：00675_element_check_00652 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.movie04_ext;
      print(qcashier.screen13.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.movie04_ext = testData1;
      print(qcashier.screen13.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.movie04_ext = testData2;
      print(qcashier.screen13.movie04_ext);
      expect(qcashier.screen13.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.movie04_ext = defalut;
      print(qcashier.screen13.movie04_ext);
      expect(qcashier.screen13.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00675_element_check_00652 **********\n\n");
    });

    test('00676_element_check_00653', () async {
      print("\n********** テスト実行：00676_element_check_00653 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line_title;
      print(qcashier.screen13.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line_title = testData1s;
      print(qcashier.screen13.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line_title = testData2s;
      print(qcashier.screen13.line_title);
      expect(qcashier.screen13.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line_title = defalut;
      print(qcashier.screen13.line_title);
      expect(qcashier.screen13.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00676_element_check_00653 **********\n\n");
    });

    test('00677_element_check_00654', () async {
      print("\n********** テスト実行：00677_element_check_00654 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line_title_ex;
      print(qcashier.screen13.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line_title_ex = testData1s;
      print(qcashier.screen13.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line_title_ex = testData2s;
      print(qcashier.screen13.line_title_ex);
      expect(qcashier.screen13.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line_title_ex = defalut;
      print(qcashier.screen13.line_title_ex);
      expect(qcashier.screen13.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00677_element_check_00654 **********\n\n");
    });

    test('00678_element_check_00655', () async {
      print("\n********** テスト実行：00678_element_check_00655 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line1;
      print(qcashier.screen13.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line1 = testData1s;
      print(qcashier.screen13.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line1 = testData2s;
      print(qcashier.screen13.line1);
      expect(qcashier.screen13.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line1 = defalut;
      print(qcashier.screen13.line1);
      expect(qcashier.screen13.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00678_element_check_00655 **********\n\n");
    });

    test('00679_element_check_00656', () async {
      print("\n********** テスト実行：00679_element_check_00656 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line2;
      print(qcashier.screen13.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line2 = testData1s;
      print(qcashier.screen13.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line2 = testData2s;
      print(qcashier.screen13.line2);
      expect(qcashier.screen13.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line2 = defalut;
      print(qcashier.screen13.line2);
      expect(qcashier.screen13.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00679_element_check_00656 **********\n\n");
    });

    test('00680_element_check_00657', () async {
      print("\n********** テスト実行：00680_element_check_00657 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line3;
      print(qcashier.screen13.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line3 = testData1s;
      print(qcashier.screen13.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line3 = testData2s;
      print(qcashier.screen13.line3);
      expect(qcashier.screen13.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line3 = defalut;
      print(qcashier.screen13.line3);
      expect(qcashier.screen13.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00680_element_check_00657 **********\n\n");
    });

    test('00681_element_check_00658', () async {
      print("\n********** テスト実行：00681_element_check_00658 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line4;
      print(qcashier.screen13.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line4 = testData1s;
      print(qcashier.screen13.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line4 = testData2s;
      print(qcashier.screen13.line4);
      expect(qcashier.screen13.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line4 = defalut;
      print(qcashier.screen13.line4);
      expect(qcashier.screen13.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00681_element_check_00658 **********\n\n");
    });

    test('00682_element_check_00659', () async {
      print("\n********** テスト実行：00682_element_check_00659 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line1_ex;
      print(qcashier.screen13.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line1_ex = testData1s;
      print(qcashier.screen13.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line1_ex = testData2s;
      print(qcashier.screen13.line1_ex);
      expect(qcashier.screen13.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line1_ex = defalut;
      print(qcashier.screen13.line1_ex);
      expect(qcashier.screen13.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00682_element_check_00659 **********\n\n");
    });

    test('00683_element_check_00660', () async {
      print("\n********** テスト実行：00683_element_check_00660 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line2_ex;
      print(qcashier.screen13.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line2_ex = testData1s;
      print(qcashier.screen13.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line2_ex = testData2s;
      print(qcashier.screen13.line2_ex);
      expect(qcashier.screen13.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line2_ex = defalut;
      print(qcashier.screen13.line2_ex);
      expect(qcashier.screen13.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00683_element_check_00660 **********\n\n");
    });

    test('00684_element_check_00661', () async {
      print("\n********** テスト実行：00684_element_check_00661 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line3_ex;
      print(qcashier.screen13.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line3_ex = testData1s;
      print(qcashier.screen13.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line3_ex = testData2s;
      print(qcashier.screen13.line3_ex);
      expect(qcashier.screen13.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line3_ex = defalut;
      print(qcashier.screen13.line3_ex);
      expect(qcashier.screen13.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00684_element_check_00661 **********\n\n");
    });

    test('00685_element_check_00662', () async {
      print("\n********** テスト実行：00685_element_check_00662 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.line4_ex;
      print(qcashier.screen13.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.line4_ex = testData1s;
      print(qcashier.screen13.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.line4_ex = testData2s;
      print(qcashier.screen13.line4_ex);
      expect(qcashier.screen13.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.line4_ex = defalut;
      print(qcashier.screen13.line4_ex);
      expect(qcashier.screen13.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00685_element_check_00662 **********\n\n");
    });

    test('00686_element_check_00663', () async {
      print("\n********** テスト実行：00686_element_check_00663 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.sound_led1;
      print(qcashier.screen13.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.sound_led1 = testData1;
      print(qcashier.screen13.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.sound_led1 = testData2;
      print(qcashier.screen13.sound_led1);
      expect(qcashier.screen13.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.sound_led1 = defalut;
      print(qcashier.screen13.sound_led1);
      expect(qcashier.screen13.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00686_element_check_00663 **********\n\n");
    });

    test('00687_element_check_00664', () async {
      print("\n********** テスト実行：00687_element_check_00664 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.sound_led2;
      print(qcashier.screen13.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.sound_led2 = testData1;
      print(qcashier.screen13.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.sound_led2 = testData2;
      print(qcashier.screen13.sound_led2);
      expect(qcashier.screen13.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.sound_led2 = defalut;
      print(qcashier.screen13.sound_led2);
      expect(qcashier.screen13.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00687_element_check_00664 **********\n\n");
    });

    test('00688_element_check_00665', () async {
      print("\n********** テスト実行：00688_element_check_00665 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen13.sound_led3;
      print(qcashier.screen13.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen13.sound_led3 = testData1;
      print(qcashier.screen13.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen13.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen13.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen13.sound_led3 = testData2;
      print(qcashier.screen13.sound_led3);
      expect(qcashier.screen13.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen13.sound_led3 = defalut;
      print(qcashier.screen13.sound_led3);
      expect(qcashier.screen13.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen13.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00688_element_check_00665 **********\n\n");
    });

    test('00689_element_check_00666', () async {
      print("\n********** テスト実行：00689_element_check_00666 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.title;
      print(qcashier.screen14.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.title = testData1s;
      print(qcashier.screen14.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.title = testData2s;
      print(qcashier.screen14.title);
      expect(qcashier.screen14.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.title = defalut;
      print(qcashier.screen14.title);
      expect(qcashier.screen14.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00689_element_check_00666 **********\n\n");
    });

    test('00690_element_check_00667', () async {
      print("\n********** テスト実行：00690_element_check_00667 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.msg1;
      print(qcashier.screen14.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.msg1 = testData1s;
      print(qcashier.screen14.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.msg1 = testData2s;
      print(qcashier.screen14.msg1);
      expect(qcashier.screen14.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.msg1 = defalut;
      print(qcashier.screen14.msg1);
      expect(qcashier.screen14.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00690_element_check_00667 **********\n\n");
    });

    test('00691_element_check_00668', () async {
      print("\n********** テスト実行：00691_element_check_00668 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.msg2;
      print(qcashier.screen14.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.msg2 = testData1s;
      print(qcashier.screen14.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.msg2 = testData2s;
      print(qcashier.screen14.msg2);
      expect(qcashier.screen14.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.msg2 = defalut;
      print(qcashier.screen14.msg2);
      expect(qcashier.screen14.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00691_element_check_00668 **********\n\n");
    });

    test('00692_element_check_00669', () async {
      print("\n********** テスト実行：00692_element_check_00669 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.msg1_size;
      print(qcashier.screen14.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.msg1_size = testData1;
      print(qcashier.screen14.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.msg1_size = testData2;
      print(qcashier.screen14.msg1_size);
      expect(qcashier.screen14.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.msg1_size = defalut;
      print(qcashier.screen14.msg1_size);
      expect(qcashier.screen14.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00692_element_check_00669 **********\n\n");
    });

    test('00693_element_check_00670', () async {
      print("\n********** テスト実行：00693_element_check_00670 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.msg2_size;
      print(qcashier.screen14.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.msg2_size = testData1;
      print(qcashier.screen14.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.msg2_size = testData2;
      print(qcashier.screen14.msg2_size);
      expect(qcashier.screen14.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.msg2_size = defalut;
      print(qcashier.screen14.msg2_size);
      expect(qcashier.screen14.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00693_element_check_00670 **********\n\n");
    });

    test('00694_element_check_00671', () async {
      print("\n********** テスト実行：00694_element_check_00671 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.sound1;
      print(qcashier.screen14.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.sound1 = testData1;
      print(qcashier.screen14.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.sound1 = testData2;
      print(qcashier.screen14.sound1);
      expect(qcashier.screen14.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.sound1 = defalut;
      print(qcashier.screen14.sound1);
      expect(qcashier.screen14.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00694_element_check_00671 **********\n\n");
    });

    test('00695_element_check_00672', () async {
      print("\n********** テスト実行：00695_element_check_00672 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.sound2;
      print(qcashier.screen14.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.sound2 = testData1;
      print(qcashier.screen14.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.sound2 = testData2;
      print(qcashier.screen14.sound2);
      expect(qcashier.screen14.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.sound2 = defalut;
      print(qcashier.screen14.sound2);
      expect(qcashier.screen14.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00695_element_check_00672 **********\n\n");
    });

    test('00696_element_check_00673', () async {
      print("\n********** テスト実行：00696_element_check_00673 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.sound3;
      print(qcashier.screen14.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.sound3 = testData1;
      print(qcashier.screen14.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.sound3 = testData2;
      print(qcashier.screen14.sound3);
      expect(qcashier.screen14.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.sound3 = defalut;
      print(qcashier.screen14.sound3);
      expect(qcashier.screen14.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00696_element_check_00673 **********\n\n");
    });

    test('00697_element_check_00674', () async {
      print("\n********** テスト実行：00697_element_check_00674 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.snd_timer;
      print(qcashier.screen14.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.snd_timer = testData1;
      print(qcashier.screen14.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.snd_timer = testData2;
      print(qcashier.screen14.snd_timer);
      expect(qcashier.screen14.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.snd_timer = defalut;
      print(qcashier.screen14.snd_timer);
      expect(qcashier.screen14.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00697_element_check_00674 **********\n\n");
    });

    test('00698_element_check_00675', () async {
      print("\n********** テスト実行：00698_element_check_00675 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.timer1;
      print(qcashier.screen14.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.timer1 = testData1;
      print(qcashier.screen14.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.timer1 = testData2;
      print(qcashier.screen14.timer1);
      expect(qcashier.screen14.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.timer1 = defalut;
      print(qcashier.screen14.timer1);
      expect(qcashier.screen14.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00698_element_check_00675 **********\n\n");
    });

    test('00699_element_check_00676', () async {
      print("\n********** テスト実行：00699_element_check_00676 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.timer2;
      print(qcashier.screen14.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.timer2 = testData1;
      print(qcashier.screen14.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.timer2 = testData2;
      print(qcashier.screen14.timer2);
      expect(qcashier.screen14.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.timer2 = defalut;
      print(qcashier.screen14.timer2);
      expect(qcashier.screen14.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00699_element_check_00676 **********\n\n");
    });

    test('00700_element_check_00677', () async {
      print("\n********** テスト実行：00700_element_check_00677 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.timer3;
      print(qcashier.screen14.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.timer3 = testData1;
      print(qcashier.screen14.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.timer3 = testData2;
      print(qcashier.screen14.timer3);
      expect(qcashier.screen14.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.timer3 = defalut;
      print(qcashier.screen14.timer3);
      expect(qcashier.screen14.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00700_element_check_00677 **********\n\n");
    });

    test('00701_element_check_00678', () async {
      print("\n********** テスト実行：00701_element_check_00678 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.dsp_flg1;
      print(qcashier.screen14.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.dsp_flg1 = testData1;
      print(qcashier.screen14.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.dsp_flg1 = testData2;
      print(qcashier.screen14.dsp_flg1);
      expect(qcashier.screen14.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.dsp_flg1 = defalut;
      print(qcashier.screen14.dsp_flg1);
      expect(qcashier.screen14.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00701_element_check_00678 **********\n\n");
    });

    test('00702_element_check_00679', () async {
      print("\n********** テスト実行：00702_element_check_00679 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.dsp_flg2;
      print(qcashier.screen14.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.dsp_flg2 = testData1;
      print(qcashier.screen14.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.dsp_flg2 = testData2;
      print(qcashier.screen14.dsp_flg2);
      expect(qcashier.screen14.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.dsp_flg2 = defalut;
      print(qcashier.screen14.dsp_flg2);
      expect(qcashier.screen14.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00702_element_check_00679 **********\n\n");
    });

    test('00703_element_check_00680', () async {
      print("\n********** テスト実行：00703_element_check_00680 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.movie01_ext;
      print(qcashier.screen14.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.movie01_ext = testData1;
      print(qcashier.screen14.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.movie01_ext = testData2;
      print(qcashier.screen14.movie01_ext);
      expect(qcashier.screen14.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.movie01_ext = defalut;
      print(qcashier.screen14.movie01_ext);
      expect(qcashier.screen14.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00703_element_check_00680 **********\n\n");
    });

    test('00704_element_check_00681', () async {
      print("\n********** テスト実行：00704_element_check_00681 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.movie02_ext;
      print(qcashier.screen14.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.movie02_ext = testData1;
      print(qcashier.screen14.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.movie02_ext = testData2;
      print(qcashier.screen14.movie02_ext);
      expect(qcashier.screen14.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.movie02_ext = defalut;
      print(qcashier.screen14.movie02_ext);
      expect(qcashier.screen14.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00704_element_check_00681 **********\n\n");
    });

    test('00705_element_check_00682', () async {
      print("\n********** テスト実行：00705_element_check_00682 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.movie03_ext;
      print(qcashier.screen14.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.movie03_ext = testData1;
      print(qcashier.screen14.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.movie03_ext = testData2;
      print(qcashier.screen14.movie03_ext);
      expect(qcashier.screen14.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.movie03_ext = defalut;
      print(qcashier.screen14.movie03_ext);
      expect(qcashier.screen14.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00705_element_check_00682 **********\n\n");
    });

    test('00706_element_check_00683', () async {
      print("\n********** テスト実行：00706_element_check_00683 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.movie04_ext;
      print(qcashier.screen14.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.movie04_ext = testData1;
      print(qcashier.screen14.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.movie04_ext = testData2;
      print(qcashier.screen14.movie04_ext);
      expect(qcashier.screen14.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.movie04_ext = defalut;
      print(qcashier.screen14.movie04_ext);
      expect(qcashier.screen14.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00706_element_check_00683 **********\n\n");
    });

    test('00707_element_check_00684', () async {
      print("\n********** テスト実行：00707_element_check_00684 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line_title;
      print(qcashier.screen14.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line_title = testData1s;
      print(qcashier.screen14.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line_title = testData2s;
      print(qcashier.screen14.line_title);
      expect(qcashier.screen14.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line_title = defalut;
      print(qcashier.screen14.line_title);
      expect(qcashier.screen14.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00707_element_check_00684 **********\n\n");
    });

    test('00708_element_check_00685', () async {
      print("\n********** テスト実行：00708_element_check_00685 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line_title_ex;
      print(qcashier.screen14.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line_title_ex = testData1s;
      print(qcashier.screen14.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line_title_ex = testData2s;
      print(qcashier.screen14.line_title_ex);
      expect(qcashier.screen14.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line_title_ex = defalut;
      print(qcashier.screen14.line_title_ex);
      expect(qcashier.screen14.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00708_element_check_00685 **********\n\n");
    });

    test('00709_element_check_00686', () async {
      print("\n********** テスト実行：00709_element_check_00686 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line1;
      print(qcashier.screen14.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line1 = testData1s;
      print(qcashier.screen14.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line1 = testData2s;
      print(qcashier.screen14.line1);
      expect(qcashier.screen14.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line1 = defalut;
      print(qcashier.screen14.line1);
      expect(qcashier.screen14.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00709_element_check_00686 **********\n\n");
    });

    test('00710_element_check_00687', () async {
      print("\n********** テスト実行：00710_element_check_00687 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line2;
      print(qcashier.screen14.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line2 = testData1s;
      print(qcashier.screen14.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line2 = testData2s;
      print(qcashier.screen14.line2);
      expect(qcashier.screen14.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line2 = defalut;
      print(qcashier.screen14.line2);
      expect(qcashier.screen14.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00710_element_check_00687 **********\n\n");
    });

    test('00711_element_check_00688', () async {
      print("\n********** テスト実行：00711_element_check_00688 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line3;
      print(qcashier.screen14.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line3 = testData1s;
      print(qcashier.screen14.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line3 = testData2s;
      print(qcashier.screen14.line3);
      expect(qcashier.screen14.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line3 = defalut;
      print(qcashier.screen14.line3);
      expect(qcashier.screen14.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00711_element_check_00688 **********\n\n");
    });

    test('00712_element_check_00689', () async {
      print("\n********** テスト実行：00712_element_check_00689 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line4;
      print(qcashier.screen14.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line4 = testData1s;
      print(qcashier.screen14.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line4 = testData2s;
      print(qcashier.screen14.line4);
      expect(qcashier.screen14.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line4 = defalut;
      print(qcashier.screen14.line4);
      expect(qcashier.screen14.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00712_element_check_00689 **********\n\n");
    });

    test('00713_element_check_00690', () async {
      print("\n********** テスト実行：00713_element_check_00690 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line1_ex;
      print(qcashier.screen14.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line1_ex = testData1s;
      print(qcashier.screen14.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line1_ex = testData2s;
      print(qcashier.screen14.line1_ex);
      expect(qcashier.screen14.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line1_ex = defalut;
      print(qcashier.screen14.line1_ex);
      expect(qcashier.screen14.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00713_element_check_00690 **********\n\n");
    });

    test('00714_element_check_00691', () async {
      print("\n********** テスト実行：00714_element_check_00691 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line2_ex;
      print(qcashier.screen14.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line2_ex = testData1s;
      print(qcashier.screen14.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line2_ex = testData2s;
      print(qcashier.screen14.line2_ex);
      expect(qcashier.screen14.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line2_ex = defalut;
      print(qcashier.screen14.line2_ex);
      expect(qcashier.screen14.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00714_element_check_00691 **********\n\n");
    });

    test('00715_element_check_00692', () async {
      print("\n********** テスト実行：00715_element_check_00692 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line3_ex;
      print(qcashier.screen14.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line3_ex = testData1s;
      print(qcashier.screen14.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line3_ex = testData2s;
      print(qcashier.screen14.line3_ex);
      expect(qcashier.screen14.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line3_ex = defalut;
      print(qcashier.screen14.line3_ex);
      expect(qcashier.screen14.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00715_element_check_00692 **********\n\n");
    });

    test('00716_element_check_00693', () async {
      print("\n********** テスト実行：00716_element_check_00693 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.line4_ex;
      print(qcashier.screen14.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.line4_ex = testData1s;
      print(qcashier.screen14.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.line4_ex = testData2s;
      print(qcashier.screen14.line4_ex);
      expect(qcashier.screen14.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.line4_ex = defalut;
      print(qcashier.screen14.line4_ex);
      expect(qcashier.screen14.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00716_element_check_00693 **********\n\n");
    });

    test('00717_element_check_00694', () async {
      print("\n********** テスト実行：00717_element_check_00694 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.sound_led1;
      print(qcashier.screen14.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.sound_led1 = testData1;
      print(qcashier.screen14.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.sound_led1 = testData2;
      print(qcashier.screen14.sound_led1);
      expect(qcashier.screen14.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.sound_led1 = defalut;
      print(qcashier.screen14.sound_led1);
      expect(qcashier.screen14.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00717_element_check_00694 **********\n\n");
    });

    test('00718_element_check_00695', () async {
      print("\n********** テスト実行：00718_element_check_00695 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.sound_led2;
      print(qcashier.screen14.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.sound_led2 = testData1;
      print(qcashier.screen14.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.sound_led2 = testData2;
      print(qcashier.screen14.sound_led2);
      expect(qcashier.screen14.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.sound_led2 = defalut;
      print(qcashier.screen14.sound_led2);
      expect(qcashier.screen14.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00718_element_check_00695 **********\n\n");
    });

    test('00719_element_check_00696', () async {
      print("\n********** テスト実行：00719_element_check_00696 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen14.sound_led3;
      print(qcashier.screen14.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen14.sound_led3 = testData1;
      print(qcashier.screen14.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen14.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen14.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen14.sound_led3 = testData2;
      print(qcashier.screen14.sound_led3);
      expect(qcashier.screen14.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen14.sound_led3 = defalut;
      print(qcashier.screen14.sound_led3);
      expect(qcashier.screen14.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen14.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00719_element_check_00696 **********\n\n");
    });

    test('00720_element_check_00697', () async {
      print("\n********** テスト実行：00720_element_check_00697 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.title;
      print(qcashier.screen15.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.title = testData1s;
      print(qcashier.screen15.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.title = testData2s;
      print(qcashier.screen15.title);
      expect(qcashier.screen15.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.title = defalut;
      print(qcashier.screen15.title);
      expect(qcashier.screen15.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00720_element_check_00697 **********\n\n");
    });

    test('00721_element_check_00698', () async {
      print("\n********** テスト実行：00721_element_check_00698 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.msg1;
      print(qcashier.screen15.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.msg1 = testData1s;
      print(qcashier.screen15.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.msg1 = testData2s;
      print(qcashier.screen15.msg1);
      expect(qcashier.screen15.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.msg1 = defalut;
      print(qcashier.screen15.msg1);
      expect(qcashier.screen15.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00721_element_check_00698 **********\n\n");
    });

    test('00722_element_check_00699', () async {
      print("\n********** テスト実行：00722_element_check_00699 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.msg2;
      print(qcashier.screen15.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.msg2 = testData1s;
      print(qcashier.screen15.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.msg2 = testData2s;
      print(qcashier.screen15.msg2);
      expect(qcashier.screen15.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.msg2 = defalut;
      print(qcashier.screen15.msg2);
      expect(qcashier.screen15.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00722_element_check_00699 **********\n\n");
    });

    test('00723_element_check_00700', () async {
      print("\n********** テスト実行：00723_element_check_00700 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.msg1_size;
      print(qcashier.screen15.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.msg1_size = testData1;
      print(qcashier.screen15.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.msg1_size = testData2;
      print(qcashier.screen15.msg1_size);
      expect(qcashier.screen15.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.msg1_size = defalut;
      print(qcashier.screen15.msg1_size);
      expect(qcashier.screen15.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00723_element_check_00700 **********\n\n");
    });

    test('00724_element_check_00701', () async {
      print("\n********** テスト実行：00724_element_check_00701 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.msg2_size;
      print(qcashier.screen15.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.msg2_size = testData1;
      print(qcashier.screen15.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.msg2_size = testData2;
      print(qcashier.screen15.msg2_size);
      expect(qcashier.screen15.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.msg2_size = defalut;
      print(qcashier.screen15.msg2_size);
      expect(qcashier.screen15.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00724_element_check_00701 **********\n\n");
    });

    test('00725_element_check_00702', () async {
      print("\n********** テスト実行：00725_element_check_00702 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.sound1;
      print(qcashier.screen15.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.sound1 = testData1;
      print(qcashier.screen15.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.sound1 = testData2;
      print(qcashier.screen15.sound1);
      expect(qcashier.screen15.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.sound1 = defalut;
      print(qcashier.screen15.sound1);
      expect(qcashier.screen15.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00725_element_check_00702 **********\n\n");
    });

    test('00726_element_check_00703', () async {
      print("\n********** テスト実行：00726_element_check_00703 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.sound2;
      print(qcashier.screen15.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.sound2 = testData1;
      print(qcashier.screen15.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.sound2 = testData2;
      print(qcashier.screen15.sound2);
      expect(qcashier.screen15.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.sound2 = defalut;
      print(qcashier.screen15.sound2);
      expect(qcashier.screen15.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00726_element_check_00703 **********\n\n");
    });

    test('00727_element_check_00704', () async {
      print("\n********** テスト実行：00727_element_check_00704 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.sound3;
      print(qcashier.screen15.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.sound3 = testData1;
      print(qcashier.screen15.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.sound3 = testData2;
      print(qcashier.screen15.sound3);
      expect(qcashier.screen15.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.sound3 = defalut;
      print(qcashier.screen15.sound3);
      expect(qcashier.screen15.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00727_element_check_00704 **********\n\n");
    });

    test('00728_element_check_00705', () async {
      print("\n********** テスト実行：00728_element_check_00705 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.snd_timer;
      print(qcashier.screen15.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.snd_timer = testData1;
      print(qcashier.screen15.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.snd_timer = testData2;
      print(qcashier.screen15.snd_timer);
      expect(qcashier.screen15.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.snd_timer = defalut;
      print(qcashier.screen15.snd_timer);
      expect(qcashier.screen15.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00728_element_check_00705 **********\n\n");
    });

    test('00729_element_check_00706', () async {
      print("\n********** テスト実行：00729_element_check_00706 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.timer1;
      print(qcashier.screen15.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.timer1 = testData1;
      print(qcashier.screen15.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.timer1 = testData2;
      print(qcashier.screen15.timer1);
      expect(qcashier.screen15.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.timer1 = defalut;
      print(qcashier.screen15.timer1);
      expect(qcashier.screen15.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00729_element_check_00706 **********\n\n");
    });

    test('00730_element_check_00707', () async {
      print("\n********** テスト実行：00730_element_check_00707 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.timer2;
      print(qcashier.screen15.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.timer2 = testData1;
      print(qcashier.screen15.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.timer2 = testData2;
      print(qcashier.screen15.timer2);
      expect(qcashier.screen15.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.timer2 = defalut;
      print(qcashier.screen15.timer2);
      expect(qcashier.screen15.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00730_element_check_00707 **********\n\n");
    });

    test('00731_element_check_00708', () async {
      print("\n********** テスト実行：00731_element_check_00708 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.timer3;
      print(qcashier.screen15.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.timer3 = testData1;
      print(qcashier.screen15.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.timer3 = testData2;
      print(qcashier.screen15.timer3);
      expect(qcashier.screen15.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.timer3 = defalut;
      print(qcashier.screen15.timer3);
      expect(qcashier.screen15.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00731_element_check_00708 **********\n\n");
    });

    test('00732_element_check_00709', () async {
      print("\n********** テスト実行：00732_element_check_00709 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.dsp_flg1;
      print(qcashier.screen15.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.dsp_flg1 = testData1;
      print(qcashier.screen15.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.dsp_flg1 = testData2;
      print(qcashier.screen15.dsp_flg1);
      expect(qcashier.screen15.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.dsp_flg1 = defalut;
      print(qcashier.screen15.dsp_flg1);
      expect(qcashier.screen15.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00732_element_check_00709 **********\n\n");
    });

    test('00733_element_check_00710', () async {
      print("\n********** テスト実行：00733_element_check_00710 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.dsp_flg2;
      print(qcashier.screen15.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.dsp_flg2 = testData1;
      print(qcashier.screen15.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.dsp_flg2 = testData2;
      print(qcashier.screen15.dsp_flg2);
      expect(qcashier.screen15.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.dsp_flg2 = defalut;
      print(qcashier.screen15.dsp_flg2);
      expect(qcashier.screen15.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00733_element_check_00710 **********\n\n");
    });

    test('00734_element_check_00711', () async {
      print("\n********** テスト実行：00734_element_check_00711 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.movie01_ext;
      print(qcashier.screen15.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.movie01_ext = testData1;
      print(qcashier.screen15.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.movie01_ext = testData2;
      print(qcashier.screen15.movie01_ext);
      expect(qcashier.screen15.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.movie01_ext = defalut;
      print(qcashier.screen15.movie01_ext);
      expect(qcashier.screen15.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00734_element_check_00711 **********\n\n");
    });

    test('00735_element_check_00712', () async {
      print("\n********** テスト実行：00735_element_check_00712 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.movie02_ext;
      print(qcashier.screen15.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.movie02_ext = testData1;
      print(qcashier.screen15.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.movie02_ext = testData2;
      print(qcashier.screen15.movie02_ext);
      expect(qcashier.screen15.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.movie02_ext = defalut;
      print(qcashier.screen15.movie02_ext);
      expect(qcashier.screen15.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00735_element_check_00712 **********\n\n");
    });

    test('00736_element_check_00713', () async {
      print("\n********** テスト実行：00736_element_check_00713 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.movie03_ext;
      print(qcashier.screen15.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.movie03_ext = testData1;
      print(qcashier.screen15.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.movie03_ext = testData2;
      print(qcashier.screen15.movie03_ext);
      expect(qcashier.screen15.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.movie03_ext = defalut;
      print(qcashier.screen15.movie03_ext);
      expect(qcashier.screen15.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00736_element_check_00713 **********\n\n");
    });

    test('00737_element_check_00714', () async {
      print("\n********** テスト実行：00737_element_check_00714 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.movie04_ext;
      print(qcashier.screen15.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.movie04_ext = testData1;
      print(qcashier.screen15.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.movie04_ext = testData2;
      print(qcashier.screen15.movie04_ext);
      expect(qcashier.screen15.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.movie04_ext = defalut;
      print(qcashier.screen15.movie04_ext);
      expect(qcashier.screen15.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00737_element_check_00714 **********\n\n");
    });

    test('00738_element_check_00715', () async {
      print("\n********** テスト実行：00738_element_check_00715 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line_title;
      print(qcashier.screen15.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line_title = testData1s;
      print(qcashier.screen15.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line_title = testData2s;
      print(qcashier.screen15.line_title);
      expect(qcashier.screen15.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line_title = defalut;
      print(qcashier.screen15.line_title);
      expect(qcashier.screen15.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00738_element_check_00715 **********\n\n");
    });

    test('00739_element_check_00716', () async {
      print("\n********** テスト実行：00739_element_check_00716 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line_title_ex;
      print(qcashier.screen15.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line_title_ex = testData1s;
      print(qcashier.screen15.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line_title_ex = testData2s;
      print(qcashier.screen15.line_title_ex);
      expect(qcashier.screen15.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line_title_ex = defalut;
      print(qcashier.screen15.line_title_ex);
      expect(qcashier.screen15.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00739_element_check_00716 **********\n\n");
    });

    test('00740_element_check_00717', () async {
      print("\n********** テスト実行：00740_element_check_00717 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line1;
      print(qcashier.screen15.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line1 = testData1s;
      print(qcashier.screen15.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line1 = testData2s;
      print(qcashier.screen15.line1);
      expect(qcashier.screen15.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line1 = defalut;
      print(qcashier.screen15.line1);
      expect(qcashier.screen15.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00740_element_check_00717 **********\n\n");
    });

    test('00741_element_check_00718', () async {
      print("\n********** テスト実行：00741_element_check_00718 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line2;
      print(qcashier.screen15.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line2 = testData1s;
      print(qcashier.screen15.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line2 = testData2s;
      print(qcashier.screen15.line2);
      expect(qcashier.screen15.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line2 = defalut;
      print(qcashier.screen15.line2);
      expect(qcashier.screen15.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00741_element_check_00718 **********\n\n");
    });

    test('00742_element_check_00719', () async {
      print("\n********** テスト実行：00742_element_check_00719 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line3;
      print(qcashier.screen15.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line3 = testData1s;
      print(qcashier.screen15.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line3 = testData2s;
      print(qcashier.screen15.line3);
      expect(qcashier.screen15.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line3 = defalut;
      print(qcashier.screen15.line3);
      expect(qcashier.screen15.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00742_element_check_00719 **********\n\n");
    });

    test('00743_element_check_00720', () async {
      print("\n********** テスト実行：00743_element_check_00720 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line4;
      print(qcashier.screen15.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line4 = testData1s;
      print(qcashier.screen15.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line4 = testData2s;
      print(qcashier.screen15.line4);
      expect(qcashier.screen15.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line4 = defalut;
      print(qcashier.screen15.line4);
      expect(qcashier.screen15.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00743_element_check_00720 **********\n\n");
    });

    test('00744_element_check_00721', () async {
      print("\n********** テスト実行：00744_element_check_00721 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line1_ex;
      print(qcashier.screen15.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line1_ex = testData1s;
      print(qcashier.screen15.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line1_ex = testData2s;
      print(qcashier.screen15.line1_ex);
      expect(qcashier.screen15.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line1_ex = defalut;
      print(qcashier.screen15.line1_ex);
      expect(qcashier.screen15.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00744_element_check_00721 **********\n\n");
    });

    test('00745_element_check_00722', () async {
      print("\n********** テスト実行：00745_element_check_00722 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line2_ex;
      print(qcashier.screen15.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line2_ex = testData1s;
      print(qcashier.screen15.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line2_ex = testData2s;
      print(qcashier.screen15.line2_ex);
      expect(qcashier.screen15.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line2_ex = defalut;
      print(qcashier.screen15.line2_ex);
      expect(qcashier.screen15.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00745_element_check_00722 **********\n\n");
    });

    test('00746_element_check_00723', () async {
      print("\n********** テスト実行：00746_element_check_00723 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line3_ex;
      print(qcashier.screen15.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line3_ex = testData1s;
      print(qcashier.screen15.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line3_ex = testData2s;
      print(qcashier.screen15.line3_ex);
      expect(qcashier.screen15.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line3_ex = defalut;
      print(qcashier.screen15.line3_ex);
      expect(qcashier.screen15.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00746_element_check_00723 **********\n\n");
    });

    test('00747_element_check_00724', () async {
      print("\n********** テスト実行：00747_element_check_00724 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.line4_ex;
      print(qcashier.screen15.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.line4_ex = testData1s;
      print(qcashier.screen15.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.line4_ex = testData2s;
      print(qcashier.screen15.line4_ex);
      expect(qcashier.screen15.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.line4_ex = defalut;
      print(qcashier.screen15.line4_ex);
      expect(qcashier.screen15.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00747_element_check_00724 **********\n\n");
    });

    test('00748_element_check_00725', () async {
      print("\n********** テスト実行：00748_element_check_00725 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.sound_led1;
      print(qcashier.screen15.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.sound_led1 = testData1;
      print(qcashier.screen15.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.sound_led1 = testData2;
      print(qcashier.screen15.sound_led1);
      expect(qcashier.screen15.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.sound_led1 = defalut;
      print(qcashier.screen15.sound_led1);
      expect(qcashier.screen15.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00748_element_check_00725 **********\n\n");
    });

    test('00749_element_check_00726', () async {
      print("\n********** テスト実行：00749_element_check_00726 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.sound_led2;
      print(qcashier.screen15.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.sound_led2 = testData1;
      print(qcashier.screen15.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.sound_led2 = testData2;
      print(qcashier.screen15.sound_led2);
      expect(qcashier.screen15.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.sound_led2 = defalut;
      print(qcashier.screen15.sound_led2);
      expect(qcashier.screen15.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00749_element_check_00726 **********\n\n");
    });

    test('00750_element_check_00727', () async {
      print("\n********** テスト実行：00750_element_check_00727 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen15.sound_led3;
      print(qcashier.screen15.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen15.sound_led3 = testData1;
      print(qcashier.screen15.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen15.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen15.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen15.sound_led3 = testData2;
      print(qcashier.screen15.sound_led3);
      expect(qcashier.screen15.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen15.sound_led3 = defalut;
      print(qcashier.screen15.sound_led3);
      expect(qcashier.screen15.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen15.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00750_element_check_00727 **********\n\n");
    });

    test('00751_element_check_00728', () async {
      print("\n********** テスト実行：00751_element_check_00728 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.title;
      print(qcashier.screen16.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.title = testData1s;
      print(qcashier.screen16.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.title = testData2s;
      print(qcashier.screen16.title);
      expect(qcashier.screen16.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.title = defalut;
      print(qcashier.screen16.title);
      expect(qcashier.screen16.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00751_element_check_00728 **********\n\n");
    });

    test('00752_element_check_00729', () async {
      print("\n********** テスト実行：00752_element_check_00729 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.msg1;
      print(qcashier.screen16.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.msg1 = testData1s;
      print(qcashier.screen16.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.msg1 = testData2s;
      print(qcashier.screen16.msg1);
      expect(qcashier.screen16.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.msg1 = defalut;
      print(qcashier.screen16.msg1);
      expect(qcashier.screen16.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00752_element_check_00729 **********\n\n");
    });

    test('00753_element_check_00730', () async {
      print("\n********** テスト実行：00753_element_check_00730 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.msg2;
      print(qcashier.screen16.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.msg2 = testData1s;
      print(qcashier.screen16.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.msg2 = testData2s;
      print(qcashier.screen16.msg2);
      expect(qcashier.screen16.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.msg2 = defalut;
      print(qcashier.screen16.msg2);
      expect(qcashier.screen16.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00753_element_check_00730 **********\n\n");
    });

    test('00754_element_check_00731', () async {
      print("\n********** テスト実行：00754_element_check_00731 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.msg1_size;
      print(qcashier.screen16.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.msg1_size = testData1;
      print(qcashier.screen16.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.msg1_size = testData2;
      print(qcashier.screen16.msg1_size);
      expect(qcashier.screen16.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.msg1_size = defalut;
      print(qcashier.screen16.msg1_size);
      expect(qcashier.screen16.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00754_element_check_00731 **********\n\n");
    });

    test('00755_element_check_00732', () async {
      print("\n********** テスト実行：00755_element_check_00732 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.msg2_size;
      print(qcashier.screen16.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.msg2_size = testData1;
      print(qcashier.screen16.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.msg2_size = testData2;
      print(qcashier.screen16.msg2_size);
      expect(qcashier.screen16.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.msg2_size = defalut;
      print(qcashier.screen16.msg2_size);
      expect(qcashier.screen16.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00755_element_check_00732 **********\n\n");
    });

    test('00756_element_check_00733', () async {
      print("\n********** テスト実行：00756_element_check_00733 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.sound1;
      print(qcashier.screen16.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.sound1 = testData1;
      print(qcashier.screen16.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.sound1 = testData2;
      print(qcashier.screen16.sound1);
      expect(qcashier.screen16.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.sound1 = defalut;
      print(qcashier.screen16.sound1);
      expect(qcashier.screen16.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00756_element_check_00733 **********\n\n");
    });

    test('00757_element_check_00734', () async {
      print("\n********** テスト実行：00757_element_check_00734 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.sound2;
      print(qcashier.screen16.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.sound2 = testData1s;
      print(qcashier.screen16.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.sound2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.sound2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.sound2 = testData2s;
      print(qcashier.screen16.sound2);
      expect(qcashier.screen16.sound2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.sound2 = defalut;
      print(qcashier.screen16.sound2);
      expect(qcashier.screen16.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00757_element_check_00734 **********\n\n");
    });

    test('00758_element_check_00735', () async {
      print("\n********** テスト実行：00758_element_check_00735 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.sound3;
      print(qcashier.screen16.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.sound3 = testData1s;
      print(qcashier.screen16.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.sound3 = testData2s;
      print(qcashier.screen16.sound3);
      expect(qcashier.screen16.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.sound3 = defalut;
      print(qcashier.screen16.sound3);
      expect(qcashier.screen16.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00758_element_check_00735 **********\n\n");
    });

    test('00759_element_check_00736', () async {
      print("\n********** テスト実行：00759_element_check_00736 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.snd_timer;
      print(qcashier.screen16.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.snd_timer = testData1;
      print(qcashier.screen16.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.snd_timer = testData2;
      print(qcashier.screen16.snd_timer);
      expect(qcashier.screen16.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.snd_timer = defalut;
      print(qcashier.screen16.snd_timer);
      expect(qcashier.screen16.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00759_element_check_00736 **********\n\n");
    });

    test('00760_element_check_00737', () async {
      print("\n********** テスト実行：00760_element_check_00737 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.timer1;
      print(qcashier.screen16.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.timer1 = testData1;
      print(qcashier.screen16.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.timer1 = testData2;
      print(qcashier.screen16.timer1);
      expect(qcashier.screen16.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.timer1 = defalut;
      print(qcashier.screen16.timer1);
      expect(qcashier.screen16.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00760_element_check_00737 **********\n\n");
    });

    test('00761_element_check_00738', () async {
      print("\n********** テスト実行：00761_element_check_00738 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.timer2;
      print(qcashier.screen16.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.timer2 = testData1;
      print(qcashier.screen16.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.timer2 = testData2;
      print(qcashier.screen16.timer2);
      expect(qcashier.screen16.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.timer2 = defalut;
      print(qcashier.screen16.timer2);
      expect(qcashier.screen16.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00761_element_check_00738 **********\n\n");
    });

    test('00762_element_check_00739', () async {
      print("\n********** テスト実行：00762_element_check_00739 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.timer3;
      print(qcashier.screen16.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.timer3 = testData1;
      print(qcashier.screen16.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.timer3 = testData2;
      print(qcashier.screen16.timer3);
      expect(qcashier.screen16.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.timer3 = defalut;
      print(qcashier.screen16.timer3);
      expect(qcashier.screen16.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00762_element_check_00739 **********\n\n");
    });

    test('00763_element_check_00740', () async {
      print("\n********** テスト実行：00763_element_check_00740 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.dsp_flg1;
      print(qcashier.screen16.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.dsp_flg1 = testData1;
      print(qcashier.screen16.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.dsp_flg1 = testData2;
      print(qcashier.screen16.dsp_flg1);
      expect(qcashier.screen16.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.dsp_flg1 = defalut;
      print(qcashier.screen16.dsp_flg1);
      expect(qcashier.screen16.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00763_element_check_00740 **********\n\n");
    });

    test('00764_element_check_00741', () async {
      print("\n********** テスト実行：00764_element_check_00741 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.dsp_flg2;
      print(qcashier.screen16.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.dsp_flg2 = testData1;
      print(qcashier.screen16.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.dsp_flg2 = testData2;
      print(qcashier.screen16.dsp_flg2);
      expect(qcashier.screen16.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.dsp_flg2 = defalut;
      print(qcashier.screen16.dsp_flg2);
      expect(qcashier.screen16.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00764_element_check_00741 **********\n\n");
    });

    test('00765_element_check_00742', () async {
      print("\n********** テスト実行：00765_element_check_00742 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.movie01_ext;
      print(qcashier.screen16.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.movie01_ext = testData1;
      print(qcashier.screen16.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.movie01_ext = testData2;
      print(qcashier.screen16.movie01_ext);
      expect(qcashier.screen16.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.movie01_ext = defalut;
      print(qcashier.screen16.movie01_ext);
      expect(qcashier.screen16.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00765_element_check_00742 **********\n\n");
    });

    test('00766_element_check_00743', () async {
      print("\n********** テスト実行：00766_element_check_00743 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.movie02_ext;
      print(qcashier.screen16.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.movie02_ext = testData1;
      print(qcashier.screen16.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.movie02_ext = testData2;
      print(qcashier.screen16.movie02_ext);
      expect(qcashier.screen16.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.movie02_ext = defalut;
      print(qcashier.screen16.movie02_ext);
      expect(qcashier.screen16.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00766_element_check_00743 **********\n\n");
    });

    test('00767_element_check_00744', () async {
      print("\n********** テスト実行：00767_element_check_00744 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.movie03_ext;
      print(qcashier.screen16.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.movie03_ext = testData1;
      print(qcashier.screen16.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.movie03_ext = testData2;
      print(qcashier.screen16.movie03_ext);
      expect(qcashier.screen16.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.movie03_ext = defalut;
      print(qcashier.screen16.movie03_ext);
      expect(qcashier.screen16.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00767_element_check_00744 **********\n\n");
    });

    test('00768_element_check_00745', () async {
      print("\n********** テスト実行：00768_element_check_00745 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.movie04_ext;
      print(qcashier.screen16.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.movie04_ext = testData1;
      print(qcashier.screen16.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.movie04_ext = testData2;
      print(qcashier.screen16.movie04_ext);
      expect(qcashier.screen16.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.movie04_ext = defalut;
      print(qcashier.screen16.movie04_ext);
      expect(qcashier.screen16.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00768_element_check_00745 **********\n\n");
    });

    test('00769_element_check_00746', () async {
      print("\n********** テスト実行：00769_element_check_00746 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line_title;
      print(qcashier.screen16.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line_title = testData1s;
      print(qcashier.screen16.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line_title = testData2s;
      print(qcashier.screen16.line_title);
      expect(qcashier.screen16.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line_title = defalut;
      print(qcashier.screen16.line_title);
      expect(qcashier.screen16.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00769_element_check_00746 **********\n\n");
    });

    test('00770_element_check_00747', () async {
      print("\n********** テスト実行：00770_element_check_00747 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line_title_ex;
      print(qcashier.screen16.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line_title_ex = testData1s;
      print(qcashier.screen16.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line_title_ex = testData2s;
      print(qcashier.screen16.line_title_ex);
      expect(qcashier.screen16.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line_title_ex = defalut;
      print(qcashier.screen16.line_title_ex);
      expect(qcashier.screen16.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00770_element_check_00747 **********\n\n");
    });

    test('00771_element_check_00748', () async {
      print("\n********** テスト実行：00771_element_check_00748 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line1;
      print(qcashier.screen16.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line1 = testData1s;
      print(qcashier.screen16.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line1 = testData2s;
      print(qcashier.screen16.line1);
      expect(qcashier.screen16.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line1 = defalut;
      print(qcashier.screen16.line1);
      expect(qcashier.screen16.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00771_element_check_00748 **********\n\n");
    });

    test('00772_element_check_00749', () async {
      print("\n********** テスト実行：00772_element_check_00749 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2;
      print(qcashier.screen16.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2 = testData1s;
      print(qcashier.screen16.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2 = testData2s;
      print(qcashier.screen16.line2);
      expect(qcashier.screen16.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2 = defalut;
      print(qcashier.screen16.line2);
      expect(qcashier.screen16.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00772_element_check_00749 **********\n\n");
    });

    test('00773_element_check_00750', () async {
      print("\n********** テスト実行：00773_element_check_00750 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line3;
      print(qcashier.screen16.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line3 = testData1s;
      print(qcashier.screen16.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line3 = testData2s;
      print(qcashier.screen16.line3);
      expect(qcashier.screen16.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line3 = defalut;
      print(qcashier.screen16.line3);
      expect(qcashier.screen16.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00773_element_check_00750 **********\n\n");
    });

    test('00774_element_check_00751', () async {
      print("\n********** テスト実行：00774_element_check_00751 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line4;
      print(qcashier.screen16.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line4 = testData1s;
      print(qcashier.screen16.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line4 = testData2s;
      print(qcashier.screen16.line4);
      expect(qcashier.screen16.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line4 = defalut;
      print(qcashier.screen16.line4);
      expect(qcashier.screen16.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00774_element_check_00751 **********\n\n");
    });

    test('00775_element_check_00752', () async {
      print("\n********** テスト実行：00775_element_check_00752 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line1_ex;
      print(qcashier.screen16.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line1_ex = testData1s;
      print(qcashier.screen16.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line1_ex = testData2s;
      print(qcashier.screen16.line1_ex);
      expect(qcashier.screen16.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line1_ex = defalut;
      print(qcashier.screen16.line1_ex);
      expect(qcashier.screen16.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00775_element_check_00752 **********\n\n");
    });

    test('00776_element_check_00753', () async {
      print("\n********** テスト実行：00776_element_check_00753 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_ex;
      print(qcashier.screen16.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_ex = testData1s;
      print(qcashier.screen16.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_ex = testData2s;
      print(qcashier.screen16.line2_ex);
      expect(qcashier.screen16.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_ex = defalut;
      print(qcashier.screen16.line2_ex);
      expect(qcashier.screen16.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00776_element_check_00753 **********\n\n");
    });

    test('00777_element_check_00754', () async {
      print("\n********** テスト実行：00777_element_check_00754 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line3_ex;
      print(qcashier.screen16.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line3_ex = testData1s;
      print(qcashier.screen16.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line3_ex = testData2s;
      print(qcashier.screen16.line3_ex);
      expect(qcashier.screen16.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line3_ex = defalut;
      print(qcashier.screen16.line3_ex);
      expect(qcashier.screen16.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00777_element_check_00754 **********\n\n");
    });

    test('00778_element_check_00755', () async {
      print("\n********** テスト実行：00778_element_check_00755 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line4_ex;
      print(qcashier.screen16.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line4_ex = testData1s;
      print(qcashier.screen16.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line4_ex = testData2s;
      print(qcashier.screen16.line4_ex);
      expect(qcashier.screen16.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line4_ex = defalut;
      print(qcashier.screen16.line4_ex);
      expect(qcashier.screen16.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00778_element_check_00755 **********\n\n");
    });

    test('00779_element_check_00756', () async {
      print("\n********** テスト実行：00779_element_check_00756 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.sound_led1;
      print(qcashier.screen16.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.sound_led1 = testData1;
      print(qcashier.screen16.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.sound_led1 = testData2;
      print(qcashier.screen16.sound_led1);
      expect(qcashier.screen16.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.sound_led1 = defalut;
      print(qcashier.screen16.sound_led1);
      expect(qcashier.screen16.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00779_element_check_00756 **********\n\n");
    });

    test('00780_element_check_00757', () async {
      print("\n********** テスト実行：00780_element_check_00757 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.sound_led2;
      print(qcashier.screen16.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.sound_led2 = testData1s;
      print(qcashier.screen16.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.sound_led2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.sound_led2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.sound_led2 = testData2s;
      print(qcashier.screen16.sound_led2);
      expect(qcashier.screen16.sound_led2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound_led2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.sound_led2 = defalut;
      print(qcashier.screen16.sound_led2);
      expect(qcashier.screen16.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00780_element_check_00757 **********\n\n");
    });

    test('00781_element_check_00758', () async {
      print("\n********** テスト実行：00781_element_check_00758 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.sound_led3;
      print(qcashier.screen16.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.sound_led3 = testData1s;
      print(qcashier.screen16.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.sound_led3 = testData2s;
      print(qcashier.screen16.sound_led3);
      expect(qcashier.screen16.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.sound_led3 = defalut;
      print(qcashier.screen16.sound_led3);
      expect(qcashier.screen16.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00781_element_check_00758 **********\n\n");
    });

    test('00782_element_check_00759', () async {
      print("\n********** テスト実行：00782_element_check_00759 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.msg_max;
      print(qcashier.screen16.msg_max);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.msg_max = testData1;
      print(qcashier.screen16.msg_max);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.msg_max == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.msg_max == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.msg_max = testData2;
      print(qcashier.screen16.msg_max);
      expect(qcashier.screen16.msg_max == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg_max == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.msg_max = defalut;
      print(qcashier.screen16.msg_max);
      expect(qcashier.screen16.msg_max == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.msg_max == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00782_element_check_00759 **********\n\n");
    });

    test('00783_element_check_00760', () async {
      print("\n********** テスト実行：00783_element_check_00760 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_1;
      print(qcashier.screen16.line2_1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_1 = testData1s;
      print(qcashier.screen16.line2_1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_1 = testData2s;
      print(qcashier.screen16.line2_1);
      expect(qcashier.screen16.line2_1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_1 = defalut;
      print(qcashier.screen16.line2_1);
      expect(qcashier.screen16.line2_1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00783_element_check_00760 **********\n\n");
    });

    test('00784_element_check_00761', () async {
      print("\n********** テスト実行：00784_element_check_00761 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_2;
      print(qcashier.screen16.line2_2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_2 = testData1s;
      print(qcashier.screen16.line2_2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_2 = testData2s;
      print(qcashier.screen16.line2_2);
      expect(qcashier.screen16.line2_2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_2 = defalut;
      print(qcashier.screen16.line2_2);
      expect(qcashier.screen16.line2_2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00784_element_check_00761 **********\n\n");
    });

    test('00785_element_check_00762', () async {
      print("\n********** テスト実行：00785_element_check_00762 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_3;
      print(qcashier.screen16.line2_3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_3 = testData1s;
      print(qcashier.screen16.line2_3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_3 = testData2s;
      print(qcashier.screen16.line2_3);
      expect(qcashier.screen16.line2_3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_3 = defalut;
      print(qcashier.screen16.line2_3);
      expect(qcashier.screen16.line2_3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00785_element_check_00762 **********\n\n");
    });

    test('00786_element_check_00763', () async {
      print("\n********** テスト実行：00786_element_check_00763 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_4;
      print(qcashier.screen16.line2_4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_4 = testData1s;
      print(qcashier.screen16.line2_4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_4 = testData2s;
      print(qcashier.screen16.line2_4);
      expect(qcashier.screen16.line2_4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_4 = defalut;
      print(qcashier.screen16.line2_4);
      expect(qcashier.screen16.line2_4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00786_element_check_00763 **********\n\n");
    });

    test('00787_element_check_00764', () async {
      print("\n********** テスト実行：00787_element_check_00764 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_1_ex;
      print(qcashier.screen16.line2_1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_1_ex = testData1s;
      print(qcashier.screen16.line2_1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_1_ex = testData2s;
      print(qcashier.screen16.line2_1_ex);
      expect(qcashier.screen16.line2_1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_1_ex = defalut;
      print(qcashier.screen16.line2_1_ex);
      expect(qcashier.screen16.line2_1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00787_element_check_00764 **********\n\n");
    });

    test('00788_element_check_00765', () async {
      print("\n********** テスト実行：00788_element_check_00765 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_2_ex;
      print(qcashier.screen16.line2_2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_2_ex = testData1s;
      print(qcashier.screen16.line2_2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_2_ex = testData2s;
      print(qcashier.screen16.line2_2_ex);
      expect(qcashier.screen16.line2_2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_2_ex = defalut;
      print(qcashier.screen16.line2_2_ex);
      expect(qcashier.screen16.line2_2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00788_element_check_00765 **********\n\n");
    });

    test('00789_element_check_00766', () async {
      print("\n********** テスト実行：00789_element_check_00766 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_3_ex;
      print(qcashier.screen16.line2_3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_3_ex = testData1s;
      print(qcashier.screen16.line2_3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_3_ex = testData2s;
      print(qcashier.screen16.line2_3_ex);
      expect(qcashier.screen16.line2_3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_3_ex = defalut;
      print(qcashier.screen16.line2_3_ex);
      expect(qcashier.screen16.line2_3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00789_element_check_00766 **********\n\n");
    });

    test('00790_element_check_00767', () async {
      print("\n********** テスト実行：00790_element_check_00767 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen16.line2_4_ex;
      print(qcashier.screen16.line2_4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen16.line2_4_ex = testData1s;
      print(qcashier.screen16.line2_4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen16.line2_4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen16.line2_4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen16.line2_4_ex = testData2s;
      print(qcashier.screen16.line2_4_ex);
      expect(qcashier.screen16.line2_4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen16.line2_4_ex = defalut;
      print(qcashier.screen16.line2_4_ex);
      expect(qcashier.screen16.line2_4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen16.line2_4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00790_element_check_00767 **********\n\n");
    });

    test('00791_element_check_00768', () async {
      print("\n********** テスト実行：00791_element_check_00768 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.title;
      print(qcashier.screen17.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.title = testData1s;
      print(qcashier.screen17.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.title = testData2s;
      print(qcashier.screen17.title);
      expect(qcashier.screen17.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.title = defalut;
      print(qcashier.screen17.title);
      expect(qcashier.screen17.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00791_element_check_00768 **********\n\n");
    });

    test('00792_element_check_00769', () async {
      print("\n********** テスト実行：00792_element_check_00769 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.msg1;
      print(qcashier.screen17.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.msg1 = testData1s;
      print(qcashier.screen17.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.msg1 = testData2s;
      print(qcashier.screen17.msg1);
      expect(qcashier.screen17.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.msg1 = defalut;
      print(qcashier.screen17.msg1);
      expect(qcashier.screen17.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00792_element_check_00769 **********\n\n");
    });

    test('00793_element_check_00770', () async {
      print("\n********** テスト実行：00793_element_check_00770 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.msg2;
      print(qcashier.screen17.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.msg2 = testData1s;
      print(qcashier.screen17.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.msg2 = testData2s;
      print(qcashier.screen17.msg2);
      expect(qcashier.screen17.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.msg2 = defalut;
      print(qcashier.screen17.msg2);
      expect(qcashier.screen17.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00793_element_check_00770 **********\n\n");
    });

    test('00794_element_check_00771', () async {
      print("\n********** テスト実行：00794_element_check_00771 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.msg1_size;
      print(qcashier.screen17.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.msg1_size = testData1;
      print(qcashier.screen17.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.msg1_size = testData2;
      print(qcashier.screen17.msg1_size);
      expect(qcashier.screen17.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.msg1_size = defalut;
      print(qcashier.screen17.msg1_size);
      expect(qcashier.screen17.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00794_element_check_00771 **********\n\n");
    });

    test('00795_element_check_00772', () async {
      print("\n********** テスト実行：00795_element_check_00772 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.msg2_size;
      print(qcashier.screen17.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.msg2_size = testData1;
      print(qcashier.screen17.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.msg2_size = testData2;
      print(qcashier.screen17.msg2_size);
      expect(qcashier.screen17.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.msg2_size = defalut;
      print(qcashier.screen17.msg2_size);
      expect(qcashier.screen17.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00795_element_check_00772 **********\n\n");
    });

    test('00796_element_check_00773', () async {
      print("\n********** テスト実行：00796_element_check_00773 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.sound1;
      print(qcashier.screen17.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.sound1 = testData1;
      print(qcashier.screen17.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.sound1 = testData2;
      print(qcashier.screen17.sound1);
      expect(qcashier.screen17.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.sound1 = defalut;
      print(qcashier.screen17.sound1);
      expect(qcashier.screen17.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00796_element_check_00773 **********\n\n");
    });

    test('00797_element_check_00774', () async {
      print("\n********** テスト実行：00797_element_check_00774 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.sound2;
      print(qcashier.screen17.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.sound2 = testData1;
      print(qcashier.screen17.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.sound2 = testData2;
      print(qcashier.screen17.sound2);
      expect(qcashier.screen17.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.sound2 = defalut;
      print(qcashier.screen17.sound2);
      expect(qcashier.screen17.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00797_element_check_00774 **********\n\n");
    });

    test('00798_element_check_00775', () async {
      print("\n********** テスト実行：00798_element_check_00775 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.sound3;
      print(qcashier.screen17.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.sound3 = testData1;
      print(qcashier.screen17.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.sound3 = testData2;
      print(qcashier.screen17.sound3);
      expect(qcashier.screen17.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.sound3 = defalut;
      print(qcashier.screen17.sound3);
      expect(qcashier.screen17.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00798_element_check_00775 **********\n\n");
    });

    test('00799_element_check_00776', () async {
      print("\n********** テスト実行：00799_element_check_00776 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.snd_timer;
      print(qcashier.screen17.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.snd_timer = testData1;
      print(qcashier.screen17.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.snd_timer = testData2;
      print(qcashier.screen17.snd_timer);
      expect(qcashier.screen17.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.snd_timer = defalut;
      print(qcashier.screen17.snd_timer);
      expect(qcashier.screen17.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00799_element_check_00776 **********\n\n");
    });

    test('00800_element_check_00777', () async {
      print("\n********** テスト実行：00800_element_check_00777 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.timer1;
      print(qcashier.screen17.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.timer1 = testData1;
      print(qcashier.screen17.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.timer1 = testData2;
      print(qcashier.screen17.timer1);
      expect(qcashier.screen17.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.timer1 = defalut;
      print(qcashier.screen17.timer1);
      expect(qcashier.screen17.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00800_element_check_00777 **********\n\n");
    });

    test('00801_element_check_00778', () async {
      print("\n********** テスト実行：00801_element_check_00778 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.timer2;
      print(qcashier.screen17.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.timer2 = testData1;
      print(qcashier.screen17.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.timer2 = testData2;
      print(qcashier.screen17.timer2);
      expect(qcashier.screen17.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.timer2 = defalut;
      print(qcashier.screen17.timer2);
      expect(qcashier.screen17.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00801_element_check_00778 **********\n\n");
    });

    test('00802_element_check_00779', () async {
      print("\n********** テスト実行：00802_element_check_00779 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.timer3;
      print(qcashier.screen17.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.timer3 = testData1;
      print(qcashier.screen17.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.timer3 = testData2;
      print(qcashier.screen17.timer3);
      expect(qcashier.screen17.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.timer3 = defalut;
      print(qcashier.screen17.timer3);
      expect(qcashier.screen17.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00802_element_check_00779 **********\n\n");
    });

    test('00803_element_check_00780', () async {
      print("\n********** テスト実行：00803_element_check_00780 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.dsp_flg1;
      print(qcashier.screen17.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.dsp_flg1 = testData1;
      print(qcashier.screen17.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.dsp_flg1 = testData2;
      print(qcashier.screen17.dsp_flg1);
      expect(qcashier.screen17.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.dsp_flg1 = defalut;
      print(qcashier.screen17.dsp_flg1);
      expect(qcashier.screen17.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00803_element_check_00780 **********\n\n");
    });

    test('00804_element_check_00781', () async {
      print("\n********** テスト実行：00804_element_check_00781 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.dsp_flg2;
      print(qcashier.screen17.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.dsp_flg2 = testData1;
      print(qcashier.screen17.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.dsp_flg2 = testData2;
      print(qcashier.screen17.dsp_flg2);
      expect(qcashier.screen17.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.dsp_flg2 = defalut;
      print(qcashier.screen17.dsp_flg2);
      expect(qcashier.screen17.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00804_element_check_00781 **********\n\n");
    });

    test('00805_element_check_00782', () async {
      print("\n********** テスト実行：00805_element_check_00782 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.movie01_ext;
      print(qcashier.screen17.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.movie01_ext = testData1;
      print(qcashier.screen17.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.movie01_ext = testData2;
      print(qcashier.screen17.movie01_ext);
      expect(qcashier.screen17.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.movie01_ext = defalut;
      print(qcashier.screen17.movie01_ext);
      expect(qcashier.screen17.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00805_element_check_00782 **********\n\n");
    });

    test('00806_element_check_00783', () async {
      print("\n********** テスト実行：00806_element_check_00783 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.movie02_ext;
      print(qcashier.screen17.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.movie02_ext = testData1;
      print(qcashier.screen17.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.movie02_ext = testData2;
      print(qcashier.screen17.movie02_ext);
      expect(qcashier.screen17.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.movie02_ext = defalut;
      print(qcashier.screen17.movie02_ext);
      expect(qcashier.screen17.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00806_element_check_00783 **********\n\n");
    });

    test('00807_element_check_00784', () async {
      print("\n********** テスト実行：00807_element_check_00784 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.movie03_ext;
      print(qcashier.screen17.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.movie03_ext = testData1;
      print(qcashier.screen17.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.movie03_ext = testData2;
      print(qcashier.screen17.movie03_ext);
      expect(qcashier.screen17.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.movie03_ext = defalut;
      print(qcashier.screen17.movie03_ext);
      expect(qcashier.screen17.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00807_element_check_00784 **********\n\n");
    });

    test('00808_element_check_00785', () async {
      print("\n********** テスト実行：00808_element_check_00785 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.movie04_ext;
      print(qcashier.screen17.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.movie04_ext = testData1;
      print(qcashier.screen17.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.movie04_ext = testData2;
      print(qcashier.screen17.movie04_ext);
      expect(qcashier.screen17.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.movie04_ext = defalut;
      print(qcashier.screen17.movie04_ext);
      expect(qcashier.screen17.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00808_element_check_00785 **********\n\n");
    });

    test('00809_element_check_00786', () async {
      print("\n********** テスト実行：00809_element_check_00786 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line_title;
      print(qcashier.screen17.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line_title = testData1s;
      print(qcashier.screen17.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line_title = testData2s;
      print(qcashier.screen17.line_title);
      expect(qcashier.screen17.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line_title = defalut;
      print(qcashier.screen17.line_title);
      expect(qcashier.screen17.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00809_element_check_00786 **********\n\n");
    });

    test('00810_element_check_00787', () async {
      print("\n********** テスト実行：00810_element_check_00787 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line_title_ex;
      print(qcashier.screen17.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line_title_ex = testData1s;
      print(qcashier.screen17.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line_title_ex = testData2s;
      print(qcashier.screen17.line_title_ex);
      expect(qcashier.screen17.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line_title_ex = defalut;
      print(qcashier.screen17.line_title_ex);
      expect(qcashier.screen17.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00810_element_check_00787 **********\n\n");
    });

    test('00811_element_check_00788', () async {
      print("\n********** テスト実行：00811_element_check_00788 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line1;
      print(qcashier.screen17.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line1 = testData1s;
      print(qcashier.screen17.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line1 = testData2s;
      print(qcashier.screen17.line1);
      expect(qcashier.screen17.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line1 = defalut;
      print(qcashier.screen17.line1);
      expect(qcashier.screen17.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00811_element_check_00788 **********\n\n");
    });

    test('00812_element_check_00789', () async {
      print("\n********** テスト実行：00812_element_check_00789 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line2;
      print(qcashier.screen17.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line2 = testData1s;
      print(qcashier.screen17.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line2 = testData2s;
      print(qcashier.screen17.line2);
      expect(qcashier.screen17.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line2 = defalut;
      print(qcashier.screen17.line2);
      expect(qcashier.screen17.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00812_element_check_00789 **********\n\n");
    });

    test('00813_element_check_00790', () async {
      print("\n********** テスト実行：00813_element_check_00790 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line3;
      print(qcashier.screen17.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line3 = testData1s;
      print(qcashier.screen17.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line3 = testData2s;
      print(qcashier.screen17.line3);
      expect(qcashier.screen17.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line3 = defalut;
      print(qcashier.screen17.line3);
      expect(qcashier.screen17.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00813_element_check_00790 **********\n\n");
    });

    test('00814_element_check_00791', () async {
      print("\n********** テスト実行：00814_element_check_00791 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line4;
      print(qcashier.screen17.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line4 = testData1s;
      print(qcashier.screen17.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line4 = testData2s;
      print(qcashier.screen17.line4);
      expect(qcashier.screen17.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line4 = defalut;
      print(qcashier.screen17.line4);
      expect(qcashier.screen17.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00814_element_check_00791 **********\n\n");
    });

    test('00815_element_check_00792', () async {
      print("\n********** テスト実行：00815_element_check_00792 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line1_ex;
      print(qcashier.screen17.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line1_ex = testData1s;
      print(qcashier.screen17.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line1_ex = testData2s;
      print(qcashier.screen17.line1_ex);
      expect(qcashier.screen17.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line1_ex = defalut;
      print(qcashier.screen17.line1_ex);
      expect(qcashier.screen17.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00815_element_check_00792 **********\n\n");
    });

    test('00816_element_check_00793', () async {
      print("\n********** テスト実行：00816_element_check_00793 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line2_ex;
      print(qcashier.screen17.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line2_ex = testData1s;
      print(qcashier.screen17.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line2_ex = testData2s;
      print(qcashier.screen17.line2_ex);
      expect(qcashier.screen17.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line2_ex = defalut;
      print(qcashier.screen17.line2_ex);
      expect(qcashier.screen17.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00816_element_check_00793 **********\n\n");
    });

    test('00817_element_check_00794', () async {
      print("\n********** テスト実行：00817_element_check_00794 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line3_ex;
      print(qcashier.screen17.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line3_ex = testData1s;
      print(qcashier.screen17.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line3_ex = testData2s;
      print(qcashier.screen17.line3_ex);
      expect(qcashier.screen17.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line3_ex = defalut;
      print(qcashier.screen17.line3_ex);
      expect(qcashier.screen17.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00817_element_check_00794 **********\n\n");
    });

    test('00818_element_check_00795', () async {
      print("\n********** テスト実行：00818_element_check_00795 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.line4_ex;
      print(qcashier.screen17.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.line4_ex = testData1s;
      print(qcashier.screen17.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.line4_ex = testData2s;
      print(qcashier.screen17.line4_ex);
      expect(qcashier.screen17.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.line4_ex = defalut;
      print(qcashier.screen17.line4_ex);
      expect(qcashier.screen17.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00818_element_check_00795 **********\n\n");
    });

    test('00819_element_check_00796', () async {
      print("\n********** テスト実行：00819_element_check_00796 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.sound_led1;
      print(qcashier.screen17.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.sound_led1 = testData1;
      print(qcashier.screen17.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.sound_led1 = testData2;
      print(qcashier.screen17.sound_led1);
      expect(qcashier.screen17.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.sound_led1 = defalut;
      print(qcashier.screen17.sound_led1);
      expect(qcashier.screen17.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00819_element_check_00796 **********\n\n");
    });

    test('00820_element_check_00797', () async {
      print("\n********** テスト実行：00820_element_check_00797 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.sound_led2;
      print(qcashier.screen17.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.sound_led2 = testData1;
      print(qcashier.screen17.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.sound_led2 = testData2;
      print(qcashier.screen17.sound_led2);
      expect(qcashier.screen17.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.sound_led2 = defalut;
      print(qcashier.screen17.sound_led2);
      expect(qcashier.screen17.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00820_element_check_00797 **********\n\n");
    });

    test('00821_element_check_00798', () async {
      print("\n********** テスト実行：00821_element_check_00798 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen17.sound_led3;
      print(qcashier.screen17.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen17.sound_led3 = testData1;
      print(qcashier.screen17.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen17.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen17.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen17.sound_led3 = testData2;
      print(qcashier.screen17.sound_led3);
      expect(qcashier.screen17.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen17.sound_led3 = defalut;
      print(qcashier.screen17.sound_led3);
      expect(qcashier.screen17.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen17.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00821_element_check_00798 **********\n\n");
    });

    test('00822_element_check_00799', () async {
      print("\n********** テスト実行：00822_element_check_00799 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.title;
      print(qcashier.screen18.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.title = testData1s;
      print(qcashier.screen18.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.title = testData2s;
      print(qcashier.screen18.title);
      expect(qcashier.screen18.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.title = defalut;
      print(qcashier.screen18.title);
      expect(qcashier.screen18.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00822_element_check_00799 **********\n\n");
    });

    test('00823_element_check_00800', () async {
      print("\n********** テスト実行：00823_element_check_00800 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.msg1;
      print(qcashier.screen18.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.msg1 = testData1s;
      print(qcashier.screen18.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.msg1 = testData2s;
      print(qcashier.screen18.msg1);
      expect(qcashier.screen18.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.msg1 = defalut;
      print(qcashier.screen18.msg1);
      expect(qcashier.screen18.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00823_element_check_00800 **********\n\n");
    });

    test('00824_element_check_00801', () async {
      print("\n********** テスト実行：00824_element_check_00801 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.msg2;
      print(qcashier.screen18.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.msg2 = testData1s;
      print(qcashier.screen18.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.msg2 = testData2s;
      print(qcashier.screen18.msg2);
      expect(qcashier.screen18.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.msg2 = defalut;
      print(qcashier.screen18.msg2);
      expect(qcashier.screen18.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00824_element_check_00801 **********\n\n");
    });

    test('00825_element_check_00802', () async {
      print("\n********** テスト実行：00825_element_check_00802 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.msg1_size;
      print(qcashier.screen18.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.msg1_size = testData1;
      print(qcashier.screen18.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.msg1_size = testData2;
      print(qcashier.screen18.msg1_size);
      expect(qcashier.screen18.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.msg1_size = defalut;
      print(qcashier.screen18.msg1_size);
      expect(qcashier.screen18.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00825_element_check_00802 **********\n\n");
    });

    test('00826_element_check_00803', () async {
      print("\n********** テスト実行：00826_element_check_00803 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.msg2_size;
      print(qcashier.screen18.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.msg2_size = testData1;
      print(qcashier.screen18.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.msg2_size = testData2;
      print(qcashier.screen18.msg2_size);
      expect(qcashier.screen18.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.msg2_size = defalut;
      print(qcashier.screen18.msg2_size);
      expect(qcashier.screen18.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00826_element_check_00803 **********\n\n");
    });

    test('00827_element_check_00804', () async {
      print("\n********** テスト実行：00827_element_check_00804 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.sound1;
      print(qcashier.screen18.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.sound1 = testData1;
      print(qcashier.screen18.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.sound1 = testData2;
      print(qcashier.screen18.sound1);
      expect(qcashier.screen18.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.sound1 = defalut;
      print(qcashier.screen18.sound1);
      expect(qcashier.screen18.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00827_element_check_00804 **********\n\n");
    });

    test('00828_element_check_00805', () async {
      print("\n********** テスト実行：00828_element_check_00805 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.sound2;
      print(qcashier.screen18.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.sound2 = testData1;
      print(qcashier.screen18.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.sound2 = testData2;
      print(qcashier.screen18.sound2);
      expect(qcashier.screen18.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.sound2 = defalut;
      print(qcashier.screen18.sound2);
      expect(qcashier.screen18.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00828_element_check_00805 **********\n\n");
    });

    test('00829_element_check_00806', () async {
      print("\n********** テスト実行：00829_element_check_00806 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.sound3;
      print(qcashier.screen18.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.sound3 = testData1;
      print(qcashier.screen18.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.sound3 = testData2;
      print(qcashier.screen18.sound3);
      expect(qcashier.screen18.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.sound3 = defalut;
      print(qcashier.screen18.sound3);
      expect(qcashier.screen18.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00829_element_check_00806 **********\n\n");
    });

    test('00830_element_check_00807', () async {
      print("\n********** テスト実行：00830_element_check_00807 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.snd_timer;
      print(qcashier.screen18.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.snd_timer = testData1;
      print(qcashier.screen18.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.snd_timer = testData2;
      print(qcashier.screen18.snd_timer);
      expect(qcashier.screen18.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.snd_timer = defalut;
      print(qcashier.screen18.snd_timer);
      expect(qcashier.screen18.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00830_element_check_00807 **********\n\n");
    });

    test('00831_element_check_00808', () async {
      print("\n********** テスト実行：00831_element_check_00808 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.timer1;
      print(qcashier.screen18.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.timer1 = testData1;
      print(qcashier.screen18.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.timer1 = testData2;
      print(qcashier.screen18.timer1);
      expect(qcashier.screen18.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.timer1 = defalut;
      print(qcashier.screen18.timer1);
      expect(qcashier.screen18.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00831_element_check_00808 **********\n\n");
    });

    test('00832_element_check_00809', () async {
      print("\n********** テスト実行：00832_element_check_00809 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.timer2;
      print(qcashier.screen18.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.timer2 = testData1;
      print(qcashier.screen18.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.timer2 = testData2;
      print(qcashier.screen18.timer2);
      expect(qcashier.screen18.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.timer2 = defalut;
      print(qcashier.screen18.timer2);
      expect(qcashier.screen18.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00832_element_check_00809 **********\n\n");
    });

    test('00833_element_check_00810', () async {
      print("\n********** テスト実行：00833_element_check_00810 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.timer3;
      print(qcashier.screen18.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.timer3 = testData1;
      print(qcashier.screen18.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.timer3 = testData2;
      print(qcashier.screen18.timer3);
      expect(qcashier.screen18.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.timer3 = defalut;
      print(qcashier.screen18.timer3);
      expect(qcashier.screen18.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00833_element_check_00810 **********\n\n");
    });

    test('00834_element_check_00811', () async {
      print("\n********** テスト実行：00834_element_check_00811 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.dsp_flg1;
      print(qcashier.screen18.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.dsp_flg1 = testData1;
      print(qcashier.screen18.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.dsp_flg1 = testData2;
      print(qcashier.screen18.dsp_flg1);
      expect(qcashier.screen18.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.dsp_flg1 = defalut;
      print(qcashier.screen18.dsp_flg1);
      expect(qcashier.screen18.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00834_element_check_00811 **********\n\n");
    });

    test('00835_element_check_00812', () async {
      print("\n********** テスト実行：00835_element_check_00812 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.dsp_flg2;
      print(qcashier.screen18.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.dsp_flg2 = testData1;
      print(qcashier.screen18.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.dsp_flg2 = testData2;
      print(qcashier.screen18.dsp_flg2);
      expect(qcashier.screen18.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.dsp_flg2 = defalut;
      print(qcashier.screen18.dsp_flg2);
      expect(qcashier.screen18.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00835_element_check_00812 **********\n\n");
    });

    test('00836_element_check_00813', () async {
      print("\n********** テスト実行：00836_element_check_00813 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.movie01_ext;
      print(qcashier.screen18.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.movie01_ext = testData1;
      print(qcashier.screen18.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.movie01_ext = testData2;
      print(qcashier.screen18.movie01_ext);
      expect(qcashier.screen18.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.movie01_ext = defalut;
      print(qcashier.screen18.movie01_ext);
      expect(qcashier.screen18.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00836_element_check_00813 **********\n\n");
    });

    test('00837_element_check_00814', () async {
      print("\n********** テスト実行：00837_element_check_00814 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.movie02_ext;
      print(qcashier.screen18.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.movie02_ext = testData1;
      print(qcashier.screen18.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.movie02_ext = testData2;
      print(qcashier.screen18.movie02_ext);
      expect(qcashier.screen18.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.movie02_ext = defalut;
      print(qcashier.screen18.movie02_ext);
      expect(qcashier.screen18.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00837_element_check_00814 **********\n\n");
    });

    test('00838_element_check_00815', () async {
      print("\n********** テスト実行：00838_element_check_00815 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.movie03_ext;
      print(qcashier.screen18.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.movie03_ext = testData1;
      print(qcashier.screen18.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.movie03_ext = testData2;
      print(qcashier.screen18.movie03_ext);
      expect(qcashier.screen18.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.movie03_ext = defalut;
      print(qcashier.screen18.movie03_ext);
      expect(qcashier.screen18.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00838_element_check_00815 **********\n\n");
    });

    test('00839_element_check_00816', () async {
      print("\n********** テスト実行：00839_element_check_00816 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.movie04_ext;
      print(qcashier.screen18.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.movie04_ext = testData1;
      print(qcashier.screen18.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.movie04_ext = testData2;
      print(qcashier.screen18.movie04_ext);
      expect(qcashier.screen18.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.movie04_ext = defalut;
      print(qcashier.screen18.movie04_ext);
      expect(qcashier.screen18.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00839_element_check_00816 **********\n\n");
    });

    test('00840_element_check_00817', () async {
      print("\n********** テスト実行：00840_element_check_00817 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line_title;
      print(qcashier.screen18.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line_title = testData1s;
      print(qcashier.screen18.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line_title = testData2s;
      print(qcashier.screen18.line_title);
      expect(qcashier.screen18.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line_title = defalut;
      print(qcashier.screen18.line_title);
      expect(qcashier.screen18.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00840_element_check_00817 **********\n\n");
    });

    test('00841_element_check_00818', () async {
      print("\n********** テスト実行：00841_element_check_00818 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line_title_ex;
      print(qcashier.screen18.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line_title_ex = testData1s;
      print(qcashier.screen18.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line_title_ex = testData2s;
      print(qcashier.screen18.line_title_ex);
      expect(qcashier.screen18.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line_title_ex = defalut;
      print(qcashier.screen18.line_title_ex);
      expect(qcashier.screen18.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00841_element_check_00818 **********\n\n");
    });

    test('00842_element_check_00819', () async {
      print("\n********** テスト実行：00842_element_check_00819 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line1;
      print(qcashier.screen18.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line1 = testData1s;
      print(qcashier.screen18.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line1 = testData2s;
      print(qcashier.screen18.line1);
      expect(qcashier.screen18.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line1 = defalut;
      print(qcashier.screen18.line1);
      expect(qcashier.screen18.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00842_element_check_00819 **********\n\n");
    });

    test('00843_element_check_00820', () async {
      print("\n********** テスト実行：00843_element_check_00820 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line2;
      print(qcashier.screen18.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line2 = testData1s;
      print(qcashier.screen18.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line2 = testData2s;
      print(qcashier.screen18.line2);
      expect(qcashier.screen18.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line2 = defalut;
      print(qcashier.screen18.line2);
      expect(qcashier.screen18.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00843_element_check_00820 **********\n\n");
    });

    test('00844_element_check_00821', () async {
      print("\n********** テスト実行：00844_element_check_00821 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line3;
      print(qcashier.screen18.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line3 = testData1s;
      print(qcashier.screen18.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line3 = testData2s;
      print(qcashier.screen18.line3);
      expect(qcashier.screen18.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line3 = defalut;
      print(qcashier.screen18.line3);
      expect(qcashier.screen18.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00844_element_check_00821 **********\n\n");
    });

    test('00845_element_check_00822', () async {
      print("\n********** テスト実行：00845_element_check_00822 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line4;
      print(qcashier.screen18.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line4 = testData1s;
      print(qcashier.screen18.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line4 = testData2s;
      print(qcashier.screen18.line4);
      expect(qcashier.screen18.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line4 = defalut;
      print(qcashier.screen18.line4);
      expect(qcashier.screen18.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00845_element_check_00822 **********\n\n");
    });

    test('00846_element_check_00823', () async {
      print("\n********** テスト実行：00846_element_check_00823 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line1_ex;
      print(qcashier.screen18.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line1_ex = testData1s;
      print(qcashier.screen18.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line1_ex = testData2s;
      print(qcashier.screen18.line1_ex);
      expect(qcashier.screen18.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line1_ex = defalut;
      print(qcashier.screen18.line1_ex);
      expect(qcashier.screen18.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00846_element_check_00823 **********\n\n");
    });

    test('00847_element_check_00824', () async {
      print("\n********** テスト実行：00847_element_check_00824 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line2_ex;
      print(qcashier.screen18.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line2_ex = testData1s;
      print(qcashier.screen18.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line2_ex = testData2s;
      print(qcashier.screen18.line2_ex);
      expect(qcashier.screen18.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line2_ex = defalut;
      print(qcashier.screen18.line2_ex);
      expect(qcashier.screen18.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00847_element_check_00824 **********\n\n");
    });

    test('00848_element_check_00825', () async {
      print("\n********** テスト実行：00848_element_check_00825 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line3_ex;
      print(qcashier.screen18.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line3_ex = testData1s;
      print(qcashier.screen18.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line3_ex = testData2s;
      print(qcashier.screen18.line3_ex);
      expect(qcashier.screen18.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line3_ex = defalut;
      print(qcashier.screen18.line3_ex);
      expect(qcashier.screen18.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00848_element_check_00825 **********\n\n");
    });

    test('00849_element_check_00826', () async {
      print("\n********** テスト実行：00849_element_check_00826 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.line4_ex;
      print(qcashier.screen18.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.line4_ex = testData1s;
      print(qcashier.screen18.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.line4_ex = testData2s;
      print(qcashier.screen18.line4_ex);
      expect(qcashier.screen18.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.line4_ex = defalut;
      print(qcashier.screen18.line4_ex);
      expect(qcashier.screen18.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00849_element_check_00826 **********\n\n");
    });

    test('00850_element_check_00827', () async {
      print("\n********** テスト実行：00850_element_check_00827 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.sound_led1;
      print(qcashier.screen18.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.sound_led1 = testData1;
      print(qcashier.screen18.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.sound_led1 = testData2;
      print(qcashier.screen18.sound_led1);
      expect(qcashier.screen18.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.sound_led1 = defalut;
      print(qcashier.screen18.sound_led1);
      expect(qcashier.screen18.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00850_element_check_00827 **********\n\n");
    });

    test('00851_element_check_00828', () async {
      print("\n********** テスト実行：00851_element_check_00828 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.sound_led2;
      print(qcashier.screen18.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.sound_led2 = testData1;
      print(qcashier.screen18.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.sound_led2 = testData2;
      print(qcashier.screen18.sound_led2);
      expect(qcashier.screen18.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.sound_led2 = defalut;
      print(qcashier.screen18.sound_led2);
      expect(qcashier.screen18.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00851_element_check_00828 **********\n\n");
    });

    test('00852_element_check_00829', () async {
      print("\n********** テスト実行：00852_element_check_00829 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen18.sound_led3;
      print(qcashier.screen18.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen18.sound_led3 = testData1;
      print(qcashier.screen18.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen18.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen18.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen18.sound_led3 = testData2;
      print(qcashier.screen18.sound_led3);
      expect(qcashier.screen18.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen18.sound_led3 = defalut;
      print(qcashier.screen18.sound_led3);
      expect(qcashier.screen18.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen18.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00852_element_check_00829 **********\n\n");
    });

    test('00853_element_check_00830', () async {
      print("\n********** テスト実行：00853_element_check_00830 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.title;
      print(qcashier.screen19.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.title = testData1s;
      print(qcashier.screen19.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.title = testData2s;
      print(qcashier.screen19.title);
      expect(qcashier.screen19.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.title = defalut;
      print(qcashier.screen19.title);
      expect(qcashier.screen19.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00853_element_check_00830 **********\n\n");
    });

    test('00854_element_check_00831', () async {
      print("\n********** テスト実行：00854_element_check_00831 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.msg1;
      print(qcashier.screen19.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.msg1 = testData1s;
      print(qcashier.screen19.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.msg1 = testData2s;
      print(qcashier.screen19.msg1);
      expect(qcashier.screen19.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.msg1 = defalut;
      print(qcashier.screen19.msg1);
      expect(qcashier.screen19.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00854_element_check_00831 **********\n\n");
    });

    test('00855_element_check_00832', () async {
      print("\n********** テスト実行：00855_element_check_00832 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.msg2;
      print(qcashier.screen19.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.msg2 = testData1s;
      print(qcashier.screen19.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.msg2 = testData2s;
      print(qcashier.screen19.msg2);
      expect(qcashier.screen19.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.msg2 = defalut;
      print(qcashier.screen19.msg2);
      expect(qcashier.screen19.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00855_element_check_00832 **********\n\n");
    });

    test('00856_element_check_00833', () async {
      print("\n********** テスト実行：00856_element_check_00833 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.msg1_size;
      print(qcashier.screen19.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.msg1_size = testData1;
      print(qcashier.screen19.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.msg1_size = testData2;
      print(qcashier.screen19.msg1_size);
      expect(qcashier.screen19.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.msg1_size = defalut;
      print(qcashier.screen19.msg1_size);
      expect(qcashier.screen19.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00856_element_check_00833 **********\n\n");
    });

    test('00857_element_check_00834', () async {
      print("\n********** テスト実行：00857_element_check_00834 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.msg2_size;
      print(qcashier.screen19.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.msg2_size = testData1;
      print(qcashier.screen19.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.msg2_size = testData2;
      print(qcashier.screen19.msg2_size);
      expect(qcashier.screen19.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.msg2_size = defalut;
      print(qcashier.screen19.msg2_size);
      expect(qcashier.screen19.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00857_element_check_00834 **********\n\n");
    });

    test('00858_element_check_00835', () async {
      print("\n********** テスト実行：00858_element_check_00835 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.sound1;
      print(qcashier.screen19.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.sound1 = testData1;
      print(qcashier.screen19.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.sound1 = testData2;
      print(qcashier.screen19.sound1);
      expect(qcashier.screen19.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.sound1 = defalut;
      print(qcashier.screen19.sound1);
      expect(qcashier.screen19.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00858_element_check_00835 **********\n\n");
    });

    test('00859_element_check_00836', () async {
      print("\n********** テスト実行：00859_element_check_00836 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.sound2;
      print(qcashier.screen19.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.sound2 = testData1s;
      print(qcashier.screen19.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.sound2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.sound2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.sound2 = testData2s;
      print(qcashier.screen19.sound2);
      expect(qcashier.screen19.sound2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.sound2 = defalut;
      print(qcashier.screen19.sound2);
      expect(qcashier.screen19.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00859_element_check_00836 **********\n\n");
    });

    test('00860_element_check_00837', () async {
      print("\n********** テスト実行：00860_element_check_00837 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.sound3;
      print(qcashier.screen19.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.sound3 = testData1s;
      print(qcashier.screen19.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.sound3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.sound3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.sound3 = testData2s;
      print(qcashier.screen19.sound3);
      expect(qcashier.screen19.sound3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.sound3 = defalut;
      print(qcashier.screen19.sound3);
      expect(qcashier.screen19.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00860_element_check_00837 **********\n\n");
    });

    test('00861_element_check_00838', () async {
      print("\n********** テスト実行：00861_element_check_00838 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.snd_timer;
      print(qcashier.screen19.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.snd_timer = testData1;
      print(qcashier.screen19.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.snd_timer = testData2;
      print(qcashier.screen19.snd_timer);
      expect(qcashier.screen19.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.snd_timer = defalut;
      print(qcashier.screen19.snd_timer);
      expect(qcashier.screen19.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00861_element_check_00838 **********\n\n");
    });

    test('00862_element_check_00839', () async {
      print("\n********** テスト実行：00862_element_check_00839 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.timer1;
      print(qcashier.screen19.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.timer1 = testData1;
      print(qcashier.screen19.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.timer1 = testData2;
      print(qcashier.screen19.timer1);
      expect(qcashier.screen19.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.timer1 = defalut;
      print(qcashier.screen19.timer1);
      expect(qcashier.screen19.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00862_element_check_00839 **********\n\n");
    });

    test('00863_element_check_00840', () async {
      print("\n********** テスト実行：00863_element_check_00840 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.timer2;
      print(qcashier.screen19.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.timer2 = testData1;
      print(qcashier.screen19.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.timer2 = testData2;
      print(qcashier.screen19.timer2);
      expect(qcashier.screen19.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.timer2 = defalut;
      print(qcashier.screen19.timer2);
      expect(qcashier.screen19.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00863_element_check_00840 **********\n\n");
    });

    test('00864_element_check_00841', () async {
      print("\n********** テスト実行：00864_element_check_00841 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.timer3;
      print(qcashier.screen19.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.timer3 = testData1;
      print(qcashier.screen19.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.timer3 = testData2;
      print(qcashier.screen19.timer3);
      expect(qcashier.screen19.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.timer3 = defalut;
      print(qcashier.screen19.timer3);
      expect(qcashier.screen19.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00864_element_check_00841 **********\n\n");
    });

    test('00865_element_check_00842', () async {
      print("\n********** テスト実行：00865_element_check_00842 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.dsp_flg1;
      print(qcashier.screen19.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.dsp_flg1 = testData1;
      print(qcashier.screen19.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.dsp_flg1 = testData2;
      print(qcashier.screen19.dsp_flg1);
      expect(qcashier.screen19.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.dsp_flg1 = defalut;
      print(qcashier.screen19.dsp_flg1);
      expect(qcashier.screen19.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00865_element_check_00842 **********\n\n");
    });

    test('00866_element_check_00843', () async {
      print("\n********** テスト実行：00866_element_check_00843 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.dsp_flg2;
      print(qcashier.screen19.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.dsp_flg2 = testData1;
      print(qcashier.screen19.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.dsp_flg2 = testData2;
      print(qcashier.screen19.dsp_flg2);
      expect(qcashier.screen19.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.dsp_flg2 = defalut;
      print(qcashier.screen19.dsp_flg2);
      expect(qcashier.screen19.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00866_element_check_00843 **********\n\n");
    });

    test('00867_element_check_00844', () async {
      print("\n********** テスト実行：00867_element_check_00844 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.movie01_ext;
      print(qcashier.screen19.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.movie01_ext = testData1;
      print(qcashier.screen19.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.movie01_ext = testData2;
      print(qcashier.screen19.movie01_ext);
      expect(qcashier.screen19.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.movie01_ext = defalut;
      print(qcashier.screen19.movie01_ext);
      expect(qcashier.screen19.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00867_element_check_00844 **********\n\n");
    });

    test('00868_element_check_00845', () async {
      print("\n********** テスト実行：00868_element_check_00845 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.movie02_ext;
      print(qcashier.screen19.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.movie02_ext = testData1;
      print(qcashier.screen19.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.movie02_ext = testData2;
      print(qcashier.screen19.movie02_ext);
      expect(qcashier.screen19.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.movie02_ext = defalut;
      print(qcashier.screen19.movie02_ext);
      expect(qcashier.screen19.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00868_element_check_00845 **********\n\n");
    });

    test('00869_element_check_00846', () async {
      print("\n********** テスト実行：00869_element_check_00846 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.movie03_ext;
      print(qcashier.screen19.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.movie03_ext = testData1;
      print(qcashier.screen19.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.movie03_ext = testData2;
      print(qcashier.screen19.movie03_ext);
      expect(qcashier.screen19.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.movie03_ext = defalut;
      print(qcashier.screen19.movie03_ext);
      expect(qcashier.screen19.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00869_element_check_00846 **********\n\n");
    });

    test('00870_element_check_00847', () async {
      print("\n********** テスト実行：00870_element_check_00847 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.movie04_ext;
      print(qcashier.screen19.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.movie04_ext = testData1;
      print(qcashier.screen19.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.movie04_ext = testData2;
      print(qcashier.screen19.movie04_ext);
      expect(qcashier.screen19.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.movie04_ext = defalut;
      print(qcashier.screen19.movie04_ext);
      expect(qcashier.screen19.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00870_element_check_00847 **********\n\n");
    });

    test('00871_element_check_00848', () async {
      print("\n********** テスト実行：00871_element_check_00848 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line_title;
      print(qcashier.screen19.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line_title = testData1s;
      print(qcashier.screen19.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line_title = testData2s;
      print(qcashier.screen19.line_title);
      expect(qcashier.screen19.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line_title = defalut;
      print(qcashier.screen19.line_title);
      expect(qcashier.screen19.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00871_element_check_00848 **********\n\n");
    });

    test('00872_element_check_00849', () async {
      print("\n********** テスト実行：00872_element_check_00849 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line_title_ex;
      print(qcashier.screen19.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line_title_ex = testData1s;
      print(qcashier.screen19.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line_title_ex = testData2s;
      print(qcashier.screen19.line_title_ex);
      expect(qcashier.screen19.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line_title_ex = defalut;
      print(qcashier.screen19.line_title_ex);
      expect(qcashier.screen19.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00872_element_check_00849 **********\n\n");
    });

    test('00873_element_check_00850', () async {
      print("\n********** テスト実行：00873_element_check_00850 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line1;
      print(qcashier.screen19.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line1 = testData1s;
      print(qcashier.screen19.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line1 = testData2s;
      print(qcashier.screen19.line1);
      expect(qcashier.screen19.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line1 = defalut;
      print(qcashier.screen19.line1);
      expect(qcashier.screen19.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00873_element_check_00850 **********\n\n");
    });

    test('00874_element_check_00851', () async {
      print("\n********** テスト実行：00874_element_check_00851 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line2;
      print(qcashier.screen19.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line2 = testData1s;
      print(qcashier.screen19.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line2 = testData2s;
      print(qcashier.screen19.line2);
      expect(qcashier.screen19.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line2 = defalut;
      print(qcashier.screen19.line2);
      expect(qcashier.screen19.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00874_element_check_00851 **********\n\n");
    });

    test('00875_element_check_00852', () async {
      print("\n********** テスト実行：00875_element_check_00852 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line3;
      print(qcashier.screen19.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line3 = testData1s;
      print(qcashier.screen19.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line3 = testData2s;
      print(qcashier.screen19.line3);
      expect(qcashier.screen19.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line3 = defalut;
      print(qcashier.screen19.line3);
      expect(qcashier.screen19.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00875_element_check_00852 **********\n\n");
    });

    test('00876_element_check_00853', () async {
      print("\n********** テスト実行：00876_element_check_00853 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line4;
      print(qcashier.screen19.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line4 = testData1s;
      print(qcashier.screen19.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line4 = testData2s;
      print(qcashier.screen19.line4);
      expect(qcashier.screen19.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line4 = defalut;
      print(qcashier.screen19.line4);
      expect(qcashier.screen19.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00876_element_check_00853 **********\n\n");
    });

    test('00877_element_check_00854', () async {
      print("\n********** テスト実行：00877_element_check_00854 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line1_ex;
      print(qcashier.screen19.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line1_ex = testData1s;
      print(qcashier.screen19.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line1_ex = testData2s;
      print(qcashier.screen19.line1_ex);
      expect(qcashier.screen19.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line1_ex = defalut;
      print(qcashier.screen19.line1_ex);
      expect(qcashier.screen19.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00877_element_check_00854 **********\n\n");
    });

    test('00878_element_check_00855', () async {
      print("\n********** テスト実行：00878_element_check_00855 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line2_ex;
      print(qcashier.screen19.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line2_ex = testData1s;
      print(qcashier.screen19.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line2_ex = testData2s;
      print(qcashier.screen19.line2_ex);
      expect(qcashier.screen19.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line2_ex = defalut;
      print(qcashier.screen19.line2_ex);
      expect(qcashier.screen19.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00878_element_check_00855 **********\n\n");
    });

    test('00879_element_check_00856', () async {
      print("\n********** テスト実行：00879_element_check_00856 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line3_ex;
      print(qcashier.screen19.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line3_ex = testData1s;
      print(qcashier.screen19.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line3_ex = testData2s;
      print(qcashier.screen19.line3_ex);
      expect(qcashier.screen19.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line3_ex = defalut;
      print(qcashier.screen19.line3_ex);
      expect(qcashier.screen19.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00879_element_check_00856 **********\n\n");
    });

    test('00880_element_check_00857', () async {
      print("\n********** テスト実行：00880_element_check_00857 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.line4_ex;
      print(qcashier.screen19.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.line4_ex = testData1s;
      print(qcashier.screen19.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.line4_ex = testData2s;
      print(qcashier.screen19.line4_ex);
      expect(qcashier.screen19.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.line4_ex = defalut;
      print(qcashier.screen19.line4_ex);
      expect(qcashier.screen19.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00880_element_check_00857 **********\n\n");
    });

    test('00881_element_check_00858', () async {
      print("\n********** テスト実行：00881_element_check_00858 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.sound_led1;
      print(qcashier.screen19.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.sound_led1 = testData1;
      print(qcashier.screen19.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.sound_led1 = testData2;
      print(qcashier.screen19.sound_led1);
      expect(qcashier.screen19.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.sound_led1 = defalut;
      print(qcashier.screen19.sound_led1);
      expect(qcashier.screen19.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00881_element_check_00858 **********\n\n");
    });

    test('00882_element_check_00859', () async {
      print("\n********** テスト実行：00882_element_check_00859 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.sound_led2;
      print(qcashier.screen19.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.sound_led2 = testData1s;
      print(qcashier.screen19.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.sound_led2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.sound_led2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.sound_led2 = testData2s;
      print(qcashier.screen19.sound_led2);
      expect(qcashier.screen19.sound_led2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound_led2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.sound_led2 = defalut;
      print(qcashier.screen19.sound_led2);
      expect(qcashier.screen19.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00882_element_check_00859 **********\n\n");
    });

    test('00883_element_check_00860', () async {
      print("\n********** テスト実行：00883_element_check_00860 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen19.sound_led3;
      print(qcashier.screen19.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen19.sound_led3 = testData1s;
      print(qcashier.screen19.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen19.sound_led3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen19.sound_led3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen19.sound_led3 = testData2s;
      print(qcashier.screen19.sound_led3);
      expect(qcashier.screen19.sound_led3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound_led3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen19.sound_led3 = defalut;
      print(qcashier.screen19.sound_led3);
      expect(qcashier.screen19.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen19.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00883_element_check_00860 **********\n\n");
    });

    test('00884_element_check_00861', () async {
      print("\n********** テスト実行：00884_element_check_00861 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.title;
      print(qcashier.screen20.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.title = testData1s;
      print(qcashier.screen20.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.title = testData2s;
      print(qcashier.screen20.title);
      expect(qcashier.screen20.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.title = defalut;
      print(qcashier.screen20.title);
      expect(qcashier.screen20.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00884_element_check_00861 **********\n\n");
    });

    test('00885_element_check_00862', () async {
      print("\n********** テスト実行：00885_element_check_00862 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.msg1;
      print(qcashier.screen20.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.msg1 = testData1s;
      print(qcashier.screen20.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.msg1 = testData2s;
      print(qcashier.screen20.msg1);
      expect(qcashier.screen20.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.msg1 = defalut;
      print(qcashier.screen20.msg1);
      expect(qcashier.screen20.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00885_element_check_00862 **********\n\n");
    });

    test('00886_element_check_00863', () async {
      print("\n********** テスト実行：00886_element_check_00863 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.msg2;
      print(qcashier.screen20.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.msg2 = testData1s;
      print(qcashier.screen20.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.msg2 = testData2s;
      print(qcashier.screen20.msg2);
      expect(qcashier.screen20.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.msg2 = defalut;
      print(qcashier.screen20.msg2);
      expect(qcashier.screen20.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00886_element_check_00863 **********\n\n");
    });

    test('00887_element_check_00864', () async {
      print("\n********** テスト実行：00887_element_check_00864 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.msg1_size;
      print(qcashier.screen20.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.msg1_size = testData1;
      print(qcashier.screen20.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.msg1_size = testData2;
      print(qcashier.screen20.msg1_size);
      expect(qcashier.screen20.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.msg1_size = defalut;
      print(qcashier.screen20.msg1_size);
      expect(qcashier.screen20.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00887_element_check_00864 **********\n\n");
    });

    test('00888_element_check_00865', () async {
      print("\n********** テスト実行：00888_element_check_00865 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.msg2_size;
      print(qcashier.screen20.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.msg2_size = testData1;
      print(qcashier.screen20.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.msg2_size = testData2;
      print(qcashier.screen20.msg2_size);
      expect(qcashier.screen20.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.msg2_size = defalut;
      print(qcashier.screen20.msg2_size);
      expect(qcashier.screen20.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00888_element_check_00865 **********\n\n");
    });

    test('00889_element_check_00866', () async {
      print("\n********** テスト実行：00889_element_check_00866 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.sound1;
      print(qcashier.screen20.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.sound1 = testData1;
      print(qcashier.screen20.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.sound1 = testData2;
      print(qcashier.screen20.sound1);
      expect(qcashier.screen20.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.sound1 = defalut;
      print(qcashier.screen20.sound1);
      expect(qcashier.screen20.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00889_element_check_00866 **********\n\n");
    });

    test('00890_element_check_00867', () async {
      print("\n********** テスト実行：00890_element_check_00867 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.sound2;
      print(qcashier.screen20.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.sound2 = testData1;
      print(qcashier.screen20.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.sound2 = testData2;
      print(qcashier.screen20.sound2);
      expect(qcashier.screen20.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.sound2 = defalut;
      print(qcashier.screen20.sound2);
      expect(qcashier.screen20.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00890_element_check_00867 **********\n\n");
    });

    test('00891_element_check_00868', () async {
      print("\n********** テスト実行：00891_element_check_00868 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.sound3;
      print(qcashier.screen20.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.sound3 = testData1;
      print(qcashier.screen20.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.sound3 = testData2;
      print(qcashier.screen20.sound3);
      expect(qcashier.screen20.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.sound3 = defalut;
      print(qcashier.screen20.sound3);
      expect(qcashier.screen20.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00891_element_check_00868 **********\n\n");
    });

    test('00892_element_check_00869', () async {
      print("\n********** テスト実行：00892_element_check_00869 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.snd_timer;
      print(qcashier.screen20.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.snd_timer = testData1;
      print(qcashier.screen20.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.snd_timer = testData2;
      print(qcashier.screen20.snd_timer);
      expect(qcashier.screen20.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.snd_timer = defalut;
      print(qcashier.screen20.snd_timer);
      expect(qcashier.screen20.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00892_element_check_00869 **********\n\n");
    });

    test('00893_element_check_00870', () async {
      print("\n********** テスト実行：00893_element_check_00870 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.timer1;
      print(qcashier.screen20.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.timer1 = testData1;
      print(qcashier.screen20.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.timer1 = testData2;
      print(qcashier.screen20.timer1);
      expect(qcashier.screen20.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.timer1 = defalut;
      print(qcashier.screen20.timer1);
      expect(qcashier.screen20.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00893_element_check_00870 **********\n\n");
    });

    test('00894_element_check_00871', () async {
      print("\n********** テスト実行：00894_element_check_00871 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.timer2;
      print(qcashier.screen20.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.timer2 = testData1;
      print(qcashier.screen20.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.timer2 = testData2;
      print(qcashier.screen20.timer2);
      expect(qcashier.screen20.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.timer2 = defalut;
      print(qcashier.screen20.timer2);
      expect(qcashier.screen20.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00894_element_check_00871 **********\n\n");
    });

    test('00895_element_check_00872', () async {
      print("\n********** テスト実行：00895_element_check_00872 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.timer3;
      print(qcashier.screen20.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.timer3 = testData1;
      print(qcashier.screen20.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.timer3 = testData2;
      print(qcashier.screen20.timer3);
      expect(qcashier.screen20.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.timer3 = defalut;
      print(qcashier.screen20.timer3);
      expect(qcashier.screen20.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00895_element_check_00872 **********\n\n");
    });

    test('00896_element_check_00873', () async {
      print("\n********** テスト実行：00896_element_check_00873 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.dsp_flg1;
      print(qcashier.screen20.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.dsp_flg1 = testData1;
      print(qcashier.screen20.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.dsp_flg1 = testData2;
      print(qcashier.screen20.dsp_flg1);
      expect(qcashier.screen20.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.dsp_flg1 = defalut;
      print(qcashier.screen20.dsp_flg1);
      expect(qcashier.screen20.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00896_element_check_00873 **********\n\n");
    });

    test('00897_element_check_00874', () async {
      print("\n********** テスト実行：00897_element_check_00874 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.dsp_flg2;
      print(qcashier.screen20.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.dsp_flg2 = testData1;
      print(qcashier.screen20.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.dsp_flg2 = testData2;
      print(qcashier.screen20.dsp_flg2);
      expect(qcashier.screen20.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.dsp_flg2 = defalut;
      print(qcashier.screen20.dsp_flg2);
      expect(qcashier.screen20.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00897_element_check_00874 **********\n\n");
    });

    test('00898_element_check_00875', () async {
      print("\n********** テスト実行：00898_element_check_00875 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.movie01_ext;
      print(qcashier.screen20.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.movie01_ext = testData1;
      print(qcashier.screen20.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.movie01_ext = testData2;
      print(qcashier.screen20.movie01_ext);
      expect(qcashier.screen20.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.movie01_ext = defalut;
      print(qcashier.screen20.movie01_ext);
      expect(qcashier.screen20.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00898_element_check_00875 **********\n\n");
    });

    test('00899_element_check_00876', () async {
      print("\n********** テスト実行：00899_element_check_00876 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.movie02_ext;
      print(qcashier.screen20.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.movie02_ext = testData1;
      print(qcashier.screen20.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.movie02_ext = testData2;
      print(qcashier.screen20.movie02_ext);
      expect(qcashier.screen20.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.movie02_ext = defalut;
      print(qcashier.screen20.movie02_ext);
      expect(qcashier.screen20.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00899_element_check_00876 **********\n\n");
    });

    test('00900_element_check_00877', () async {
      print("\n********** テスト実行：00900_element_check_00877 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.movie03_ext;
      print(qcashier.screen20.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.movie03_ext = testData1;
      print(qcashier.screen20.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.movie03_ext = testData2;
      print(qcashier.screen20.movie03_ext);
      expect(qcashier.screen20.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.movie03_ext = defalut;
      print(qcashier.screen20.movie03_ext);
      expect(qcashier.screen20.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00900_element_check_00877 **********\n\n");
    });

    test('00901_element_check_00878', () async {
      print("\n********** テスト実行：00901_element_check_00878 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.movie04_ext;
      print(qcashier.screen20.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.movie04_ext = testData1;
      print(qcashier.screen20.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.movie04_ext = testData2;
      print(qcashier.screen20.movie04_ext);
      expect(qcashier.screen20.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.movie04_ext = defalut;
      print(qcashier.screen20.movie04_ext);
      expect(qcashier.screen20.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00901_element_check_00878 **********\n\n");
    });

    test('00902_element_check_00879', () async {
      print("\n********** テスト実行：00902_element_check_00879 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line_title;
      print(qcashier.screen20.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line_title = testData1s;
      print(qcashier.screen20.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line_title = testData2s;
      print(qcashier.screen20.line_title);
      expect(qcashier.screen20.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line_title = defalut;
      print(qcashier.screen20.line_title);
      expect(qcashier.screen20.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00902_element_check_00879 **********\n\n");
    });

    test('00903_element_check_00880', () async {
      print("\n********** テスト実行：00903_element_check_00880 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line_title_ex;
      print(qcashier.screen20.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line_title_ex = testData1s;
      print(qcashier.screen20.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line_title_ex = testData2s;
      print(qcashier.screen20.line_title_ex);
      expect(qcashier.screen20.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line_title_ex = defalut;
      print(qcashier.screen20.line_title_ex);
      expect(qcashier.screen20.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00903_element_check_00880 **********\n\n");
    });

    test('00904_element_check_00881', () async {
      print("\n********** テスト実行：00904_element_check_00881 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line1;
      print(qcashier.screen20.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line1 = testData1s;
      print(qcashier.screen20.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line1 = testData2s;
      print(qcashier.screen20.line1);
      expect(qcashier.screen20.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line1 = defalut;
      print(qcashier.screen20.line1);
      expect(qcashier.screen20.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00904_element_check_00881 **********\n\n");
    });

    test('00905_element_check_00882', () async {
      print("\n********** テスト実行：00905_element_check_00882 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line2;
      print(qcashier.screen20.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line2 = testData1s;
      print(qcashier.screen20.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line2 = testData2s;
      print(qcashier.screen20.line2);
      expect(qcashier.screen20.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line2 = defalut;
      print(qcashier.screen20.line2);
      expect(qcashier.screen20.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00905_element_check_00882 **********\n\n");
    });

    test('00906_element_check_00883', () async {
      print("\n********** テスト実行：00906_element_check_00883 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line3;
      print(qcashier.screen20.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line3 = testData1s;
      print(qcashier.screen20.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line3 = testData2s;
      print(qcashier.screen20.line3);
      expect(qcashier.screen20.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line3 = defalut;
      print(qcashier.screen20.line3);
      expect(qcashier.screen20.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00906_element_check_00883 **********\n\n");
    });

    test('00907_element_check_00884', () async {
      print("\n********** テスト実行：00907_element_check_00884 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line4;
      print(qcashier.screen20.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line4 = testData1s;
      print(qcashier.screen20.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line4 = testData2s;
      print(qcashier.screen20.line4);
      expect(qcashier.screen20.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line4 = defalut;
      print(qcashier.screen20.line4);
      expect(qcashier.screen20.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00907_element_check_00884 **********\n\n");
    });

    test('00908_element_check_00885', () async {
      print("\n********** テスト実行：00908_element_check_00885 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line1_ex;
      print(qcashier.screen20.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line1_ex = testData1s;
      print(qcashier.screen20.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line1_ex = testData2s;
      print(qcashier.screen20.line1_ex);
      expect(qcashier.screen20.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line1_ex = defalut;
      print(qcashier.screen20.line1_ex);
      expect(qcashier.screen20.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00908_element_check_00885 **********\n\n");
    });

    test('00909_element_check_00886', () async {
      print("\n********** テスト実行：00909_element_check_00886 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line2_ex;
      print(qcashier.screen20.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line2_ex = testData1s;
      print(qcashier.screen20.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line2_ex = testData2s;
      print(qcashier.screen20.line2_ex);
      expect(qcashier.screen20.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line2_ex = defalut;
      print(qcashier.screen20.line2_ex);
      expect(qcashier.screen20.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00909_element_check_00886 **********\n\n");
    });

    test('00910_element_check_00887', () async {
      print("\n********** テスト実行：00910_element_check_00887 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line3_ex;
      print(qcashier.screen20.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line3_ex = testData1s;
      print(qcashier.screen20.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line3_ex = testData2s;
      print(qcashier.screen20.line3_ex);
      expect(qcashier.screen20.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line3_ex = defalut;
      print(qcashier.screen20.line3_ex);
      expect(qcashier.screen20.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00910_element_check_00887 **********\n\n");
    });

    test('00911_element_check_00888', () async {
      print("\n********** テスト実行：00911_element_check_00888 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.line4_ex;
      print(qcashier.screen20.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.line4_ex = testData1s;
      print(qcashier.screen20.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.line4_ex = testData2s;
      print(qcashier.screen20.line4_ex);
      expect(qcashier.screen20.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.line4_ex = defalut;
      print(qcashier.screen20.line4_ex);
      expect(qcashier.screen20.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00911_element_check_00888 **********\n\n");
    });

    test('00912_element_check_00889', () async {
      print("\n********** テスト実行：00912_element_check_00889 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.sound_led1;
      print(qcashier.screen20.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.sound_led1 = testData1;
      print(qcashier.screen20.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.sound_led1 = testData2;
      print(qcashier.screen20.sound_led1);
      expect(qcashier.screen20.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.sound_led1 = defalut;
      print(qcashier.screen20.sound_led1);
      expect(qcashier.screen20.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00912_element_check_00889 **********\n\n");
    });

    test('00913_element_check_00890', () async {
      print("\n********** テスト実行：00913_element_check_00890 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.sound_led2;
      print(qcashier.screen20.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.sound_led2 = testData1;
      print(qcashier.screen20.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.sound_led2 = testData2;
      print(qcashier.screen20.sound_led2);
      expect(qcashier.screen20.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.sound_led2 = defalut;
      print(qcashier.screen20.sound_led2);
      expect(qcashier.screen20.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00913_element_check_00890 **********\n\n");
    });

    test('00914_element_check_00891', () async {
      print("\n********** テスト実行：00914_element_check_00891 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen20.sound_led3;
      print(qcashier.screen20.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen20.sound_led3 = testData1;
      print(qcashier.screen20.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen20.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen20.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen20.sound_led3 = testData2;
      print(qcashier.screen20.sound_led3);
      expect(qcashier.screen20.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen20.sound_led3 = defalut;
      print(qcashier.screen20.sound_led3);
      expect(qcashier.screen20.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen20.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00914_element_check_00891 **********\n\n");
    });

    test('00915_element_check_00892', () async {
      print("\n********** テスト実行：00915_element_check_00892 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.title;
      print(qcashier.screen21.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.title = testData1s;
      print(qcashier.screen21.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.title = testData2s;
      print(qcashier.screen21.title);
      expect(qcashier.screen21.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.title = defalut;
      print(qcashier.screen21.title);
      expect(qcashier.screen21.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00915_element_check_00892 **********\n\n");
    });

    test('00916_element_check_00893', () async {
      print("\n********** テスト実行：00916_element_check_00893 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.msg1;
      print(qcashier.screen21.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.msg1 = testData1s;
      print(qcashier.screen21.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.msg1 = testData2s;
      print(qcashier.screen21.msg1);
      expect(qcashier.screen21.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.msg1 = defalut;
      print(qcashier.screen21.msg1);
      expect(qcashier.screen21.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00916_element_check_00893 **********\n\n");
    });

    test('00917_element_check_00894', () async {
      print("\n********** テスト実行：00917_element_check_00894 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.msg2;
      print(qcashier.screen21.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.msg2 = testData1s;
      print(qcashier.screen21.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.msg2 = testData2s;
      print(qcashier.screen21.msg2);
      expect(qcashier.screen21.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.msg2 = defalut;
      print(qcashier.screen21.msg2);
      expect(qcashier.screen21.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00917_element_check_00894 **********\n\n");
    });

    test('00918_element_check_00895', () async {
      print("\n********** テスト実行：00918_element_check_00895 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.msg1_size;
      print(qcashier.screen21.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.msg1_size = testData1;
      print(qcashier.screen21.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.msg1_size = testData2;
      print(qcashier.screen21.msg1_size);
      expect(qcashier.screen21.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.msg1_size = defalut;
      print(qcashier.screen21.msg1_size);
      expect(qcashier.screen21.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00918_element_check_00895 **********\n\n");
    });

    test('00919_element_check_00896', () async {
      print("\n********** テスト実行：00919_element_check_00896 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.msg2_size;
      print(qcashier.screen21.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.msg2_size = testData1;
      print(qcashier.screen21.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.msg2_size = testData2;
      print(qcashier.screen21.msg2_size);
      expect(qcashier.screen21.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.msg2_size = defalut;
      print(qcashier.screen21.msg2_size);
      expect(qcashier.screen21.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00919_element_check_00896 **********\n\n");
    });

    test('00920_element_check_00897', () async {
      print("\n********** テスト実行：00920_element_check_00897 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.sound1;
      print(qcashier.screen21.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.sound1 = testData1;
      print(qcashier.screen21.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.sound1 = testData2;
      print(qcashier.screen21.sound1);
      expect(qcashier.screen21.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.sound1 = defalut;
      print(qcashier.screen21.sound1);
      expect(qcashier.screen21.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00920_element_check_00897 **********\n\n");
    });

    test('00921_element_check_00898', () async {
      print("\n********** テスト実行：00921_element_check_00898 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.sound2;
      print(qcashier.screen21.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.sound2 = testData1;
      print(qcashier.screen21.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.sound2 = testData2;
      print(qcashier.screen21.sound2);
      expect(qcashier.screen21.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.sound2 = defalut;
      print(qcashier.screen21.sound2);
      expect(qcashier.screen21.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00921_element_check_00898 **********\n\n");
    });

    test('00922_element_check_00899', () async {
      print("\n********** テスト実行：00922_element_check_00899 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.sound3;
      print(qcashier.screen21.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.sound3 = testData1;
      print(qcashier.screen21.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.sound3 = testData2;
      print(qcashier.screen21.sound3);
      expect(qcashier.screen21.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.sound3 = defalut;
      print(qcashier.screen21.sound3);
      expect(qcashier.screen21.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00922_element_check_00899 **********\n\n");
    });

    test('00923_element_check_00900', () async {
      print("\n********** テスト実行：00923_element_check_00900 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.snd_timer;
      print(qcashier.screen21.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.snd_timer = testData1;
      print(qcashier.screen21.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.snd_timer = testData2;
      print(qcashier.screen21.snd_timer);
      expect(qcashier.screen21.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.snd_timer = defalut;
      print(qcashier.screen21.snd_timer);
      expect(qcashier.screen21.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00923_element_check_00900 **********\n\n");
    });

    test('00924_element_check_00901', () async {
      print("\n********** テスト実行：00924_element_check_00901 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.timer1;
      print(qcashier.screen21.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.timer1 = testData1;
      print(qcashier.screen21.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.timer1 = testData2;
      print(qcashier.screen21.timer1);
      expect(qcashier.screen21.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.timer1 = defalut;
      print(qcashier.screen21.timer1);
      expect(qcashier.screen21.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00924_element_check_00901 **********\n\n");
    });

    test('00925_element_check_00902', () async {
      print("\n********** テスト実行：00925_element_check_00902 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.timer2;
      print(qcashier.screen21.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.timer2 = testData1;
      print(qcashier.screen21.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.timer2 = testData2;
      print(qcashier.screen21.timer2);
      expect(qcashier.screen21.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.timer2 = defalut;
      print(qcashier.screen21.timer2);
      expect(qcashier.screen21.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00925_element_check_00902 **********\n\n");
    });

    test('00926_element_check_00903', () async {
      print("\n********** テスト実行：00926_element_check_00903 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.timer3;
      print(qcashier.screen21.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.timer3 = testData1;
      print(qcashier.screen21.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.timer3 = testData2;
      print(qcashier.screen21.timer3);
      expect(qcashier.screen21.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.timer3 = defalut;
      print(qcashier.screen21.timer3);
      expect(qcashier.screen21.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00926_element_check_00903 **********\n\n");
    });

    test('00927_element_check_00904', () async {
      print("\n********** テスト実行：00927_element_check_00904 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.dsp_flg1;
      print(qcashier.screen21.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.dsp_flg1 = testData1;
      print(qcashier.screen21.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.dsp_flg1 = testData2;
      print(qcashier.screen21.dsp_flg1);
      expect(qcashier.screen21.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.dsp_flg1 = defalut;
      print(qcashier.screen21.dsp_flg1);
      expect(qcashier.screen21.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00927_element_check_00904 **********\n\n");
    });

    test('00928_element_check_00905', () async {
      print("\n********** テスト実行：00928_element_check_00905 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.dsp_flg2;
      print(qcashier.screen21.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.dsp_flg2 = testData1;
      print(qcashier.screen21.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.dsp_flg2 = testData2;
      print(qcashier.screen21.dsp_flg2);
      expect(qcashier.screen21.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.dsp_flg2 = defalut;
      print(qcashier.screen21.dsp_flg2);
      expect(qcashier.screen21.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00928_element_check_00905 **********\n\n");
    });

    test('00929_element_check_00906', () async {
      print("\n********** テスト実行：00929_element_check_00906 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.movie01_ext;
      print(qcashier.screen21.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.movie01_ext = testData1;
      print(qcashier.screen21.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.movie01_ext = testData2;
      print(qcashier.screen21.movie01_ext);
      expect(qcashier.screen21.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.movie01_ext = defalut;
      print(qcashier.screen21.movie01_ext);
      expect(qcashier.screen21.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00929_element_check_00906 **********\n\n");
    });

    test('00930_element_check_00907', () async {
      print("\n********** テスト実行：00930_element_check_00907 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.movie02_ext;
      print(qcashier.screen21.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.movie02_ext = testData1;
      print(qcashier.screen21.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.movie02_ext = testData2;
      print(qcashier.screen21.movie02_ext);
      expect(qcashier.screen21.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.movie02_ext = defalut;
      print(qcashier.screen21.movie02_ext);
      expect(qcashier.screen21.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00930_element_check_00907 **********\n\n");
    });

    test('00931_element_check_00908', () async {
      print("\n********** テスト実行：00931_element_check_00908 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.movie03_ext;
      print(qcashier.screen21.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.movie03_ext = testData1;
      print(qcashier.screen21.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.movie03_ext = testData2;
      print(qcashier.screen21.movie03_ext);
      expect(qcashier.screen21.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.movie03_ext = defalut;
      print(qcashier.screen21.movie03_ext);
      expect(qcashier.screen21.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00931_element_check_00908 **********\n\n");
    });

    test('00932_element_check_00909', () async {
      print("\n********** テスト実行：00932_element_check_00909 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.movie04_ext;
      print(qcashier.screen21.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.movie04_ext = testData1;
      print(qcashier.screen21.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.movie04_ext = testData2;
      print(qcashier.screen21.movie04_ext);
      expect(qcashier.screen21.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.movie04_ext = defalut;
      print(qcashier.screen21.movie04_ext);
      expect(qcashier.screen21.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00932_element_check_00909 **********\n\n");
    });

    test('00933_element_check_00910', () async {
      print("\n********** テスト実行：00933_element_check_00910 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line_title;
      print(qcashier.screen21.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line_title = testData1s;
      print(qcashier.screen21.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line_title = testData2s;
      print(qcashier.screen21.line_title);
      expect(qcashier.screen21.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line_title = defalut;
      print(qcashier.screen21.line_title);
      expect(qcashier.screen21.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00933_element_check_00910 **********\n\n");
    });

    test('00934_element_check_00911', () async {
      print("\n********** テスト実行：00934_element_check_00911 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line_title_ex;
      print(qcashier.screen21.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line_title_ex = testData1s;
      print(qcashier.screen21.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line_title_ex = testData2s;
      print(qcashier.screen21.line_title_ex);
      expect(qcashier.screen21.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line_title_ex = defalut;
      print(qcashier.screen21.line_title_ex);
      expect(qcashier.screen21.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00934_element_check_00911 **********\n\n");
    });

    test('00935_element_check_00912', () async {
      print("\n********** テスト実行：00935_element_check_00912 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line1;
      print(qcashier.screen21.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line1 = testData1s;
      print(qcashier.screen21.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line1 = testData2s;
      print(qcashier.screen21.line1);
      expect(qcashier.screen21.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line1 = defalut;
      print(qcashier.screen21.line1);
      expect(qcashier.screen21.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00935_element_check_00912 **********\n\n");
    });

    test('00936_element_check_00913', () async {
      print("\n********** テスト実行：00936_element_check_00913 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line2;
      print(qcashier.screen21.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line2 = testData1s;
      print(qcashier.screen21.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line2 = testData2s;
      print(qcashier.screen21.line2);
      expect(qcashier.screen21.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line2 = defalut;
      print(qcashier.screen21.line2);
      expect(qcashier.screen21.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00936_element_check_00913 **********\n\n");
    });

    test('00937_element_check_00914', () async {
      print("\n********** テスト実行：00937_element_check_00914 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line3;
      print(qcashier.screen21.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line3 = testData1s;
      print(qcashier.screen21.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line3 = testData2s;
      print(qcashier.screen21.line3);
      expect(qcashier.screen21.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line3 = defalut;
      print(qcashier.screen21.line3);
      expect(qcashier.screen21.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00937_element_check_00914 **********\n\n");
    });

    test('00938_element_check_00915', () async {
      print("\n********** テスト実行：00938_element_check_00915 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line4;
      print(qcashier.screen21.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line4 = testData1s;
      print(qcashier.screen21.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line4 = testData2s;
      print(qcashier.screen21.line4);
      expect(qcashier.screen21.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line4 = defalut;
      print(qcashier.screen21.line4);
      expect(qcashier.screen21.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00938_element_check_00915 **********\n\n");
    });

    test('00939_element_check_00916', () async {
      print("\n********** テスト実行：00939_element_check_00916 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line1_ex;
      print(qcashier.screen21.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line1_ex = testData1s;
      print(qcashier.screen21.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line1_ex = testData2s;
      print(qcashier.screen21.line1_ex);
      expect(qcashier.screen21.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line1_ex = defalut;
      print(qcashier.screen21.line1_ex);
      expect(qcashier.screen21.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00939_element_check_00916 **********\n\n");
    });

    test('00940_element_check_00917', () async {
      print("\n********** テスト実行：00940_element_check_00917 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line2_ex;
      print(qcashier.screen21.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line2_ex = testData1s;
      print(qcashier.screen21.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line2_ex = testData2s;
      print(qcashier.screen21.line2_ex);
      expect(qcashier.screen21.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line2_ex = defalut;
      print(qcashier.screen21.line2_ex);
      expect(qcashier.screen21.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00940_element_check_00917 **********\n\n");
    });

    test('00941_element_check_00918', () async {
      print("\n********** テスト実行：00941_element_check_00918 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line3_ex;
      print(qcashier.screen21.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line3_ex = testData1s;
      print(qcashier.screen21.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line3_ex = testData2s;
      print(qcashier.screen21.line3_ex);
      expect(qcashier.screen21.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line3_ex = defalut;
      print(qcashier.screen21.line3_ex);
      expect(qcashier.screen21.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00941_element_check_00918 **********\n\n");
    });

    test('00942_element_check_00919', () async {
      print("\n********** テスト実行：00942_element_check_00919 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.line4_ex;
      print(qcashier.screen21.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.line4_ex = testData1s;
      print(qcashier.screen21.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.line4_ex = testData2s;
      print(qcashier.screen21.line4_ex);
      expect(qcashier.screen21.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.line4_ex = defalut;
      print(qcashier.screen21.line4_ex);
      expect(qcashier.screen21.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00942_element_check_00919 **********\n\n");
    });

    test('00943_element_check_00920', () async {
      print("\n********** テスト実行：00943_element_check_00920 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.sound_led1;
      print(qcashier.screen21.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.sound_led1 = testData1;
      print(qcashier.screen21.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.sound_led1 = testData2;
      print(qcashier.screen21.sound_led1);
      expect(qcashier.screen21.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.sound_led1 = defalut;
      print(qcashier.screen21.sound_led1);
      expect(qcashier.screen21.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00943_element_check_00920 **********\n\n");
    });

    test('00944_element_check_00921', () async {
      print("\n********** テスト実行：00944_element_check_00921 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.sound_led2;
      print(qcashier.screen21.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.sound_led2 = testData1;
      print(qcashier.screen21.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.sound_led2 = testData2;
      print(qcashier.screen21.sound_led2);
      expect(qcashier.screen21.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.sound_led2 = defalut;
      print(qcashier.screen21.sound_led2);
      expect(qcashier.screen21.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00944_element_check_00921 **********\n\n");
    });

    test('00945_element_check_00922', () async {
      print("\n********** テスト実行：00945_element_check_00922 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen21.sound_led3;
      print(qcashier.screen21.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen21.sound_led3 = testData1;
      print(qcashier.screen21.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen21.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen21.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen21.sound_led3 = testData2;
      print(qcashier.screen21.sound_led3);
      expect(qcashier.screen21.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen21.sound_led3 = defalut;
      print(qcashier.screen21.sound_led3);
      expect(qcashier.screen21.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen21.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00945_element_check_00922 **********\n\n");
    });

    test('00946_element_check_00923', () async {
      print("\n********** テスト実行：00946_element_check_00923 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.title;
      print(qcashier.screen22.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.title = testData1s;
      print(qcashier.screen22.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.title = testData2s;
      print(qcashier.screen22.title);
      expect(qcashier.screen22.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.title = defalut;
      print(qcashier.screen22.title);
      expect(qcashier.screen22.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00946_element_check_00923 **********\n\n");
    });

    test('00947_element_check_00924', () async {
      print("\n********** テスト実行：00947_element_check_00924 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.msg1;
      print(qcashier.screen22.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.msg1 = testData1s;
      print(qcashier.screen22.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.msg1 = testData2s;
      print(qcashier.screen22.msg1);
      expect(qcashier.screen22.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.msg1 = defalut;
      print(qcashier.screen22.msg1);
      expect(qcashier.screen22.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00947_element_check_00924 **********\n\n");
    });

    test('00948_element_check_00925', () async {
      print("\n********** テスト実行：00948_element_check_00925 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.msg2;
      print(qcashier.screen22.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.msg2 = testData1s;
      print(qcashier.screen22.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.msg2 = testData2s;
      print(qcashier.screen22.msg2);
      expect(qcashier.screen22.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.msg2 = defalut;
      print(qcashier.screen22.msg2);
      expect(qcashier.screen22.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00948_element_check_00925 **********\n\n");
    });

    test('00949_element_check_00926', () async {
      print("\n********** テスト実行：00949_element_check_00926 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.msg1_size;
      print(qcashier.screen22.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.msg1_size = testData1;
      print(qcashier.screen22.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.msg1_size = testData2;
      print(qcashier.screen22.msg1_size);
      expect(qcashier.screen22.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.msg1_size = defalut;
      print(qcashier.screen22.msg1_size);
      expect(qcashier.screen22.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00949_element_check_00926 **********\n\n");
    });

    test('00950_element_check_00927', () async {
      print("\n********** テスト実行：00950_element_check_00927 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.msg2_size;
      print(qcashier.screen22.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.msg2_size = testData1;
      print(qcashier.screen22.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.msg2_size = testData2;
      print(qcashier.screen22.msg2_size);
      expect(qcashier.screen22.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.msg2_size = defalut;
      print(qcashier.screen22.msg2_size);
      expect(qcashier.screen22.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00950_element_check_00927 **********\n\n");
    });

    test('00951_element_check_00928', () async {
      print("\n********** テスト実行：00951_element_check_00928 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.sound1;
      print(qcashier.screen22.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.sound1 = testData1;
      print(qcashier.screen22.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.sound1 = testData2;
      print(qcashier.screen22.sound1);
      expect(qcashier.screen22.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.sound1 = defalut;
      print(qcashier.screen22.sound1);
      expect(qcashier.screen22.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00951_element_check_00928 **********\n\n");
    });

    test('00952_element_check_00929', () async {
      print("\n********** テスト実行：00952_element_check_00929 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.sound2;
      print(qcashier.screen22.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.sound2 = testData1;
      print(qcashier.screen22.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.sound2 = testData2;
      print(qcashier.screen22.sound2);
      expect(qcashier.screen22.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.sound2 = defalut;
      print(qcashier.screen22.sound2);
      expect(qcashier.screen22.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00952_element_check_00929 **********\n\n");
    });

    test('00953_element_check_00930', () async {
      print("\n********** テスト実行：00953_element_check_00930 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.sound3;
      print(qcashier.screen22.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.sound3 = testData1;
      print(qcashier.screen22.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.sound3 = testData2;
      print(qcashier.screen22.sound3);
      expect(qcashier.screen22.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.sound3 = defalut;
      print(qcashier.screen22.sound3);
      expect(qcashier.screen22.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00953_element_check_00930 **********\n\n");
    });

    test('00954_element_check_00931', () async {
      print("\n********** テスト実行：00954_element_check_00931 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.snd_timer;
      print(qcashier.screen22.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.snd_timer = testData1;
      print(qcashier.screen22.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.snd_timer = testData2;
      print(qcashier.screen22.snd_timer);
      expect(qcashier.screen22.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.snd_timer = defalut;
      print(qcashier.screen22.snd_timer);
      expect(qcashier.screen22.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00954_element_check_00931 **********\n\n");
    });

    test('00955_element_check_00932', () async {
      print("\n********** テスト実行：00955_element_check_00932 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.timer1;
      print(qcashier.screen22.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.timer1 = testData1;
      print(qcashier.screen22.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.timer1 = testData2;
      print(qcashier.screen22.timer1);
      expect(qcashier.screen22.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.timer1 = defalut;
      print(qcashier.screen22.timer1);
      expect(qcashier.screen22.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00955_element_check_00932 **********\n\n");
    });

    test('00956_element_check_00933', () async {
      print("\n********** テスト実行：00956_element_check_00933 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.timer2;
      print(qcashier.screen22.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.timer2 = testData1;
      print(qcashier.screen22.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.timer2 = testData2;
      print(qcashier.screen22.timer2);
      expect(qcashier.screen22.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.timer2 = defalut;
      print(qcashier.screen22.timer2);
      expect(qcashier.screen22.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00956_element_check_00933 **********\n\n");
    });

    test('00957_element_check_00934', () async {
      print("\n********** テスト実行：00957_element_check_00934 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.timer3;
      print(qcashier.screen22.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.timer3 = testData1;
      print(qcashier.screen22.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.timer3 = testData2;
      print(qcashier.screen22.timer3);
      expect(qcashier.screen22.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.timer3 = defalut;
      print(qcashier.screen22.timer3);
      expect(qcashier.screen22.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00957_element_check_00934 **********\n\n");
    });

    test('00958_element_check_00935', () async {
      print("\n********** テスト実行：00958_element_check_00935 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.dsp_flg1;
      print(qcashier.screen22.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.dsp_flg1 = testData1;
      print(qcashier.screen22.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.dsp_flg1 = testData2;
      print(qcashier.screen22.dsp_flg1);
      expect(qcashier.screen22.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.dsp_flg1 = defalut;
      print(qcashier.screen22.dsp_flg1);
      expect(qcashier.screen22.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00958_element_check_00935 **********\n\n");
    });

    test('00959_element_check_00936', () async {
      print("\n********** テスト実行：00959_element_check_00936 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.dsp_flg2;
      print(qcashier.screen22.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.dsp_flg2 = testData1;
      print(qcashier.screen22.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.dsp_flg2 = testData2;
      print(qcashier.screen22.dsp_flg2);
      expect(qcashier.screen22.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.dsp_flg2 = defalut;
      print(qcashier.screen22.dsp_flg2);
      expect(qcashier.screen22.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00959_element_check_00936 **********\n\n");
    });

    test('00960_element_check_00937', () async {
      print("\n********** テスト実行：00960_element_check_00937 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.movie01_ext;
      print(qcashier.screen22.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.movie01_ext = testData1;
      print(qcashier.screen22.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.movie01_ext = testData2;
      print(qcashier.screen22.movie01_ext);
      expect(qcashier.screen22.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.movie01_ext = defalut;
      print(qcashier.screen22.movie01_ext);
      expect(qcashier.screen22.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00960_element_check_00937 **********\n\n");
    });

    test('00961_element_check_00938', () async {
      print("\n********** テスト実行：00961_element_check_00938 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.movie02_ext;
      print(qcashier.screen22.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.movie02_ext = testData1;
      print(qcashier.screen22.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.movie02_ext = testData2;
      print(qcashier.screen22.movie02_ext);
      expect(qcashier.screen22.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.movie02_ext = defalut;
      print(qcashier.screen22.movie02_ext);
      expect(qcashier.screen22.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00961_element_check_00938 **********\n\n");
    });

    test('00962_element_check_00939', () async {
      print("\n********** テスト実行：00962_element_check_00939 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.movie03_ext;
      print(qcashier.screen22.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.movie03_ext = testData1;
      print(qcashier.screen22.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.movie03_ext = testData2;
      print(qcashier.screen22.movie03_ext);
      expect(qcashier.screen22.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.movie03_ext = defalut;
      print(qcashier.screen22.movie03_ext);
      expect(qcashier.screen22.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00962_element_check_00939 **********\n\n");
    });

    test('00963_element_check_00940', () async {
      print("\n********** テスト実行：00963_element_check_00940 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.movie04_ext;
      print(qcashier.screen22.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.movie04_ext = testData1;
      print(qcashier.screen22.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.movie04_ext = testData2;
      print(qcashier.screen22.movie04_ext);
      expect(qcashier.screen22.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.movie04_ext = defalut;
      print(qcashier.screen22.movie04_ext);
      expect(qcashier.screen22.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00963_element_check_00940 **********\n\n");
    });

    test('00964_element_check_00941', () async {
      print("\n********** テスト実行：00964_element_check_00941 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line_title;
      print(qcashier.screen22.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line_title = testData1s;
      print(qcashier.screen22.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line_title = testData2s;
      print(qcashier.screen22.line_title);
      expect(qcashier.screen22.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line_title = defalut;
      print(qcashier.screen22.line_title);
      expect(qcashier.screen22.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00964_element_check_00941 **********\n\n");
    });

    test('00965_element_check_00942', () async {
      print("\n********** テスト実行：00965_element_check_00942 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line_title_ex;
      print(qcashier.screen22.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line_title_ex = testData1s;
      print(qcashier.screen22.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line_title_ex = testData2s;
      print(qcashier.screen22.line_title_ex);
      expect(qcashier.screen22.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line_title_ex = defalut;
      print(qcashier.screen22.line_title_ex);
      expect(qcashier.screen22.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00965_element_check_00942 **********\n\n");
    });

    test('00966_element_check_00943', () async {
      print("\n********** テスト実行：00966_element_check_00943 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line1;
      print(qcashier.screen22.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line1 = testData1s;
      print(qcashier.screen22.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line1 = testData2s;
      print(qcashier.screen22.line1);
      expect(qcashier.screen22.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line1 = defalut;
      print(qcashier.screen22.line1);
      expect(qcashier.screen22.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00966_element_check_00943 **********\n\n");
    });

    test('00967_element_check_00944', () async {
      print("\n********** テスト実行：00967_element_check_00944 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line2;
      print(qcashier.screen22.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line2 = testData1s;
      print(qcashier.screen22.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line2 = testData2s;
      print(qcashier.screen22.line2);
      expect(qcashier.screen22.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line2 = defalut;
      print(qcashier.screen22.line2);
      expect(qcashier.screen22.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00967_element_check_00944 **********\n\n");
    });

    test('00968_element_check_00945', () async {
      print("\n********** テスト実行：00968_element_check_00945 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line3;
      print(qcashier.screen22.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line3 = testData1s;
      print(qcashier.screen22.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line3 = testData2s;
      print(qcashier.screen22.line3);
      expect(qcashier.screen22.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line3 = defalut;
      print(qcashier.screen22.line3);
      expect(qcashier.screen22.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00968_element_check_00945 **********\n\n");
    });

    test('00969_element_check_00946', () async {
      print("\n********** テスト実行：00969_element_check_00946 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line4;
      print(qcashier.screen22.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line4 = testData1s;
      print(qcashier.screen22.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line4 = testData2s;
      print(qcashier.screen22.line4);
      expect(qcashier.screen22.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line4 = defalut;
      print(qcashier.screen22.line4);
      expect(qcashier.screen22.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00969_element_check_00946 **********\n\n");
    });

    test('00970_element_check_00947', () async {
      print("\n********** テスト実行：00970_element_check_00947 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line1_ex;
      print(qcashier.screen22.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line1_ex = testData1s;
      print(qcashier.screen22.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line1_ex = testData2s;
      print(qcashier.screen22.line1_ex);
      expect(qcashier.screen22.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line1_ex = defalut;
      print(qcashier.screen22.line1_ex);
      expect(qcashier.screen22.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00970_element_check_00947 **********\n\n");
    });

    test('00971_element_check_00948', () async {
      print("\n********** テスト実行：00971_element_check_00948 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line2_ex;
      print(qcashier.screen22.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line2_ex = testData1s;
      print(qcashier.screen22.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line2_ex = testData2s;
      print(qcashier.screen22.line2_ex);
      expect(qcashier.screen22.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line2_ex = defalut;
      print(qcashier.screen22.line2_ex);
      expect(qcashier.screen22.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00971_element_check_00948 **********\n\n");
    });

    test('00972_element_check_00949', () async {
      print("\n********** テスト実行：00972_element_check_00949 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line3_ex;
      print(qcashier.screen22.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line3_ex = testData1s;
      print(qcashier.screen22.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line3_ex = testData2s;
      print(qcashier.screen22.line3_ex);
      expect(qcashier.screen22.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line3_ex = defalut;
      print(qcashier.screen22.line3_ex);
      expect(qcashier.screen22.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00972_element_check_00949 **********\n\n");
    });

    test('00973_element_check_00950', () async {
      print("\n********** テスト実行：00973_element_check_00950 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.line4_ex;
      print(qcashier.screen22.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.line4_ex = testData1s;
      print(qcashier.screen22.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.line4_ex = testData2s;
      print(qcashier.screen22.line4_ex);
      expect(qcashier.screen22.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.line4_ex = defalut;
      print(qcashier.screen22.line4_ex);
      expect(qcashier.screen22.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00973_element_check_00950 **********\n\n");
    });

    test('00974_element_check_00951', () async {
      print("\n********** テスト実行：00974_element_check_00951 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.sound_led1;
      print(qcashier.screen22.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.sound_led1 = testData1;
      print(qcashier.screen22.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.sound_led1 = testData2;
      print(qcashier.screen22.sound_led1);
      expect(qcashier.screen22.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.sound_led1 = defalut;
      print(qcashier.screen22.sound_led1);
      expect(qcashier.screen22.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00974_element_check_00951 **********\n\n");
    });

    test('00975_element_check_00952', () async {
      print("\n********** テスト実行：00975_element_check_00952 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.sound_led2;
      print(qcashier.screen22.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.sound_led2 = testData1;
      print(qcashier.screen22.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.sound_led2 = testData2;
      print(qcashier.screen22.sound_led2);
      expect(qcashier.screen22.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.sound_led2 = defalut;
      print(qcashier.screen22.sound_led2);
      expect(qcashier.screen22.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00975_element_check_00952 **********\n\n");
    });

    test('00976_element_check_00953', () async {
      print("\n********** テスト実行：00976_element_check_00953 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen22.sound_led3;
      print(qcashier.screen22.sound_led3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen22.sound_led3 = testData1;
      print(qcashier.screen22.sound_led3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen22.sound_led3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen22.sound_led3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen22.sound_led3 = testData2;
      print(qcashier.screen22.sound_led3);
      expect(qcashier.screen22.sound_led3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound_led3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen22.sound_led3 = defalut;
      print(qcashier.screen22.sound_led3);
      expect(qcashier.screen22.sound_led3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen22.sound_led3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00976_element_check_00953 **********\n\n");
    });

    test('00977_element_check_00954', () async {
      print("\n********** テスト実行：00977_element_check_00954 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.title;
      print(qcashier.screen23.title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.title = testData1s;
      print(qcashier.screen23.title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.title = testData2s;
      print(qcashier.screen23.title);
      expect(qcashier.screen23.title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.title = defalut;
      print(qcashier.screen23.title);
      expect(qcashier.screen23.title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00977_element_check_00954 **********\n\n");
    });

    test('00978_element_check_00955', () async {
      print("\n********** テスト実行：00978_element_check_00955 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.msg1;
      print(qcashier.screen23.msg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.msg1 = testData1s;
      print(qcashier.screen23.msg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.msg1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.msg1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.msg1 = testData2s;
      print(qcashier.screen23.msg1);
      expect(qcashier.screen23.msg1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.msg1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.msg1 = defalut;
      print(qcashier.screen23.msg1);
      expect(qcashier.screen23.msg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.msg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00978_element_check_00955 **********\n\n");
    });

    test('00979_element_check_00956', () async {
      print("\n********** テスト実行：00979_element_check_00956 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.msg2;
      print(qcashier.screen23.msg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.msg2 = testData1s;
      print(qcashier.screen23.msg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.msg2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.msg2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.msg2 = testData2s;
      print(qcashier.screen23.msg2);
      expect(qcashier.screen23.msg2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.msg2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.msg2 = defalut;
      print(qcashier.screen23.msg2);
      expect(qcashier.screen23.msg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.msg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00979_element_check_00956 **********\n\n");
    });

    test('00980_element_check_00957', () async {
      print("\n********** テスト実行：00980_element_check_00957 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.msg1_size;
      print(qcashier.screen23.msg1_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.msg1_size = testData1;
      print(qcashier.screen23.msg1_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.msg1_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.msg1_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.msg1_size = testData2;
      print(qcashier.screen23.msg1_size);
      expect(qcashier.screen23.msg1_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.msg1_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.msg1_size = defalut;
      print(qcashier.screen23.msg1_size);
      expect(qcashier.screen23.msg1_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.msg1_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00980_element_check_00957 **********\n\n");
    });

    test('00981_element_check_00958', () async {
      print("\n********** テスト実行：00981_element_check_00958 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.msg2_size;
      print(qcashier.screen23.msg2_size);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.msg2_size = testData1;
      print(qcashier.screen23.msg2_size);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.msg2_size == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.msg2_size == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.msg2_size = testData2;
      print(qcashier.screen23.msg2_size);
      expect(qcashier.screen23.msg2_size == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.msg2_size == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.msg2_size = defalut;
      print(qcashier.screen23.msg2_size);
      expect(qcashier.screen23.msg2_size == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.msg2_size == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00981_element_check_00958 **********\n\n");
    });

    test('00982_element_check_00959', () async {
      print("\n********** テスト実行：00982_element_check_00959 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.sound1;
      print(qcashier.screen23.sound1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.sound1 = testData1;
      print(qcashier.screen23.sound1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.sound1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.sound1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.sound1 = testData2;
      print(qcashier.screen23.sound1);
      expect(qcashier.screen23.sound1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.sound1 = defalut;
      print(qcashier.screen23.sound1);
      expect(qcashier.screen23.sound1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00982_element_check_00959 **********\n\n");
    });

    test('00983_element_check_00960', () async {
      print("\n********** テスト実行：00983_element_check_00960 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.sound2;
      print(qcashier.screen23.sound2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.sound2 = testData1;
      print(qcashier.screen23.sound2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.sound2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.sound2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.sound2 = testData2;
      print(qcashier.screen23.sound2);
      expect(qcashier.screen23.sound2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.sound2 = defalut;
      print(qcashier.screen23.sound2);
      expect(qcashier.screen23.sound2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00983_element_check_00960 **********\n\n");
    });

    test('00984_element_check_00961', () async {
      print("\n********** テスト実行：00984_element_check_00961 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.sound3;
      print(qcashier.screen23.sound3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.sound3 = testData1;
      print(qcashier.screen23.sound3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.sound3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.sound3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.sound3 = testData2;
      print(qcashier.screen23.sound3);
      expect(qcashier.screen23.sound3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.sound3 = defalut;
      print(qcashier.screen23.sound3);
      expect(qcashier.screen23.sound3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00984_element_check_00961 **********\n\n");
    });

    test('00985_element_check_00962', () async {
      print("\n********** テスト実行：00985_element_check_00962 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.snd_timer;
      print(qcashier.screen23.snd_timer);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.snd_timer = testData1;
      print(qcashier.screen23.snd_timer);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.snd_timer == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.snd_timer == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.snd_timer = testData2;
      print(qcashier.screen23.snd_timer);
      expect(qcashier.screen23.snd_timer == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.snd_timer == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.snd_timer = defalut;
      print(qcashier.screen23.snd_timer);
      expect(qcashier.screen23.snd_timer == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.snd_timer == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00985_element_check_00962 **********\n\n");
    });

    test('00986_element_check_00963', () async {
      print("\n********** テスト実行：00986_element_check_00963 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.timer1;
      print(qcashier.screen23.timer1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.timer1 = testData1;
      print(qcashier.screen23.timer1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.timer1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.timer1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.timer1 = testData2;
      print(qcashier.screen23.timer1);
      expect(qcashier.screen23.timer1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.timer1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.timer1 = defalut;
      print(qcashier.screen23.timer1);
      expect(qcashier.screen23.timer1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.timer1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00986_element_check_00963 **********\n\n");
    });

    test('00987_element_check_00964', () async {
      print("\n********** テスト実行：00987_element_check_00964 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.timer2;
      print(qcashier.screen23.timer2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.timer2 = testData1;
      print(qcashier.screen23.timer2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.timer2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.timer2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.timer2 = testData2;
      print(qcashier.screen23.timer2);
      expect(qcashier.screen23.timer2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.timer2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.timer2 = defalut;
      print(qcashier.screen23.timer2);
      expect(qcashier.screen23.timer2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.timer2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00987_element_check_00964 **********\n\n");
    });

    test('00988_element_check_00965', () async {
      print("\n********** テスト実行：00988_element_check_00965 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.timer3;
      print(qcashier.screen23.timer3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.timer3 = testData1;
      print(qcashier.screen23.timer3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.timer3 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.timer3 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.timer3 = testData2;
      print(qcashier.screen23.timer3);
      expect(qcashier.screen23.timer3 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.timer3 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.timer3 = defalut;
      print(qcashier.screen23.timer3);
      expect(qcashier.screen23.timer3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.timer3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00988_element_check_00965 **********\n\n");
    });

    test('00989_element_check_00966', () async {
      print("\n********** テスト実行：00989_element_check_00966 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.dsp_flg1;
      print(qcashier.screen23.dsp_flg1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.dsp_flg1 = testData1;
      print(qcashier.screen23.dsp_flg1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.dsp_flg1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.dsp_flg1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.dsp_flg1 = testData2;
      print(qcashier.screen23.dsp_flg1);
      expect(qcashier.screen23.dsp_flg1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.dsp_flg1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.dsp_flg1 = defalut;
      print(qcashier.screen23.dsp_flg1);
      expect(qcashier.screen23.dsp_flg1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.dsp_flg1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00989_element_check_00966 **********\n\n");
    });

    test('00990_element_check_00967', () async {
      print("\n********** テスト実行：00990_element_check_00967 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.dsp_flg2;
      print(qcashier.screen23.dsp_flg2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.dsp_flg2 = testData1;
      print(qcashier.screen23.dsp_flg2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.dsp_flg2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.dsp_flg2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.dsp_flg2 = testData2;
      print(qcashier.screen23.dsp_flg2);
      expect(qcashier.screen23.dsp_flg2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.dsp_flg2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.dsp_flg2 = defalut;
      print(qcashier.screen23.dsp_flg2);
      expect(qcashier.screen23.dsp_flg2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.dsp_flg2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00990_element_check_00967 **********\n\n");
    });

    test('00991_element_check_00968', () async {
      print("\n********** テスト実行：00991_element_check_00968 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.movie01_ext;
      print(qcashier.screen23.movie01_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.movie01_ext = testData1;
      print(qcashier.screen23.movie01_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.movie01_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.movie01_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.movie01_ext = testData2;
      print(qcashier.screen23.movie01_ext);
      expect(qcashier.screen23.movie01_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.movie01_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.movie01_ext = defalut;
      print(qcashier.screen23.movie01_ext);
      expect(qcashier.screen23.movie01_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.movie01_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00991_element_check_00968 **********\n\n");
    });

    test('00992_element_check_00969', () async {
      print("\n********** テスト実行：00992_element_check_00969 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.movie02_ext;
      print(qcashier.screen23.movie02_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.movie02_ext = testData1;
      print(qcashier.screen23.movie02_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.movie02_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.movie02_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.movie02_ext = testData2;
      print(qcashier.screen23.movie02_ext);
      expect(qcashier.screen23.movie02_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.movie02_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.movie02_ext = defalut;
      print(qcashier.screen23.movie02_ext);
      expect(qcashier.screen23.movie02_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.movie02_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00992_element_check_00969 **********\n\n");
    });

    test('00993_element_check_00970', () async {
      print("\n********** テスト実行：00993_element_check_00970 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.movie03_ext;
      print(qcashier.screen23.movie03_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.movie03_ext = testData1;
      print(qcashier.screen23.movie03_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.movie03_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.movie03_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.movie03_ext = testData2;
      print(qcashier.screen23.movie03_ext);
      expect(qcashier.screen23.movie03_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.movie03_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.movie03_ext = defalut;
      print(qcashier.screen23.movie03_ext);
      expect(qcashier.screen23.movie03_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.movie03_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00993_element_check_00970 **********\n\n");
    });

    test('00994_element_check_00971', () async {
      print("\n********** テスト実行：00994_element_check_00971 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.movie04_ext;
      print(qcashier.screen23.movie04_ext);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.movie04_ext = testData1;
      print(qcashier.screen23.movie04_ext);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.movie04_ext == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.movie04_ext == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.movie04_ext = testData2;
      print(qcashier.screen23.movie04_ext);
      expect(qcashier.screen23.movie04_ext == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.movie04_ext == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.movie04_ext = defalut;
      print(qcashier.screen23.movie04_ext);
      expect(qcashier.screen23.movie04_ext == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.movie04_ext == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00994_element_check_00971 **********\n\n");
    });

    test('00995_element_check_00972', () async {
      print("\n********** テスト実行：00995_element_check_00972 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line_title;
      print(qcashier.screen23.line_title);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line_title = testData1s;
      print(qcashier.screen23.line_title);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line_title == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line_title == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line_title = testData2s;
      print(qcashier.screen23.line_title);
      expect(qcashier.screen23.line_title == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line_title == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line_title = defalut;
      print(qcashier.screen23.line_title);
      expect(qcashier.screen23.line_title == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line_title == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00995_element_check_00972 **********\n\n");
    });

    test('00996_element_check_00973', () async {
      print("\n********** テスト実行：00996_element_check_00973 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line_title_ex;
      print(qcashier.screen23.line_title_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line_title_ex = testData1s;
      print(qcashier.screen23.line_title_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line_title_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line_title_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line_title_ex = testData2s;
      print(qcashier.screen23.line_title_ex);
      expect(qcashier.screen23.line_title_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line_title_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line_title_ex = defalut;
      print(qcashier.screen23.line_title_ex);
      expect(qcashier.screen23.line_title_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line_title_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00996_element_check_00973 **********\n\n");
    });

    test('00997_element_check_00974', () async {
      print("\n********** テスト実行：00997_element_check_00974 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line1;
      print(qcashier.screen23.line1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line1 = testData1s;
      print(qcashier.screen23.line1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line1 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line1 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line1 = testData2s;
      print(qcashier.screen23.line1);
      expect(qcashier.screen23.line1 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line1 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line1 = defalut;
      print(qcashier.screen23.line1);
      expect(qcashier.screen23.line1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00997_element_check_00974 **********\n\n");
    });

    test('00998_element_check_00975', () async {
      print("\n********** テスト実行：00998_element_check_00975 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line2;
      print(qcashier.screen23.line2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line2 = testData1s;
      print(qcashier.screen23.line2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line2 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line2 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line2 = testData2s;
      print(qcashier.screen23.line2);
      expect(qcashier.screen23.line2 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line2 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line2 = defalut;
      print(qcashier.screen23.line2);
      expect(qcashier.screen23.line2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00998_element_check_00975 **********\n\n");
    });

    test('00999_element_check_00976', () async {
      print("\n********** テスト実行：00999_element_check_00976 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line3;
      print(qcashier.screen23.line3);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line3 = testData1s;
      print(qcashier.screen23.line3);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line3 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line3 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line3 = testData2s;
      print(qcashier.screen23.line3);
      expect(qcashier.screen23.line3 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line3 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line3 = defalut;
      print(qcashier.screen23.line3);
      expect(qcashier.screen23.line3 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line3 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：00999_element_check_00976 **********\n\n");
    });

    test('01000_element_check_00977', () async {
      print("\n********** テスト実行：01000_element_check_00977 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line4;
      print(qcashier.screen23.line4);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line4 = testData1s;
      print(qcashier.screen23.line4);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line4 == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line4 == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line4 = testData2s;
      print(qcashier.screen23.line4);
      expect(qcashier.screen23.line4 == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line4 == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line4 = defalut;
      print(qcashier.screen23.line4);
      expect(qcashier.screen23.line4 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line4 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01000_element_check_00977 **********\n\n");
    });

    test('01001_element_check_00978', () async {
      print("\n********** テスト実行：01001_element_check_00978 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line1_ex;
      print(qcashier.screen23.line1_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line1_ex = testData1s;
      print(qcashier.screen23.line1_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line1_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line1_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line1_ex = testData2s;
      print(qcashier.screen23.line1_ex);
      expect(qcashier.screen23.line1_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line1_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line1_ex = defalut;
      print(qcashier.screen23.line1_ex);
      expect(qcashier.screen23.line1_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line1_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01001_element_check_00978 **********\n\n");
    });

    test('01002_element_check_00979', () async {
      print("\n********** テスト実行：01002_element_check_00979 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line2_ex;
      print(qcashier.screen23.line2_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line2_ex = testData1s;
      print(qcashier.screen23.line2_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line2_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line2_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line2_ex = testData2s;
      print(qcashier.screen23.line2_ex);
      expect(qcashier.screen23.line2_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line2_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line2_ex = defalut;
      print(qcashier.screen23.line2_ex);
      expect(qcashier.screen23.line2_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line2_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01002_element_check_00979 **********\n\n");
    });

    test('01003_element_check_00980', () async {
      print("\n********** テスト実行：01003_element_check_00980 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line3_ex;
      print(qcashier.screen23.line3_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line3_ex = testData1s;
      print(qcashier.screen23.line3_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line3_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line3_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line3_ex = testData2s;
      print(qcashier.screen23.line3_ex);
      expect(qcashier.screen23.line3_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line3_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line3_ex = defalut;
      print(qcashier.screen23.line3_ex);
      expect(qcashier.screen23.line3_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line3_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01003_element_check_00980 **********\n\n");
    });

    test('01004_element_check_00981', () async {
      print("\n********** テスト実行：01004_element_check_00981 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.line4_ex;
      print(qcashier.screen23.line4_ex);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.line4_ex = testData1s;
      print(qcashier.screen23.line4_ex);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.line4_ex == testData1s, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.line4_ex == testData1s, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.line4_ex = testData2s;
      print(qcashier.screen23.line4_ex);
      expect(qcashier.screen23.line4_ex == testData2s, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line4_ex == testData2s, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.line4_ex = defalut;
      print(qcashier.screen23.line4_ex);
      expect(qcashier.screen23.line4_ex == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.line4_ex == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01004_element_check_00981 **********\n\n");
    });

    test('01005_element_check_00982', () async {
      print("\n********** テスト実行：01005_element_check_00982 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.sound_led1;
      print(qcashier.screen23.sound_led1);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.sound_led1 = testData1;
      print(qcashier.screen23.sound_led1);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.sound_led1 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.sound_led1 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.sound_led1 = testData2;
      print(qcashier.screen23.sound_led1);
      expect(qcashier.screen23.sound_led1 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound_led1 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.sound_led1 = defalut;
      print(qcashier.screen23.sound_led1);
      expect(qcashier.screen23.sound_led1 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound_led1 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01005_element_check_00982 **********\n\n");
    });

    test('01006_element_check_00983', () async {
      print("\n********** テスト実行：01006_element_check_00983 **********");

      qcashier = QcashierJsonFile();
      allPropatyCheckInit(qcashier);

      // ①loadを実行する。
      await qcashier.load();

      // ②指定したプロパティの初期値を取得する。
      final defalut = qcashier.screen23.sound_led2;
      print(qcashier.screen23.sound_led2);

      // ②指定したプロパティにテストデータ1を書き込む。
      qcashier.screen23.sound_led2 = testData1;
      print(qcashier.screen23.sound_led2);

      // ③指定したプロパティにテストデータを書き込み後に読み込み、一致していることを確認する。
      expect(qcashier.screen23.sound_led2 == testData1, true);

      // ④saveを実行後、loadを実行する。
      await qcashier.save();
      await qcashier.load();

      // ⑤同じプロパティを読み込み、データに変化がないことを確認する。
      expect(qcashier.screen23.sound_led2 == testData1, true);

      // ⑥③～⑤を異なるテストデータで実施する。
      qcashier.screen23.sound_led2 = testData2;
      print(qcashier.screen23.sound_led2);
      expect(qcashier.screen23.sound_led2 == testData2, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound_led2 == testData2, true);

      // ⑦③～⑤を手順①で取得した初期値で実施する。
      qcashier.screen23.sound_led2 = defalut;
      print(qcashier.screen23.sound_led2);
      expect(qcashier.screen23.sound_led2 == defalut, true);
      await qcashier.save();
      await qcashier.load();
      expect(qcashier.screen23.sound_led2 == defalut, true);

      // ⑧全てのプロパティが初期値になっていることを確認する。
      allPropatyCheck(qcashier, true);

      print("********** テスト終了：01006_element_check_00983 **********\n\n");
    });
    
  });
}

void allPropatyCheckInit(QcashierJsonFile test)
{
  expect(test.common.item_disp, 0);
  expect(test.common.logo_typ, 0);
  expect(test.common.disp_typ, 0);
  expect(test.common.spdsp_use, 0);
  expect(test.common.fix_max, 0);
  expect(test.common.fix_typ, 0);
  expect(test.common.ptn_max, 0);
  expect(test.common.ptn_typ, 0);
  expect(test.common.spe_typ, 0);
  expect(test.common.chara_typ, 0);
  expect(test.common.language_typ, 0);
  expect(test.common.page_max, 0);
  expect(test.common.typ_max, 0);
  expect(test.common.pay_typ1, 0);
  expect(test.common.pay_typ2, 0);
  expect(test.common.pay_typ3, 0);
  expect(test.common.pay_typ4, 0);
  expect(test.common.pay_typ5, 0);
  expect(test.common.pay_typ6, 0);
  expect(test.common.pay_typ7, 0);
  expect(test.common.pay_typ8, 0);
  expect(test.common.demo_disp_btn, 0);
  expect(test.common.rcpt_limit_time, 0);
  expect(test.common.next_rcpt_limit, 0);
  expect(test.common.auto_susdsp, 0);
  expect(test.common.susdsp_time, 0);
  expect(test.common.rfm_receipt, 0);
  expect(test.common.signp_typ, 0);
  expect(test.common.select_typ, 0);
  expect(test.common.select_str_msg, 0);
  expect(test.common.regbag1_plucd, 0);
  expect(test.common.regbag2_plucd, 0);
  expect(test.common.regbag3_plucd, 0);
  expect(test.common.autocash_operation, 0);
  expect(test.common.autocash_equaltime, 0);
  expect(test.common.autocash_overtime, 0);
  expect(test.common.fip_disp, 0);
  expect(test.common.crdtcard_gettimer, 0);
  expect(test.common.charge_plucd1, 0);
  expect(test.common.charge_plucd2, 0);
  expect(test.common.charge_plucd3, 0);
  expect(test.common.charge_plucd4, 0);
  expect(test.common.charge_plucd5, 0);
  expect(test.common.charge_plucd6, 0);
  expect(test.common.crdtcard_warntime, 0);
  expect(test.common.acx_recalc_btn, 0);
  expect(test.common.lang_chg_max, 0);
  expect(test.common.lang_select1, 0);
  expect(test.common.lang_select2, 0);
  expect(test.common.lang_select3, 0);
  expect(test.common.lang_select4, 0);
  expect(test.common.lang_select5, 0);
  expect(test.common.lang_select6, 0);
  expect(test.common.lang_select7, 0);
  expect(test.common.lang_select8, 0);
  expect(test.common.autocrdt_operation, 0);
  expect(test.common.autocrdt_time, 0);
  expect(test.common.preca_charge_only, 0);
  expect(test.common.preca_charge_plucd1, 0);
  expect(test.common.preca_charge_plucd2, 0);
  expect(test.common.preca_charge_plucd3, 0);
  expect(test.common.preca_charge_plucd4, 0);
  expect(test.common.preca_charge_plucd5, 0);
  expect(test.common.preca_charge_plucd6, 0);
  expect(test.common.select_dsp_ccin, 0);
  expect(test.common.cancel_btn_dsp, 0);
  expect(test.common.clinic_mode, 0);
  expect(test.common.clinic_receipt, 0);
  expect(test.common.clinic_greeting, 0);
  expect(test.common.clinic_greeting_sound, 0);
  expect(test.common.fin_btn_chg, 0);
  expect(test.common.startdsp_btn_single, 0);
  expect(test.common.startdsp_scan_enable, 0);
  expect(test.common.pay_typ9, 0);
  expect(test.common.pay_typ10, 0);
  expect(test.common.pay_typ11, 0);
  expect(test.common.pay_typ12, 0);
  expect(test.common.pay_typ13, 0);
  expect(test.common.pay_typ14, 0);
  expect(test.common.pay_typ15, 0);
  expect(test.common.pay_typ16, 0);
  expect(test.common.verifone_nfc_crdt, 0);
  expect(test.common.hs_dualdisp_chk, 0);
  expect(test.common.back_btn_dsp, 0);
  expect(test.common.NoOperationWarning, 0);
  expect(test.common.NoOperationSignpaul_time, 0);
  expect(test.common.NoOperationVoicesound_time, 0);
  expect(test.common.NoOperationSound, 0);
  expect(test.common.NoOperationPayWarning, 0);
  expect(test.common.cin_dsp_wait, 0);
  expect(test.common.clinic_auto_stl, 0);
  expect(test.common.acracb_stlmode, 0);
  expect(test.common.apbf_regbag_plucd, 0);
  expect(test.common.apbf_dlgdisp_time, 0);
  expect(test.common.mybag_plu_point_add, 0);
  expect(test.common.video_jpqr_scanner, 0);
  expect(test.common.chg_warn_timer_use, 0);
  expect(test.common.cin_cnl_btn_show, 0);
  expect(test.common.regs_use_class, 0);
  expect(test.common.sg_eatin_chk, 0);
  expect(test.common.selfmode1_auto_cancel, 0);
  expect(test.common.point_use_unit, 0);
  expect(test.common.selfmode1_wav_qty, 0);
  expect(test.common.age_chk_notice, 0);
  expect(test.common.verifone_nfc_repika_crdt, 0);
  expect(test.common.regbag1_default, 0);
  expect(test.common.regbag2_default, 0);
  expect(test.common.regbag3_default, 0);
  expect(test.common.regbag_timing, 0);
  expect(test.common.regbag_disp_back_btn, 0);
  expect(test.common.self_disp_preca_ref, 0);
  expect(test.common.fs_cashless_dsp_change, 0);
  expect(test.common.hs_fs_scanning_guide, 0);
  expect(test.common.hs_fs_twice_read_stop, 0);
  expect(test.common.cashin_sound, 0);
  expect(test.common.sound_change_flg, 0);
  expect(test.common.hs_fs_auto_preset_dsp, 0);
  expect(test.common.cashless_dsp_return, 0);
  expect(test.common.regbag_screen_scan_input, 0);
  expect(test.common.g3_pay_btn_blink, 0);
  expect(test.common.g3_employee_call_btn, 0);
  expect(test.common.g3_pay_slct_btn_ptn, 0);
  expect(test.common.video_jpqr_sidescanner, 0);
  expect(test.common.mente_itemlist_type, 0);
  expect(test.common.rg_self_noteplu_perm, 0);
  expect(test.common.g3_self_itemlist_scrvoid, 0);
  expect(test.common.g3_fs_presetgroup_custom, 0);
  expect(test.common.g3_fs_presetgroup_btn1, 0);
  expect(test.common.g3_fs_presetgroup_btn2, 0);
  expect(test.common.g3_fs_presetgroup_btn3, 0);
  expect(test.common.g3_fs_presetgroup_btn4, 0);
  expect(test.common.g3_fs_presetgroup_btn5, 0);
  expect(test.common.g3_fs_presetgroup_btn6, 0);
  expect(test.common.g3_fs_presetgroup_btn7, 0);
  expect(test.common.g3_fs_presetgroup_btn8, 0);
  expect(test.common.callBuzzer_sound_change_flg, 0);
  expect(test.common.top_map_display, 0);
  expect(test.common.start_payselect_display, 0);
  expect(test.common.idle_signp_state, 0);
  expect(test.common.jpqr_paybtn_image, 0);
  expect(test.common.vega_credit_forget_chk, 0);
  expect(test.common.cash_only_setting, 0);
  expect(test.common.cash_only_border, 0);
  expect(test.chg_info.chg_info, 0);
  expect(test.chg_info.chg_5000, 0);
  expect(test.chg_info.chg_2000, 0);
  expect(test.chg_info.chg_1000, 0);
  expect(test.chg_info.chg_500, 0);
  expect(test.chg_info.chg_100, 0);
  expect(test.chg_info.chg_50, 0);
  expect(test.chg_info.chg_10, 0);
  expect(test.chg_info.chg_5, 0);
  expect(test.chg_info.chg_1, 0);
  expect(test.chg_info.chg_info_full_chk, 0);
  expect(test.chg_info.chg_signp_full_chk, 0);
  expect(test.period.spr_str, 0);
  expect(test.period.spr_end, 0);
  expect(test.period.sum_str, 0);
  expect(test.period.sum_end, 0);
  expect(test.period.aut_str, 0);
  expect(test.period.aut_end, 0);
  expect(test.period.win1_str, 0);
  expect(test.period.win1_end, 0);
  expect(test.period.win2_str, 0);
  expect(test.period.win2_end, 0);
  expect(test.period.sp1_flg, 0);
  expect(test.period.sp2_flg, 0);
  expect(test.period.sp3_flg, 0);
  expect(test.period.sp4_flg, 0);
  expect(test.period.sp5_flg, 0);
  expect(test.period.sp6_flg, 0);
  expect(test.period.sp7_flg, 0);
  expect(test.period.sp8_flg, 0);
  expect(test.period.sp9_flg, 0);
  expect(test.period.sp10_flg, 0);
  expect(test.period.sp11_flg, 0);
  expect(test.period.sp12_flg, 0);
  expect(test.period.sp13_flg, 0);
  expect(test.period.sp14_flg, 0);
  expect(test.period.sp15_flg, 0);
  expect(test.period.sp16_flg, 0);
  expect(test.period.sp17_flg, 0);
  expect(test.period.sp18_flg, 0);
  expect(test.period.sp1_str, 0);
  expect(test.period.sp1_end, 0);
  expect(test.period.sp2_str, "");
  expect(test.period.sp2_end, "");
  expect(test.period.sp3_str, 0);
  expect(test.period.sp3_end, 0);
  expect(test.period.sp4_str, 0);
  expect(test.period.sp4_end, 0);
  expect(test.period.sp5_str, "");
  expect(test.period.sp5_end, "");
  expect(test.period.sp6_str, 0);
  expect(test.period.sp6_end, 0);
  expect(test.period.sp7_str, 0);
  expect(test.period.sp7_end, 0);
  expect(test.period.sp8_str, "");
  expect(test.period.sp8_end, "");
  expect(test.period.sp9_str, "");
  expect(test.period.sp9_end, "");
  expect(test.period.sp10_str, 0);
  expect(test.period.sp10_end, 0);
  expect(test.period.sp11_str, "");
  expect(test.period.sp11_end, "");
  expect(test.period.sp12_str, 0);
  expect(test.period.sp12_end, 0);
  expect(test.period.sp13_str, "");
  expect(test.period.sp13_end, "");
  expect(test.period.sp14_str, 0);
  expect(test.period.sp14_end, 0);
  expect(test.period.sp15_str, "");
  expect(test.period.sp15_end, "");
  expect(test.period.sp16_str, 0);
  expect(test.period.sp16_end, 0);
  expect(test.period.sp17_str, 0);
  expect(test.period.sp17_end, 0);
  expect(test.period.sp18_str, "");
  expect(test.period.sp18_end, "");
  expect(test.period.spr_time1, 0);
  expect(test.period.spr_time2, 0);
  expect(test.period.sum_time1, 0);
  expect(test.period.sum_time2, 0);
  expect(test.period.aut_time1, 0);
  expect(test.period.aut_time2, 0);
  expect(test.period.win_time1, 0);
  expect(test.period.win_time2, 0);
  expect(test.screen0.title, "");
  expect(test.screen0.msg1, "");
  expect(test.screen0.msg2, "");
  expect(test.screen0.msg1_size, 0);
  expect(test.screen0.msg2_size, 0);
  expect(test.screen0.sound1, 0);
  expect(test.screen0.sound2, 0);
  expect(test.screen0.sound3, 0);
  expect(test.screen0.snd_timer, 0);
  expect(test.screen0.timer1, 0);
  expect(test.screen0.timer2, 0);
  expect(test.screen0.timer3, 0);
  expect(test.screen0.dsp_flg1, 0);
  expect(test.screen0.dsp_flg2, 0);
  expect(test.screen0.movie01_ext, 0);
  expect(test.screen0.movie02_ext, 0);
  expect(test.screen0.movie03_ext, 0);
  expect(test.screen0.movie04_ext, 0);
  expect(test.screen0.line_title, "");
  expect(test.screen0.line_title_ex, "");
  expect(test.screen0.line1, "");
  expect(test.screen0.line2, "");
  expect(test.screen0.line3, "");
  expect(test.screen0.line4, "");
  expect(test.screen0.line1_ex, "");
  expect(test.screen0.line2_ex, "");
  expect(test.screen0.line3_ex, "");
  expect(test.screen0.line4_ex, "");
  expect(test.screen0.sound_led1, 0);
  expect(test.screen0.sound_led2, 0);
  expect(test.screen0.sound_led3, 0);
  expect(test.screen1.title, "");
  expect(test.screen1.msg1, "");
  expect(test.screen1.msg2, "");
  expect(test.screen1.msg1_size, 0);
  expect(test.screen1.msg2_size, 0);
  expect(test.screen1.sound1, 0);
  expect(test.screen1.sound2, 0);
  expect(test.screen1.sound3, 0);
  expect(test.screen1.snd_timer, 0);
  expect(test.screen1.timer1, 0);
  expect(test.screen1.timer2, 0);
  expect(test.screen1.timer3, 0);
  expect(test.screen1.dsp_flg1, 0);
  expect(test.screen1.dsp_flg2, 0);
  expect(test.screen1.movie01_ext, 0);
  expect(test.screen1.movie02_ext, 0);
  expect(test.screen1.movie03_ext, 0);
  expect(test.screen1.movie04_ext, 0);
  expect(test.screen1.line_title, "");
  expect(test.screen1.line_title_ex, "");
  expect(test.screen1.line1, "");
  expect(test.screen1.line2, "");
  expect(test.screen1.line3, "");
  expect(test.screen1.line4, "");
  expect(test.screen1.line1_ex, "");
  expect(test.screen1.line2_ex, "");
  expect(test.screen1.line3_ex, "");
  expect(test.screen1.line4_ex, "");
  expect(test.screen1.sound_led1, 0);
  expect(test.screen1.sound_led2, 0);
  expect(test.screen1.sound_led3, 0);
  expect(test.screen2.title, "");
  expect(test.screen2.msg1, "");
  expect(test.screen2.msg2, "");
  expect(test.screen2.msg1_size, 0);
  expect(test.screen2.msg2_size, 0);
  expect(test.screen2.sound1, 0);
  expect(test.screen2.sound2, 0);
  expect(test.screen2.sound3, 0);
  expect(test.screen2.snd_timer, 0);
  expect(test.screen2.timer1, 0);
  expect(test.screen2.timer2, 0);
  expect(test.screen2.timer3, 0);
  expect(test.screen2.dsp_flg1, 0);
  expect(test.screen2.dsp_flg2, 0);
  expect(test.screen2.movie01_ext, 0);
  expect(test.screen2.movie02_ext, 0);
  expect(test.screen2.movie03_ext, 0);
  expect(test.screen2.movie04_ext, 0);
  expect(test.screen2.line_title, "");
  expect(test.screen2.line_title_ex, "");
  expect(test.screen2.line1, "");
  expect(test.screen2.line2, "");
  expect(test.screen2.line3, "");
  expect(test.screen2.line4, "");
  expect(test.screen2.line1_ex, "");
  expect(test.screen2.line2_ex, "");
  expect(test.screen2.line3_ex, "");
  expect(test.screen2.line4_ex, "");
  expect(test.screen2.sound_led1, 0);
  expect(test.screen2.sound_led2, 0);
  expect(test.screen2.sound_led3, 0);
  expect(test.screen3.title, "");
  expect(test.screen3.msg1, "");
  expect(test.screen3.msg2, "");
  expect(test.screen3.msg1_size, 0);
  expect(test.screen3.msg2_size, 0);
  expect(test.screen3.sound1, 0);
  expect(test.screen3.sound2, 0);
  expect(test.screen3.sound3, 0);
  expect(test.screen3.snd_timer, 0);
  expect(test.screen3.timer1, 0);
  expect(test.screen3.timer2, 0);
  expect(test.screen3.timer3, 0);
  expect(test.screen3.dsp_flg1, 0);
  expect(test.screen3.dsp_flg2, 0);
  expect(test.screen3.movie01_ext, 0);
  expect(test.screen3.movie02_ext, 0);
  expect(test.screen3.movie03_ext, 0);
  expect(test.screen3.movie04_ext, 0);
  expect(test.screen3.line_title, "");
  expect(test.screen3.line_title_ex, "");
  expect(test.screen3.line1, "");
  expect(test.screen3.line2, "");
  expect(test.screen3.line3, "");
  expect(test.screen3.line4, "");
  expect(test.screen3.line1_ex, "");
  expect(test.screen3.line2_ex, "");
  expect(test.screen3.line3_ex, "");
  expect(test.screen3.line4_ex, "");
  expect(test.screen3.sound_led1, 0);
  expect(test.screen3.sound_led2, 0);
  expect(test.screen3.sound_led3, 0);
  expect(test.screen4.title, "");
  expect(test.screen4.msg1, "");
  expect(test.screen4.msg2, "");
  expect(test.screen4.msg1_size, 0);
  expect(test.screen4.msg2_size, 0);
  expect(test.screen4.sound1, 0);
  expect(test.screen4.sound2, 0);
  expect(test.screen4.sound3, 0);
  expect(test.screen4.snd_timer, 0);
  expect(test.screen4.timer1, 0);
  expect(test.screen4.timer2, 0);
  expect(test.screen4.timer3, 0);
  expect(test.screen4.dsp_flg1, 0);
  expect(test.screen4.dsp_flg2, 0);
  expect(test.screen4.movie01_ext, 0);
  expect(test.screen4.movie02_ext, 0);
  expect(test.screen4.movie03_ext, 0);
  expect(test.screen4.movie04_ext, 0);
  expect(test.screen4.line_title, "");
  expect(test.screen4.line_title_ex, "");
  expect(test.screen4.line1, "");
  expect(test.screen4.line2, "");
  expect(test.screen4.line3, "");
  expect(test.screen4.line4, "");
  expect(test.screen4.line1_ex, "");
  expect(test.screen4.line2_ex, "");
  expect(test.screen4.line3_ex, "");
  expect(test.screen4.line4_ex, "");
  expect(test.screen4.sound_led1, 0);
  expect(test.screen4.sound_led2, 0);
  expect(test.screen4.sound_led3, 0);
  expect(test.screen5.title, "");
  expect(test.screen5.msg1, "");
  expect(test.screen5.msg2, "");
  expect(test.screen5.msg1_size, 0);
  expect(test.screen5.msg2_size, 0);
  expect(test.screen5.sound1, 0);
  expect(test.screen5.sound2, "");
  expect(test.screen5.sound3, 0);
  expect(test.screen5.snd_timer, 0);
  expect(test.screen5.timer1, 0);
  expect(test.screen5.timer2, 0);
  expect(test.screen5.timer3, 0);
  expect(test.screen5.dsp_flg1, 0);
  expect(test.screen5.dsp_flg2, 0);
  expect(test.screen5.movie01_ext, 0);
  expect(test.screen5.movie02_ext, 0);
  expect(test.screen5.movie03_ext, 0);
  expect(test.screen5.movie04_ext, 0);
  expect(test.screen5.line_title, "");
  expect(test.screen5.line_title_ex, "");
  expect(test.screen5.line1, "");
  expect(test.screen5.line2, "");
  expect(test.screen5.line3, "");
  expect(test.screen5.line4, "");
  expect(test.screen5.line1_ex, "");
  expect(test.screen5.line2_ex, "");
  expect(test.screen5.line3_ex, "");
  expect(test.screen5.line4_ex, "");
  expect(test.screen5.sound_led1, 0);
  expect(test.screen5.sound_led2, 0);
  expect(test.screen5.sound_led3, 0);
  expect(test.screen6.title, "");
  expect(test.screen6.msg1, "");
  expect(test.screen6.msg2, "");
  expect(test.screen6.msg1_size, 0);
  expect(test.screen6.msg2_size, 0);
  expect(test.screen6.sound1, 0);
  expect(test.screen6.sound2, 0);
  expect(test.screen6.sound3, 0);
  expect(test.screen6.snd_timer, 0);
  expect(test.screen6.timer1, 0);
  expect(test.screen6.timer2, 0);
  expect(test.screen6.timer3, 0);
  expect(test.screen6.dsp_flg1, 0);
  expect(test.screen6.dsp_flg2, 0);
  expect(test.screen6.movie01_ext, 0);
  expect(test.screen6.movie02_ext, 0);
  expect(test.screen6.movie03_ext, 0);
  expect(test.screen6.movie04_ext, 0);
  expect(test.screen6.line_title, "");
  expect(test.screen6.line_title_ex, "");
  expect(test.screen6.line1, "");
  expect(test.screen6.line2, "");
  expect(test.screen6.line3, "");
  expect(test.screen6.line4, "");
  expect(test.screen6.line1_ex, "");
  expect(test.screen6.line2_ex, "");
  expect(test.screen6.line3_ex, "");
  expect(test.screen6.line4_ex, "");
  expect(test.screen6.sound_led1, 0);
  expect(test.screen6.sound_led2, 0);
  expect(test.screen6.sound_led3, 0);
  expect(test.screen6.line2_1, "");
  expect(test.screen6.line2_2, "");
  expect(test.screen6.line2_3, "");
  expect(test.screen6.line2_4, "");
  expect(test.screen7.title, "");
  expect(test.screen7.msg1, "");
  expect(test.screen7.msg2, "");
  expect(test.screen7.msg1_size, 0);
  expect(test.screen7.msg2_size, 0);
  expect(test.screen7.sound1, 0);
  expect(test.screen7.sound2, 0);
  expect(test.screen7.sound3, 0);
  expect(test.screen7.snd_timer, 0);
  expect(test.screen7.timer1, 0);
  expect(test.screen7.timer2, 0);
  expect(test.screen7.timer3, 0);
  expect(test.screen7.dsp_flg1, 0);
  expect(test.screen7.dsp_flg2, 0);
  expect(test.screen7.movie01_ext, 0);
  expect(test.screen7.movie02_ext, 0);
  expect(test.screen7.movie03_ext, 0);
  expect(test.screen7.movie04_ext, 0);
  expect(test.screen7.line_title, "");
  expect(test.screen7.line_title_ex, "");
  expect(test.screen7.line1, "");
  expect(test.screen7.line2, "");
  expect(test.screen7.line3, "");
  expect(test.screen7.line4, "");
  expect(test.screen7.line1_ex, "");
  expect(test.screen7.line2_ex, "");
  expect(test.screen7.line3_ex, "");
  expect(test.screen7.line4_ex, "");
  expect(test.screen7.sound_led1, 0);
  expect(test.screen7.sound_led2, 0);
  expect(test.screen7.sound_led3, 0);
  expect(test.screen8.title, "");
  expect(test.screen8.msg1, "");
  expect(test.screen8.msg2, "");
  expect(test.screen8.msg1_size, 0);
  expect(test.screen8.msg2_size, 0);
  expect(test.screen8.sound1, 0);
  expect(test.screen8.sound2, 0);
  expect(test.screen8.sound3, 0);
  expect(test.screen8.snd_timer, 0);
  expect(test.screen8.timer1, 0);
  expect(test.screen8.timer2, 0);
  expect(test.screen8.timer3, 0);
  expect(test.screen8.dsp_flg1, 0);
  expect(test.screen8.dsp_flg2, 0);
  expect(test.screen8.movie01_ext, 0);
  expect(test.screen8.movie02_ext, 0);
  expect(test.screen8.movie03_ext, 0);
  expect(test.screen8.movie04_ext, 0);
  expect(test.screen8.line_title, "");
  expect(test.screen8.line_title_ex, "");
  expect(test.screen8.line1, "");
  expect(test.screen8.line2, "");
  expect(test.screen8.line3, "");
  expect(test.screen8.line4, "");
  expect(test.screen8.line1_ex, "");
  expect(test.screen8.line2_ex, "");
  expect(test.screen8.line3_ex, "");
  expect(test.screen8.line4_ex, "");
  expect(test.screen8.sound_led1, 0);
  expect(test.screen8.sound_led2, 0);
  expect(test.screen8.sound_led3, 0);
  expect(test.screen9.title, "");
  expect(test.screen9.msg1, "");
  expect(test.screen9.msg2, "");
  expect(test.screen9.msg1_size, 0);
  expect(test.screen9.msg2_size, 0);
  expect(test.screen9.sound1, 0);
  expect(test.screen9.sound2, 0);
  expect(test.screen9.sound3, 0);
  expect(test.screen9.snd_timer, 0);
  expect(test.screen9.timer1, 0);
  expect(test.screen9.timer2, 0);
  expect(test.screen9.timer3, 0);
  expect(test.screen9.dsp_flg1, 0);
  expect(test.screen9.dsp_flg2, 0);
  expect(test.screen9.movie01_ext, 0);
  expect(test.screen9.movie02_ext, 0);
  expect(test.screen9.movie03_ext, 0);
  expect(test.screen9.movie04_ext, 0);
  expect(test.screen9.line_title, "");
  expect(test.screen9.line_title_ex, "");
  expect(test.screen9.line1, "");
  expect(test.screen9.line2, "");
  expect(test.screen9.line3, "");
  expect(test.screen9.line4, "");
  expect(test.screen9.line1_ex, "");
  expect(test.screen9.line2_ex, "");
  expect(test.screen9.line3_ex, "");
  expect(test.screen9.line4_ex, "");
  expect(test.screen9.sound_led1, 0);
  expect(test.screen9.sound_led2, 0);
  expect(test.screen9.sound_led3, 0);
  expect(test.screen10.title, "");
  expect(test.screen10.msg1, "");
  expect(test.screen10.msg2, "");
  expect(test.screen10.msg1_size, 0);
  expect(test.screen10.msg2_size, 0);
  expect(test.screen10.sound1, 0);
  expect(test.screen10.sound2, 0);
  expect(test.screen10.sound3, 0);
  expect(test.screen10.snd_timer, 0);
  expect(test.screen10.timer1, 0);
  expect(test.screen10.timer2, 0);
  expect(test.screen10.timer3, 0);
  expect(test.screen10.dsp_flg1, 0);
  expect(test.screen10.dsp_flg2, 0);
  expect(test.screen10.movie01_ext, 0);
  expect(test.screen10.movie02_ext, 0);
  expect(test.screen10.movie03_ext, 0);
  expect(test.screen10.movie04_ext, 0);
  expect(test.screen10.line_title, "");
  expect(test.screen10.line_title_ex, "");
  expect(test.screen10.line1, "");
  expect(test.screen10.line2, "");
  expect(test.screen10.line3, "");
  expect(test.screen10.line4, "");
  expect(test.screen10.line1_ex, "");
  expect(test.screen10.line2_ex, "");
  expect(test.screen10.line3_ex, "");
  expect(test.screen10.line4_ex, "");
  expect(test.screen10.sound_led1, 0);
  expect(test.screen10.sound_led2, 0);
  expect(test.screen10.sound_led3, 0);
  expect(test.screen11.title, "");
  expect(test.screen11.msg1, "");
  expect(test.screen11.msg2, "");
  expect(test.screen11.msg1_size, 0);
  expect(test.screen11.msg2_size, 0);
  expect(test.screen11.sound1, 0);
  expect(test.screen11.sound2, 0);
  expect(test.screen11.sound3, 0);
  expect(test.screen11.snd_timer, 0);
  expect(test.screen11.timer1, 0);
  expect(test.screen11.timer2, 0);
  expect(test.screen11.timer3, 0);
  expect(test.screen11.dsp_flg1, 0);
  expect(test.screen11.dsp_flg2, 0);
  expect(test.screen11.movie01_ext, 0);
  expect(test.screen11.movie02_ext, 0);
  expect(test.screen11.movie03_ext, 0);
  expect(test.screen11.movie04_ext, 0);
  expect(test.screen11.line_title, "");
  expect(test.screen11.line_title_ex, "");
  expect(test.screen11.line1, "");
  expect(test.screen11.line2, "");
  expect(test.screen11.line3, "");
  expect(test.screen11.line4, "");
  expect(test.screen11.line1_ex, "");
  expect(test.screen11.line2_ex, "");
  expect(test.screen11.line3_ex, "");
  expect(test.screen11.line4_ex, "");
  expect(test.screen11.sound_led1, 0);
  expect(test.screen11.sound_led2, 0);
  expect(test.screen11.sound_led3, 0);
  expect(test.screen12.title, "");
  expect(test.screen12.msg1, "");
  expect(test.screen12.msg2, "");
  expect(test.screen12.msg1_size, 0);
  expect(test.screen12.msg2_size, 0);
  expect(test.screen12.sound1, 0);
  expect(test.screen12.sound2, 0);
  expect(test.screen12.sound3, 0);
  expect(test.screen12.snd_timer, 0);
  expect(test.screen12.timer1, 0);
  expect(test.screen12.timer2, 0);
  expect(test.screen12.timer3, 0);
  expect(test.screen12.dsp_flg1, 0);
  expect(test.screen12.dsp_flg2, 0);
  expect(test.screen12.movie01_ext, 0);
  expect(test.screen12.movie02_ext, 0);
  expect(test.screen12.movie03_ext, 0);
  expect(test.screen12.movie04_ext, 0);
  expect(test.screen12.line_title, "");
  expect(test.screen12.line_title_ex, "");
  expect(test.screen12.line1, "");
  expect(test.screen12.line2, "");
  expect(test.screen12.line3, "");
  expect(test.screen12.line4, "");
  expect(test.screen12.line1_ex, "");
  expect(test.screen12.line2_ex, "");
  expect(test.screen12.line3_ex, "");
  expect(test.screen12.line4_ex, "");
  expect(test.screen12.sound_led1, 0);
  expect(test.screen12.sound_led2, 0);
  expect(test.screen12.sound_led3, 0);
  expect(test.screen13.title, "");
  expect(test.screen13.msg1, "");
  expect(test.screen13.msg2, "");
  expect(test.screen13.msg1_size, 0);
  expect(test.screen13.msg2_size, 0);
  expect(test.screen13.sound1, 0);
  expect(test.screen13.sound2, 0);
  expect(test.screen13.sound3, 0);
  expect(test.screen13.snd_timer, 0);
  expect(test.screen13.timer1, 0);
  expect(test.screen13.timer2, 0);
  expect(test.screen13.timer3, 0);
  expect(test.screen13.dsp_flg1, 0);
  expect(test.screen13.dsp_flg2, 0);
  expect(test.screen13.movie01_ext, 0);
  expect(test.screen13.movie02_ext, 0);
  expect(test.screen13.movie03_ext, 0);
  expect(test.screen13.movie04_ext, 0);
  expect(test.screen13.line_title, "");
  expect(test.screen13.line_title_ex, "");
  expect(test.screen13.line1, "");
  expect(test.screen13.line2, "");
  expect(test.screen13.line3, "");
  expect(test.screen13.line4, "");
  expect(test.screen13.line1_ex, "");
  expect(test.screen13.line2_ex, "");
  expect(test.screen13.line3_ex, "");
  expect(test.screen13.line4_ex, "");
  expect(test.screen13.sound_led1, 0);
  expect(test.screen13.sound_led2, 0);
  expect(test.screen13.sound_led3, 0);
  expect(test.screen14.title, "");
  expect(test.screen14.msg1, "");
  expect(test.screen14.msg2, "");
  expect(test.screen14.msg1_size, 0);
  expect(test.screen14.msg2_size, 0);
  expect(test.screen14.sound1, 0);
  expect(test.screen14.sound2, 0);
  expect(test.screen14.sound3, 0);
  expect(test.screen14.snd_timer, 0);
  expect(test.screen14.timer1, 0);
  expect(test.screen14.timer2, 0);
  expect(test.screen14.timer3, 0);
  expect(test.screen14.dsp_flg1, 0);
  expect(test.screen14.dsp_flg2, 0);
  expect(test.screen14.movie01_ext, 0);
  expect(test.screen14.movie02_ext, 0);
  expect(test.screen14.movie03_ext, 0);
  expect(test.screen14.movie04_ext, 0);
  expect(test.screen14.line_title, "");
  expect(test.screen14.line_title_ex, "");
  expect(test.screen14.line1, "");
  expect(test.screen14.line2, "");
  expect(test.screen14.line3, "");
  expect(test.screen14.line4, "");
  expect(test.screen14.line1_ex, "");
  expect(test.screen14.line2_ex, "");
  expect(test.screen14.line3_ex, "");
  expect(test.screen14.line4_ex, "");
  expect(test.screen14.sound_led1, 0);
  expect(test.screen14.sound_led2, 0);
  expect(test.screen14.sound_led3, 0);
  expect(test.screen15.title, "");
  expect(test.screen15.msg1, "");
  expect(test.screen15.msg2, "");
  expect(test.screen15.msg1_size, 0);
  expect(test.screen15.msg2_size, 0);
  expect(test.screen15.sound1, 0);
  expect(test.screen15.sound2, 0);
  expect(test.screen15.sound3, 0);
  expect(test.screen15.snd_timer, 0);
  expect(test.screen15.timer1, 0);
  expect(test.screen15.timer2, 0);
  expect(test.screen15.timer3, 0);
  expect(test.screen15.dsp_flg1, 0);
  expect(test.screen15.dsp_flg2, 0);
  expect(test.screen15.movie01_ext, 0);
  expect(test.screen15.movie02_ext, 0);
  expect(test.screen15.movie03_ext, 0);
  expect(test.screen15.movie04_ext, 0);
  expect(test.screen15.line_title, "");
  expect(test.screen15.line_title_ex, "");
  expect(test.screen15.line1, "");
  expect(test.screen15.line2, "");
  expect(test.screen15.line3, "");
  expect(test.screen15.line4, "");
  expect(test.screen15.line1_ex, "");
  expect(test.screen15.line2_ex, "");
  expect(test.screen15.line3_ex, "");
  expect(test.screen15.line4_ex, "");
  expect(test.screen15.sound_led1, 0);
  expect(test.screen15.sound_led2, 0);
  expect(test.screen15.sound_led3, 0);
  expect(test.screen16.title, "");
  expect(test.screen16.msg1, "");
  expect(test.screen16.msg2, "");
  expect(test.screen16.msg1_size, 0);
  expect(test.screen16.msg2_size, 0);
  expect(test.screen16.sound1, 0);
  expect(test.screen16.sound2, "");
  expect(test.screen16.sound3, "");
  expect(test.screen16.snd_timer, 0);
  expect(test.screen16.timer1, 0);
  expect(test.screen16.timer2, 0);
  expect(test.screen16.timer3, 0);
  expect(test.screen16.dsp_flg1, 0);
  expect(test.screen16.dsp_flg2, 0);
  expect(test.screen16.movie01_ext, 0);
  expect(test.screen16.movie02_ext, 0);
  expect(test.screen16.movie03_ext, 0);
  expect(test.screen16.movie04_ext, 0);
  expect(test.screen16.line_title, "");
  expect(test.screen16.line_title_ex, "");
  expect(test.screen16.line1, "");
  expect(test.screen16.line2, "");
  expect(test.screen16.line3, "");
  expect(test.screen16.line4, "");
  expect(test.screen16.line1_ex, "");
  expect(test.screen16.line2_ex, "");
  expect(test.screen16.line3_ex, "");
  expect(test.screen16.line4_ex, "");
  expect(test.screen16.sound_led1, 0);
  expect(test.screen16.sound_led2, "");
  expect(test.screen16.sound_led3, "");
  expect(test.screen16.msg_max, 0);
  expect(test.screen16.line2_1, "");
  expect(test.screen16.line2_2, "");
  expect(test.screen16.line2_3, "");
  expect(test.screen16.line2_4, "");
  expect(test.screen16.line2_1_ex, "");
  expect(test.screen16.line2_2_ex, "");
  expect(test.screen16.line2_3_ex, "");
  expect(test.screen16.line2_4_ex, "");
  expect(test.screen17.title, "");
  expect(test.screen17.msg1, "");
  expect(test.screen17.msg2, "");
  expect(test.screen17.msg1_size, 0);
  expect(test.screen17.msg2_size, 0);
  expect(test.screen17.sound1, 0);
  expect(test.screen17.sound2, 0);
  expect(test.screen17.sound3, 0);
  expect(test.screen17.snd_timer, 0);
  expect(test.screen17.timer1, 0);
  expect(test.screen17.timer2, 0);
  expect(test.screen17.timer3, 0);
  expect(test.screen17.dsp_flg1, 0);
  expect(test.screen17.dsp_flg2, 0);
  expect(test.screen17.movie01_ext, 0);
  expect(test.screen17.movie02_ext, 0);
  expect(test.screen17.movie03_ext, 0);
  expect(test.screen17.movie04_ext, 0);
  expect(test.screen17.line_title, "");
  expect(test.screen17.line_title_ex, "");
  expect(test.screen17.line1, "");
  expect(test.screen17.line2, "");
  expect(test.screen17.line3, "");
  expect(test.screen17.line4, "");
  expect(test.screen17.line1_ex, "");
  expect(test.screen17.line2_ex, "");
  expect(test.screen17.line3_ex, "");
  expect(test.screen17.line4_ex, "");
  expect(test.screen17.sound_led1, 0);
  expect(test.screen17.sound_led2, 0);
  expect(test.screen17.sound_led3, 0);
  expect(test.screen18.title, "");
  expect(test.screen18.msg1, "");
  expect(test.screen18.msg2, "");
  expect(test.screen18.msg1_size, 0);
  expect(test.screen18.msg2_size, 0);
  expect(test.screen18.sound1, 0);
  expect(test.screen18.sound2, 0);
  expect(test.screen18.sound3, 0);
  expect(test.screen18.snd_timer, 0);
  expect(test.screen18.timer1, 0);
  expect(test.screen18.timer2, 0);
  expect(test.screen18.timer3, 0);
  expect(test.screen18.dsp_flg1, 0);
  expect(test.screen18.dsp_flg2, 0);
  expect(test.screen18.movie01_ext, 0);
  expect(test.screen18.movie02_ext, 0);
  expect(test.screen18.movie03_ext, 0);
  expect(test.screen18.movie04_ext, 0);
  expect(test.screen18.line_title, "");
  expect(test.screen18.line_title_ex, "");
  expect(test.screen18.line1, "");
  expect(test.screen18.line2, "");
  expect(test.screen18.line3, "");
  expect(test.screen18.line4, "");
  expect(test.screen18.line1_ex, "");
  expect(test.screen18.line2_ex, "");
  expect(test.screen18.line3_ex, "");
  expect(test.screen18.line4_ex, "");
  expect(test.screen18.sound_led1, 0);
  expect(test.screen18.sound_led2, 0);
  expect(test.screen18.sound_led3, 0);
  expect(test.screen19.title, "");
  expect(test.screen19.msg1, "");
  expect(test.screen19.msg2, "");
  expect(test.screen19.msg1_size, 0);
  expect(test.screen19.msg2_size, 0);
  expect(test.screen19.sound1, 0);
  expect(test.screen19.sound2, "");
  expect(test.screen19.sound3, "");
  expect(test.screen19.snd_timer, 0);
  expect(test.screen19.timer1, 0);
  expect(test.screen19.timer2, 0);
  expect(test.screen19.timer3, 0);
  expect(test.screen19.dsp_flg1, 0);
  expect(test.screen19.dsp_flg2, 0);
  expect(test.screen19.movie01_ext, 0);
  expect(test.screen19.movie02_ext, 0);
  expect(test.screen19.movie03_ext, 0);
  expect(test.screen19.movie04_ext, 0);
  expect(test.screen19.line_title, "");
  expect(test.screen19.line_title_ex, "");
  expect(test.screen19.line1, "");
  expect(test.screen19.line2, "");
  expect(test.screen19.line3, "");
  expect(test.screen19.line4, "");
  expect(test.screen19.line1_ex, "");
  expect(test.screen19.line2_ex, "");
  expect(test.screen19.line3_ex, "");
  expect(test.screen19.line4_ex, "");
  expect(test.screen19.sound_led1, 0);
  expect(test.screen19.sound_led2, "");
  expect(test.screen19.sound_led3, "");
  expect(test.screen20.title, "");
  expect(test.screen20.msg1, "");
  expect(test.screen20.msg2, "");
  expect(test.screen20.msg1_size, 0);
  expect(test.screen20.msg2_size, 0);
  expect(test.screen20.sound1, 0);
  expect(test.screen20.sound2, 0);
  expect(test.screen20.sound3, 0);
  expect(test.screen20.snd_timer, 0);
  expect(test.screen20.timer1, 0);
  expect(test.screen20.timer2, 0);
  expect(test.screen20.timer3, 0);
  expect(test.screen20.dsp_flg1, 0);
  expect(test.screen20.dsp_flg2, 0);
  expect(test.screen20.movie01_ext, 0);
  expect(test.screen20.movie02_ext, 0);
  expect(test.screen20.movie03_ext, 0);
  expect(test.screen20.movie04_ext, 0);
  expect(test.screen20.line_title, "");
  expect(test.screen20.line_title_ex, "");
  expect(test.screen20.line1, "");
  expect(test.screen20.line2, "");
  expect(test.screen20.line3, "");
  expect(test.screen20.line4, "");
  expect(test.screen20.line1_ex, "");
  expect(test.screen20.line2_ex, "");
  expect(test.screen20.line3_ex, "");
  expect(test.screen20.line4_ex, "");
  expect(test.screen20.sound_led1, 0);
  expect(test.screen20.sound_led2, 0);
  expect(test.screen20.sound_led3, 0);
  expect(test.screen21.title, "");
  expect(test.screen21.msg1, "");
  expect(test.screen21.msg2, "");
  expect(test.screen21.msg1_size, 0);
  expect(test.screen21.msg2_size, 0);
  expect(test.screen21.sound1, 0);
  expect(test.screen21.sound2, 0);
  expect(test.screen21.sound3, 0);
  expect(test.screen21.snd_timer, 0);
  expect(test.screen21.timer1, 0);
  expect(test.screen21.timer2, 0);
  expect(test.screen21.timer3, 0);
  expect(test.screen21.dsp_flg1, 0);
  expect(test.screen21.dsp_flg2, 0);
  expect(test.screen21.movie01_ext, 0);
  expect(test.screen21.movie02_ext, 0);
  expect(test.screen21.movie03_ext, 0);
  expect(test.screen21.movie04_ext, 0);
  expect(test.screen21.line_title, "");
  expect(test.screen21.line_title_ex, "");
  expect(test.screen21.line1, "");
  expect(test.screen21.line2, "");
  expect(test.screen21.line3, "");
  expect(test.screen21.line4, "");
  expect(test.screen21.line1_ex, "");
  expect(test.screen21.line2_ex, "");
  expect(test.screen21.line3_ex, "");
  expect(test.screen21.line4_ex, "");
  expect(test.screen21.sound_led1, 0);
  expect(test.screen21.sound_led2, 0);
  expect(test.screen21.sound_led3, 0);
  expect(test.screen22.title, "");
  expect(test.screen22.msg1, "");
  expect(test.screen22.msg2, "");
  expect(test.screen22.msg1_size, 0);
  expect(test.screen22.msg2_size, 0);
  expect(test.screen22.sound1, 0);
  expect(test.screen22.sound2, 0);
  expect(test.screen22.sound3, 0);
  expect(test.screen22.snd_timer, 0);
  expect(test.screen22.timer1, 0);
  expect(test.screen22.timer2, 0);
  expect(test.screen22.timer3, 0);
  expect(test.screen22.dsp_flg1, 0);
  expect(test.screen22.dsp_flg2, 0);
  expect(test.screen22.movie01_ext, 0);
  expect(test.screen22.movie02_ext, 0);
  expect(test.screen22.movie03_ext, 0);
  expect(test.screen22.movie04_ext, 0);
  expect(test.screen22.line_title, "");
  expect(test.screen22.line_title_ex, "");
  expect(test.screen22.line1, "");
  expect(test.screen22.line2, "");
  expect(test.screen22.line3, "");
  expect(test.screen22.line4, "");
  expect(test.screen22.line1_ex, "");
  expect(test.screen22.line2_ex, "");
  expect(test.screen22.line3_ex, "");
  expect(test.screen22.line4_ex, "");
  expect(test.screen22.sound_led1, 0);
  expect(test.screen22.sound_led2, 0);
  expect(test.screen22.sound_led3, 0);
  expect(test.screen23.title, "");
  expect(test.screen23.msg1, "");
  expect(test.screen23.msg2, "");
  expect(test.screen23.msg1_size, 0);
  expect(test.screen23.msg2_size, 0);
  expect(test.screen23.sound1, 0);
  expect(test.screen23.sound2, 0);
  expect(test.screen23.sound3, 0);
  expect(test.screen23.snd_timer, 0);
  expect(test.screen23.timer1, 0);
  expect(test.screen23.timer2, 0);
  expect(test.screen23.timer3, 0);
  expect(test.screen23.dsp_flg1, 0);
  expect(test.screen23.dsp_flg2, 0);
  expect(test.screen23.movie01_ext, 0);
  expect(test.screen23.movie02_ext, 0);
  expect(test.screen23.movie03_ext, 0);
  expect(test.screen23.movie04_ext, 0);
  expect(test.screen23.line_title, "");
  expect(test.screen23.line_title_ex, "");
  expect(test.screen23.line1, "");
  expect(test.screen23.line2, "");
  expect(test.screen23.line3, "");
  expect(test.screen23.line4, "");
  expect(test.screen23.line1_ex, "");
  expect(test.screen23.line2_ex, "");
  expect(test.screen23.line3_ex, "");
  expect(test.screen23.line4_ex, "");
  expect(test.screen23.sound_led1, 0);
  expect(test.screen23.sound_led2, 0);
  expect(test.screen23.sound_led3, 0);
  expect(test.screen24.title, "");
  expect(test.screen24.msg1, "");
  expect(test.screen24.msg2, "");
  expect(test.screen24.msg1_size, 0);
  expect(test.screen24.msg2_size, 0);
  expect(test.screen24.sound1, 0);
  expect(test.screen24.sound2, 0);
  expect(test.screen24.sound3, 0);
  expect(test.screen24.snd_timer, 0);
  expect(test.screen24.timer1, 0);
  expect(test.screen24.timer2, 0);
  expect(test.screen24.timer3, 0);
  expect(test.screen24.dsp_flg1, 0);
  expect(test.screen24.dsp_flg2, 0);
  expect(test.screen24.movie01_ext, 0);
  expect(test.screen24.movie02_ext, 0);
  expect(test.screen24.movie03_ext, 0);
  expect(test.screen24.movie04_ext, 0);
  expect(test.screen24.line_title, "");
  expect(test.screen24.line_title_ex, "");
  expect(test.screen24.line1, "");
  expect(test.screen24.line2, "");
  expect(test.screen24.line3, "");
  expect(test.screen24.line4, "");
  expect(test.screen24.line1_ex, "");
  expect(test.screen24.line2_ex, "");
  expect(test.screen24.line3_ex, "");
  expect(test.screen24.line4_ex, "");
  expect(test.screen24.sound_led1, 0);
  expect(test.screen24.sound_led2, 0);
  expect(test.screen24.sound_led3, 0);
  expect(test.screen25.title, "");
  expect(test.screen25.msg1, "");
  expect(test.screen25.msg2, "");
  expect(test.screen25.msg1_size, 0);
  expect(test.screen25.msg2_size, 0);
  expect(test.screen25.sound1, 0);
  expect(test.screen25.sound2, 0);
  expect(test.screen25.sound3, 0);
  expect(test.screen25.snd_timer, 0);
  expect(test.screen25.timer1, 0);
  expect(test.screen25.timer2, 0);
  expect(test.screen25.timer3, 0);
  expect(test.screen25.dsp_flg1, 0);
  expect(test.screen25.dsp_flg2, 0);
  expect(test.screen25.movie01_ext, 0);
  expect(test.screen25.movie02_ext, 0);
  expect(test.screen25.movie03_ext, 0);
  expect(test.screen25.movie04_ext, 0);
  expect(test.screen25.line_title, "");
  expect(test.screen25.line_title_ex, "");
  expect(test.screen25.line1, "");
  expect(test.screen25.line2, "");
  expect(test.screen25.line3, "");
  expect(test.screen25.line4, "");
  expect(test.screen25.line1_ex, "");
  expect(test.screen25.line2_ex, "");
  expect(test.screen25.line3_ex, "");
  expect(test.screen25.line4_ex, "");
  expect(test.screen25.sound_led1, 0);
  expect(test.screen25.sound_led2, 0);
  expect(test.screen25.sound_led3, 0);
  expect(test.screen26.title, "");
  expect(test.screen26.msg1, "");
  expect(test.screen26.msg2, "");
  expect(test.screen26.msg1_size, 0);
  expect(test.screen26.msg2_size, 0);
  expect(test.screen26.sound1, 0);
  expect(test.screen26.sound2, "");
  expect(test.screen26.sound3, "");
  expect(test.screen26.snd_timer, 0);
  expect(test.screen26.timer1, 0);
  expect(test.screen26.timer2, 0);
  expect(test.screen26.timer3, 0);
  expect(test.screen26.dsp_flg1, 0);
  expect(test.screen26.dsp_flg2, 0);
  expect(test.screen26.movie01_ext, 0);
  expect(test.screen26.movie02_ext, 0);
  expect(test.screen26.movie03_ext, 0);
  expect(test.screen26.movie04_ext, 0);
  expect(test.screen26.line_title, "");
  expect(test.screen26.line_title_ex, "");
  expect(test.screen26.line1, "");
  expect(test.screen26.line2, "");
  expect(test.screen26.line3, "");
  expect(test.screen26.line4, "");
  expect(test.screen26.line1_ex, "");
  expect(test.screen26.line2_ex, "");
  expect(test.screen26.line3_ex, "");
  expect(test.screen26.line4_ex, "");
  expect(test.screen26.sound_led1, 0);
  expect(test.screen26.sound_led2, "");
  expect(test.screen26.sound_led3, "");
  expect(test.screen27.title, "");
  expect(test.screen27.msg1, "");
  expect(test.screen27.msg2, "");
  expect(test.screen27.msg1_size, 0);
  expect(test.screen27.msg2_size, 0);
  expect(test.screen27.sound1, 0);
  expect(test.screen27.sound2, 0);
  expect(test.screen27.sound3, 0);
  expect(test.screen27.snd_timer, 0);
  expect(test.screen27.timer1, 0);
  expect(test.screen27.timer2, 0);
  expect(test.screen27.timer3, 0);
  expect(test.screen27.dsp_flg1, 0);
  expect(test.screen27.dsp_flg2, 0);
  expect(test.screen27.movie01_ext, 0);
  expect(test.screen27.movie02_ext, 0);
  expect(test.screen27.movie03_ext, 0);
  expect(test.screen27.movie04_ext, 0);
  expect(test.screen27.line_title, "");
  expect(test.screen27.line_title_ex, "");
  expect(test.screen27.line1, "");
  expect(test.screen27.line2, "");
  expect(test.screen27.line3, "");
  expect(test.screen27.line4, "");
  expect(test.screen27.line1_ex, "");
  expect(test.screen27.line2_ex, "");
  expect(test.screen27.line3_ex, "");
  expect(test.screen27.line4_ex, "");
  expect(test.screen27.sound_led1, 0);
  expect(test.screen27.sound_led2, 0);
  expect(test.screen27.sound_led3, 0);
  expect(test.screen28.title, "");
  expect(test.screen28.msg1, "");
  expect(test.screen28.msg2, "");
  expect(test.screen28.msg1_size, 0);
  expect(test.screen28.msg2_size, 0);
  expect(test.screen28.sound1, 0);
  expect(test.screen28.sound2, 0);
  expect(test.screen28.sound3, 0);
  expect(test.screen28.snd_timer, 0);
  expect(test.screen28.timer1, 0);
  expect(test.screen28.timer2, 0);
  expect(test.screen28.timer3, 0);
  expect(test.screen28.dsp_flg1, 0);
  expect(test.screen28.dsp_flg2, 0);
  expect(test.screen28.movie01_ext, 0);
  expect(test.screen28.movie02_ext, 0);
  expect(test.screen28.movie03_ext, 0);
  expect(test.screen28.movie04_ext, 0);
  expect(test.screen28.line_title, "");
  expect(test.screen28.line_title_ex, "");
  expect(test.screen28.line1, "");
  expect(test.screen28.line2, "");
  expect(test.screen28.line3, "");
  expect(test.screen28.line4, "");
  expect(test.screen28.line1_ex, "");
  expect(test.screen28.line2_ex, "");
  expect(test.screen28.line3_ex, "");
  expect(test.screen28.line4_ex, "");
  expect(test.screen28.sound_led1, 0);
  expect(test.screen28.sound_led2, 0);
  expect(test.screen28.sound_led3, 0);
  expect(test.screen29.title, "");
  expect(test.screen29.msg1, "");
  expect(test.screen29.msg2, "");
  expect(test.screen29.msg1_size, 0);
  expect(test.screen29.msg2_size, 0);
  expect(test.screen29.sound1, 0);
  expect(test.screen29.sound2, 0);
  expect(test.screen29.sound3, 0);
  expect(test.screen29.snd_timer, 0);
  expect(test.screen29.timer1, 0);
  expect(test.screen29.timer2, 0);
  expect(test.screen29.timer3, 0);
  expect(test.screen29.dsp_flg1, 0);
  expect(test.screen29.dsp_flg2, 0);
  expect(test.screen29.movie01_ext, 0);
  expect(test.screen29.movie02_ext, 0);
  expect(test.screen29.movie03_ext, 0);
  expect(test.screen29.movie04_ext, 0);
  expect(test.screen29.line_title, "");
  expect(test.screen29.line_title_ex, "");
  expect(test.screen29.line1, "");
  expect(test.screen29.line2, "");
  expect(test.screen29.line3, "");
  expect(test.screen29.line4, "");
  expect(test.screen29.line1_ex, "");
  expect(test.screen29.line2_ex, "");
  expect(test.screen29.line3_ex, "");
  expect(test.screen29.line4_ex, "");
  expect(test.screen29.sound_led1, 0);
  expect(test.screen29.sound_led2, 0);
  expect(test.screen29.sound_led3, 0);
  expect(test.screen30.title, "");
  expect(test.screen30.msg1, "");
  expect(test.screen30.msg2, "");
  expect(test.screen30.msg1_size, 0);
  expect(test.screen30.msg2_size, 0);
  expect(test.screen30.sound1, 0);
  expect(test.screen30.sound2, 0);
  expect(test.screen30.sound3, 0);
  expect(test.screen30.snd_timer, 0);
  expect(test.screen30.timer1, 0);
  expect(test.screen30.timer2, 0);
  expect(test.screen30.timer3, 0);
  expect(test.screen30.dsp_flg1, 0);
  expect(test.screen30.dsp_flg2, 0);
  expect(test.screen30.movie01_ext, 0);
  expect(test.screen30.movie02_ext, 0);
  expect(test.screen30.movie03_ext, 0);
  expect(test.screen30.movie04_ext, 0);
  expect(test.screen30.line_title, "");
  expect(test.screen30.line_title_ex, "");
  expect(test.screen30.line1, "");
  expect(test.screen30.line2, "");
  expect(test.screen30.line3, "");
  expect(test.screen30.line4, "");
  expect(test.screen30.line1_ex, "");
  expect(test.screen30.line2_ex, "");
  expect(test.screen30.line3_ex, "");
  expect(test.screen30.line4_ex, "");
  expect(test.screen30.sound_led1, 0);
  expect(test.screen30.sound_led2, 0);
  expect(test.screen30.sound_led3, 0);
  expect(test.screen31.title, "");
  expect(test.screen31.msg1, "");
  expect(test.screen31.msg2, "");
  expect(test.screen31.msg1_size, 0);
  expect(test.screen31.msg2_size, 0);
  expect(test.screen31.sound1, 0);
  expect(test.screen31.sound2, 0);
  expect(test.screen31.sound3, 0);
  expect(test.screen31.snd_timer, 0);
  expect(test.screen31.timer1, 0);
  expect(test.screen31.timer2, 0);
  expect(test.screen31.timer3, 0);
  expect(test.screen31.dsp_flg1, 0);
  expect(test.screen31.dsp_flg2, 0);
  expect(test.screen31.movie01_ext, 0);
  expect(test.screen31.movie02_ext, 0);
  expect(test.screen31.movie03_ext, 0);
  expect(test.screen31.movie04_ext, 0);
  expect(test.screen31.line_title, "");
  expect(test.screen31.line_title_ex, "");
  expect(test.screen31.line1, "");
  expect(test.screen31.line2, "");
  expect(test.screen31.line3, "");
  expect(test.screen31.line4, "");
  expect(test.screen31.line1_ex, "");
  expect(test.screen31.line2_ex, "");
  expect(test.screen31.line3_ex, "");
  expect(test.screen31.line4_ex, "");
  expect(test.screen31.sound_led1, 0);
  expect(test.screen31.sound_led2, 0);
  expect(test.screen31.sound_led3, 0);
  expect(test.screen32.title, "");
  expect(test.screen32.msg1, "");
  expect(test.screen32.msg2, "");
  expect(test.screen32.msg1_size, 0);
  expect(test.screen32.msg2_size, 0);
  expect(test.screen32.sound1, 0);
  expect(test.screen32.sound2, 0);
  expect(test.screen32.sound3, 0);
  expect(test.screen32.snd_timer, 0);
  expect(test.screen32.timer1, 0);
  expect(test.screen32.timer2, 0);
  expect(test.screen32.timer3, 0);
  expect(test.screen32.dsp_flg1, 0);
  expect(test.screen32.dsp_flg2, 0);
  expect(test.screen32.movie01_ext, 0);
  expect(test.screen32.movie02_ext, 0);
  expect(test.screen32.movie03_ext, 0);
  expect(test.screen32.movie04_ext, 0);
  expect(test.screen32.line_title, "");
  expect(test.screen32.line_title_ex, "");
  expect(test.screen32.line1, "");
  expect(test.screen32.line2, "");
  expect(test.screen32.line3, "");
  expect(test.screen32.line4, "");
  expect(test.screen32.line1_ex, "");
  expect(test.screen32.line2_ex, "");
  expect(test.screen32.line3_ex, "");
  expect(test.screen32.line4_ex, "");
  expect(test.screen32.sound_led1, 0);
  expect(test.screen32.sound_led2, 0);
  expect(test.screen32.sound_led3, 0);
  expect(test.screen33.title, "");
  expect(test.screen33.msg1, "");
  expect(test.screen33.msg2, "");
  expect(test.screen33.msg1_size, 0);
  expect(test.screen33.msg2_size, 0);
  expect(test.screen33.sound1, 0);
  expect(test.screen33.sound2, 0);
  expect(test.screen33.sound3, 0);
  expect(test.screen33.snd_timer, 0);
  expect(test.screen33.timer1, 0);
  expect(test.screen33.timer2, 0);
  expect(test.screen33.timer3, 0);
  expect(test.screen33.dsp_flg1, 0);
  expect(test.screen33.dsp_flg2, 0);
  expect(test.screen33.movie01_ext, 0);
  expect(test.screen33.movie02_ext, 0);
  expect(test.screen33.movie03_ext, 0);
  expect(test.screen33.movie04_ext, 0);
  expect(test.screen33.line_title, "");
  expect(test.screen33.line_title_ex, "");
  expect(test.screen33.line1, "");
  expect(test.screen33.line2, "");
  expect(test.screen33.line3, "");
  expect(test.screen33.line4, "");
  expect(test.screen33.line1_ex, "");
  expect(test.screen33.line2_ex, "");
  expect(test.screen33.line3_ex, "");
  expect(test.screen33.line4_ex, "");
  expect(test.screen33.sound_led1, 0);
  expect(test.screen33.sound_led2, 0);
  expect(test.screen33.sound_led3, 0);
  expect(test.screen34.title, "");
  expect(test.screen34.msg1, "");
  expect(test.screen34.msg2, "");
  expect(test.screen34.msg1_size, 0);
  expect(test.screen34.msg2_size, 0);
  expect(test.screen34.sound1, 0);
  expect(test.screen34.sound2, 0);
  expect(test.screen34.sound3, 0);
  expect(test.screen34.snd_timer, 0);
  expect(test.screen34.timer1, 0);
  expect(test.screen34.timer2, 0);
  expect(test.screen34.timer3, 0);
  expect(test.screen34.dsp_flg1, 0);
  expect(test.screen34.dsp_flg2, 0);
  expect(test.screen34.movie01_ext, 0);
  expect(test.screen34.movie02_ext, 0);
  expect(test.screen34.movie03_ext, 0);
  expect(test.screen34.movie04_ext, 0);
  expect(test.screen34.line_title, "");
  expect(test.screen34.line_title_ex, "");
  expect(test.screen34.line1, "");
  expect(test.screen34.line2, "");
  expect(test.screen34.line3, "");
  expect(test.screen34.line4, "");
  expect(test.screen34.line1_ex, "");
  expect(test.screen34.line2_ex, "");
  expect(test.screen34.line3_ex, "");
  expect(test.screen34.line4_ex, "");
  expect(test.screen34.sound_led1, 0);
  expect(test.screen34.sound_led2, 0);
  expect(test.screen34.sound_led3, 0);
  expect(test.screen35.title, "");
  expect(test.screen35.msg1, "");
  expect(test.screen35.msg2, "");
  expect(test.screen35.msg1_size, 0);
  expect(test.screen35.msg2_size, 0);
  expect(test.screen35.sound1, 0);
  expect(test.screen35.sound2, 0);
  expect(test.screen35.sound3, 0);
  expect(test.screen35.snd_timer, 0);
  expect(test.screen35.timer1, 0);
  expect(test.screen35.timer2, 0);
  expect(test.screen35.timer3, 0);
  expect(test.screen35.dsp_flg1, 0);
  expect(test.screen35.dsp_flg2, 0);
  expect(test.screen35.movie01_ext, 0);
  expect(test.screen35.movie02_ext, 0);
  expect(test.screen35.movie03_ext, 0);
  expect(test.screen35.movie04_ext, 0);
  expect(test.screen35.line_title, "");
  expect(test.screen35.line_title_ex, "");
  expect(test.screen35.line1, "");
  expect(test.screen35.line2, "");
  expect(test.screen35.line3, "");
  expect(test.screen35.line4, "");
  expect(test.screen35.line1_ex, "");
  expect(test.screen35.line2_ex, "");
  expect(test.screen35.line3_ex, "");
  expect(test.screen35.line4_ex, "");
  expect(test.screen35.sound_led1, 0);
  expect(test.screen35.sound_led2, 0);
  expect(test.screen35.sound_led3, 0);
  expect(test.screen36.title, "");
  expect(test.screen36.msg1, "");
  expect(test.screen36.msg2, "");
  expect(test.screen36.msg1_size, 0);
  expect(test.screen36.msg2_size, 0);
  expect(test.screen36.sound1, 0);
  expect(test.screen36.sound2, 0);
  expect(test.screen36.sound3, 0);
  expect(test.screen36.snd_timer, 0);
  expect(test.screen36.timer1, 0);
  expect(test.screen36.timer2, 0);
  expect(test.screen36.timer3, 0);
  expect(test.screen36.dsp_flg1, 0);
  expect(test.screen36.dsp_flg2, 0);
  expect(test.screen36.movie01_ext, 0);
  expect(test.screen36.movie02_ext, 0);
  expect(test.screen36.movie03_ext, 0);
  expect(test.screen36.movie04_ext, 0);
  expect(test.screen36.line_title, "");
  expect(test.screen36.line_title_ex, "");
  expect(test.screen36.line1, "");
  expect(test.screen36.line2, "");
  expect(test.screen36.line3, "");
  expect(test.screen36.line4, "");
  expect(test.screen36.line1_ex, "");
  expect(test.screen36.line2_ex, "");
  expect(test.screen36.line3_ex, "");
  expect(test.screen36.line4_ex, "");
  expect(test.screen36.sound_led1, 0);
  expect(test.screen36.sound_led2, 0);
  expect(test.screen36.sound_led3, 0);
  expect(test.screen37.title, "");
  expect(test.screen37.msg1, "");
  expect(test.screen37.msg2, "");
  expect(test.screen37.msg1_size, 0);
  expect(test.screen37.msg2_size, 0);
  expect(test.screen37.sound1, 0);
  expect(test.screen37.sound2, 0);
  expect(test.screen37.sound3, 0);
  expect(test.screen37.snd_timer, 0);
  expect(test.screen37.timer1, 0);
  expect(test.screen37.timer2, 0);
  expect(test.screen37.timer3, 0);
  expect(test.screen37.dsp_flg1, 0);
  expect(test.screen37.dsp_flg2, 0);
  expect(test.screen37.movie01_ext, 0);
  expect(test.screen37.movie02_ext, 0);
  expect(test.screen37.movie03_ext, 0);
  expect(test.screen37.movie04_ext, 0);
  expect(test.screen37.line_title, "");
  expect(test.screen37.line_title_ex, "");
  expect(test.screen37.line1, "");
  expect(test.screen37.line2, "");
  expect(test.screen37.line3, "");
  expect(test.screen37.line4, "");
  expect(test.screen37.line1_ex, "");
  expect(test.screen37.line2_ex, "");
  expect(test.screen37.line3_ex, "");
  expect(test.screen37.line4_ex, "");
  expect(test.screen37.sound_led1, 0);
  expect(test.screen37.sound_led2, 0);
  expect(test.screen37.sound_led3, 0);
  expect(test.screen38.title, "");
  expect(test.screen38.msg1, "");
  expect(test.screen38.msg2, "");
  expect(test.screen38.msg1_size, 0);
  expect(test.screen38.msg2_size, 0);
  expect(test.screen38.sound1, 0);
  expect(test.screen38.sound2, 0);
  expect(test.screen38.sound3, 0);
  expect(test.screen38.snd_timer, 0);
  expect(test.screen38.timer1, 0);
  expect(test.screen38.timer2, 0);
  expect(test.screen38.timer3, 0);
  expect(test.screen38.dsp_flg1, 0);
  expect(test.screen38.dsp_flg2, 0);
  expect(test.screen38.movie01_ext, 0);
  expect(test.screen38.movie02_ext, 0);
  expect(test.screen38.movie03_ext, 0);
  expect(test.screen38.movie04_ext, 0);
  expect(test.screen38.line_title, "");
  expect(test.screen38.line_title_ex, "");
  expect(test.screen38.line1, "");
  expect(test.screen38.line2, "");
  expect(test.screen38.line3, "");
  expect(test.screen38.line4, "");
  expect(test.screen38.line1_ex, "");
  expect(test.screen38.line2_ex, "");
  expect(test.screen38.line3_ex, "");
  expect(test.screen38.line4_ex, "");
  expect(test.screen38.sound_led1, 0);
  expect(test.screen38.sound_led2, 0);
  expect(test.screen38.sound_led3, 0);
  expect(test.screen39.title, "");
  expect(test.screen39.msg1, "");
  expect(test.screen39.msg2, "");
  expect(test.screen39.msg1_size, 0);
  expect(test.screen39.msg2_size, 0);
  expect(test.screen39.sound1, 0);
  expect(test.screen39.sound2, 0);
  expect(test.screen39.sound3, 0);
  expect(test.screen39.snd_timer, 0);
  expect(test.screen39.timer1, 0);
  expect(test.screen39.timer2, 0);
  expect(test.screen39.timer3, 0);
  expect(test.screen39.dsp_flg1, 0);
  expect(test.screen39.dsp_flg2, 0);
  expect(test.screen39.movie01_ext, 0);
  expect(test.screen39.movie02_ext, 0);
  expect(test.screen39.movie03_ext, 0);
  expect(test.screen39.movie04_ext, 0);
  expect(test.screen39.line_title, "");
  expect(test.screen39.line_title_ex, "");
  expect(test.screen39.line1, "");
  expect(test.screen39.line2, "");
  expect(test.screen39.line3, "");
  expect(test.screen39.line4, "");
  expect(test.screen39.line1_ex, "");
  expect(test.screen39.line2_ex, "");
  expect(test.screen39.line3_ex, "");
  expect(test.screen39.line4_ex, "");
  expect(test.screen39.sound_led1, 0);
  expect(test.screen39.sound_led2, 0);
  expect(test.screen39.sound_led3, 0);
  expect(test.screen40.title, "");
  expect(test.screen40.msg1, "");
  expect(test.screen40.msg2, "");
  expect(test.screen40.msg1_size, 0);
  expect(test.screen40.msg2_size, 0);
  expect(test.screen40.sound1, 0);
  expect(test.screen40.sound2, 0);
  expect(test.screen40.sound3, 0);
  expect(test.screen40.snd_timer, 0);
  expect(test.screen40.timer1, 0);
  expect(test.screen40.timer2, 0);
  expect(test.screen40.timer3, 0);
  expect(test.screen40.dsp_flg1, 0);
  expect(test.screen40.dsp_flg2, 0);
  expect(test.screen40.movie01_ext, 0);
  expect(test.screen40.movie02_ext, 0);
  expect(test.screen40.movie03_ext, 0);
  expect(test.screen40.movie04_ext, 0);
  expect(test.screen40.line_title, "");
  expect(test.screen40.line_title_ex, "");
  expect(test.screen40.line1, "");
  expect(test.screen40.line2, "");
  expect(test.screen40.line3, "");
  expect(test.screen40.line4, "");
  expect(test.screen40.line1_ex, "");
  expect(test.screen40.line2_ex, "");
  expect(test.screen40.line3_ex, "");
  expect(test.screen40.line4_ex, "");
  expect(test.screen40.sound_led1, 0);
  expect(test.screen40.sound_led2, 0);
  expect(test.screen40.sound_led3, 0);
  expect(test.screen41.title, "");
  expect(test.screen41.msg1, "");
  expect(test.screen41.msg2, "");
  expect(test.screen41.msg1_size, 0);
  expect(test.screen41.msg2_size, 0);
  expect(test.screen41.sound1, 0);
  expect(test.screen41.sound2, 0);
  expect(test.screen41.sound3, 0);
  expect(test.screen41.snd_timer, 0);
  expect(test.screen41.timer1, 0);
  expect(test.screen41.timer2, 0);
  expect(test.screen41.timer3, 0);
  expect(test.screen41.dsp_flg1, 0);
  expect(test.screen41.dsp_flg2, 0);
  expect(test.screen41.movie01_ext, 0);
  expect(test.screen41.movie02_ext, 0);
  expect(test.screen41.movie03_ext, 0);
  expect(test.screen41.movie04_ext, 0);
  expect(test.screen41.line_title, "");
  expect(test.screen41.line_title_ex, "");
  expect(test.screen41.line1, "");
  expect(test.screen41.line2, "");
  expect(test.screen41.line3, "");
  expect(test.screen41.line4, "");
  expect(test.screen41.line1_ex, "");
  expect(test.screen41.line2_ex, "");
  expect(test.screen41.line3_ex, "");
  expect(test.screen41.line4_ex, "");
  expect(test.screen41.sound_led1, 0);
  expect(test.screen41.sound_led2, 0);
  expect(test.screen41.sound_led3, 0);
  expect(test.screen42.title, "");
  expect(test.screen42.msg1, "");
  expect(test.screen42.msg2, "");
  expect(test.screen42.msg1_size, 0);
  expect(test.screen42.msg2_size, 0);
  expect(test.screen42.sound1, 0);
  expect(test.screen42.sound2, 0);
  expect(test.screen42.sound3, 0);
  expect(test.screen42.snd_timer, 0);
  expect(test.screen42.timer1, 0);
  expect(test.screen42.timer2, 0);
  expect(test.screen42.timer3, 0);
  expect(test.screen42.dsp_flg1, 0);
  expect(test.screen42.dsp_flg2, 0);
  expect(test.screen42.movie01_ext, 0);
  expect(test.screen42.movie02_ext, 0);
  expect(test.screen42.movie03_ext, 0);
  expect(test.screen42.movie04_ext, 0);
  expect(test.screen42.line_title, "");
  expect(test.screen42.line_title_ex, "");
  expect(test.screen42.line1, "");
  expect(test.screen42.line2, "");
  expect(test.screen42.line3, "");
  expect(test.screen42.line4, "");
  expect(test.screen42.line1_ex, "");
  expect(test.screen42.line2_ex, "");
  expect(test.screen42.line3_ex, "");
  expect(test.screen42.line4_ex, "");
  expect(test.screen42.sound_led1, 0);
  expect(test.screen42.sound_led2, 0);
  expect(test.screen42.sound_led3, 0);
  expect(test.screen43.title, "");
  expect(test.screen43.msg1, "");
  expect(test.screen43.msg2, "");
  expect(test.screen43.msg1_size, 0);
  expect(test.screen43.msg2_size, 0);
  expect(test.screen43.sound1, 0);
  expect(test.screen43.sound2, 0);
  expect(test.screen43.sound3, 0);
  expect(test.screen43.snd_timer, 0);
  expect(test.screen43.timer1, 0);
  expect(test.screen43.timer2, 0);
  expect(test.screen43.timer3, 0);
  expect(test.screen43.dsp_flg1, 0);
  expect(test.screen43.dsp_flg2, 0);
  expect(test.screen43.movie01_ext, 0);
  expect(test.screen43.movie02_ext, 0);
  expect(test.screen43.movie03_ext, 0);
  expect(test.screen43.movie04_ext, 0);
  expect(test.screen43.line_title, "");
  expect(test.screen43.line_title_ex, "");
  expect(test.screen43.line1, "");
  expect(test.screen43.line2, "");
  expect(test.screen43.line3, "");
  expect(test.screen43.line4, "");
  expect(test.screen43.line1_ex, "");
  expect(test.screen43.line2_ex, "");
  expect(test.screen43.line3_ex, "");
  expect(test.screen43.line4_ex, "");
  expect(test.screen43.sound_led1, 0);
  expect(test.screen43.sound_led2, 0);
  expect(test.screen43.sound_led3, 0);
  expect(test.screen44.title, "");
  expect(test.screen44.msg1, "");
  expect(test.screen44.msg2, "");
  expect(test.screen44.msg1_size, 0);
  expect(test.screen44.msg2_size, 0);
  expect(test.screen44.sound1, 0);
  expect(test.screen44.sound2, 0);
  expect(test.screen44.sound3, 0);
  expect(test.screen44.snd_timer, 0);
  expect(test.screen44.timer1, 0);
  expect(test.screen44.timer2, 0);
  expect(test.screen44.timer3, 0);
  expect(test.screen44.dsp_flg1, 0);
  expect(test.screen44.dsp_flg2, 0);
  expect(test.screen44.movie01_ext, 0);
  expect(test.screen44.movie02_ext, 0);
  expect(test.screen44.movie03_ext, 0);
  expect(test.screen44.movie04_ext, 0);
  expect(test.screen44.line_title, "");
  expect(test.screen44.line_title_ex, "");
  expect(test.screen44.line1, "");
  expect(test.screen44.line2, "");
  expect(test.screen44.line3, "");
  expect(test.screen44.line4, "");
  expect(test.screen44.line1_ex, "");
  expect(test.screen44.line2_ex, "");
  expect(test.screen44.line3_ex, "");
  expect(test.screen44.line4_ex, "");
  expect(test.screen44.sound_led1, 0);
  expect(test.screen44.sound_led2, 0);
  expect(test.screen44.sound_led3, 0);
  expect(test.screen45.title, "");
  expect(test.screen45.msg1, "");
  expect(test.screen45.msg2, "");
  expect(test.screen45.msg1_size, 0);
  expect(test.screen45.msg2_size, 0);
  expect(test.screen45.sound1, 0);
  expect(test.screen45.sound2, 0);
  expect(test.screen45.sound3, 0);
  expect(test.screen45.snd_timer, 0);
  expect(test.screen45.timer1, 0);
  expect(test.screen45.timer2, 0);
  expect(test.screen45.timer3, 0);
  expect(test.screen45.dsp_flg1, 0);
  expect(test.screen45.dsp_flg2, 0);
  expect(test.screen45.movie01_ext, 0);
  expect(test.screen45.movie02_ext, 0);
  expect(test.screen45.movie03_ext, 0);
  expect(test.screen45.movie04_ext, 0);
  expect(test.screen45.line_title, "");
  expect(test.screen45.line_title_ex, "");
  expect(test.screen45.line1, "");
  expect(test.screen45.line2, "");
  expect(test.screen45.line3, "");
  expect(test.screen45.line4, "");
  expect(test.screen45.line1_ex, "");
  expect(test.screen45.line2_ex, "");
  expect(test.screen45.line3_ex, "");
  expect(test.screen45.line4_ex, "");
  expect(test.screen45.sound_led1, 0);
  expect(test.screen45.sound_led2, 0);
  expect(test.screen45.sound_led3, 0);
  expect(test.screen46.title, "");
  expect(test.screen46.msg1, "");
  expect(test.screen46.msg2, "");
  expect(test.screen46.msg1_size, 0);
  expect(test.screen46.msg2_size, 0);
  expect(test.screen46.sound1, 0);
  expect(test.screen46.sound2, 0);
  expect(test.screen46.sound3, 0);
  expect(test.screen46.snd_timer, 0);
  expect(test.screen46.timer1, 0);
  expect(test.screen46.timer2, 0);
  expect(test.screen46.timer3, 0);
  expect(test.screen46.dsp_flg1, 0);
  expect(test.screen46.dsp_flg2, 0);
  expect(test.screen46.movie01_ext, 0);
  expect(test.screen46.movie02_ext, 0);
  expect(test.screen46.movie03_ext, 0);
  expect(test.screen46.movie04_ext, 0);
  expect(test.screen46.line_title, "");
  expect(test.screen46.line_title_ex, "");
  expect(test.screen46.line1, "");
  expect(test.screen46.line2, "");
  expect(test.screen46.line3, "");
  expect(test.screen46.line4, "");
  expect(test.screen46.line1_ex, "");
  expect(test.screen46.line2_ex, "");
  expect(test.screen46.line3_ex, "");
  expect(test.screen46.line4_ex, "");
  expect(test.screen46.sound_led1, 0);
  expect(test.screen46.sound_led2, 0);
  expect(test.screen46.sound_led3, 0);
  expect(test.screen47.title, "");
  expect(test.screen47.msg1, "");
  expect(test.screen47.msg2, "");
  expect(test.screen47.msg1_size, 0);
  expect(test.screen47.msg2_size, 0);
  expect(test.screen47.sound1, 0);
  expect(test.screen47.sound2, 0);
  expect(test.screen47.sound3, 0);
  expect(test.screen47.snd_timer, 0);
  expect(test.screen47.timer1, 0);
  expect(test.screen47.timer2, 0);
  expect(test.screen47.timer3, 0);
  expect(test.screen47.dsp_flg1, 0);
  expect(test.screen47.dsp_flg2, 0);
  expect(test.screen47.movie01_ext, 0);
  expect(test.screen47.movie02_ext, 0);
  expect(test.screen47.movie03_ext, 0);
  expect(test.screen47.movie04_ext, 0);
  expect(test.screen47.line_title, "");
  expect(test.screen47.line_title_ex, "");
  expect(test.screen47.line1, "");
  expect(test.screen47.line2, "");
  expect(test.screen47.line3, "");
  expect(test.screen47.line4, "");
  expect(test.screen47.line1_ex, "");
  expect(test.screen47.line2_ex, "");
  expect(test.screen47.line3_ex, "");
  expect(test.screen47.line4_ex, "");
  expect(test.screen47.sound_led1, 0);
  expect(test.screen47.sound_led2, 0);
  expect(test.screen47.sound_led3, 0);
  expect(test.screen48.title, "");
  expect(test.screen48.msg1, "");
  expect(test.screen48.msg2, "");
  expect(test.screen48.msg1_size, 0);
  expect(test.screen48.msg2_size, 0);
  expect(test.screen48.sound1, 0);
  expect(test.screen48.sound2, 0);
  expect(test.screen48.sound3, 0);
  expect(test.screen48.snd_timer, 0);
  expect(test.screen48.timer1, 0);
  expect(test.screen48.timer2, 0);
  expect(test.screen48.timer3, 0);
  expect(test.screen48.dsp_flg1, 0);
  expect(test.screen48.dsp_flg2, 0);
  expect(test.screen48.movie01_ext, 0);
  expect(test.screen48.movie02_ext, 0);
  expect(test.screen48.movie03_ext, 0);
  expect(test.screen48.movie04_ext, 0);
  expect(test.screen48.line_title, "");
  expect(test.screen48.line_title_ex, "");
  expect(test.screen48.line1, "");
  expect(test.screen48.line2, "");
  expect(test.screen48.line3, "");
  expect(test.screen48.line4, "");
  expect(test.screen48.line1_ex, "");
  expect(test.screen48.line2_ex, "");
  expect(test.screen48.line3_ex, "");
  expect(test.screen48.line4_ex, "");
  expect(test.screen48.sound_led1, 0);
  expect(test.screen48.sound_led2, 0);
  expect(test.screen48.sound_led3, 0);
  expect(test.screen49.title, "");
  expect(test.screen49.msg1, "");
  expect(test.screen49.msg2, "");
  expect(test.screen49.msg1_size, 0);
  expect(test.screen49.msg2_size, 0);
  expect(test.screen49.sound1, 0);
  expect(test.screen49.sound2, 0);
  expect(test.screen49.sound3, 0);
  expect(test.screen49.snd_timer, 0);
  expect(test.screen49.timer1, 0);
  expect(test.screen49.timer2, 0);
  expect(test.screen49.timer3, 0);
  expect(test.screen49.dsp_flg1, 0);
  expect(test.screen49.dsp_flg2, 0);
  expect(test.screen49.movie01_ext, 0);
  expect(test.screen49.movie02_ext, 0);
  expect(test.screen49.movie03_ext, 0);
  expect(test.screen49.movie04_ext, 0);
  expect(test.screen49.line_title, "");
  expect(test.screen49.line_title_ex, "");
  expect(test.screen49.line1, "");
  expect(test.screen49.line2, "");
  expect(test.screen49.line3, "");
  expect(test.screen49.line4, "");
  expect(test.screen49.line1_ex, "");
  expect(test.screen49.line2_ex, "");
  expect(test.screen49.line3_ex, "");
  expect(test.screen49.line4_ex, "");
  expect(test.screen49.sound_led1, 0);
  expect(test.screen49.sound_led2, 0);
  expect(test.screen49.sound_led3, 0);
  expect(test.screen50.title, "");
  expect(test.screen50.msg1, "");
  expect(test.screen50.msg2, "");
  expect(test.screen50.msg1_size, 0);
  expect(test.screen50.msg2_size, 0);
  expect(test.screen50.sound1, 0);
  expect(test.screen50.sound2, 0);
  expect(test.screen50.sound3, 0);
  expect(test.screen50.snd_timer, 0);
  expect(test.screen50.timer1, 0);
  expect(test.screen50.timer2, 0);
  expect(test.screen50.timer3, 0);
  expect(test.screen50.dsp_flg1, 0);
  expect(test.screen50.dsp_flg2, 0);
  expect(test.screen50.movie01_ext, 0);
  expect(test.screen50.movie02_ext, 0);
  expect(test.screen50.movie03_ext, 0);
  expect(test.screen50.movie04_ext, 0);
  expect(test.screen50.line_title, "");
  expect(test.screen50.line_title_ex, "");
  expect(test.screen50.line1, "");
  expect(test.screen50.line2, "");
  expect(test.screen50.line3, "");
  expect(test.screen50.line4, "");
  expect(test.screen50.line1_ex, "");
  expect(test.screen50.line2_ex, "");
  expect(test.screen50.line3_ex, "");
  expect(test.screen50.line4_ex, "");
  expect(test.screen50.sound_led1, 0);
  expect(test.screen50.sound_led2, 0);
  expect(test.screen50.sound_led3, 0);
  expect(test.screen51.title, "");
  expect(test.screen51.msg1, "");
  expect(test.screen51.msg2, "");
  expect(test.screen51.msg1_size, 0);
  expect(test.screen51.msg2_size, 0);
  expect(test.screen51.sound1, 0);
  expect(test.screen51.sound2, 0);
  expect(test.screen51.sound3, "");
  expect(test.screen51.snd_timer, 0);
  expect(test.screen51.timer1, 0);
  expect(test.screen51.timer2, 0);
  expect(test.screen51.timer3, 0);
  expect(test.screen51.dsp_flg1, 0);
  expect(test.screen51.dsp_flg2, 0);
  expect(test.screen51.movie01_ext, 0);
  expect(test.screen51.movie02_ext, 0);
  expect(test.screen51.movie03_ext, 0);
  expect(test.screen51.movie04_ext, 0);
  expect(test.screen51.line_title, "");
  expect(test.screen51.line_title_ex, "");
  expect(test.screen51.line1, "");
  expect(test.screen51.line2, "");
  expect(test.screen51.line3, "");
  expect(test.screen51.line4, "");
  expect(test.screen51.line1_ex, "");
  expect(test.screen51.line2_ex, "");
  expect(test.screen51.line3_ex, "");
  expect(test.screen51.line4_ex, "");
  expect(test.screen51.sound_led1, 0);
  expect(test.screen51.sound_led2, 0);
  expect(test.screen51.sound_led3, "");
  expect(test.screen52.title, "");
  expect(test.screen52.msg1, "");
  expect(test.screen52.msg2, "");
  expect(test.screen52.msg1_size, 0);
  expect(test.screen52.msg2_size, 0);
  expect(test.screen52.sound1, 0);
  expect(test.screen52.sound2, 0);
  expect(test.screen52.sound3, 0);
  expect(test.screen52.snd_timer, 0);
  expect(test.screen52.timer1, 0);
  expect(test.screen52.timer2, 0);
  expect(test.screen52.timer3, 0);
  expect(test.screen52.dsp_flg1, 0);
  expect(test.screen52.dsp_flg2, 0);
  expect(test.screen52.movie01_ext, 0);
  expect(test.screen52.movie02_ext, 0);
  expect(test.screen52.movie03_ext, 0);
  expect(test.screen52.movie04_ext, 0);
  expect(test.screen52.line_title, "");
  expect(test.screen52.line_title_ex, "");
  expect(test.screen52.line1, "");
  expect(test.screen52.line2, "");
  expect(test.screen52.line3, "");
  expect(test.screen52.line4, "");
  expect(test.screen52.line1_ex, "");
  expect(test.screen52.line2_ex, "");
  expect(test.screen52.line3_ex, "");
  expect(test.screen52.line4_ex, "");
  expect(test.screen52.sound_led1, 0);
  expect(test.screen52.sound_led2, 0);
  expect(test.screen52.sound_led3, 0);
  expect(test.screen53.title, "");
  expect(test.screen53.msg1, "");
  expect(test.screen53.msg2, "");
  expect(test.screen53.msg1_size, 0);
  expect(test.screen53.msg2_size, 0);
  expect(test.screen53.sound1, 0);
  expect(test.screen53.sound2, 0);
  expect(test.screen53.sound3, 0);
  expect(test.screen53.snd_timer, 0);
  expect(test.screen53.timer1, 0);
  expect(test.screen53.timer2, 0);
  expect(test.screen53.timer3, 0);
  expect(test.screen53.dsp_flg1, 0);
  expect(test.screen53.dsp_flg2, 0);
  expect(test.screen53.movie01_ext, 0);
  expect(test.screen53.movie02_ext, 0);
  expect(test.screen53.movie03_ext, 0);
  expect(test.screen53.movie04_ext, 0);
  expect(test.screen53.line_title, "");
  expect(test.screen53.line_title_ex, "");
  expect(test.screen53.line1, "");
  expect(test.screen53.line2, "");
  expect(test.screen53.line3, "");
  expect(test.screen53.line4, "");
  expect(test.screen53.line1_ex, "");
  expect(test.screen53.line2_ex, "");
  expect(test.screen53.line3_ex, "");
  expect(test.screen53.line4_ex, "");
  expect(test.screen53.sound_led1, 0);
  expect(test.screen53.sound_led2, 0);
  expect(test.screen53.sound_led3, 0);
  expect(test.screen54.title, "");
  expect(test.screen54.msg1, "");
  expect(test.screen54.msg2, "");
  expect(test.screen54.msg1_size, 0);
  expect(test.screen54.msg2_size, 0);
  expect(test.screen54.sound1, 0);
  expect(test.screen54.sound2, 0);
  expect(test.screen54.sound3, "");
  expect(test.screen54.snd_timer, 0);
  expect(test.screen54.timer1, 0);
  expect(test.screen54.timer2, 0);
  expect(test.screen54.timer3, 0);
  expect(test.screen54.dsp_flg1, 0);
  expect(test.screen54.dsp_flg2, 0);
  expect(test.screen54.movie01_ext, 0);
  expect(test.screen54.movie02_ext, 0);
  expect(test.screen54.movie03_ext, 0);
  expect(test.screen54.movie04_ext, 0);
  expect(test.screen54.line_title, "");
  expect(test.screen54.line_title_ex, "");
  expect(test.screen54.line1, "");
  expect(test.screen54.line2, "");
  expect(test.screen54.line3, "");
  expect(test.screen54.line4, "");
  expect(test.screen54.line1_ex, "");
  expect(test.screen54.line2_ex, "");
  expect(test.screen54.line3_ex, "");
  expect(test.screen54.line4_ex, "");
  expect(test.screen54.sound_led1, 0);
  expect(test.screen54.sound_led2, 0);
  expect(test.screen54.sound_led3, "");
  expect(test.screen55.title, "");
  expect(test.screen55.msg1, "");
  expect(test.screen55.msg2, "");
  expect(test.screen55.msg1_size, 0);
  expect(test.screen55.msg2_size, 0);
  expect(test.screen55.sound1, 0);
  expect(test.screen55.sound2, 0);
  expect(test.screen55.sound3, 0);
  expect(test.screen55.snd_timer, 0);
  expect(test.screen55.timer1, 0);
  expect(test.screen55.timer2, 0);
  expect(test.screen55.timer3, 0);
  expect(test.screen55.dsp_flg1, 0);
  expect(test.screen55.dsp_flg2, 0);
  expect(test.screen55.movie01_ext, 0);
  expect(test.screen55.movie02_ext, 0);
  expect(test.screen55.movie03_ext, 0);
  expect(test.screen55.movie04_ext, 0);
  expect(test.screen55.line_title, "");
  expect(test.screen55.line_title_ex, "");
  expect(test.screen55.line1, "");
  expect(test.screen55.line2, "");
  expect(test.screen55.line3, "");
  expect(test.screen55.line4, "");
  expect(test.screen55.line1_ex, "");
  expect(test.screen55.line2_ex, "");
  expect(test.screen55.line3_ex, "");
  expect(test.screen55.line4_ex, "");
  expect(test.screen55.sound_led1, 0);
  expect(test.screen55.sound_led2, 0);
  expect(test.screen55.sound_led3, 0);
  expect(test.screen56.title, "");
  expect(test.screen56.msg1, "");
  expect(test.screen56.msg2, "");
  expect(test.screen56.msg1_size, 0);
  expect(test.screen56.msg2_size, 0);
  expect(test.screen56.sound1, 0);
  expect(test.screen56.sound2, 0);
  expect(test.screen56.sound3, 0);
  expect(test.screen56.snd_timer, 0);
  expect(test.screen56.timer1, 0);
  expect(test.screen56.timer2, 0);
  expect(test.screen56.timer3, 0);
  expect(test.screen56.dsp_flg1, 0);
  expect(test.screen56.dsp_flg2, 0);
  expect(test.screen56.movie01_ext, 0);
  expect(test.screen56.movie02_ext, 0);
  expect(test.screen56.movie03_ext, 0);
  expect(test.screen56.movie04_ext, 0);
  expect(test.screen56.line_title, "");
  expect(test.screen56.line_title_ex, "");
  expect(test.screen56.line1, "");
  expect(test.screen56.line2, "");
  expect(test.screen56.line3, "");
  expect(test.screen56.line4, "");
  expect(test.screen56.line1_ex, "");
  expect(test.screen56.line2_ex, "");
  expect(test.screen56.line3_ex, "");
  expect(test.screen56.line4_ex, "");
  expect(test.screen56.sound_led1, 0);
  expect(test.screen56.sound_led2, 0);
  expect(test.screen56.sound_led3, 0);
  expect(test.screen57.title, "");
  expect(test.screen57.msg1, "");
  expect(test.screen57.msg2, "");
  expect(test.screen57.msg1_size, 0);
  expect(test.screen57.msg2_size, 0);
  expect(test.screen57.sound1, 0);
  expect(test.screen57.sound2, 0);
  expect(test.screen57.sound3, "");
  expect(test.screen57.snd_timer, 0);
  expect(test.screen57.timer1, 0);
  expect(test.screen57.timer2, 0);
  expect(test.screen57.timer3, 0);
  expect(test.screen57.dsp_flg1, 0);
  expect(test.screen57.dsp_flg2, 0);
  expect(test.screen57.movie01_ext, 0);
  expect(test.screen57.movie02_ext, 0);
  expect(test.screen57.movie03_ext, 0);
  expect(test.screen57.movie04_ext, 0);
  expect(test.screen57.line_title, "");
  expect(test.screen57.line_title_ex, "");
  expect(test.screen57.line1, "");
  expect(test.screen57.line2, "");
  expect(test.screen57.line3, "");
  expect(test.screen57.line4, "");
  expect(test.screen57.line1_ex, "");
  expect(test.screen57.line2_ex, "");
  expect(test.screen57.line3_ex, "");
  expect(test.screen57.line4_ex, "");
  expect(test.screen57.sound_led1, 0);
  expect(test.screen57.sound_led2, 0);
  expect(test.screen57.sound_led3, "");
  expect(test.screen58.title, "");
  expect(test.screen58.msg1, "");
  expect(test.screen58.msg2, "");
  expect(test.screen58.msg1_size, 0);
  expect(test.screen58.msg2_size, 0);
  expect(test.screen58.sound1, 0);
  expect(test.screen58.sound2, 0);
  expect(test.screen58.sound3, 0);
  expect(test.screen58.snd_timer, 0);
  expect(test.screen58.timer1, 0);
  expect(test.screen58.timer2, 0);
  expect(test.screen58.timer3, 0);
  expect(test.screen58.dsp_flg1, 0);
  expect(test.screen58.dsp_flg2, 0);
  expect(test.screen58.movie01_ext, 0);
  expect(test.screen58.movie02_ext, 0);
  expect(test.screen58.movie03_ext, 0);
  expect(test.screen58.movie04_ext, 0);
  expect(test.screen58.line_title, "");
  expect(test.screen58.line_title_ex, "");
  expect(test.screen58.line1, "");
  expect(test.screen58.line2, "");
  expect(test.screen58.line3, "");
  expect(test.screen58.line4, "");
  expect(test.screen58.line1_ex, "");
  expect(test.screen58.line2_ex, "");
  expect(test.screen58.line3_ex, "");
  expect(test.screen58.line4_ex, "");
  expect(test.screen58.sound_led1, 0);
  expect(test.screen58.sound_led2, 0);
  expect(test.screen58.sound_led3, 0);
  expect(test.screen59.title, "");
  expect(test.screen59.msg1, "");
  expect(test.screen59.msg2, "");
  expect(test.screen59.msg1_size, 0);
  expect(test.screen59.msg2_size, 0);
  expect(test.screen59.sound1, 0);
  expect(test.screen59.sound2, 0);
  expect(test.screen59.sound3, 0);
  expect(test.screen59.snd_timer, 0);
  expect(test.screen59.timer1, 0);
  expect(test.screen59.timer2, 0);
  expect(test.screen59.timer3, 0);
  expect(test.screen59.dsp_flg1, 0);
  expect(test.screen59.dsp_flg2, 0);
  expect(test.screen59.movie01_ext, 0);
  expect(test.screen59.movie02_ext, 0);
  expect(test.screen59.movie03_ext, 0);
  expect(test.screen59.movie04_ext, 0);
  expect(test.screen59.line_title, "");
  expect(test.screen59.line_title_ex, "");
  expect(test.screen59.line1, "");
  expect(test.screen59.line2, "");
  expect(test.screen59.line3, "");
  expect(test.screen59.line4, "");
  expect(test.screen59.line1_ex, "");
  expect(test.screen59.line2_ex, "");
  expect(test.screen59.line3_ex, "");
  expect(test.screen59.line4_ex, "");
  expect(test.screen59.sound_led1, 0);
  expect(test.screen59.sound_led2, 0);
  expect(test.screen59.sound_led3, 0);
  expect(test.screen60.title, "");
  expect(test.screen60.msg1, "");
  expect(test.screen60.msg2, "");
  expect(test.screen60.msg1_size, 0);
  expect(test.screen60.msg2_size, 0);
  expect(test.screen60.sound1, 0);
  expect(test.screen60.sound2, 0);
  expect(test.screen60.sound3, "");
  expect(test.screen60.snd_timer, 0);
  expect(test.screen60.timer1, 0);
  expect(test.screen60.timer2, 0);
  expect(test.screen60.timer3, 0);
  expect(test.screen60.dsp_flg1, 0);
  expect(test.screen60.dsp_flg2, 0);
  expect(test.screen60.movie01_ext, 0);
  expect(test.screen60.movie02_ext, 0);
  expect(test.screen60.movie03_ext, 0);
  expect(test.screen60.movie04_ext, 0);
  expect(test.screen60.line_title, "");
  expect(test.screen60.line_title_ex, "");
  expect(test.screen60.line1, "");
  expect(test.screen60.line2, "");
  expect(test.screen60.line3, "");
  expect(test.screen60.line4, "");
  expect(test.screen60.line1_ex, "");
  expect(test.screen60.line2_ex, "");
  expect(test.screen60.line3_ex, "");
  expect(test.screen60.line4_ex, "");
  expect(test.screen60.sound_led1, 0);
  expect(test.screen60.sound_led2, 0);
  expect(test.screen60.sound_led3, "");
  expect(test.screen61.title, "");
  expect(test.screen61.msg1, "");
  expect(test.screen61.msg2, "");
  expect(test.screen61.msg1_size, 0);
  expect(test.screen61.msg2_size, 0);
  expect(test.screen61.sound1, 0);
  expect(test.screen61.sound2, 0);
  expect(test.screen61.sound3, 0);
  expect(test.screen61.snd_timer, 0);
  expect(test.screen61.timer1, 0);
  expect(test.screen61.timer2, 0);
  expect(test.screen61.timer3, 0);
  expect(test.screen61.dsp_flg1, 0);
  expect(test.screen61.dsp_flg2, 0);
  expect(test.screen61.movie01_ext, 0);
  expect(test.screen61.movie02_ext, 0);
  expect(test.screen61.movie03_ext, 0);
  expect(test.screen61.movie04_ext, 0);
  expect(test.screen61.line_title, "");
  expect(test.screen61.line_title_ex, "");
  expect(test.screen61.line1, "");
  expect(test.screen61.line2, "");
  expect(test.screen61.line3, "");
  expect(test.screen61.line4, "");
  expect(test.screen61.line1_ex, "");
  expect(test.screen61.line2_ex, "");
  expect(test.screen61.line3_ex, "");
  expect(test.screen61.line4_ex, "");
  expect(test.screen61.sound_led1, 0);
  expect(test.screen61.sound_led2, 0);
  expect(test.screen61.sound_led3, 0);
  expect(test.screen62.title, "");
  expect(test.screen62.msg1, "");
  expect(test.screen62.msg2, "");
  expect(test.screen62.msg1_size, 0);
  expect(test.screen62.msg2_size, 0);
  expect(test.screen62.sound1, 0);
  expect(test.screen62.sound2, 0);
  expect(test.screen62.sound3, 0);
  expect(test.screen62.snd_timer, 0);
  expect(test.screen62.timer1, 0);
  expect(test.screen62.timer2, 0);
  expect(test.screen62.timer3, 0);
  expect(test.screen62.dsp_flg1, 0);
  expect(test.screen62.dsp_flg2, 0);
  expect(test.screen62.movie01_ext, 0);
  expect(test.screen62.movie02_ext, 0);
  expect(test.screen62.movie03_ext, 0);
  expect(test.screen62.movie04_ext, 0);
  expect(test.screen62.line_title, "");
  expect(test.screen62.line_title_ex, "");
  expect(test.screen62.line1, "");
  expect(test.screen62.line2, "");
  expect(test.screen62.line3, "");
  expect(test.screen62.line4, "");
  expect(test.screen62.line1_ex, "");
  expect(test.screen62.line2_ex, "");
  expect(test.screen62.line3_ex, "");
  expect(test.screen62.line4_ex, "");
  expect(test.screen62.sound_led1, 0);
  expect(test.screen62.sound_led2, 0);
  expect(test.screen62.sound_led3, 0);
  expect(test.screen63.title, "");
  expect(test.screen63.msg1, "");
  expect(test.screen63.msg2, "");
  expect(test.screen63.msg1_size, 0);
  expect(test.screen63.msg2_size, 0);
  expect(test.screen63.sound1, 0);
  expect(test.screen63.sound2, 0);
  expect(test.screen63.sound3, "");
  expect(test.screen63.snd_timer, 0);
  expect(test.screen63.timer1, 0);
  expect(test.screen63.timer2, 0);
  expect(test.screen63.timer3, 0);
  expect(test.screen63.dsp_flg1, 0);
  expect(test.screen63.dsp_flg2, 0);
  expect(test.screen63.movie01_ext, 0);
  expect(test.screen63.movie02_ext, 0);
  expect(test.screen63.movie03_ext, 0);
  expect(test.screen63.movie04_ext, 0);
  expect(test.screen63.line_title, "");
  expect(test.screen63.line_title_ex, "");
  expect(test.screen63.line1, "");
  expect(test.screen63.line2, "");
  expect(test.screen63.line3, "");
  expect(test.screen63.line4, "");
  expect(test.screen63.line1_ex, "");
  expect(test.screen63.line2_ex, "");
  expect(test.screen63.line3_ex, "");
  expect(test.screen63.line4_ex, "");
  expect(test.screen63.sound_led1, 0);
  expect(test.screen63.sound_led2, 0);
  expect(test.screen63.sound_led3, "");
  expect(test.screen64.title, "");
  expect(test.screen64.msg1, "");
  expect(test.screen64.msg2, "");
  expect(test.screen64.msg1_size, 0);
  expect(test.screen64.msg2_size, 0);
  expect(test.screen64.sound1, 0);
  expect(test.screen64.sound2, 0);
  expect(test.screen64.sound3, 0);
  expect(test.screen64.snd_timer, 0);
  expect(test.screen64.timer1, 0);
  expect(test.screen64.timer2, 0);
  expect(test.screen64.timer3, 0);
  expect(test.screen64.dsp_flg1, 0);
  expect(test.screen64.dsp_flg2, 0);
  expect(test.screen64.movie01_ext, 0);
  expect(test.screen64.movie02_ext, 0);
  expect(test.screen64.movie03_ext, 0);
  expect(test.screen64.movie04_ext, 0);
  expect(test.screen64.line_title, "");
  expect(test.screen64.line_title_ex, "");
  expect(test.screen64.line1, "");
  expect(test.screen64.line2, "");
  expect(test.screen64.line3, "");
  expect(test.screen64.line4, "");
  expect(test.screen64.line1_ex, "");
  expect(test.screen64.line2_ex, "");
  expect(test.screen64.line3_ex, "");
  expect(test.screen64.line4_ex, "");
  expect(test.screen64.sound_led1, 0);
  expect(test.screen64.sound_led2, 0);
  expect(test.screen64.sound_led3, 0);
  expect(test.screen65.title, "");
  expect(test.screen65.msg1, "");
  expect(test.screen65.msg2, "");
  expect(test.screen65.msg1_size, 0);
  expect(test.screen65.msg2_size, 0);
  expect(test.screen65.sound1, 0);
  expect(test.screen65.sound2, 0);
  expect(test.screen65.sound3, 0);
  expect(test.screen65.snd_timer, 0);
  expect(test.screen65.timer1, 0);
  expect(test.screen65.timer2, 0);
  expect(test.screen65.timer3, 0);
  expect(test.screen65.dsp_flg1, 0);
  expect(test.screen65.dsp_flg2, 0);
  expect(test.screen65.movie01_ext, 0);
  expect(test.screen65.movie02_ext, 0);
  expect(test.screen65.movie03_ext, 0);
  expect(test.screen65.movie04_ext, 0);
  expect(test.screen65.line_title, "");
  expect(test.screen65.line_title_ex, "");
  expect(test.screen65.line1, "");
  expect(test.screen65.line2, "");
  expect(test.screen65.line3, "");
  expect(test.screen65.line4, "");
  expect(test.screen65.line1_ex, "");
  expect(test.screen65.line2_ex, "");
  expect(test.screen65.line3_ex, "");
  expect(test.screen65.line4_ex, "");
  expect(test.screen65.sound_led1, 0);
  expect(test.screen65.sound_led2, 0);
  expect(test.screen65.sound_led3, 0);
  expect(test.screen67.title, "");
  expect(test.screen67.msg1, "");
  expect(test.screen67.msg2, "");
  expect(test.screen67.msg1_size, 0);
  expect(test.screen67.msg2_size, 0);
  expect(test.screen67.sound1, 0);
  expect(test.screen67.sound2, 0);
  expect(test.screen67.sound3, 0);
  expect(test.screen67.snd_timer, 0);
  expect(test.screen67.timer1, 0);
  expect(test.screen67.timer2, 0);
  expect(test.screen67.timer3, 0);
  expect(test.screen67.dsp_flg1, 0);
  expect(test.screen67.dsp_flg2, 0);
  expect(test.screen67.movie01_ext, 0);
  expect(test.screen67.movie02_ext, 0);
  expect(test.screen67.movie03_ext, 0);
  expect(test.screen67.movie04_ext, 0);
  expect(test.screen67.line_title, "");
  expect(test.screen67.line_title_ex, "");
  expect(test.screen67.line1, "");
  expect(test.screen67.line2, "");
  expect(test.screen67.line3, "");
  expect(test.screen67.line4, "");
  expect(test.screen67.line1_ex, "");
  expect(test.screen67.line2_ex, "");
  expect(test.screen67.line3_ex, "");
  expect(test.screen67.line4_ex, "");
  expect(test.screen67.sound_led1, 0);
  expect(test.screen67.sound_led2, 0);
  expect(test.screen67.sound_led3, 0);
  expect(test.screen68.title, "");
  expect(test.screen68.msg1, "");
  expect(test.screen68.msg2, "");
  expect(test.screen68.msg1_size, 0);
  expect(test.screen68.msg2_size, 0);
  expect(test.screen68.sound1, 0);
  expect(test.screen68.sound2, 0);
  expect(test.screen68.sound3, 0);
  expect(test.screen68.snd_timer, 0);
  expect(test.screen68.timer1, 0);
  expect(test.screen68.timer2, 0);
  expect(test.screen68.timer3, 0);
  expect(test.screen68.dsp_flg1, 0);
  expect(test.screen68.dsp_flg2, 0);
  expect(test.screen68.movie01_ext, 0);
  expect(test.screen68.movie02_ext, 0);
  expect(test.screen68.movie03_ext, 0);
  expect(test.screen68.movie04_ext, 0);
  expect(test.screen68.line_title, "");
  expect(test.screen68.line_title_ex, "");
  expect(test.screen68.line1, "");
  expect(test.screen68.line2, "");
  expect(test.screen68.line3, "");
  expect(test.screen68.line4, "");
  expect(test.screen68.line1_ex, "");
  expect(test.screen68.line2_ex, "");
  expect(test.screen68.line3_ex, "");
  expect(test.screen68.line4_ex, "");
  expect(test.screen68.sound_led1, 0);
  expect(test.screen68.sound_led2, 0);
  expect(test.screen68.sound_led3, 0);
  expect(test.screen69.title, "");
  expect(test.screen69.msg1, "");
  expect(test.screen69.msg2, "");
  expect(test.screen69.msg1_size, 0);
  expect(test.screen69.msg2_size, 0);
  expect(test.screen69.sound1, 0);
  expect(test.screen69.sound2, 0);
  expect(test.screen69.sound3, 0);
  expect(test.screen69.snd_timer, 0);
  expect(test.screen69.timer1, 0);
  expect(test.screen69.timer2, 0);
  expect(test.screen69.timer3, 0);
  expect(test.screen69.dsp_flg1, 0);
  expect(test.screen69.dsp_flg2, 0);
  expect(test.screen69.movie01_ext, 0);
  expect(test.screen69.movie02_ext, 0);
  expect(test.screen69.movie03_ext, 0);
  expect(test.screen69.movie04_ext, 0);
  expect(test.screen69.line_title, "");
  expect(test.screen69.line_title_ex, "");
  expect(test.screen69.line1, "");
  expect(test.screen69.line2, "");
  expect(test.screen69.line3, "");
  expect(test.screen69.line4, "");
  expect(test.screen69.line1_ex, "");
  expect(test.screen69.line2_ex, "");
  expect(test.screen69.line3_ex, "");
  expect(test.screen69.line4_ex, "");
  expect(test.screen69.sound_led1, 0);
  expect(test.screen69.sound_led2, 0);
  expect(test.screen69.sound_led3, 0);
  expect(test.screen70.title, "");
  expect(test.screen70.msg1, "");
  expect(test.screen70.msg2, "");
  expect(test.screen70.msg1_size, 0);
  expect(test.screen70.msg2_size, 0);
  expect(test.screen70.sound1, 0);
  expect(test.screen70.sound2, 0);
  expect(test.screen70.sound3, 0);
  expect(test.screen70.snd_timer, 0);
  expect(test.screen70.timer1, 0);
  expect(test.screen70.timer2, 0);
  expect(test.screen70.timer3, 0);
  expect(test.screen70.dsp_flg1, 0);
  expect(test.screen70.dsp_flg2, 0);
  expect(test.screen70.movie01_ext, 0);
  expect(test.screen70.movie02_ext, 0);
  expect(test.screen70.movie03_ext, 0);
  expect(test.screen70.movie04_ext, 0);
  expect(test.screen70.line_title, "");
  expect(test.screen70.line_title_ex, "");
  expect(test.screen70.line1, "");
  expect(test.screen70.line2, "");
  expect(test.screen70.line3, "");
  expect(test.screen70.line4, "");
  expect(test.screen70.line1_ex, "");
  expect(test.screen70.line2_ex, "");
  expect(test.screen70.line3_ex, "");
  expect(test.screen70.line4_ex, "");
  expect(test.screen70.sound_led1, 0);
  expect(test.screen70.sound_led2, 0);
  expect(test.screen70.sound_led3, 0);
  expect(test.screen71.title, "");
  expect(test.screen71.msg1, "");
  expect(test.screen71.msg2, "");
  expect(test.screen71.msg1_size, 0);
  expect(test.screen71.msg2_size, 0);
  expect(test.screen71.sound1, 0);
  expect(test.screen71.sound2, 0);
  expect(test.screen71.sound3, 0);
  expect(test.screen71.snd_timer, 0);
  expect(test.screen71.timer1, 0);
  expect(test.screen71.timer2, 0);
  expect(test.screen71.timer3, 0);
  expect(test.screen71.dsp_flg1, 0);
  expect(test.screen71.dsp_flg2, 0);
  expect(test.screen71.movie01_ext, 0);
  expect(test.screen71.movie02_ext, 0);
  expect(test.screen71.movie03_ext, 0);
  expect(test.screen71.movie04_ext, 0);
  expect(test.screen71.line_title, "");
  expect(test.screen71.line_title_ex, "");
  expect(test.screen71.line1, "");
  expect(test.screen71.line2, "");
  expect(test.screen71.line3, "");
  expect(test.screen71.line4, "");
  expect(test.screen71.line1_ex, "");
  expect(test.screen71.line2_ex, "");
  expect(test.screen71.line3_ex, "");
  expect(test.screen71.line4_ex, "");
  expect(test.screen71.sound_led1, 0);
  expect(test.screen71.sound_led2, 0);
  expect(test.screen71.sound_led3, 0);
  expect(test.screen72.title, "");
  expect(test.screen72.msg1, "");
  expect(test.screen72.msg2, "");
  expect(test.screen72.msg1_size, 0);
  expect(test.screen72.msg2_size, 0);
  expect(test.screen72.sound1, 0);
  expect(test.screen72.sound2, 0);
  expect(test.screen72.sound3, 0);
  expect(test.screen72.snd_timer, 0);
  expect(test.screen72.timer1, 0);
  expect(test.screen72.timer2, 0);
  expect(test.screen72.timer3, 0);
  expect(test.screen72.dsp_flg1, 0);
  expect(test.screen72.dsp_flg2, 0);
  expect(test.screen72.movie01_ext, 0);
  expect(test.screen72.movie02_ext, 0);
  expect(test.screen72.movie03_ext, 0);
  expect(test.screen72.movie04_ext, 0);
  expect(test.screen72.line_title, "");
  expect(test.screen72.line_title_ex, "");
  expect(test.screen72.line1, "");
  expect(test.screen72.line2, "");
  expect(test.screen72.line3, "");
  expect(test.screen72.line4, "");
  expect(test.screen72.line1_ex, "");
  expect(test.screen72.line2_ex, "");
  expect(test.screen72.line3_ex, "");
  expect(test.screen72.line4_ex, "");
  expect(test.screen72.sound_led1, 0);
  expect(test.screen72.sound_led2, 0);
  expect(test.screen72.sound_led3, 0);
  expect(test.screen73.title, "");
  expect(test.screen73.msg1, "");
  expect(test.screen73.msg2, "");
  expect(test.screen73.msg1_size, 0);
  expect(test.screen73.msg2_size, 0);
  expect(test.screen73.sound1, 0);
  expect(test.screen73.sound2, 0);
  expect(test.screen73.sound3, 0);
  expect(test.screen73.snd_timer, 0);
  expect(test.screen73.timer1, 0);
  expect(test.screen73.timer2, 0);
  expect(test.screen73.timer3, 0);
  expect(test.screen73.dsp_flg1, 0);
  expect(test.screen73.dsp_flg2, 0);
  expect(test.screen73.movie01_ext, 0);
  expect(test.screen73.movie02_ext, 0);
  expect(test.screen73.movie03_ext, 0);
  expect(test.screen73.movie04_ext, 0);
  expect(test.screen73.line_title, "");
  expect(test.screen73.line_title_ex, "");
  expect(test.screen73.line1, "");
  expect(test.screen73.line2, "");
  expect(test.screen73.line3, "");
  expect(test.screen73.line4, "");
  expect(test.screen73.line1_ex, "");
  expect(test.screen73.line2_ex, "");
  expect(test.screen73.line3_ex, "");
  expect(test.screen73.line4_ex, "");
  expect(test.screen73.sound_led1, 0);
  expect(test.screen73.sound_led2, 0);
  expect(test.screen73.sound_led3, 0);
  expect(test.screen74.title, "");
  expect(test.screen74.msg1, "");
  expect(test.screen74.msg2, "");
  expect(test.screen74.msg1_size, 0);
  expect(test.screen74.msg2_size, 0);
  expect(test.screen74.sound1, 0);
  expect(test.screen74.sound2, 0);
  expect(test.screen74.sound3, 0);
  expect(test.screen74.snd_timer, 0);
  expect(test.screen74.timer1, 0);
  expect(test.screen74.timer2, 0);
  expect(test.screen74.timer3, 0);
  expect(test.screen74.dsp_flg1, 0);
  expect(test.screen74.dsp_flg2, 0);
  expect(test.screen74.movie01_ext, 0);
  expect(test.screen74.movie02_ext, 0);
  expect(test.screen74.movie03_ext, 0);
  expect(test.screen74.movie04_ext, 0);
  expect(test.screen74.line_title, "");
  expect(test.screen74.line_title_ex, "");
  expect(test.screen74.line1, "");
  expect(test.screen74.line2, "");
  expect(test.screen74.line3, "");
  expect(test.screen74.line4, "");
  expect(test.screen74.line1_ex, "");
  expect(test.screen74.line2_ex, "");
  expect(test.screen74.line3_ex, "");
  expect(test.screen74.line4_ex, "");
  expect(test.screen74.sound_led1, 0);
  expect(test.screen74.sound_led2, 0);
  expect(test.screen74.sound_led3, 0);
  expect(test.screen75.title, "");
  expect(test.screen75.msg1, "");
  expect(test.screen75.msg2, "");
  expect(test.screen75.msg1_size, 0);
  expect(test.screen75.msg2_size, 0);
  expect(test.screen75.sound1, 0);
  expect(test.screen75.sound2, 0);
  expect(test.screen75.sound3, 0);
  expect(test.screen75.snd_timer, 0);
  expect(test.screen75.timer1, 0);
  expect(test.screen75.timer2, 0);
  expect(test.screen75.timer3, 0);
  expect(test.screen75.dsp_flg1, 0);
  expect(test.screen75.dsp_flg2, 0);
  expect(test.screen75.movie01_ext, 0);
  expect(test.screen75.movie02_ext, 0);
  expect(test.screen75.movie03_ext, 0);
  expect(test.screen75.movie04_ext, 0);
  expect(test.screen75.line_title, "");
  expect(test.screen75.line_title_ex, "");
  expect(test.screen75.line1, "");
  expect(test.screen75.line2, "");
  expect(test.screen75.line3, "");
  expect(test.screen75.line4, "");
  expect(test.screen75.line1_ex, "");
  expect(test.screen75.line2_ex, "");
  expect(test.screen75.line3_ex, "");
  expect(test.screen75.line4_ex, "");
  expect(test.screen75.sound_led1, 0);
  expect(test.screen75.sound_led2, 0);
  expect(test.screen75.sound_led3, 0);
  expect(test.screen76.title, "");
  expect(test.screen76.msg1, "");
  expect(test.screen76.msg2, "");
  expect(test.screen76.msg1_size, 0);
  expect(test.screen76.msg2_size, 0);
  expect(test.screen76.sound1, 0);
  expect(test.screen76.sound2, 0);
  expect(test.screen76.sound3, 0);
  expect(test.screen76.snd_timer, 0);
  expect(test.screen76.timer1, 0);
  expect(test.screen76.timer2, 0);
  expect(test.screen76.timer3, 0);
  expect(test.screen76.dsp_flg1, 0);
  expect(test.screen76.dsp_flg2, 0);
  expect(test.screen76.movie01_ext, 0);
  expect(test.screen76.movie02_ext, 0);
  expect(test.screen76.movie03_ext, 0);
  expect(test.screen76.movie04_ext, 0);
  expect(test.screen76.line_title, "");
  expect(test.screen76.line_title_ex, "");
  expect(test.screen76.line1, "");
  expect(test.screen76.line2, "");
  expect(test.screen76.line3, "");
  expect(test.screen76.line4, "");
  expect(test.screen76.line1_ex, "");
  expect(test.screen76.line2_ex, "");
  expect(test.screen76.line3_ex, "");
  expect(test.screen76.line4_ex, "");
  expect(test.screen76.sound_led1, 0);
  expect(test.screen76.sound_led2, 0);
  expect(test.screen76.sound_led3, 0);
  expect(test.screen77.title, "");
  expect(test.screen77.msg1, "");
  expect(test.screen77.msg2, "");
  expect(test.screen77.msg1_size, 0);
  expect(test.screen77.msg2_size, 0);
  expect(test.screen77.sound1, 0);
  expect(test.screen77.sound2, 0);
  expect(test.screen77.sound3, 0);
  expect(test.screen77.snd_timer, 0);
  expect(test.screen77.timer1, 0);
  expect(test.screen77.timer2, 0);
  expect(test.screen77.timer3, 0);
  expect(test.screen77.dsp_flg1, 0);
  expect(test.screen77.dsp_flg2, 0);
  expect(test.screen77.movie01_ext, 0);
  expect(test.screen77.movie02_ext, 0);
  expect(test.screen77.movie03_ext, 0);
  expect(test.screen77.movie04_ext, 0);
  expect(test.screen77.line_title, "");
  expect(test.screen77.line_title_ex, "");
  expect(test.screen77.line1, "");
  expect(test.screen77.line2, "");
  expect(test.screen77.line3, "");
  expect(test.screen77.line4, "");
  expect(test.screen77.line1_ex, "");
  expect(test.screen77.line2_ex, "");
  expect(test.screen77.line3_ex, "");
  expect(test.screen77.line4_ex, "");
  expect(test.screen77.sound_led1, 0);
  expect(test.screen77.sound_led2, 0);
  expect(test.screen77.sound_led3, 0);
  expect(test.screen78.title, "");
  expect(test.screen78.msg1, "");
  expect(test.screen78.msg2, "");
  expect(test.screen78.msg1_size, 0);
  expect(test.screen78.msg2_size, 0);
  expect(test.screen78.sound1, 0);
  expect(test.screen78.sound2, 0);
  expect(test.screen78.sound3, 0);
  expect(test.screen78.snd_timer, 0);
  expect(test.screen78.timer1, 0);
  expect(test.screen78.timer2, 0);
  expect(test.screen78.timer3, 0);
  expect(test.screen78.dsp_flg1, 0);
  expect(test.screen78.dsp_flg2, 0);
  expect(test.screen78.movie01_ext, 0);
  expect(test.screen78.movie02_ext, 0);
  expect(test.screen78.movie03_ext, 0);
  expect(test.screen78.movie04_ext, 0);
  expect(test.screen78.line_title, "");
  expect(test.screen78.line_title_ex, "");
  expect(test.screen78.line1, "");
  expect(test.screen78.line2, "");
  expect(test.screen78.line3, "");
  expect(test.screen78.line4, "");
  expect(test.screen78.line1_ex, "");
  expect(test.screen78.line2_ex, "");
  expect(test.screen78.line3_ex, "");
  expect(test.screen78.line4_ex, "");
  expect(test.screen78.sound_led1, 0);
  expect(test.screen78.sound_led2, 0);
  expect(test.screen78.sound_led3, 0);
  expect(test.screen79.title, "");
  expect(test.screen79.msg1, "");
  expect(test.screen79.msg2, "");
  expect(test.screen79.msg1_size, 0);
  expect(test.screen79.msg2_size, 0);
  expect(test.screen79.sound1, 0);
  expect(test.screen79.sound2, 0);
  expect(test.screen79.sound3, 0);
  expect(test.screen79.snd_timer, 0);
  expect(test.screen79.timer1, 0);
  expect(test.screen79.timer2, 0);
  expect(test.screen79.timer3, 0);
  expect(test.screen79.dsp_flg1, 0);
  expect(test.screen79.dsp_flg2, 0);
  expect(test.screen79.movie01_ext, 0);
  expect(test.screen79.movie02_ext, 0);
  expect(test.screen79.movie03_ext, 0);
  expect(test.screen79.movie04_ext, 0);
  expect(test.screen79.line_title, "");
  expect(test.screen79.line_title_ex, "");
  expect(test.screen79.line1, "");
  expect(test.screen79.line2, "");
  expect(test.screen79.line3, "");
  expect(test.screen79.line4, "");
  expect(test.screen79.line1_ex, "");
  expect(test.screen79.line2_ex, "");
  expect(test.screen79.line3_ex, "");
  expect(test.screen79.line4_ex, "");
  expect(test.screen79.sound_led1, 0);
  expect(test.screen79.sound_led2, 0);
  expect(test.screen79.sound_led3, 0);
  expect(test.screen81.title, "");
  expect(test.screen81.msg1, "");
  expect(test.screen81.msg2, "");
  expect(test.screen81.msg1_size, 0);
  expect(test.screen81.msg2_size, 0);
  expect(test.screen81.sound1, 0);
  expect(test.screen81.sound2, 0);
  expect(test.screen81.sound3, 0);
  expect(test.screen81.snd_timer, 0);
  expect(test.screen81.timer1, 0);
  expect(test.screen81.timer2, 0);
  expect(test.screen81.timer3, 0);
  expect(test.screen81.dsp_flg1, 0);
  expect(test.screen81.dsp_flg2, 0);
  expect(test.screen81.movie01_ext, 0);
  expect(test.screen81.movie02_ext, 0);
  expect(test.screen81.movie03_ext, 0);
  expect(test.screen81.movie04_ext, 0);
  expect(test.screen81.line_title, "");
  expect(test.screen81.line_title_ex, "");
  expect(test.screen81.line1, "");
  expect(test.screen81.line2, "");
  expect(test.screen81.line3, "");
  expect(test.screen81.line4, "");
  expect(test.screen81.line1_ex, "");
  expect(test.screen81.line2_ex, "");
  expect(test.screen81.line3_ex, "");
  expect(test.screen81.line4_ex, "");
  expect(test.screen81.sound_led1, 0);
  expect(test.screen81.sound_led2, 0);
  expect(test.screen81.sound_led3, 0);
  expect(test.screen82.title, "");
  expect(test.screen82.msg1, "");
  expect(test.screen82.msg2, "");
  expect(test.screen82.msg1_size, 0);
  expect(test.screen82.msg2_size, 0);
  expect(test.screen82.sound1, 0);
  expect(test.screen82.sound2, 0);
  expect(test.screen82.sound3, 0);
  expect(test.screen82.snd_timer, 0);
  expect(test.screen82.timer1, 0);
  expect(test.screen82.timer2, 0);
  expect(test.screen82.timer3, 0);
  expect(test.screen82.dsp_flg1, 0);
  expect(test.screen82.dsp_flg2, 0);
  expect(test.screen82.movie01_ext, 0);
  expect(test.screen82.movie02_ext, 0);
  expect(test.screen82.movie03_ext, 0);
  expect(test.screen82.movie04_ext, 0);
  expect(test.screen82.line_title, "");
  expect(test.screen82.line_title_ex, "");
  expect(test.screen82.line1, "");
  expect(test.screen82.line2, "");
  expect(test.screen82.line3, "");
  expect(test.screen82.line4, "");
  expect(test.screen82.line1_ex, "");
  expect(test.screen82.line2_ex, "");
  expect(test.screen82.line3_ex, "");
  expect(test.screen82.line4_ex, "");
  expect(test.screen82.sound_led1, 0);
  expect(test.screen82.sound_led2, 0);
  expect(test.screen82.sound_led3, 0);
  expect(test.screen83.title, "");
  expect(test.screen83.msg1, "");
  expect(test.screen83.msg2, "");
  expect(test.screen83.msg1_size, 0);
  expect(test.screen83.msg2_size, 0);
  expect(test.screen83.sound1, 0);
  expect(test.screen83.sound2, 0);
  expect(test.screen83.sound3, 0);
  expect(test.screen83.snd_timer, 0);
  expect(test.screen83.timer1, 0);
  expect(test.screen83.timer2, 0);
  expect(test.screen83.timer3, 0);
  expect(test.screen83.dsp_flg1, 0);
  expect(test.screen83.dsp_flg2, 0);
  expect(test.screen83.movie01_ext, 0);
  expect(test.screen83.movie02_ext, 0);
  expect(test.screen83.movie03_ext, 0);
  expect(test.screen83.movie04_ext, 0);
  expect(test.screen83.line_title, "");
  expect(test.screen83.line_title_ex, "");
  expect(test.screen83.line1, "");
  expect(test.screen83.line2, "");
  expect(test.screen83.line3, "");
  expect(test.screen83.line4, "");
  expect(test.screen83.line1_ex, "");
  expect(test.screen83.line2_ex, "");
  expect(test.screen83.line3_ex, "");
  expect(test.screen83.line4_ex, "");
  expect(test.screen83.sound_led1, 0);
  expect(test.screen83.sound_led2, 0);
  expect(test.screen83.sound_led3, 0);
  expect(test.screen84.title, "");
  expect(test.screen84.msg1, "");
  expect(test.screen84.msg2, "");
  expect(test.screen84.msg1_size, 0);
  expect(test.screen84.msg2_size, 0);
  expect(test.screen84.sound1, 0);
  expect(test.screen84.sound2, 0);
  expect(test.screen84.sound3, 0);
  expect(test.screen84.snd_timer, 0);
  expect(test.screen84.timer1, 0);
  expect(test.screen84.timer2, 0);
  expect(test.screen84.timer3, 0);
  expect(test.screen84.dsp_flg1, 0);
  expect(test.screen84.dsp_flg2, 0);
  expect(test.screen84.movie01_ext, 0);
  expect(test.screen84.movie02_ext, 0);
  expect(test.screen84.movie03_ext, 0);
  expect(test.screen84.movie04_ext, 0);
  expect(test.screen84.line_title, "");
  expect(test.screen84.line_title_ex, "");
  expect(test.screen84.line1, "");
  expect(test.screen84.line2, "");
  expect(test.screen84.line3, "");
  expect(test.screen84.line4, "");
  expect(test.screen84.line1_ex, "");
  expect(test.screen84.line2_ex, "");
  expect(test.screen84.line3_ex, "");
  expect(test.screen84.line4_ex, "");
  expect(test.screen84.sound_led1, 0);
  expect(test.screen84.sound_led2, 0);
  expect(test.screen84.sound_led3, 0);
  expect(test.screen85.title, "");
  expect(test.screen85.msg1, "");
  expect(test.screen85.msg2, "");
  expect(test.screen85.msg1_size, 0);
  expect(test.screen85.msg2_size, 0);
  expect(test.screen85.sound1, 0);
  expect(test.screen85.sound2, 0);
  expect(test.screen85.sound3, 0);
  expect(test.screen85.snd_timer, 0);
  expect(test.screen85.timer1, 0);
  expect(test.screen85.timer2, 0);
  expect(test.screen85.timer3, 0);
  expect(test.screen85.dsp_flg1, 0);
  expect(test.screen85.dsp_flg2, 0);
  expect(test.screen85.movie01_ext, 0);
  expect(test.screen85.movie02_ext, 0);
  expect(test.screen85.movie03_ext, 0);
  expect(test.screen85.movie04_ext, 0);
  expect(test.screen85.line_title, "");
  expect(test.screen85.line_title_ex, "");
  expect(test.screen85.line1, "");
  expect(test.screen85.line2, "");
  expect(test.screen85.line3, "");
  expect(test.screen85.line4, "");
  expect(test.screen85.line1_ex, "");
  expect(test.screen85.line2_ex, "");
  expect(test.screen85.line3_ex, "");
  expect(test.screen85.line4_ex, "");
  expect(test.screen85.sound_led1, 0);
  expect(test.screen85.sound_led2, 0);
  expect(test.screen85.sound_led3, 0);
  expect(test.screen86.title, "");
  expect(test.screen86.msg1, "");
  expect(test.screen86.msg2, "");
  expect(test.screen86.msg1_size, 0);
  expect(test.screen86.msg2_size, 0);
  expect(test.screen86.sound1, 0);
  expect(test.screen86.sound2, 0);
  expect(test.screen86.sound3, 0);
  expect(test.screen86.snd_timer, 0);
  expect(test.screen86.timer1, 0);
  expect(test.screen86.timer2, 0);
  expect(test.screen86.timer3, 0);
  expect(test.screen86.dsp_flg1, 0);
  expect(test.screen86.dsp_flg2, 0);
  expect(test.screen86.movie01_ext, 0);
  expect(test.screen86.movie02_ext, 0);
  expect(test.screen86.movie03_ext, 0);
  expect(test.screen86.movie04_ext, 0);
  expect(test.screen86.line_title, "");
  expect(test.screen86.line_title_ex, "");
  expect(test.screen86.line1, "");
  expect(test.screen86.line2, "");
  expect(test.screen86.line3, "");
  expect(test.screen86.line4, "");
  expect(test.screen86.line1_ex, "");
  expect(test.screen86.line2_ex, "");
  expect(test.screen86.line3_ex, "");
  expect(test.screen86.line4_ex, "");
  expect(test.screen86.sound_led1, 0);
  expect(test.screen86.sound_led2, 0);
  expect(test.screen86.sound_led3, 0);
  expect(test.screen87.title, "");
  expect(test.screen87.msg1, "");
  expect(test.screen87.msg2, "");
  expect(test.screen87.msg1_size, 0);
  expect(test.screen87.msg2_size, 0);
  expect(test.screen87.sound1, 0);
  expect(test.screen87.sound2, 0);
  expect(test.screen87.sound3, 0);
  expect(test.screen87.snd_timer, 0);
  expect(test.screen87.timer1, 0);
  expect(test.screen87.timer2, 0);
  expect(test.screen87.timer3, 0);
  expect(test.screen87.dsp_flg1, 0);
  expect(test.screen87.dsp_flg2, 0);
  expect(test.screen87.movie01_ext, 0);
  expect(test.screen87.movie02_ext, 0);
  expect(test.screen87.movie03_ext, 0);
  expect(test.screen87.movie04_ext, 0);
  expect(test.screen87.line_title, "");
  expect(test.screen87.line_title_ex, "");
  expect(test.screen87.line1, "");
  expect(test.screen87.line2, "");
  expect(test.screen87.line3, "");
  expect(test.screen87.line4, "");
  expect(test.screen87.line1_ex, "");
  expect(test.screen87.line2_ex, "");
  expect(test.screen87.line3_ex, "");
  expect(test.screen87.line4_ex, "");
  expect(test.screen87.sound_led1, 0);
  expect(test.screen87.sound_led2, 0);
  expect(test.screen87.sound_led3, 0);
  expect(test.screen88.title, "");
  expect(test.screen88.msg1, "");
  expect(test.screen88.msg2, "");
  expect(test.screen88.msg1_size, 0);
  expect(test.screen88.msg2_size, 0);
  expect(test.screen88.sound1, 0);
  expect(test.screen88.sound2, 0);
  expect(test.screen88.sound3, 0);
  expect(test.screen88.snd_timer, 0);
  expect(test.screen88.timer1, 0);
  expect(test.screen88.timer2, 0);
  expect(test.screen88.timer3, 0);
  expect(test.screen88.dsp_flg1, 0);
  expect(test.screen88.dsp_flg2, 0);
  expect(test.screen88.movie01_ext, 0);
  expect(test.screen88.movie02_ext, 0);
  expect(test.screen88.movie03_ext, 0);
  expect(test.screen88.movie04_ext, 0);
  expect(test.screen88.line_title, "");
  expect(test.screen88.line_title_ex, "");
  expect(test.screen88.line1, "");
  expect(test.screen88.line2, "");
  expect(test.screen88.line3, "");
  expect(test.screen88.line4, "");
  expect(test.screen88.line1_ex, "");
  expect(test.screen88.line2_ex, "");
  expect(test.screen88.line3_ex, "");
  expect(test.screen88.line4_ex, "");
  expect(test.screen88.sound_led1, 0);
  expect(test.screen88.sound_led2, 0);
  expect(test.screen88.sound_led3, 0);
  expect(test.screen89.title, "");
  expect(test.screen89.msg1, "");
  expect(test.screen89.msg2, "");
  expect(test.screen89.msg1_size, 0);
  expect(test.screen89.msg2_size, 0);
  expect(test.screen89.sound1, 0);
  expect(test.screen89.sound2, 0);
  expect(test.screen89.sound3, 0);
  expect(test.screen89.snd_timer, 0);
  expect(test.screen89.timer1, 0);
  expect(test.screen89.timer2, 0);
  expect(test.screen89.timer3, 0);
  expect(test.screen89.dsp_flg1, 0);
  expect(test.screen89.dsp_flg2, 0);
  expect(test.screen89.movie01_ext, 0);
  expect(test.screen89.movie02_ext, 0);
  expect(test.screen89.movie03_ext, 0);
  expect(test.screen89.movie04_ext, 0);
  expect(test.screen89.line_title, "");
  expect(test.screen89.line_title_ex, "");
  expect(test.screen89.line1, "");
  expect(test.screen89.line2, "");
  expect(test.screen89.line3, "");
  expect(test.screen89.line4, "");
  expect(test.screen89.line1_ex, "");
  expect(test.screen89.line2_ex, "");
  expect(test.screen89.line3_ex, "");
  expect(test.screen89.line4_ex, "");
  expect(test.screen89.sound_led1, 0);
  expect(test.screen89.sound_led2, 0);
  expect(test.screen89.sound_led3, 0);
  expect(test.screen90.title, "");
  expect(test.screen90.msg1, "");
  expect(test.screen90.msg2, "");
  expect(test.screen90.msg1_size, 0);
  expect(test.screen90.msg2_size, 0);
  expect(test.screen90.sound1, 0);
  expect(test.screen90.sound2, 0);
  expect(test.screen90.sound3, 0);
  expect(test.screen90.snd_timer, 0);
  expect(test.screen90.timer1, 0);
  expect(test.screen90.timer2, 0);
  expect(test.screen90.timer3, 0);
  expect(test.screen90.dsp_flg1, 0);
  expect(test.screen90.dsp_flg2, 0);
  expect(test.screen90.movie01_ext, 0);
  expect(test.screen90.movie02_ext, 0);
  expect(test.screen90.movie03_ext, 0);
  expect(test.screen90.movie04_ext, 0);
  expect(test.screen90.line_title, "");
  expect(test.screen90.line_title_ex, "");
  expect(test.screen90.line1, "");
  expect(test.screen90.line2, "");
  expect(test.screen90.line3, "");
  expect(test.screen90.line4, "");
  expect(test.screen90.line1_ex, "");
  expect(test.screen90.line2_ex, "");
  expect(test.screen90.line3_ex, "");
  expect(test.screen90.line4_ex, "");
  expect(test.screen90.sound_led1, 0);
  expect(test.screen90.sound_led2, 0);
  expect(test.screen90.sound_led3, 0);
  expect(test.screen91.title, "");
  expect(test.screen91.msg1, "");
  expect(test.screen91.msg2, "");
  expect(test.screen91.msg1_size, 0);
  expect(test.screen91.msg2_size, 0);
  expect(test.screen91.sound1, 0);
  expect(test.screen91.sound2, 0);
  expect(test.screen91.sound3, 0);
  expect(test.screen91.snd_timer, 0);
  expect(test.screen91.timer1, 0);
  expect(test.screen91.timer2, 0);
  expect(test.screen91.timer3, 0);
  expect(test.screen91.dsp_flg1, 0);
  expect(test.screen91.dsp_flg2, 0);
  expect(test.screen91.movie01_ext, 0);
  expect(test.screen91.movie02_ext, 0);
  expect(test.screen91.movie03_ext, 0);
  expect(test.screen91.movie04_ext, 0);
  expect(test.screen91.line_title, "");
  expect(test.screen91.line_title_ex, "");
  expect(test.screen91.line1, "");
  expect(test.screen91.line2, "");
  expect(test.screen91.line3, "");
  expect(test.screen91.line4, "");
  expect(test.screen91.line1_ex, "");
  expect(test.screen91.line2_ex, "");
  expect(test.screen91.line3_ex, "");
  expect(test.screen91.line4_ex, "");
  expect(test.screen91.sound_led1, 0);
  expect(test.screen91.sound_led2, 0);
  expect(test.screen91.sound_led3, 0);
  expect(test.screen92.title, "");
  expect(test.screen92.msg1, "");
  expect(test.screen92.msg2, "");
  expect(test.screen92.msg1_size, 0);
  expect(test.screen92.msg2_size, 0);
  expect(test.screen92.sound1, 0);
  expect(test.screen92.sound2, 0);
  expect(test.screen92.sound3, 0);
  expect(test.screen92.snd_timer, 0);
  expect(test.screen92.timer1, 0);
  expect(test.screen92.timer2, 0);
  expect(test.screen92.timer3, 0);
  expect(test.screen92.dsp_flg1, 0);
  expect(test.screen92.dsp_flg2, 0);
  expect(test.screen92.movie01_ext, 0);
  expect(test.screen92.movie02_ext, 0);
  expect(test.screen92.movie03_ext, 0);
  expect(test.screen92.movie04_ext, 0);
  expect(test.screen92.line_title, "");
  expect(test.screen92.line_title_ex, "");
  expect(test.screen92.line1, "");
  expect(test.screen92.line2, "");
  expect(test.screen92.line3, "");
  expect(test.screen92.line4, "");
  expect(test.screen92.line1_ex, "");
  expect(test.screen92.line2_ex, "");
  expect(test.screen92.line3_ex, "");
  expect(test.screen92.line4_ex, "");
  expect(test.screen92.sound_led1, 0);
  expect(test.screen92.sound_led2, 0);
  expect(test.screen92.sound_led3, 0);
  expect(test.screen93.title, "");
  expect(test.screen93.msg1, "");
  expect(test.screen93.msg2, "");
  expect(test.screen93.msg1_size, 0);
  expect(test.screen93.msg2_size, 0);
  expect(test.screen93.sound1, 0);
  expect(test.screen93.sound2, 0);
  expect(test.screen93.sound3, 0);
  expect(test.screen93.snd_timer, 0);
  expect(test.screen93.timer1, 0);
  expect(test.screen93.timer2, 0);
  expect(test.screen93.timer3, 0);
  expect(test.screen93.dsp_flg1, 0);
  expect(test.screen93.dsp_flg2, 0);
  expect(test.screen93.movie01_ext, 0);
  expect(test.screen93.movie02_ext, 0);
  expect(test.screen93.movie03_ext, 0);
  expect(test.screen93.movie04_ext, 0);
  expect(test.screen93.line_title, "");
  expect(test.screen93.line_title_ex, "");
  expect(test.screen93.line1, "");
  expect(test.screen93.line2, "");
  expect(test.screen93.line3, "");
  expect(test.screen93.line4, "");
  expect(test.screen93.line1_ex, "");
  expect(test.screen93.line2_ex, "");
  expect(test.screen93.line3_ex, "");
  expect(test.screen93.line4_ex, "");
  expect(test.screen93.sound_led1, 0);
  expect(test.screen93.sound_led2, 0);
  expect(test.screen93.sound_led3, 0);
  expect(test.screen94.title, "");
  expect(test.screen94.msg1, "");
  expect(test.screen94.msg2, "");
  expect(test.screen94.msg1_size, 0);
  expect(test.screen94.msg2_size, 0);
  expect(test.screen94.sound1, 0);
  expect(test.screen94.sound2, 0);
  expect(test.screen94.sound3, 0);
  expect(test.screen94.snd_timer, 0);
  expect(test.screen94.timer1, 0);
  expect(test.screen94.timer2, 0);
  expect(test.screen94.timer3, 0);
  expect(test.screen94.dsp_flg1, 0);
  expect(test.screen94.dsp_flg2, 0);
  expect(test.screen94.movie01_ext, 0);
  expect(test.screen94.movie02_ext, 0);
  expect(test.screen94.movie03_ext, 0);
  expect(test.screen94.movie04_ext, 0);
  expect(test.screen94.line_title, "");
  expect(test.screen94.line_title_ex, "");
  expect(test.screen94.line1, "");
  expect(test.screen94.line2, "");
  expect(test.screen94.line3, "");
  expect(test.screen94.line4, "");
  expect(test.screen94.line1_ex, "");
  expect(test.screen94.line2_ex, "");
  expect(test.screen94.line3_ex, "");
  expect(test.screen94.line4_ex, "");
  expect(test.screen94.sound_led1, 0);
  expect(test.screen94.sound_led2, 0);
  expect(test.screen94.sound_led3, 0);
  expect(test.screen95.title, "");
  expect(test.screen95.msg1, "");
  expect(test.screen95.msg2, "");
  expect(test.screen95.msg1_size, 0);
  expect(test.screen95.msg2_size, 0);
  expect(test.screen95.sound1, 0);
  expect(test.screen95.sound2, 0);
  expect(test.screen95.sound3, 0);
  expect(test.screen95.snd_timer, 0);
  expect(test.screen95.timer1, 0);
  expect(test.screen95.timer2, 0);
  expect(test.screen95.timer3, 0);
  expect(test.screen95.dsp_flg1, 0);
  expect(test.screen95.dsp_flg2, 0);
  expect(test.screen95.movie01_ext, 0);
  expect(test.screen95.movie02_ext, 0);
  expect(test.screen95.movie03_ext, 0);
  expect(test.screen95.movie04_ext, 0);
  expect(test.screen95.line_title, "");
  expect(test.screen95.line_title_ex, "");
  expect(test.screen95.line1, "");
  expect(test.screen95.line2, "");
  expect(test.screen95.line3, "");
  expect(test.screen95.line4, "");
  expect(test.screen95.line1_ex, "");
  expect(test.screen95.line2_ex, "");
  expect(test.screen95.line3_ex, "");
  expect(test.screen95.line4_ex, "");
  expect(test.screen95.sound_led1, 0);
  expect(test.screen95.sound_led2, 0);
  expect(test.screen95.sound_led3, 0);
  expect(test.screen96.title, "");
  expect(test.screen96.msg1, "");
  expect(test.screen96.msg2, "");
  expect(test.screen96.msg1_size, 0);
  expect(test.screen96.msg2_size, 0);
  expect(test.screen96.sound1, 0);
  expect(test.screen96.sound2, 0);
  expect(test.screen96.sound3, 0);
  expect(test.screen96.snd_timer, 0);
  expect(test.screen96.timer1, 0);
  expect(test.screen96.timer2, 0);
  expect(test.screen96.timer3, 0);
  expect(test.screen96.dsp_flg1, 0);
  expect(test.screen96.dsp_flg2, 0);
  expect(test.screen96.movie01_ext, 0);
  expect(test.screen96.movie02_ext, 0);
  expect(test.screen96.movie03_ext, 0);
  expect(test.screen96.movie04_ext, 0);
  expect(test.screen96.line_title, "");
  expect(test.screen96.line_title_ex, "");
  expect(test.screen96.line1, "");
  expect(test.screen96.line2, "");
  expect(test.screen96.line3, "");
  expect(test.screen96.line4, "");
  expect(test.screen96.line1_ex, "");
  expect(test.screen96.line2_ex, "");
  expect(test.screen96.line3_ex, "");
  expect(test.screen96.line4_ex, "");
  expect(test.screen96.sound_led1, 0);
  expect(test.screen96.sound_led2, 0);
  expect(test.screen96.sound_led3, 0);
  expect(test.screen97.title, "");
  expect(test.screen97.msg1, "");
  expect(test.screen97.msg2, "");
  expect(test.screen97.msg1_size, 0);
  expect(test.screen97.msg2_size, 0);
  expect(test.screen97.sound1, 0);
  expect(test.screen97.sound2, 0);
  expect(test.screen97.sound3, 0);
  expect(test.screen97.snd_timer, 0);
  expect(test.screen97.timer1, 0);
  expect(test.screen97.timer2, 0);
  expect(test.screen97.timer3, 0);
  expect(test.screen97.dsp_flg1, 0);
  expect(test.screen97.dsp_flg2, 0);
  expect(test.screen97.movie01_ext, 0);
  expect(test.screen97.movie02_ext, 0);
  expect(test.screen97.movie03_ext, 0);
  expect(test.screen97.movie04_ext, 0);
  expect(test.screen97.line_title, "");
  expect(test.screen97.line_title_ex, "");
  expect(test.screen97.line1, "");
  expect(test.screen97.line2, "");
  expect(test.screen97.line3, "");
  expect(test.screen97.line4, "");
  expect(test.screen97.line1_ex, "");
  expect(test.screen97.line2_ex, "");
  expect(test.screen97.line3_ex, "");
  expect(test.screen97.line4_ex, "");
  expect(test.screen97.sound_led1, 0);
  expect(test.screen97.sound_led2, 0);
  expect(test.screen97.sound_led3, 0);
  expect(test.screen98.title, "");
  expect(test.screen98.msg1, "");
  expect(test.screen98.msg2, "");
  expect(test.screen98.msg1_size, 0);
  expect(test.screen98.msg2_size, 0);
  expect(test.screen98.sound1, 0);
  expect(test.screen98.sound2, 0);
  expect(test.screen98.sound3, 0);
  expect(test.screen98.snd_timer, 0);
  expect(test.screen98.timer1, 0);
  expect(test.screen98.timer2, 0);
  expect(test.screen98.timer3, 0);
  expect(test.screen98.dsp_flg1, 0);
  expect(test.screen98.dsp_flg2, 0);
  expect(test.screen98.movie01_ext, 0);
  expect(test.screen98.movie02_ext, 0);
  expect(test.screen98.movie03_ext, 0);
  expect(test.screen98.movie04_ext, 0);
  expect(test.screen98.line_title, "");
  expect(test.screen98.line_title_ex, "");
  expect(test.screen98.line1, "");
  expect(test.screen98.line2, "");
  expect(test.screen98.line3, "");
  expect(test.screen98.line4, "");
  expect(test.screen98.line1_ex, "");
  expect(test.screen98.line2_ex, "");
  expect(test.screen98.line3_ex, "");
  expect(test.screen98.line4_ex, "");
  expect(test.screen98.sound_led1, 0);
  expect(test.screen98.sound_led2, 0);
  expect(test.screen98.sound_led3, 0);
  expect(test.screen99.title, "");
  expect(test.screen99.msg1, "");
  expect(test.screen99.msg2, "");
  expect(test.screen99.msg1_size, 0);
  expect(test.screen99.msg2_size, 0);
  expect(test.screen99.sound1, 0);
  expect(test.screen99.sound2, 0);
  expect(test.screen99.sound3, 0);
  expect(test.screen99.snd_timer, 0);
  expect(test.screen99.timer1, 0);
  expect(test.screen99.timer2, 0);
  expect(test.screen99.timer3, 0);
  expect(test.screen99.dsp_flg1, 0);
  expect(test.screen99.dsp_flg2, 0);
  expect(test.screen99.movie01_ext, 0);
  expect(test.screen99.movie02_ext, 0);
  expect(test.screen99.movie03_ext, 0);
  expect(test.screen99.movie04_ext, 0);
  expect(test.screen99.line_title, "");
  expect(test.screen99.line_title_ex, "");
  expect(test.screen99.line1, "");
  expect(test.screen99.line2, "");
  expect(test.screen99.line3, "");
  expect(test.screen99.line4, "");
  expect(test.screen99.line1_ex, "");
  expect(test.screen99.line2_ex, "");
  expect(test.screen99.line3_ex, "");
  expect(test.screen99.line4_ex, "");
  expect(test.screen99.sound_led1, 0);
  expect(test.screen99.sound_led2, 0);
  expect(test.screen99.sound_led3, 0);
  expect(test.screen100.title, "");
  expect(test.screen100.msg1, "");
  expect(test.screen100.msg2, "");
  expect(test.screen100.msg1_size, 0);
  expect(test.screen100.msg2_size, 0);
  expect(test.screen100.sound1, 0);
  expect(test.screen100.sound2, 0);
  expect(test.screen100.sound3, 0);
  expect(test.screen100.snd_timer, 0);
  expect(test.screen100.timer1, 0);
  expect(test.screen100.timer2, 0);
  expect(test.screen100.timer3, 0);
  expect(test.screen100.dsp_flg1, 0);
  expect(test.screen100.dsp_flg2, 0);
  expect(test.screen100.movie01_ext, 0);
  expect(test.screen100.movie02_ext, 0);
  expect(test.screen100.movie03_ext, 0);
  expect(test.screen100.movie04_ext, 0);
  expect(test.screen100.line_title, "");
  expect(test.screen100.line_title_ex, "");
  expect(test.screen100.line1, "");
  expect(test.screen100.line2, "");
  expect(test.screen100.line3, "");
  expect(test.screen100.line4, "");
  expect(test.screen100.line1_ex, "");
  expect(test.screen100.line2_ex, "");
  expect(test.screen100.line3_ex, "");
  expect(test.screen100.line4_ex, "");
  expect(test.screen100.sound_led1, 0);
  expect(test.screen100.sound_led2, 0);
  expect(test.screen100.sound_led3, 0);
  expect(test.screen101.title, "");
  expect(test.screen101.msg1, "");
  expect(test.screen101.msg2, "");
  expect(test.screen101.msg1_size, 0);
  expect(test.screen101.msg2_size, 0);
  expect(test.screen101.sound1, 0);
  expect(test.screen101.sound2, 0);
  expect(test.screen101.sound3, 0);
  expect(test.screen101.snd_timer, 0);
  expect(test.screen101.timer1, 0);
  expect(test.screen101.timer2, 0);
  expect(test.screen101.timer3, 0);
  expect(test.screen101.dsp_flg1, 0);
  expect(test.screen101.dsp_flg2, 0);
  expect(test.screen101.movie01_ext, 0);
  expect(test.screen101.movie02_ext, 0);
  expect(test.screen101.movie03_ext, 0);
  expect(test.screen101.movie04_ext, 0);
  expect(test.screen101.line_title, "");
  expect(test.screen101.line_title_ex, "");
  expect(test.screen101.line1, "");
  expect(test.screen101.line2, "");
  expect(test.screen101.line3, "");
  expect(test.screen101.line4, "");
  expect(test.screen101.line1_ex, "");
  expect(test.screen101.line2_ex, "");
  expect(test.screen101.line3_ex, "");
  expect(test.screen101.line4_ex, "");
  expect(test.screen101.sound_led1, 0);
  expect(test.screen101.sound_led2, 0);
  expect(test.screen101.sound_led3, 0);
  expect(test.screen102.title, "");
  expect(test.screen102.msg1, "");
  expect(test.screen102.msg2, "");
  expect(test.screen102.msg1_size, 0);
  expect(test.screen102.msg2_size, 0);
  expect(test.screen102.sound1, 0);
  expect(test.screen102.sound2, 0);
  expect(test.screen102.sound3, 0);
  expect(test.screen102.snd_timer, 0);
  expect(test.screen102.timer1, 0);
  expect(test.screen102.timer2, 0);
  expect(test.screen102.timer3, 0);
  expect(test.screen102.dsp_flg1, 0);
  expect(test.screen102.dsp_flg2, 0);
  expect(test.screen102.movie01_ext, 0);
  expect(test.screen102.movie02_ext, 0);
  expect(test.screen102.movie03_ext, 0);
  expect(test.screen102.movie04_ext, 0);
  expect(test.screen102.line_title, "");
  expect(test.screen102.line_title_ex, "");
  expect(test.screen102.line1, "");
  expect(test.screen102.line2, "");
  expect(test.screen102.line3, "");
  expect(test.screen102.line4, "");
  expect(test.screen102.line1_ex, "");
  expect(test.screen102.line2_ex, "");
  expect(test.screen102.line3_ex, "");
  expect(test.screen102.line4_ex, "");
  expect(test.screen102.sound_led1, 0);
  expect(test.screen102.sound_led2, 0);
  expect(test.screen102.sound_led3, 0);
  expect(test.screen103.title, "");
  expect(test.screen103.msg1, "");
  expect(test.screen103.msg2, "");
  expect(test.screen103.msg1_size, 0);
  expect(test.screen103.msg2_size, 0);
  expect(test.screen103.sound1, 0);
  expect(test.screen103.sound2, 0);
  expect(test.screen103.sound3, 0);
  expect(test.screen103.snd_timer, 0);
  expect(test.screen103.timer1, 0);
  expect(test.screen103.timer2, 0);
  expect(test.screen103.timer3, 0);
  expect(test.screen103.dsp_flg1, 0);
  expect(test.screen103.dsp_flg2, 0);
  expect(test.screen103.movie01_ext, 0);
  expect(test.screen103.movie02_ext, 0);
  expect(test.screen103.movie03_ext, 0);
  expect(test.screen103.movie04_ext, 0);
  expect(test.screen103.line_title, "");
  expect(test.screen103.line_title_ex, "");
  expect(test.screen103.line1, "");
  expect(test.screen103.line2, "");
  expect(test.screen103.line3, "");
  expect(test.screen103.line4, "");
  expect(test.screen103.line1_ex, "");
  expect(test.screen103.line2_ex, "");
  expect(test.screen103.line3_ex, "");
  expect(test.screen103.line4_ex, "");
  expect(test.screen103.sound_led1, 0);
  expect(test.screen103.sound_led2, 0);
  expect(test.screen103.sound_led3, 0);
  expect(test.screen104.title, "");
  expect(test.screen104.msg1, "");
  expect(test.screen104.msg2, "");
  expect(test.screen104.msg1_size, 0);
  expect(test.screen104.msg2_size, 0);
  expect(test.screen104.sound1, 0);
  expect(test.screen104.sound2, 0);
  expect(test.screen104.sound3, 0);
  expect(test.screen104.snd_timer, 0);
  expect(test.screen104.timer1, 0);
  expect(test.screen104.timer2, 0);
  expect(test.screen104.timer3, 0);
  expect(test.screen104.dsp_flg1, 0);
  expect(test.screen104.dsp_flg2, 0);
  expect(test.screen104.movie01_ext, 0);
  expect(test.screen104.movie02_ext, 0);
  expect(test.screen104.movie03_ext, 0);
  expect(test.screen104.movie04_ext, 0);
  expect(test.screen104.line_title, "");
  expect(test.screen104.line_title_ex, "");
  expect(test.screen104.line1, "");
  expect(test.screen104.line2, "");
  expect(test.screen104.line3, "");
  expect(test.screen104.line4, "");
  expect(test.screen104.line1_ex, "");
  expect(test.screen104.line2_ex, "");
  expect(test.screen104.line3_ex, "");
  expect(test.screen104.line4_ex, "");
  expect(test.screen104.sound_led1, 0);
  expect(test.screen104.sound_led2, 0);
  expect(test.screen104.sound_led3, 0);
  expect(test.screen105.title, "");
  expect(test.screen105.msg1, "");
  expect(test.screen105.msg2, "");
  expect(test.screen105.msg1_size, 0);
  expect(test.screen105.msg2_size, 0);
  expect(test.screen105.sound1, 0);
  expect(test.screen105.sound2, 0);
  expect(test.screen105.sound3, 0);
  expect(test.screen105.snd_timer, 0);
  expect(test.screen105.timer1, 0);
  expect(test.screen105.timer2, 0);
  expect(test.screen105.timer3, 0);
  expect(test.screen105.dsp_flg1, 0);
  expect(test.screen105.dsp_flg2, 0);
  expect(test.screen105.movie01_ext, 0);
  expect(test.screen105.movie02_ext, 0);
  expect(test.screen105.movie03_ext, 0);
  expect(test.screen105.movie04_ext, 0);
  expect(test.screen105.line_title, "");
  expect(test.screen105.line_title_ex, "");
  expect(test.screen105.line1, "");
  expect(test.screen105.line2, "");
  expect(test.screen105.line3, "");
  expect(test.screen105.line4, "");
  expect(test.screen105.line1_ex, "");
  expect(test.screen105.line2_ex, "");
  expect(test.screen105.line3_ex, "");
  expect(test.screen105.line4_ex, "");
  expect(test.screen105.sound_led1, 0);
  expect(test.screen105.sound_led2, 0);
  expect(test.screen105.sound_led3, 0);
  expect(test.screen106.title, "");
  expect(test.screen106.msg1, "");
  expect(test.screen106.msg2, "");
  expect(test.screen106.msg1_size, 0);
  expect(test.screen106.msg2_size, 0);
  expect(test.screen106.sound1, 0);
  expect(test.screen106.sound2, 0);
  expect(test.screen106.sound3, 0);
  expect(test.screen106.snd_timer, 0);
  expect(test.screen106.timer1, 0);
  expect(test.screen106.timer2, 0);
  expect(test.screen106.timer3, 0);
  expect(test.screen106.dsp_flg1, 0);
  expect(test.screen106.dsp_flg2, 0);
  expect(test.screen106.movie01_ext, 0);
  expect(test.screen106.movie02_ext, 0);
  expect(test.screen106.movie03_ext, 0);
  expect(test.screen106.movie04_ext, 0);
  expect(test.screen106.line_title, "");
  expect(test.screen106.line_title_ex, "");
  expect(test.screen106.line1, "");
  expect(test.screen106.line2, "");
  expect(test.screen106.line3, "");
  expect(test.screen106.line4, "");
  expect(test.screen106.line1_ex, "");
  expect(test.screen106.line2_ex, "");
  expect(test.screen106.line3_ex, "");
  expect(test.screen106.line4_ex, "");
  expect(test.screen106.sound_led1, 0);
  expect(test.screen106.sound_led2, 0);
  expect(test.screen106.sound_led3, 0);
  expect(test.screen107.title, "");
  expect(test.screen107.msg1, "");
  expect(test.screen107.msg2, "");
  expect(test.screen107.msg1_size, 0);
  expect(test.screen107.msg2_size, 0);
  expect(test.screen107.sound1, 0);
  expect(test.screen107.sound2, 0);
  expect(test.screen107.sound3, 0);
  expect(test.screen107.snd_timer, 0);
  expect(test.screen107.timer1, 0);
  expect(test.screen107.timer2, 0);
  expect(test.screen107.timer3, 0);
  expect(test.screen107.dsp_flg1, 0);
  expect(test.screen107.dsp_flg2, 0);
  expect(test.screen107.movie01_ext, 0);
  expect(test.screen107.movie02_ext, 0);
  expect(test.screen107.movie03_ext, 0);
  expect(test.screen107.movie04_ext, 0);
  expect(test.screen107.line_title, "");
  expect(test.screen107.line_title_ex, "");
  expect(test.screen107.line1, "");
  expect(test.screen107.line2, "");
  expect(test.screen107.line3, "");
  expect(test.screen107.line4, "");
  expect(test.screen107.line1_ex, "");
  expect(test.screen107.line2_ex, "");
  expect(test.screen107.line3_ex, "");
  expect(test.screen107.line4_ex, "");
  expect(test.screen107.sound_led1, 0);
  expect(test.screen107.sound_led2, 0);
  expect(test.screen107.sound_led3, 0);
  expect(test.screen109.title, "");
  expect(test.screen109.msg1, "");
  expect(test.screen109.msg2, "");
  expect(test.screen109.msg1_size, 0);
  expect(test.screen109.msg2_size, 0);
  expect(test.screen109.sound1, 0);
  expect(test.screen109.sound2, 0);
  expect(test.screen109.sound3, 0);
  expect(test.screen109.snd_timer, 0);
  expect(test.screen109.timer1, 0);
  expect(test.screen109.timer2, 0);
  expect(test.screen109.timer3, 0);
  expect(test.screen109.dsp_flg1, 0);
  expect(test.screen109.dsp_flg2, 0);
  expect(test.screen109.movie01_ext, 0);
  expect(test.screen109.movie02_ext, 0);
  expect(test.screen109.movie03_ext, 0);
  expect(test.screen109.movie04_ext, 0);
  expect(test.screen109.line_title, "");
  expect(test.screen109.line_title_ex, "");
  expect(test.screen109.line1, "");
  expect(test.screen109.line2, "");
  expect(test.screen109.line3, "");
  expect(test.screen109.line4, "");
  expect(test.screen109.line1_ex, "");
  expect(test.screen109.line2_ex, "");
  expect(test.screen109.line3_ex, "");
  expect(test.screen109.line4_ex, "");
  expect(test.screen109.sound_led1, 0);
  expect(test.screen109.sound_led2, 0);
  expect(test.screen109.sound_led3, 0);
  expect(test.screen111.title, "");
  expect(test.screen111.msg1, "");
  expect(test.screen111.msg2, "");
  expect(test.screen111.msg1_size, 0);
  expect(test.screen111.msg2_size, 0);
  expect(test.screen111.sound1, 0);
  expect(test.screen111.sound2, 0);
  expect(test.screen111.sound3, 0);
  expect(test.screen111.snd_timer, 0);
  expect(test.screen111.timer1, 0);
  expect(test.screen111.timer2, 0);
  expect(test.screen111.timer3, 0);
  expect(test.screen111.dsp_flg1, 0);
  expect(test.screen111.dsp_flg2, 0);
  expect(test.screen111.movie01_ext, 0);
  expect(test.screen111.movie02_ext, 0);
  expect(test.screen111.movie03_ext, 0);
  expect(test.screen111.movie04_ext, 0);
  expect(test.screen111.line_title, "");
  expect(test.screen111.line_title_ex, "");
  expect(test.screen111.line1, "");
  expect(test.screen111.line2, "");
  expect(test.screen111.line3, "");
  expect(test.screen111.line4, "");
  expect(test.screen111.line1_ex, "");
  expect(test.screen111.line2_ex, "");
  expect(test.screen111.line3_ex, "");
  expect(test.screen111.line4_ex, "");
  expect(test.screen111.sound_led1, 0);
  expect(test.screen111.sound_led2, 0);
  expect(test.screen111.sound_led3, 0);
  expect(test.screen112.title, "");
  expect(test.screen112.msg1, "");
  expect(test.screen112.msg2, "");
  expect(test.screen112.msg1_size, 0);
  expect(test.screen112.msg2_size, 0);
  expect(test.screen112.sound1, 0);
  expect(test.screen112.sound2, 0);
  expect(test.screen112.sound3, 0);
  expect(test.screen112.snd_timer, 0);
  expect(test.screen112.timer1, 0);
  expect(test.screen112.timer2, 0);
  expect(test.screen112.timer3, 0);
  expect(test.screen112.dsp_flg1, 0);
  expect(test.screen112.dsp_flg2, 0);
  expect(test.screen112.movie01_ext, 0);
  expect(test.screen112.movie02_ext, 0);
  expect(test.screen112.movie03_ext, 0);
  expect(test.screen112.movie04_ext, 0);
  expect(test.screen112.line_title, "");
  expect(test.screen112.line_title_ex, "");
  expect(test.screen112.line1, "");
  expect(test.screen112.line2, "");
  expect(test.screen112.line3, "");
  expect(test.screen112.line4, "");
  expect(test.screen112.line1_ex, "");
  expect(test.screen112.line2_ex, "");
  expect(test.screen112.line3_ex, "");
  expect(test.screen112.line4_ex, "");
  expect(test.screen112.sound_led1, 0);
  expect(test.screen112.sound_led2, 0);
  expect(test.screen112.sound_led3, 0);
  expect(test.screen113.title, "");
  expect(test.screen113.msg1, "");
  expect(test.screen113.msg2, "");
  expect(test.screen113.msg1_size, 0);
  expect(test.screen113.msg2_size, 0);
  expect(test.screen113.sound1, 0);
  expect(test.screen113.sound2, 0);
  expect(test.screen113.sound3, 0);
  expect(test.screen113.snd_timer, 0);
  expect(test.screen113.timer1, 0);
  expect(test.screen113.timer2, 0);
  expect(test.screen113.timer3, 0);
  expect(test.screen113.dsp_flg1, 0);
  expect(test.screen113.dsp_flg2, 0);
  expect(test.screen113.movie01_ext, 0);
  expect(test.screen113.movie02_ext, 0);
  expect(test.screen113.movie03_ext, 0);
  expect(test.screen113.movie04_ext, 0);
  expect(test.screen113.line_title, "");
  expect(test.screen113.line_title_ex, "");
  expect(test.screen113.line1, "");
  expect(test.screen113.line2, "");
  expect(test.screen113.line3, "");
  expect(test.screen113.line4, "");
  expect(test.screen113.line1_ex, "");
  expect(test.screen113.line2_ex, "");
  expect(test.screen113.line3_ex, "");
  expect(test.screen113.line4_ex, "");
  expect(test.screen113.sound_led1, 0);
  expect(test.screen113.sound_led2, 0);
  expect(test.screen113.sound_led3, 0);
  expect(test.screen114.title, "");
  expect(test.screen114.msg1, "");
  expect(test.screen114.msg2, "");
  expect(test.screen114.msg1_size, 0);
  expect(test.screen114.msg2_size, 0);
  expect(test.screen114.sound1, 0);
  expect(test.screen114.sound2, 0);
  expect(test.screen114.sound3, 0);
  expect(test.screen114.snd_timer, 0);
  expect(test.screen114.timer1, 0);
  expect(test.screen114.timer2, 0);
  expect(test.screen114.timer3, 0);
  expect(test.screen114.dsp_flg1, 0);
  expect(test.screen114.dsp_flg2, 0);
  expect(test.screen114.movie01_ext, 0);
  expect(test.screen114.movie02_ext, 0);
  expect(test.screen114.movie03_ext, 0);
  expect(test.screen114.movie04_ext, 0);
  expect(test.screen114.line_title, "");
  expect(test.screen114.line_title_ex, "");
  expect(test.screen114.line1, "");
  expect(test.screen114.line2, "");
  expect(test.screen114.line3, "");
  expect(test.screen114.line4, "");
  expect(test.screen114.line1_ex, "");
  expect(test.screen114.line2_ex, "");
  expect(test.screen114.line3_ex, "");
  expect(test.screen114.line4_ex, "");
  expect(test.screen114.sound_led1, 0);
  expect(test.screen114.sound_led2, 0);
  expect(test.screen114.sound_led3, 0);
  expect(test.screen115.title, "");
  expect(test.screen115.msg1, "");
  expect(test.screen115.msg2, "");
  expect(test.screen115.msg1_size, 0);
  expect(test.screen115.msg2_size, 0);
  expect(test.screen115.sound1, 0);
  expect(test.screen115.sound2, 0);
  expect(test.screen115.sound3, 0);
  expect(test.screen115.snd_timer, 0);
  expect(test.screen115.timer1, 0);
  expect(test.screen115.timer2, 0);
  expect(test.screen115.timer3, 0);
  expect(test.screen115.dsp_flg1, 0);
  expect(test.screen115.dsp_flg2, 0);
  expect(test.screen115.movie01_ext, 0);
  expect(test.screen115.movie02_ext, 0);
  expect(test.screen115.movie03_ext, 0);
  expect(test.screen115.movie04_ext, 0);
  expect(test.screen115.line_title, "");
  expect(test.screen115.line_title_ex, "");
  expect(test.screen115.line1, "");
  expect(test.screen115.line2, "");
  expect(test.screen115.line3, "");
  expect(test.screen115.line4, "");
  expect(test.screen115.line1_ex, "");
  expect(test.screen115.line2_ex, "");
  expect(test.screen115.line3_ex, "");
  expect(test.screen115.line4_ex, "");
  expect(test.screen115.sound_led1, 0);
  expect(test.screen115.sound_led2, 0);
  expect(test.screen115.sound_led3, 0);
  expect(test.screen116.title, "");
  expect(test.screen116.msg1, "");
  expect(test.screen116.msg2, "");
  expect(test.screen116.msg1_size, 0);
  expect(test.screen116.msg2_size, 0);
  expect(test.screen116.sound1, 0);
  expect(test.screen116.sound2, 0);
  expect(test.screen116.sound3, 0);
  expect(test.screen116.snd_timer, 0);
  expect(test.screen116.timer1, 0);
  expect(test.screen116.timer2, 0);
  expect(test.screen116.timer3, 0);
  expect(test.screen116.dsp_flg1, 0);
  expect(test.screen116.dsp_flg2, 0);
  expect(test.screen116.movie01_ext, 0);
  expect(test.screen116.movie02_ext, 0);
  expect(test.screen116.movie03_ext, 0);
  expect(test.screen116.movie04_ext, 0);
  expect(test.screen116.line_title, "");
  expect(test.screen116.line_title_ex, "");
  expect(test.screen116.line1, "");
  expect(test.screen116.line2, "");
  expect(test.screen116.line3, "");
  expect(test.screen116.line4, "");
  expect(test.screen116.line1_ex, "");
  expect(test.screen116.line2_ex, "");
  expect(test.screen116.line3_ex, "");
  expect(test.screen116.line4_ex, "");
  expect(test.screen116.sound_led1, 0);
  expect(test.screen116.sound_led2, 0);
  expect(test.screen116.sound_led3, 0);
  expect(test.screen117.title, "");
  expect(test.screen117.msg1, "");
  expect(test.screen117.msg2, "");
  expect(test.screen117.msg1_size, 0);
  expect(test.screen117.msg2_size, 0);
  expect(test.screen117.sound1, 0);
  expect(test.screen117.sound2, 0);
  expect(test.screen117.sound3, 0);
  expect(test.screen117.snd_timer, 0);
  expect(test.screen117.timer1, 0);
  expect(test.screen117.timer2, 0);
  expect(test.screen117.timer3, 0);
  expect(test.screen117.dsp_flg1, 0);
  expect(test.screen117.dsp_flg2, 0);
  expect(test.screen117.movie01_ext, 0);
  expect(test.screen117.movie02_ext, 0);
  expect(test.screen117.movie03_ext, 0);
  expect(test.screen117.movie04_ext, 0);
  expect(test.screen117.line_title, "");
  expect(test.screen117.line_title_ex, "");
  expect(test.screen117.line1, "");
  expect(test.screen117.line2, "");
  expect(test.screen117.line3, "");
  expect(test.screen117.line4, "");
  expect(test.screen117.line1_ex, "");
  expect(test.screen117.line2_ex, "");
  expect(test.screen117.line3_ex, "");
  expect(test.screen117.line4_ex, "");
  expect(test.screen117.sound_led1, 0);
  expect(test.screen117.sound_led2, 0);
  expect(test.screen117.sound_led3, 0);
  expect(test.screen118.title, "");
  expect(test.screen118.msg1, "");
  expect(test.screen118.msg2, "");
  expect(test.screen118.msg1_size, 0);
  expect(test.screen118.msg2_size, 0);
  expect(test.screen118.sound1, 0);
  expect(test.screen118.sound2, 0);
  expect(test.screen118.sound3, 0);
  expect(test.screen118.snd_timer, 0);
  expect(test.screen118.timer1, 0);
  expect(test.screen118.timer2, 0);
  expect(test.screen118.timer3, 0);
  expect(test.screen118.dsp_flg1, 0);
  expect(test.screen118.dsp_flg2, 0);
  expect(test.screen118.movie01_ext, 0);
  expect(test.screen118.movie02_ext, 0);
  expect(test.screen118.movie03_ext, 0);
  expect(test.screen118.movie04_ext, 0);
  expect(test.screen118.line_title, "");
  expect(test.screen118.line_title_ex, "");
  expect(test.screen118.line1, "");
  expect(test.screen118.line2, "");
  expect(test.screen118.line3, "");
  expect(test.screen118.line4, "");
  expect(test.screen118.line1_ex, "");
  expect(test.screen118.line2_ex, "");
  expect(test.screen118.line3_ex, "");
  expect(test.screen118.line4_ex, "");
  expect(test.screen118.sound_led1, 0);
  expect(test.screen118.sound_led2, 0);
  expect(test.screen118.sound_led3, 0);
  expect(test.screen119.title, "");
  expect(test.screen119.msg1, "");
  expect(test.screen119.msg2, "");
  expect(test.screen119.msg1_size, 0);
  expect(test.screen119.msg2_size, 0);
  expect(test.screen119.sound1, 0);
  expect(test.screen119.sound2, 0);
  expect(test.screen119.sound3, 0);
  expect(test.screen119.snd_timer, 0);
  expect(test.screen119.timer1, 0);
  expect(test.screen119.timer2, 0);
  expect(test.screen119.timer3, 0);
  expect(test.screen119.dsp_flg1, 0);
  expect(test.screen119.dsp_flg2, 0);
  expect(test.screen119.movie01_ext, 0);
  expect(test.screen119.movie02_ext, 0);
  expect(test.screen119.movie03_ext, 0);
  expect(test.screen119.movie04_ext, 0);
  expect(test.screen119.line_title, "");
  expect(test.screen119.line_title_ex, "");
  expect(test.screen119.line1, "");
  expect(test.screen119.line2, "");
  expect(test.screen119.line3, "");
  expect(test.screen119.line4, "");
  expect(test.screen119.line1_ex, "");
  expect(test.screen119.line2_ex, "");
  expect(test.screen119.line3_ex, "");
  expect(test.screen119.line4_ex, "");
  expect(test.screen119.sound_led1, 0);
  expect(test.screen119.sound_led2, 0);
  expect(test.screen119.sound_led3, 0);
  expect(test.screen120.title, "");
  expect(test.screen120.msg1, "");
  expect(test.screen120.msg2, "");
  expect(test.screen120.msg1_size, 0);
  expect(test.screen120.msg2_size, 0);
  expect(test.screen120.sound1, 0);
  expect(test.screen120.sound2, 0);
  expect(test.screen120.sound3, 0);
  expect(test.screen120.snd_timer, 0);
  expect(test.screen120.timer1, 0);
  expect(test.screen120.timer2, 0);
  expect(test.screen120.timer3, 0);
  expect(test.screen120.dsp_flg1, 0);
  expect(test.screen120.dsp_flg2, 0);
  expect(test.screen120.movie01_ext, 0);
  expect(test.screen120.movie02_ext, 0);
  expect(test.screen120.movie03_ext, 0);
  expect(test.screen120.movie04_ext, 0);
  expect(test.screen120.line_title, "");
  expect(test.screen120.line_title_ex, "");
  expect(test.screen120.line1, "");
  expect(test.screen120.line2, "");
  expect(test.screen120.line3, "");
  expect(test.screen120.line4, "");
  expect(test.screen120.line1_ex, "");
  expect(test.screen120.line2_ex, "");
  expect(test.screen120.line3_ex, "");
  expect(test.screen120.line4_ex, "");
  expect(test.screen120.sound_led1, 0);
  expect(test.screen120.sound_led2, 0);
  expect(test.screen120.sound_led3, 0);
  expect(test.screen121.title, "");
  expect(test.screen121.msg1, "");
  expect(test.screen121.msg2, "");
  expect(test.screen121.msg1_size, 0);
  expect(test.screen121.msg2_size, 0);
  expect(test.screen121.sound1, 0);
  expect(test.screen121.sound2, 0);
  expect(test.screen121.sound3, 0);
  expect(test.screen121.snd_timer, 0);
  expect(test.screen121.timer1, 0);
  expect(test.screen121.timer2, 0);
  expect(test.screen121.timer3, 0);
  expect(test.screen121.dsp_flg1, 0);
  expect(test.screen121.dsp_flg2, 0);
  expect(test.screen121.movie01_ext, 0);
  expect(test.screen121.movie02_ext, 0);
  expect(test.screen121.movie03_ext, 0);
  expect(test.screen121.movie04_ext, 0);
  expect(test.screen121.line_title, "");
  expect(test.screen121.line_title_ex, "");
  expect(test.screen121.line1, "");
  expect(test.screen121.line2, "");
  expect(test.screen121.line3, "");
  expect(test.screen121.line4, "");
  expect(test.screen121.line1_ex, "");
  expect(test.screen121.line2_ex, "");
  expect(test.screen121.line3_ex, "");
  expect(test.screen121.line4_ex, "");
  expect(test.screen121.sound_led1, 0);
  expect(test.screen121.sound_led2, 0);
  expect(test.screen121.sound_led3, 0);
  expect(test.screen122.title, "");
  expect(test.screen122.msg1, "");
  expect(test.screen122.msg2, "");
  expect(test.screen122.msg1_size, 0);
  expect(test.screen122.msg2_size, 0);
  expect(test.screen122.sound1, 0);
  expect(test.screen122.sound2, 0);
  expect(test.screen122.sound3, 0);
  expect(test.screen122.snd_timer, 0);
  expect(test.screen122.timer1, 0);
  expect(test.screen122.timer2, 0);
  expect(test.screen122.timer3, 0);
  expect(test.screen122.dsp_flg1, 0);
  expect(test.screen122.dsp_flg2, 0);
  expect(test.screen122.movie01_ext, 0);
  expect(test.screen122.movie02_ext, 0);
  expect(test.screen122.movie03_ext, 0);
  expect(test.screen122.movie04_ext, 0);
  expect(test.screen122.line_title, "");
  expect(test.screen122.line_title_ex, "");
  expect(test.screen122.line1, "");
  expect(test.screen122.line2, "");
  expect(test.screen122.line3, "");
  expect(test.screen122.line4, "");
  expect(test.screen122.line1_ex, "");
  expect(test.screen122.line2_ex, "");
  expect(test.screen122.line3_ex, "");
  expect(test.screen122.line4_ex, "");
  expect(test.screen122.sound_led1, 0);
  expect(test.screen122.sound_led2, 0);
  expect(test.screen122.sound_led3, 0);
  expect(test.screen123.title, "");
  expect(test.screen123.msg1, "");
  expect(test.screen123.msg2, "");
  expect(test.screen123.msg1_size, 0);
  expect(test.screen123.msg2_size, 0);
  expect(test.screen123.sound1, 0);
  expect(test.screen123.sound2, 0);
  expect(test.screen123.sound3, 0);
  expect(test.screen123.snd_timer, 0);
  expect(test.screen123.timer1, 0);
  expect(test.screen123.timer2, 0);
  expect(test.screen123.timer3, 0);
  expect(test.screen123.dsp_flg1, 0);
  expect(test.screen123.dsp_flg2, 0);
  expect(test.screen123.movie01_ext, 0);
  expect(test.screen123.movie02_ext, 0);
  expect(test.screen123.movie03_ext, 0);
  expect(test.screen123.movie04_ext, 0);
  expect(test.screen123.line_title, "");
  expect(test.screen123.line_title_ex, "");
  expect(test.screen123.line1, "");
  expect(test.screen123.line2, "");
  expect(test.screen123.line3, "");
  expect(test.screen123.line4, "");
  expect(test.screen123.line1_ex, "");
  expect(test.screen123.line2_ex, "");
  expect(test.screen123.line3_ex, "");
  expect(test.screen123.line4_ex, "");
  expect(test.screen123.sound_led1, 0);
  expect(test.screen123.sound_led2, 0);
  expect(test.screen123.sound_led3, 0);
  expect(test.screen124.title, "");
  expect(test.screen124.msg1, "");
  expect(test.screen124.msg2, "");
  expect(test.screen124.msg1_size, 0);
  expect(test.screen124.msg2_size, 0);
  expect(test.screen124.sound1, 0);
  expect(test.screen124.sound2, "");
  expect(test.screen124.sound3, "");
  expect(test.screen124.snd_timer, 0);
  expect(test.screen124.timer1, 0);
  expect(test.screen124.timer2, 0);
  expect(test.screen124.timer3, 0);
  expect(test.screen124.dsp_flg1, 0);
  expect(test.screen124.dsp_flg2, 0);
  expect(test.screen124.movie01_ext, 0);
  expect(test.screen124.movie02_ext, 0);
  expect(test.screen124.movie03_ext, 0);
  expect(test.screen124.movie04_ext, 0);
  expect(test.screen124.line_title, "");
  expect(test.screen124.line_title_ex, "");
  expect(test.screen124.line1, "");
  expect(test.screen124.line2, "");
  expect(test.screen124.line3, "");
  expect(test.screen124.line4, "");
  expect(test.screen124.line1_ex, "");
  expect(test.screen124.line2_ex, "");
  expect(test.screen124.line3_ex, "");
  expect(test.screen124.line4_ex, "");
  expect(test.screen124.sound_led1, 0);
  expect(test.screen124.sound_led2, "");
  expect(test.screen124.sound_led3, "");
  expect(test.screen125.title, "");
  expect(test.screen125.msg1, "");
  expect(test.screen125.msg2, "");
  expect(test.screen125.msg1_size, 0);
  expect(test.screen125.msg2_size, "");
  expect(test.screen125.sound1, 0);
  expect(test.screen125.sound2, 0);
  expect(test.screen125.sound3, 0);
  expect(test.screen125.snd_timer, 0);
  expect(test.screen125.timer1, 0);
  expect(test.screen125.timer2, 0);
  expect(test.screen125.timer3, 0);
  expect(test.screen125.dsp_flg1, 0);
  expect(test.screen125.dsp_flg2, 0);
  expect(test.screen125.movie01_ext, 0);
  expect(test.screen125.movie02_ext, 0);
  expect(test.screen125.movie03_ext, 0);
  expect(test.screen125.movie04_ext, 0);
  expect(test.screen125.line_title, "");
  expect(test.screen125.line_title_ex, "");
  expect(test.screen125.line1, "");
  expect(test.screen125.line2, "");
  expect(test.screen125.line3, "");
  expect(test.screen125.line4, "");
  expect(test.screen125.line1_ex, "");
  expect(test.screen125.line2_ex, "");
  expect(test.screen125.line3_ex, "");
  expect(test.screen125.line4_ex, "");
  expect(test.screen125.sound_led1, 0);
  expect(test.screen125.sound_led2, 0);
  expect(test.screen125.sound_led3, 0);
  expect(test.screen126.title, "");
  expect(test.screen126.msg1, "");
  expect(test.screen126.msg2, "");
  expect(test.screen126.msg1_size, 0);
  expect(test.screen126.msg2_size, "");
  expect(test.screen126.sound1, 0);
  expect(test.screen126.sound2, 0);
  expect(test.screen126.sound3, 0);
  expect(test.screen126.snd_timer, 0);
  expect(test.screen126.timer1, 0);
  expect(test.screen126.timer2, 0);
  expect(test.screen126.timer3, 0);
  expect(test.screen126.dsp_flg1, 0);
  expect(test.screen126.dsp_flg2, 0);
  expect(test.screen126.movie01_ext, 0);
  expect(test.screen126.movie02_ext, 0);
  expect(test.screen126.movie03_ext, 0);
  expect(test.screen126.movie04_ext, 0);
  expect(test.screen126.line_title, "");
  expect(test.screen126.line_title_ex, "");
  expect(test.screen126.line1, "");
  expect(test.screen126.line2, "");
  expect(test.screen126.line3, "");
  expect(test.screen126.line4, "");
  expect(test.screen126.line1_ex, "");
  expect(test.screen126.line2_ex, "");
  expect(test.screen126.line3_ex, "");
  expect(test.screen126.line4_ex, "");
  expect(test.screen126.sound_led1, 0);
  expect(test.screen126.sound_led2, 0);
  expect(test.screen126.sound_led3, 0);
  expect(test.screen127.title, "");
  expect(test.screen127.msg1, "");
  expect(test.screen127.msg2, "");
  expect(test.screen127.msg1_size, 0);
  expect(test.screen127.msg2_size, 0);
  expect(test.screen127.sound1, 0);
  expect(test.screen127.sound2, 0);
  expect(test.screen127.sound3, 0);
  expect(test.screen127.snd_timer, 0);
  expect(test.screen127.timer1, 0);
  expect(test.screen127.timer2, 0);
  expect(test.screen127.timer3, 0);
  expect(test.screen127.dsp_flg1, 0);
  expect(test.screen127.dsp_flg2, 0);
  expect(test.screen127.movie01_ext, 0);
  expect(test.screen127.movie02_ext, 0);
  expect(test.screen127.movie03_ext, 0);
  expect(test.screen127.movie04_ext, 0);
  expect(test.screen127.line_title, "");
  expect(test.screen127.line_title_ex, "");
  expect(test.screen127.line1, "");
  expect(test.screen127.line2, "");
  expect(test.screen127.line3, "");
  expect(test.screen127.line4, "");
  expect(test.screen127.line1_ex, "");
  expect(test.screen127.line2_ex, "");
  expect(test.screen127.line3_ex, "");
  expect(test.screen127.line4_ex, "");
  expect(test.screen127.sound_led1, 0);
  expect(test.screen127.sound_led2, 0);
  expect(test.screen127.sound_led3, 0);
  expect(test.screen128.title, "");
  expect(test.screen128.msg1, "");
  expect(test.screen128.msg2, "");
  expect(test.screen128.msg1_size, 0);
  expect(test.screen128.msg2_size, 0);
  expect(test.screen128.sound1, 0);
  expect(test.screen128.sound2, 0);
  expect(test.screen128.sound3, 0);
  expect(test.screen128.snd_timer, 0);
  expect(test.screen128.timer1, 0);
  expect(test.screen128.timer2, 0);
  expect(test.screen128.timer3, 0);
  expect(test.screen128.dsp_flg1, 0);
  expect(test.screen128.dsp_flg2, 0);
  expect(test.screen128.movie01_ext, 0);
  expect(test.screen128.movie02_ext, 0);
  expect(test.screen128.movie03_ext, 0);
  expect(test.screen128.movie04_ext, 0);
  expect(test.screen128.line_title, "");
  expect(test.screen128.line_title_ex, "");
  expect(test.screen128.line1, "");
  expect(test.screen128.line2, "");
  expect(test.screen128.line3, "");
  expect(test.screen128.line4, "");
  expect(test.screen128.line1_ex, "");
  expect(test.screen128.line2_ex, "");
  expect(test.screen128.line3_ex, "");
  expect(test.screen128.line4_ex, "");
  expect(test.screen128.sound_led1, 0);
  expect(test.screen128.sound_led2, 0);
  expect(test.screen128.sound_led3, 0);
  expect(test.screen129.title, "");
  expect(test.screen129.msg1, "");
  expect(test.screen129.msg2, "");
  expect(test.screen129.msg1_size, 0);
  expect(test.screen129.msg2_size, 0);
  expect(test.screen129.sound1, 0);
  expect(test.screen129.sound2, 0);
  expect(test.screen129.sound3, 0);
  expect(test.screen129.snd_timer, 0);
  expect(test.screen129.timer1, 0);
  expect(test.screen129.timer2, 0);
  expect(test.screen129.timer3, 0);
  expect(test.screen129.dsp_flg1, 0);
  expect(test.screen129.dsp_flg2, 0);
  expect(test.screen129.movie01_ext, 0);
  expect(test.screen129.movie02_ext, 0);
  expect(test.screen129.movie03_ext, 0);
  expect(test.screen129.movie04_ext, 0);
  expect(test.screen129.line_title, "");
  expect(test.screen129.line_title_ex, "");
  expect(test.screen129.line1, "");
  expect(test.screen129.line2, "");
  expect(test.screen129.line3, "");
  expect(test.screen129.line4, "");
  expect(test.screen129.line1_ex, "");
  expect(test.screen129.line2_ex, "");
  expect(test.screen129.line3_ex, "");
  expect(test.screen129.line4_ex, "");
  expect(test.screen129.sound_led1, 0);
  expect(test.screen129.sound_led2, 0);
  expect(test.screen129.sound_led3, 0);
  expect(test.screen130.title, "");
  expect(test.screen130.msg1, "");
  expect(test.screen130.msg2, "");
  expect(test.screen130.msg1_size, 0);
  expect(test.screen130.msg2_size, 0);
  expect(test.screen130.sound1, 0);
  expect(test.screen130.sound2, "");
  expect(test.screen130.sound3, "");
  expect(test.screen130.snd_timer, 0);
  expect(test.screen130.timer1, 0);
  expect(test.screen130.timer2, 0);
  expect(test.screen130.timer3, 0);
  expect(test.screen130.dsp_flg1, 0);
  expect(test.screen130.dsp_flg2, 0);
  expect(test.screen130.movie01_ext, 0);
  expect(test.screen130.movie02_ext, 0);
  expect(test.screen130.movie03_ext, 0);
  expect(test.screen130.movie04_ext, 0);
  expect(test.screen130.line_title, "");
  expect(test.screen130.line_title_ex, "");
  expect(test.screen130.line1, "");
  expect(test.screen130.line2, "");
  expect(test.screen130.line3, "");
  expect(test.screen130.line4, "");
  expect(test.screen130.line1_ex, "");
  expect(test.screen130.line2_ex, "");
  expect(test.screen130.line3_ex, "");
  expect(test.screen130.line4_ex, "");
  expect(test.screen130.sound_led1, 0);
  expect(test.screen130.sound_led2, "");
  expect(test.screen130.sound_led3, "");
  expect(test.screen131.title, "");
  expect(test.screen131.msg1, "");
  expect(test.screen131.msg2, "");
  expect(test.screen131.msg1_size, 0);
  expect(test.screen131.msg2_size, 0);
  expect(test.screen131.sound1, 0);
  expect(test.screen131.sound2, 0);
  expect(test.screen131.sound3, 0);
  expect(test.screen131.snd_timer, 0);
  expect(test.screen131.timer1, 0);
  expect(test.screen131.timer2, 0);
  expect(test.screen131.timer3, 0);
  expect(test.screen131.dsp_flg1, 0);
  expect(test.screen131.dsp_flg2, 0);
  expect(test.screen131.movie01_ext, 0);
  expect(test.screen131.movie02_ext, 0);
  expect(test.screen131.movie03_ext, 0);
  expect(test.screen131.movie04_ext, 0);
  expect(test.screen131.line_title, "");
  expect(test.screen131.line_title_ex, "");
  expect(test.screen131.line1, "");
  expect(test.screen131.line2, "");
  expect(test.screen131.line3, "");
  expect(test.screen131.line4, "");
  expect(test.screen131.line1_ex, "");
  expect(test.screen131.line2_ex, "");
  expect(test.screen131.line3_ex, "");
  expect(test.screen131.line4_ex, "");
  expect(test.screen131.sound_led1, 0);
  expect(test.screen131.sound_led2, 0);
  expect(test.screen131.sound_led3, 0);
  expect(test.screen132.title, "");
  expect(test.screen132.msg1, "");
  expect(test.screen132.msg2, "");
  expect(test.screen132.msg1_size, 0);
  expect(test.screen132.msg2_size, "");
  expect(test.screen132.sound1, 0);
  expect(test.screen132.sound2, 0);
  expect(test.screen132.sound3, 0);
  expect(test.screen132.snd_timer, 0);
  expect(test.screen132.timer1, 0);
  expect(test.screen132.timer2, 0);
  expect(test.screen132.timer3, 0);
  expect(test.screen132.dsp_flg1, 0);
  expect(test.screen132.dsp_flg2, 0);
  expect(test.screen132.movie01_ext, 0);
  expect(test.screen132.movie02_ext, 0);
  expect(test.screen132.movie03_ext, 0);
  expect(test.screen132.movie04_ext, 0);
  expect(test.screen132.line_title, "");
  expect(test.screen132.line_title_ex, "");
  expect(test.screen132.line1, "");
  expect(test.screen132.line2, "");
  expect(test.screen132.line3, "");
  expect(test.screen132.line4, "");
  expect(test.screen132.line1_ex, "");
  expect(test.screen132.line2_ex, "");
  expect(test.screen132.line3_ex, "");
  expect(test.screen132.line4_ex, "");
  expect(test.screen132.sound_led1, 0);
  expect(test.screen132.sound_led2, 0);
  expect(test.screen132.sound_led3, 0);
  expect(test.screen133.title, "");
  expect(test.screen133.msg1, "");
  expect(test.screen133.msg2, "");
  expect(test.screen133.msg1_size, 0);
  expect(test.screen133.msg2_size, 0);
  expect(test.screen133.sound1, 0);
  expect(test.screen133.sound2, 0);
  expect(test.screen133.sound3, 0);
  expect(test.screen133.snd_timer, 0);
  expect(test.screen133.timer1, 0);
  expect(test.screen133.timer2, 0);
  expect(test.screen133.timer3, 0);
  expect(test.screen133.dsp_flg1, 0);
  expect(test.screen133.dsp_flg2, 0);
  expect(test.screen133.movie01_ext, 0);
  expect(test.screen133.movie02_ext, 0);
  expect(test.screen133.movie03_ext, 0);
  expect(test.screen133.movie04_ext, 0);
  expect(test.screen133.line_title, "");
  expect(test.screen133.line_title_ex, "");
  expect(test.screen133.line1, "");
  expect(test.screen133.line2, "");
  expect(test.screen133.line3, "");
  expect(test.screen133.line4, "");
  expect(test.screen133.line1_ex, "");
  expect(test.screen133.line2_ex, "");
  expect(test.screen133.line3_ex, "");
  expect(test.screen133.line4_ex, "");
  expect(test.screen133.sound_led1, 0);
  expect(test.screen133.sound_led2, 0);
  expect(test.screen133.sound_led3, 0);
  expect(test.screen134.title, "");
  expect(test.screen134.msg1, "");
  expect(test.screen134.msg2, "");
  expect(test.screen134.msg1_size, 0);
  expect(test.screen134.msg2_size, "");
  expect(test.screen134.sound1, 0);
  expect(test.screen134.sound2, 0);
  expect(test.screen134.sound3, 0);
  expect(test.screen134.snd_timer, 0);
  expect(test.screen134.timer1, 0);
  expect(test.screen134.timer2, 0);
  expect(test.screen134.timer3, 0);
  expect(test.screen134.dsp_flg1, 0);
  expect(test.screen134.dsp_flg2, 0);
  expect(test.screen134.movie01_ext, 0);
  expect(test.screen134.movie02_ext, 0);
  expect(test.screen134.movie03_ext, 0);
  expect(test.screen134.movie04_ext, 0);
  expect(test.screen134.line_title, "");
  expect(test.screen134.line_title_ex, "");
  expect(test.screen134.line1, "");
  expect(test.screen134.line2, "");
  expect(test.screen134.line3, "");
  expect(test.screen134.line4, "");
  expect(test.screen134.line1_ex, "");
  expect(test.screen134.line2_ex, "");
  expect(test.screen134.line3_ex, "");
  expect(test.screen134.line4_ex, "");
  expect(test.screen134.sound_led1, 0);
  expect(test.screen134.sound_led2, 0);
  expect(test.screen134.sound_led3, 0);
  expect(test.screen135.title, "");
  expect(test.screen135.msg1, "");
  expect(test.screen135.msg2, "");
  expect(test.screen135.msg1_size, 0);
  expect(test.screen135.msg2_size, 0);
  expect(test.screen135.sound1, 0);
  expect(test.screen135.sound2, 0);
  expect(test.screen135.sound3, 0);
  expect(test.screen135.snd_timer, 0);
  expect(test.screen135.timer1, 0);
  expect(test.screen135.timer2, 0);
  expect(test.screen135.timer3, 0);
  expect(test.screen135.dsp_flg1, 0);
  expect(test.screen135.dsp_flg2, 0);
  expect(test.screen135.movie01_ext, 0);
  expect(test.screen135.movie02_ext, 0);
  expect(test.screen135.movie03_ext, 0);
  expect(test.screen135.movie04_ext, 0);
  expect(test.screen135.line_title, "");
  expect(test.screen135.line_title_ex, "");
  expect(test.screen135.line1, "");
  expect(test.screen135.line2, "");
  expect(test.screen135.line3, "");
  expect(test.screen135.line4, "");
  expect(test.screen135.line1_ex, "");
  expect(test.screen135.line2_ex, "");
  expect(test.screen135.line3_ex, "");
  expect(test.screen135.line4_ex, "");
  expect(test.screen135.sound_led1, 0);
  expect(test.screen135.sound_led2, 0);
  expect(test.screen135.sound_led3, 0);
  expect(test.screen136.title, "");
  expect(test.screen136.msg1, "");
  expect(test.screen136.msg2, "");
  expect(test.screen136.msg1_size, 0);
  expect(test.screen136.msg2_size, 0);
  expect(test.screen136.sound1, 0);
  expect(test.screen136.sound2, 0);
  expect(test.screen136.sound3, 0);
  expect(test.screen136.snd_timer, 0);
  expect(test.screen136.timer1, 0);
  expect(test.screen136.timer2, 0);
  expect(test.screen136.timer3, 0);
  expect(test.screen136.dsp_flg1, 0);
  expect(test.screen136.dsp_flg2, 0);
  expect(test.screen136.movie01_ext, 0);
  expect(test.screen136.movie02_ext, 0);
  expect(test.screen136.movie03_ext, 0);
  expect(test.screen136.movie04_ext, 0);
  expect(test.screen136.line_title, "");
  expect(test.screen136.line_title_ex, "");
  expect(test.screen136.line1, "");
  expect(test.screen136.line2, "");
  expect(test.screen136.line3, "");
  expect(test.screen136.line4, "");
  expect(test.screen136.line1_ex, "");
  expect(test.screen136.line2_ex, "");
  expect(test.screen136.line3_ex, "");
  expect(test.screen136.line4_ex, "");
  expect(test.screen136.sound_led1, 0);
  expect(test.screen136.sound_led2, 0);
  expect(test.screen136.sound_led3, 0);
  expect(test.screen137.title, "");
  expect(test.screen137.msg1, "");
  expect(test.screen137.msg2, "");
  expect(test.screen137.msg1_size, 0);
  expect(test.screen137.msg2_size, 0);
  expect(test.screen137.sound1, 0);
  expect(test.screen137.sound2, 0);
  expect(test.screen137.sound3, 0);
  expect(test.screen137.snd_timer, 0);
  expect(test.screen137.timer1, 0);
  expect(test.screen137.timer2, 0);
  expect(test.screen137.timer3, 0);
  expect(test.screen137.dsp_flg1, 0);
  expect(test.screen137.dsp_flg2, 0);
  expect(test.screen137.movie01_ext, 0);
  expect(test.screen137.movie02_ext, 0);
  expect(test.screen137.movie03_ext, 0);
  expect(test.screen137.movie04_ext, 0);
  expect(test.screen137.line_title, "");
  expect(test.screen137.line_title_ex, "");
  expect(test.screen137.line1, "");
  expect(test.screen137.line2, "");
  expect(test.screen137.line3, "");
  expect(test.screen137.line4, "");
  expect(test.screen137.line1_ex, "");
  expect(test.screen137.line2_ex, "");
  expect(test.screen137.line3_ex, "");
  expect(test.screen137.line4_ex, "");
  expect(test.screen137.sound_led1, 0);
  expect(test.screen137.sound_led2, 0);
  expect(test.screen137.sound_led3, 0);
  expect(test.screen138.title, "");
  expect(test.screen138.msg1, "");
  expect(test.screen138.msg2, "");
  expect(test.screen138.msg1_size, 0);
  expect(test.screen138.msg2_size, 0);
  expect(test.screen138.sound1, 0);
  expect(test.screen138.sound2, 0);
  expect(test.screen138.sound3, 0);
  expect(test.screen138.snd_timer, 0);
  expect(test.screen138.timer1, 0);
  expect(test.screen138.timer2, 0);
  expect(test.screen138.timer3, 0);
  expect(test.screen138.dsp_flg1, 0);
  expect(test.screen138.dsp_flg2, 0);
  expect(test.screen138.movie01_ext, 0);
  expect(test.screen138.movie02_ext, 0);
  expect(test.screen138.movie03_ext, 0);
  expect(test.screen138.movie04_ext, 0);
  expect(test.screen138.line_title, "");
  expect(test.screen138.line_title_ex, "");
  expect(test.screen138.line1, "");
  expect(test.screen138.line2, "");
  expect(test.screen138.line3, "");
  expect(test.screen138.line4, "");
  expect(test.screen138.line1_ex, "");
  expect(test.screen138.line2_ex, "");
  expect(test.screen138.line3_ex, "");
  expect(test.screen138.line4_ex, "");
  expect(test.screen138.sound_led1, 0);
  expect(test.screen138.sound_led2, 0);
  expect(test.screen138.sound_led3, 0);
  expect(test.screen139.title, "");
  expect(test.screen139.msg1, "");
  expect(test.screen139.msg2, "");
  expect(test.screen139.msg1_size, 0);
  expect(test.screen139.msg2_size, 0);
  expect(test.screen139.sound1, 0);
  expect(test.screen139.sound2, 0);
  expect(test.screen139.sound3, 0);
  expect(test.screen139.snd_timer, 0);
  expect(test.screen139.timer1, 0);
  expect(test.screen139.timer2, 0);
  expect(test.screen139.timer3, 0);
  expect(test.screen139.dsp_flg1, 0);
  expect(test.screen139.dsp_flg2, 0);
  expect(test.screen139.movie01_ext, 0);
  expect(test.screen139.movie02_ext, 0);
  expect(test.screen139.movie03_ext, 0);
  expect(test.screen139.movie04_ext, 0);
  expect(test.screen139.line_title, "");
  expect(test.screen139.line_title_ex, "");
  expect(test.screen139.line1, "");
  expect(test.screen139.line2, "");
  expect(test.screen139.line3, "");
  expect(test.screen139.line4, "");
  expect(test.screen139.line1_ex, "");
  expect(test.screen139.line2_ex, "");
  expect(test.screen139.line3_ex, "");
  expect(test.screen139.line4_ex, "");
  expect(test.screen139.sound_led1, 0);
  expect(test.screen139.sound_led2, 0);
  expect(test.screen139.sound_led3, 0);
  expect(test.screen140.title, "");
  expect(test.screen140.msg1, "");
  expect(test.screen140.msg2, "");
  expect(test.screen140.msg1_size, 0);
  expect(test.screen140.msg2_size, 0);
  expect(test.screen140.sound1, 0);
  expect(test.screen140.sound2, 0);
  expect(test.screen140.sound3, 0);
  expect(test.screen140.snd_timer, 0);
  expect(test.screen140.timer1, 0);
  expect(test.screen140.timer2, 0);
  expect(test.screen140.timer3, 0);
  expect(test.screen140.dsp_flg1, 0);
  expect(test.screen140.dsp_flg2, 0);
  expect(test.screen140.movie01_ext, 0);
  expect(test.screen140.movie02_ext, 0);
  expect(test.screen140.movie03_ext, 0);
  expect(test.screen140.movie04_ext, 0);
  expect(test.screen140.line_title, "");
  expect(test.screen140.line_title_ex, "");
  expect(test.screen140.line1, "");
  expect(test.screen140.line2, "");
  expect(test.screen140.line3, "");
  expect(test.screen140.line4, "");
  expect(test.screen140.line1_ex, "");
  expect(test.screen140.line2_ex, "");
  expect(test.screen140.line3_ex, "");
  expect(test.screen140.line4_ex, "");
  expect(test.screen140.sound_led1, 0);
  expect(test.screen140.sound_led2, 0);
  expect(test.screen140.sound_led3, 0);
  expect(test.screen141.title, "");
  expect(test.screen141.msg1, "");
  expect(test.screen141.msg2, "");
  expect(test.screen141.msg1_size, 0);
  expect(test.screen141.msg2_size, 0);
  expect(test.screen141.sound1, 0);
  expect(test.screen141.sound2, 0);
  expect(test.screen141.sound3, 0);
  expect(test.screen141.snd_timer, 0);
  expect(test.screen141.timer1, 0);
  expect(test.screen141.timer2, 0);
  expect(test.screen141.timer3, 0);
  expect(test.screen141.dsp_flg1, 0);
  expect(test.screen141.dsp_flg2, 0);
  expect(test.screen141.movie01_ext, 0);
  expect(test.screen141.movie02_ext, 0);
  expect(test.screen141.movie03_ext, 0);
  expect(test.screen141.movie04_ext, 0);
  expect(test.screen141.line_title, "");
  expect(test.screen141.line_title_ex, "");
  expect(test.screen141.line1, "");
  expect(test.screen141.line2, "");
  expect(test.screen141.line3, "");
  expect(test.screen141.line4, "");
  expect(test.screen141.line1_ex, "");
  expect(test.screen141.line2_ex, "");
  expect(test.screen141.line3_ex, "");
  expect(test.screen141.line4_ex, "");
  expect(test.screen141.sound_led1, 0);
  expect(test.screen141.sound_led2, 0);
  expect(test.screen141.sound_led3, 0);
  expect(test.screen144.title, "");
  expect(test.screen144.msg1, "");
  expect(test.screen144.msg2, "");
  expect(test.screen144.msg1_size, 0);
  expect(test.screen144.msg2_size, 0);
  expect(test.screen144.sound1, 0);
  expect(test.screen144.sound2, 0);
  expect(test.screen144.sound3, 0);
  expect(test.screen144.snd_timer, 0);
  expect(test.screen144.timer1, 0);
  expect(test.screen144.timer2, 0);
  expect(test.screen144.timer3, 0);
  expect(test.screen144.dsp_flg1, 0);
  expect(test.screen144.dsp_flg2, 0);
  expect(test.screen144.movie01_ext, 0);
  expect(test.screen144.movie02_ext, 0);
  expect(test.screen144.movie03_ext, 0);
  expect(test.screen144.movie04_ext, 0);
  expect(test.screen144.line_title, "");
  expect(test.screen144.line_title_ex, "");
  expect(test.screen144.line1, "");
  expect(test.screen144.line2, "");
  expect(test.screen144.line3, "");
  expect(test.screen144.line4, "");
  expect(test.screen144.line1_ex, "");
  expect(test.screen144.line2_ex, "");
  expect(test.screen144.line3_ex, "");
  expect(test.screen144.line4_ex, "");
  expect(test.screen144.sound_led1, 0);
  expect(test.screen144.sound_led2, 0);
  expect(test.screen144.sound_led3, 0);
  expect(test.ActSetUp.ReadAlertTime, 0);
  expect(test.ActSetUp.AutoReadInterval, 0);
  expect(test.ActSetUp.InterruptPrint, 0);
  expect(test.ActSetUp.InterruptPay, 0);
  expect(test.ActSetUp.UpdGetFtpTimer, 0);
  expect(test.HiddenSetUp.TableReadInterval, 0);
  expect(test.customer.cust_card_max, 0);
  expect(test.customer.cust_card_type1, 0);
  expect(test.customer.cust_card_type2, 0);
  expect(test.customer.cust_card_type3, 0);
  expect(test.customer.cust_card_type4, 0);
  expect(test.customer.cust_card_type5, 0);
  expect(test.customer.cust_card_type6, 0);
  expect(test.ShopAndGo.shop_and_go_nonfile_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_nonscan_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_limit1, 0);
  expect(test.ShopAndGo.shop_and_go_limit2, 0);
  expect(test.ShopAndGo.shop_and_go_limit3, 0);
  expect(test.ShopAndGo.shop_and_go_test_srv_flg, 0);
  expect(test.ShopAndGo.shop_and_go_companycode, 0);
  expect(test.ShopAndGo.shop_and_go_storecode, 0);
  expect(test.ShopAndGo.shop_and_go_mbr_chk_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_server_timeout, 0);
  expect(test.ShopAndGo.shop_and_go_proxy, "");
  expect(test.ShopAndGo.shop_and_go_proxy_port, 0);
  expect(test.ShopAndGo.shop_and_go_n_money_btn_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_domain, "");
  expect(test.ShopAndGo.shop_and_go_mbr_card_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cr50_domain, "");
  expect(test.ShopAndGo.shop_and_go_point_domain, "");
  expect(test.ShopAndGo.shop_and_go_cr50_plucd, 0);
  expect(test.ShopAndGo.shop_and_go_eatin_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cogca_read_twice, 0);
  expect(test.ShopAndGo.shop_and_go_use_class, 0);
  expect(test.ShopAndGo.shop_and_go_expensive_mark_prn, 0);
  expect(test.ShopAndGo.shop_and_go_regbag_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_use_preset_grp_code, 0);
  expect(test.ShopAndGo.shop_and_go_mente_nonplu_btn_reference, 0);
  expect(test.ShopAndGo.shop_and_go_mbr_auto_cncl_time, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_msg_use_no, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print_normal, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss, 0);
  expect(test.ShopAndGo.shop_and_go_thread_timeout, 0);
  expect(test.PaymentGroup.pay_grp_name1, "");
  expect(test.PaymentGroup.pay_grp_name2, "");
  expect(test.PaymentGroup.pay_grp_name3, "");
  expect(test.PaymentGroup.pay_grp_name4, "");
  expect(test.PaymentGroup.pay_grp_name5, "");
  expect(test.PaymentGroup.pay_grp_name6, "");
  expect(test.PaymentGroup.pay_grp_name7, "");
  expect(test.PaymentGroup.pay_grp_name8, "");
  expect(test.PaymentGroup.pay_grp_name9, "");
  expect(test.PaymentGroup.pay_typ1_grp, 0);
  expect(test.PaymentGroup.pay_typ2_grp, 0);
  expect(test.PaymentGroup.pay_typ3_grp, 0);
  expect(test.PaymentGroup.pay_typ4_grp, 0);
  expect(test.PaymentGroup.pay_typ5_grp, 0);
  expect(test.PaymentGroup.pay_typ6_grp, 0);
  expect(test.PaymentGroup.pay_typ7_grp, 0);
  expect(test.PaymentGroup.pay_typ8_grp, 0);
  expect(test.PaymentGroup.pay_typ9_grp, 0);
  expect(test.PaymentGroup.pay_typ10_grp, 0);
  expect(test.PaymentGroup.pay_typ11_grp, 0);
  expect(test.PaymentGroup.pay_typ12_grp, 0);
  expect(test.PaymentGroup.pay_typ13_grp, 0);
  expect(test.PaymentGroup.pay_typ14_grp, 0);
  expect(test.PaymentGroup.pay_typ15_grp, 0);
  expect(test.PaymentGroup.pay_typ16_grp, 0);
  expect(test.PaymentGroup.pay_grp_name1_ex, "");
  expect(test.PaymentGroup.pay_grp_name2_ex, "");
  expect(test.PaymentGroup.pay_grp_name3_ex, "");
  expect(test.PaymentGroup.pay_grp_name4_ex, "");
  expect(test.PaymentGroup.pay_grp_name5_ex, "");
  expect(test.PaymentGroup.pay_grp_name6_ex, "");
  expect(test.PaymentGroup.pay_grp_name7_ex, "");
  expect(test.PaymentGroup.pay_grp_name8_ex, "");
  expect(test.PaymentGroup.pay_grp_name9_ex, "");
}

void allPropatyCheck(QcashierJsonFile test, bool firstItemCheck)
{
  if(firstItemCheck == true) {
    expect(test.common.item_disp, 1);
  }
  expect(test.common.logo_typ, 0);
  expect(test.common.disp_typ, 1);
  expect(test.common.spdsp_use, 1);
  expect(test.common.fix_max, 10);
  expect(test.common.fix_typ, 1);
  expect(test.common.ptn_max, 6);
  expect(test.common.ptn_typ, 1);
  expect(test.common.spe_typ, 1);
  expect(test.common.chara_typ, 0);
  expect(test.common.language_typ, 0);
  expect(test.common.page_max, 145);
  expect(test.common.typ_max, 1);
  expect(test.common.pay_typ1, 0);
  expect(test.common.pay_typ2, 1);
  expect(test.common.pay_typ3, 0);
  expect(test.common.pay_typ4, 0);
  expect(test.common.pay_typ5, 0);
  expect(test.common.pay_typ6, 0);
  expect(test.common.pay_typ7, 0);
  expect(test.common.pay_typ8, 0);
  expect(test.common.demo_disp_btn, 0);
  expect(test.common.rcpt_limit_time, 10);
  expect(test.common.next_rcpt_limit, 60);
  expect(test.common.auto_susdsp, 0);
  expect(test.common.susdsp_time, 2200);
  expect(test.common.rfm_receipt, 1);
  expect(test.common.signp_typ, 0);
  expect(test.common.select_typ, 0);
  expect(test.common.select_str_msg, 0);
  expect(test.common.regbag1_plucd, 0);
  expect(test.common.regbag2_plucd, 0);
  expect(test.common.regbag3_plucd, 0);
  expect(test.common.autocash_operation, 0);
  expect(test.common.autocash_equaltime, 10);
  expect(test.common.autocash_overtime, 0);
  expect(test.common.fip_disp, 0);
  expect(test.common.crdtcard_gettimer, 0);
  expect(test.common.charge_plucd1, 0);
  expect(test.common.charge_plucd2, 0);
  expect(test.common.charge_plucd3, 0);
  expect(test.common.charge_plucd4, 0);
  expect(test.common.charge_plucd5, 0);
  expect(test.common.charge_plucd6, 0);
  expect(test.common.crdtcard_warntime, 6);
  expect(test.common.acx_recalc_btn, 0);
  expect(test.common.lang_chg_max, 0);
  expect(test.common.lang_select1, 0);
  expect(test.common.lang_select2, 0);
  expect(test.common.lang_select3, 0);
  expect(test.common.lang_select4, 0);
  expect(test.common.lang_select5, 0);
  expect(test.common.lang_select6, 0);
  expect(test.common.lang_select7, 0);
  expect(test.common.lang_select8, 0);
  expect(test.common.autocrdt_operation, 0);
  expect(test.common.autocrdt_time, 10);
  expect(test.common.preca_charge_only, 0);
  expect(test.common.preca_charge_plucd1, 0);
  expect(test.common.preca_charge_plucd2, 0);
  expect(test.common.preca_charge_plucd3, 0);
  expect(test.common.preca_charge_plucd4, 0);
  expect(test.common.preca_charge_plucd5, 0);
  expect(test.common.preca_charge_plucd6, 0);
  expect(test.common.select_dsp_ccin, 0);
  expect(test.common.cancel_btn_dsp, 0);
  expect(test.common.clinic_mode, 0);
  expect(test.common.clinic_receipt, 1);
  expect(test.common.clinic_greeting, 1);
  expect(test.common.clinic_greeting_sound, 1);
  expect(test.common.fin_btn_chg, 0);
  expect(test.common.startdsp_btn_single, 1);
  expect(test.common.startdsp_scan_enable, 0);
  expect(test.common.pay_typ9, 0);
  expect(test.common.pay_typ10, 0);
  expect(test.common.pay_typ11, 0);
  expect(test.common.pay_typ12, 0);
  expect(test.common.pay_typ13, 0);
  expect(test.common.pay_typ14, 0);
  expect(test.common.pay_typ15, 0);
  expect(test.common.pay_typ16, 0);
  expect(test.common.verifone_nfc_crdt, 0);
  expect(test.common.hs_dualdisp_chk, 1);
  expect(test.common.back_btn_dsp, 1);
  expect(test.common.NoOperationWarning, 0);
  expect(test.common.NoOperationSignpaul_time, 0);
  expect(test.common.NoOperationVoicesound_time, 0);
  expect(test.common.NoOperationSound, 0);
  expect(test.common.NoOperationPayWarning, 0);
  expect(test.common.cin_dsp_wait, 0);
  expect(test.common.clinic_auto_stl, 0);
  expect(test.common.acracb_stlmode, 1);
  expect(test.common.apbf_regbag_plucd, 0);
  expect(test.common.apbf_dlgdisp_time, 30);
  expect(test.common.mybag_plu_point_add, 0);
  expect(test.common.video_jpqr_scanner, 0);
  expect(test.common.chg_warn_timer_use, 0);
  expect(test.common.cin_cnl_btn_show, 0);
  expect(test.common.regs_use_class, 0);
  expect(test.common.sg_eatin_chk, 0);
  expect(test.common.selfmode1_auto_cancel, 0);
  expect(test.common.point_use_unit, 1);
  expect(test.common.selfmode1_wav_qty, 0);
  expect(test.common.age_chk_notice, 0);
  expect(test.common.verifone_nfc_repika_crdt, 0);
  expect(test.common.regbag1_default, 0);
  expect(test.common.regbag2_default, 0);
  expect(test.common.regbag3_default, 0);
  expect(test.common.regbag_timing, 0);
  expect(test.common.regbag_disp_back_btn, 1);
  expect(test.common.self_disp_preca_ref, 0);
  expect(test.common.fs_cashless_dsp_change, 0);
  expect(test.common.hs_fs_scanning_guide, 0);
  expect(test.common.hs_fs_twice_read_stop, 0);
  expect(test.common.cashin_sound, 0);
  expect(test.common.sound_change_flg, 0);
  expect(test.common.hs_fs_auto_preset_dsp, 0);
  expect(test.common.cashless_dsp_return, 0);
  expect(test.common.regbag_screen_scan_input, 0);
  expect(test.common.g3_pay_btn_blink, 0);
  expect(test.common.g3_employee_call_btn, 1);
  expect(test.common.g3_pay_slct_btn_ptn, 0);
  expect(test.common.video_jpqr_sidescanner, 0);
  expect(test.common.mente_itemlist_type, 0);
  expect(test.common.rg_self_noteplu_perm, 0);
  expect(test.common.g3_self_itemlist_scrvoid, 0);
  expect(test.common.g3_fs_presetgroup_custom, 0);
  expect(test.common.g3_fs_presetgroup_btn1, 0);
  expect(test.common.g3_fs_presetgroup_btn2, 0);
  expect(test.common.g3_fs_presetgroup_btn3, 0);
  expect(test.common.g3_fs_presetgroup_btn4, 0);
  expect(test.common.g3_fs_presetgroup_btn5, 0);
  expect(test.common.g3_fs_presetgroup_btn6, 0);
  expect(test.common.g3_fs_presetgroup_btn7, 0);
  expect(test.common.g3_fs_presetgroup_btn8, 0);
  expect(test.common.callBuzzer_sound_change_flg, 0);
  expect(test.common.top_map_display, 0);
  expect(test.common.start_payselect_display, 0);
  expect(test.common.idle_signp_state, 0);
  expect(test.common.jpqr_paybtn_image, 0);
  expect(test.common.vega_credit_forget_chk, 0);
  expect(test.common.cash_only_setting, 0);
  expect(test.common.cash_only_border, 0);
  expect(test.chg_info.chg_info, 1);
  expect(test.chg_info.chg_5000, 0);
  expect(test.chg_info.chg_2000, 0);
  expect(test.chg_info.chg_1000, 9);
  expect(test.chg_info.chg_500, 0);
  expect(test.chg_info.chg_100, 9);
  expect(test.chg_info.chg_50, 0);
  expect(test.chg_info.chg_10, 9);
  expect(test.chg_info.chg_5, 0);
  expect(test.chg_info.chg_1, 9);
  expect(test.chg_info.chg_info_full_chk, 30);
  expect(test.chg_info.chg_signp_full_chk, 10);
  expect(test.period.spr_str, 301);
  expect(test.period.spr_end, 531);
  expect(test.period.sum_str, 601);
  expect(test.period.sum_end, 831);
  expect(test.period.aut_str, 901);
  expect(test.period.aut_end, 1130);
  expect(test.period.win1_str, 1201);
  expect(test.period.win1_end, 1231);
  expect(test.period.win2_str, 101);
  expect(test.period.win2_end, 229);
  expect(test.period.sp1_flg, 1);
  expect(test.period.sp2_flg, 0);
  expect(test.period.sp3_flg, 1);
  expect(test.period.sp4_flg, 1);
  expect(test.period.sp5_flg, 0);
  expect(test.period.sp6_flg, 1);
  expect(test.period.sp7_flg, 1);
  expect(test.period.sp8_flg, 0);
  expect(test.period.sp9_flg, 0);
  expect(test.period.sp10_flg, 1);
  expect(test.period.sp11_flg, 0);
  expect(test.period.sp12_flg, 1);
  expect(test.period.sp13_flg, 0);
  expect(test.period.sp14_flg, 1);
  expect(test.period.sp15_flg, 0);
  expect(test.period.sp16_flg, 1);
  expect(test.period.sp17_flg, 1);
  expect(test.period.sp18_flg, 0);
  expect(test.period.sp1_str, 101);
  expect(test.period.sp1_end, 107);
  expect(test.period.sp2_str, "");
  expect(test.period.sp2_end, "");
  expect(test.period.sp3_str, 201);
  expect(test.period.sp3_end, 214);
  expect(test.period.sp4_str, 215);
  expect(test.period.sp4_end, 303);
  expect(test.period.sp5_str, "");
  expect(test.period.sp5_end, "");
  expect(test.period.sp6_str, 325);
  expect(test.period.sp6_end, 410);
  expect(test.period.sp7_str, 425);
  expect(test.period.sp7_end, 505);
  expect(test.period.sp8_str, "");
  expect(test.period.sp8_end, "");
  expect(test.period.sp9_str, "");
  expect(test.period.sp9_end, "");
  expect(test.period.sp10_str, 627);
  expect(test.period.sp10_end, 707);
  expect(test.period.sp11_str, "");
  expect(test.period.sp11_end, "");
  expect(test.period.sp12_str, 825);
  expect(test.period.sp12_end, 920);
  expect(test.period.sp13_str, "");
  expect(test.period.sp13_end, "");
  expect(test.period.sp14_str, 1015);
  expect(test.period.sp14_end, 1030);
  expect(test.period.sp15_str, "");
  expect(test.period.sp15_end, "");
  expect(test.period.sp16_str, 1201);
  expect(test.period.sp16_end, 1225);
  expect(test.period.sp17_str, 1226);
  expect(test.period.sp17_end, 1231);
  expect(test.period.sp18_str, "");
  expect(test.period.sp18_end, "");
  expect(test.period.spr_time1, 600);
  expect(test.period.spr_time2, 1700);
  expect(test.period.sum_time1, 600);
  expect(test.period.sum_time2, 1800);
  expect(test.period.aut_time1, 600);
  expect(test.period.aut_time2, 1700);
  expect(test.period.win_time1, 600);
  expect(test.period.win_time2, 1700);
  expect(test.screen0.title, "スタート画面");
  expect(test.screen0.msg1, "お会計券を読ませるとスタートします");
  expect(test.screen0.msg2, "");
  expect(test.screen0.msg1_size, 0);
  expect(test.screen0.msg2_size, 0);
  expect(test.screen0.sound1, 0);
  expect(test.screen0.sound2, 0);
  expect(test.screen0.sound3, 6091);
  expect(test.screen0.snd_timer, 0);
  expect(test.screen0.timer1, 0);
  expect(test.screen0.timer2, 0);
  expect(test.screen0.timer3, 0);
  expect(test.screen0.dsp_flg1, 0);
  expect(test.screen0.dsp_flg2, 0);
  expect(test.screen0.movie01_ext, 0);
  expect(test.screen0.movie02_ext, 0);
  expect(test.screen0.movie03_ext, 0);
  expect(test.screen0.movie04_ext, 0);
  expect(test.screen0.line_title, "");
  expect(test.screen0.line_title_ex, "");
  expect(test.screen0.line1, "");
  expect(test.screen0.line2, "お会計券を");
  expect(test.screen0.line3, "読ませてください");
  expect(test.screen0.line4, "");
  expect(test.screen0.line1_ex, "");
  expect(test.screen0.line2_ex, "Insert the ticket");
  expect(test.screen0.line3_ex, "into the scanner.");
  expect(test.screen0.line4_ex, "");
  expect(test.screen0.sound_led1, 0);
  expect(test.screen0.sound_led2, 0);
  expect(test.screen0.sound_led3, 6091);
  expect(test.screen1.title, "スキャン中画面");
  expect(test.screen1.msg1, "お会計券を読ませるとスタートします");
  expect(test.screen1.msg2, "");
  expect(test.screen1.msg1_size, 0);
  expect(test.screen1.msg2_size, 0);
  expect(test.screen1.sound1, 6003);
  expect(test.screen1.sound2, 6097);
  expect(test.screen1.sound3, 6096);
  expect(test.screen1.snd_timer, 10);
  expect(test.screen1.timer1, 2);
  expect(test.screen1.timer2, 10);
  expect(test.screen1.timer3, 10);
  expect(test.screen1.dsp_flg1, 0);
  expect(test.screen1.dsp_flg2, 0);
  expect(test.screen1.movie01_ext, 0);
  expect(test.screen1.movie02_ext, 0);
  expect(test.screen1.movie03_ext, 0);
  expect(test.screen1.movie04_ext, 0);
  expect(test.screen1.line_title, "");
  expect(test.screen1.line_title_ex, "");
  expect(test.screen1.line1, "");
  expect(test.screen1.line2, "");
  expect(test.screen1.line3, "");
  expect(test.screen1.line4, "");
  expect(test.screen1.line1_ex, "");
  expect(test.screen1.line2_ex, "");
  expect(test.screen1.line3_ex, "");
  expect(test.screen1.line4_ex, "");
  expect(test.screen1.sound_led1, 6003);
  expect(test.screen1.sound_led2, 6097);
  expect(test.screen1.sound_led3, 6096);
  expect(test.screen2.title, "会計選択画面");
  expect(test.screen2.msg1, "お支払方法のボタンを押して下さい");
  expect(test.screen2.msg2, "");
  expect(test.screen2.msg1_size, 0);
  expect(test.screen2.msg2_size, 0);
  expect(test.screen2.sound1, 6004);
  expect(test.screen2.sound2, 0);
  expect(test.screen2.sound3, 0);
  expect(test.screen2.snd_timer, 30);
  expect(test.screen2.timer1, 60);
  expect(test.screen2.timer2, 10);
  expect(test.screen2.timer3, 10);
  expect(test.screen2.dsp_flg1, 0);
  expect(test.screen2.dsp_flg2, 0);
  expect(test.screen2.movie01_ext, 0);
  expect(test.screen2.movie02_ext, 0);
  expect(test.screen2.movie03_ext, 0);
  expect(test.screen2.movie04_ext, 0);
  expect(test.screen2.line_title, "");
  expect(test.screen2.line_title_ex, "");
  expect(test.screen2.line1, "お支払方法を");
  expect(test.screen2.line2, "押してください");
  expect(test.screen2.line3, "");
  expect(test.screen2.line4, "");
  expect(test.screen2.line1_ex, "Please select your");
  expect(test.screen2.line2_ex, "payment method.");
  expect(test.screen2.line3_ex, "");
  expect(test.screen2.line4_ex, "");
  expect(test.screen2.sound_led1, 6129);
  expect(test.screen2.sound_led2, 0);
  expect(test.screen2.sound_led3, 0);
  expect(test.screen3.title, "現金入金画面");
  expect(test.screen3.msg1, "お買上金額を確認し             お金をいれてください");
  expect(test.screen3.msg2, "");
  expect(test.screen3.msg1_size, 0);
  expect(test.screen3.msg2_size, 0);
  expect(test.screen3.sound1, 6005);
  expect(test.screen3.sound2, 6006);
  expect(test.screen3.sound3, 6015);
  expect(test.screen3.snd_timer, 20);
  expect(test.screen3.timer1, 0);
  expect(test.screen3.timer2, 0);
  expect(test.screen3.timer3, 0);
  expect(test.screen3.dsp_flg1, 0);
  expect(test.screen3.dsp_flg2, 0);
  expect(test.screen3.movie01_ext, 0);
  expect(test.screen3.movie02_ext, 0);
  expect(test.screen3.movie03_ext, 0);
  expect(test.screen3.movie04_ext, 0);
  expect(test.screen3.line_title, "現金でお支払い");
  expect(test.screen3.line_title_ex, "Cash Payment");
  expect(test.screen3.line1, "お金を");
  expect(test.screen3.line2, "入れてください");
  expect(test.screen3.line3, "");
  expect(test.screen3.line4, "");
  expect(test.screen3.line1_ex, "Please insert the cash.");
  expect(test.screen3.line2_ex, "");
  expect(test.screen3.line3_ex, "");
  expect(test.screen3.line4_ex, "");
  expect(test.screen3.sound_led1, 6180);
  expect(test.screen3.sound_led2, 6130);
  expect(test.screen3.sound_led3, 6015);
  expect(test.screen4.title, "現金支払画面");
  expect(test.screen4.msg1, "お買上金額を確認し             お金をいれてください");
  expect(test.screen4.msg2, "");
  expect(test.screen4.msg1_size, 0);
  expect(test.screen4.msg2_size, 0);
  expect(test.screen4.sound1, 6016);
  expect(test.screen4.sound2, 0);
  expect(test.screen4.sound3, 0);
  expect(test.screen4.snd_timer, 20);
  expect(test.screen4.timer1, 10);
  expect(test.screen4.timer2, 0);
  expect(test.screen4.timer3, 0);
  expect(test.screen4.dsp_flg1, 0);
  expect(test.screen4.dsp_flg2, 0);
  expect(test.screen4.movie01_ext, 0);
  expect(test.screen4.movie02_ext, 0);
  expect(test.screen4.movie03_ext, 0);
  expect(test.screen4.movie04_ext, 0);
  expect(test.screen4.line_title, "");
  expect(test.screen4.line_title_ex, "");
  expect(test.screen4.line1, "よろしければ");
  expect(test.screen4.line2, "おわりボタンを");
  expect(test.screen4.line3, "押してください");
  expect(test.screen4.line4, "");
  expect(test.screen4.line1_ex, "When ready, ");
  expect(test.screen4.line2_ex, "press \"finish\"");
  expect(test.screen4.line3_ex, "to complete payment.");
  expect(test.screen4.line4_ex, "");
  expect(test.screen4.sound_led1, 6179);
  expect(test.screen4.sound_led2, 6217);
  expect(test.screen4.sound_led3, 0);
  expect(test.screen5.title, "現金支払完了画面");
  expect(test.screen5.msg1, "お釣りとレシートを             お取りください。");
  expect(test.screen5.msg2, "");
  expect(test.screen5.msg1_size, 0);
  expect(test.screen5.msg2_size, 0);
  expect(test.screen5.sound1, 6017);
  expect(test.screen5.sound2, "");
  expect(test.screen5.sound3, 0);
  expect(test.screen5.snd_timer, 0);
  expect(test.screen5.timer1, 5);
  expect(test.screen5.timer2, 10);
  expect(test.screen5.timer3, 2);
  expect(test.screen5.dsp_flg1, 0);
  expect(test.screen5.dsp_flg2, 0);
  expect(test.screen5.movie01_ext, 0);
  expect(test.screen5.movie02_ext, 0);
  expect(test.screen5.movie03_ext, 0);
  expect(test.screen5.movie04_ext, 0);
  expect(test.screen5.line_title, "");
  expect(test.screen5.line_title_ex, "");
  expect(test.screen5.line1, "おつりを");
  expect(test.screen5.line2, "お受け取りください");
  expect(test.screen5.line3, "");
  expect(test.screen5.line4, "");
  expect(test.screen5.line1_ex, "Please take your change.");
  expect(test.screen5.line2_ex, "");
  expect(test.screen5.line3_ex, "");
  expect(test.screen5.line4_ex, "");
  expect(test.screen5.sound_led1, 6132);
  expect(test.screen5.sound_led2, 6132);
  expect(test.screen5.sound_led3, 0);
  expect(test.screen6.title, "支払完了(お釣り０円)");
  expect(test.screen6.msg1, "レシートをお取りください。");
  expect(test.screen6.msg2, "");
  expect(test.screen6.msg1_size, 0);
  expect(test.screen6.msg2_size, 0);
  expect(test.screen6.sound1, 6018);
  expect(test.screen6.sound2, 6129);
  expect(test.screen6.sound3, 6548);
  expect(test.screen6.snd_timer, 0);
  expect(test.screen6.timer1, 5);
  expect(test.screen6.timer2, 10);
  expect(test.screen6.timer3, 0);
  expect(test.screen6.dsp_flg1, 0);
  expect(test.screen6.dsp_flg2, 0);
  expect(test.screen6.movie01_ext, 0);
  expect(test.screen6.movie02_ext, 0);
  expect(test.screen6.movie03_ext, 0);
  expect(test.screen6.movie04_ext, 0);
  expect(test.screen6.line_title, "");
  expect(test.screen6.line_title_ex, "");
  expect(test.screen6.line1, "レシートを");
  expect(test.screen6.line2, "お受け取りください");
  expect(test.screen6.line3, "ありがとう");
  expect(test.screen6.line4, "ございました");
  expect(test.screen6.line1_ex, "Thank you.");
  expect(test.screen6.line2_ex, "Please take your receipt.");
  expect(test.screen6.line3_ex, "");
  expect(test.screen6.line4_ex, "");
  expect(test.screen6.sound_led1, 6133);
  expect(test.screen6.sound_led2, 6132);
  expect(test.screen6.sound_led3, 6548);
  expect(test.screen6.line2_1, "レシートを");
  expect(test.screen6.line2_2, "お受け取りください");
  expect(test.screen6.line2_3, "お大事にして下さい");
  expect(test.screen6.line2_4, "");
  expect(test.screen7.title, "アイテム明細画面");
  expect(test.screen7.msg1, "確認が終わりましたら、お会計ボタンを押してください");
  expect(test.screen7.msg2, "");
  expect(test.screen7.msg1_size, 0);
  expect(test.screen7.msg2_size, 0);
  expect(test.screen7.sound1, 6027);
  expect(test.screen7.sound2, 0);
  expect(test.screen7.sound3, 0);
  expect(test.screen7.snd_timer, 20);
  expect(test.screen7.timer1, 1);
  expect(test.screen7.timer2, 0);
  expect(test.screen7.timer3, 0);
  expect(test.screen7.dsp_flg1, 0);
  expect(test.screen7.dsp_flg2, 0);
  expect(test.screen7.movie01_ext, 0);
  expect(test.screen7.movie02_ext, 0);
  expect(test.screen7.movie03_ext, 0);
  expect(test.screen7.movie04_ext, 0);
  expect(test.screen7.line_title, "");
  expect(test.screen7.line_title_ex, "");
  expect(test.screen7.line1, "");
  expect(test.screen7.line2, "");
  expect(test.screen7.line3, "");
  expect(test.screen7.line4, "");
  expect(test.screen7.line1_ex, "");
  expect(test.screen7.line2_ex, "");
  expect(test.screen7.line3_ex, "");
  expect(test.screen7.line4_ex, "");
  expect(test.screen7.sound_led1, 6027);
  expect(test.screen7.sound_led2, 0);
  expect(test.screen7.sound_led3, 0);
  expect(test.screen8.title, "ｸﾚｼﾞｯﾄﾘｰﾄﾞ画面");
  expect(test.screen8.msg1, "お買上金額を確認し             クレジットカードを読ませて下さい");
  expect(test.screen8.msg2, "");
  expect(test.screen8.msg1_size, 0);
  expect(test.screen8.msg2_size, 0);
  expect(test.screen8.sound1, 6007);
  expect(test.screen8.sound2, 6008);
  expect(test.screen8.sound3, 0);
  expect(test.screen8.snd_timer, 20);
  expect(test.screen8.timer1, 0);
  expect(test.screen8.timer2, 0);
  expect(test.screen8.timer3, 0);
  expect(test.screen8.dsp_flg1, 0);
  expect(test.screen8.dsp_flg2, 0);
  expect(test.screen8.movie01_ext, 0);
  expect(test.screen8.movie02_ext, 0);
  expect(test.screen8.movie03_ext, 0);
  expect(test.screen8.movie04_ext, 0);
  expect(test.screen8.line_title, "クレジットでお支払い");
  expect(test.screen8.line_title_ex, "Credit Card Payment");
  expect(test.screen8.line1, "クレジットカードを");
  expect(test.screen8.line2, "読ませてください");
  expect(test.screen8.line3, "");
  expect(test.screen8.line4, "");
  expect(test.screen8.line1_ex, "Please swipe");
  expect(test.screen8.line2_ex, "your credit card.");
  expect(test.screen8.line3_ex, "");
  expect(test.screen8.line4_ex, "");
  expect(test.screen8.sound_led1, 6007);
  expect(test.screen8.sound_led2, 6008);
  expect(test.screen8.sound_led3, 0);
  expect(test.screen9.title, "ｸﾚｼﾞｯﾄ支払完了画面");
  expect(test.screen9.msg1, "レシートをお取りください。");
  expect(test.screen9.msg2, "");
  expect(test.screen9.msg1_size, 0);
  expect(test.screen9.msg2_size, 0);
  expect(test.screen9.sound1, 6018);
  expect(test.screen9.sound2, 0);
  expect(test.screen9.sound3, 0);
  expect(test.screen9.snd_timer, 0);
  expect(test.screen9.timer1, 5);
  expect(test.screen9.timer2, 10);
  expect(test.screen9.timer3, 0);
  expect(test.screen9.dsp_flg1, 0);
  expect(test.screen9.dsp_flg2, 0);
  expect(test.screen9.movie01_ext, 0);
  expect(test.screen9.movie02_ext, 0);
  expect(test.screen9.movie03_ext, 0);
  expect(test.screen9.movie04_ext, 0);
  expect(test.screen9.line_title, "");
  expect(test.screen9.line_title_ex, "");
  expect(test.screen9.line1, "レシートを");
  expect(test.screen9.line2, "お受け取りください");
  expect(test.screen9.line3, "ありがとう");
  expect(test.screen9.line4, "ございました");
  expect(test.screen9.line1_ex, "Thank you.");
  expect(test.screen9.line2_ex, "Please take your receipt.");
  expect(test.screen9.line3_ex, "");
  expect(test.screen9.line4_ex, "");
  expect(test.screen9.sound_led1, 6133);
  expect(test.screen9.sound_led2, 0);
  expect(test.screen9.sound_led3, 0);
  expect(test.screen10.title, "ありがとうございました画面");
  expect(test.screen10.msg1, "");
  expect(test.screen10.msg2, "");
  expect(test.screen10.msg1_size, 0);
  expect(test.screen10.msg2_size, 0);
  expect(test.screen10.sound1, 6025);
  expect(test.screen10.sound2, 6098);
  expect(test.screen10.sound3, 0);
  expect(test.screen10.snd_timer, 0);
  expect(test.screen10.timer1, 4);
  expect(test.screen10.timer2, 0);
  expect(test.screen10.timer3, 0);
  expect(test.screen10.dsp_flg1, 0);
  expect(test.screen10.dsp_flg2, 0);
  expect(test.screen10.movie01_ext, 0);
  expect(test.screen10.movie02_ext, 0);
  expect(test.screen10.movie03_ext, 0);
  expect(test.screen10.movie04_ext, 0);
  expect(test.screen10.line_title, "");
  expect(test.screen10.line_title_ex, "");
  expect(test.screen10.line1, "");
  expect(test.screen10.line2, "");
  expect(test.screen10.line3, "");
  expect(test.screen10.line4, "");
  expect(test.screen10.line1_ex, "");
  expect(test.screen10.line2_ex, "");
  expect(test.screen10.line3_ex, "");
  expect(test.screen10.line4_ex, "");
  expect(test.screen10.sound_led1, 6025);
  expect(test.screen10.sound_led2, 6098);
  expect(test.screen10.sound_led3, 0);
  expect(test.screen11.title, "店員呼び出し選択画面");
  expect(test.screen11.msg1, "");
  expect(test.screen11.msg2, "");
  expect(test.screen11.msg1_size, 0);
  expect(test.screen11.msg2_size, 0);
  expect(test.screen11.sound1, 6034);
  expect(test.screen11.sound2, 0);
  expect(test.screen11.sound3, 0);
  expect(test.screen11.snd_timer, 10);
  expect(test.screen11.timer1, 0);
  expect(test.screen11.timer2, 0);
  expect(test.screen11.timer3, 0);
  expect(test.screen11.dsp_flg1, 0);
  expect(test.screen11.dsp_flg2, 0);
  expect(test.screen11.movie01_ext, 0);
  expect(test.screen11.movie02_ext, 0);
  expect(test.screen11.movie03_ext, 0);
  expect(test.screen11.movie04_ext, 0);
  expect(test.screen11.line_title, "");
  expect(test.screen11.line_title_ex, "");
  expect(test.screen11.line1, "");
  expect(test.screen11.line2, "");
  expect(test.screen11.line3, "");
  expect(test.screen11.line4, "");
  expect(test.screen11.line1_ex, "");
  expect(test.screen11.line2_ex, "");
  expect(test.screen11.line3_ex, "");
  expect(test.screen11.line4_ex, "");
  expect(test.screen11.sound_led1, 6034);
  expect(test.screen11.sound_led2, 0);
  expect(test.screen11.sound_led3, 0);
  expect(test.screen12.title, "店員呼び出し中画面");
  expect(test.screen12.msg1, "");
  expect(test.screen12.msg2, "");
  expect(test.screen12.msg1_size, 0);
  expect(test.screen12.msg2_size, 0);
  expect(test.screen12.sound1, 6035);
  expect(test.screen12.sound2, 0);
  expect(test.screen12.sound3, 0);
  expect(test.screen12.snd_timer, 15);
  expect(test.screen12.timer1, 0);
  expect(test.screen12.timer2, 0);
  expect(test.screen12.timer3, 0);
  expect(test.screen12.dsp_flg1, 0);
  expect(test.screen12.dsp_flg2, 0);
  expect(test.screen12.movie01_ext, 0);
  expect(test.screen12.movie02_ext, 0);
  expect(test.screen12.movie03_ext, 0);
  expect(test.screen12.movie04_ext, 0);
  expect(test.screen12.line_title, "");
  expect(test.screen12.line_title_ex, "");
  expect(test.screen12.line1, "");
  expect(test.screen12.line2, "");
  expect(test.screen12.line3, "");
  expect(test.screen12.line4, "");
  expect(test.screen12.line1_ex, "");
  expect(test.screen12.line2_ex, "");
  expect(test.screen12.line3_ex, "");
  expect(test.screen12.line4_ex, "");
  expect(test.screen12.sound_led1, 6178);
  expect(test.screen12.sound_led2, 0);
  expect(test.screen12.sound_led3, 0);
  expect(test.screen13.title, "パスワード入力");
  expect(test.screen13.msg1, "");
  expect(test.screen13.msg2, "");
  expect(test.screen13.msg1_size, 0);
  expect(test.screen13.msg2_size, 0);
  expect(test.screen13.sound1, 6036);
  expect(test.screen13.sound2, 0);
  expect(test.screen13.sound3, 0);
  expect(test.screen13.snd_timer, 20);
  expect(test.screen13.timer1, 0);
  expect(test.screen13.timer2, 0);
  expect(test.screen13.timer3, 0);
  expect(test.screen13.dsp_flg1, 0);
  expect(test.screen13.dsp_flg2, 0);
  expect(test.screen13.movie01_ext, 0);
  expect(test.screen13.movie02_ext, 0);
  expect(test.screen13.movie03_ext, 0);
  expect(test.screen13.movie04_ext, 0);
  expect(test.screen13.line_title, "");
  expect(test.screen13.line_title_ex, "");
  expect(test.screen13.line1, "");
  expect(test.screen13.line2, "");
  expect(test.screen13.line3, "");
  expect(test.screen13.line4, "");
  expect(test.screen13.line1_ex, "");
  expect(test.screen13.line2_ex, "");
  expect(test.screen13.line3_ex, "");
  expect(test.screen13.line4_ex, "");
  expect(test.screen13.sound_led1, 6036);
  expect(test.screen13.sound_led2, 0);
  expect(test.screen13.sound_led3, 0);
  expect(test.screen14.title, "メンテナンス画面");
  expect(test.screen14.msg1, "");
  expect(test.screen14.msg2, "");
  expect(test.screen14.msg1_size, 0);
  expect(test.screen14.msg2_size, 0);
  expect(test.screen14.sound1, 6031);
  expect(test.screen14.sound2, 1008);
  expect(test.screen14.sound3, 0);
  expect(test.screen14.snd_timer, 0);
  expect(test.screen14.timer1, 0);
  expect(test.screen14.timer2, 0);
  expect(test.screen14.timer3, 0);
  expect(test.screen14.dsp_flg1, 0);
  expect(test.screen14.dsp_flg2, 0);
  expect(test.screen14.movie01_ext, 0);
  expect(test.screen14.movie02_ext, 0);
  expect(test.screen14.movie03_ext, 0);
  expect(test.screen14.movie04_ext, 0);
  expect(test.screen14.line_title, "");
  expect(test.screen14.line_title_ex, "");
  expect(test.screen14.line1, "");
  expect(test.screen14.line2, "");
  expect(test.screen14.line3, "");
  expect(test.screen14.line4, "");
  expect(test.screen14.line1_ex, "");
  expect(test.screen14.line2_ex, "");
  expect(test.screen14.line3_ex, "");
  expect(test.screen14.line4_ex, "");
  expect(test.screen14.sound_led1, 6031);
  expect(test.screen14.sound_led2, 1008);
  expect(test.screen14.sound_led3, 0);
  expect(test.screen15.title, "商品取消画面");
  expect(test.screen15.msg1, "");
  expect(test.screen15.msg2, "");
  expect(test.screen15.msg1_size, 0);
  expect(test.screen15.msg2_size, 0);
  expect(test.screen15.sound1, 1054);
  expect(test.screen15.sound2, 5089);
  expect(test.screen15.sound3, 5090);
  expect(test.screen15.snd_timer, 30);
  expect(test.screen15.timer1, 0);
  expect(test.screen15.timer2, 0);
  expect(test.screen15.timer3, 0);
  expect(test.screen15.dsp_flg1, 0);
  expect(test.screen15.dsp_flg2, 0);
  expect(test.screen15.movie01_ext, 0);
  expect(test.screen15.movie02_ext, 0);
  expect(test.screen15.movie03_ext, 0);
  expect(test.screen15.movie04_ext, 0);
  expect(test.screen15.line_title, "");
  expect(test.screen15.line_title_ex, "");
  expect(test.screen15.line1, "");
  expect(test.screen15.line2, "");
  expect(test.screen15.line3, "");
  expect(test.screen15.line4, "");
  expect(test.screen15.line1_ex, "");
  expect(test.screen15.line2_ex, "");
  expect(test.screen15.line3_ex, "");
  expect(test.screen15.line4_ex, "");
  expect(test.screen15.sound_led1, 1054);
  expect(test.screen15.sound_led2, 5089);
  expect(test.screen15.sound_led3, 5090);
  expect(test.screen16.title, "クレジットリード完了画面");
  expect(test.screen16.msg1, "よろしければ決済ボタンを       押してください");
  expect(test.screen16.msg2, "");
  expect(test.screen16.msg1_size, 0);
  expect(test.screen16.msg2_size, 0);
  expect(test.screen16.sound1, 6119);
  expect(test.screen16.sound2, "");
  expect(test.screen16.sound3, "");
  expect(test.screen16.snd_timer, 20);
  expect(test.screen16.timer1, 0);
  expect(test.screen16.timer2, 0);
  expect(test.screen16.timer3, 0);
  expect(test.screen16.dsp_flg1, 0);
  expect(test.screen16.dsp_flg2, 0);
  expect(test.screen16.movie01_ext, 0);
  expect(test.screen16.movie02_ext, 0);
  expect(test.screen16.movie03_ext, 0);
  expect(test.screen16.movie04_ext, 0);
  expect(test.screen16.line_title, "");
  expect(test.screen16.line_title_ex, "");
  expect(test.screen16.line1, "よろしければ");
  expect(test.screen16.line2, "おわりボタンを");
  expect(test.screen16.line3, "押してください");
  expect(test.screen16.line4, "");
  expect(test.screen16.line1_ex, "When ready, ");
  expect(test.screen16.line2_ex, "press \"finish\"");
  expect(test.screen16.line3_ex, "to complete payment.");
  expect(test.screen16.line4_ex, "");
  expect(test.screen16.sound_led1, 6179);
  expect(test.screen16.sound_led2, "");
  expect(test.screen16.sound_led3, "");
  expect(test.screen16.msg_max, 1);
  expect(test.screen16.line2_1, "クレジット決済できませんでした");
  expect(test.screen16.line2_2, "会計中止ボタンを押して");
  expect(test.screen16.line2_3, "再度お会計を行ってください");
  expect(test.screen16.line2_4, "");
  expect(test.screen16.line2_1_ex, "Payment failed.");
  expect(test.screen16.line2_2_ex, "Press \"Swipe again\"");
  expect(test.screen16.line2_3_ex, "and try it again.");
  expect(test.screen16.line2_4_ex, "");
  expect(test.screen17.title, "Edyタッチ画面");
  expect(test.screen17.msg1, "お会計金額を確認し             “Ｅｄｙ”をタッチしてください");
  expect(test.screen17.msg2, "");
  expect(test.screen17.msg1_size, 0);
  expect(test.screen17.msg2_size, 0);
  expect(test.screen17.sound1, 6124);
  expect(test.screen17.sound2, 6125);
  expect(test.screen17.sound3, 0);
  expect(test.screen17.snd_timer, 20);
  expect(test.screen17.timer1, 0);
  expect(test.screen17.timer2, 0);
  expect(test.screen17.timer3, 0);
  expect(test.screen17.dsp_flg1, 0);
  expect(test.screen17.dsp_flg2, 0);
  expect(test.screen17.movie01_ext, 0);
  expect(test.screen17.movie02_ext, 0);
  expect(test.screen17.movie03_ext, 0);
  expect(test.screen17.movie04_ext, 0);
  expect(test.screen17.line_title, "Ｅｄｙでお支払い");
  expect(test.screen17.line_title_ex, "Edy Payment");
  expect(test.screen17.line1, "お会計金額を確認し");
  expect(test.screen17.line2, "カードをタッチしてください");
  expect(test.screen17.line3, "");
  expect(test.screen17.line4, "");
  expect(test.screen17.line1_ex, "Please read");
  expect(test.screen17.line2_ex, "Card on the Reader.");
  expect(test.screen17.line3_ex, "");
  expect(test.screen17.line4_ex, "");
  expect(test.screen17.sound_led1, 6124);
  expect(test.screen17.sound_led2, 6125);
  expect(test.screen17.sound_led3, 0);
  expect(test.screen18.title, "Edy支払完了画面");
  expect(test.screen18.msg1, "レシートをお取りください。");
  expect(test.screen18.msg2, "");
  expect(test.screen18.msg1_size, 0);
  expect(test.screen18.msg2_size, 0);
  expect(test.screen18.sound1, 6019);
  expect(test.screen18.sound2, 0);
  expect(test.screen18.sound3, 0);
  expect(test.screen18.snd_timer, 0);
  expect(test.screen18.timer1, 5);
  expect(test.screen18.timer2, 10);
  expect(test.screen18.timer3, 0);
  expect(test.screen18.dsp_flg1, 0);
  expect(test.screen18.dsp_flg2, 0);
  expect(test.screen18.movie01_ext, 0);
  expect(test.screen18.movie02_ext, 0);
  expect(test.screen18.movie03_ext, 0);
  expect(test.screen18.movie04_ext, 0);
  expect(test.screen18.line_title, "");
  expect(test.screen18.line_title_ex, "");
  expect(test.screen18.line1, "レシートを");
  expect(test.screen18.line2, "お受け取りください");
  expect(test.screen18.line3, "ありがとう");
  expect(test.screen18.line4, "ございました");
  expect(test.screen18.line1_ex, "Thank you.");
  expect(test.screen18.line2_ex, "Please take your receipt.");
  expect(test.screen18.line3_ex, "");
  expect(test.screen18.line4_ex, "");
  expect(test.screen18.sound_led1, 6019);
  expect(test.screen18.sound_led2, 0);
  expect(test.screen18.sound_led3, 0);
  expect(test.screen19.title, "Edyタッチ完了画面");
  expect(test.screen19.msg1, "レシート発行ボタンを              押してください");
  expect(test.screen19.msg2, "");
  expect(test.screen19.msg1_size, 0);
  expect(test.screen19.msg2_size, 0);
  expect(test.screen19.sound1, 6126);
  expect(test.screen19.sound2, "");
  expect(test.screen19.sound3, "");
  expect(test.screen19.snd_timer, 20);
  expect(test.screen19.timer1, 0);
  expect(test.screen19.timer2, 0);
  expect(test.screen19.timer3, 0);
  expect(test.screen19.dsp_flg1, 0);
  expect(test.screen19.dsp_flg2, 0);
  expect(test.screen19.movie01_ext, 0);
  expect(test.screen19.movie02_ext, 0);
  expect(test.screen19.movie03_ext, 0);
  expect(test.screen19.movie04_ext, 0);
  expect(test.screen19.line_title, "");
  expect(test.screen19.line_title_ex, "");
  expect(test.screen19.line1, "よろしければ");
  expect(test.screen19.line2, "おわりボタンを");
  expect(test.screen19.line3, "押してください");
  expect(test.screen19.line4, "");
  expect(test.screen19.line1_ex, "When ready, ");
  expect(test.screen19.line2_ex, "press \"finish\"");
  expect(test.screen19.line3_ex, "to complete payment.");
  expect(test.screen19.line4_ex, "");
  expect(test.screen19.sound_led1, 6179);
  expect(test.screen19.sound_led2, "");
  expect(test.screen19.sound_led3, "");
  expect(test.screen20.title, "電子マネー確認選択画面");
  expect(test.screen20.msg1, "確認する電子マネーを選択してください");
  expect(test.screen20.msg2, "");
  expect(test.screen20.msg1_size, 0);
  expect(test.screen20.msg2_size, 0);
  expect(test.screen20.sound1, 6028);
  expect(test.screen20.sound2, 0);
  expect(test.screen20.sound3, 0);
  expect(test.screen20.snd_timer, 30);
  expect(test.screen20.timer1, 0);
  expect(test.screen20.timer2, 0);
  expect(test.screen20.timer3, 0);
  expect(test.screen20.dsp_flg1, 0);
  expect(test.screen20.dsp_flg2, 0);
  expect(test.screen20.movie01_ext, 0);
  expect(test.screen20.movie02_ext, 0);
  expect(test.screen20.movie03_ext, 0);
  expect(test.screen20.movie04_ext, 0);
  expect(test.screen20.line_title, "");
  expect(test.screen20.line_title_ex, "");
  expect(test.screen20.line1, "");
  expect(test.screen20.line2, "");
  expect(test.screen20.line3, "");
  expect(test.screen20.line4, "");
  expect(test.screen20.line1_ex, "");
  expect(test.screen20.line2_ex, "");
  expect(test.screen20.line3_ex, "");
  expect(test.screen20.line4_ex, "");
  expect(test.screen20.sound_led1, 6028);
  expect(test.screen20.sound_led2, 0);
  expect(test.screen20.sound_led3, 0);
  expect(test.screen21.title, "電子マネー確認Edyタッチ画面");
  expect(test.screen21.msg1, "Ｅｄｙをタッチしてください");
  expect(test.screen21.msg2, "");
  expect(test.screen21.msg1_size, 0);
  expect(test.screen21.msg2_size, 0);
  expect(test.screen21.sound1, 6009);
  expect(test.screen21.sound2, 0);
  expect(test.screen21.sound3, 0);
  expect(test.screen21.snd_timer, 10);
  expect(test.screen21.timer1, 0);
  expect(test.screen21.timer2, 0);
  expect(test.screen21.timer3, 0);
  expect(test.screen21.dsp_flg1, 0);
  expect(test.screen21.dsp_flg2, 0);
  expect(test.screen21.movie01_ext, 0);
  expect(test.screen21.movie02_ext, 0);
  expect(test.screen21.movie03_ext, 0);
  expect(test.screen21.movie04_ext, 0);
  expect(test.screen21.line_title, "");
  expect(test.screen21.line_title_ex, "");
  expect(test.screen21.line1, "");
  expect(test.screen21.line2, "");
  expect(test.screen21.line3, "");
  expect(test.screen21.line4, "");
  expect(test.screen21.line1_ex, "");
  expect(test.screen21.line2_ex, "");
  expect(test.screen21.line3_ex, "");
  expect(test.screen21.line4_ex, "");
  expect(test.screen21.sound_led1, 6009);
  expect(test.screen21.sound_led2, 0);
  expect(test.screen21.sound_led3, 0);
  expect(test.screen22.title, "電子マネー確認Edy完了画面");
  expect(test.screen22.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen22.msg2, "");
  expect(test.screen22.msg1_size, 0);
  expect(test.screen22.msg2_size, 0);
  expect(test.screen22.sound1, 6029);
  expect(test.screen22.sound2, 0);
  expect(test.screen22.sound3, 0);
  expect(test.screen22.snd_timer, 20);
  expect(test.screen22.timer1, 0);
  expect(test.screen22.timer2, 0);
  expect(test.screen22.timer3, 0);
  expect(test.screen22.dsp_flg1, 0);
  expect(test.screen22.dsp_flg2, 0);
  expect(test.screen22.movie01_ext, 0);
  expect(test.screen22.movie02_ext, 0);
  expect(test.screen22.movie03_ext, 0);
  expect(test.screen22.movie04_ext, 0);
  expect(test.screen22.line_title, "");
  expect(test.screen22.line_title_ex, "");
  expect(test.screen22.line1, "");
  expect(test.screen22.line2, "");
  expect(test.screen22.line3, "");
  expect(test.screen22.line4, "");
  expect(test.screen22.line1_ex, "");
  expect(test.screen22.line2_ex, "");
  expect(test.screen22.line3_ex, "");
  expect(test.screen22.line4_ex, "");
  expect(test.screen22.sound_led1, 6029);
  expect(test.screen22.sound_led2, 0);
  expect(test.screen22.sound_led3, 0);
  expect(test.screen23.title, "返金画面");
  expect(test.screen23.msg1, "お金とレシートを　             お取りください。");
  expect(test.screen23.msg2, "");
  expect(test.screen23.msg1_size, 0);
  expect(test.screen23.msg2_size, 0);
  expect(test.screen23.sound1, 6127);
  expect(test.screen23.sound2, 0);
  expect(test.screen23.sound3, 0);
  expect(test.screen23.snd_timer, 0);
  expect(test.screen23.timer1, 0);
  expect(test.screen23.timer2, 0);
  expect(test.screen23.timer3, 0);
  expect(test.screen23.dsp_flg1, 0);
  expect(test.screen23.dsp_flg2, 0);
  expect(test.screen23.movie01_ext, 0);
  expect(test.screen23.movie02_ext, 0);
  expect(test.screen23.movie03_ext, 0);
  expect(test.screen23.movie04_ext, 0);
  expect(test.screen23.line_title, "");
  expect(test.screen23.line_title_ex, "");
  expect(test.screen23.line1, "お金を");
  expect(test.screen23.line2, "お受け取りください");
  expect(test.screen23.line3, "");
  expect(test.screen23.line4, "");
  expect(test.screen23.line1_ex, "Please take the money.");
  expect(test.screen23.line2_ex, "");
  expect(test.screen23.line3_ex, "");
  expect(test.screen23.line4_ex, "");
  expect(test.screen23.sound_led1, 6098);
  expect(test.screen23.sound_led2, 0);
  expect(test.screen23.sound_led3, 0);
  expect(test.screen24.title, "交通系ICタッチ画面");
  expect(test.screen24.msg1, "お会計金額を確認し             “交通系IC”をタッチしてください");
  expect(test.screen24.msg2, "");
  expect(test.screen24.msg1_size, 0);
  expect(test.screen24.msg2_size, 0);
  expect(test.screen24.sound1, 6153);
  expect(test.screen24.sound2, 6070);
  expect(test.screen24.sound3, 0);
  expect(test.screen24.snd_timer, 20);
  expect(test.screen24.timer1, 0);
  expect(test.screen24.timer2, 0);
  expect(test.screen24.timer3, 0);
  expect(test.screen24.dsp_flg1, 0);
  expect(test.screen24.dsp_flg2, 0);
  expect(test.screen24.movie01_ext, 0);
  expect(test.screen24.movie02_ext, 0);
  expect(test.screen24.movie03_ext, 0);
  expect(test.screen24.movie04_ext, 0);
  expect(test.screen24.line_title, "交通系ICでお支払い");
  expect(test.screen24.line_title_ex, "IC Card Payment");
  expect(test.screen24.line1, "お会計金額を確認し");
  expect(test.screen24.line2, "カードをタッチしてください");
  expect(test.screen24.line3, "");
  expect(test.screen24.line4, "");
  expect(test.screen24.line1_ex, "Tap your IC card");
  expect(test.screen24.line2_ex, "on the terminal.");
  expect(test.screen24.line3_ex, "");
  expect(test.screen24.line4_ex, "");
  expect(test.screen24.sound_led1, 6153);
  expect(test.screen24.sound_led2, 6070);
  expect(test.screen24.sound_led3, 0);
  expect(test.screen25.title, "交通系IC支払完了画面");
  expect(test.screen25.msg1, "レシートをお取りください。");
  expect(test.screen25.msg2, "");
  expect(test.screen25.msg1_size, 0);
  expect(test.screen25.msg2_size, 0);
  expect(test.screen25.sound1, 6219);
  expect(test.screen25.sound2, 0);
  expect(test.screen25.sound3, 0);
  expect(test.screen25.snd_timer, 0);
  expect(test.screen25.timer1, 5);
  expect(test.screen25.timer2, 10);
  expect(test.screen25.timer3, 0);
  expect(test.screen25.dsp_flg1, 0);
  expect(test.screen25.dsp_flg2, 0);
  expect(test.screen25.movie01_ext, 0);
  expect(test.screen25.movie02_ext, 0);
  expect(test.screen25.movie03_ext, 0);
  expect(test.screen25.movie04_ext, 0);
  expect(test.screen25.line_title, "");
  expect(test.screen25.line_title_ex, "");
  expect(test.screen25.line1, "レシートを");
  expect(test.screen25.line2, "お受け取りください");
  expect(test.screen25.line3, "ありがとう");
  expect(test.screen25.line4, "ございました");
  expect(test.screen25.line1_ex, "Please take your card");
  expect(test.screen25.line2_ex, "and the receipt.");
  expect(test.screen25.line3_ex, "Thank you.");
  expect(test.screen25.line4_ex, "");
  expect(test.screen25.sound_led1, 6219);
  expect(test.screen25.sound_led2, 0);
  expect(test.screen25.sound_led3, 0);
  expect(test.screen26.title, "交通系ICタッチ完了画面");
  expect(test.screen26.msg1, "レシート発行ボタンを              押してください");
  expect(test.screen26.msg2, "");
  expect(test.screen26.msg1_size, 0);
  expect(test.screen26.msg2_size, 0);
  expect(test.screen26.sound1, 6126);
  expect(test.screen26.sound2, "");
  expect(test.screen26.sound3, "");
  expect(test.screen26.snd_timer, 20);
  expect(test.screen26.timer1, 0);
  expect(test.screen26.timer2, 0);
  expect(test.screen26.timer3, 0);
  expect(test.screen26.dsp_flg1, 0);
  expect(test.screen26.dsp_flg2, 0);
  expect(test.screen26.movie01_ext, 0);
  expect(test.screen26.movie02_ext, 0);
  expect(test.screen26.movie03_ext, 0);
  expect(test.screen26.movie04_ext, 0);
  expect(test.screen26.line_title, "");
  expect(test.screen26.line_title_ex, "");
  expect(test.screen26.line1, "よろしければ");
  expect(test.screen26.line2, "おわりボタンを");
  expect(test.screen26.line3, "押してください");
  expect(test.screen26.line4, "");
  expect(test.screen26.line1_ex, "When ready, ");
  expect(test.screen26.line2_ex, "press \"finish\"");
  expect(test.screen26.line3_ex, "to complete payment.");
  expect(test.screen26.line4_ex, "");
  expect(test.screen26.sound_led1, 6179);
  expect(test.screen26.sound_led2, "");
  expect(test.screen26.sound_led3, "");
  expect(test.screen27.title, "電子マネー確認交通系ICタッチ画面");
  expect(test.screen27.msg1, "交通系ICをタッチしてください");
  expect(test.screen27.msg2, "");
  expect(test.screen27.msg1_size, 0);
  expect(test.screen27.msg2_size, 0);
  expect(test.screen27.sound1, 6153);
  expect(test.screen27.sound2, 0);
  expect(test.screen27.sound3, 0);
  expect(test.screen27.snd_timer, 10);
  expect(test.screen27.timer1, 0);
  expect(test.screen27.timer2, 0);
  expect(test.screen27.timer3, 0);
  expect(test.screen27.dsp_flg1, 0);
  expect(test.screen27.dsp_flg2, 0);
  expect(test.screen27.movie01_ext, 0);
  expect(test.screen27.movie02_ext, 0);
  expect(test.screen27.movie03_ext, 0);
  expect(test.screen27.movie04_ext, 0);
  expect(test.screen27.line_title, "");
  expect(test.screen27.line_title_ex, "");
  expect(test.screen27.line1, "");
  expect(test.screen27.line2, "");
  expect(test.screen27.line3, "");
  expect(test.screen27.line4, "");
  expect(test.screen27.line1_ex, "");
  expect(test.screen27.line2_ex, "");
  expect(test.screen27.line3_ex, "");
  expect(test.screen27.line4_ex, "");
  expect(test.screen27.sound_led1, 6153);
  expect(test.screen27.sound_led2, 0);
  expect(test.screen27.sound_led3, 0);
  expect(test.screen28.title, "電子マネー確認交通系IC完了画面");
  expect(test.screen28.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen28.msg2, "");
  expect(test.screen28.msg1_size, 0);
  expect(test.screen28.msg2_size, 0);
  expect(test.screen28.sound1, 6029);
  expect(test.screen28.sound2, 0);
  expect(test.screen28.sound3, 0);
  expect(test.screen28.snd_timer, 20);
  expect(test.screen28.timer1, 0);
  expect(test.screen28.timer2, 0);
  expect(test.screen28.timer3, 0);
  expect(test.screen28.dsp_flg1, 0);
  expect(test.screen28.dsp_flg2, 0);
  expect(test.screen28.movie01_ext, 0);
  expect(test.screen28.movie02_ext, 0);
  expect(test.screen28.movie03_ext, 0);
  expect(test.screen28.movie04_ext, 0);
  expect(test.screen28.line_title, "");
  expect(test.screen28.line_title_ex, "");
  expect(test.screen28.line1, "");
  expect(test.screen28.line2, "");
  expect(test.screen28.line3, "");
  expect(test.screen28.line4, "");
  expect(test.screen28.line1_ex, "");
  expect(test.screen28.line2_ex, "");
  expect(test.screen28.line3_ex, "");
  expect(test.screen28.line4_ex, "");
  expect(test.screen28.sound_led1, 6029);
  expect(test.screen28.sound_led2, 0);
  expect(test.screen28.sound_led3, 0);
  expect(test.screen29.title, "レジ袋登録画面");
  expect(test.screen29.msg1, "レジ袋登録");
  expect(test.screen29.msg2, "レジ袋は有料となっております。枚数を入力してください。");
  expect(test.screen29.msg1_size, 1);
  expect(test.screen29.msg2_size, 1);
  expect(test.screen29.sound1, 0);
  expect(test.screen29.sound2, 0);
  expect(test.screen29.sound3, 0);
  expect(test.screen29.snd_timer, 0);
  expect(test.screen29.timer1, 0);
  expect(test.screen29.timer2, 0);
  expect(test.screen29.timer3, 0);
  expect(test.screen29.dsp_flg1, 0);
  expect(test.screen29.dsp_flg2, 0);
  expect(test.screen29.movie01_ext, 0);
  expect(test.screen29.movie02_ext, 0);
  expect(test.screen29.movie03_ext, 0);
  expect(test.screen29.movie04_ext, 0);
  expect(test.screen29.line_title, "");
  expect(test.screen29.line_title_ex, "");
  expect(test.screen29.line1, "");
  expect(test.screen29.line2, "");
  expect(test.screen29.line3, "");
  expect(test.screen29.line4, "");
  expect(test.screen29.line1_ex, "");
  expect(test.screen29.line2_ex, "");
  expect(test.screen29.line3_ex, "");
  expect(test.screen29.line4_ex, "");
  expect(test.screen29.sound_led1, 0);
  expect(test.screen29.sound_led2, 0);
  expect(test.screen29.sound_led3, 0);
  expect(test.screen30.title, "おつりチャージ画面");
  expect(test.screen30.msg1, "");
  expect(test.screen30.msg2, "");
  expect(test.screen30.msg1_size, 0);
  expect(test.screen30.msg2_size, 0);
  expect(test.screen30.sound1, 6183);
  expect(test.screen30.sound2, 0);
  expect(test.screen30.sound3, 0);
  expect(test.screen30.snd_timer, 20);
  expect(test.screen30.timer1, 0);
  expect(test.screen30.timer2, 0);
  expect(test.screen30.timer3, 0);
  expect(test.screen30.dsp_flg1, 0);
  expect(test.screen30.dsp_flg2, 0);
  expect(test.screen30.movie01_ext, 0);
  expect(test.screen30.movie02_ext, 0);
  expect(test.screen30.movie03_ext, 0);
  expect(test.screen30.movie04_ext, 0);
  expect(test.screen30.line_title, "");
  expect(test.screen30.line_title_ex, "");
  expect(test.screen30.line1, "");
  expect(test.screen30.line2, "");
  expect(test.screen30.line3, "");
  expect(test.screen30.line4, "");
  expect(test.screen30.line1_ex, "");
  expect(test.screen30.line2_ex, "");
  expect(test.screen30.line3_ex, "");
  expect(test.screen30.line4_ex, "");
  expect(test.screen30.sound_led1, 6183);
  expect(test.screen30.sound_led2, 0);
  expect(test.screen30.sound_led3, 0);
  expect(test.screen31.title, "現金チャージ選択画面");
  expect(test.screen31.msg1, "チャージ金額を選択してください");
  expect(test.screen31.msg2, "Select the amount you want to add to your card.");
  expect(test.screen31.msg1_size, 30);
  expect(test.screen31.msg2_size, 47);
  expect(test.screen31.sound1, 6198);
  expect(test.screen31.sound2, 0);
  expect(test.screen31.sound3, 0);
  expect(test.screen31.snd_timer, 30);
  expect(test.screen31.timer1, 0);
  expect(test.screen31.timer2, 0);
  expect(test.screen31.timer3, 0);
  expect(test.screen31.dsp_flg1, 0);
  expect(test.screen31.dsp_flg2, 0);
  expect(test.screen31.movie01_ext, 0);
  expect(test.screen31.movie02_ext, 0);
  expect(test.screen31.movie03_ext, 0);
  expect(test.screen31.movie04_ext, 0);
  expect(test.screen31.line_title, "");
  expect(test.screen31.line_title_ex, "");
  expect(test.screen31.line1, "");
  expect(test.screen31.line2, "");
  expect(test.screen31.line3, "");
  expect(test.screen31.line4, "");
  expect(test.screen31.line1_ex, "");
  expect(test.screen31.line2_ex, "");
  expect(test.screen31.line3_ex, "");
  expect(test.screen31.line4_ex, "");
  expect(test.screen31.sound_led1, 6198);
  expect(test.screen31.sound_led2, 0);
  expect(test.screen31.sound_led3, 0);
  expect(test.screen32.title, "ｎｉｍｏｃａカード確認画面");
  expect(test.screen32.msg1, "★ｎｉｍｏｃａカード、または");
  expect(test.screen32.msg2, "クレジットｎｉｍｏｃａカードはお持ちですか？");
  expect(test.screen32.msg1_size, 28);
  expect(test.screen32.msg2_size, 44);
  expect(test.screen32.sound1, 6214);
  expect(test.screen32.sound2, 0);
  expect(test.screen32.sound3, 0);
  expect(test.screen32.snd_timer, 30);
  expect(test.screen32.timer1, 0);
  expect(test.screen32.timer2, 0);
  expect(test.screen32.timer3, 0);
  expect(test.screen32.dsp_flg1, 0);
  expect(test.screen32.dsp_flg2, 0);
  expect(test.screen32.movie01_ext, 0);
  expect(test.screen32.movie02_ext, 0);
  expect(test.screen32.movie03_ext, 0);
  expect(test.screen32.movie04_ext, 0);
  expect(test.screen32.line_title, "");
  expect(test.screen32.line_title_ex, "");
  expect(test.screen32.line1, "");
  expect(test.screen32.line2, "");
  expect(test.screen32.line3, "");
  expect(test.screen32.line4, "");
  expect(test.screen32.line1_ex, "");
  expect(test.screen32.line2_ex, "");
  expect(test.screen32.line3_ex, "");
  expect(test.screen32.line4_ex, "");
  expect(test.screen32.sound_led1, 6214);
  expect(test.screen32.sound_led2, 0);
  expect(test.screen32.sound_led3, 0);
  expect(test.screen33.title, "交通系ICチャージ画面");
  expect(test.screen33.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen33.msg2, "");
  expect(test.screen33.msg1_size, 0);
  expect(test.screen33.msg2_size, 0);
  expect(test.screen33.sound1, 6005);
  expect(test.screen33.sound2, 6006);
  expect(test.screen33.sound3, 6015);
  expect(test.screen33.snd_timer, 20);
  expect(test.screen33.timer1, 0);
  expect(test.screen33.timer2, 0);
  expect(test.screen33.timer3, 0);
  expect(test.screen33.dsp_flg1, 0);
  expect(test.screen33.dsp_flg2, 0);
  expect(test.screen33.movie01_ext, 0);
  expect(test.screen33.movie02_ext, 0);
  expect(test.screen33.movie03_ext, 0);
  expect(test.screen33.movie04_ext, 0);
  expect(test.screen33.line_title, "交通系ICチャージ");
  expect(test.screen33.line_title_ex, "Reload Card");
  expect(test.screen33.line1, "お金を");
  expect(test.screen33.line2, "入れてください");
  expect(test.screen33.line3, "");
  expect(test.screen33.line4, "");
  expect(test.screen33.line1_ex, "Insert the payment.");
  expect(test.screen33.line2_ex, "");
  expect(test.screen33.line3_ex, "");
  expect(test.screen33.line4_ex, "");
  expect(test.screen33.sound_led1, 6216);
  expect(test.screen33.sound_led2, 6216);
  expect(test.screen33.sound_led3, 6015);
  expect(test.screen34.title, "交通系ICチャージタッチ画面");
  expect(test.screen34.msg1, "チャージ金額を確認し“交通系IC”をタッチしてください");
  expect(test.screen34.msg2, "");
  expect(test.screen34.msg1_size, 0);
  expect(test.screen34.msg2_size, 0);
  expect(test.screen34.sound1, 6153);
  expect(test.screen34.sound2, 6070);
  expect(test.screen34.sound3, 0);
  expect(test.screen34.snd_timer, 20);
  expect(test.screen34.timer1, 0);
  expect(test.screen34.timer2, 0);
  expect(test.screen34.timer3, 0);
  expect(test.screen34.dsp_flg1, 0);
  expect(test.screen34.dsp_flg2, 0);
  expect(test.screen34.movie01_ext, 0);
  expect(test.screen34.movie02_ext, 0);
  expect(test.screen34.movie03_ext, 0);
  expect(test.screen34.movie04_ext, 0);
  expect(test.screen34.line_title, "交通系ICチャージ");
  expect(test.screen34.line_title_ex, "Reload Card");
  expect(test.screen34.line1, "チャージ金額を確認し");
  expect(test.screen34.line2, "カードをタッチしてください");
  expect(test.screen34.line3, "");
  expect(test.screen34.line4, "");
  expect(test.screen34.line1_ex, "Tap your IC card");
  expect(test.screen34.line2_ex, "on the terminal.");
  expect(test.screen34.line3_ex, "");
  expect(test.screen34.line4_ex, "");
  expect(test.screen34.sound_led1, 6153);
  expect(test.screen34.sound_led2, 6070);
  expect(test.screen34.sound_led3, 0);
  expect(test.screen35.title, "チャージする、しない確認画面");
  expect(test.screen35.msg1, "残額が不足しています。チャージしますか？");
  expect(test.screen35.msg2, "");
  expect(test.screen35.msg1_size, 42);
  expect(test.screen35.msg2_size, 0);
  expect(test.screen35.sound1, 6218);
  expect(test.screen35.sound2, 0);
  expect(test.screen35.sound3, 0);
  expect(test.screen35.snd_timer, 30);
  expect(test.screen35.timer1, 0);
  expect(test.screen35.timer2, 0);
  expect(test.screen35.timer3, 0);
  expect(test.screen35.dsp_flg1, 0);
  expect(test.screen35.dsp_flg2, 0);
  expect(test.screen35.movie01_ext, 0);
  expect(test.screen35.movie02_ext, 0);
  expect(test.screen35.movie03_ext, 0);
  expect(test.screen35.movie04_ext, 0);
  expect(test.screen35.line_title, "");
  expect(test.screen35.line_title_ex, "");
  expect(test.screen35.line1, "");
  expect(test.screen35.line2, "");
  expect(test.screen35.line3, "");
  expect(test.screen35.line4, "");
  expect(test.screen35.line1_ex, "");
  expect(test.screen35.line2_ex, "");
  expect(test.screen35.line3_ex, "");
  expect(test.screen35.line4_ex, "");
  expect(test.screen35.sound_led1, 6218);
  expect(test.screen35.sound_led2, 0);
  expect(test.screen35.sound_led3, 0);
  expect(test.screen36.title, "残額不足！！現金併用する？しない？確認画面");
  expect(test.screen36.msg1, "残額が不足している為、支払いが完了出来ません");
  expect(test.screen36.msg2, "不足額を現金でお支払いください");
  expect(test.screen36.msg1_size, 44);
  expect(test.screen36.msg2_size, 30);
  expect(test.screen36.sound1, 6224);
  expect(test.screen36.sound2, 0);
  expect(test.screen36.sound3, 0);
  expect(test.screen36.snd_timer, 30);
  expect(test.screen36.timer1, 0);
  expect(test.screen36.timer2, 0);
  expect(test.screen36.timer3, 0);
  expect(test.screen36.dsp_flg1, 0);
  expect(test.screen36.dsp_flg2, 0);
  expect(test.screen36.movie01_ext, 0);
  expect(test.screen36.movie02_ext, 0);
  expect(test.screen36.movie03_ext, 0);
  expect(test.screen36.movie04_ext, 0);
  expect(test.screen36.line_title, "");
  expect(test.screen36.line_title_ex, "");
  expect(test.screen36.line1, "");
  expect(test.screen36.line2, "");
  expect(test.screen36.line3, "");
  expect(test.screen36.line4, "");
  expect(test.screen36.line1_ex, "");
  expect(test.screen36.line2_ex, "");
  expect(test.screen36.line3_ex, "");
  expect(test.screen36.line4_ex, "");
  expect(test.screen36.sound_led1, 6224);
  expect(test.screen36.sound_led2, 0);
  expect(test.screen36.sound_led3, 0);
  expect(test.screen37.title, "領収書？レシート？発行確認画面");
  expect(test.screen37.msg1, "どちらか一方のボタンを選択してください");
  expect(test.screen37.msg2, "Please touch either of the buttons.");
  expect(test.screen37.msg1_size, 38);
  expect(test.screen37.msg2_size, 35);
  expect(test.screen37.sound1, 6225);
  expect(test.screen37.sound2, 0);
  expect(test.screen37.sound3, 0);
  expect(test.screen37.snd_timer, 30);
  expect(test.screen37.timer1, 0);
  expect(test.screen37.timer2, 0);
  expect(test.screen37.timer3, 0);
  expect(test.screen37.dsp_flg1, 0);
  expect(test.screen37.dsp_flg2, 0);
  expect(test.screen37.movie01_ext, 0);
  expect(test.screen37.movie02_ext, 0);
  expect(test.screen37.movie03_ext, 0);
  expect(test.screen37.movie04_ext, 0);
  expect(test.screen37.line_title, "");
  expect(test.screen37.line_title_ex, "");
  expect(test.screen37.line1, "");
  expect(test.screen37.line2, "");
  expect(test.screen37.line3, "");
  expect(test.screen37.line4, "");
  expect(test.screen37.line1_ex, "");
  expect(test.screen37.line2_ex, "");
  expect(test.screen37.line3_ex, "");
  expect(test.screen37.line4_ex, "");
  expect(test.screen37.sound_led1, 6225);
  expect(test.screen37.sound_led2, 0);
  expect(test.screen37.sound_led3, 0);
  expect(test.screen38.title, "交通系ICチャージ入金完了画面");
  expect(test.screen38.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen38.msg2, "");
  expect(test.screen38.msg1_size, 0);
  expect(test.screen38.msg2_size, 0);
  expect(test.screen38.sound1, 6217);
  expect(test.screen38.sound2, 0);
  expect(test.screen38.sound3, 0);
  expect(test.screen38.snd_timer, 20);
  expect(test.screen38.timer1, 10);
  expect(test.screen38.timer2, 0);
  expect(test.screen38.timer3, 0);
  expect(test.screen38.dsp_flg1, 0);
  expect(test.screen38.dsp_flg2, 0);
  expect(test.screen38.movie01_ext, 0);
  expect(test.screen38.movie02_ext, 0);
  expect(test.screen38.movie03_ext, 0);
  expect(test.screen38.movie04_ext, 0);
  expect(test.screen38.line_title, "交通系ICチャージ");
  expect(test.screen38.line_title_ex, "Reload Card");
  expect(test.screen38.line1, "よろしければ");
  expect(test.screen38.line2, "チャージボタンを");
  expect(test.screen38.line3, "押してください");
  expect(test.screen38.line4, "");
  expect(test.screen38.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen38.line2_ex, "button to reload");
  expect(test.screen38.line3_ex, "your card.");
  expect(test.screen38.line4_ex, "");
  expect(test.screen38.sound_led1, 6179);
  expect(test.screen38.sound_led2, 6217);
  expect(test.screen38.sound_led3, 0);
  expect(test.screen39.title, "未精算支払画面");
  expect(test.screen39.msg1, "よろしければ未精算支払へを押してください");
  expect(test.screen39.msg2, "");
  expect(test.screen39.msg1_size, 0);
  expect(test.screen39.msg2_size, 0);
  expect(test.screen39.sound1, 6226);
  expect(test.screen39.sound2, 0);
  expect(test.screen39.sound3, 0);
  expect(test.screen39.snd_timer, 20);
  expect(test.screen39.timer1, 10);
  expect(test.screen39.timer2, 0);
  expect(test.screen39.timer3, 0);
  expect(test.screen39.dsp_flg1, 0);
  expect(test.screen39.dsp_flg2, 0);
  expect(test.screen39.movie01_ext, 0);
  expect(test.screen39.movie02_ext, 0);
  expect(test.screen39.movie03_ext, 0);
  expect(test.screen39.movie04_ext, 0);
  expect(test.screen39.line_title, "");
  expect(test.screen39.line_title_ex, "");
  expect(test.screen39.line1, "よろしければ");
  expect(test.screen39.line2, "未精算支払へを");
  expect(test.screen39.line3, "押してください");
  expect(test.screen39.line4, "");
  expect(test.screen39.line1_ex, "Touch the");
  expect(test.screen39.line2_ex, "\"Pay remaining balance\"");
  expect(test.screen39.line3_ex, "button.");
  expect(test.screen39.line4_ex, "");
  expect(test.screen39.sound_led1, 6226);
  expect(test.screen39.sound_led2, 0);
  expect(test.screen39.sound_led3, 0);
  expect(test.screen40.title, "ポイント機能なしカード通知画面");
  expect(test.screen40.msg1, "ポイント機能なしカードです");
  expect(test.screen40.msg2, "You cannot use this card to earn points.");
  expect(test.screen40.msg1_size, 26);
  expect(test.screen40.msg2_size, 40);
  expect(test.screen40.sound1, 6632);
  expect(test.screen40.sound2, 0);
  expect(test.screen40.sound3, 0);
  expect(test.screen40.snd_timer, 30);
  expect(test.screen40.timer1, 0);
  expect(test.screen40.timer2, 0);
  expect(test.screen40.timer3, 0);
  expect(test.screen40.dsp_flg1, 0);
  expect(test.screen40.dsp_flg2, 0);
  expect(test.screen40.movie01_ext, 0);
  expect(test.screen40.movie02_ext, 0);
  expect(test.screen40.movie03_ext, 0);
  expect(test.screen40.movie04_ext, 0);
  expect(test.screen40.line_title, "");
  expect(test.screen40.line_title_ex, "");
  expect(test.screen40.line1, "");
  expect(test.screen40.line2, "");
  expect(test.screen40.line3, "");
  expect(test.screen40.line4, "");
  expect(test.screen40.line1_ex, "");
  expect(test.screen40.line2_ex, "");
  expect(test.screen40.line3_ex, "");
  expect(test.screen40.line4_ex, "");
  expect(test.screen40.sound_led1, 6632);
  expect(test.screen40.sound_led2, 0);
  expect(test.screen40.sound_led3, 0);
  expect(test.screen41.title, "チケットお取り下さい画面");
  expect(test.screen41.msg1, "チケットをお取りください。");
  expect(test.screen41.msg2, "");
  expect(test.screen41.msg1_size, 0);
  expect(test.screen41.msg2_size, 0);
  expect(test.screen41.sound1, 6228);
  expect(test.screen41.sound2, 0);
  expect(test.screen41.sound3, 0);
  expect(test.screen41.snd_timer, 0);
  expect(test.screen41.timer1, 5);
  expect(test.screen41.timer2, 10);
  expect(test.screen41.timer3, 0);
  expect(test.screen41.dsp_flg1, 0);
  expect(test.screen41.dsp_flg2, 0);
  expect(test.screen41.movie01_ext, 0);
  expect(test.screen41.movie02_ext, 0);
  expect(test.screen41.movie03_ext, 0);
  expect(test.screen41.movie04_ext, 0);
  expect(test.screen41.line_title, "");
  expect(test.screen41.line_title_ex, "");
  expect(test.screen41.line1, "チケットとレシートを");
  expect(test.screen41.line2, "お受け取りください");
  expect(test.screen41.line3, "ありがとう");
  expect(test.screen41.line4, "ございました");
  expect(test.screen41.line1_ex, "Thank you.");
  expect(test.screen41.line2_ex, "Please take your receipt.");
  expect(test.screen41.line3_ex, "");
  expect(test.screen41.line4_ex, "");
  expect(test.screen41.sound_led1, 6228);
  expect(test.screen41.sound_led2, 0);
  expect(test.screen41.sound_led3, 0);
  expect(test.screen42.title, "クレジット利用画面<verifone>");
  expect(test.screen42.msg1, "クレジットでお会計ですね");
  expect(test.screen42.msg2, "");
  expect(test.screen42.msg1_size, 0);
  expect(test.screen42.msg2_size, 0);
  expect(test.screen42.sound1, 6007);
  expect(test.screen42.sound2, 6008);
  expect(test.screen42.sound3, 0);
  expect(test.screen42.snd_timer, 20);
  expect(test.screen42.timer1, 0);
  expect(test.screen42.timer2, 0);
  expect(test.screen42.timer3, 0);
  expect(test.screen42.dsp_flg1, 0);
  expect(test.screen42.dsp_flg2, 0);
  expect(test.screen42.movie01_ext, 0);
  expect(test.screen42.movie02_ext, 0);
  expect(test.screen42.movie03_ext, 0);
  expect(test.screen42.movie04_ext, 0);
  expect(test.screen42.line_title, "クレジットでお支払い");
  expect(test.screen42.line_title_ex, "Credit Card Payment");
  expect(test.screen42.line1, "お支払い金額を確認し");
  expect(test.screen42.line2, "カードを読ませてください");
  expect(test.screen42.line3, "");
  expect(test.screen42.line4, "");
  expect(test.screen42.line1_ex, "Please swipe");
  expect(test.screen42.line2_ex, "your credit card.");
  expect(test.screen42.line3_ex, "");
  expect(test.screen42.line4_ex, "");
  expect(test.screen42.sound_led1, 6007);
  expect(test.screen42.sound_led2, 6008);
  expect(test.screen42.sound_led3, 0);
  expect(test.screen43.title, "Edy利用画面<verifone>");
  expect(test.screen43.msg1, "Edyでお会計ですね");
  expect(test.screen43.msg2, "");
  expect(test.screen43.msg1_size, 0);
  expect(test.screen43.msg2_size, 0);
  expect(test.screen43.sound1, 6124);
  expect(test.screen43.sound2, 6125);
  expect(test.screen43.sound3, 0);
  expect(test.screen43.snd_timer, 20);
  expect(test.screen43.timer1, 0);
  expect(test.screen43.timer2, 0);
  expect(test.screen43.timer3, 0);
  expect(test.screen43.dsp_flg1, 0);
  expect(test.screen43.dsp_flg2, 0);
  expect(test.screen43.movie01_ext, 0);
  expect(test.screen43.movie02_ext, 0);
  expect(test.screen43.movie03_ext, 0);
  expect(test.screen43.movie04_ext, 0);
  expect(test.screen43.line_title, "Ｅｄｙでお支払い");
  expect(test.screen43.line_title_ex, "Edy Payment");
  expect(test.screen43.line1, "お支払い金額を確認し");
  expect(test.screen43.line2, "カードをタッチしてください");
  expect(test.screen43.line3, "");
  expect(test.screen43.line4, "");
  expect(test.screen43.line1_ex, "Tap your IC card");
  expect(test.screen43.line2_ex, "on the terminal.");
  expect(test.screen43.line3_ex, "");
  expect(test.screen43.line4_ex, "");
  expect(test.screen43.sound_led1, 6124);
  expect(test.screen43.sound_led2, 6125);
  expect(test.screen43.sound_led3, 0);
  expect(test.screen44.title, "iD利用画面<verifone>");
  expect(test.screen44.msg1, "iDでお会計ですね");
  expect(test.screen44.msg2, "");
  expect(test.screen44.msg1_size, 0);
  expect(test.screen44.msg2_size, 0);
  expect(test.screen44.sound1, 6124);
  expect(test.screen44.sound2, 6255);
  expect(test.screen44.sound3, 0);
  expect(test.screen44.snd_timer, 20);
  expect(test.screen44.timer1, 0);
  expect(test.screen44.timer2, 0);
  expect(test.screen44.timer3, 0);
  expect(test.screen44.dsp_flg1, 0);
  expect(test.screen44.dsp_flg2, 0);
  expect(test.screen44.movie01_ext, 0);
  expect(test.screen44.movie02_ext, 0);
  expect(test.screen44.movie03_ext, 0);
  expect(test.screen44.movie04_ext, 0);
  expect(test.screen44.line_title, "ｉＤでお支払い");
  expect(test.screen44.line_title_ex, "iD Payment");
  expect(test.screen44.line1, "お支払い金額を確認し");
  expect(test.screen44.line2, "カードをタッチしてください");
  expect(test.screen44.line3, "");
  expect(test.screen44.line4, "");
  expect(test.screen44.line1_ex, "Tap your IC card");
  expect(test.screen44.line2_ex, "on the terminal.");
  expect(test.screen44.line3_ex, "");
  expect(test.screen44.line4_ex, "");
  expect(test.screen44.sound_led1, 6124);
  expect(test.screen44.sound_led2, 6255);
  expect(test.screen44.sound_led3, 0);
  expect(test.screen45.title, "交通系IC利用画面<verifone>");
  expect(test.screen45.msg1, "交通系ICでお会計ですね");
  expect(test.screen45.msg2, "");
  expect(test.screen45.msg1_size, 0);
  expect(test.screen45.msg2_size, 0);
  expect(test.screen45.sound1, 6124);
  expect(test.screen45.sound2, 6153);
  expect(test.screen45.sound3, 0);
  expect(test.screen45.snd_timer, 20);
  expect(test.screen45.timer1, 0);
  expect(test.screen45.timer2, 0);
  expect(test.screen45.timer3, 0);
  expect(test.screen45.dsp_flg1, 0);
  expect(test.screen45.dsp_flg2, 0);
  expect(test.screen45.movie01_ext, 0);
  expect(test.screen45.movie02_ext, 0);
  expect(test.screen45.movie03_ext, 0);
  expect(test.screen45.movie04_ext, 0);
  expect(test.screen45.line_title, "交通系ＩＣでお支払い");
  expect(test.screen45.line_title_ex, "IC Card Payment");
  expect(test.screen45.line1, "お支払い金額を確認し");
  expect(test.screen45.line2, "カードをタッチしてください");
  expect(test.screen45.line3, "");
  expect(test.screen45.line4, "");
  expect(test.screen45.line1_ex, "Tap your IC card");
  expect(test.screen45.line2_ex, "on the terminal.");
  expect(test.screen45.line3_ex, "");
  expect(test.screen45.line4_ex, "");
  expect(test.screen45.sound_led1, 6124);
  expect(test.screen45.sound_led2, 6153);
  expect(test.screen45.sound_led3, 0);
  expect(test.screen46.title, "QUICPay利用画面<verifone>");
  expect(test.screen46.msg1, "QUICPayでお会計ですね");
  expect(test.screen46.msg2, "");
  expect(test.screen46.msg1_size, 0);
  expect(test.screen46.msg2_size, 0);
  expect(test.screen46.sound1, 6124);
  expect(test.screen46.sound2, 6254);
  expect(test.screen46.sound3, 0);
  expect(test.screen46.snd_timer, 20);
  expect(test.screen46.timer1, 0);
  expect(test.screen46.timer2, 0);
  expect(test.screen46.timer3, 0);
  expect(test.screen46.dsp_flg1, 0);
  expect(test.screen46.dsp_flg2, 0);
  expect(test.screen46.movie01_ext, 0);
  expect(test.screen46.movie02_ext, 0);
  expect(test.screen46.movie03_ext, 0);
  expect(test.screen46.movie04_ext, 0);
  expect(test.screen46.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen46.line_title_ex, "QUICPay Payment");
  expect(test.screen46.line1, "お支払い金額を確認し");
  expect(test.screen46.line2, "カードをタッチしてください");
  expect(test.screen46.line3, "");
  expect(test.screen46.line4, "");
  expect(test.screen46.line1_ex, "Tap your IC card");
  expect(test.screen46.line2_ex, "on the terminal.");
  expect(test.screen46.line3_ex, "");
  expect(test.screen46.line4_ex, "");
  expect(test.screen46.sound_led1, 6124);
  expect(test.screen46.sound_led2, 6254);
  expect(test.screen46.sound_led3, 0);
  expect(test.screen47.title, "WAON利用画面<verifone>");
  expect(test.screen47.msg1, "WAONでお会計ですね");
  expect(test.screen47.msg2, "");
  expect(test.screen47.msg1_size, 0);
  expect(test.screen47.msg2_size, 0);
  expect(test.screen47.sound1, 6124);
  expect(test.screen47.sound2, 6256);
  expect(test.screen47.sound3, 0);
  expect(test.screen47.snd_timer, 20);
  expect(test.screen47.timer1, 0);
  expect(test.screen47.timer2, 0);
  expect(test.screen47.timer3, 0);
  expect(test.screen47.dsp_flg1, 0);
  expect(test.screen47.dsp_flg2, 0);
  expect(test.screen47.movie01_ext, 0);
  expect(test.screen47.movie02_ext, 0);
  expect(test.screen47.movie03_ext, 0);
  expect(test.screen47.movie04_ext, 0);
  expect(test.screen47.line_title, "ＷＡＯＮでお支払い");
  expect(test.screen47.line_title_ex, "WAON Payment");
  expect(test.screen47.line1, "お支払い金額を確認し");
  expect(test.screen47.line2, "カードをタッチしてください");
  expect(test.screen47.line3, "");
  expect(test.screen47.line4, "");
  expect(test.screen47.line1_ex, "Tap your IC card");
  expect(test.screen47.line2_ex, "on the terminal.");
  expect(test.screen47.line3_ex, "");
  expect(test.screen47.line4_ex, "");
  expect(test.screen47.sound_led1, 6124);
  expect(test.screen47.sound_led2, 6256);
  expect(test.screen47.sound_led3, 0);
  expect(test.screen48.title, "nanaco利用画面<verifone>");
  expect(test.screen48.msg1, "nanacoでお会計ですね");
  expect(test.screen48.msg2, "");
  expect(test.screen48.msg1_size, 0);
  expect(test.screen48.msg2_size, 0);
  expect(test.screen48.sound1, 6124);
  expect(test.screen48.sound2, 6257);
  expect(test.screen48.sound3, 0);
  expect(test.screen48.snd_timer, 20);
  expect(test.screen48.timer1, 0);
  expect(test.screen48.timer2, 0);
  expect(test.screen48.timer3, 0);
  expect(test.screen48.dsp_flg1, 0);
  expect(test.screen48.dsp_flg2, 0);
  expect(test.screen48.movie01_ext, 0);
  expect(test.screen48.movie02_ext, 0);
  expect(test.screen48.movie03_ext, 0);
  expect(test.screen48.movie04_ext, 0);
  expect(test.screen48.line_title, "ｎａｎａｃｏでお支払い");
  expect(test.screen48.line_title_ex, "nanaco Payment");
  expect(test.screen48.line1, "お支払い金額を確認し");
  expect(test.screen48.line2, "カードをタッチしてください");
  expect(test.screen48.line3, "");
  expect(test.screen48.line4, "");
  expect(test.screen48.line1_ex, "Tap your IC card");
  expect(test.screen48.line2_ex, "on the terminal.");
  expect(test.screen48.line3_ex, "");
  expect(test.screen48.line4_ex, "");
  expect(test.screen48.sound_led1, 6124);
  expect(test.screen48.sound_led2, 6257);
  expect(test.screen48.sound_led3, 0);
  expect(test.screen49.title, "銀聯利用画面<verifone>");
  expect(test.screen49.msg1, "銀聯でお会計ですね");
  expect(test.screen49.msg2, "");
  expect(test.screen49.msg1_size, 0);
  expect(test.screen49.msg2_size, 0);
  expect(test.screen49.sound1, 6258);
  expect(test.screen49.sound2, 6252);
  expect(test.screen49.sound3, 0);
  expect(test.screen49.snd_timer, 20);
  expect(test.screen49.timer1, 0);
  expect(test.screen49.timer2, 0);
  expect(test.screen49.timer3, 0);
  expect(test.screen49.dsp_flg1, 0);
  expect(test.screen49.dsp_flg2, 0);
  expect(test.screen49.movie01_ext, 0);
  expect(test.screen49.movie02_ext, 0);
  expect(test.screen49.movie03_ext, 0);
  expect(test.screen49.movie04_ext, 0);
  expect(test.screen49.line_title, "銀聯でお支払い");
  expect(test.screen49.line_title_ex, "UnionPay Card Payment");
  expect(test.screen49.line1, "お支払い金額を確認し");
  expect(test.screen49.line2, "カードを読ませてください");
  expect(test.screen49.line3, "");
  expect(test.screen49.line4, "");
  expect(test.screen49.line1_ex, "Please swipe");
  expect(test.screen49.line2_ex, "your unionpay card.");
  expect(test.screen49.line3_ex, "");
  expect(test.screen49.line4_ex, "");
  expect(test.screen49.sound_led1, 6258);
  expect(test.screen49.sound_led2, 6252);
  expect(test.screen49.sound_led3, 0);
  expect(test.screen50.title, "プリカ利用画面<verifone>");
  expect(test.screen50.msg1, "プリペイドカードでお会計ですね");
  expect(test.screen50.msg2, "");
  expect(test.screen50.msg1_size, 0);
  expect(test.screen50.msg2_size, 0);
  expect(test.screen50.sound1, 6258);
  expect(test.screen50.sound2, 6253);
  expect(test.screen50.sound3, 0);
  expect(test.screen50.snd_timer, 20);
  expect(test.screen50.timer1, 0);
  expect(test.screen50.timer2, 0);
  expect(test.screen50.timer3, 0);
  expect(test.screen50.dsp_flg1, 0);
  expect(test.screen50.dsp_flg2, 0);
  expect(test.screen50.movie01_ext, 0);
  expect(test.screen50.movie02_ext, 0);
  expect(test.screen50.movie03_ext, 0);
  expect(test.screen50.movie04_ext, 0);
  expect(test.screen50.line_title, "プリカでお支払い");
  expect(test.screen50.line_title_ex, "Prepaid Card Payment");
  expect(test.screen50.line1, "お支払い金額を確認し");
  expect(test.screen50.line2, "カードを読ませてください");
  expect(test.screen50.line3, "");
  expect(test.screen50.line4, "");
  expect(test.screen50.line1_ex, "Please swipe");
  expect(test.screen50.line2_ex, "your prepaid card.");
  expect(test.screen50.line3_ex, "");
  expect(test.screen50.line4_ex, "");
  expect(test.screen50.sound_led1, 6258);
  expect(test.screen50.sound_led2, 6253);
  expect(test.screen50.sound_led3, 0);
  expect(test.screen51.title, "Edy入金画面<verifone>");
  expect(test.screen51.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen51.msg2, "");
  expect(test.screen51.msg1_size, 0);
  expect(test.screen51.msg2_size, 0);
  expect(test.screen51.sound1, 6216);
  expect(test.screen51.sound2, 6216);
  expect(test.screen51.sound3, "");
  expect(test.screen51.snd_timer, 20);
  expect(test.screen51.timer1, 0);
  expect(test.screen51.timer2, 0);
  expect(test.screen51.timer3, 0);
  expect(test.screen51.dsp_flg1, 0);
  expect(test.screen51.dsp_flg2, 0);
  expect(test.screen51.movie01_ext, 0);
  expect(test.screen51.movie02_ext, 0);
  expect(test.screen51.movie03_ext, 0);
  expect(test.screen51.movie04_ext, 0);
  expect(test.screen51.line_title, "Ｅｄｙチャージ");
  expect(test.screen51.line_title_ex, "Reload Card");
  expect(test.screen51.line1, "お金を");
  expect(test.screen51.line2, "入れてください");
  expect(test.screen51.line3, "");
  expect(test.screen51.line4, "");
  expect(test.screen51.line1_ex, "Insert the payment.");
  expect(test.screen51.line2_ex, "");
  expect(test.screen51.line3_ex, "");
  expect(test.screen51.line4_ex, "");
  expect(test.screen51.sound_led1, 6216);
  expect(test.screen51.sound_led2, 6216);
  expect(test.screen51.sound_led3, "");
  expect(test.screen52.title, "Edyチャージ画面<verifone>");
  expect(test.screen52.msg1, "“Edy”をタッチしてください");
  expect(test.screen52.msg2, "");
  expect(test.screen52.msg1_size, 0);
  expect(test.screen52.msg2_size, 0);
  expect(test.screen52.sound1, 6009);
  expect(test.screen52.sound2, 6009);
  expect(test.screen52.sound3, 0);
  expect(test.screen52.snd_timer, 20);
  expect(test.screen52.timer1, 0);
  expect(test.screen52.timer2, 0);
  expect(test.screen52.timer3, 0);
  expect(test.screen52.dsp_flg1, 0);
  expect(test.screen52.dsp_flg2, 0);
  expect(test.screen52.movie01_ext, 0);
  expect(test.screen52.movie02_ext, 0);
  expect(test.screen52.movie03_ext, 0);
  expect(test.screen52.movie04_ext, 0);
  expect(test.screen52.line_title, "Ｅｄｙチャージ");
  expect(test.screen52.line_title_ex, "Reload Card");
  expect(test.screen52.line1, "チャージ金額を確認し");
  expect(test.screen52.line2, "カードをタッチしてください");
  expect(test.screen52.line3, "");
  expect(test.screen52.line4, "");
  expect(test.screen52.line1_ex, "Tap your IC card");
  expect(test.screen52.line2_ex, "on the terminal.");
  expect(test.screen52.line3_ex, "");
  expect(test.screen52.line4_ex, "");
  expect(test.screen52.sound_led1, 6009);
  expect(test.screen52.sound_led2, 6009);
  expect(test.screen52.sound_led3, 0);
  expect(test.screen53.title, "Edy入金終了画面<verifone>");
  expect(test.screen53.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen53.msg2, "");
  expect(test.screen53.msg1_size, 0);
  expect(test.screen53.msg2_size, 0);
  expect(test.screen53.sound1, 6217);
  expect(test.screen53.sound2, 6217);
  expect(test.screen53.sound3, 0);
  expect(test.screen53.snd_timer, 20);
  expect(test.screen53.timer1, 10);
  expect(test.screen53.timer2, 0);
  expect(test.screen53.timer3, 0);
  expect(test.screen53.dsp_flg1, 0);
  expect(test.screen53.dsp_flg2, 0);
  expect(test.screen53.movie01_ext, 0);
  expect(test.screen53.movie02_ext, 0);
  expect(test.screen53.movie03_ext, 0);
  expect(test.screen53.movie04_ext, 0);
  expect(test.screen53.line_title, "Ｅｄｙチャージ");
  expect(test.screen53.line_title_ex, "Reload Card");
  expect(test.screen53.line1, "よろしければ");
  expect(test.screen53.line2, "チャージボタンを");
  expect(test.screen53.line3, "押してください");
  expect(test.screen53.line4, "");
  expect(test.screen53.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen53.line2_ex, "button to reload");
  expect(test.screen53.line3_ex, "your card.");
  expect(test.screen53.line4_ex, "");
  expect(test.screen53.sound_led1, 6217);
  expect(test.screen53.sound_led2, 6217);
  expect(test.screen53.sound_led3, 0);
  expect(test.screen54.title, "交通系IC入金画面<verifone>");
  expect(test.screen54.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen54.msg2, "");
  expect(test.screen54.msg1_size, 0);
  expect(test.screen54.msg2_size, 0);
  expect(test.screen54.sound1, 6216);
  expect(test.screen54.sound2, 6216);
  expect(test.screen54.sound3, "");
  expect(test.screen54.snd_timer, 20);
  expect(test.screen54.timer1, 0);
  expect(test.screen54.timer2, 0);
  expect(test.screen54.timer3, 0);
  expect(test.screen54.dsp_flg1, 0);
  expect(test.screen54.dsp_flg2, 0);
  expect(test.screen54.movie01_ext, 0);
  expect(test.screen54.movie02_ext, 0);
  expect(test.screen54.movie03_ext, 0);
  expect(test.screen54.movie04_ext, 0);
  expect(test.screen54.line_title, "交通系ＩＣチャージ");
  expect(test.screen54.line_title_ex, "Reload Card");
  expect(test.screen54.line1, "お金を");
  expect(test.screen54.line2, "入れてください");
  expect(test.screen54.line3, "");
  expect(test.screen54.line4, "");
  expect(test.screen54.line1_ex, "Insert the payment.");
  expect(test.screen54.line2_ex, "");
  expect(test.screen54.line3_ex, "");
  expect(test.screen54.line4_ex, "");
  expect(test.screen54.sound_led1, 6216);
  expect(test.screen54.sound_led2, 6216);
  expect(test.screen54.sound_led3, "");
  expect(test.screen55.title, "交通系ICチャージ画面<verifone>");
  expect(test.screen55.msg1, "“交通系IC”をタッチしてください");
  expect(test.screen55.msg2, "");
  expect(test.screen55.msg1_size, 0);
  expect(test.screen55.msg2_size, 0);
  expect(test.screen55.sound1, 6009);
  expect(test.screen55.sound2, 6009);
  expect(test.screen55.sound3, 0);
  expect(test.screen55.snd_timer, 20);
  expect(test.screen55.timer1, 0);
  expect(test.screen55.timer2, 0);
  expect(test.screen55.timer3, 0);
  expect(test.screen55.dsp_flg1, 0);
  expect(test.screen55.dsp_flg2, 0);
  expect(test.screen55.movie01_ext, 0);
  expect(test.screen55.movie02_ext, 0);
  expect(test.screen55.movie03_ext, 0);
  expect(test.screen55.movie04_ext, 0);
  expect(test.screen55.line_title, "交通系ＩＣチャージ");
  expect(test.screen55.line_title_ex, "Reload Card");
  expect(test.screen55.line1, "チャージ金額を確認し");
  expect(test.screen55.line2, "カードをタッチしてください");
  expect(test.screen55.line3, "");
  expect(test.screen55.line4, "");
  expect(test.screen55.line1_ex, "Tap your IC card");
  expect(test.screen55.line2_ex, "on the terminal.");
  expect(test.screen55.line3_ex, "");
  expect(test.screen55.line4_ex, "");
  expect(test.screen55.sound_led1, 6009);
  expect(test.screen55.sound_led2, 6009);
  expect(test.screen55.sound_led3, 0);
  expect(test.screen56.title, "交通系IC入金終了画面<verifone>");
  expect(test.screen56.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen56.msg2, "");
  expect(test.screen56.msg1_size, 0);
  expect(test.screen56.msg2_size, 0);
  expect(test.screen56.sound1, 6217);
  expect(test.screen56.sound2, 6217);
  expect(test.screen56.sound3, 0);
  expect(test.screen56.snd_timer, 20);
  expect(test.screen56.timer1, 10);
  expect(test.screen56.timer2, 0);
  expect(test.screen56.timer3, 0);
  expect(test.screen56.dsp_flg1, 0);
  expect(test.screen56.dsp_flg2, 0);
  expect(test.screen56.movie01_ext, 0);
  expect(test.screen56.movie02_ext, 0);
  expect(test.screen56.movie03_ext, 0);
  expect(test.screen56.movie04_ext, 0);
  expect(test.screen56.line_title, "交通系ＩＣチャージ");
  expect(test.screen56.line_title_ex, "Reload Card");
  expect(test.screen56.line1, "よろしければ");
  expect(test.screen56.line2, "チャージボタンを");
  expect(test.screen56.line3, "押してください");
  expect(test.screen56.line4, "");
  expect(test.screen56.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen56.line2_ex, "button to reload");
  expect(test.screen56.line3_ex, "your card.");
  expect(test.screen56.line4_ex, "");
  expect(test.screen56.sound_led1, 6217);
  expect(test.screen56.sound_led2, 6217);
  expect(test.screen56.sound_led3, 0);
  expect(test.screen57.title, "WAON入金画面<verifone>");
  expect(test.screen57.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen57.msg2, "");
  expect(test.screen57.msg1_size, 0);
  expect(test.screen57.msg2_size, 0);
  expect(test.screen57.sound1, 6216);
  expect(test.screen57.sound2, 6216);
  expect(test.screen57.sound3, "");
  expect(test.screen57.snd_timer, 20);
  expect(test.screen57.timer1, 0);
  expect(test.screen57.timer2, 0);
  expect(test.screen57.timer3, 0);
  expect(test.screen57.dsp_flg1, 0);
  expect(test.screen57.dsp_flg2, 0);
  expect(test.screen57.movie01_ext, 0);
  expect(test.screen57.movie02_ext, 0);
  expect(test.screen57.movie03_ext, 0);
  expect(test.screen57.movie04_ext, 0);
  expect(test.screen57.line_title, "ＷＡＯＮチャージ");
  expect(test.screen57.line_title_ex, "Reload Card");
  expect(test.screen57.line1, "お金を");
  expect(test.screen57.line2, "入れてください");
  expect(test.screen57.line3, "");
  expect(test.screen57.line4, "");
  expect(test.screen57.line1_ex, "Insert the payment.");
  expect(test.screen57.line2_ex, "");
  expect(test.screen57.line3_ex, "");
  expect(test.screen57.line4_ex, "");
  expect(test.screen57.sound_led1, 6216);
  expect(test.screen57.sound_led2, 6216);
  expect(test.screen57.sound_led3, "");
  expect(test.screen58.title, "WAONチャージ画面<verifone>");
  expect(test.screen58.msg1, "“WAON”をタッチしてください");
  expect(test.screen58.msg2, "");
  expect(test.screen58.msg1_size, 0);
  expect(test.screen58.msg2_size, 0);
  expect(test.screen58.sound1, 6009);
  expect(test.screen58.sound2, 6009);
  expect(test.screen58.sound3, 0);
  expect(test.screen58.snd_timer, 20);
  expect(test.screen58.timer1, 0);
  expect(test.screen58.timer2, 0);
  expect(test.screen58.timer3, 0);
  expect(test.screen58.dsp_flg1, 0);
  expect(test.screen58.dsp_flg2, 0);
  expect(test.screen58.movie01_ext, 0);
  expect(test.screen58.movie02_ext, 0);
  expect(test.screen58.movie03_ext, 0);
  expect(test.screen58.movie04_ext, 0);
  expect(test.screen58.line_title, "ＷＡＯＮチャージ");
  expect(test.screen58.line_title_ex, "Reload Card");
  expect(test.screen58.line1, "チャージ金額を確認し");
  expect(test.screen58.line2, "カードをタッチしてください");
  expect(test.screen58.line3, "");
  expect(test.screen58.line4, "");
  expect(test.screen58.line1_ex, "Tap your IC card");
  expect(test.screen58.line2_ex, "on the terminal.");
  expect(test.screen58.line3_ex, "");
  expect(test.screen58.line4_ex, "");
  expect(test.screen58.sound_led1, 6009);
  expect(test.screen58.sound_led2, 6009);
  expect(test.screen58.sound_led3, 0);
  expect(test.screen59.title, "WAON入金終了画面<verifone>");
  expect(test.screen59.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen59.msg2, "");
  expect(test.screen59.msg1_size, 0);
  expect(test.screen59.msg2_size, 0);
  expect(test.screen59.sound1, 6217);
  expect(test.screen59.sound2, 6217);
  expect(test.screen59.sound3, 0);
  expect(test.screen59.snd_timer, 20);
  expect(test.screen59.timer1, 10);
  expect(test.screen59.timer2, 0);
  expect(test.screen59.timer3, 0);
  expect(test.screen59.dsp_flg1, 0);
  expect(test.screen59.dsp_flg2, 0);
  expect(test.screen59.movie01_ext, 0);
  expect(test.screen59.movie02_ext, 0);
  expect(test.screen59.movie03_ext, 0);
  expect(test.screen59.movie04_ext, 0);
  expect(test.screen59.line_title, "ＷＡＯＮチャージ");
  expect(test.screen59.line_title_ex, "Reload Card");
  expect(test.screen59.line1, "よろしければ");
  expect(test.screen59.line2, "チャージボタンを");
  expect(test.screen59.line3, "押してください");
  expect(test.screen59.line4, "");
  expect(test.screen59.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen59.line2_ex, "button to reload");
  expect(test.screen59.line3_ex, "your card.");
  expect(test.screen59.line4_ex, "");
  expect(test.screen59.sound_led1, 6217);
  expect(test.screen59.sound_led2, 6217);
  expect(test.screen59.sound_led3, 0);
  expect(test.screen60.title, "nanaco入金画面<verifone>");
  expect(test.screen60.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen60.msg2, "");
  expect(test.screen60.msg1_size, 0);
  expect(test.screen60.msg2_size, 0);
  expect(test.screen60.sound1, 6216);
  expect(test.screen60.sound2, 6216);
  expect(test.screen60.sound3, "");
  expect(test.screen60.snd_timer, 20);
  expect(test.screen60.timer1, 0);
  expect(test.screen60.timer2, 0);
  expect(test.screen60.timer3, 0);
  expect(test.screen60.dsp_flg1, 0);
  expect(test.screen60.dsp_flg2, 0);
  expect(test.screen60.movie01_ext, 0);
  expect(test.screen60.movie02_ext, 0);
  expect(test.screen60.movie03_ext, 0);
  expect(test.screen60.movie04_ext, 0);
  expect(test.screen60.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen60.line_title_ex, "Reload Card");
  expect(test.screen60.line1, "お金を");
  expect(test.screen60.line2, "入れてください");
  expect(test.screen60.line3, "");
  expect(test.screen60.line4, "");
  expect(test.screen60.line1_ex, "Insert the payment.");
  expect(test.screen60.line2_ex, "");
  expect(test.screen60.line3_ex, "");
  expect(test.screen60.line4_ex, "");
  expect(test.screen60.sound_led1, 6216);
  expect(test.screen60.sound_led2, 6216);
  expect(test.screen60.sound_led3, "");
  expect(test.screen61.title, "nanacoチャージ画面<verifone>");
  expect(test.screen61.msg1, "“nanaco”をタッチしてください");
  expect(test.screen61.msg2, "");
  expect(test.screen61.msg1_size, 0);
  expect(test.screen61.msg2_size, 0);
  expect(test.screen61.sound1, 6009);
  expect(test.screen61.sound2, 6009);
  expect(test.screen61.sound3, 0);
  expect(test.screen61.snd_timer, 20);
  expect(test.screen61.timer1, 0);
  expect(test.screen61.timer2, 0);
  expect(test.screen61.timer3, 0);
  expect(test.screen61.dsp_flg1, 0);
  expect(test.screen61.dsp_flg2, 0);
  expect(test.screen61.movie01_ext, 0);
  expect(test.screen61.movie02_ext, 0);
  expect(test.screen61.movie03_ext, 0);
  expect(test.screen61.movie04_ext, 0);
  expect(test.screen61.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen61.line_title_ex, "Reload Card");
  expect(test.screen61.line1, "チャージ金額を確認し");
  expect(test.screen61.line2, "カードをタッチしてください");
  expect(test.screen61.line3, "");
  expect(test.screen61.line4, "");
  expect(test.screen61.line1_ex, "Tap your IC card");
  expect(test.screen61.line2_ex, "on the terminal.");
  expect(test.screen61.line3_ex, "");
  expect(test.screen61.line4_ex, "");
  expect(test.screen61.sound_led1, 6009);
  expect(test.screen61.sound_led2, 6009);
  expect(test.screen61.sound_led3, 0);
  expect(test.screen62.title, "nanaco入金終了画面<verifone>");
  expect(test.screen62.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen62.msg2, "");
  expect(test.screen62.msg1_size, 0);
  expect(test.screen62.msg2_size, 0);
  expect(test.screen62.sound1, 6217);
  expect(test.screen62.sound2, 6217);
  expect(test.screen62.sound3, 0);
  expect(test.screen62.snd_timer, 20);
  expect(test.screen62.timer1, 10);
  expect(test.screen62.timer2, 0);
  expect(test.screen62.timer3, 0);
  expect(test.screen62.dsp_flg1, 0);
  expect(test.screen62.dsp_flg2, 0);
  expect(test.screen62.movie01_ext, 0);
  expect(test.screen62.movie02_ext, 0);
  expect(test.screen62.movie03_ext, 0);
  expect(test.screen62.movie04_ext, 0);
  expect(test.screen62.line_title, "ｎａｎａｃｏチャージ");
  expect(test.screen62.line_title_ex, "Reload Card");
  expect(test.screen62.line1, "よろしければ");
  expect(test.screen62.line2, "チャージボタンを");
  expect(test.screen62.line3, "押してください");
  expect(test.screen62.line4, "");
  expect(test.screen62.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen62.line2_ex, "button to reload");
  expect(test.screen62.line3_ex, "your card.");
  expect(test.screen62.line4_ex, "");
  expect(test.screen62.sound_led1, 6217);
  expect(test.screen62.sound_led2, 6217);
  expect(test.screen62.sound_led3, 0);
  expect(test.screen63.title, "プリカ入金画面<verifone>");
  expect(test.screen63.msg1, "チャージ金額を確認しお金をいれてください");
  expect(test.screen63.msg2, "");
  expect(test.screen63.msg1_size, 0);
  expect(test.screen63.msg2_size, 0);
  expect(test.screen63.sound1, 6216);
  expect(test.screen63.sound2, 6216);
  expect(test.screen63.sound3, "");
  expect(test.screen63.snd_timer, 20);
  expect(test.screen63.timer1, 0);
  expect(test.screen63.timer2, 0);
  expect(test.screen63.timer3, 0);
  expect(test.screen63.dsp_flg1, 0);
  expect(test.screen63.dsp_flg2, 0);
  expect(test.screen63.movie01_ext, 0);
  expect(test.screen63.movie02_ext, 0);
  expect(test.screen63.movie03_ext, 0);
  expect(test.screen63.movie04_ext, 0);
  expect(test.screen63.line_title, "プリカチャージ");
  expect(test.screen63.line_title_ex, "Reload Card");
  expect(test.screen63.line1, "お金を");
  expect(test.screen63.line2, "入れてください");
  expect(test.screen63.line3, "");
  expect(test.screen63.line4, "");
  expect(test.screen63.line1_ex, "Insert the payment.");
  expect(test.screen63.line2_ex, "");
  expect(test.screen63.line3_ex, "");
  expect(test.screen63.line4_ex, "");
  expect(test.screen63.sound_led1, 6216);
  expect(test.screen63.sound_led2, 6216);
  expect(test.screen63.sound_led3, "");
  expect(test.screen64.title, "プリカチャージ画面<verifone>");
  expect(test.screen64.msg1, "“プリペイドカード”を読ませてください");
  expect(test.screen64.msg2, "");
  expect(test.screen64.msg1_size, 0);
  expect(test.screen64.msg2_size, 0);
  expect(test.screen64.sound1, 6258);
  expect(test.screen64.sound2, 6258);
  expect(test.screen64.sound3, 0);
  expect(test.screen64.snd_timer, 20);
  expect(test.screen64.timer1, 0);
  expect(test.screen64.timer2, 0);
  expect(test.screen64.timer3, 0);
  expect(test.screen64.dsp_flg1, 0);
  expect(test.screen64.dsp_flg2, 0);
  expect(test.screen64.movie01_ext, 0);
  expect(test.screen64.movie02_ext, 0);
  expect(test.screen64.movie03_ext, 0);
  expect(test.screen64.movie04_ext, 0);
  expect(test.screen64.line_title, "プリカチャージ");
  expect(test.screen64.line_title_ex, "Reload Card");
  expect(test.screen64.line1, "チャージ金額を確認し");
  expect(test.screen64.line2, "カードを読ませてください");
  expect(test.screen64.line3, "");
  expect(test.screen64.line4, "");
  expect(test.screen64.line1_ex, "Please swipe");
  expect(test.screen64.line2_ex, "your prepaid card.");
  expect(test.screen64.line3_ex, "");
  expect(test.screen64.line4_ex, "");
  expect(test.screen64.sound_led1, 6258);
  expect(test.screen64.sound_led2, 6258);
  expect(test.screen64.sound_led3, 0);
  expect(test.screen65.title, "プリカ入金終了画面<verifone>");
  expect(test.screen65.msg1, "よろしければチャージボタンを押してください");
  expect(test.screen65.msg2, "");
  expect(test.screen65.msg1_size, 0);
  expect(test.screen65.msg2_size, 0);
  expect(test.screen65.sound1, 6217);
  expect(test.screen65.sound2, 6217);
  expect(test.screen65.sound3, 0);
  expect(test.screen65.snd_timer, 20);
  expect(test.screen65.timer1, 10);
  expect(test.screen65.timer2, 0);
  expect(test.screen65.timer3, 0);
  expect(test.screen65.dsp_flg1, 0);
  expect(test.screen65.dsp_flg2, 0);
  expect(test.screen65.movie01_ext, 0);
  expect(test.screen65.movie02_ext, 0);
  expect(test.screen65.movie03_ext, 0);
  expect(test.screen65.movie04_ext, 0);
  expect(test.screen65.line_title, "プリカチャージ");
  expect(test.screen65.line_title_ex, "Reload Card");
  expect(test.screen65.line1, "よろしければ");
  expect(test.screen65.line2, "チャージボタンを");
  expect(test.screen65.line3, "押してください");
  expect(test.screen65.line4, "");
  expect(test.screen65.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen65.line2_ex, "button to reload");
  expect(test.screen65.line3_ex, "your card.");
  expect(test.screen65.line4_ex, "");
  expect(test.screen65.sound_led1, 6217);
  expect(test.screen65.sound_led2, 6217);
  expect(test.screen65.sound_led3, 0);
  expect(test.screen67.title, "店員操作中画面<対面>");
  expect(test.screen67.msg1, "");
  expect(test.screen67.msg2, "");
  expect(test.screen67.msg1_size, 0);
  expect(test.screen67.msg2_size, 0);
  expect(test.screen67.sound1, 0);
  expect(test.screen67.sound2, 0);
  expect(test.screen67.sound3, 0);
  expect(test.screen67.snd_timer, 0);
  expect(test.screen67.timer1, 0);
  expect(test.screen67.timer2, 0);
  expect(test.screen67.timer3, 0);
  expect(test.screen67.dsp_flg1, 0);
  expect(test.screen67.dsp_flg2, 0);
  expect(test.screen67.movie01_ext, 0);
  expect(test.screen67.movie02_ext, 0);
  expect(test.screen67.movie03_ext, 0);
  expect(test.screen67.movie04_ext, 0);
  expect(test.screen67.line_title, "");
  expect(test.screen67.line_title_ex, "");
  expect(test.screen67.line1, "店員操作中です");
  expect(test.screen67.line2, "お待ちください");
  expect(test.screen67.line3, "");
  expect(test.screen67.line4, "");
  expect(test.screen67.line1_ex, "");
  expect(test.screen67.line2_ex, "");
  expect(test.screen67.line3_ex, "");
  expect(test.screen67.line4_ex, "");
  expect(test.screen67.sound_led1, 0);
  expect(test.screen67.sound_led2, 0);
  expect(test.screen67.sound_led3, 0);
  expect(test.screen68.title, "プリカチャージ入金完了画面");
  expect(test.screen68.msg1, "");
  expect(test.screen68.msg2, "");
  expect(test.screen68.msg1_size, 0);
  expect(test.screen68.msg2_size, 0);
  expect(test.screen68.sound1, 0);
  expect(test.screen68.sound2, 0);
  expect(test.screen68.sound3, 0);
  expect(test.screen68.snd_timer, 0);
  expect(test.screen68.timer1, 0);
  expect(test.screen68.timer2, 0);
  expect(test.screen68.timer3, 0);
  expect(test.screen68.dsp_flg1, 0);
  expect(test.screen68.dsp_flg2, 0);
  expect(test.screen68.movie01_ext, 0);
  expect(test.screen68.movie02_ext, 0);
  expect(test.screen68.movie03_ext, 0);
  expect(test.screen68.movie04_ext, 0);
  expect(test.screen68.line_title, "");
  expect(test.screen68.line_title_ex, "");
  expect(test.screen68.line1, "よろしければ");
  expect(test.screen68.line2, "チャージボタンを");
  expect(test.screen68.line3, "押してください");
  expect(test.screen68.line4, "");
  expect(test.screen68.line1_ex, "");
  expect(test.screen68.line2_ex, "");
  expect(test.screen68.line3_ex, "");
  expect(test.screen68.line4_ex, "");
  expect(test.screen68.sound_led1, 6179);
  expect(test.screen68.sound_led2, 6217);
  expect(test.screen68.sound_led3, 0);
  expect(test.screen69.title, "チャージ完了画面<印字なし>");
  expect(test.screen69.msg1, "");
  expect(test.screen69.msg2, "");
  expect(test.screen69.msg1_size, 0);
  expect(test.screen69.msg2_size, 0);
  expect(test.screen69.sound1, 0);
  expect(test.screen69.sound2, 0);
  expect(test.screen69.sound3, 0);
  expect(test.screen69.snd_timer, 0);
  expect(test.screen69.timer1, 0);
  expect(test.screen69.timer2, 0);
  expect(test.screen69.timer3, 0);
  expect(test.screen69.dsp_flg1, 0);
  expect(test.screen69.dsp_flg2, 0);
  expect(test.screen69.movie01_ext, 0);
  expect(test.screen69.movie02_ext, 0);
  expect(test.screen69.movie03_ext, 0);
  expect(test.screen69.movie04_ext, 0);
  expect(test.screen69.line_title, "");
  expect(test.screen69.line_title_ex, "");
  expect(test.screen69.line1, "チャージしました");
  expect(test.screen69.line2, "お支払いを続けて");
  expect(test.screen69.line3, "ください");
  expect(test.screen69.line4, "");
  expect(test.screen69.line1_ex, "");
  expect(test.screen69.line2_ex, "");
  expect(test.screen69.line3_ex, "");
  expect(test.screen69.line4_ex, "");
  expect(test.screen69.sound_led1, 0);
  expect(test.screen69.sound_led2, 0);
  expect(test.screen69.sound_led3, 0);
  expect(test.screen70.title, "あいさつ画面");
  expect(test.screen70.msg1, "");
  expect(test.screen70.msg2, "");
  expect(test.screen70.msg1_size, 0);
  expect(test.screen70.msg2_size, 0);
  expect(test.screen70.sound1, 6547);
  expect(test.screen70.sound2, 0);
  expect(test.screen70.sound3, 0);
  expect(test.screen70.snd_timer, 20);
  expect(test.screen70.timer1, 0);
  expect(test.screen70.timer2, 0);
  expect(test.screen70.timer3, 0);
  expect(test.screen70.dsp_flg1, 0);
  expect(test.screen70.dsp_flg2, 0);
  expect(test.screen70.movie01_ext, 0);
  expect(test.screen70.movie02_ext, 0);
  expect(test.screen70.movie03_ext, 0);
  expect(test.screen70.movie04_ext, 0);
  expect(test.screen70.line_title, "");
  expect(test.screen70.line_title_ex, "");
  expect(test.screen70.line1, "");
  expect(test.screen70.line2, "");
  expect(test.screen70.line3, "");
  expect(test.screen70.line4, "");
  expect(test.screen70.line1_ex, "");
  expect(test.screen70.line2_ex, "");
  expect(test.screen70.line3_ex, "");
  expect(test.screen70.line4_ex, "");
  expect(test.screen70.sound_led1, 6547);
  expect(test.screen70.sound_led2, 0);
  expect(test.screen70.sound_led3, 0);
  expect(test.screen71.title, "会員カード選択画面");
  expect(test.screen71.msg1, "");
  expect(test.screen71.msg2, "");
  expect(test.screen71.msg1_size, 0);
  expect(test.screen71.msg2_size, 0);
  expect(test.screen71.sound1, 6547);
  expect(test.screen71.sound2, 0);
  expect(test.screen71.sound3, 0);
  expect(test.screen71.snd_timer, 20);
  expect(test.screen71.timer1, 0);
  expect(test.screen71.timer2, 0);
  expect(test.screen71.timer3, 0);
  expect(test.screen71.dsp_flg1, 0);
  expect(test.screen71.dsp_flg2, 0);
  expect(test.screen71.movie01_ext, 0);
  expect(test.screen71.movie02_ext, 0);
  expect(test.screen71.movie03_ext, 0);
  expect(test.screen71.movie04_ext, 0);
  expect(test.screen71.line_title, "");
  expect(test.screen71.line_title_ex, "");
  expect(test.screen71.line1, "");
  expect(test.screen71.line2, "");
  expect(test.screen71.line3, "");
  expect(test.screen71.line4, "");
  expect(test.screen71.line1_ex, "");
  expect(test.screen71.line2_ex, "");
  expect(test.screen71.line3_ex, "");
  expect(test.screen71.line4_ex, "");
  expect(test.screen71.sound_led1, 6547);
  expect(test.screen71.sound_led2, 0);
  expect(test.screen71.sound_led3, 0);
  expect(test.screen72.title, "会員リード画面");
  expect(test.screen72.msg1, "");
  expect(test.screen72.msg2, "");
  expect(test.screen72.msg1_size, 0);
  expect(test.screen72.msg2_size, 0);
  expect(test.screen72.sound1, 6143);
  expect(test.screen72.sound2, 0);
  expect(test.screen72.sound3, 0);
  expect(test.screen72.snd_timer, 20);
  expect(test.screen72.timer1, 0);
  expect(test.screen72.timer2, 0);
  expect(test.screen72.timer3, 0);
  expect(test.screen72.dsp_flg1, 0);
  expect(test.screen72.dsp_flg2, 0);
  expect(test.screen72.movie01_ext, 0);
  expect(test.screen72.movie02_ext, 0);
  expect(test.screen72.movie03_ext, 0);
  expect(test.screen72.movie04_ext, 0);
  expect(test.screen72.line_title, "");
  expect(test.screen72.line_title_ex, "");
  expect(test.screen72.line1, "");
  expect(test.screen72.line2, "");
  expect(test.screen72.line3, "");
  expect(test.screen72.line4, "");
  expect(test.screen72.line1_ex, "");
  expect(test.screen72.line2_ex, "");
  expect(test.screen72.line3_ex, "");
  expect(test.screen72.line4_ex, "");
  expect(test.screen72.sound_led1, 6143);
  expect(test.screen72.sound_led2, 0);
  expect(test.screen72.sound_led3, 0);
  expect(test.screen73.title, "dポイント支払画面");
  expect(test.screen73.msg1, "");
  expect(test.screen73.msg2, "");
  expect(test.screen73.msg1_size, 24);
  expect(test.screen73.msg2_size, 0);
  expect(test.screen73.sound1, 6534);
  expect(test.screen73.sound2, 6534);
  expect(test.screen73.sound3, 0);
  expect(test.screen73.snd_timer, 20);
  expect(test.screen73.timer1, 10);
  expect(test.screen73.timer2, 0);
  expect(test.screen73.timer3, 0);
  expect(test.screen73.dsp_flg1, 0);
  expect(test.screen73.dsp_flg2, 0);
  expect(test.screen73.movie01_ext, 0);
  expect(test.screen73.movie02_ext, 0);
  expect(test.screen73.movie03_ext, 0);
  expect(test.screen73.movie04_ext, 0);
  expect(test.screen73.line_title, "");
  expect(test.screen73.line_title_ex, "");
  expect(test.screen73.line1, "ポイント数を入力して");
  expect(test.screen73.line2, "決定を押してください");
  expect(test.screen73.line3, "訂正する場合はクリア");
  expect(test.screen73.line4, "ボタンを押してください");
  expect(test.screen73.line1_ex, "");
  expect(test.screen73.line2_ex, "");
  expect(test.screen73.line3_ex, "");
  expect(test.screen73.line4_ex, "");
  expect(test.screen73.sound_led1, 6534);
  expect(test.screen73.sound_led2, 6534);
  expect(test.screen73.sound_led3, 0);
  expect(test.screen74.title, "dﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen74.msg1, "");
  expect(test.screen74.msg2, "");
  expect(test.screen74.msg1_size, 0);
  expect(test.screen74.msg2_size, 0);
  expect(test.screen74.sound1, 6179);
  expect(test.screen74.sound2, 6179);
  expect(test.screen74.sound3, 0);
  expect(test.screen74.snd_timer, 20);
  expect(test.screen74.timer1, 10);
  expect(test.screen74.timer2, 0);
  expect(test.screen74.timer3, 0);
  expect(test.screen74.dsp_flg1, 0);
  expect(test.screen74.dsp_flg2, 0);
  expect(test.screen74.movie01_ext, 0);
  expect(test.screen74.movie02_ext, 0);
  expect(test.screen74.movie03_ext, 0);
  expect(test.screen74.movie04_ext, 0);
  expect(test.screen74.line_title, "");
  expect(test.screen74.line_title_ex, "");
  expect(test.screen74.line1, "よろしければ");
  expect(test.screen74.line2, "おわりボタンを");
  expect(test.screen74.line3, "押してください");
  expect(test.screen74.line4, "");
  expect(test.screen74.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen74.line2_ex, "button to complete");
  expect(test.screen74.line3_ex, "the payment.");
  expect(test.screen74.line4_ex, "");
  expect(test.screen74.sound_led1, 6179);
  expect(test.screen74.sound_led2, 6179);
  expect(test.screen74.sound_led3, 0);
  expect(test.screen75.title, "dﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen75.msg1, "レシートをお取りください。");
  expect(test.screen75.msg2, "");
  expect(test.screen75.msg1_size, 0);
  expect(test.screen75.msg2_size, 0);
  expect(test.screen75.sound1, 6133);
  expect(test.screen75.sound2, 6133);
  expect(test.screen75.sound3, 0);
  expect(test.screen75.snd_timer, 0);
  expect(test.screen75.timer1, 5);
  expect(test.screen75.timer2, 10);
  expect(test.screen75.timer3, 0);
  expect(test.screen75.dsp_flg1, 0);
  expect(test.screen75.dsp_flg2, 0);
  expect(test.screen75.movie01_ext, 0);
  expect(test.screen75.movie02_ext, 0);
  expect(test.screen75.movie03_ext, 0);
  expect(test.screen75.movie04_ext, 0);
  expect(test.screen75.line_title, "");
  expect(test.screen75.line_title_ex, "");
  expect(test.screen75.line1, "レシートを");
  expect(test.screen75.line2, "お受け取りください");
  expect(test.screen75.line3, "ありがとう");
  expect(test.screen75.line4, "ございました");
  expect(test.screen75.line1_ex, "Thank you.");
  expect(test.screen75.line2_ex, "Please take your receipt.");
  expect(test.screen75.line3_ex, "");
  expect(test.screen75.line4_ex, "");
  expect(test.screen75.sound_led1, 6133);
  expect(test.screen75.sound_led2, 6133);
  expect(test.screen75.sound_led3, 0);
  expect(test.screen76.title, "LINE Pay読取画面");
  expect(test.screen76.msg1, "");
  expect(test.screen76.msg2, "");
  expect(test.screen76.msg1_size, 24);
  expect(test.screen76.msg2_size, 0);
  expect(test.screen76.sound1, 0);
  expect(test.screen76.sound2, 0);
  expect(test.screen76.sound3, 0);
  expect(test.screen76.snd_timer, 20);
  expect(test.screen76.timer1, 0);
  expect(test.screen76.timer2, 0);
  expect(test.screen76.timer3, 0);
  expect(test.screen76.dsp_flg1, 0);
  expect(test.screen76.dsp_flg2, 0);
  expect(test.screen76.movie01_ext, 0);
  expect(test.screen76.movie02_ext, 0);
  expect(test.screen76.movie03_ext, 0);
  expect(test.screen76.movie04_ext, 0);
  expect(test.screen76.line_title, "LINE Payでお支払い");
  expect(test.screen76.line_title_ex, "");
  expect(test.screen76.line1, "お支払い金額を確認し");
  expect(test.screen76.line2, "バーコードを読ませてください");
  expect(test.screen76.line3, "");
  expect(test.screen76.line4, "");
  expect(test.screen76.line1_ex, "");
  expect(test.screen76.line2_ex, "");
  expect(test.screen76.line3_ex, "");
  expect(test.screen76.line4_ex, "");
  expect(test.screen76.sound_led1, 6273);
  expect(test.screen76.sound_led2, 6273);
  expect(test.screen76.sound_led3, 0);
  expect(test.screen77.title, "Alipay読取画面");
  expect(test.screen77.msg1, "");
  expect(test.screen77.msg2, "");
  expect(test.screen77.msg1_size, 0);
  expect(test.screen77.msg2_size, 0);
  expect(test.screen77.sound1, 0);
  expect(test.screen77.sound2, 0);
  expect(test.screen77.sound3, 0);
  expect(test.screen77.snd_timer, 20);
  expect(test.screen77.timer1, 0);
  expect(test.screen77.timer2, 0);
  expect(test.screen77.timer3, 0);
  expect(test.screen77.dsp_flg1, 0);
  expect(test.screen77.dsp_flg2, 0);
  expect(test.screen77.movie01_ext, 0);
  expect(test.screen77.movie02_ext, 0);
  expect(test.screen77.movie03_ext, 0);
  expect(test.screen77.movie04_ext, 0);
  expect(test.screen77.line_title, "Alipayでお支払い");
  expect(test.screen77.line_title_ex, "");
  expect(test.screen77.line1, "お支払い金額を確認し");
  expect(test.screen77.line2, "QRコードを読み込んでください");
  expect(test.screen77.line3, "");
  expect(test.screen77.line4, "");
  expect(test.screen77.line1_ex, "");
  expect(test.screen77.line2_ex, "");
  expect(test.screen77.line3_ex, "");
  expect(test.screen77.line4_ex, "");
  expect(test.screen77.sound_led1, 6272);
  expect(test.screen77.sound_led2, 6272);
  expect(test.screen77.sound_led3, 0);
  expect(test.screen78.title, "バーコード決済支払完了画面");
  expect(test.screen78.msg1, "レシートをお取りください。");
  expect(test.screen78.msg2, "");
  expect(test.screen78.msg1_size, 0);
  expect(test.screen78.msg2_size, 0);
  expect(test.screen78.sound1, 0);
  expect(test.screen78.sound2, 0);
  expect(test.screen78.sound3, 0);
  expect(test.screen78.snd_timer, 0);
  expect(test.screen78.timer1, 5);
  expect(test.screen78.timer2, 10);
  expect(test.screen78.timer3, 0);
  expect(test.screen78.dsp_flg1, 0);
  expect(test.screen78.dsp_flg2, 0);
  expect(test.screen78.movie01_ext, 0);
  expect(test.screen78.movie02_ext, 0);
  expect(test.screen78.movie03_ext, 0);
  expect(test.screen78.movie04_ext, 0);
  expect(test.screen78.line_title, "");
  expect(test.screen78.line_title_ex, "");
  expect(test.screen78.line1, "レシートを");
  expect(test.screen78.line2, "お受け取りください");
  expect(test.screen78.line3, "ありがとう");
  expect(test.screen78.line4, "ございました");
  expect(test.screen78.line1_ex, "");
  expect(test.screen78.line2_ex, "");
  expect(test.screen78.line3_ex, "");
  expect(test.screen78.line4_ex, "");
  expect(test.screen78.sound_led1, 6133);
  expect(test.screen78.sound_led2, 6133);
  expect(test.screen78.sound_led3, 0);
  expect(test.screen79.title, "バーコード決済残高不足画面");
  expect(test.screen79.msg1, "残高が不足しています");
  expect(test.screen79.msg2, "");
  expect(test.screen79.msg1_size, 24);
  expect(test.screen79.msg2_size, 0);
  expect(test.screen79.sound1, 0);
  expect(test.screen79.sound2, 0);
  expect(test.screen79.sound3, 0);
  expect(test.screen79.snd_timer, 20);
  expect(test.screen79.timer1, 0);
  expect(test.screen79.timer2, 0);
  expect(test.screen79.timer3, 0);
  expect(test.screen79.dsp_flg1, 0);
  expect(test.screen79.dsp_flg2, 0);
  expect(test.screen79.movie01_ext, 0);
  expect(test.screen79.movie02_ext, 0);
  expect(test.screen79.movie03_ext, 0);
  expect(test.screen79.movie04_ext, 0);
  expect(test.screen79.line_title, "");
  expect(test.screen79.line_title_ex, "");
  expect(test.screen79.line1, "");
  expect(test.screen79.line2, "");
  expect(test.screen79.line3, "");
  expect(test.screen79.line4, "");
  expect(test.screen79.line1_ex, "");
  expect(test.screen79.line2_ex, "");
  expect(test.screen79.line3_ex, "");
  expect(test.screen79.line4_ex, "");
  expect(test.screen79.sound_led1, 6280);
  expect(test.screen79.sound_led2, 6280);
  expect(test.screen79.sound_led3, 0);
  expect(test.screen81.title, "Alipay読取画面");
  expect(test.screen81.msg1, "");
  expect(test.screen81.msg2, "");
  expect(test.screen81.msg1_size, 24);
  expect(test.screen81.msg2_size, 0);
  expect(test.screen81.sound1, 0);
  expect(test.screen81.sound2, 0);
  expect(test.screen81.sound3, 0);
  expect(test.screen81.snd_timer, 20);
  expect(test.screen81.timer1, 0);
  expect(test.screen81.timer2, 0);
  expect(test.screen81.timer3, 0);
  expect(test.screen81.dsp_flg1, 0);
  expect(test.screen81.dsp_flg2, 0);
  expect(test.screen81.movie01_ext, 0);
  expect(test.screen81.movie02_ext, 0);
  expect(test.screen81.movie03_ext, 0);
  expect(test.screen81.movie04_ext, 0);
  expect(test.screen81.line_title, "Alipayでお支払い");
  expect(test.screen81.line_title_ex, "");
  expect(test.screen81.line1, "お支払い金額を確認し");
  expect(test.screen81.line2, "バーコードを読ませてください");
  expect(test.screen81.line3, "");
  expect(test.screen81.line4, "");
  expect(test.screen81.line1_ex, "");
  expect(test.screen81.line2_ex, "");
  expect(test.screen81.line3_ex, "");
  expect(test.screen81.line4_ex, "");
  expect(test.screen81.sound_led1, 6273);
  expect(test.screen81.sound_led2, 6273);
  expect(test.screen81.sound_led3, 0);
  expect(test.screen82.title, "WeChatPay読取画面");
  expect(test.screen82.msg1, "");
  expect(test.screen82.msg2, "");
  expect(test.screen82.msg1_size, 0);
  expect(test.screen82.msg2_size, 0);
  expect(test.screen82.sound1, 0);
  expect(test.screen82.sound2, 0);
  expect(test.screen82.sound3, 0);
  expect(test.screen82.snd_timer, 20);
  expect(test.screen82.timer1, 0);
  expect(test.screen82.timer2, 0);
  expect(test.screen82.timer3, 0);
  expect(test.screen82.dsp_flg1, 0);
  expect(test.screen82.dsp_flg2, 0);
  expect(test.screen82.movie01_ext, 0);
  expect(test.screen82.movie02_ext, 0);
  expect(test.screen82.movie03_ext, 0);
  expect(test.screen82.movie04_ext, 0);
  expect(test.screen82.line_title, "WeChatPayでお支払い");
  expect(test.screen82.line_title_ex, "");
  expect(test.screen82.line1, "お支払い金額を確認し");
  expect(test.screen82.line2, "QRコードを読み込んでください");
  expect(test.screen82.line3, "");
  expect(test.screen82.line4, "");
  expect(test.screen82.line1_ex, "");
  expect(test.screen82.line2_ex, "");
  expect(test.screen82.line3_ex, "");
  expect(test.screen82.line4_ex, "");
  expect(test.screen82.sound_led1, 6272);
  expect(test.screen82.sound_led2, 6272);
  expect(test.screen82.sound_led3, 0);
  expect(test.screen83.title, "WeChatPay読取画面");
  expect(test.screen83.msg1, "");
  expect(test.screen83.msg2, "");
  expect(test.screen83.msg1_size, 24);
  expect(test.screen83.msg2_size, 0);
  expect(test.screen83.sound1, 0);
  expect(test.screen83.sound2, 0);
  expect(test.screen83.sound3, 0);
  expect(test.screen83.snd_timer, 20);
  expect(test.screen83.timer1, 0);
  expect(test.screen83.timer2, 0);
  expect(test.screen83.timer3, 0);
  expect(test.screen83.dsp_flg1, 0);
  expect(test.screen83.dsp_flg2, 0);
  expect(test.screen83.movie01_ext, 0);
  expect(test.screen83.movie02_ext, 0);
  expect(test.screen83.movie03_ext, 0);
  expect(test.screen83.movie04_ext, 0);
  expect(test.screen83.line_title, "WeChatPayでお支払い");
  expect(test.screen83.line_title_ex, "");
  expect(test.screen83.line1, "お支払い金額を確認し");
  expect(test.screen83.line2, "バーコードを読ませてください");
  expect(test.screen83.line3, "");
  expect(test.screen83.line4, "");
  expect(test.screen83.line1_ex, "");
  expect(test.screen83.line2_ex, "");
  expect(test.screen83.line3_ex, "");
  expect(test.screen83.line4_ex, "");
  expect(test.screen83.sound_led1, 6273);
  expect(test.screen83.sound_led2, 6273);
  expect(test.screen83.sound_led3, 0);
  expect(test.screen84.title, "JPQR PAY 読取画面");
  expect(test.screen84.msg1, "");
  expect(test.screen84.msg2, "");
  expect(test.screen84.msg1_size, 24);
  expect(test.screen84.msg2_size, 0);
  expect(test.screen84.sound1, 0);
  expect(test.screen84.sound2, 0);
  expect(test.screen84.sound3, 0);
  expect(test.screen84.snd_timer, 20);
  expect(test.screen84.timer1, 0);
  expect(test.screen84.timer2, 0);
  expect(test.screen84.timer3, 0);
  expect(test.screen84.dsp_flg1, 0);
  expect(test.screen84.dsp_flg2, 0);
  expect(test.screen84.movie01_ext, 0);
  expect(test.screen84.movie02_ext, 0);
  expect(test.screen84.movie03_ext, 0);
  expect(test.screen84.movie04_ext, 0);
  expect(test.screen84.line_title, "JPQRでお支払い");
  expect(test.screen84.line_title_ex, "");
  expect(test.screen84.line1, "お支払い金額を確認し");
  expect(test.screen84.line2, "バーコードを読ませてください");
  expect(test.screen84.line3, "");
  expect(test.screen84.line4, "");
  expect(test.screen84.line1_ex, "");
  expect(test.screen84.line2_ex, "");
  expect(test.screen84.line3_ex, "");
  expect(test.screen84.line4_ex, "");
  expect(test.screen84.sound_led1, 6273);
  expect(test.screen84.sound_led2, 6273);
  expect(test.screen84.sound_led3, 0);
  expect(test.screen85.title, "コード決済 読取画面");
  expect(test.screen85.msg1, "");
  expect(test.screen85.msg2, "");
  expect(test.screen85.msg1_size, 24);
  expect(test.screen85.msg2_size, 0);
  expect(test.screen85.sound1, 0);
  expect(test.screen85.sound2, 0);
  expect(test.screen85.sound3, 0);
  expect(test.screen85.snd_timer, 20);
  expect(test.screen85.timer1, 0);
  expect(test.screen85.timer2, 0);
  expect(test.screen85.timer3, 0);
  expect(test.screen85.dsp_flg1, 0);
  expect(test.screen85.dsp_flg2, 0);
  expect(test.screen85.movie01_ext, 0);
  expect(test.screen85.movie02_ext, 0);
  expect(test.screen85.movie03_ext, 0);
  expect(test.screen85.movie04_ext, 0);
  expect(test.screen85.line_title, "コード決済でお支払い");
  expect(test.screen85.line_title_ex, "");
  expect(test.screen85.line1, "お支払い金額を確認し");
  expect(test.screen85.line2, "バーコードを読ませてください");
  expect(test.screen85.line3, "");
  expect(test.screen85.line4, "");
  expect(test.screen85.line1_ex, "");
  expect(test.screen85.line2_ex, "");
  expect(test.screen85.line3_ex, "");
  expect(test.screen85.line4_ex, "");
  expect(test.screen85.sound_led1, 6273);
  expect(test.screen85.sound_led2, 6273);
  expect(test.screen85.sound_led3, 0);
  expect(test.screen86.title, "イートインアイテム画面");
  expect(test.screen86.msg1, "店内でご飲食される商品はありますか？");
  expect(test.screen86.msg2, "");
  expect(test.screen86.msg1_size, 24);
  expect(test.screen86.msg2_size, 0);
  expect(test.screen86.sound1, 0);
  expect(test.screen86.sound2, 0);
  expect(test.screen86.sound3, 0);
  expect(test.screen86.snd_timer, 10);
  expect(test.screen86.timer1, 0);
  expect(test.screen86.timer2, 0);
  expect(test.screen86.timer3, 0);
  expect(test.screen86.dsp_flg1, 0);
  expect(test.screen86.dsp_flg2, 0);
  expect(test.screen86.movie01_ext, 0);
  expect(test.screen86.movie02_ext, 0);
  expect(test.screen86.movie03_ext, 0);
  expect(test.screen86.movie04_ext, 0);
  expect(test.screen86.line_title, "");
  expect(test.screen86.line_title_ex, "");
  expect(test.screen86.line1, "");
  expect(test.screen86.line2, "");
  expect(test.screen86.line3, "");
  expect(test.screen86.line4, "");
  expect(test.screen86.line1_ex, "");
  expect(test.screen86.line2_ex, "");
  expect(test.screen86.line3_ex, "");
  expect(test.screen86.line4_ex, "");
  expect(test.screen86.sound_led1, 6715);
  expect(test.screen86.sound_led2, 0);
  expect(test.screen86.sound_led3, 0);
  expect(test.screen87.title, "ﾌﾟﾘﾍﾟｲﾄﾞｶｰﾄﾞ読取画面<IC>");
  expect(test.screen87.msg1, "");
  expect(test.screen87.msg2, "");
  expect(test.screen87.msg1_size, 20);
  expect(test.screen87.msg2_size, 0);
  expect(test.screen87.sound1, 0);
  expect(test.screen87.sound2, 0);
  expect(test.screen87.sound3, 0);
  expect(test.screen87.snd_timer, 20);
  expect(test.screen87.timer1, 0);
  expect(test.screen87.timer2, 0);
  expect(test.screen87.timer3, 0);
  expect(test.screen87.dsp_flg1, 0);
  expect(test.screen87.dsp_flg2, 0);
  expect(test.screen87.movie01_ext, 0);
  expect(test.screen87.movie02_ext, 0);
  expect(test.screen87.movie03_ext, 0);
  expect(test.screen87.movie04_ext, 0);
  expect(test.screen87.line_title, "CoGCaでお支払い");
  expect(test.screen87.line_title_ex, "");
  expect(test.screen87.line1, "CoGCaカードを");
  expect(test.screen87.line2, "タッチしてください");
  expect(test.screen87.line3, "");
  expect(test.screen87.line4, "");
  expect(test.screen87.line1_ex, "");
  expect(test.screen87.line2_ex, "");
  expect(test.screen87.line3_ex, "");
  expect(test.screen87.line4_ex, "");
  expect(test.screen87.sound_led1, 6283);
  expect(test.screen87.sound_led2, 6283);
  expect(test.screen87.sound_led3, 0);
  expect(test.screen88.title, "ﾌﾟﾘﾍﾟｲﾄﾞ支払画面");
  expect(test.screen88.msg1, "");
  expect(test.screen88.msg2, "");
  expect(test.screen88.msg1_size, 0);
  expect(test.screen88.msg2_size, 0);
  expect(test.screen88.sound1, 6179);
  expect(test.screen88.sound2, 6179);
  expect(test.screen88.sound3, 0);
  expect(test.screen88.snd_timer, 20);
  expect(test.screen88.timer1, 0);
  expect(test.screen88.timer2, 0);
  expect(test.screen88.timer3, 0);
  expect(test.screen88.dsp_flg1, 0);
  expect(test.screen88.dsp_flg2, 0);
  expect(test.screen88.movie01_ext, 0);
  expect(test.screen88.movie02_ext, 0);
  expect(test.screen88.movie03_ext, 0);
  expect(test.screen88.movie04_ext, 0);
  expect(test.screen88.line_title, "");
  expect(test.screen88.line_title_ex, "");
  expect(test.screen88.line1, "よろしければ");
  expect(test.screen88.line2, "おわりボタンを");
  expect(test.screen88.line3, "押してください");
  expect(test.screen88.line4, "");
  expect(test.screen88.line1_ex, "");
  expect(test.screen88.line2_ex, "");
  expect(test.screen88.line3_ex, "");
  expect(test.screen88.line4_ex, "");
  expect(test.screen88.sound_led1, 6179);
  expect(test.screen88.sound_led2, 6179);
  expect(test.screen88.sound_led3, 0);
  expect(test.screen89.title, "ﾌﾟﾘﾍﾟｲﾄﾞ支払完了画面");
  expect(test.screen89.msg1, "レシートをお取りください。");
  expect(test.screen89.msg2, "");
  expect(test.screen89.msg1_size, 0);
  expect(test.screen89.msg2_size, 0);
  expect(test.screen89.sound1, 6133);
  expect(test.screen89.sound2, 6133);
  expect(test.screen89.sound3, 0);
  expect(test.screen89.snd_timer, 0);
  expect(test.screen89.timer1, 5);
  expect(test.screen89.timer2, 10);
  expect(test.screen89.timer3, 0);
  expect(test.screen89.dsp_flg1, 0);
  expect(test.screen89.dsp_flg2, 0);
  expect(test.screen89.movie01_ext, 0);
  expect(test.screen89.movie02_ext, 0);
  expect(test.screen89.movie03_ext, 0);
  expect(test.screen89.movie04_ext, 0);
  expect(test.screen89.line_title, "");
  expect(test.screen89.line_title_ex, "");
  expect(test.screen89.line1, "レシートを");
  expect(test.screen89.line2, "お受け取りください");
  expect(test.screen89.line3, "ありがとう");
  expect(test.screen89.line4, "ございました");
  expect(test.screen89.line1_ex, "");
  expect(test.screen89.line2_ex, "");
  expect(test.screen89.line3_ex, "");
  expect(test.screen89.line4_ex, "");
  expect(test.screen89.sound_led1, 6133);
  expect(test.screen89.sound_led2, 6133);
  expect(test.screen89.sound_led3, 0);
  expect(test.screen90.title, "ﾌﾟﾘﾍﾟｲﾄﾞ置数支払画面");
  expect(test.screen90.msg1, "お支払金額を入力してください");
  expect(test.screen90.msg2, "");
  expect(test.screen90.msg1_size, 24);
  expect(test.screen90.msg2_size, 0);
  expect(test.screen90.sound1, 0);
  expect(test.screen90.sound2, 0);
  expect(test.screen90.sound3, 0);
  expect(test.screen90.snd_timer, 20);
  expect(test.screen90.timer1, 0);
  expect(test.screen90.timer2, 0);
  expect(test.screen90.timer3, 0);
  expect(test.screen90.dsp_flg1, 0);
  expect(test.screen90.dsp_flg2, 0);
  expect(test.screen90.movie01_ext, 0);
  expect(test.screen90.movie02_ext, 0);
  expect(test.screen90.movie03_ext, 0);
  expect(test.screen90.movie04_ext, 0);
  expect(test.screen90.line_title, "");
  expect(test.screen90.line_title_ex, "");
  expect(test.screen90.line1, "");
  expect(test.screen90.line2, "");
  expect(test.screen90.line3, "");
  expect(test.screen90.line4, "");
  expect(test.screen90.line1_ex, "");
  expect(test.screen90.line2_ex, "");
  expect(test.screen90.line3_ex, "");
  expect(test.screen90.line4_ex, "");
  expect(test.screen90.sound_led1, 6285);
  expect(test.screen90.sound_led2, 0);
  expect(test.screen90.sound_led3, 0);
  expect(test.screen91.title, "ﾌﾟﾘﾍﾟｲﾄﾞ残高不足確認画面");
  expect(test.screen91.msg1, "残高が不足しています");
  expect(test.screen91.msg2, "");
  expect(test.screen91.msg1_size, 24);
  expect(test.screen91.msg2_size, 0);
  expect(test.screen91.sound1, 0);
  expect(test.screen91.sound2, 0);
  expect(test.screen91.sound3, 0);
  expect(test.screen91.snd_timer, 20);
  expect(test.screen91.timer1, 0);
  expect(test.screen91.timer2, 0);
  expect(test.screen91.timer3, 0);
  expect(test.screen91.dsp_flg1, 0);
  expect(test.screen91.dsp_flg2, 0);
  expect(test.screen91.movie01_ext, 0);
  expect(test.screen91.movie02_ext, 0);
  expect(test.screen91.movie03_ext, 0);
  expect(test.screen91.movie04_ext, 0);
  expect(test.screen91.line_title, "");
  expect(test.screen91.line_title_ex, "");
  expect(test.screen91.line1, "");
  expect(test.screen91.line2, "");
  expect(test.screen91.line3, "");
  expect(test.screen91.line4, "");
  expect(test.screen91.line1_ex, "");
  expect(test.screen91.line2_ex, "");
  expect(test.screen91.line3_ex, "");
  expect(test.screen91.line4_ex, "");
  expect(test.screen91.sound_led1, 6284);
  expect(test.screen91.sound_led2, 0);
  expect(test.screen91.sound_led3, 0);
  expect(test.screen92.title, "ﾎﾟｲﾝﾄ支払画面");
  expect(test.screen92.msg1, "");
  expect(test.screen92.msg2, "");
  expect(test.screen92.msg1_size, 24);
  expect(test.screen92.msg2_size, 0);
  expect(test.screen92.sound1, 6534);
  expect(test.screen92.sound2, 6534);
  expect(test.screen92.sound3, 0);
  expect(test.screen92.snd_timer, 20);
  expect(test.screen92.timer1, 10);
  expect(test.screen92.timer2, 0);
  expect(test.screen92.timer3, 0);
  expect(test.screen92.dsp_flg1, 0);
  expect(test.screen92.dsp_flg2, 0);
  expect(test.screen92.movie01_ext, 0);
  expect(test.screen92.movie02_ext, 0);
  expect(test.screen92.movie03_ext, 0);
  expect(test.screen92.movie04_ext, 0);
  expect(test.screen92.line_title, "");
  expect(test.screen92.line_title_ex, "");
  expect(test.screen92.line1, "ポイント数を入力して");
  expect(test.screen92.line2, "決定を押してください");
  expect(test.screen92.line3, "訂正する場合はクリア");
  expect(test.screen92.line4, "ボタンを押してください");
  expect(test.screen92.line1_ex, "ポイント利用単位：");
  expect(test.screen92.line2_ex, "");
  expect(test.screen92.line3_ex, "");
  expect(test.screen92.line4_ex, "");
  expect(test.screen92.sound_led1, 6534);
  expect(test.screen92.sound_led2, 6534);
  expect(test.screen92.sound_led3, 0);
  expect(test.screen93.title, "ﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen93.msg1, "");
  expect(test.screen93.msg2, "");
  expect(test.screen93.msg1_size, 0);
  expect(test.screen93.msg2_size, 0);
  expect(test.screen93.sound1, 6016);
  expect(test.screen93.sound2, 0);
  expect(test.screen93.sound3, 0);
  expect(test.screen93.snd_timer, 20);
  expect(test.screen93.timer1, 10);
  expect(test.screen93.timer2, 0);
  expect(test.screen93.timer3, 0);
  expect(test.screen93.dsp_flg1, 0);
  expect(test.screen93.dsp_flg2, 0);
  expect(test.screen93.movie01_ext, 0);
  expect(test.screen93.movie02_ext, 0);
  expect(test.screen93.movie03_ext, 0);
  expect(test.screen93.movie04_ext, 0);
  expect(test.screen93.line_title, "");
  expect(test.screen93.line_title_ex, "");
  expect(test.screen93.line1, "よろしければ");
  expect(test.screen93.line2, "おわりボタンを");
  expect(test.screen93.line3, "押してください");
  expect(test.screen93.line4, "");
  expect(test.screen93.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen93.line2_ex, "button to complete");
  expect(test.screen93.line3_ex, "the payment.");
  expect(test.screen93.line4_ex, "");
  expect(test.screen93.sound_led1, 6179);
  expect(test.screen93.sound_led2, 6217);
  expect(test.screen93.sound_led3, 0);
  expect(test.screen94.title, "ﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen94.msg1, "レシートをお取りください。");
  expect(test.screen94.msg2, "");
  expect(test.screen94.msg1_size, 0);
  expect(test.screen94.msg2_size, 0);
  expect(test.screen94.sound1, 6018);
  expect(test.screen94.sound2, 0);
  expect(test.screen94.sound3, 0);
  expect(test.screen94.snd_timer, 0);
  expect(test.screen94.timer1, 5);
  expect(test.screen94.timer2, 10);
  expect(test.screen94.timer3, 0);
  expect(test.screen94.dsp_flg1, 0);
  expect(test.screen94.dsp_flg2, 0);
  expect(test.screen94.movie01_ext, 0);
  expect(test.screen94.movie02_ext, 0);
  expect(test.screen94.movie03_ext, 0);
  expect(test.screen94.movie04_ext, 0);
  expect(test.screen94.line_title, "");
  expect(test.screen94.line_title_ex, "");
  expect(test.screen94.line1, "レシートを");
  expect(test.screen94.line2, "お受け取りください");
  expect(test.screen94.line3, "ありがとう");
  expect(test.screen94.line4, "ございました");
  expect(test.screen94.line1_ex, "Thank you.");
  expect(test.screen94.line2_ex, "Please take your receipt.");
  expect(test.screen94.line3_ex, "");
  expect(test.screen94.line4_ex, "");
  expect(test.screen94.sound_led1, 6133);
  expect(test.screen94.sound_led2, 0);
  expect(test.screen94.sound_led3, 0);
  expect(test.screen95.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払画面");
  expect(test.screen95.msg1, "");
  expect(test.screen95.msg2, "");
  expect(test.screen95.msg1_size, 24);
  expect(test.screen95.msg2_size, 0);
  expect(test.screen95.sound1, 6534);
  expect(test.screen95.sound2, 6534);
  expect(test.screen95.sound3, 0);
  expect(test.screen95.snd_timer, 20);
  expect(test.screen95.timer1, 10);
  expect(test.screen95.timer2, 0);
  expect(test.screen95.timer3, 0);
  expect(test.screen95.dsp_flg1, 0);
  expect(test.screen95.dsp_flg2, 0);
  expect(test.screen95.movie01_ext, 0);
  expect(test.screen95.movie02_ext, 0);
  expect(test.screen95.movie03_ext, 0);
  expect(test.screen95.movie04_ext, 0);
  expect(test.screen95.line_title, "");
  expect(test.screen95.line_title_ex, "");
  expect(test.screen95.line1, "ポイント数を入力して");
  expect(test.screen95.line2, "決定を押してください");
  expect(test.screen95.line3, "訂正する場合はクリア");
  expect(test.screen95.line4, "ボタンを押してください");
  expect(test.screen95.line1_ex, "");
  expect(test.screen95.line2_ex, "");
  expect(test.screen95.line3_ex, "");
  expect(test.screen95.line4_ex, "");
  expect(test.screen95.sound_led1, 6534);
  expect(test.screen95.sound_led2, 6534);
  expect(test.screen95.sound_led3, 0);
  expect(test.screen96.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen96.msg1, "");
  expect(test.screen96.msg2, "");
  expect(test.screen96.msg1_size, 0);
  expect(test.screen96.msg2_size, 0);
  expect(test.screen96.sound1, 6016);
  expect(test.screen96.sound2, 0);
  expect(test.screen96.sound3, 0);
  expect(test.screen96.snd_timer, 20);
  expect(test.screen96.timer1, 10);
  expect(test.screen96.timer2, 0);
  expect(test.screen96.timer3, 0);
  expect(test.screen96.dsp_flg1, 0);
  expect(test.screen96.dsp_flg2, 0);
  expect(test.screen96.movie01_ext, 0);
  expect(test.screen96.movie02_ext, 0);
  expect(test.screen96.movie03_ext, 0);
  expect(test.screen96.movie04_ext, 0);
  expect(test.screen96.line_title, "");
  expect(test.screen96.line_title_ex, "");
  expect(test.screen96.line1, "よろしければ");
  expect(test.screen96.line2, "おわりボタンを");
  expect(test.screen96.line3, "押してください");
  expect(test.screen96.line4, "");
  expect(test.screen96.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen96.line2_ex, "button to complete");
  expect(test.screen96.line3_ex, "the payment.");
  expect(test.screen96.line4_ex, "");
  expect(test.screen96.sound_led1, 6179);
  expect(test.screen96.sound_led2, 6217);
  expect(test.screen96.sound_led3, 0);
  expect(test.screen97.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen97.msg1, "レシートをお取りください。");
  expect(test.screen97.msg2, "");
  expect(test.screen97.msg1_size, 0);
  expect(test.screen97.msg2_size, 0);
  expect(test.screen97.sound1, 6018);
  expect(test.screen97.sound2, 0);
  expect(test.screen97.sound3, 0);
  expect(test.screen97.snd_timer, 0);
  expect(test.screen97.timer1, 5);
  expect(test.screen97.timer2, 10);
  expect(test.screen97.timer3, 0);
  expect(test.screen97.dsp_flg1, 0);
  expect(test.screen97.dsp_flg2, 0);
  expect(test.screen97.movie01_ext, 0);
  expect(test.screen97.movie02_ext, 0);
  expect(test.screen97.movie03_ext, 0);
  expect(test.screen97.movie04_ext, 0);
  expect(test.screen97.line_title, "");
  expect(test.screen97.line_title_ex, "");
  expect(test.screen97.line1, "レシートを");
  expect(test.screen97.line2, "お受け取りください");
  expect(test.screen97.line3, "ありがとう");
  expect(test.screen97.line4, "ございました");
  expect(test.screen97.line1_ex, "Thank you.");
  expect(test.screen97.line2_ex, "Please take your receipt.");
  expect(test.screen97.line3_ex, "");
  expect(test.screen97.line4_ex, "");
  expect(test.screen97.sound_led1, 6133);
  expect(test.screen97.sound_led2, 0);
  expect(test.screen97.sound_led3, 0);
  expect(test.screen98.title, "社員証決済画面");
  expect(test.screen98.msg1, "");
  expect(test.screen98.msg2, "");
  expect(test.screen98.msg1_size, 0);
  expect(test.screen98.msg2_size, 0);
  expect(test.screen98.sound1, 0);
  expect(test.screen98.sound2, 0);
  expect(test.screen98.sound3, 0);
  expect(test.screen98.snd_timer, 20);
  expect(test.screen98.timer1, 10);
  expect(test.screen98.timer2, 0);
  expect(test.screen98.timer3, 0);
  expect(test.screen98.dsp_flg1, 0);
  expect(test.screen98.dsp_flg2, 0);
  expect(test.screen98.movie01_ext, 0);
  expect(test.screen98.movie02_ext, 0);
  expect(test.screen98.movie03_ext, 0);
  expect(test.screen98.movie04_ext, 0);
  expect(test.screen98.line_title, "");
  expect(test.screen98.line_title_ex, "");
  expect(test.screen98.line1, "よろしければ");
  expect(test.screen98.line2, "おわりボタンを");
  expect(test.screen98.line3, "押してください");
  expect(test.screen98.line4, "");
  expect(test.screen98.line1_ex, "When ready, ");
  expect(test.screen98.line2_ex, "press \"finish\"");
  expect(test.screen98.line3_ex, "to complete payment.");
  expect(test.screen98.line4_ex, "");
  expect(test.screen98.sound_led1, 6179);
  expect(test.screen98.sound_led2, 6217);
  expect(test.screen98.sound_led3, 0);
  expect(test.screen99.title, "社員証決済完了画面");
  expect(test.screen99.msg1, "");
  expect(test.screen99.msg2, "");
  expect(test.screen99.msg1_size, 0);
  expect(test.screen99.msg2_size, 0);
  expect(test.screen99.sound1, 6133);
  expect(test.screen99.sound2, 6133);
  expect(test.screen99.sound3, 0);
  expect(test.screen99.snd_timer, 0);
  expect(test.screen99.timer1, 5);
  expect(test.screen99.timer2, 10);
  expect(test.screen99.timer3, 0);
  expect(test.screen99.dsp_flg1, 0);
  expect(test.screen99.dsp_flg2, 0);
  expect(test.screen99.movie01_ext, 0);
  expect(test.screen99.movie02_ext, 0);
  expect(test.screen99.movie03_ext, 0);
  expect(test.screen99.movie04_ext, 0);
  expect(test.screen99.line_title, "");
  expect(test.screen99.line_title_ex, "");
  expect(test.screen99.line1, "レシートを");
  expect(test.screen99.line2, "お受け取りください");
  expect(test.screen99.line3, "ありがとう");
  expect(test.screen99.line4, "ございました");
  expect(test.screen99.line1_ex, "Thank you.");
  expect(test.screen99.line2_ex, "Please take your receipt.");
  expect(test.screen99.line3_ex, "");
  expect(test.screen99.line4_ex, "");
  expect(test.screen99.sound_led1, 6133);
  expect(test.screen99.sound_led2, 6133);
  expect(test.screen99.sound_led3, 0);
  expect(test.screen100.title, "ﾌﾟﾘｶﾎﾟｲﾝﾄｶｰﾄﾞ読取画面");
  expect(test.screen100.msg1, "");
  expect(test.screen100.msg2, "");
  expect(test.screen100.msg1_size, 20);
  expect(test.screen100.msg2_size, 0);
  expect(test.screen100.sound1, 6258);
  expect(test.screen100.sound2, 6292);
  expect(test.screen100.sound3, 0);
  expect(test.screen100.snd_timer, 20);
  expect(test.screen100.timer1, 0);
  expect(test.screen100.timer2, 0);
  expect(test.screen100.timer3, 0);
  expect(test.screen100.dsp_flg1, 0);
  expect(test.screen100.dsp_flg2, 0);
  expect(test.screen100.movie01_ext, 0);
  expect(test.screen100.movie02_ext, 0);
  expect(test.screen100.movie03_ext, 0);
  expect(test.screen100.movie04_ext, 0);
  expect(test.screen100.line_title, "プリペイドでお支払い");
  expect(test.screen100.line_title_ex, "");
  expect(test.screen100.line1, "プリペイドカードを");
  expect(test.screen100.line2, "読ませてください");
  expect(test.screen100.line3, "");
  expect(test.screen100.line4, "");
  expect(test.screen100.line1_ex, "");
  expect(test.screen100.line2_ex, "");
  expect(test.screen100.line3_ex, "");
  expect(test.screen100.line4_ex, "");
  expect(test.screen100.sound_led1, 6258);
  expect(test.screen100.sound_led2, 6292);
  expect(test.screen100.sound_led3, 0);
  expect(test.screen101.title, "会員読込画面(フルセルフ)");
  expect(test.screen101.msg1, "");
  expect(test.screen101.msg2, "");
  expect(test.screen101.msg1_size, 0);
  expect(test.screen101.msg2_size, 0);
  expect(test.screen101.sound1, 0);
  expect(test.screen101.sound2, 0);
  expect(test.screen101.sound3, 0);
  expect(test.screen101.snd_timer, 0);
  expect(test.screen101.timer1, 0);
  expect(test.screen101.timer2, 0);
  expect(test.screen101.timer3, 0);
  expect(test.screen101.dsp_flg1, 0);
  expect(test.screen101.dsp_flg2, 0);
  expect(test.screen101.movie01_ext, 0);
  expect(test.screen101.movie02_ext, 0);
  expect(test.screen101.movie03_ext, 0);
  expect(test.screen101.movie04_ext, 0);
  expect(test.screen101.line_title, "");
  expect(test.screen101.line_title_ex, "");
  expect(test.screen101.line1, "");
  expect(test.screen101.line2, "");
  expect(test.screen101.line3, "");
  expect(test.screen101.line4, "");
  expect(test.screen101.line1_ex, "");
  expect(test.screen101.line2_ex, "");
  expect(test.screen101.line3_ex, "");
  expect(test.screen101.line4_ex, "");
  expect(test.screen101.sound_led1, 0);
  expect(test.screen101.sound_led2, 0);
  expect(test.screen101.sound_led3, 0);
  expect(test.screen102.title, "アイテムリスト画面(フルセルフ)");
  expect(test.screen102.msg1, "");
  expect(test.screen102.msg2, "");
  expect(test.screen102.msg1_size, 0);
  expect(test.screen102.msg2_size, 0);
  expect(test.screen102.sound1, 0);
  expect(test.screen102.sound2, 0);
  expect(test.screen102.sound3, 0);
  expect(test.screen102.snd_timer, 0);
  expect(test.screen102.timer1, 0);
  expect(test.screen102.timer2, 0);
  expect(test.screen102.timer3, 0);
  expect(test.screen102.dsp_flg1, 0);
  expect(test.screen102.dsp_flg2, 0);
  expect(test.screen102.movie01_ext, 0);
  expect(test.screen102.movie02_ext, 0);
  expect(test.screen102.movie03_ext, 0);
  expect(test.screen102.movie04_ext, 0);
  expect(test.screen102.line_title, "");
  expect(test.screen102.line_title_ex, "");
  expect(test.screen102.line1, "");
  expect(test.screen102.line2, "");
  expect(test.screen102.line3, "");
  expect(test.screen102.line4, "");
  expect(test.screen102.line1_ex, "");
  expect(test.screen102.line2_ex, "");
  expect(test.screen102.line3_ex, "");
  expect(test.screen102.line4_ex, "");
  expect(test.screen102.sound_led1, 0);
  expect(test.screen102.sound_led2, 0);
  expect(test.screen102.sound_led3, 0);
  expect(test.screen103.title, "カード選択画面");
  expect(test.screen103.msg1, "ポイントカードの種類を選択して下さい");
  expect(test.screen103.msg2, "");
  expect(test.screen103.msg1_size, 24);
  expect(test.screen103.msg2_size, 0);
  expect(test.screen103.sound1, 6270);
  expect(test.screen103.sound2, 0);
  expect(test.screen103.sound3, 0);
  expect(test.screen103.snd_timer, 10);
  expect(test.screen103.timer1, 0);
  expect(test.screen103.timer2, 0);
  expect(test.screen103.timer3, 0);
  expect(test.screen103.dsp_flg1, 0);
  expect(test.screen103.dsp_flg2, 0);
  expect(test.screen103.movie01_ext, 0);
  expect(test.screen103.movie02_ext, 0);
  expect(test.screen103.movie03_ext, 0);
  expect(test.screen103.movie04_ext, 0);
  expect(test.screen103.line_title, "");
  expect(test.screen103.line_title_ex, "");
  expect(test.screen103.line1, "");
  expect(test.screen103.line2, "");
  expect(test.screen103.line3, "");
  expect(test.screen103.line4, "");
  expect(test.screen103.line1_ex, "");
  expect(test.screen103.line2_ex, "");
  expect(test.screen103.line3_ex, "");
  expect(test.screen103.line4_ex, "");
  expect(test.screen103.sound_led1, 6281);
  expect(test.screen103.sound_led2, 0);
  expect(test.screen103.sound_led3, 0);
  expect(test.screen104.title, "カード読込画面");
  expect(test.screen104.msg1, "カードを読ませてください");
  expect(test.screen104.msg2, "");
  expect(test.screen104.msg1_size, 24);
  expect(test.screen104.msg2_size, 0);
  expect(test.screen104.sound1, 6270);
  expect(test.screen104.sound2, 0);
  expect(test.screen104.sound3, 0);
  expect(test.screen104.snd_timer, 10);
  expect(test.screen104.timer1, 0);
  expect(test.screen104.timer2, 0);
  expect(test.screen104.timer3, 0);
  expect(test.screen104.dsp_flg1, 0);
  expect(test.screen104.dsp_flg2, 0);
  expect(test.screen104.movie01_ext, 0);
  expect(test.screen104.movie02_ext, 0);
  expect(test.screen104.movie03_ext, 0);
  expect(test.screen104.movie04_ext, 0);
  expect(test.screen104.line_title, "");
  expect(test.screen104.line_title_ex, "");
  expect(test.screen104.line1, "CoGCaカードを");
  expect(test.screen104.line2, "タッチしてください");
  expect(test.screen104.line3, "");
  expect(test.screen104.line4, "");
  expect(test.screen104.line1_ex, "");
  expect(test.screen104.line2_ex, "");
  expect(test.screen104.line3_ex, "");
  expect(test.screen104.line4_ex, "");
  expect(test.screen104.sound_led1, 6283);
  expect(test.screen104.sound_led2, 0);
  expect(test.screen104.sound_led3, 0);
  expect(test.screen105.title, "カード読込画面");
  expect(test.screen105.msg1, "カードを読ませてください");
  expect(test.screen105.msg2, "");
  expect(test.screen105.msg1_size, 24);
  expect(test.screen105.msg2_size, 0);
  expect(test.screen105.sound1, 6270);
  expect(test.screen105.sound2, 0);
  expect(test.screen105.sound3, 0);
  expect(test.screen105.snd_timer, 10);
  expect(test.screen105.timer1, 0);
  expect(test.screen105.timer2, 0);
  expect(test.screen105.timer3, 0);
  expect(test.screen105.dsp_flg1, 0);
  expect(test.screen105.dsp_flg2, 0);
  expect(test.screen105.movie01_ext, 0);
  expect(test.screen105.movie02_ext, 0);
  expect(test.screen105.movie03_ext, 0);
  expect(test.screen105.movie04_ext, 0);
  expect(test.screen105.line_title, "");
  expect(test.screen105.line_title_ex, "");
  expect(test.screen105.line1, "カードを端末に");
  expect(test.screen105.line2, "通してください");
  expect(test.screen105.line3, "");
  expect(test.screen105.line4, "");
  expect(test.screen105.line1_ex, "");
  expect(test.screen105.line2_ex, "");
  expect(test.screen105.line3_ex, "");
  expect(test.screen105.line4_ex, "");
  expect(test.screen105.sound_led1, 6282);
  expect(test.screen105.sound_led2, 0);
  expect(test.screen105.sound_led3, 0);
  expect(test.screen106.title, "カード読込画面");
  expect(test.screen106.msg1, "カードを読ませてください");
  expect(test.screen106.msg2, "");
  expect(test.screen106.msg1_size, 24);
  expect(test.screen106.msg2_size, 0);
  expect(test.screen106.sound1, 6270);
  expect(test.screen106.sound2, 0);
  expect(test.screen106.sound3, 0);
  expect(test.screen106.snd_timer, 10);
  expect(test.screen106.timer1, 0);
  expect(test.screen106.timer2, 0);
  expect(test.screen106.timer3, 0);
  expect(test.screen106.dsp_flg1, 0);
  expect(test.screen106.dsp_flg2, 0);
  expect(test.screen106.movie01_ext, 0);
  expect(test.screen106.movie02_ext, 0);
  expect(test.screen106.movie03_ext, 0);
  expect(test.screen106.movie04_ext, 0);
  expect(test.screen106.line_title, "");
  expect(test.screen106.line_title_ex, "");
  expect(test.screen106.line1, "CoGCaカードを");
  expect(test.screen106.line2, "タッチしてください");
  expect(test.screen106.line3, "");
  expect(test.screen106.line4, "");
  expect(test.screen106.line1_ex, "");
  expect(test.screen106.line2_ex, "");
  expect(test.screen106.line3_ex, "");
  expect(test.screen106.line4_ex, "");
  expect(test.screen106.sound_led1, 6283);
  expect(test.screen106.sound_led2, 0);
  expect(test.screen106.sound_led3, 0);
  expect(test.screen107.title, "カード読込画面");
  expect(test.screen107.msg1, "カードを読ませてください");
  expect(test.screen107.msg2, "");
  expect(test.screen107.msg1_size, 24);
  expect(test.screen107.msg2_size, 0);
  expect(test.screen107.sound1, 6270);
  expect(test.screen107.sound2, 0);
  expect(test.screen107.sound3, 0);
  expect(test.screen107.snd_timer, 10);
  expect(test.screen107.timer1, 0);
  expect(test.screen107.timer2, 0);
  expect(test.screen107.timer3, 0);
  expect(test.screen107.dsp_flg1, 0);
  expect(test.screen107.dsp_flg2, 0);
  expect(test.screen107.movie01_ext, 0);
  expect(test.screen107.movie02_ext, 0);
  expect(test.screen107.movie03_ext, 0);
  expect(test.screen107.movie04_ext, 0);
  expect(test.screen107.line_title, "");
  expect(test.screen107.line_title_ex, "");
  expect(test.screen107.line1, "CoGCaカードを");
  expect(test.screen107.line2, "タッチしてください");
  expect(test.screen107.line3, "");
  expect(test.screen107.line4, "");
  expect(test.screen107.line1_ex, "");
  expect(test.screen107.line2_ex, "");
  expect(test.screen107.line3_ex, "");
  expect(test.screen107.line4_ex, "");
  expect(test.screen107.sound_led1, 6283);
  expect(test.screen107.sound_led2, 0);
  expect(test.screen107.sound_led3, 0);
  expect(test.screen109.title, "プリカチャージ入金画面");
  expect(test.screen109.msg1, "");
  expect(test.screen109.msg2, "");
  expect(test.screen109.msg1_size, 0);
  expect(test.screen109.msg2_size, 0);
  expect(test.screen109.sound1, 0);
  expect(test.screen109.sound2, 0);
  expect(test.screen109.sound3, 0);
  expect(test.screen109.snd_timer, 0);
  expect(test.screen109.timer1, 0);
  expect(test.screen109.timer2, 0);
  expect(test.screen109.timer3, 0);
  expect(test.screen109.dsp_flg1, 0);
  expect(test.screen109.dsp_flg2, 0);
  expect(test.screen109.movie01_ext, 0);
  expect(test.screen109.movie02_ext, 0);
  expect(test.screen109.movie03_ext, 0);
  expect(test.screen109.movie04_ext, 0);
  expect(test.screen109.line_title, "プリカチャージ");
  expect(test.screen109.line_title_ex, "");
  expect(test.screen109.line1, "お金を");
  expect(test.screen109.line2, "入れてください");
  expect(test.screen109.line3, "");
  expect(test.screen109.line4, "");
  expect(test.screen109.line1_ex, "");
  expect(test.screen109.line2_ex, "");
  expect(test.screen109.line3_ex, "");
  expect(test.screen109.line4_ex, "");
  expect(test.screen109.sound_led1, 6180);
  expect(test.screen109.sound_led2, 6130);
  expect(test.screen109.sound_led3, 6015);
  expect(test.screen111.title, "プリカ利用画面");
  expect(test.screen111.msg1, "プリペイドカードでお会計ですね");
  expect(test.screen111.msg2, "");
  expect(test.screen111.msg1_size, 0);
  expect(test.screen111.msg2_size, 0);
  expect(test.screen111.sound1, 0);
  expect(test.screen111.sound2, 0);
  expect(test.screen111.sound3, 0);
  expect(test.screen111.snd_timer, 20);
  expect(test.screen111.timer1, 0);
  expect(test.screen111.timer2, 0);
  expect(test.screen111.timer3, 0);
  expect(test.screen111.dsp_flg1, 0);
  expect(test.screen111.dsp_flg2, 0);
  expect(test.screen111.movie01_ext, 0);
  expect(test.screen111.movie02_ext, 0);
  expect(test.screen111.movie03_ext, 0);
  expect(test.screen111.movie04_ext, 0);
  expect(test.screen111.line_title, "プリカでお支払い");
  expect(test.screen111.line_title_ex, "Prepaid Card Payment");
  expect(test.screen111.line1, "お支払い金額を確認し");
  expect(test.screen111.line2, "カードを読ませてください");
  expect(test.screen111.line3, "");
  expect(test.screen111.line4, "");
  expect(test.screen111.line1_ex, "Please swipe");
  expect(test.screen111.line2_ex, "your prepaid card.");
  expect(test.screen111.line3_ex, "");
  expect(test.screen111.line4_ex, "");
  expect(test.screen111.sound_led1, 0);
  expect(test.screen111.sound_led2, 0);
  expect(test.screen111.sound_led3, 0);
  expect(test.screen112.title, "釣銭チャージ");
  expect(test.screen112.msg1, "");
  expect(test.screen112.msg2, "");
  expect(test.screen112.msg1_size, 0);
  expect(test.screen112.msg2_size, 0);
  expect(test.screen112.sound1, 0);
  expect(test.screen112.sound2, 0);
  expect(test.screen112.sound3, 0);
  expect(test.screen112.snd_timer, 0);
  expect(test.screen112.timer1, 0);
  expect(test.screen112.timer2, 0);
  expect(test.screen112.timer3, 0);
  expect(test.screen112.dsp_flg1, 0);
  expect(test.screen112.dsp_flg2, 0);
  expect(test.screen112.movie01_ext, 0);
  expect(test.screen112.movie02_ext, 0);
  expect(test.screen112.movie03_ext, 0);
  expect(test.screen112.movie04_ext, 0);
  expect(test.screen112.line_title, "釣銭チャージ中");
  expect(test.screen112.line_title_ex, "");
  expect(test.screen112.line1, "釣銭チャージ中です。");
  expect(test.screen112.line2, "しばらくお待ちください。");
  expect(test.screen112.line3, "");
  expect(test.screen112.line4, "");
  expect(test.screen112.line1_ex, "");
  expect(test.screen112.line2_ex, "");
  expect(test.screen112.line3_ex, "");
  expect(test.screen112.line4_ex, "");
  expect(test.screen112.sound_led1, 0);
  expect(test.screen112.sound_led2, 0);
  expect(test.screen112.sound_led3, 0);
  expect(test.screen113.title, "プリカ残高照会読取画面");
  expect(test.screen113.msg1, "カードを読ませてください");
  expect(test.screen113.msg2, "");
  expect(test.screen113.msg1_size, 0);
  expect(test.screen113.msg2_size, 0);
  expect(test.screen113.sound1, 6289);
  expect(test.screen113.sound2, 0);
  expect(test.screen113.sound3, 0);
  expect(test.screen113.snd_timer, 10);
  expect(test.screen113.timer1, 0);
  expect(test.screen113.timer2, 0);
  expect(test.screen113.timer3, 0);
  expect(test.screen113.dsp_flg1, 0);
  expect(test.screen113.dsp_flg2, 0);
  expect(test.screen113.movie01_ext, 0);
  expect(test.screen113.movie02_ext, 0);
  expect(test.screen113.movie03_ext, 0);
  expect(test.screen113.movie04_ext, 0);
  expect(test.screen113.line_title, "");
  expect(test.screen113.line_title_ex, "");
  expect(test.screen113.line1, "");
  expect(test.screen113.line2, "");
  expect(test.screen113.line3, "");
  expect(test.screen113.line4, "");
  expect(test.screen113.line1_ex, "");
  expect(test.screen113.line2_ex, "");
  expect(test.screen113.line3_ex, "");
  expect(test.screen113.line4_ex, "");
  expect(test.screen113.sound_led1, 6289);
  expect(test.screen113.sound_led2, 0);
  expect(test.screen113.sound_led3, 0);
  expect(test.screen114.title, "プリカ残高照会完了画面");
  expect(test.screen114.msg1, "確認が終わりましたら、とじるボタンをおしてください");
  expect(test.screen114.msg2, "");
  expect(test.screen114.msg1_size, 0);
  expect(test.screen114.msg2_size, 0);
  expect(test.screen114.sound1, 6578);
  expect(test.screen114.sound2, 0);
  expect(test.screen114.sound3, 0);
  expect(test.screen114.snd_timer, 20);
  expect(test.screen114.timer1, 0);
  expect(test.screen114.timer2, 0);
  expect(test.screen114.timer3, 0);
  expect(test.screen114.dsp_flg1, 0);
  expect(test.screen114.dsp_flg2, 0);
  expect(test.screen114.movie01_ext, 0);
  expect(test.screen114.movie02_ext, 0);
  expect(test.screen114.movie03_ext, 0);
  expect(test.screen114.movie04_ext, 0);
  expect(test.screen114.line_title, "");
  expect(test.screen114.line_title_ex, "");
  expect(test.screen114.line1, "");
  expect(test.screen114.line2, "");
  expect(test.screen114.line3, "");
  expect(test.screen114.line4, "");
  expect(test.screen114.line1_ex, "");
  expect(test.screen114.line2_ex, "");
  expect(test.screen114.line3_ex, "");
  expect(test.screen114.line4_ex, "");
  expect(test.screen114.sound_led1, 6578);
  expect(test.screen114.sound_led2, 0);
  expect(test.screen114.sound_led3, 0);
  expect(test.screen115.title, "ﾎﾟｲﾝﾄ支払確認画面");
  expect(test.screen115.msg1, "");
  expect(test.screen115.msg2, "");
  expect(test.screen115.msg1_size, 0);
  expect(test.screen115.msg2_size, 0);
  expect(test.screen115.sound1, 6016);
  expect(test.screen115.sound2, 0);
  expect(test.screen115.sound3, 0);
  expect(test.screen115.snd_timer, 20);
  expect(test.screen115.timer1, 10);
  expect(test.screen115.timer2, 0);
  expect(test.screen115.timer3, 0);
  expect(test.screen115.dsp_flg1, 0);
  expect(test.screen115.dsp_flg2, 0);
  expect(test.screen115.movie01_ext, 0);
  expect(test.screen115.movie02_ext, 0);
  expect(test.screen115.movie03_ext, 0);
  expect(test.screen115.movie04_ext, 0);
  expect(test.screen115.line_title, "");
  expect(test.screen115.line_title_ex, "");
  expect(test.screen115.line1, "よろしければ");
  expect(test.screen115.line2, "おわりボタンを");
  expect(test.screen115.line3, "押してください");
  expect(test.screen115.line4, "");
  expect(test.screen115.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen115.line2_ex, "button to complete");
  expect(test.screen115.line3_ex, "the payment.");
  expect(test.screen115.line4_ex, "");
  expect(test.screen115.sound_led1, 6179);
  expect(test.screen115.sound_led2, 6217);
  expect(test.screen115.sound_led3, 0);
  expect(test.screen116.title, "ﾎﾟｲﾝﾄ支払完了画面");
  expect(test.screen116.msg1, "レシートをお取りください。");
  expect(test.screen116.msg2, "");
  expect(test.screen116.msg1_size, 0);
  expect(test.screen116.msg2_size, 0);
  expect(test.screen116.sound1, 6018);
  expect(test.screen116.sound2, 0);
  expect(test.screen116.sound3, 0);
  expect(test.screen116.snd_timer, 0);
  expect(test.screen116.timer1, 5);
  expect(test.screen116.timer2, 10);
  expect(test.screen116.timer3, 0);
  expect(test.screen116.dsp_flg1, 0);
  expect(test.screen116.dsp_flg2, 0);
  expect(test.screen116.movie01_ext, 0);
  expect(test.screen116.movie02_ext, 0);
  expect(test.screen116.movie03_ext, 0);
  expect(test.screen116.movie04_ext, 0);
  expect(test.screen116.line_title, "");
  expect(test.screen116.line_title_ex, "");
  expect(test.screen116.line1, "レシートを");
  expect(test.screen116.line2, "お受け取りください");
  expect(test.screen116.line3, "ありがとう");
  expect(test.screen116.line4, "ございました");
  expect(test.screen116.line1_ex, "Thank you.");
  expect(test.screen116.line2_ex, "Please take your receipt.");
  expect(test.screen116.line3_ex, "");
  expect(test.screen116.line4_ex, "");
  expect(test.screen116.sound_led1, 6133);
  expect(test.screen116.sound_led2, 0);
  expect(test.screen116.sound_led3, 0);
  expect(test.screen117.title, "ﾎﾟｲﾝﾄ支払画面");
  expect(test.screen117.msg1, "");
  expect(test.screen117.msg2, "");
  expect(test.screen117.msg1_size, 24);
  expect(test.screen117.msg2_size, 0);
  expect(test.screen117.sound1, 6534);
  expect(test.screen117.sound2, 6534);
  expect(test.screen117.sound3, 0);
  expect(test.screen117.snd_timer, 20);
  expect(test.screen117.timer1, 10);
  expect(test.screen117.timer2, 0);
  expect(test.screen117.timer3, 0);
  expect(test.screen117.dsp_flg1, 0);
  expect(test.screen117.dsp_flg2, 0);
  expect(test.screen117.movie01_ext, 0);
  expect(test.screen117.movie02_ext, 0);
  expect(test.screen117.movie03_ext, 0);
  expect(test.screen117.movie04_ext, 0);
  expect(test.screen117.line_title, "");
  expect(test.screen117.line_title_ex, "");
  expect(test.screen117.line1, "ポイント数を入力して");
  expect(test.screen117.line2, "決定を押してください");
  expect(test.screen117.line3, "訂正する場合はクリア");
  expect(test.screen117.line4, "ボタンを押してください");
  expect(test.screen117.line1_ex, "ポイント利用単位：");
  expect(test.screen117.line2_ex, "");
  expect(test.screen117.line3_ex, "");
  expect(test.screen117.line4_ex, "");
  expect(test.screen117.sound_led1, 6534);
  expect(test.screen117.sound_led2, 6534);
  expect(test.screen117.sound_led3, 0);
  expect(test.screen118.title, "暗証番号入力画面");
  expect(test.screen118.msg1, "");
  expect(test.screen118.msg2, "");
  expect(test.screen118.msg1_size, 20);
  expect(test.screen118.msg2_size, 0);
  expect(test.screen118.sound1, 0);
  expect(test.screen118.sound2, 0);
  expect(test.screen118.sound3, 0);
  expect(test.screen118.snd_timer, 10);
  expect(test.screen118.timer1, 0);
  expect(test.screen118.timer2, 0);
  expect(test.screen118.timer3, 0);
  expect(test.screen118.dsp_flg1, 0);
  expect(test.screen118.dsp_flg2, 0);
  expect(test.screen118.movie01_ext, 0);
  expect(test.screen118.movie02_ext, 0);
  expect(test.screen118.movie03_ext, 0);
  expect(test.screen118.movie04_ext, 0);
  expect(test.screen118.line_title, "暗証番号を入力");
  expect(test.screen118.line_title_ex, "");
  expect(test.screen118.line1, "暗証番号を");
  expect(test.screen118.line2, "入力してください");
  expect(test.screen118.line3, "");
  expect(test.screen118.line4, "");
  expect(test.screen118.line1_ex, "Enter the passcode.");
  expect(test.screen118.line2_ex, "");
  expect(test.screen118.line3_ex, "");
  expect(test.screen118.line4_ex, "");
  expect(test.screen118.sound_led1, 6239);
  expect(test.screen118.sound_led2, 6239);
  expect(test.screen118.sound_led3, 0);
  expect(test.screen119.title, "iD利用画面");
  expect(test.screen119.msg1, "iDでお会計ですね");
  expect(test.screen119.msg2, "");
  expect(test.screen119.msg1_size, 0);
  expect(test.screen119.msg2_size, 0);
  expect(test.screen119.sound1, 6124);
  expect(test.screen119.sound2, 6255);
  expect(test.screen119.sound3, 0);
  expect(test.screen119.snd_timer, 20);
  expect(test.screen119.timer1, 0);
  expect(test.screen119.timer2, 0);
  expect(test.screen119.timer3, 0);
  expect(test.screen119.dsp_flg1, 0);
  expect(test.screen119.dsp_flg2, 0);
  expect(test.screen119.movie01_ext, 0);
  expect(test.screen119.movie02_ext, 0);
  expect(test.screen119.movie03_ext, 0);
  expect(test.screen119.movie04_ext, 0);
  expect(test.screen119.line_title, "ｉＤでお支払い");
  expect(test.screen119.line_title_ex, "iD Payment");
  expect(test.screen119.line1, "お支払い金額を確認し");
  expect(test.screen119.line2, "カードをタッチしてください");
  expect(test.screen119.line3, "");
  expect(test.screen119.line4, "");
  expect(test.screen119.line1_ex, "Tap your IC card");
  expect(test.screen119.line2_ex, "on the terminal.");
  expect(test.screen119.line3_ex, "");
  expect(test.screen119.line4_ex, "");
  expect(test.screen119.sound_led1, 6124);
  expect(test.screen119.sound_led2, 6255);
  expect(test.screen119.sound_led3, 0);
  expect(test.screen120.title, "QUICPay利用画面");
  expect(test.screen120.msg1, "QUICPayでお会計ですね");
  expect(test.screen120.msg2, "");
  expect(test.screen120.msg1_size, 0);
  expect(test.screen120.msg2_size, 0);
  expect(test.screen120.sound1, 6124);
  expect(test.screen120.sound2, 6254);
  expect(test.screen120.sound3, 0);
  expect(test.screen120.snd_timer, 20);
  expect(test.screen120.timer1, 0);
  expect(test.screen120.timer2, 0);
  expect(test.screen120.timer3, 0);
  expect(test.screen120.dsp_flg1, 0);
  expect(test.screen120.dsp_flg2, 0);
  expect(test.screen120.movie01_ext, 0);
  expect(test.screen120.movie02_ext, 0);
  expect(test.screen120.movie03_ext, 0);
  expect(test.screen120.movie04_ext, 0);
  expect(test.screen120.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen120.line_title_ex, "QUICPay Payment");
  expect(test.screen120.line1, "お支払い金額を確認し");
  expect(test.screen120.line2, "カードをタッチしてください");
  expect(test.screen120.line3, "");
  expect(test.screen120.line4, "");
  expect(test.screen120.line1_ex, "Tap your IC card");
  expect(test.screen120.line2_ex, "on the terminal.");
  expect(test.screen120.line3_ex, "");
  expect(test.screen120.line4_ex, "");
  expect(test.screen120.sound_led1, 6124);
  expect(test.screen120.sound_led2, 6254);
  expect(test.screen120.sound_led3, 0);
  expect(test.screen121.title, "ID支払完了画面");
  expect(test.screen121.msg1, "レシートをお取りください。");
  expect(test.screen121.msg2, "");
  expect(test.screen121.msg1_size, 0);
  expect(test.screen121.msg2_size, 0);
  expect(test.screen121.sound1, 6133);
  expect(test.screen121.sound2, 0);
  expect(test.screen121.sound3, 0);
  expect(test.screen121.snd_timer, 0);
  expect(test.screen121.timer1, 5);
  expect(test.screen121.timer2, 10);
  expect(test.screen121.timer3, 0);
  expect(test.screen121.dsp_flg1, 0);
  expect(test.screen121.dsp_flg2, 0);
  expect(test.screen121.movie01_ext, 0);
  expect(test.screen121.movie02_ext, 0);
  expect(test.screen121.movie03_ext, 0);
  expect(test.screen121.movie04_ext, 0);
  expect(test.screen121.line_title, "");
  expect(test.screen121.line_title_ex, "");
  expect(test.screen121.line1, "レシートを");
  expect(test.screen121.line2, "お受け取りください");
  expect(test.screen121.line3, "ありがとう");
  expect(test.screen121.line4, "ございました");
  expect(test.screen121.line1_ex, "Thank you.");
  expect(test.screen121.line2_ex, "Please take your receipt.");
  expect(test.screen121.line3_ex, "");
  expect(test.screen121.line4_ex, "");
  expect(test.screen121.sound_led1, 6133);
  expect(test.screen121.sound_led2, 6133);
  expect(test.screen121.sound_led3, 0);
  expect(test.screen122.title, "QUICPay支払完了画面");
  expect(test.screen122.msg1, "レシートをお取りください。");
  expect(test.screen122.msg2, "");
  expect(test.screen122.msg1_size, 0);
  expect(test.screen122.msg2_size, 0);
  expect(test.screen122.sound1, 6133);
  expect(test.screen122.sound2, 0);
  expect(test.screen122.sound3, 0);
  expect(test.screen122.snd_timer, 0);
  expect(test.screen122.timer1, 5);
  expect(test.screen122.timer2, 10);
  expect(test.screen122.timer3, 0);
  expect(test.screen122.dsp_flg1, 0);
  expect(test.screen122.dsp_flg2, 0);
  expect(test.screen122.movie01_ext, 0);
  expect(test.screen122.movie02_ext, 0);
  expect(test.screen122.movie03_ext, 0);
  expect(test.screen122.movie04_ext, 0);
  expect(test.screen122.line_title, "");
  expect(test.screen122.line_title_ex, "");
  expect(test.screen122.line1, "レシートを");
  expect(test.screen122.line2, "お受け取りください");
  expect(test.screen122.line3, "ありがとう");
  expect(test.screen122.line4, "ございました");
  expect(test.screen122.line1_ex, "Thank you.");
  expect(test.screen122.line2_ex, "Please take your receipt.");
  expect(test.screen122.line3_ex, "");
  expect(test.screen122.line4_ex, "");
  expect(test.screen122.sound_led1, 6133);
  expect(test.screen122.sound_led2, 6133);
  expect(test.screen122.sound_led3, 0);
  expect(test.screen123.title, "Verifone支払完了画面");
  expect(test.screen123.msg1, "レシートをお取りください。");
  expect(test.screen123.msg2, "");
  expect(test.screen123.msg1_size, 0);
  expect(test.screen123.msg2_size, 0);
  expect(test.screen123.sound1, 6133);
  expect(test.screen123.sound2, 0);
  expect(test.screen123.sound3, 0);
  expect(test.screen123.snd_timer, 0);
  expect(test.screen123.timer1, 5);
  expect(test.screen123.timer2, 10);
  expect(test.screen123.timer3, 0);
  expect(test.screen123.dsp_flg1, 0);
  expect(test.screen123.dsp_flg2, 0);
  expect(test.screen123.movie01_ext, 0);
  expect(test.screen123.movie02_ext, 0);
  expect(test.screen123.movie03_ext, 0);
  expect(test.screen123.movie04_ext, 0);
  expect(test.screen123.line_title, "");
  expect(test.screen123.line_title_ex, "");
  expect(test.screen123.line1, "レシートを");
  expect(test.screen123.line2, "お受け取りください");
  expect(test.screen123.line3, "ありがとう");
  expect(test.screen123.line4, "ございました");
  expect(test.screen123.line1_ex, "Please take your card");
  expect(test.screen123.line2_ex, "and the receipt.");
  expect(test.screen123.line3_ex, "Thank you.");
  expect(test.screen123.line4_ex, "");
  expect(test.screen123.sound_led1, 6133);
  expect(test.screen123.sound_led2, 0);
  expect(test.screen123.sound_led3, 0);
  expect(test.screen124.title, "Verifone支払確認画面");
  expect(test.screen124.msg1, "");
  expect(test.screen124.msg2, "");
  expect(test.screen124.msg1_size, 0);
  expect(test.screen124.msg2_size, 0);
  expect(test.screen124.sound1, 6179);
  expect(test.screen124.sound2, "");
  expect(test.screen124.sound3, "");
  expect(test.screen124.snd_timer, 20);
  expect(test.screen124.timer1, 0);
  expect(test.screen124.timer2, 0);
  expect(test.screen124.timer3, 0);
  expect(test.screen124.dsp_flg1, 0);
  expect(test.screen124.dsp_flg2, 0);
  expect(test.screen124.movie01_ext, 0);
  expect(test.screen124.movie02_ext, 0);
  expect(test.screen124.movie03_ext, 0);
  expect(test.screen124.movie04_ext, 0);
  expect(test.screen124.line_title, "");
  expect(test.screen124.line_title_ex, "");
  expect(test.screen124.line1, "よろしければ");
  expect(test.screen124.line2, "おわりボタンを");
  expect(test.screen124.line3, "押してください");
  expect(test.screen124.line4, "");
  expect(test.screen124.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen124.line2_ex, "button to complete");
  expect(test.screen124.line3_ex, "the payment.");
  expect(test.screen124.line4_ex, "");
  expect(test.screen124.sound_led1, 6179);
  expect(test.screen124.sound_led2, "");
  expect(test.screen124.sound_led3, "");
  expect(test.screen125.title, "楽天ポイントカード確認画面");
  expect(test.screen125.msg1, "楽天ポイントカードはお持ちですか？");
  expect(test.screen125.msg2, "");
  expect(test.screen125.msg1_size, 44);
  expect(test.screen125.msg2_size, "");
  expect(test.screen125.sound1, 6603);
  expect(test.screen125.sound2, 0);
  expect(test.screen125.sound3, 0);
  expect(test.screen125.snd_timer, 30);
  expect(test.screen125.timer1, 0);
  expect(test.screen125.timer2, 0);
  expect(test.screen125.timer3, 0);
  expect(test.screen125.dsp_flg1, 0);
  expect(test.screen125.dsp_flg2, 0);
  expect(test.screen125.movie01_ext, 0);
  expect(test.screen125.movie02_ext, 0);
  expect(test.screen125.movie03_ext, 0);
  expect(test.screen125.movie04_ext, 0);
  expect(test.screen125.line_title, "");
  expect(test.screen125.line_title_ex, "");
  expect(test.screen125.line1, "");
  expect(test.screen125.line2, "");
  expect(test.screen125.line3, "");
  expect(test.screen125.line4, "");
  expect(test.screen125.line1_ex, "");
  expect(test.screen125.line2_ex, "");
  expect(test.screen125.line3_ex, "");
  expect(test.screen125.line4_ex, "");
  expect(test.screen125.sound_led1, 6603);
  expect(test.screen125.sound_led2, 0);
  expect(test.screen125.sound_led3, 0);
  expect(test.screen126.title, "楽天ポイントカード読込画面");
  expect(test.screen126.msg1, "楽天ポイントカードの登録を行ってください。");
  expect(test.screen126.msg2, "");
  expect(test.screen126.msg1_size, 44);
  expect(test.screen126.msg2_size, "");
  expect(test.screen126.sound1, 6604);
  expect(test.screen126.sound2, 0);
  expect(test.screen126.sound3, 0);
  expect(test.screen126.snd_timer, 30);
  expect(test.screen126.timer1, 0);
  expect(test.screen126.timer2, 0);
  expect(test.screen126.timer3, 0);
  expect(test.screen126.dsp_flg1, 0);
  expect(test.screen126.dsp_flg2, 0);
  expect(test.screen126.movie01_ext, 0);
  expect(test.screen126.movie02_ext, 0);
  expect(test.screen126.movie03_ext, 0);
  expect(test.screen126.movie04_ext, 0);
  expect(test.screen126.line_title, "");
  expect(test.screen126.line_title_ex, "");
  expect(test.screen126.line1, "");
  expect(test.screen126.line2, "");
  expect(test.screen126.line3, "");
  expect(test.screen126.line4, "");
  expect(test.screen126.line1_ex, "");
  expect(test.screen126.line2_ex, "");
  expect(test.screen126.line3_ex, "");
  expect(test.screen126.line4_ex, "");
  expect(test.screen126.sound_led1, 6604);
  expect(test.screen126.sound_led2, 0);
  expect(test.screen126.sound_led3, 0);
  expect(test.screen127.title, "PiTaPa利用画面<verifone>");
  expect(test.screen127.msg1, "PiTaPaでお会計ですね");
  expect(test.screen127.msg2, "");
  expect(test.screen127.msg1_size, 0);
  expect(test.screen127.msg2_size, 0);
  expect(test.screen127.sound1, 6124);
  expect(test.screen127.sound2, 6048);
  expect(test.screen127.sound3, 0);
  expect(test.screen127.snd_timer, 20);
  expect(test.screen127.timer1, 0);
  expect(test.screen127.timer2, 0);
  expect(test.screen127.timer3, 0);
  expect(test.screen127.dsp_flg1, 0);
  expect(test.screen127.dsp_flg2, 0);
  expect(test.screen127.movie01_ext, 0);
  expect(test.screen127.movie02_ext, 0);
  expect(test.screen127.movie03_ext, 0);
  expect(test.screen127.movie04_ext, 0);
  expect(test.screen127.line_title, "ＰｉＴａＰａでお支払い");
  expect(test.screen127.line_title_ex, "PiTaPa Payment");
  expect(test.screen127.line1, "お支払い金額を確認し");
  expect(test.screen127.line2, "カードをタッチしてください");
  expect(test.screen127.line3, "");
  expect(test.screen127.line4, "");
  expect(test.screen127.line1_ex, "Tap your IC card");
  expect(test.screen127.line2_ex, "on the terminal.");
  expect(test.screen127.line3_ex, "");
  expect(test.screen127.line4_ex, "");
  expect(test.screen127.sound_led1, 6124);
  expect(test.screen127.sound_led2, 6048);
  expect(test.screen127.sound_led3, 0);
  expect(test.screen128.title, "カード読込画面");
  expect(test.screen128.msg1, "カードを読ませてください");
  expect(test.screen128.msg2, "");
  expect(test.screen128.msg1_size, 24);
  expect(test.screen128.msg2_size, 0);
  expect(test.screen128.sound1, 6270);
  expect(test.screen128.sound2, 0);
  expect(test.screen128.sound3, 0);
  expect(test.screen128.snd_timer, 10);
  expect(test.screen128.timer1, 0);
  expect(test.screen128.timer2, 0);
  expect(test.screen128.timer3, 0);
  expect(test.screen128.dsp_flg1, 0);
  expect(test.screen128.dsp_flg2, 0);
  expect(test.screen128.movie01_ext, 0);
  expect(test.screen128.movie02_ext, 0);
  expect(test.screen128.movie03_ext, 0);
  expect(test.screen128.movie04_ext, 0);
  expect(test.screen128.line_title, "");
  expect(test.screen128.line_title_ex, "");
  expect(test.screen128.line1, "友の会カードを");
  expect(test.screen128.line2, "読ませてください");
  expect(test.screen128.line3, "");
  expect(test.screen128.line4, "");
  expect(test.screen128.line1_ex, "");
  expect(test.screen128.line2_ex, "");
  expect(test.screen128.line3_ex, "");
  expect(test.screen128.line4_ex, "");
  expect(test.screen128.sound_led1, 6720);
  expect(test.screen128.sound_led2, 0);
  expect(test.screen128.sound_led3, 0);
  expect(test.screen129.title, "友の会でお支払画面");
  expect(test.screen129.msg1, "");
  expect(test.screen129.msg2, "");
  expect(test.screen129.msg1_size, 20);
  expect(test.screen129.msg2_size, 0);
  expect(test.screen129.sound1, 6258);
  expect(test.screen129.sound2, 0);
  expect(test.screen129.sound3, 0);
  expect(test.screen129.snd_timer, 20);
  expect(test.screen129.timer1, 0);
  expect(test.screen129.timer2, 0);
  expect(test.screen129.timer3, 0);
  expect(test.screen129.dsp_flg1, 0);
  expect(test.screen129.dsp_flg2, 0);
  expect(test.screen129.movie01_ext, 0);
  expect(test.screen129.movie02_ext, 0);
  expect(test.screen129.movie03_ext, 0);
  expect(test.screen129.movie04_ext, 0);
  expect(test.screen129.line_title, "友の会でお支払い");
  expect(test.screen129.line_title_ex, "");
  expect(test.screen129.line1, "あああ");
  expect(test.screen129.line2, "いいい");
  expect(test.screen129.line3, "");
  expect(test.screen129.line4, "");
  expect(test.screen129.line1_ex, "");
  expect(test.screen129.line2_ex, "");
  expect(test.screen129.line3_ex, "");
  expect(test.screen129.line4_ex, "");
  expect(test.screen129.sound_led1, 6258);
  expect(test.screen129.sound_led2, 0);
  expect(test.screen129.sound_led3, 0);
  expect(test.screen130.title, "友の会支払確認画面");
  expect(test.screen130.msg1, "");
  expect(test.screen130.msg2, "");
  expect(test.screen130.msg1_size, 0);
  expect(test.screen130.msg2_size, 0);
  expect(test.screen130.sound1, 6179);
  expect(test.screen130.sound2, "");
  expect(test.screen130.sound3, "");
  expect(test.screen130.snd_timer, 20);
  expect(test.screen130.timer1, 0);
  expect(test.screen130.timer2, 0);
  expect(test.screen130.timer3, 0);
  expect(test.screen130.dsp_flg1, 0);
  expect(test.screen130.dsp_flg2, 0);
  expect(test.screen130.movie01_ext, 0);
  expect(test.screen130.movie02_ext, 0);
  expect(test.screen130.movie03_ext, 0);
  expect(test.screen130.movie04_ext, 0);
  expect(test.screen130.line_title, "");
  expect(test.screen130.line_title_ex, "");
  expect(test.screen130.line1, "よろしければ");
  expect(test.screen130.line2, "おわりボタンを");
  expect(test.screen130.line3, "押してください");
  expect(test.screen130.line4, "");
  expect(test.screen130.line1_ex, "Touch the \"Confirm\"");
  expect(test.screen130.line2_ex, "button to complete");
  expect(test.screen130.line3_ex, "the payment.");
  expect(test.screen130.line4_ex, "");
  expect(test.screen130.sound_led1, 6179);
  expect(test.screen130.sound_led2, "");
  expect(test.screen130.sound_led3, "");
  expect(test.screen131.title, "友の会支払完了画面");
  expect(test.screen131.msg1, "レシートをお取りください。");
  expect(test.screen131.msg2, "");
  expect(test.screen131.msg1_size, 0);
  expect(test.screen131.msg2_size, 0);
  expect(test.screen131.sound1, 6133);
  expect(test.screen131.sound2, 0);
  expect(test.screen131.sound3, 0);
  expect(test.screen131.snd_timer, 0);
  expect(test.screen131.timer1, 5);
  expect(test.screen131.timer2, 10);
  expect(test.screen131.timer3, 0);
  expect(test.screen131.dsp_flg1, 0);
  expect(test.screen131.dsp_flg2, 0);
  expect(test.screen131.movie01_ext, 0);
  expect(test.screen131.movie02_ext, 0);
  expect(test.screen131.movie03_ext, 0);
  expect(test.screen131.movie04_ext, 0);
  expect(test.screen131.line_title, "");
  expect(test.screen131.line_title_ex, "");
  expect(test.screen131.line1, "レシートを");
  expect(test.screen131.line2, "お受け取りください");
  expect(test.screen131.line3, "ありがとう");
  expect(test.screen131.line4, "ございました");
  expect(test.screen131.line1_ex, "Please take your card");
  expect(test.screen131.line2_ex, "and the receipt.");
  expect(test.screen131.line3_ex, "Thank you.");
  expect(test.screen131.line4_ex, "");
  expect(test.screen131.sound_led1, 6133);
  expect(test.screen131.sound_led2, 0);
  expect(test.screen131.sound_led3, 0);
  expect(test.screen132.title, "Tクーポン確認画面");
  expect(test.screen132.msg1, "クーポンはお持ちですか？");
  expect(test.screen132.msg2, "");
  expect(test.screen132.msg1_size, 44);
  expect(test.screen132.msg2_size, "");
  expect(test.screen132.sound1, 6552);
  expect(test.screen132.sound2, 0);
  expect(test.screen132.sound3, 0);
  expect(test.screen132.snd_timer, 30);
  expect(test.screen132.timer1, 0);
  expect(test.screen132.timer2, 0);
  expect(test.screen132.timer3, 0);
  expect(test.screen132.dsp_flg1, 0);
  expect(test.screen132.dsp_flg2, 0);
  expect(test.screen132.movie01_ext, 0);
  expect(test.screen132.movie02_ext, 0);
  expect(test.screen132.movie03_ext, 0);
  expect(test.screen132.movie04_ext, 0);
  expect(test.screen132.line_title, "");
  expect(test.screen132.line_title_ex, "");
  expect(test.screen132.line1, "");
  expect(test.screen132.line2, "");
  expect(test.screen132.line3, "");
  expect(test.screen132.line4, "");
  expect(test.screen132.line1_ex, "");
  expect(test.screen132.line2_ex, "");
  expect(test.screen132.line3_ex, "");
  expect(test.screen132.line4_ex, "");
  expect(test.screen132.sound_led1, 6552);
  expect(test.screen132.sound_led2, 0);
  expect(test.screen132.sound_led3, 0);
  expect(test.screen133.title, "Tクーポン読取画面");
  expect(test.screen133.msg1, "クーポンバーコードを");
  expect(test.screen133.msg2, "スキャンしてください");
  expect(test.screen133.msg1_size, 0);
  expect(test.screen133.msg2_size, 0);
  expect(test.screen133.sound1, 6553);
  expect(test.screen133.sound2, 0);
  expect(test.screen133.sound3, 0);
  expect(test.screen133.snd_timer, 20);
  expect(test.screen133.timer1, 0);
  expect(test.screen133.timer2, 0);
  expect(test.screen133.timer3, 0);
  expect(test.screen133.dsp_flg1, 0);
  expect(test.screen133.dsp_flg2, 0);
  expect(test.screen133.movie01_ext, 0);
  expect(test.screen133.movie02_ext, 0);
  expect(test.screen133.movie03_ext, 0);
  expect(test.screen133.movie04_ext, 0);
  expect(test.screen133.line_title, "");
  expect(test.screen133.line_title_ex, "");
  expect(test.screen133.line1, "");
  expect(test.screen133.line2, "");
  expect(test.screen133.line3, "");
  expect(test.screen133.line4, "");
  expect(test.screen133.line1_ex, "");
  expect(test.screen133.line2_ex, "");
  expect(test.screen133.line3_ex, "");
  expect(test.screen133.line4_ex, "");
  expect(test.screen133.sound_led1, 6553);
  expect(test.screen133.sound_led2, 0);
  expect(test.screen133.sound_led3, 0);
  expect(test.screen134.title, "楽天ポイント利用確認画面");
  expect(test.screen134.msg1, "楽天ポイントを利用しますか？");
  expect(test.screen134.msg2, "");
  expect(test.screen134.msg1_size, 44);
  expect(test.screen134.msg2_size, "");
  expect(test.screen134.sound1, 6631);
  expect(test.screen134.sound2, 0);
  expect(test.screen134.sound3, 0);
  expect(test.screen134.snd_timer, 30);
  expect(test.screen134.timer1, 0);
  expect(test.screen134.timer2, 0);
  expect(test.screen134.timer3, 0);
  expect(test.screen134.dsp_flg1, 0);
  expect(test.screen134.dsp_flg2, 0);
  expect(test.screen134.movie01_ext, 0);
  expect(test.screen134.movie02_ext, 0);
  expect(test.screen134.movie03_ext, 0);
  expect(test.screen134.movie04_ext, 0);
  expect(test.screen134.line_title, "");
  expect(test.screen134.line_title_ex, "");
  expect(test.screen134.line1, "");
  expect(test.screen134.line2, "");
  expect(test.screen134.line3, "");
  expect(test.screen134.line4, "");
  expect(test.screen134.line1_ex, "");
  expect(test.screen134.line2_ex, "");
  expect(test.screen134.line3_ex, "");
  expect(test.screen134.line4_ex, "");
  expect(test.screen134.sound_led1, 6631);
  expect(test.screen134.sound_led2, 0);
  expect(test.screen134.sound_led3, 0);
  expect(test.screen135.title, "Edyリトライ画面");
  expect(test.screen135.msg1, "もう一度カードを");
  expect(test.screen135.msg2, "タッチしてください");
  expect(test.screen135.msg1_size, 0);
  expect(test.screen135.msg2_size, 0);
  expect(test.screen135.sound1, 6277);
  expect(test.screen135.sound2, 0);
  expect(test.screen135.sound3, 0);
  expect(test.screen135.snd_timer, 10);
  expect(test.screen135.timer1, 0);
  expect(test.screen135.timer2, 0);
  expect(test.screen135.timer3, 0);
  expect(test.screen135.dsp_flg1, 0);
  expect(test.screen135.dsp_flg2, 0);
  expect(test.screen135.movie01_ext, 0);
  expect(test.screen135.movie02_ext, 0);
  expect(test.screen135.movie03_ext, 0);
  expect(test.screen135.movie04_ext, 0);
  expect(test.screen135.line_title, "Ｅｄｙでお支払い");
  expect(test.screen135.line_title_ex, "");
  expect(test.screen135.line1, "カードの読取が不十分です");
  expect(test.screen135.line2, "もう一度カードを");
  expect(test.screen135.line3, "タッチしてください");
  expect(test.screen135.line4, "");
  expect(test.screen135.line1_ex, "");
  expect(test.screen135.line2_ex, "");
  expect(test.screen135.line3_ex, "");
  expect(test.screen135.line4_ex, "");
  expect(test.screen135.sound_led1, 6277);
  expect(test.screen135.sound_led2, 0);
  expect(test.screen135.sound_led3, 0);
  expect(test.screen136.title, "iDリトライ画面");
  expect(test.screen136.msg1, "もう一度カードを");
  expect(test.screen136.msg2, "タッチしてください");
  expect(test.screen136.msg1_size, 0);
  expect(test.screen136.msg2_size, 0);
  expect(test.screen136.sound1, 6277);
  expect(test.screen136.sound2, 0);
  expect(test.screen136.sound3, 0);
  expect(test.screen136.snd_timer, 10);
  expect(test.screen136.timer1, 0);
  expect(test.screen136.timer2, 0);
  expect(test.screen136.timer3, 0);
  expect(test.screen136.dsp_flg1, 0);
  expect(test.screen136.dsp_flg2, 0);
  expect(test.screen136.movie01_ext, 0);
  expect(test.screen136.movie02_ext, 0);
  expect(test.screen136.movie03_ext, 0);
  expect(test.screen136.movie04_ext, 0);
  expect(test.screen136.line_title, "ｉＤでお支払い");
  expect(test.screen136.line_title_ex, "");
  expect(test.screen136.line1, "カードの読取が不十分です");
  expect(test.screen136.line2, "もう一度カードを");
  expect(test.screen136.line3, "タッチしてください");
  expect(test.screen136.line4, "");
  expect(test.screen136.line1_ex, "");
  expect(test.screen136.line2_ex, "");
  expect(test.screen136.line3_ex, "");
  expect(test.screen136.line4_ex, "");
  expect(test.screen136.sound_led1, 6277);
  expect(test.screen136.sound_led2, 0);
  expect(test.screen136.sound_led3, 0);
  expect(test.screen137.title, "交通系ICリトライ画面");
  expect(test.screen137.msg1, "もう一度カードを");
  expect(test.screen137.msg2, "タッチしてください");
  expect(test.screen137.msg1_size, 0);
  expect(test.screen137.msg2_size, 0);
  expect(test.screen137.sound1, 6277);
  expect(test.screen137.sound2, 0);
  expect(test.screen137.sound3, 0);
  expect(test.screen137.snd_timer, 10);
  expect(test.screen137.timer1, 0);
  expect(test.screen137.timer2, 0);
  expect(test.screen137.timer3, 0);
  expect(test.screen137.dsp_flg1, 0);
  expect(test.screen137.dsp_flg2, 0);
  expect(test.screen137.movie01_ext, 0);
  expect(test.screen137.movie02_ext, 0);
  expect(test.screen137.movie03_ext, 0);
  expect(test.screen137.movie04_ext, 0);
  expect(test.screen137.line_title, "交通系ＩＣでお支払い");
  expect(test.screen137.line_title_ex, "");
  expect(test.screen137.line1, "カードの読取が不十分です");
  expect(test.screen137.line2, "もう一度カードを");
  expect(test.screen137.line3, "タッチしてください");
  expect(test.screen137.line4, "");
  expect(test.screen137.line1_ex, "");
  expect(test.screen137.line2_ex, "");
  expect(test.screen137.line3_ex, "");
  expect(test.screen137.line4_ex, "");
  expect(test.screen137.sound_led1, 6277);
  expect(test.screen137.sound_led2, 0);
  expect(test.screen137.sound_led3, 0);
  expect(test.screen138.title, "QUICPayリトライ画面");
  expect(test.screen138.msg1, "もう一度カードを");
  expect(test.screen138.msg2, "タッチしてください");
  expect(test.screen138.msg1_size, 0);
  expect(test.screen138.msg2_size, 0);
  expect(test.screen138.sound1, 6277);
  expect(test.screen138.sound2, 0);
  expect(test.screen138.sound3, 0);
  expect(test.screen138.snd_timer, 10);
  expect(test.screen138.timer1, 0);
  expect(test.screen138.timer2, 0);
  expect(test.screen138.timer3, 0);
  expect(test.screen138.dsp_flg1, 0);
  expect(test.screen138.dsp_flg2, 0);
  expect(test.screen138.movie01_ext, 0);
  expect(test.screen138.movie02_ext, 0);
  expect(test.screen138.movie03_ext, 0);
  expect(test.screen138.movie04_ext, 0);
  expect(test.screen138.line_title, "ＱＵＩＣＰａｙでお支払い");
  expect(test.screen138.line_title_ex, "");
  expect(test.screen138.line1, "カードの読取が不十分です");
  expect(test.screen138.line2, "もう一度カードを");
  expect(test.screen138.line3, "タッチしてください");
  expect(test.screen138.line4, "");
  expect(test.screen138.line1_ex, "");
  expect(test.screen138.line2_ex, "");
  expect(test.screen138.line3_ex, "");
  expect(test.screen138.line4_ex, "");
  expect(test.screen138.sound_led1, 6277);
  expect(test.screen138.sound_led2, 0);
  expect(test.screen138.sound_led3, 0);
  expect(test.screen139.title, "nanacoリトライ画面");
  expect(test.screen139.msg1, "もう一度カードを");
  expect(test.screen139.msg2, "タッチしてください");
  expect(test.screen139.msg1_size, 0);
  expect(test.screen139.msg2_size, 0);
  expect(test.screen139.sound1, 6277);
  expect(test.screen139.sound2, 0);
  expect(test.screen139.sound3, 0);
  expect(test.screen139.snd_timer, 10);
  expect(test.screen139.timer1, 0);
  expect(test.screen139.timer2, 0);
  expect(test.screen139.timer3, 0);
  expect(test.screen139.dsp_flg1, 0);
  expect(test.screen139.dsp_flg2, 0);
  expect(test.screen139.movie01_ext, 0);
  expect(test.screen139.movie02_ext, 0);
  expect(test.screen139.movie03_ext, 0);
  expect(test.screen139.movie04_ext, 0);
  expect(test.screen139.line_title, "ｎａｎａｃｏでお支払い");
  expect(test.screen139.line_title_ex, "");
  expect(test.screen139.line1, "カードの読取が不十分です");
  expect(test.screen139.line2, "もう一度カードを");
  expect(test.screen139.line3, "タッチしてください");
  expect(test.screen139.line4, "");
  expect(test.screen139.line1_ex, "");
  expect(test.screen139.line2_ex, "");
  expect(test.screen139.line3_ex, "");
  expect(test.screen139.line4_ex, "");
  expect(test.screen139.sound_led1, 6277);
  expect(test.screen139.sound_led2, 0);
  expect(test.screen139.sound_led3, 0);
  expect(test.screen140.title, "PiTaPaリトライ画面");
  expect(test.screen140.msg1, "もう一度カードを");
  expect(test.screen140.msg2, "タッチしてください");
  expect(test.screen140.msg1_size, 0);
  expect(test.screen140.msg2_size, 0);
  expect(test.screen140.sound1, 6277);
  expect(test.screen140.sound2, 0);
  expect(test.screen140.sound3, 0);
  expect(test.screen140.snd_timer, 10);
  expect(test.screen140.timer1, 0);
  expect(test.screen140.timer2, 0);
  expect(test.screen140.timer3, 0);
  expect(test.screen140.dsp_flg1, 0);
  expect(test.screen140.dsp_flg2, 0);
  expect(test.screen140.movie01_ext, 0);
  expect(test.screen140.movie02_ext, 0);
  expect(test.screen140.movie03_ext, 0);
  expect(test.screen140.movie04_ext, 0);
  expect(test.screen140.line_title, "ＰｉＴａＰａでお支払い");
  expect(test.screen140.line_title_ex, "");
  expect(test.screen140.line1, "カードの読取が不十分です");
  expect(test.screen140.line2, "もう一度カードを");
  expect(test.screen140.line3, "タッチしてください");
  expect(test.screen140.line4, "");
  expect(test.screen140.line1_ex, "");
  expect(test.screen140.line2_ex, "");
  expect(test.screen140.line3_ex, "");
  expect(test.screen140.line4_ex, "");
  expect(test.screen140.sound_led1, 6277);
  expect(test.screen140.sound_led2, 0);
  expect(test.screen140.sound_led3, 0);
  expect(test.screen141.title, "WAONリトライ画面");
  expect(test.screen141.msg1, "もう一度カードを");
  expect(test.screen141.msg2, "タッチしてください");
  expect(test.screen141.msg1_size, 0);
  expect(test.screen141.msg2_size, 0);
  expect(test.screen141.sound1, 6277);
  expect(test.screen141.sound2, 0);
  expect(test.screen141.sound3, 0);
  expect(test.screen141.snd_timer, 10);
  expect(test.screen141.timer1, 0);
  expect(test.screen141.timer2, 0);
  expect(test.screen141.timer3, 0);
  expect(test.screen141.dsp_flg1, 0);
  expect(test.screen141.dsp_flg2, 0);
  expect(test.screen141.movie01_ext, 0);
  expect(test.screen141.movie02_ext, 0);
  expect(test.screen141.movie03_ext, 0);
  expect(test.screen141.movie04_ext, 0);
  expect(test.screen141.line_title, "ＷＡＯＮでお支払い");
  expect(test.screen141.line_title_ex, "");
  expect(test.screen141.line1, "カードの読取が不十分です");
  expect(test.screen141.line2, "もう一度カードを");
  expect(test.screen141.line3, "タッチしてください");
  expect(test.screen141.line4, "");
  expect(test.screen141.line1_ex, "");
  expect(test.screen141.line2_ex, "");
  expect(test.screen141.line3_ex, "");
  expect(test.screen141.line4_ex, "");
  expect(test.screen141.sound_led1, 6277);
  expect(test.screen141.sound_led2, 0);
  expect(test.screen141.sound_led3, 0);
  expect(test.screen144.title, "会員解除確認画面");
  expect(test.screen144.msg1, "会員様優待が適用されません。");
  expect(test.screen144.msg2, "よろしいでしょうか？");
  expect(test.screen144.msg1_size, 28);
  expect(test.screen144.msg2_size, 44);
  expect(test.screen144.sound1, 6606);
  expect(test.screen144.sound2, 0);
  expect(test.screen144.sound3, 0);
  expect(test.screen144.snd_timer, 30);
  expect(test.screen144.timer1, 0);
  expect(test.screen144.timer2, 0);
  expect(test.screen144.timer3, 0);
  expect(test.screen144.dsp_flg1, 0);
  expect(test.screen144.dsp_flg2, 0);
  expect(test.screen144.movie01_ext, 0);
  expect(test.screen144.movie02_ext, 0);
  expect(test.screen144.movie03_ext, 0);
  expect(test.screen144.movie04_ext, 0);
  expect(test.screen144.line_title, "");
  expect(test.screen144.line_title_ex, "");
  expect(test.screen144.line1, "");
  expect(test.screen144.line2, "");
  expect(test.screen144.line3, "");
  expect(test.screen144.line4, "");
  expect(test.screen144.line1_ex, "");
  expect(test.screen144.line2_ex, "");
  expect(test.screen144.line3_ex, "");
  expect(test.screen144.line4_ex, "");
  expect(test.screen144.sound_led1, 6606);
  expect(test.screen144.sound_led2, 0);
  expect(test.screen144.sound_led3, 0);
  expect(test.ActSetUp.ReadAlertTime, 60);
  expect(test.ActSetUp.AutoReadInterval, 3);
  expect(test.ActSetUp.InterruptPrint, 0);
  expect(test.ActSetUp.InterruptPay, 0);
  expect(test.ActSetUp.UpdGetFtpTimer, 10);
  expect(test.HiddenSetUp.TableReadInterval, 500);
  expect(test.customer.cust_card_max, 0);
  expect(test.customer.cust_card_type1, 0);
  expect(test.customer.cust_card_type2, 0);
  expect(test.customer.cust_card_type3, 0);
  expect(test.customer.cust_card_type4, 0);
  expect(test.customer.cust_card_type5, 0);
  expect(test.customer.cust_card_type6, 0);
  expect(test.ShopAndGo.shop_and_go_nonfile_plucd, 999999);
  expect(test.ShopAndGo.shop_and_go_nonscan_plucd, 999998);
  expect(test.ShopAndGo.shop_and_go_limit1, 999);
  expect(test.ShopAndGo.shop_and_go_limit2, 499);
  expect(test.ShopAndGo.shop_and_go_limit3, 299);
  expect(test.ShopAndGo.shop_and_go_test_srv_flg, 0);
  expect(test.ShopAndGo.shop_and_go_companycode, 999999998);
  expect(test.ShopAndGo.shop_and_go_storecode, 123456789);
  expect(test.ShopAndGo.shop_and_go_mbr_chk_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_server_timeout, 3);
  expect(test.ShopAndGo.shop_and_go_proxy, "");
  expect(test.ShopAndGo.shop_and_go_proxy_port, 0);
  expect(test.ShopAndGo.shop_and_go_n_money_btn_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_domain, "https://api.digi-cr.com");
  expect(test.ShopAndGo.shop_and_go_mbr_card_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cr50_domain, "");
  expect(test.ShopAndGo.shop_and_go_point_domain, "");
  expect(test.ShopAndGo.shop_and_go_cr50_plucd, 999997);
  expect(test.ShopAndGo.shop_and_go_eatin_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_cogca_read_twice, 0);
  expect(test.ShopAndGo.shop_and_go_use_class, 0);
  expect(test.ShopAndGo.shop_and_go_expensive_mark_prn, 0);
  expect(test.ShopAndGo.shop_and_go_regbag_dsp, 0);
  expect(test.ShopAndGo.shop_and_go_use_preset_grp_code, 0);
  expect(test.ShopAndGo.shop_and_go_mente_nonplu_btn_reference, 1);
  expect(test.ShopAndGo.shop_and_go_mbr_auto_cncl_time, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_ttlnmbr_bold, 0);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print, 0);
  expect(test.ShopAndGo.shop_and_go_rcpt_msg_use_no, 31);
  expect(test.ShopAndGo.shop_and_go_apl_dl_qr_print_normal, 0);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_fs, 6);
  expect(test.ShopAndGo.shop_and_go_qr_print_chk_itmcnt_ss, 16);
  expect(test.ShopAndGo.shop_and_go_thread_timeout, 10);
  expect(test.PaymentGroup.pay_grp_name1, "会計グループ１");
  expect(test.PaymentGroup.pay_grp_name2, "会計グループ２");
  expect(test.PaymentGroup.pay_grp_name3, "会計グループ３");
  expect(test.PaymentGroup.pay_grp_name4, "会計グループ４");
  expect(test.PaymentGroup.pay_grp_name5, "会計グループ５");
  expect(test.PaymentGroup.pay_grp_name6, "会計グループ６");
  expect(test.PaymentGroup.pay_grp_name7, "会計グループ７");
  expect(test.PaymentGroup.pay_grp_name8, "会計グループ８");
  expect(test.PaymentGroup.pay_grp_name9, "会計グループ９");
  expect(test.PaymentGroup.pay_typ1_grp, 0);
  expect(test.PaymentGroup.pay_typ2_grp, 0);
  expect(test.PaymentGroup.pay_typ3_grp, 0);
  expect(test.PaymentGroup.pay_typ4_grp, 0);
  expect(test.PaymentGroup.pay_typ5_grp, 0);
  expect(test.PaymentGroup.pay_typ6_grp, 0);
  expect(test.PaymentGroup.pay_typ7_grp, 0);
  expect(test.PaymentGroup.pay_typ8_grp, 0);
  expect(test.PaymentGroup.pay_typ9_grp, 0);
  expect(test.PaymentGroup.pay_typ10_grp, 0);
  expect(test.PaymentGroup.pay_typ11_grp, 0);
  expect(test.PaymentGroup.pay_typ12_grp, 0);
  expect(test.PaymentGroup.pay_typ13_grp, 0);
  expect(test.PaymentGroup.pay_typ14_grp, 0);
  expect(test.PaymentGroup.pay_typ15_grp, 0);
  expect(test.PaymentGroup.pay_typ16_grp, 0);
  expect(test.PaymentGroup.pay_grp_name1_ex, "Payment Group １");
  expect(test.PaymentGroup.pay_grp_name2_ex, "Payment Group ２");
  expect(test.PaymentGroup.pay_grp_name3_ex, "Payment Group ３");
  expect(test.PaymentGroup.pay_grp_name4_ex, "Payment Group ４");
  expect(test.PaymentGroup.pay_grp_name5_ex, "Payment Group ５");
  expect(test.PaymentGroup.pay_grp_name6_ex, "Payment Group ６");
  expect(test.PaymentGroup.pay_grp_name7_ex, "Payment Group ７");
  expect(test.PaymentGroup.pay_grp_name8_ex, "Payment Group ８");
  expect(test.PaymentGroup.pay_grp_name9_ex, "Payment Group ９");
}

